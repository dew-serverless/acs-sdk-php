<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'RPC',
    'product' => 'Cms',
    'version' => '2019-01-01',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 184857,
      'title' => '应用分组',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 59483,
          'title' => '管理应用分组',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateMonitorGroup',
            1 => 'ModifyMonitorGroup',
            2 => 'DeleteMonitorGroup',
            3 => 'DescribeMonitorGroups',
            4 => 'CreateMonitorGroupInstances',
            5 => 'ModifyMonitorGroupInstances',
            6 => 'DescribeMonitorGroupInstances',
            7 => 'DescribeMonitorGroupDynamicRules',
            8 => 'DescribeMonitorGroupInstanceAttribute',
            9 => 'DeleteMonitorGroupDynamicRule',
            10 => 'DeleteMonitorGroupInstances',
            11 => 'DescribeMonitorGroupCategories',
            12 => 'PutMonitorGroupDynamicRule',
            13 => 'CreateGroupMonitoringAgentProcess',
            14 => 'ModifyGroupMonitoringAgentProcess',
            15 => 'DeleteGroupMonitoringAgentProcess',
            16 => 'DescribeGroupMonitoringAgentProcess',
            17 => 'CreateMonitorGroupNotifyPolicy',
            18 => 'DeleteMonitorGroupNotifyPolicy',
            19 => 'DescribeMonitorGroupNotifyPolicyList',
          ),
        ),
        1 => 
        array (
          'id' => 59517,
          'title' => '标签',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddTags',
            1 => 'CreateDynamicTagGroup',
            2 => 'DeleteDynamicTagGroup',
            3 => 'DescribeTagValueList',
            4 => 'DescribeTagKeyList',
            5 => 'DescribeProductResourceTagKeyList',
            6 => 'DescribeDynamicTagRuleList',
            7 => 'RemoveTags',
          ),
        ),
        2 => 
        array (
          'id' => 59436,
          'title' => '可用性监控',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateHostAvailability',
            1 => 'DeleteHostAvailability',
            2 => 'EnableHostAvailability',
            3 => 'DisableHostAvailability',
            4 => 'ModifyHostAvailability',
            5 => 'DescribeUnhealthyHostAvailability',
            6 => 'DescribeHostAvailabilityList',
          ),
        ),
      ),
    ),
    1 => 
    array (
      'id' => 59416,
      'title' => '主机监控',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'InstallMonitoringAgent',
        1 => 'DescribeMonitoringAgentHosts',
        2 => 'DescribeMonitoringAgentAccessKey',
        3 => 'DescribeMonitoringAgentConfig',
        4 => 'DescribeMonitoringAgentStatuses',
        5 => 'ModifyHostInfo',
        6 => 'DescribeMonitoringConfig',
        7 => 'PutMonitoringConfig',
        8 => 'UninstallMonitoringAgent',
        9 => 'CreateMonitoringAgentProcess',
        10 => 'CreateMonitorAgentProcess',
        11 => 'DescribeMonitoringAgentProcesses',
        12 => 'DeleteMonitoringAgentProcess',
      ),
    ),
    2 => 
    array (
      'id' => 184858,
      'title' => '事件中心',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 59447,
          'title' => '系统事件',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'DescribeSystemEventHistogram',
            1 => 'DescribeSystemEventMetaList',
            2 => 'DescribeSystemEventAttribute',
            3 => 'DescribeSystemEventCount',
            4 => 'DescribeMonitorResourceQuotaAttribute',
            5 => 'SendDryRunSystemEvent',
          ),
        ),
        1 => 
        array (
          'id' => 59478,
          'title' => '自定义事件',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'DescribeCustomEventCount',
            1 => 'DescribeCustomEventHistogram',
            2 => 'DescribeCustomEventAttribute',
            3 => 'PutCustomEvent',
          ),
        ),
      ),
    ),
    3 => 
    array (
      'id' => 59473,
      'title' => '自定义监控',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'PutCustomMetric',
        1 => 'PutCustomMetricRule',
        2 => 'DescribeCustomMetricList',
        3 => 'DeleteCustomMetric',
      ),
    ),
    4 => 
    array (
      'id' => 59526,
      'title' => '日志监控',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'PutLogMonitor',
        1 => 'DeleteLogMonitor',
        2 => 'DescribeLogMonitorList',
        3 => 'DescribeLogMonitorAttribute',
      ),
    ),
    5 => 
    array (
      'id' => 184946,
      'title' => '站点监控',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateMonitorGroupByResourceGroupId',
        1 => 'CreateSiteMonitor',
        2 => 'CreateInstantSiteMonitor',
        3 => 'BatchCreateOnceSiteMonitor',
        4 => 'BatchCreateInstantSiteMonitor',
        5 => 'DeleteSiteMonitors',
        6 => 'DisableSiteMonitors',
        7 => 'ModifySiteMonitor',
        8 => 'EnableSiteMonitors',
        9 => 'DescribeSiteMonitorQuota',
        10 => 'DescribeSiteMonitorAttribute',
        11 => 'DescribeSiteMonitorISPCityList',
        12 => 'DescribeSiteMonitorData',
        13 => 'DescribeSiteMonitorStatistics',
        14 => 'DescribeSiteMonitorList',
        15 => 'DescribeSiteMonitorLog',
        16 => 'DescribeSiteInstantMonitorLog',
      ),
    ),
    6 => 
    array (
      'id' => 59386,
      'title' => '云产品监控',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeMetricLast',
        1 => 'DescribeMetricList',
        2 => 'DescribeMetricData',
        3 => 'DescribeMetricMetaList',
        4 => 'DescribeProjectMeta',
        5 => 'DeleteExporterOutput',
        6 => 'DeleteExporterRule',
        7 => 'DescribeExporterOutputList',
        8 => 'DescribeExporterRuleList',
        9 => 'DescribeMetricTop',
        10 => 'PutExporterOutput',
        11 => 'PutExporterRule',
      ),
    ),
    7 => 
    array (
      'id' => 184862,
      'title' => '报警服务',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 184895,
          'title' => '报警历史',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'DescribeAlertHistoryList',
            1 => 'DescribeAlertLogCount',
            2 => 'DescribeAlertLogList',
            3 => 'DescribeAlertLogHistogram',
          ),
        ),
        1 => 
        array (
          'id' => 184896,
          'title' => '一键报警',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'DescribeProductsOfActiveMetricRule',
            1 => 'DescribeActiveMetricRuleList',
            2 => 'EnableActiveMetricRule',
            3 => 'DisableActiveMetricRule',
          ),
        ),
        2 => 
        array (
          'id' => 59454,
          'title' => '报警模板',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateMetricRuleTemplate',
            1 => 'DeleteMetricRuleTemplate',
            2 => 'ModifyMetricRuleTemplate',
            3 => 'DescribeMetricRuleTemplateAttribute',
            4 => 'DescribeMetricRuleTemplateList',
            5 => 'ApplyMetricRuleTemplate',
          ),
        ),
        3 => 
        array (
          'id' => 59396,
          'title' => '阈值报警规则',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'DescribeMetricRuleList',
            1 => 'CreateGroupMetricRules',
            2 => 'CreateMetricRuleResources',
            3 => 'DeleteMetricRuleTargets',
            4 => 'DeleteMetricRules',
            5 => 'DeleteMetricRuleResources',
            6 => 'EnableMetricRules',
            7 => 'DisableMetricRules',
            8 => 'DescribeMetricRuleTargets',
            9 => 'DescribeMetricRuleCount',
            10 => 'DescribeAlertingMetricRuleResources',
            11 => 'PutMetricRuleTargets',
            12 => 'PutResourceMetricRule',
            13 => 'PutResourceMetricRules',
            14 => 'PutGroupMetricRule',
          ),
        ),
        4 => 
        array (
          'id' => 59461,
          'title' => '事件报警规则',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'DeleteEventRuleTargets',
            1 => 'DeleteEventRules',
            2 => 'EnableEventRules',
            3 => 'DisableEventRules',
            4 => 'DescribeEventRuleAttribute',
            5 => 'DescribeEventRuleList',
            6 => 'DescribeEventRuleTargetList',
            7 => 'PutEventRuleTargets',
            8 => 'PutEventRule',
            9 => 'PutCustomEventRule',
          ),
        ),
        5 => 
        array (
          'id' => 184863,
          'title' => '报警黑名单',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateMetricRuleBlackList',
            1 => 'ModifyMetricRuleBlackList',
            2 => 'DeleteMetricRuleBlackList',
            3 => 'DescribeMetricRuleBlackList',
            4 => 'EnableMetricRuleBlackList',
          ),
        ),
        6 => 
        array (
          'id' => 59428,
          'title' => '报警联系人',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'DeleteContactGroup',
            1 => 'DeleteContact',
            2 => 'DescribeContactListByContactGroup',
            3 => 'DescribeContactGroupList',
            4 => 'DescribeContactList',
            5 => 'PutContact',
            6 => 'PutContactGroup',
          ),
        ),
      ),
    ),
    8 => 
    array (
      'id' => 166246,
      'title' => '企业云监控',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateHybridMonitorNamespace',
        1 => 'ModifyHybridMonitorNamespace',
        2 => 'DeleteHybridMonitorNamespace',
        3 => 'DescribeHybridMonitorNamespaceList',
        4 => 'CreateHybridMonitorTask',
        5 => 'ModifyHybridMonitorTask',
        6 => 'DeleteHybridMonitorTask',
        7 => 'DescribeHybridMonitorTaskList',
        8 => 'PutHybridMonitorMetricData',
        9 => 'DescribeHybridMonitorDataList',
        10 => 'CreateHybridMonitorSLSGroup',
        11 => 'ModifyHybridMonitorSLSGroup',
        12 => 'DeleteHybridMonitorSLSGroup',
        13 => 'DescribeHybridMonitorSLSGroup',
        14 => 'Cursor',
        15 => 'BatchExport',
      ),
    ),
    9 => 
    array (
      'id' => 59381,
      'title' => '购买',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'OpenCmsService',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
      'AlertEvent' => 
      array (
        'title' => 'A short description of struct',
        'description' => '报警事件',
        'type' => 'object',
        'properties' => 
        array (
          'TraceId' => 
          array (
            'title' => '事件跟踪id',
            'type' => 'string',
          ),
          'DeDupId' => 
          array (
            'title' => '事件排重id',
            'type' => 'string',
          ),
          'AlertStatus' => 
          array (
            'title' => '报警状态',
            'type' => 'string',
          ),
          'Source' => 
          array (
            'title' => '报警来源',
            'type' => 'string',
          ),
          'Severity' => 
          array (
            'title' => '严重级别',
            'type' => 'string',
          ),
          'ResourceInfo' => 
          array (
            'title' => '报警资源',
            'type' => 'object',
          ),
          'CustomLabels' => 
          array (
            'title' => '自定义标签',
            'type' => 'object',
          ),
          'Details' => 
          array (
            'title' => '详细信息',
            'type' => 'string',
          ),
          'AlertName' => 
          array (
            'title' => '报警名称',
            'type' => 'string',
          ),
          'RuleName' => 
          array (
            'title' => '规则名称',
            'type' => 'string',
          ),
          'EventName' => 
          array (
            'title' => '事件名称',
            'type' => 'string',
          ),
          'Summary' => 
          array (
            'title' => '描述',
            'type' => 'string',
          ),
          'UserId' => 
          array (
            'title' => '用户id',
            'type' => 'string',
          ),
          'Timestamp' => 
          array (
            'title' => '时间戳',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'Expression' => 
          array (
            'title' => '表达式',
            'type' => 'string',
          ),
          'Metrics' => 
          array (
            'title' => '指标列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'MetricNameEn' => 
                array (
                  'title' => '英文指标名',
                  'type' => 'string',
                ),
                'Unit' => 
                array (
                  'title' => '单位',
                  'type' => 'string',
                ),
                'MetricName' => 
                array (
                  'title' => '指标名',
                  'type' => 'string',
                ),
                'Threshold' => 
                array (
                  'title' => '阈值',
                  'type' => 'string',
                ),
                'UnitFactor' => 
                array (
                  'title' => '单位系数',
                  'type' => 'number',
                  'format' => 'float',
                ),
                'Operator' => 
                array (
                  'title' => '比较方法',
                  'type' => 'string',
                ),
                'CurValue' => 
                array (
                  'title' => '当前值',
                  'type' => 'string',
                ),
                'Statistics' => 
                array (
                  'title' => '统计方法',
                  'type' => 'string',
                ),
                'MetricNameZh' => 
                array (
                  'title' => '中文指标名',
                  'type' => 'string',
                ),
              ),
            ),
          ),
          'Content' => 
          array (
            'title' => 'event raw content',
            'type' => 'string',
          ),
          'EventType' => 
          array (
            'title' => 'event type',
            'type' => 'string',
          ),
          'Product' => 
          array (
            'title' => 'product',
            'type' => 'string',
          ),
          'Arn' => 
          array (
            'title' => 'arn',
            'type' => 'string',
          ),
        ),
      ),
      'AlertStrategyRelation' => 
      array (
        'title' => 'A short description of struct',
        'description' => '报警通知策略关联对象',
        'type' => 'object',
        'properties' => 
        array (
          'AlertName' => 
          array (
            'title' => '报警规则名',
            'type' => 'string',
          ),
          'StrategyUuid' => 
          array (
            'title' => '通知策略uuid',
            'type' => 'string',
          ),
        ),
      ),
      'Dimension' => 
      array (
        'title' => 'Dimension',
        'description' => '监控项维度信息。',
        'type' => 'object',
        'properties' => 
        array (
          'Label' => 
          array (
            'title' => 'Dimension label',
            'description' => '监控项维度的名称。',
            'type' => 'string',
            'example' => 'instanceId',
          ),
          'Value' => 
          array (
            'title' => 'Dimension value',
            'description' => '监控项维度的值。',
            'type' => 'string',
            'example' => 'i-dferwret*****',
          ),
        ),
      ),
      'EscalationRule' => 
      array (
        'title' => '升级规则',
        'type' => 'object',
        'properties' => 
        array (
          'Name' => 
          array (
            'title' => '名称',
            'type' => 'string',
            'required' => true,
          ),
          'Description' => 
          array (
            'title' => '描述',
            'type' => 'string',
          ),
          'Uuid' => 
          array (
            'title' => 'UUID',
            'type' => 'string',
          ),
          'UserId' => 
          array (
            'title' => '用户id',
            'type' => 'string',
            'required' => false,
          ),
          'CreateTime' => 
          array (
            'title' => '创建时间',
            'type' => 'string',
          ),
          'UpdateTime' => 
          array (
            'title' => '更新时间',
            'type' => 'string',
          ),
          'Escalations' => 
          array (
            'title' => '升级设置',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'EscalateMin' => 
                array (
                  'title' => '升级分钟数',
                  'type' => 'integer',
                  'format' => 'int64',
                ),
                'ContactGroups' => 
                array (
                  'title' => '联系组列表',
                  'type' => 'array',
                  'items' => 
                  array (
                    'type' => 'string',
                  ),
                ),
                'ContactGroupsByLevel' => 
                array (
                  'title' => '自定义级别联系组',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Critical' => 
                    array (
                      'title' => 'critical',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'string',
                      ),
                    ),
                    'Error' => 
                    array (
                      'title' => 'error',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'string',
                      ),
                    ),
                    'Warning' => 
                    array (
                      'title' => 'warning',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'string',
                      ),
                    ),
                    'Info' => 
                    array (
                      'title' => 'info',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'string',
                      ),
                    ),
                    'Resolve' => 
                    array (
                      'title' => 'resolve',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'string',
                      ),
                    ),
                  ),
                ),
                'BackupContactGroups' => 
                array (
                  'title' => '备份联系组列表',
                  'type' => 'array',
                  'items' => 
                  array (
                    'type' => 'string',
                    'example' => '联系组',
                  ),
                ),
              ),
            ),
            'required' => true,
            'maxItems' => 6,
          ),
        ),
      ),
      'Incident' => 
      array (
        'title' => 'A short description of struct',
        'description' => '报警 Incident',
        'type' => 'object',
        'properties' => 
        array (
          'IncidentId' => 
          array (
            'title' => 'Incident  UUID',
            'type' => 'string',
          ),
          'GroupingId' => 
          array (
            'title' => '分组合并的id',
            'type' => 'string',
          ),
          'GroupingKey' => 
          array (
            'title' => '合并原始key',
            'type' => 'string',
          ),
          'GroupingData' => 
          array (
            'title' => '合并原始数据',
            'type' => 'object',
          ),
          'UserId' => 
          array (
            'title' => '用户id',
            'type' => 'string',
          ),
          'Severity' => 
          array (
            'title' => '严重程度',
            'type' => 'string',
          ),
          'StartTime' => 
          array (
            'title' => '开始时间',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'EndTime' => 
          array (
            'title' => '结束时间',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'ActionTime' => 
          array (
            'title' => '最近操作时间',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'IncidentStatus' => 
          array (
            'title' => '报警状态',
            'type' => 'string',
          ),
          'AlertCount' => 
          array (
            'title' => '报警次数',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'StrategyUuid' => 
          array (
            'title' => '通知策略uuid',
            'type' => 'string',
          ),
        ),
      ),
      'Matcher' => 
      array (
        'title' => 'mathcer',
        'description' => '监控项的维度。',
        'type' => 'object',
        'properties' => 
        array (
          'Value' => 
          array (
            'title' => 'value',
            'description' => '监控项维度（dimension）的值。',
            'type' => 'string',
            'example' => 'instanceId',
          ),
          'Label' => 
          array (
            'title' => 'label',
            'description' => '监控项维度（dimension）的名称。',
            'type' => 'string',
            'example' => 'i-fewrewr*****',
          ),
          'Operator' => 
          array (
            'title' => 'operator',
            'description' => '监控项维度（dimension）匹配的方式，目前只支持EQUALS。默认EQUALS。',
            'type' => 'string',
            'example' => 'EQUALS',
          ),
        ),
      ),
      'MetricStat' => 
      array (
        'title' => '查询数据点',
        'description' => 'BatchExport查询的数据。',
        'type' => 'object',
        'properties' => 
        array (
          'Namespace' => 
          array (
            'title' => 'namespace',
            'description' => '云产品的数据命名空间。',
            'type' => 'string',
            'example' => 'acs_ecs_dashboard',
          ),
          'Metric' => 
          array (
            'title' => 'metric',
            'description' => '云产品的监控项名称。',
            'type' => 'string',
            'example' => 'cpu_idle',
          ),
          'Period' => 
          array (
            'title' => 'period',
            'description' => '监控项的时间间隔。

单位：秒。',
            'type' => 'integer',
            'format' => 'int32',
            'example' => '60',
          ),
          'Timestamp' => 
          array (
            'title' => 'timestamp',
            'description' => '监控数据的时间戳（单位：毫秒）',
            'type' => 'integer',
            'format' => 'int64',
            'example' => '1641454680000',
          ),
          'Dimensions' => 
          array (
            'title' => 'dimensions',
            'description' => '用于标识监控对象（实例）的Dimension信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '用于标识监控对象（实例）的Dimension信息。',
              '$ref' => '#/components/schemas/Dimension',
            ),
          ),
          'Associated' => 
          array (
            'title' => 'associated',
            'description' => '监控对象（实例）的附加信息。',
            'type' => 'object',
            'additionalProperties' => 
            array (
              'description' => '监控对象（实例）的附加信息。',
              'type' => 'string',
              'example' => '{"group":"test****", "name":"Alice"}',
            ),
          ),
          'Measurements' => 
          array (
            'title' => 'measurements',
            'description' => '指标的测量值（默认多值模式）。',
            'type' => 'object',
            'additionalProperties' => 
            array (
              'description' => '指标的测量值（默认多值模式）。',
              'type' => 'any',
              'example' => '{"Average":60,"Maximum":85}',
            ),
          ),
          'LogTime' => 
          array (
            'title' => 'logTime',
            'description' => '监控数据的记录时间（单位：毫秒），对于非原始数据（聚合后的数据），LogTime为空（NULL）。',
            'type' => 'integer',
            'format' => 'int64',
            'example' => '1683686550073',
          ),
        ),
      ),
      'MigrationJob' => 
      array (
        'title' => 'MigrationJob',
        'type' => 'object',
        'properties' => 
        array (
          'Uuid' => 
          array (
            'title' => 'UUID',
            'type' => 'string',
          ),
          'CreateTime' => 
          array (
            'title' => '创建时间',
            'type' => 'string',
          ),
          'UpdateTime' => 
          array (
            'title' => '更新时间',
            'type' => 'string',
          ),
          'RuleNames' => 
          array (
            'title' => '规则列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
          ),
          'Detail' => 
          array (
            'title' => '迁移结果详情',
            'type' => 'string',
          ),
          'JobStatus' => 
          array (
            'title' => '任务状态',
            'type' => 'string',
          ),
          'Source' => 
          array (
            'title' => '迁移源',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Rule' => 
                array (
                  'title' => '规则list',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'title' => 'name',
                      'type' => 'string',
                    ),
                    'KeywordFilter' => 
                    array (
                      'title' => 'keywordFilter',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Relation' => 
                        array (
                          'title' => 'relation',
                          'type' => 'string',
                        ),
                        'Keywords' => 
                        array (
                          'title' => 'keywords',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'string',
                          ),
                        ),
                      ),
                    ),
                    'PrimaryFilters' => 
                    array (
                      'title' => 'primaryFilters',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Field' => 
                          array (
                            'title' => 'field',
                            'type' => 'string',
                          ),
                          'OpType' => 
                          array (
                            'title' => 'opType',
                            'type' => 'string',
                          ),
                          'Value' => 
                          array (
                            'title' => 'value',
                            'type' => 'string',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
                'Targets' => 
                array (
                  'title' => '事件规则目标',
                  'type' => 'array',
                  'items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'title' => 'type',
                        'type' => 'string',
                      ),
                      'Content' => 
                      array (
                        'title' => 'Content',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Level' => 
                          array (
                            'title' => 'level',
                            'type' => 'string',
                          ),
                          'Group' => 
                          array (
                            'title' => 'group',
                            'type' => 'string',
                          ),
                          'Method' => 
                          array (
                            'title' => 'method',
                            'type' => 'string',
                          ),
                          'Url' => 
                          array (
                            'title' => 'url',
                            'type' => 'string',
                          ),
                          'Region' => 
                          array (
                            'title' => 'region',
                            'type' => 'string',
                          ),
                          'ResourcePath' => 
                          array (
                            'title' => 'resourcePath',
                            'type' => 'string',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
          'Plan' => 
          array (
            'title' => '迁移计划',
            'type' => 'object',
            'properties' => 
            array (
              'Subscriptions' => 
              array (
                'title' => '订阅列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'title' => '订阅名称',
                      'type' => 'string',
                    ),
                    'StrategyUuid' => 
                    array (
                      'title' => '通知配置Uuid',
                      'type' => 'string',
                    ),
                    'Conditions' => 
                    array (
                      'title' => '条件列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Field' => 
                          array (
                            'title' => 'field',
                            'type' => 'string',
                          ),
                          'Op' => 
                          array (
                            'title' => 'op',
                            'type' => 'string',
                          ),
                          'Value' => 
                          array (
                            'title' => 'value',
                            'type' => 'string',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Strategies' => 
              array (
                'title' => 'strategies',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'EscalationSetting' => 
                    array (
                      'title' => 'escalation',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'escalationUuid' => 
                        array (
                          'title' => 'escalationUuid',
                          'type' => 'string',
                        ),
                      ),
                    ),
                    'Name' => 
                    array (
                      'title' => 'name',
                      'type' => 'string',
                    ),
                    'PushingSetting' => 
                    array (
                      'title' => 'pushingSetting',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TargetUuids' => 
                        array (
                          'title' => 'targetUuids',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'string',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Escalations' => 
              array (
                'title' => '通知配置',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Uuid' => 
                    array (
                      'title' => '通知配置Uuid',
                      'type' => 'string',
                    ),
                    'Name' => 
                    array (
                      'title' => 'name',
                      'type' => 'string',
                    ),
                    'Escalations' => 
                    array (
                      'title' => 'Escalations',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Groups' => 
                          array (
                            'title' => 'groups',
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'string',
                            ),
                          ),
                          'LevelGroups' => 
                          array (
                            'title' => 'level groups',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Critical' => 
                              array (
                                'title' => 'critical groups',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'string',
                                ),
                              ),
                              'Warning' => 
                              array (
                                'title' => 'warning groups',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'string',
                                ),
                              ),
                              'Info' => 
                              array (
                                'title' => 'info groups',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'string',
                                ),
                              ),
                              'Resolved' => 
                              array (
                                'title' => 'resolved groups',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'string',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Targets' => 
              array (
                'title' => '事件规则目标',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Type' => 
                    array (
                      'title' => '类型',
                      'type' => 'string',
                    ),
                    'Name' => 
                    array (
                      'title' => 'name',
                      'type' => 'string',
                    ),
                    'Uuid' => 
                    array (
                      'title' => 'uuid',
                      'type' => 'string',
                    ),
                    'HttpRequestTarget' => 
                    array (
                      'title' => 'httpRequestTarget',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Method' => 
                        array (
                          'title' => 'method',
                          'type' => 'string',
                        ),
                        'Url' => 
                        array (
                          'title' => 'url',
                          'type' => 'string',
                        ),
                        'ContentType' => 
                        array (
                          'title' => 'contenttype',
                          'type' => 'string',
                        ),
                      ),
                    ),
                    'Arn' => 
                    array (
                      'title' => 'arn',
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
              'Contacts' => 
              array (
                'title' => 'contacts',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'title' => 'contact',
                      'type' => 'string',
                    ),
                    'Channels' => 
                    array (
                      'title' => 'channels',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Type' => 
                          array (
                            'title' => 'type',
                            'type' => 'string',
                          ),
                          'Value' => 
                          array (
                            'title' => 'value',
                            'type' => 'string',
                          ),
                          'Level' => 
                          array (
                            'title' => 'level',
                            'type' => 'integer',
                            'format' => 'int64',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Groups' => 
              array (
                'title' => 'groups',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'title' => 'name',
                      'type' => 'string',
                    ),
                    'Contacts' => 
                    array (
                      'title' => 'contacts',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'string',
                      ),
                    ),
                  ),
                ),
              ),
              'RuleNames' => 
              array (
                'title' => 'RuleNames',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'string',
                ),
              ),
            ),
          ),
        ),
      ),
      'NotificationStrategy' => 
      array (
        'title' => '通知策略',
        'type' => 'object',
        'properties' => 
        array (
          'Name' => 
          array (
            'title' => '名称',
            'type' => 'string',
            'required' => true,
          ),
          'Description' => 
          array (
            'title' => '描述',
            'type' => 'string',
          ),
          'Uuid' => 
          array (
            'title' => 'UUID',
            'type' => 'string',
          ),
          'UserId' => 
          array (
            'title' => '用户id',
            'type' => 'string',
          ),
          'CreateTime' => 
          array (
            'title' => '创建时间',
            'type' => 'string',
          ),
          'UpdateTime' => 
          array (
            'title' => '更新时间',
            'type' => 'string',
          ),
          'FilterSetting' => 
          array (
            'title' => '过滤设置',
            'type' => 'object',
            'properties' => 
            array (
              'WhiteList' => 
              array (
                'title' => '白名单',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '白名单',
                  'type' => 'array',
                  'items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Field' => 
                      array (
                        'title' => '过滤字段',
                        'type' => 'string',
                        'required' => true,
                      ),
                      'Op' => 
                      array (
                        'title' => '过滤类型',
                        'type' => 'string',
                        'required' => true,
                      ),
                      'Value' => 
                      array (
                        'title' => '过滤数据',
                        'type' => 'string',
                        'required' => true,
                      ),
                    ),
                  ),
                ),
                'required' => false,
                'maxItems' => 10,
              ),
              'BlackList' => 
              array (
                'title' => '黑名单',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '黑名单',
                  'type' => 'array',
                  'items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Field' => 
                      array (
                        'title' => '过滤字段',
                        'type' => 'string',
                        'required' => true,
                      ),
                      'Op' => 
                      array (
                        'title' => '过滤类型',
                        'type' => 'string',
                        'required' => true,
                      ),
                      'Value' => 
                      array (
                        'title' => '过滤数据',
                        'type' => 'string',
                        'required' => true,
                      ),
                    ),
                  ),
                ),
                'maxItems' => 10,
              ),
            ),
          ),
          'GroupingSetting' => 
          array (
            'title' => '合并设置',
            'type' => 'object',
            'properties' => 
            array (
              'GroupingItems' => 
              array (
                'title' => '合并项目',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Type' => 
                    array (
                      'title' => '合并类型',
                      'type' => 'string',
                    ),
                    'Keys' => 
                    array (
                      'title' => '合并keys',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'string',
                      ),
                    ),
                  ),
                ),
                'maxItems' => 10,
              ),
              'SilenceSec' => 
              array (
                'title' => '沉默秒数',
                'type' => 'integer',
                'format' => 'int32',
              ),
              'PeriodMin' => 
              array (
                'title' => '检查周期分钟数',
                'type' => 'integer',
                'format' => 'int32',
              ),
              'Times' => 
              array (
                'title' => '触发次数',
                'type' => 'integer',
                'format' => 'int32',
              ),
              'EnableRawAlertDispatching' => 
              array (
                'title' => '是否开启原始报警数据直接转发',
                'type' => 'boolean',
              ),
            ),
          ),
          'EscalationSetting' => 
          array (
            'title' => '升级设置',
            'type' => 'object',
            'properties' => 
            array (
              'Range' => 
              array (
                'title' => '数据范围',
                'type' => 'string',
                'required' => false,
              ),
              'EscalationLevel' => 
              array (
                'title' => '升级最低级别',
                'type' => 'string',
                'required' => false,
              ),
              'EscalationUuid' => 
              array (
                'title' => '升级规则uuid',
                'type' => 'string',
                'required' => false,
              ),
              'AutoResolveMin' => 
              array (
                'title' => '自动恢复分钟数',
                'type' => 'integer',
                'format' => 'int64',
              ),
              'RetriggerMin' => 
              array (
                'title' => '重复触发报警分钟数',
                'type' => 'integer',
                'format' => 'int64',
              ),
              'CustomChannels' => 
              array (
                'title' => '自定义通知策略',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ChannelType' => 
                    array (
                      'title' => '渠道类型',
                      'type' => 'string',
                      'required' => true,
                    ),
                    'TemplateUuid' => 
                    array (
                      'title' => '通知模板uuid',
                      'type' => 'string',
                    ),
                    'Severities' => 
                    array (
                      'title' => '严重程度列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'string',
                        'required' => false,
                        'example' => '严重程度',
                      ),
                    ),
                  ),
                ),
                'maxItems' => 20,
              ),
            ),
          ),
          'PushingSetting' => 
          array (
            'title' => '推送设置',
            'type' => 'object',
            'properties' => 
            array (
              'TemplateUuid' => 
              array (
                'title' => '模板uuid',
                'type' => 'string',
                'required' => false,
              ),
              'Range' => 
              array (
                'title' => '数据范围',
                'type' => 'string',
                'required' => false,
              ),
              'TargetUuids' => 
              array (
                'title' => '推送目标uuid列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'string',
                  'example' => '推送目标uuid',
                ),
                'required' => false,
                'maxItems' => 20,
              ),
              'PushingDataFormat' => 
              array (
                'title' => '推送消息格式',
                'type' => 'string',
              ),
            ),
          ),
          'Product' => 
          array (
            'title' => '归属产品',
            'type' => 'string',
          ),
        ),
      ),
      'NotificationTemplate' => 
      array (
        'title' => '通知模板',
        'type' => 'object',
        'properties' => 
        array (
          'Name' => 
          array (
            'title' => '名称',
            'type' => 'string',
            'required' => true,
          ),
          'Description' => 
          array (
            'title' => '描述',
            'type' => 'string',
          ),
          'Uuid' => 
          array (
            'title' => 'UUID',
            'type' => 'string',
          ),
          'UserId' => 
          array (
            'title' => '用户id',
            'type' => 'string',
          ),
          'CreateTime' => 
          array (
            'title' => '创建时间',
            'type' => 'string',
          ),
          'UpdateTime' => 
          array (
            'title' => '更新时间',
            'type' => 'string',
          ),
          'Type' => 
          array (
            'title' => '模板类型',
            'type' => 'string',
            'example' => 'DATA,  SMS,  ONCALL,  MAIL,  DING,  WEIXIN,  FEISHU,  SLACK',
          ),
          'WraperType' => 
          array (
            'title' => '封装类型',
            'type' => 'string',
            'example' => 'TEXT, MARKDOWN,CARD',
          ),
          'ZhTitle' => 
          array (
            'title' => '中文标题',
            'type' => 'string',
            'example' => '报警通知 $.alertName',
          ),
          'EnTitle' => 
          array (
            'title' => '英文标题',
            'type' => 'string',
            'example' => 'Alarm $.alertName',
          ),
          'ZhContent' => 
          array (
            'title' => '中文内容',
            'type' => 'string',
            'example' => '报警 $.alertName',
          ),
          'EnContent' => 
          array (
            'title' => '英文内容',
            'type' => 'string',
            'example' => 'Alarm $.alertName',
          ),
          'ZhItemContent' => 
          array (
            'title' => '中文单条关联报警模板格式',
            'type' => 'string',
            'example' => '报警 $.alertName',
          ),
          'EnItemContent' => 
          array (
            'title' => '英文关联报警模板格式',
            'type' => 'string',
            'example' => 'Alarm $.alertName',
          ),
        ),
      ),
      'PushingTarget' => 
      array (
        'title' => 'PushingTarget',
        'type' => 'object',
        'properties' => 
        array (
          'Name' => 
          array (
            'title' => '名称',
            'type' => 'string',
            'required' => true,
          ),
          'Description' => 
          array (
            'title' => '描述',
            'type' => 'string',
          ),
          'Uuid' => 
          array (
            'title' => 'UUID',
            'type' => 'string',
          ),
          'UserId' => 
          array (
            'title' => '用户id',
            'type' => 'string',
            'required' => false,
          ),
          'CreateTime' => 
          array (
            'title' => '创建时间',
            'type' => 'string',
          ),
          'UpdateTime' => 
          array (
            'title' => '更新时间',
            'type' => 'string',
          ),
          'Range' => 
          array (
            'title' => '生效范围',
            'type' => 'string',
          ),
          'Type' => 
          array (
            'title' => '渠道类型',
            'type' => 'string',
          ),
          'Arn' => 
          array (
            'title' => 'ARN',
            'type' => 'string',
          ),
          'TemplateUuid' => 
          array (
            'title' => 'template Uuid',
            'type' => 'string',
          ),
          'HttpRequestTarget' => 
          array (
            'title' => 'http请求设置',
            'type' => 'object',
            'properties' => 
            array (
              'Url' => 
              array (
                'title' => 'url',
                'type' => 'string',
              ),
              'Method' => 
              array (
                'title' => 'http方法',
                'type' => 'string',
              ),
              'ContentType' => 
              array (
                'title' => 'content Type',
                'type' => 'string',
              ),
              'Headers' => 
              array (
                'title' => 'http 请求header',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'title' => 'key',
                      'type' => 'string',
                    ),
                    'Value' => 
                    array (
                      'title' => 'value',
                      'type' => 'string',
                    ),
                  ),
                ),
                'maxItems' => 10,
              ),
              'EncryptString' => 
              array (
                'title' => '签名混淆字符串',
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'Subscription' => 
      array (
        'title' => '报警订阅',
        'type' => 'object',
        'properties' => 
        array (
          'Name' => 
          array (
            'title' => '名称',
            'type' => 'string',
            'required' => true,
          ),
          'Description' => 
          array (
            'title' => '描述',
            'type' => 'string',
          ),
          'Uuid' => 
          array (
            'title' => 'UUID',
            'type' => 'string',
          ),
          'CreateTime' => 
          array (
            'title' => '创建时间',
            'type' => 'string',
          ),
          'UpdateTime' => 
          array (
            'title' => '更新时间',
            'type' => 'string',
          ),
          'StrategyUuid' => 
          array (
            'title' => '通知策略id',
            'type' => 'string',
          ),
          'Conditions' => 
          array (
            'title' => '订阅条件',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Field' => 
                array (
                  'title' => '字段',
                  'type' => 'string',
                ),
                'Operator' => 
                array (
                  'title' => '比较符',
                  'type' => 'string',
                ),
                'Value' => 
                array (
                  'title' => '值',
                  'type' => 'string',
                ),
              ),
            ),
            'maxItems' => 10,
          ),
          'Relation' => 
          array (
            'title' => '条件间关系',
            'type' => 'string',
          ),
          'Enabled' => 
          array (
            'title' => '是否启用',
            'type' => 'boolean',
          ),
          'Product' => 
          array (
            'title' => '归属产品',
            'type' => 'string',
          ),
        ),
      ),
    ),
  ),
  'apis' => 
  array (
    'CreateMonitorGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'ECS_Group',
          ),
        ),
        1 => 
        array (
          'name' => 'ContactGroups',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系组。应用分组的报警通知会发送给该报警联系组中的报警联系人。

> 报警联系组是一组报警联系人，可以包含一个或多个报警联系人。关于如何创建报警联系人和报警联系组，请参见[PutContact](~~PutContact~~)和[PutContactGroup](~~PutContactGroup~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS_Alert_Group',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '83C89BA6-ABD4-4398-A175-83E86C47A001',
              ),
              'GroupId' => 
              array (
                'description' => '应用分组ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1234567',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidClientTokenId',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourcesOverLimit',
            'errorMessage' => 'Resources over limit.',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"83C89BA6-ABD4-4398-A175-83E86C47A001\\",\\n  \\"GroupId\\": 1234567,\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateMonitorGroupResponse>\\n\\t<RequestId>83C89BA6-ABD4-4398-A175-83E86C47A001</RequestId>\\n\\t<Code>200</Code>\\n\\t<Success>true</Success>\\n\\t<GroupId>1234567</GroupId>\\n</CreateMonitorGroupResponse>\\t","errorExample":""}]',
      'title' => '创建应用分组',
      'summary' => '调用CreateMonitorGroup接口创建应用分组。',
      'description' => '本文将提供一个示例，创建应用分组`ECS_Group`。',
      'requestParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyMonitorGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '123456',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'ecs_group',
          ),
        ),
        2 => 
        array (
          'name' => 'ContactGroups',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系人组。',
            'type' => 'string',
            'required' => false,
            'example' => 'alarm_ecs_group',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C85A2870-5DF4-4269-BC50-ECB5E4591A80',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"C85A2870-5DF4-4269-BC50-ECB5E4591A80\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ModifyMonitorGroupResponse>\\n    <RequestId>36FE4D3A-A907-4F2A-921C-89612FFA977B</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</ModifyMonitorGroupResponse>","errorExample":""}]',
      'title' => '修改应用分组',
      'summary' => '调用ModifyMonitorGroup接口修改应用分组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteMonitorGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CA35B3AE-4FFD-4A33-AE67-67EF68711EFA',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Group' => 
              array (
                'description' => '被删除应用分组列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'GroupName' => 
                  array (
                    'description' => '应用分组名称。',
                    'type' => 'string',
                    'example' => 'ECS_test',
                  ),
                  'ContactGroups' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ContactGroup' => 
                      array (
                        'description' => '报警联系组。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Name' => 
                            array (
                              'description' => '报警联系组名称。',
                              'type' => 'string',
                              'example' => 'ECS_Group',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidClientTokenId',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"CA35B3AE-4FFD-4A33-AE67-67EF68711EFA\\",\\n  \\"Success\\": true,\\n  \\"Group\\": {\\n    \\"GroupName\\": \\"ECS_test\\",\\n    \\"ContactGroups\\": {\\n      \\"ContactGroup\\": [\\n        {\\n          \\"Name\\": \\"ECS_Group\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DeleteMonitorGroup>\\n\\t\\t<Group>\\n\\t\\t\\t<GroupName>ECS_test</GroupName>\\n\\t\\t\\t<ContactGroups>\\n\\t\\t\\t\\t<ContactGroup>\\n\\t\\t\\t\\t\\t<Name>ECS_Group</Name>\\n\\t\\t\\t\\t</ContactGroup>\\n\\t\\t\\t</ContactGroups>\\n\\t\\t</Group>\\n\\t\\t<RequestId>EFB8C3EC-3460-4EC9-8603-A9FE9D0A6C2C</RequestId>\\n\\t\\t<Code>200</Code>\\n\\t\\t<Success>true</Success>\\n</DeleteMonitorGroup>","errorExample":""}]',
      'title' => '删除指定的应用分组',
      'summary' => '调用DeleteMonitorGroup接口删除指定的应用分组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMonitorGroups' => 
    array (
      'summary' => '调用DescribeMonitorGroups接口查询应用分组列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SelectContactGroups',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中是否需要包含报警联系组。取值：
- true：是。
- false：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

起始值：1。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页时每页显示的数据行数。

起始值：1。默认值：30。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '30',
          ),
        ),
        3 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键字。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源实例ID。该参数用于查询指定实例所在的应用分组。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-abcdefgh12****',
          ),
        ),
        5 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'testGroup124',
          ),
        ),
        6 => 
        array (
          'name' => 'IncludeTemplateHistory',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果是否包含已应用到应用分组的报警模板历史。取值：
- true：是。
- false：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组类型。取值：
- custom：自建的应用分组。
- ehpc_cluster：从EHPC集群同步的应用分组。
- kubernetes：从容器服务Kubernetes版同步的应用分组。',
            'type' => 'string',
            'required' => false,
            'example' => 'custom',
            'enum' => 
            array (
              0 => 'custom',
              1 => 'ehpc_cluster',
              2 => 'kubernetes',
              3 => 'tag',
              4 => 'aone_group',
              5 => 'resMgr',
              6 => 'ess',
            ),
          ),
        ),
        8 => 
        array (
          'name' => 'DynamicTagRuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能标签规则ID。',
            'type' => 'string',
            'required' => false,
            'example' => '6b882d9a-5117-42e2-9d0c-4749a0c6****',
          ),
        ),
        9 => 
        array (
          'name' => 'GroupFounderTagKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通过智能标签创建应用分组的标签键。',
            'type' => 'string',
            'required' => false,
            'example' => 'GroupKey1',
          ),
        ),
        10 => 
        array (
          'name' => 'GroupFounderTagValue',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通过智能标签创建应用分组的标签值。',
            'type' => 'string',
            'required' => false,
            'example' => 'GroupValue1',
          ),
        ),
        11 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。多个应用分组ID之间用半角逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'example' => '92****',
          ),
        ),
        12 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '应用分组的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '应用分组的标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '应用分组的标签键。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagKey1',
                ),
                'Value' => 
                array (
                  'description' => '应用分组的标签值。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagValue1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        13 => 
        array (
          'name' => 'Types',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组类型。取值：

- custom：自建的应用分组。
- ehpc_cluster：从EHPC集群同步的应用分组。
- kubernetes：从容器服务Kubernetes版同步的应用分组。
- tag：通过标签自动创建的应用分组。
- resMgr：通过资源组创建的应用分组。
- ess：从弹性伸缩ESS同步的应用分组。',
            'type' => 'string',
            'required' => false,
            'example' => 'custom',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F02B299A-D374-4595-9F55-7534D604F132',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页时每页显示的数据行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '30',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Resources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Resource' => 
                  array (
                    'description' => '关联资源。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '关联资源。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '应用分组类型。取值：
- custom：自建的应用分组。
- ehpc_cluster：从EHPC集群同步的应用分组。
- kubernetes：从容器服务Kubernetes版同步的应用分组。',
                          'type' => 'string',
                          'example' => 'custom',
                        ),
                        'GroupFounderTagValue' => 
                        array (
                          'description' => '通过智能标签创建应用分组的标签值。',
                          'type' => 'string',
                          'example' => 'GroupValue1',
                        ),
                        'BindUrl' => 
                        array (
                          'description' => '从容器服务Kubernetes版同步过来的URL地址。',
                          'type' => 'string',
                          'example' => 'https://aliyun.com',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '应用分组名称。',
                          'type' => 'string',
                          'example' => 'test123',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '应用分组ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '12345',
                        ),
                        'ServiceId' => 
                        array (
                          'description' => '阿里云服务ID。',
                          'type' => 'string',
                          'example' => '49****',
                        ),
                        'DynamicTagRuleId' => 
                        array (
                          'description' => '智能标签规则ID。',
                          'type' => 'string',
                          'example' => '6b882d9a-5117-42e2-9d0c-4749a0c6****',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建应用分组的时间戳。单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1603181891000',
                        ),
                        'GroupFounderTagKey' => 
                        array (
                          'description' => '通过智能标签创建应用分组的标签键。',
                          'type' => 'string',
                          'example' => 'GroupKey1',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '修改应用分组的时间戳。单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1603181891000',
                        ),
                        'ContactGroups' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ContactGroup' => 
                            array (
                              'description' => '报警联系组。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '报警联系组',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Name' => 
                                  array (
                                    'description' => '报警联系组名称。',
                                    'type' => 'string',
                                    'example' => 'CloudMonitor',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '应用分组绑定的标签列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '应用分组绑定的标签列表。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '应用分组的标签键。',
                                    'type' => 'string',
                                    'example' => 'tagKey1',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '应用分组的标签值。',
                                    'type' => 'string',
                                    'example' => 'tagValue1',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'TemplateIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TemplateId' => 
                            array (
                              'description' => '模板ID。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '应用分组应用过的报警模板。',
                                'type' => 'string',
                                'example' => '92****',
                              ),
                            ),
                          ),
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '资源ID。',
                          'type' => 'string',
                          'example' => 'rg-aek2hopjh*******',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F02B299A-D374-4595-9F55-7534D604F132\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 30,\\n  \\"Total\\": 10,\\n  \\"Resources\\": {\\n    \\"Resource\\": [\\n      {\\n        \\"Type\\": \\"custom\\",\\n        \\"GroupFounderTagValue\\": \\"GroupValue1\\",\\n        \\"BindUrl\\": \\"https://aliyun.com\\",\\n        \\"GroupName\\": \\"test123\\",\\n        \\"GroupId\\": 12345,\\n        \\"ServiceId\\": \\"49****\\",\\n        \\"DynamicTagRuleId\\": \\"6b882d9a-5117-42e2-9d0c-4749a0c6****\\",\\n        \\"GmtCreate\\": 1603181891000,\\n        \\"GroupFounderTagKey\\": \\"GroupKey1\\",\\n        \\"GmtModified\\": 1603181891000,\\n        \\"ContactGroups\\": {\\n          \\"ContactGroup\\": [\\n            {\\n              \\"Name\\": \\"CloudMonitor\\"\\n            }\\n          ]\\n        },\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"tagKey1\\",\\n              \\"Value\\": \\"tagValue1\\"\\n            }\\n          ]\\n        },\\n        \\"TemplateIds\\": {\\n          \\"TemplateId\\": [\\n            \\"92****\\"\\n          ]\\n        },\\n        \\"ResourceGroupId\\": \\"rg-aek2hopjh*******\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMonitorGroupsResponse>\\n    <RequestId>F02B299A-D374-4595-9F55-7534D604F132</RequestId>\\n    <PageSize>30</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <Total>2</Total>\\n    <Resources>\\n        <Resource>\\n            <GroupName>testGroup124</GroupName>\\n            <ContactGroups>\\n                <ContactGroup>\\n                    <Name>CloudMonitor</Name>\\n                </ContactGroup>\\n            </ContactGroups>\\n            <Type>custom</Type>\\n            <GmtCreate>1603181891000</GmtCreate>\\n            <GmtModified>1603181891000</GmtModified>\\n            <GroupFounderTagKey>1204</GroupFounderTagKey>\\n            <GroupFounderTagValue>001</GroupFounderTagValue>\\n            <TemplateIds>\\n                <TemplateId>92****</TemplateId>\\n            </TemplateIds>\\n            <Tags>\\n                <Tag>\\n                    <Value>tagKey1</Value>\\n                    <Key>tagValue1</Key>\\n                </Tag>\\n            </Tags>\\n            <GroupId>7301****</GroupId>\\n        </Resource>\\n        <Resource>\\n            <GroupName>test123</GroupName>\\n            <ContactGroups>\\n                <ContactGroup>\\n                    <Name>CloudMonitor</Name>\\n                </ContactGroup>\\n            </ContactGroups>\\n            <Type>tag</Type>\\n            <GmtCreate>1603181891000</GmtCreate>\\n            <DynamicTagRuleId>6b882d9a-5117-42e2-9d0c-4749a0c6****</DynamicTagRuleId>\\n            <GmtModified>1603181891000</GmtModified>\\n            <GroupFounderTagKey>GroupKey1</GroupFounderTagKey>\\n            <GroupFounderTagValue>GroupValue1</GroupFounderTagValue>\\n            <TemplateIds>\\n            </TemplateIds>\\n            <Tags>\\n            </Tags>\\n            <GroupId>92****</GroupId>\\n        </Resource>\\n    </Resources>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</DescribeMonitorGroupsResponse>","errorExample":""}]',
      'title' => '查询应用分组列表',
      'description' => '本文将提供一个示例，查询当前账号的应用分组列表。返回结果显示当前账号存在两个应用分组`testGroup124`和`test123`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateMonitorGroupInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3607****',
          ),
        ),
        1 => 
        array (
          'name' => 'Instances',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '实例列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'InstanceName' => 
                array (
                  'description' => '实例名称。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'test-instance-ecs',
                ),
                'Category' => 
                array (
                  'description' => '云服务名称缩写。

关于如何获取云服务名称缩写，请参见[DescribeProjectMeta](~~114916~~)接口的返回参数`Labels`中的`metricCategory`。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ecs',
                ),
                'InstanceId' => 
                array (
                  'description' => '实例ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'i-2ze26xj5wwy12****',
                ),
                'RegionId' => 
                array (
                  'description' => '实例所在地域。',
                  'type' => 'string',
                  'required' => true,
                  'example' => ' cn-hangzhou',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 2000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1BC69FEB-56CD-4555-A0E2-02536A24A946',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidClientTokenId',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => '%s',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => '%s',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourcesOverLimit',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"1BC69FEB-56CD-4555-A0E2-02536A24A946\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateMonitorGroupInstancesResponse>\\n    <RequestId>1BC69FEB-56CD-4555-A0E2-02536A24A946</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</CreateMonitorGroupInstancesResponse>","errorExample":""}]',
      'title' => '添加指定资源到指定应用分组',
      'summary' => '调用CreateMonitorGroupInstances接口添加指定资源到指定应用分组。',
      'description' => '一个应用分组中，一个云服务最多添加3000个资源，单次最多添加1000个资源，应用分组中的总资源数无限制。

本文将提供一个示例，将地域`cn-hangzhou`的云服务器ECS的实例（实例ID为`i-2ze26xj5wwy12****`，实例名称为`test-instance-ecs`）添加到应用分组`3607****`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyMonitorGroupInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '12345',
          ),
        ),
        1 => 
        array (
          'name' => 'Instances',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '实例列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'InstanceName' => 
                array (
                  'description' => '实例名称。N的取值范围：1~2000。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'HostName',
                ),
                'Category' => 
                array (
                  'description' => '资源实例所属的云产品名称或规格。目前支持的产品如下：

- ECS（包括阿里云和非阿里云主机）
- RDS（云数据库RDS版）
- ADS（分析型数据库）
- SLB（负载均衡）
- VPC（弹性IP）
- APIGATEWAY（API网关）
- CDN（内容分发网络）
- CS（容器服务Swarm版）
- DCDN（全站加速）
- DDoS（DDoS防护）
- EIP（弹性公网IP）
- ELASTICSEARCH
- EMR（E-MapReduce）
- ESS（弹性伸缩）
- HBASE（云数据库 HBase）
- IOT_EDGE（IoT边缘计算）
- K8S_POD（k8s pod）
- KVSTORE_SHARDING（Redis集群版）
- KVSTORE_SPLITRW（Redis读写分离版）
- KVSTORE_STANDARD（Redis标准版）
- MEMCACHE（云数据库Memcache）
- MNS（消息服务）
- MONGODB（MongoDB 副本实例）
- MONGODB_CLUSTER（MongoDB集群版本）
- MONGODB_SHARDING（MongoDB分片集群）
- MQ_TOPIC（消息服务TOPIC）
- OCS（旧版云数据库Memcache）
- OPENSEARCH（开放搜索）
- OSS（对象存储OSS）
- POLARDB（云数据库PolarDB）
- PETADATA（云数据库HybridDB for MySQL）
- SCDN（安全加速）
- SHAREBANDWIDTHPACKAGES（共享带宽包）
- SLS（日志服务）
- VPN（VPN网关）
N的取值范围：1~2000。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ECS',
                ),
                'InstanceId' => 
                array (
                  'description' => '资源实例ID。N的取值范围：1~2000。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'i-a2d5q7pm12****',
                ),
                'RegionId' => 
                array (
                  'description' => '地域ID（RegionId）。N的取值范围：1~2000。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'cn-hangzhou',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 2000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FEC7EDB3-9B08-4AC0-A42A-329F5D14B95A',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => '%s',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourcesOverLimit',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"FEC7EDB3-9B08-4AC0-A42A-329F5D14B95A\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ModifyMonitorGroupInstancesResponse>\\n    <RequestId>02977C39-9E74-430A-B35B-04CFBF0E7F64</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</ModifyMonitorGroupInstancesResponse>","errorExample":""}]',
      'title' => '修改应用分组中的资源',
      'summary' => '调用ModifyMonitorGroupInstances接口修改应用分组中的资源。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMonitorGroupInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示记录条数。默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '123****',
          ),
        ),
        3 => 
        array (
          'name' => 'Category',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品名称缩写。N的取值范围为1~200。

> 关于如何获取云产品名称缩写，请参见[DescribeProjectMeta](~~114916~~)接口的返回参数`Labels`中的`metricCategory`。',
            'type' => 'string',
            'required' => false,
            'example' => 'ecs',
          ),
        ),
        4 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按照实例名称模糊查询。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-s1',
          ),
        ),
        5 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按照实例ID搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-bp12g4xbl4i0brkn****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '97F2A410-9412-499C-9AD1-76EF7EC02DF2',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

>状态码为200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '每页记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '12',
              ),
              'Resources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Resource' => 
                  array (
                    'description' => '应用分组资源的描述信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '应用分组资源的描述信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Category' => 
                        array (
                          'description' => '产品名称缩写。',
                          'type' => 'string',
                          'example' => 'ecs',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID，实例的唯一标识。',
                          'type' => 'string',
                          'example' => 'i-bp12g4xbl4i0brkn****',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => 'test-s1',
                        ),
                        'Id' => 
                        array (
                          'description' => '资源ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123****',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '实例对应的地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"97F2A410-9412-499C-9AD1-76EF7EC02DF2\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 12,\\n  \\"Resources\\": {\\n    \\"Resource\\": [\\n      {\\n        \\"Category\\": \\"ecs\\",\\n        \\"InstanceId\\": \\"i-bp12g4xbl4i0brkn****\\",\\n        \\"InstanceName\\": \\"test-s1\\",\\n        \\"Id\\": 0,\\n        \\"RegionId\\": \\"cn-hangzhou\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<PageNumber>1</PageNumber>\\n<PageSize>30</PageSize>\\n<RequestId>7670220A-0725-42EE-9252-8200C4F810D9</RequestId>\\n<Success>true</Success>\\n<Code>200</Code>\\n<Total>1</Total>\\n<Resources>\\n    <Resource>\\n        <Category>ECS</Category>\\n        <InstanceId>i-2ze3w55tr2rcpejp****</InstanceId>\\n        <RegionId>cn-beijing</RegionId>\\n        <InstanceName>dynamic_group_1</InstanceName>\\n    </Resource>\\n</Resources>","errorExample":""}]',
      'title' => '查询指定应用分组内包含的资源列表',
      'summary' => '调用DescribeMonitorGroupInstances接口查询指定应用分组内包含的资源列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMonitorGroupDynamicRules' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2170B94A-1576-4D65-900E-2093037CDAF3',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Resource' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Resource' => 
                  array (
                    'description' => '关联资源。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '关联资源。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Category' => 
                        array (
                          'description' => '动态规则对应的云服务类型。取值：

- ecs：云服务器。

- rds：关系型数据库。

- slb：负载均衡。',
                          'type' => 'string',
                          'example' => 'ecs',
                        ),
                        'FilterRelation' => 
                        array (
                          'description' => '筛选条件。取值：

- and：应用分组中满足所有报警规则的实例。

- or：应用分组中满足任意报警规则的实例。',
                          'type' => 'string',
                          'example' => 'and',
                        ),
                        'Filters' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Filter' => 
                            array (
                              'description' => '应用分组的动态规则。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '应用分组的动态规则。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Value' => 
                                  array (
                                    'description' => '动态规则值。',
                                    'type' => 'string',
                                    'example' => '1',
                                  ),
                                  'Function' => 
                                  array (
                                    'description' => '计算方法。取值：

- contains：包含。

- startWith：前缀。

- endWith：后缀。',
                                    'type' => 'string',
                                    'example' => 'contains',
                                  ),
                                  'Name' => 
                                  array (
                                    'description' => '实例名称。',
                                    'type' => 'string',
                                    'example' => 'hostName',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"2170B94A-1576-4D65-900E-2093037CDAF3\\",\\n  \\"Success\\": true,\\n  \\"Resource\\": {\\n    \\"Resource\\": [\\n      {\\n        \\"Category\\": \\"ecs\\",\\n        \\"FilterRelation\\": \\"and\\",\\n        \\"Filters\\": {\\n          \\"Filter\\": [\\n            {\\n              \\"Value\\": \\"1\\",\\n              \\"Function\\": \\"contains\\",\\n              \\"Name\\": \\"hostName\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMonitorGroupDynamicRulesResponse>\\r\\n\\t<RequestId>38D0A8B4-7231-4E3E-A39F-D8CE3E242AC7</RequestId>\\r\\n\\t<Resource>\\r\\n\\t\\t<Resource>\\r\\n\\t\\t\\t<FilterRelation>and</FilterRelation>\\r\\n\\t\\t\\t<Filters>\\r\\n\\t\\t\\t\\t<Filter>\\r\\n\\t\\t\\t\\t\\t<Function>contains</Function>\\r\\n\\t\\t\\t\\t\\t<Value>1</Value>\\r\\n\\t\\t\\t\\t\\t<Name>hostName</Name>\\r\\n\\t\\t\\t\\t</Filter>\\r\\n\\t\\t\\t</Filters>\\r\\n\\t\\t\\t<Category>ecs</Category>\\r\\n\\t\\t</Resource>\\r\\n\\t</Resource>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeMonitorGroupDynamicRulesResponse>","errorExample":""}]',
      'title' => '查询指定应用分组的动态规则列表',
      'summary' => '调用DescribeMonitorGroupDynamicRules接口查询指定应用分组的动态规则列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMonitorGroupInstanceAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '123456',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页页码。

取值范围：1~1000000000。

默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示记录条数。

取值范围：1~1000000000。

默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'Total',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否返回指定应用分组内的资源总数。取值：

- true（默认值）：返回。

- false：不返回。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'Category',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务名称缩写。

关于如何获取云服务名称缩写，请参见[DescribeProjectMeta](~~114916~~)接口的返回参数`Labels`中的`metricCategory`。',
            'type' => 'string',
            'required' => false,
            'example' => 'ecs',
          ),
        ),
        5 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源的搜索关键字。',
            'type' => 'string',
            'required' => false,
            'example' => 'portal',
          ),
        ),
        6 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源ID。多个资源ID之间用半角逗号（,）分隔，最多支持20个资源。

',
            'type' => 'string',
            'required' => false,
            'example' => 'i-m5e0k0bexac8tykr****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9FB8EA79-7279-4482-8D6D-3D28EEDD871A',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '12',
              ),
              'Resources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Resource' => 
                  array (
                    'description' => '应用分组关联的资源。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceName' => 
                        array (
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => 'hostName',
                        ),
                        'Dimension' => 
                        array (
                          'description' => '应用分组关联资源的维度信息。',
                          'type' => 'string',
                          'example' => '{"instanceId":"i-m5e0k0bexac8tykr****"}',
                        ),
                        'Category' => 
                        array (
                          'description' => '云产品名称。',
                          'type' => 'string',
                          'example' => 'ecs',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'i-m5e0k0bexac8tykr****',
                        ),
                        'NetworkType' => 
                        array (
                          'description' => '网络类型。',
                          'type' => 'string',
                          'example' => 'vpc',
                        ),
                        'Desc' => 
                        array (
                          'description' => '资源描述信息。',
                          'type' => 'string',
                          'example' => 'desc_test',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '资源的标签。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'instanceNetworkType',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'VPC',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Region' => 
                        array (
                          'description' => '地域。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AvailabilityZone' => 
                            array (
                              'description' => '可用区。',
                              'type' => 'string',
                              'example' => 'cn-hangzhou-f',
                            ),
                            'RegionId' => 
                            array (
                              'description' => '地域ID。',
                              'type' => 'string',
                              'example' => 'cn-hangzhou',
                            ),
                          ),
                        ),
                        'Vpc' => 
                        array (
                          'description' => 'VPC实例的描述信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'VswitchInstanceId' => 
                            array (
                              'description' => 'Vswitch实例ID。',
                              'type' => 'string',
                              'example' => 'vsw-2ze36seq79n992****',
                            ),
                            'VpcInstanceId' => 
                            array (
                              'description' => 'VPC实例ID。',
                              'type' => 'string',
                              'example' => 'vpc-2zew7etgiceg21****',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9FB8EA79-7279-4482-8D6D-3D28EEDD871A\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 2,\\n  \\"Total\\": 12,\\n  \\"Resources\\": {\\n    \\"Resource\\": [\\n      {\\n        \\"InstanceName\\": \\"hostName\\",\\n        \\"Dimension\\": \\"{\\\\\\"instanceId\\\\\\":\\\\\\"i-m5e0k0bexac8tykr****\\\\\\"}\\",\\n        \\"Category\\": \\"ecs\\",\\n        \\"InstanceId\\": \\"i-m5e0k0bexac8tykr****\\",\\n        \\"NetworkType\\": \\"vpc\\",\\n        \\"Desc\\": \\"desc_test\\",\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"instanceNetworkType\\",\\n              \\"Value\\": \\"VPC\\"\\n            }\\n          ]\\n        },\\n        \\"Region\\": {\\n          \\"AvailabilityZone\\": \\"cn-hangzhou-f\\",\\n          \\"RegionId\\": \\"cn-hangzhou\\"\\n        },\\n        \\"Vpc\\": {\\n          \\"VswitchInstanceId\\": \\"vsw-2ze36seq79n992****\\",\\n          \\"VpcInstanceId\\": \\"vpc-2zew7etgiceg21****\\"\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMonitorGroupInstanceAttributeResponse>\\r\\n\\t<PageNumber>1</PageNumber>\\r\\n\\t<PageSize>30</PageSize>\\r\\n\\t<RequestId>7DB8DA3D-EDA6-46F8-9222-70C52416AE7D</RequestId>\\r\\n\\t<Success>true</Success>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Total>1</Total>\\r\\n\\t<Resources>\\r\\n\\t\\t<Resource>\\r\\n\\t\\t\\t<Vpc>\\r\\n\\t\\t\\t\\t<VswitchInstanceId>vsw-2ze36seq79n992****</VswitchInstanceId>\\r\\n\\t\\t\\t\\t<VpcInstanceId>vpc-2zew7etgiceg21****</VpcInstanceId>\\r\\n\\t\\t\\t</Vpc>\\r\\n\\t\\t\\t<Tags>\\r\\n\\t\\t\\t\\t<Tag>\\r\\n\\t\\t\\t\\t\\t<Value>12345</Value>\\r\\n\\t\\t\\t\\t\\t<Key>aliUid</Key>\\r\\n\\t\\t\\t\\t</Tag>\\r\\n\\t\\t\\t\\t<Tag>\\r\\n\\t\\t\\t\\t\\t<Value>26842</Value>\\r\\n\\t\\t\\t\\t\\t<Key>bid</Key>\\r\\n\\t\\t\\t\\t</Tag>\\r\\n\\t\\t\\t</Tags>\\r\\n\\t\\t\\t<NetworkType>VPC</NetworkType>\\r\\n\\t\\t\\t<Category>RDS</Category>\\r\\n\\t\\t\\t<Region>\\r\\n\\t\\t\\t\\t<RegionId>cn-hangzhou</RegionId>\\r\\n\\t\\t\\t\\t<AvailabilityZone>cn-hangzhou-MAZ8(f,g)</AvailabilityZone>\\r\\n\\t\\t\\t</Region>\\r\\n\\t\\t\\t<AliUid>127067667954****</AliUid>\\r\\n\\t\\t\\t<InstanceId>i-m5e0k0bexac8tykr****</InstanceId>\\r\\n\\t\\t\\t<Dimension>{\\\\\\"userId\\\\\\":\\\\\\"127067667954****\\\\\\",\\\\\\"instanceId\\\\\\":\\\\\\"rm-bp179a8xfaz4i****\\\\\\"}</Dimension>\\r\\n\\t\\t\\t<Desc>test_name</Desc>\\r\\n\\t\\t\\t<InstanceName>test_name</InstanceName>\\r\\n\\t\\t</Resource>\\r\\n\\t</Resources>\\r\\n</DescribeMonitorGroupInstanceAttributeResponse>","errorExample":""}]',
      'title' => '查询应用分组的资源详情',
      'summary' => '调用DescribeMonitorGroupInstanceAttribute接口查询应用分组的资源详情。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteMonitorGroupDynamicRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '123456',
          ),
        ),
        1 => 
        array (
          'name' => 'Category',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '动态规则对应的云产品类型，取值：ecs、rds、slb。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ecs',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '56B4516A-EB44-4C66-8854-0393B35F636B',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"56B4516A-EB44-4C66-8854-0393B35F636B\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteMonitorGroupDynamicRuleResponse>\\n    <RequestId>56B4516A-EB44-4C66-8854-0393B35F636B</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</DeleteMonitorGroupDynamicRuleResponse>","errorExample":""}]',
      'title' => '删除指定应用分组的动态规则',
      'summary' => '调用DeleteMonitorGroupDynamicRule接口删除指定应用分组的动态规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteMonitorGroupInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '123456',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceIdList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要删除的实例，多个实例之间用英文逗号分隔开。一次最多能够删除20个。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-a2d5q7pm3f912****,i-a2d5q7pm3f222****',
          ),
        ),
        2 => 
        array (
          'name' => 'Category',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品名称缩写。

> 关于如何获取云产品名称缩写，请参见[DescribeProjectMeta](~~114916~~)接口的返回参数`Labels`中的`metricCategory`。',
            'type' => 'string',
            'required' => true,
            'example' => 'ecs',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5351B0F2-26A9-4BC9-87FF-1B74034D12C3',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：表示成功。
- false：表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"5351B0F2-26A9-4BC9-87FF-1B74034D12C3\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteMonitorGroupInstancesResponse>\\n    <RequestId>C5C6924C-237E-40B2-9510-41BF8F671102</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</DeleteMonitorGroupInstancesResponse>","errorExample":""}]',
      'title' => '删除应用分组内的资源实例',
      'summary' => '调用DeleteMonitorGroupInstances接口删除应用分组内的资源实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMonitorGroupCategories' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9E0347B0-EBC3-4769-A78D-D96F21C6BB52',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'MonitorGroupCategories' => 
              array (
                'description' => '应用分组中资源的云服务类型。',
                'type' => 'object',
                'properties' => 
                array (
                  'GroupId' => 
                  array (
                    'description' => '应用分组ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '123456',
                  ),
                  'MonitorGroupCategory' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'CategoryItem' => 
                      array (
                        'description' => '应用分组的云服务类型。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '应用分组的云服务类型。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Count' => 
                            array (
                              'description' => '云服务的资源数量。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'Category' => 
                            array (
                              'description' => '云产品名称缩写。

> 关于如何获取云产品名称缩写，请参见[DescribeProjectMeta](~~114916~~)接口的返回参数`Labels`中的`metricCategory`。',
                              'type' => 'string',
                              'example' => 'ecs',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"9E0347B0-EBC3-4769-A78D-D96F21C6BB52\\",\\n  \\"Success\\": true,\\n  \\"MonitorGroupCategories\\": {\\n    \\"GroupId\\": 123456,\\n    \\"MonitorGroupCategory\\": {\\n      \\"CategoryItem\\": [\\n        {\\n          \\"Count\\": 1,\\n          \\"Category\\": \\"ecs\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMonitorGroupCategoriesResponse>\\r\\n\\t<RequestId>B7C9F725-E743-4F2E-81A2-4CC19783DC42</RequestId>\\r\\n\\t<MonitorGroupCategories>\\r\\n\\t\\t<MonitorGroupCategory>\\r\\n\\t\\t\\t<CategoryItem>\\r\\n\\t\\t\\t\\t<Category>ECS</Category>\\r\\n\\t\\t\\t\\t<Count>39</Count>\\r\\n\\t\\t\\t</CategoryItem>\\r\\n\\t\\t</MonitorGroupCategory>\\r\\n\\t\\t<GroupId>123456</GroupId>\\r\\n\\t</MonitorGroupCategories>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeMonitorGroupCategoriesResponse>","errorExample":""}]',
      'title' => '查询指定应用分组的资源列表和每个云服务的资源数量',
      'summary' => '调用DescribeMonitorGroupCategories接口查询指定应用分组的资源列表和每个云服务的资源数量。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutMonitorGroupDynamicRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '123456',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupRules',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'FilterRelation' => 
                array (
                  'description' => '动态报警规则的组合条件。N的取值范围：1~3。取值：

- and：满足所有报警规则的实例才会自动添加到应用分组。

- or：满足任意报警规则的实例都会自动添加到应用分组。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'and',
                ),
                'Filters' => 
                array (
                  'description' => '无。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '无。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Value' => 
                      array (
                        'description' => '满足报警条件的值。N的取值范围：1~3。',
                        'type' => 'string',
                        'required' => true,
                        'example' => 'nginx',
                      ),
                      'Name' => 
                      array (
                        'description' => '实例匹配的字段名称。N的取值范围：1~3。

目前仅支持主机名，例如：hostName。',
                        'type' => 'string',
                        'required' => true,
                        'example' => 'hostName',
                      ),
                      'Function' => 
                      array (
                        'description' => '实例的过滤条件。N的取值范围：1~3。取值：
- contains：包含。
- notContains：不包含。
- startWith：前缀。
- endWith：后缀。',
                        'type' => 'string',
                        'required' => true,
                        'example' => 'contains',
                      ),
                    ),
                    'required' => false,
                  ),
                  'required' => true,
                  'maxItems' => 10,
                ),
                'Category' => 
                array (
                  'description' => '动态报警规则的云服务类型。N的取值范围：1~3。取值：

- ecs：云服务器ECS。

- rds：关系型数据库。

- slb：负载均衡。

',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ecs',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
        2 => 
        array (
          'name' => 'IsAsync',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建动态报警规则的模式。取值：

- true：异步创建。
- false（默认值）：同步创建。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3E73F1AB-D195-438A-BCA7-2F4355789C58',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => 'OverLimit',
            'errorMessage' => 'Matched instances count was over limit',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"3E73F1AB-D195-438A-BCA7-2F4355789C58\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PutMonitorGroupDynamicRuleResponse>\\n\\t<RequestId>3E73F1AB-D195-438A-BCA7-2F4355789C58</RequestId>\\n\\t<Success>true</Success>\\n\\t<Code>200</Code>\\n</PutMonitorGroupDynamicRuleResponse>\\t","errorExample":""}]',
      'title' => '创建或修改按照实例名称动态匹配的应用分组',
      'summary' => '调用PutMonitorGroupDynamicRule接口创建或修改按照实例名称动态匹配的应用分组，满足匹配规则的所有实例自动添加到该应用分组中。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateGroupMonitoringAgentProcess' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。

关于如何获取应用分组ID，请参见[DescribeMonitorGroups](~~115032~~)。
',
            'type' => 'string',
            'required' => true,
            'example' => '3607****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProcessName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '进程名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'Process_Java',
          ),
        ),
        2 => 
        array (
          'name' => 'MatchExpressFilterRelation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '匹配实例的条件。取值：

- all：全部。
- and：与。
- or：或。',
            'type' => 'string',
            'required' => false,
            'example' => 'and',
          ),
        ),
        3 => 
        array (
          'name' => 'MatchExpress',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '匹配条件表达式列表。

N的取值范围：1~3。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '匹配条件表达式列表。

N的取值范围：1~3。',
              'type' => 'object',
              'properties' => 
              array (
                'Value' => 
                array (
                  'description' => '匹配实例名称。

N的取值范围：1~3。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'portalHost',
                ),
                'Name' => 
                array (
                  'description' => '匹配条件的类型。

N的取值范围：1~3。

>目前仅支持Name，即实例名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'name1',
                ),
                'Function' => 
                array (
                  'description' => '匹配条件。取值：
- all（默认值）：全部。
- startWith：前缀。
- endWith：后缀。
- contains：包含。
- notContains：不包含。
- equals：相等。

N的取值范围：1~3。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'startWith',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 3,
          ),
        ),
        4 => 
        array (
          'name' => 'AlertConfig',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '报警规则配置列表。

N的取值范围：1~3。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警规则配置列表。

N的取值范围：1~3。',
              'type' => 'object',
              'properties' => 
              array (
                'SilenceTime' => 
                array (
                  'description' => '通道沉默周期。单位：秒。最小值：3600秒（1小时），默认值：86400秒（1天）。

N的取值范围：1~3。

>当监控数据持续超过报警规则阈值时，每个沉默周期内只发送一次报警通知。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '86400',
                  'default' => '86400',
                ),
                'ComparisonOperator' => 
                array (
                  'description' => '阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。

N的取值范围：1~3。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Webhook' => 
                array (
                  'description' => '报警回调URL地址。

N的取值范围：1~3。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'https://www.aliyun.com',
                ),
                'Times' => 
                array (
                  'description' => '报警级别连续出现次数。默认：3次。

N的取值范围：1~3。

>只有当报警级别连续出现设定的次数且达到报警阈值才会触发报警。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '3',
                ),
                'EscalationsLevel' => 
                array (
                  'description' => '报警级别。取值：
- critical（默认值）：故障。
- warn：警告。
- info：信息。

N的取值范围：1~3。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'warn',
                ),
                'EffectiveInterval' => 
                array (
                  'description' => '报警规则的生效时间段。

N的取值范围：1~3。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '07:00-22:59',
                ),
                'NoEffectiveInterval' => 
                array (
                  'description' => '该参数已废弃，无需关注。',
                  'type' => 'string',
                  'required' => false,
                ),
                'Threshold' => 
                array (
                  'description' => '报警阈值。

N的取值范围：1~3。

单位：个。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '5',
                ),
                'Statistics' => 
                array (
                  'description' => '报警统计方式。

N的取值范围：1~3。

>目前仅支持Average。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Average',
                ),
                'TargetList' => 
                array (
                  'description' => '报警触发列表。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '报警触发列表。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Id' => 
                      array (
                        'description' => '报警触发目标ID。

关于如何获取报警触发目标ID，请参见[DescribeMetricRuleTargets](~~121592~~)。',
                        'type' => 'string',
                        'required' => false,
                        'example' => '1',
                      ),
                      'Arn' => 
                      array (
                        'description' => '资源ARN。

关于如何获取资源ARN，请参见[DescribeMetricRuleTargets](~~121592~~)。

资源ARN的格式为`acs:{云产品缩写}:{regionId}:{userId}:/{资源类型}/{资源名称}/message`。例如：`acs:mns:cn-hangzhou:120886317861****:/queues/test123/message`。参数说明如下：

- {云产品缩写}：目前仅支持消息服务MNS。

- {userId}：阿里云账号ID。

- {regionId}：消息队列或主题所在地域。

- {资源类型}：接收报警的资源类型。取值：
  
    - **queues**：队列。
    - **topics**：主题。

- {资源名称}：资源名称。

    - 如果资源类型为**queues**，则资源名称为队列名称。
    - 如果资源类型为**topics**，则资源名称为主题名称。



',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'acs:mns:cn-hangzhou:120886317861****:/queues/test/message',
                      ),
                      'Level' => 
                      array (
                        'description' => '报警级别。取值：

- INFO：信息。
- WARN：警告。
- CRITICAL：紧急。',
                        'type' => 'string',
                        'required' => false,
                        'example' => '["INFO", "WARN", "CRITICAL"]',
                      ),
                      'JsonParams' => 
                      array (
                        'description' => '报警回调的JSON格式参数。',
                        'type' => 'string',
                        'required' => false,
                        'example' => '{"customField1":"value1","customField2":"$.name"}',
                      ),
                    ),
                    'required' => false,
                  ),
                  'required' => false,
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 3,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '718FEA81-64C3-4F23-8F90-0531F7489FC1',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Resource' => 
              array (
                'description' => '组进程信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'GroupProcessId' => 
                  array (
                    'description' => '组进程ID。',
                    'type' => 'string',
                    'example' => '7F2B0024-4F21-48B9-A764-211CEC48****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"718FEA81-64C3-4F23-8F90-0531F7489FC1\\",\\n  \\"Success\\": true,\\n  \\"Resource\\": {\\n    \\"GroupProcessId\\": \\"7F2B0024-4F21-48B9-A764-211CEC48****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateGroupMonitoringAgentProcessResponse>\\n    <Code>200</Code>\\n    <RequestId>718FEA81-64C3-4F23-8F90-0531F7489FC1</RequestId>\\n    <Success>true</Success>\\n    <Resource>\\n        <GroupProcessId>7F2B0024-4F21-48B9-A764-211CEC48****</GroupProcessId>\\n    </Resource>\\n</CreateGroupMonitoringAgentProcessResponse>","errorExample":""}]',
      'title' => '创建组进程监控',
      'summary' => '调用CreateGroupMonitoringAgentProcess接口创建组进程监控。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyGroupMonitoringAgentProcess' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组内的进程监控任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => '92E3065F-0980-4E31-9AA0-BA6****',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => true,
            'example' => '6780****',
          ),
        ),
        2 => 
        array (
          'name' => 'MatchExpressFilterRelation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该参数已废弃，无需关注。',
            'type' => 'string',
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'AlertConfig',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '报警规则配置列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'SilenceTime' => 
                array (
                  'description' => '通道沉默周期。N的取值范围：1~200。

单位：秒。最小值：3600秒（1小时），默认值：86400秒（1天）。
>当监控数据持续超过报警规则阈值时，每个沉默周期内只发送一次报警通知。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '86400',
                ),
                'ComparisonOperator' => 
                array (
                  'description' => 'Critical级别阈值比较符。N的取值范围：1~200。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Webhook' => 
                array (
                  'description' => '报警发生时回调指定的URL地址，向URL发送POST请求。N的取值范围：1~200。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'http://www.aliyun.com',
                ),
                'Times' => 
                array (
                  'description' => '报警级别连续出现次数。N的取值范围：1~200。默认值：3。

>只有当报警级别连续出现设定的次数且达到报警阈值时，才会触发报警。

',
                  'type' => 'string',
                  'required' => true,
                  'example' => '3',
                ),
                'EscalationsLevel' => 
                array (
                  'description' => '报警的级别。N的取值范围：1~200。取值：
- critical（默认值）：故障。
- warn：警告。
- info：信息。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'warn',
                ),
                'EffectiveInterval' => 
                array (
                  'description' => '报警规则的生效时间段。N的取值范围：1~200。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '00:00-22:59',
                ),
                'NoEffectiveInterval' => 
                array (
                  'description' => '该参数已废弃，无需关注。',
                  'type' => 'string',
                  'required' => false,
                ),
                'Threshold' => 
                array (
                  'description' => '报警阈值。N的取值范围：1~200。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '5',
                ),
                'Statistics' => 
                array (
                  'description' => '报警统计方式。N的取值范围：1~200。

>目前仅支持Average。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Average',
                ),
                'TargetList' => 
                array (
                  'description' => '无。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '无。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Id' => 
                      array (
                        'description' => '报警触发目标ID。

关于如何获取报警触发目标ID，请参见[DescribeMetricRuleTargets](~~121592~~)。',
                        'type' => 'string',
                        'required' => false,
                        'example' => '1',
                      ),
                      'Arn' => 
                      array (
                        'description' => '资源ARN。

关于如何获取资源ARN，请参见[DescribeMetricRuleTargets](~~121592~~)。

资源ARN的格式为`acs:{云产品缩写}:{regionId}:{userId}:/{资源类型}/{资源名称}/message`。例如：`acs:mns:cn-hangzhou:120886317861****:/queues/test123/message`。参数说明如下：

- {云产品缩写}：目前仅支持消息服务MNS。

- {userId}：阿里云账号ID。

- {regionId}：消息队列或主题所在地域。

- {资源类型}：接收报警的资源类型。取值：

  - **queues**：队列。
  - **topics**：主题。

- {资源名称}：资源名称。

  - 如果资源类型为**queues**，则资源名称为队列名称。
  - 如果资源类型为**topics**，则资源名称为主题名称。',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'acs:mns:cn-hangzhou:120886317861****:/queues/test/message',
                      ),
                      'Level' => 
                      array (
                        'description' => '报警级别。取值：

- INFO：信息。
- WARN：警告。
- CRITICAL：紧急。',
                        'type' => 'string',
                        'required' => false,
                        'example' => '["INFO", "WARN", "CRITICAL"]',
                      ),
                      'JsonParams' => 
                      array (
                        'description' => '报警回调的JSON格式参数。',
                        'type' => 'string',
                        'required' => false,
                        'example' => '{"customField1":"value1","customField2":"$.name"}',
                      ),
                    ),
                    'required' => false,
                  ),
                  'required' => false,
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 3,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7985D471-3FA8-4EE9-8F4B-45C19DF3D36F',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"7985D471-3FA8-4EE9-8F4B-45C19DF3D36F\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ModifyGroupMonitoringAgentProcess>\\n\\t\\t<RequestId>7985D471-3FA8-4EE9-8F4B-45C19DF3D36F</RequestId>\\n\\t\\t<Success>true</Success>\\n\\t\\t<Code>200</Code>\\n</ModifyGroupMonitoringAgentProcess>","errorExample":""}]',
      'title' => '修改应用分组内的进程监控',
      'summary' => '调用ModifyGroupMonitoringAgentProcess接口修改应用分组内的进程监控。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteGroupMonitoringAgentProcess' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => true,
            'example' => '123456',
          ),
        ),
        1 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组进程ID。',
            'type' => 'string',
            'required' => true,
            'example' => '48F83746-C817-478C-9B06-7158F56B****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3F6150F9-45C7-43F9-9578-A58B2E726C90',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"3F6150F9-45C7-43F9-9578-A58B2E726C90\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteGroupMonitoringAgentProcessResponse>\\n\\t\\t<RequestId>7985D471-3FA8-4EE9-8F4B-45C19DF3D36F</RequestId>\\n\\t\\t<Success>true</Success>\\n\\t\\t<Code>200</Code>\\n</DeleteGroupMonitoringAgentProcessResponse>","errorExample":""}]',
      'title' => '删除组进程监控任务',
      'summary' => '调用DeleteGroupMonitoringAgentProcess接口删除组进程监控任务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGroupMonitoringAgentProcess' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => true,
            'example' => '12345',
          ),
        ),
        1 => 
        array (
          'name' => 'ProcessName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '进程名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'sshd',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小。默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '30',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7985D471-3FA8-4EE9-8F4B-45C19DF3D36F',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'PageNumber' => 
              array (
                'description' => '分页码。默认值：1。',
                'type' => 'string',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示记录条数。默认值：10。',
                'type' => 'string',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'string',
                'example' => '28',
              ),
              'Processes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Process' => 
                  array (
                    'description' => '进程任务列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '进程任务。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ProcessName' => 
                        array (
                          'description' => '进程名称。',
                          'type' => 'string',
                          'example' => 'sshd',
                        ),
                        'MatchExpressFilterRelation' => 
                        array (
                          'description' => '匹配实例的条件。取值：
- all：全部。
- and：与。
- or：或。',
                          'type' => 'string',
                          'example' => 'and',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '应用分组的ID。',
                          'type' => 'string',
                          'example' => '12345',
                        ),
                        'Id' => 
                        array (
                          'description' => '进程任务的ID。',
                          'type' => 'string',
                          'example' => '3F6150F9-45C7-43F9-9578-A58B2E72****',
                        ),
                        'MatchExpress' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'MatchExpress' => 
                            array (
                              'description' => '匹配条件。

>只有符合匹配条件的应用分组，实例才能被添加到对应的进程中。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '匹配条件。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Value' => 
                                  array (
                                    'description' => '匹配实例名称。',
                                    'type' => 'string',
                                    'example' => 'portalHost',
                                  ),
                                  'Name' => 
                                  array (
                                    'description' => '匹配条件的类型。

>目前仅支持`name`，即实例名称。',
                                    'type' => 'string',
                                    'example' => 'name',
                                  ),
                                  'Function' => 
                                  array (
                                    'description' => '匹配条件。取值：
- all（默认值）：全部。
- startWith：前缀。
- endWith：后缀。
- contains：包含。
- notContains：不包含。
- equals：相等。

>对于满足条件的规则，实例会添加对应的进程监控。',
                                    'type' => 'string',
                                    'example' => 'all',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'AlertConfig' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AlertConfig' => 
                            array (
                              'description' => '报警规则配置信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '报警规则配置信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'ComparisonOperator' => 
                                  array (
                                    'description' => 'Critical级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                                    'type' => 'string',
                                    'example' => 'GreaterThanOrEqualToThreshold',
                                  ),
                                  'SilenceTime' => 
                                  array (
                                    'description' => '通道沉默周期。单位：秒。最短：3600秒（1小时），默认值：86400秒（1天）。
>当监控数据持续超过报警规则阈值时，每个沉默周期内只发送一次报警通知。',
                                    'type' => 'string',
                                    'example' => '86400',
                                  ),
                                  'Webhook' => 
                                  array (
                                    'description' => '报警发生时回调指定的URL地址，向URL发送POST请求。',
                                    'type' => 'string',
                                    'example' => 'http://www.aliyun.com',
                                  ),
                                  'Times' => 
                                  array (
                                    'description' => '级别连续出现次数。

>只有当级别连续出现设定的次数且超过阈值时，才会触发报警。',
                                    'type' => 'string',
                                    'example' => '3',
                                  ),
                                  'EscalationsLevel' => 
                                  array (
                                    'description' => '报警的级别。取值：
- critical：故障。
- warn：警告。
- info：信息。',
                                    'type' => 'string',
                                    'example' => 'warn',
                                  ),
                                  'NoEffectiveInterval' => 
                                  array (
                                    'description' => '报警规则不生效时间段。',
                                    'type' => 'string',
                                    'example' => '00:00-23:59',
                                  ),
                                  'EffectiveInterval' => 
                                  array (
                                    'description' => '报警规则的生效时间段。',
                                    'type' => 'string',
                                    'example' => '00:00-23:59',
                                  ),
                                  'Threshold' => 
                                  array (
                                    'description' => '报警阈值。',
                                    'type' => 'string',
                                    'example' => '5',
                                  ),
                                  'Statistics' => 
                                  array (
                                    'description' => '报警统计方法。',
                                    'type' => 'string',
                                    'example' => 'Average',
                                  ),
                                  'TargetList' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Target' => 
                                      array (
                                        'description' => '报警触发目标列表。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '报警触发目标。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Id' => 
                                            array (
                                              'description' => '报警触发目标ID。',
                                              'type' => 'string',
                                              'example' => '123',
                                            ),
                                            'Arn' => 
                                            array (
                                              'description' => '资源ARN。格式为acs:{云产品缩写}:{regionId}:{userId}:/{资源类型}/{资源名称}/message。例如：acs:mns:cn-hangzhou:120886317861****:/queues/test123/message。参数说明如下：

- {云产品缩写}：目前仅支持消息服务MNS。
- {userId}：阿里云账号ID。
- {regionId}：消息队列或主题所在地域。
- {资源类型}：接收报警的资源类型。取值： 
  - **queues**：队列。 
  - **topics**：主题。 
- {资源名称}：资源名称。 
  - 如果资源类型为**queues**，则资源名称为队列名称。 
  - 如果资源类型为**topics**，则资源名称为主题名称。',
                                              'type' => 'string',
                                              'example' => 'acs:mns:cn-hangzhou:120886317861****:/queues/test/message',
                                            ),
                                            'Level' => 
                                            array (
                                              'description' => '报警级别。取值：

- INFO：信息。
- WARN：警告。
- CRITICAL：紧急。',
                                              'type' => 'string',
                                              'example' => 'CRITICAL',
                                            ),
                                            'JsonParmas' => 
                                            array (
                                              'description' => '报警回调的JSON格式参数。',
                                              'type' => 'string',
                                              'example' => '{"customField1":"value1","customField2":"$.name"}',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7985D471-3FA8-4EE9-8F4B-45C19DF3D36F\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"PageNumber\\": \\"1\\",\\n  \\"PageSize\\": \\"10\\",\\n  \\"Total\\": \\"28\\",\\n  \\"Processes\\": {\\n    \\"Process\\": [\\n      {\\n        \\"ProcessName\\": \\"sshd\\",\\n        \\"MatchExpressFilterRelation\\": \\"and\\",\\n        \\"GroupId\\": \\"12345\\",\\n        \\"Id\\": \\"3F6150F9-45C7-43F9-9578-A58B2E72****\\",\\n        \\"MatchExpress\\": {\\n          \\"MatchExpress\\": [\\n            {\\n              \\"Value\\": \\"portalHost\\",\\n              \\"Name\\": \\"name\\",\\n              \\"Function\\": \\"all\\"\\n            }\\n          ]\\n        },\\n        \\"AlertConfig\\": {\\n          \\"AlertConfig\\": [\\n            {\\n              \\"ComparisonOperator\\": \\"GreaterThanOrEqualToThreshold\\",\\n              \\"SilenceTime\\": \\"86400\\",\\n              \\"Webhook\\": \\"http://www.aliyun.com\\",\\n              \\"Times\\": \\"3\\",\\n              \\"EscalationsLevel\\": \\"warn\\",\\n              \\"NoEffectiveInterval\\": \\"00:00-23:59\\",\\n              \\"EffectiveInterval\\": \\"00:00-23:59\\",\\n              \\"Threshold\\": \\"5\\",\\n              \\"Statistics\\": \\"Average\\",\\n              \\"TargetList\\": {\\n                \\"Target\\": [\\n                  {\\n                    \\"Id\\": \\"123\\",\\n                    \\"Arn\\": \\"acs:mns:cn-hangzhou:120886317861****:/queues/test/message\\",\\n                    \\"Level\\": \\"CRITICAL\\",\\n                    \\"JsonParmas\\": \\"{\\\\\\"customField1\\\\\\":\\\\\\"value1\\\\\\",\\\\\\"customField2\\\\\\":\\\\\\"$.name\\\\\\"}\\"\\n                  }\\n                ]\\n              }\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeGroupMonitoringAgentProcess>\\r\\n\\t\\t<RequestId>7985D471-3FA8-4EE9-8F4B-45C19DF3D36F</RequestId>\\r\\n\\t\\t<PageSize>10</PageSize>\\r\\n\\t\\t<PageNumber>1</PageNumber>\\r\\n\\t\\t<Total>28</Total>\\r\\n\\t\\t<Processes>\\r\\n\\t\\t\\t<Process>\\r\\n\\t\\t\\t\\t<ProcessName>sshd</ProcessName>\\r\\n\\t\\t\\t\\t<MatchExpressFilterRelation>and</MatchExpressFilterRelation>\\r\\n\\t\\t\\t\\t<Id>3F6150F9-45C7-43F9-9578-A58B2E72****</Id>\\r\\n\\t\\t\\t\\t<GroupId>12345</GroupId>\\r\\n\\t\\t\\t</Process>\\r\\n\\t\\t\\t<Process>\\r\\n\\t\\t\\t\\t<AlertConfig>\\r\\n\\t\\t\\t\\t\\t<AlertConfig>\\r\\n\\t\\t\\t\\t\\t\\t<Function>all</Function>\\r\\n\\t\\t\\t\\t\\t\\t<Value>portalHost</Value>\\r\\n\\t\\t\\t\\t\\t\\t<Name>name</Name>\\r\\n\\t\\t\\t\\t\\t</AlertConfig>\\r\\n\\t\\t\\t\\t\\t<AlertConfig>\\r\\n\\t\\t\\t\\t\\t\\t<NoEffectiveInterval>00:00-23:59</NoEffectiveInterval>\\r\\n\\t\\t\\t\\t\\t\\t<SilenceTime>86400</SilenceTime>\\r\\n\\t\\t\\t\\t\\t\\t<ComparisonOperator>GreaterThanOrEqualToThreshold</ComparisonOperator>\\r\\n\\t\\t\\t\\t\\t\\t<Times>3</Times>\\r\\n\\t\\t\\t\\t\\t\\t<Webhook>http://www.aliyun.com</Webhook>\\r\\n\\t\\t\\t\\t\\t\\t<EffectiveInterval>00:00-23:59</EffectiveInterval>\\r\\n\\t\\t\\t\\t\\t\\t<EscalationsLevel>warn</EscalationsLevel>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>5</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertConfig>\\r\\n\\t\\t\\t\\t</AlertConfig>\\r\\n\\t\\t\\t\\t<MatchExpress>\\r\\n\\t\\t\\t\\t\\t<MatchExpress>\\r\\n\\t\\t\\t\\t\\t\\t<Function>all</Function>\\r\\n\\t\\t\\t\\t\\t\\t<Value>portalHost</Value>\\r\\n\\t\\t\\t\\t\\t\\t<Name>name</Name>\\r\\n\\t\\t\\t\\t\\t</MatchExpress>\\r\\n\\t\\t\\t\\t\\t<MatchExpress>\\r\\n\\t\\t\\t\\t\\t\\t<NoEffectiveInterval>00:00-23:59</NoEffectiveInterval>\\r\\n\\t\\t\\t\\t\\t\\t<SilenceTime>86400</SilenceTime>\\r\\n\\t\\t\\t\\t\\t\\t<ComparisonOperator>GreaterThanOrEqualToThreshold</ComparisonOperator>\\r\\n\\t\\t\\t\\t\\t\\t<Times>3</Times>\\r\\n\\t\\t\\t\\t\\t\\t<Webhook>http://www.aliyun.com</Webhook>\\r\\n\\t\\t\\t\\t\\t\\t<EffectiveInterval>00:00-23:59</EffectiveInterval>\\r\\n\\t\\t\\t\\t\\t\\t<EscalationsLevel>warn</EscalationsLevel>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>5</Threshold>\\r\\n\\t\\t\\t\\t\\t</MatchExpress>\\r\\n\\t\\t\\t\\t</MatchExpress>\\r\\n\\t\\t\\t</Process>\\r\\n\\t\\t</Processes>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Success>true</Success>\\r\\n</DescribeGroupMonitoringAgentProcess>\\r\\n","errorExample":""}]',
      'title' => '获取组进程监控任务列表',
      'summary' => '调用DescribeGroupMonitoringAgentProcess接口获取组进程监控任务列表。',
      'description' => '组进程监控用于为组内的所有ECS实例或满足条件的ECS实例同时添加一个进程监控并设置报警规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateMonitorGroupNotifyPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PolicyType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '暂停通知类型。目前仅支持PauseNotify。',
            'type' => 'string',
            'required' => true,
            'example' => 'PauseNotify',
            'enum' => 
            array (
              0 => 'PauseNotify',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => true,
            'example' => '7301****',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '暂停通知的开始时间戳。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1622949300000',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '暂停通知的结束时间戳。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1623208500000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '13356BCA-3EC3-4748-A771-2064DA69AEF1',
              ),
              'Result' => 
              array (
                'description' => '返回创建的结果数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        204 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error. ',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"13356BCA-3EC3-4748-A771-2064DA69AEF1\\",\\n  \\"Result\\": 1,\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateMonitorGroupNotifyPolicyResponse>\\n\\t\\t<RequestId>13356BCA-3EC3-4748-A771-2064DA69AEF1</RequestId>\\n\\t\\t<Result>1</Result>\\n\\t\\t<Success>true</Success>\\n\\t\\t<Code>200</Code>\\n</CreateMonitorGroupNotifyPolicyResponse>","errorExample":""}]',
      'title' => '为应用分组创建暂停报警通知策略',
      'summary' => '调用CreateMonitorGroupNotifyPolicy接口为应用分组创建暂停报警通知策略。',
      'description' => '在策略的生效期间内，应用分组内发生的所有报警都不再发送通知。
 
本文将提供一个示例，为应用分组`7301****`创建暂停报警通知策略`PauseNotify`，该应用分组将在`1622949300000`至`1623208500000`（北京时间`2021-06-06 11:15:00`至`2021-06-09 11:15:00`）期间暂停报警。      ',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'extraInfo' => ' ',
    ),
    'DeleteMonitorGroupNotifyPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PolicyType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '暂停通知类型。

目前仅支持PauseNotify。',
            'type' => 'string',
            'required' => true,
            'example' => 'PauseNotify',
            'enum' => 
            array (
              0 => 'PauseNotify',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '6780****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B7AF834D-D38B-4A46-920B-FE974EB7E135',
              ),
              'Result' => 
              array (
                'description' => '影响行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error. ',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"B7AF834D-D38B-4A46-920B-FE974EB7E135\\",\\n  \\"Result\\": 1,\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteMonitorGroupNotifyPolicyResponse>\\n    <Result>1</Result>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</DeleteMonitorGroupNotifyPolicyResponse>","errorExample":""}]',
      'title' => '删除暂停指定应用分组报警通知策略',
      'summary' => '调用DeleteMonitorGroupNotifyPolicy接口删除暂停指定应用分组报警通知策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMonitorGroupNotifyPolicyList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PolicyType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '暂停通知类型。

目前仅支持PauseNotify。',
            'type' => 'string',
            'required' => true,
            'example' => 'PauseNotify',
            'enum' => 
            array (
              0 => 'PauseNotify',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录条数。默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '100',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '6780****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6072F026-C441-41A6-B114-35A1E8F8FDD3',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '11',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'NotifyPolicyList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'NotifyPolicy' => 
                  array (
                    'description' => '暂停通知列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EndTime' => 
                        array (
                          'description' => '结束时间戳。

单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1551761781273',
                        ),
                        'Type' => 
                        array (
                          'description' => '禁用类型。',
                          'type' => 'string',
                          'example' => 'PauseNotify',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '开始时间戳。

单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1551761781273',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '应用分组ID。',
                          'type' => 'string',
                          'example' => '6780****',
                        ),
                        'Id' => 
                        array (
                          'description' => '暂停通知ID。',
                          'type' => 'string',
                          'example' => '123****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        204 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error. ',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"6072F026-C441-41A6-B114-35A1E8F8FDD3\\",\\n  \\"Total\\": 11,\\n  \\"Success\\": \\"true\\",\\n  \\"NotifyPolicyList\\": {\\n    \\"NotifyPolicy\\": [\\n      {\\n        \\"EndTime\\": 1551761781273,\\n        \\"Type\\": \\"PauseNotify\\",\\n        \\"StartTime\\": 1551761781273,\\n        \\"GroupId\\": \\"6780****\\",\\n        \\"Id\\": \\"123****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMonitorGroupNotifyPolicyListResponse>\\n  <NotifyPolicyList>\\n        <NotifyPolicy>\\n            <Type>PauseNotify</Type>\\n            <EndTime>1551763581273</EndTime>\\n            <Id>123****</Id>\\n            <StartTime>1551761781273</StartTime>\\n            <GroupId>6780****</GroupId>\\n        </NotifyPolicy>\\n    </NotifyPolicyList>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n    <Total>1</Total>\\n</DescribeMonitorGroupNotifyPolicyListResponse>","errorExample":""}]',
      'title' => '查询应用分组的报警通知暂停策略列表',
      'summary' => '调用DescribeMonitorGroupNotifyPolicyList接口查询应用分组的报警通知暂停策略列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddTags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。

N的取值范围：1~3。Key的取值范围：1~64个字符。

您可以输入新标签键，也可以使用云监控已存在的标签键。关于如何获取标签键，请参见[DescribeTagKeyList](~~145558~~)。

> Key不能以`aliyun`和`acs:`开头，且标签键（`Tag.N.Key`）和标签值（`Tag.N.Value`）必须同时设置。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'key1',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

N的取值范围：1~3。Value的取值范围：1~64个字符。

您可以输入新标签值，也可以使用云监控已存在的标签值。关于如何获取标签值，请参见[DescribeTagValueList](~~145557~~)。

> Value不能以`aliyun`和`acs:`开头，且标签键（`Tag.N.Key`）和标签值（`Tag.N.Value`）必须同时设置。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'value1',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 3,
          ),
        ),
        1 => 
        array (
          'name' => 'GroupIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '应用分组ID。

N的取值范围：1~20。

关于如何获取应用分组ID，请参见[DescribeMonitorGroups](~~115032~~)。


',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => true,
            'example' => '7301****',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DAE4B115-3847-5438-8709-423627F0A3A3',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"DAE4B115-3847-5438-8709-423627F0A3A3\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<AddTagsResponse>\\r\\n\\t<RequestId>DAE4B115-3847-5438-8709-423627F0A3A3</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</AddTagsResponse>\\t","errorExample":""}]',
      'title' => '为指定应用分组绑定标签',
      'summary' => '调用AddTags接口为指定应用分组绑定标签。',
      'description' => '本文将提供一个示例，为应用分组`7301****`绑定一个标签，其中标签键为`key1`，标签值为`value1`。',
      'requestParamsDescription' => ' 关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateDynamicTagGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TagKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源的标签键。

关于如何查询资源的标签键，请参见[DescribeTagKeyList](~~145558~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'ecs_instance',
          ),
        ),
        1 => 
        array (
          'name' => 'ContactGroupList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警联系组。N的取值范围：1~100。应用分组的报警通知会发送给该报警联系组中的报警联系人。

报警联系组是一组报警联系人，可以包含一个或多个报警联系人。关于如何创建报警联系人和报警联系组，请参见[PutContact](~~114923~~)和[PutContactGroup](~~114929~~)。关于如何获取报警联系组，请参见[DescribeContactGroupList](~~114922~~)。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警联系组。N的取值范围：1~100。应用分组的报警通知会发送给该报警联系组中的报警联系人。

报警联系组是一组报警联系人，可以包含一个或多个报警联系人。关于如何创建报警联系人和报警联系组，请参见[PutContact](~~114923~~)和[PutContactGroup](~~114929~~)。关于如何获取报警联系组，请参见[DescribeContactGroupList](~~114922~~)。',
              'type' => 'string',
              'required' => false,
              'docRequired' => true,
              'example' => 'ECS_Group',
            ),
            'required' => true,
            'docRequired' => true,
            'example' => 'ECS_Group',
            'maxItems' => 10,
          ),
        ),
        2 => 
        array (
          'name' => 'MatchExpress',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签生成应用分组的匹配表达式。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签生成应用分组的匹配表达式。',
              'type' => 'object',
              'properties' => 
              array (
                'TagValueMatchFunction' => 
                array (
                  'description' => '资源标签值的匹配方法。N的取值为1。取值：
- contains：包含。
- startWith：前缀。
- endWith：后缀。
- notContains：不包含。
- equals：等于。
- all：全部。

> 参数`MatchExpress.N.TagValueMatchFunction`和`MatchExpress.N.TagValue`必须同时设置。

',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'contains',
                ),
                'TagValue' => 
                array (
                  'description' => '资源标签值。N取值为1。

> 参数`MatchExpress.N.TagValueMatchFunction`和`MatchExpress.N.TagValue`必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'instance',
                ),
                'TagName' => 
                array (
                  'description' => '用来创建分组的Tag的Key。如果包含此Key的资源有多个，那么会根据过滤条件，把符合的资源按相同的Key-Value，添加到相同的分组内。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'appname',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 3,
          ),
        ),
        3 => 
        array (
          'name' => 'TagRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签归属的地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'EnableSubscribeEvent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组是否开启自动订阅事件通知。当应用分组内资源发生严重和警告级别的事件时，云监控发送报警通知。取值：

- true：开启。

- false（默认值）：关闭。

',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'EnableInstallAgent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组是否开启自动安装云监控插件。云监控自动为应用分组内的主机安装云监控插件。取值：

- true：开启。

- false（默认值）：关闭。


',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'MatchExpressFilterRelation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源标签值的条件表达式之间的关系。取值：

- and（默认值）：和。
- or：或。
',
            'type' => 'string',
            'required' => false,
            'example' => 'and',
            'default' => 'and',
          ),
        ),
        7 => 
        array (
          'name' => 'TemplateIdList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警模板ID。

关于如何查询报警模板ID，请参见[DescribeMetricRuleTemplateList](~~114982~~)。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警模板ID。

关于如何查询报警模板ID，请参见[DescribeMetricRuleTemplateList](~~114982~~)。',
              'type' => 'string',
              'required' => false,
              'example' => '70****',
            ),
            'required' => false,
            'example' => '85****',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
> 200表示成功。
',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '84AC6F0B-7945-466A-AA44-99BB5A561F86',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Id' => 
              array (
                'description' => '标签匹配规则ID。',
                'type' => 'string',
                'example' => '2534dc0a-e3e5-4ae1-a2fc-75ef166c****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceOverLimit',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"84AC6F0B-7945-466A-AA44-99BB5A561F86\\",\\n  \\"Success\\": true,\\n  \\"Id\\": \\"2534dc0a-e3e5-4ae1-a2fc-75ef166c****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateDynamicTagGroupResponse>\\r\\n\\t<RequestId>84AC6F0B-7945-466A-AA44-99BB5A561F86</RequestId>\\r\\n\\t<Id>2534dc0a-e3e5-4ae1-a2fc-75ef166c****</Id>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</CreateDynamicTagGroupResponse>\\t","errorExample":""}]',
      'title' => '通过标签自动创建应用分组',
      'summary' => '调用CreateDynamicTagGroup接口通过标签自动创建应用分组。',
      'description' => '本接口支持的云服务包括：云服务器ECS、云数据库RDS和负载均衡SLB。

本文将提供一个示例，为绑定了标签键`ecs_instance`的资源自动创建应用分组，应用分组的报警联系组为`ECS_Group`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDynamicTagGroup' => 
    array (
      'summary' => '调用DeleteDynamicTagGroup接口删除智能标签规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DynamicTagRuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能标签规则ID。

关于如何获取智能标签ID，请参见[DescribeDynamicTagRuleList](~~150126~~)。

',
            'type' => 'string',
            'required' => true,
            'example' => '6b882d9a-5117-42e2-9d0c-4749a0c6****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '08AAE67E-77B5-485B-9C79-D7C8C059150A',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"08AAE67E-77B5-485B-9C79-D7C8C059150A\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteDynamicTagGroupResponse>\\n    <RequestId>08AAE67E-77B5-485B-9C79-D7C8C059150A</RequestId>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</DeleteDynamicTagGroupResponse>","errorExample":""}]',
      'title' => '删除智能标签规则',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeTagValueList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

起始值：1，默认值：1。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页时每页显示的数据行数。

取值范围：1~100。起始值：1。默认值：50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '100',
          ),
        ),
        2 => 
        array (
          'name' => 'TagKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签键。

关于如何获取标签键，请参见[DescribeTagKeyList](~~145558~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'tagKey1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B04B8CF3-4489-432D-83BA-6F128E4F2295',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TagValues' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TagValue' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标签值列表。',
                      'type' => 'string',
                      'example' => '["tagValue1", "tagValue2"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"B04B8CF3-4489-432D-83BA-6F128E4F2295\\",\\n  \\"Success\\": true,\\n  \\"TagValues\\": {\\n    \\"TagValue\\": [\\n      \\"[\\\\\\"tagValue1\\\\\\", \\\\\\"tagValue2\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeTagValueListResponse>\\r\\n\\t<RequestId>9AF637BA-6617-41FE-A0FA-3301521377A4</RequestId>\\r\\n\\t<TagValues>\\r\\n\\t\\t<TagValue>tagValue1</TagValue>\\r\\n\\t\\t<TagValue>tagValue2</TagValue>\\r\\n\\t</TagValues>\\r\\n\\t<Success>true</Success>\\r\\n\\t<Code>200</Code>\\r\\n</DescribeTagValueListResponse>\\t","errorExample":""}]',
      'title' => '查询指定标签键对应的标签值列表',
      'summary' => '调用DescribeTagValueList接口查询指定标签键对应的标签值列表。',
      'description' => '本文将提供一个示例，查询标签键`tagKey1`对应的标签值列表，返回结果显示标签值为`tagValue1`和`tagValue2`。',
      'requestParamsDescription' => ' 关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeTagKeyList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签列表的页码。

起始值：1，默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数。

最大值：100，默认值：50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Specified parameter PageSize is not valid.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B04B8CF3-4489-432D-83BA-6F128E5F2293',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TagKeys' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TagKey' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '符合条件的标签键列表。',
                      'type' => 'string',
                      'example' => 'tagKey1',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Specified parameter PageSize is not valid.\\",\\n  \\"RequestId\\": \\"B04B8CF3-4489-432D-83BA-6F128E5F2293\\",\\n  \\"Success\\": true,\\n  \\"TagKeys\\": {\\n    \\"TagKey\\": [\\n      \\"tagKey1\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeTagKeyListResponse>\\n\\t<TagKeys>\\n\\t\\t<TagKey>tagKey1</TagKey>\\n\\t\\t<TagKey>tagKey2</TagKey>\\n\\t</TagKeys>\\n\\t<RequestId>FA9A8612-C770-4264-8A9C-C90F0081B4F5</RequestId>\\n\\t<Success>true</Success>\\n\\t<Code>200</Code>\\n</DescribeTagKeyListResponse>\\t","errorExample":""}]',
      'title' => '查询标签键列表',
      'summary' => '调用DescribeTagKeyList接口查询标签键列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeProductResourceTagKeyList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页游标标识。',
            'type' => 'string',
            'required' => false,
            'example' => 'dbc2826f237e****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The request processing has failed due to some unknown error.',
              ),
              'NextToken' => 
              array (
                'description' => '分页游标，如果有下一页，则该字段有返回值。
>该参数只要返回数据，则说明还有下一页。您可以将返回的NextToken作为请求参数再次获得下一页的数据，直到返回为Null，表示获取到了所有的数据。',
                'type' => 'string',
                'example' => 'dbc2826f237e****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '945ACAA9-89F2-4A62-8913-076FDEDAA8DB',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TagKeys' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TagKey' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '标签键列表。',
                      'type' => 'string',
                      'example' => 'tagKey1',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The request processing has failed due to some unknown error.\\",\\n  \\"NextToken\\": \\"dbc2826f237e****\\",\\n  \\"RequestId\\": \\"945ACAA9-89F2-4A62-8913-076FDEDAA8DB\\",\\n  \\"Success\\": true,\\n  \\"TagKeys\\": {\\n    \\"TagKey\\": [\\n      \\"tagKey1\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeProductResourceTagKeyList>\\n\\t\\t<NextToken>dbc2826f237e****</NextToken>\\n\\t\\t<TagKeys>\\n\\t\\t\\t<TagKey>tagKey1</TagKey>\\n\\t\\t</TagKeys>\\n\\t\\t<RequestId>945ACAA9-89F2-4A62-8913-076FDEDAA8DB</RequestId>\\n\\t\\t<Success>true</Success>\\n\\t\\t<Code>200</Code>\\n</DescribeProductResourceTagKeyList>","errorExample":""}]',
      'title' => '获取对应地域下云资源的所有标签键列表',
      'summary' => '调用DescribeProductResourceTagKeyList接口获取对应地域下云资源的所有标签键列表。',
      'description' => '>标签键列表中不包含重复值。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDynamicTagRuleList' => 
    array (
      'summary' => '调用DescribeDynamicTagRuleList接口查询智能标签的规则列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TagRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签归属的地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'TagKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签键。

关于如何获取标签键，请参见[DescribeTagKeyList](~~145558~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'tagkey1',
          ),
        ),
        2 => 
        array (
          'name' => 'TagValue',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签值。

关于如何获取标签值，请参见[DescribeTagValueList](~~145557~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '*',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

起始值：1。默认值：1。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页时每页显示的数据行数。

起始值：1。默认值：30。',
            'type' => 'string',
            'required' => false,
            'example' => '30',
          ),
        ),
        5 => 
        array (
          'name' => 'DynamicTagRuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能标签规则ID。',
            'type' => 'string',
            'required' => false,
            'example' => '004155fa-15ba-466d-b61a-***********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0D50523D-8D59-4A61-B58E-E2286ECFB3A9',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'PageSize' => 
              array (
                'description' => '分页时每页显示的数据行数。',
                'type' => 'string',
                'example' => '30',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'string',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => '标签列表的条目总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'TagGroupList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TagGroup' => 
                  array (
                    'description' => '应用分组的规则列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '应用分组的规则。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '标签同步到应用分组的状态。
- `RUNNING`：进行中。
- `FINISH`：已完成。',
                          'type' => 'string',
                          'example' => 'FINISH',
                        ),
                        'MatchExpressFilterRelation' => 
                        array (
                          'description' => '条件表达式之间的关系。取值：

- `and`：和。
- `or`：或。

> 目前仅支持一种组合条件。',
                          'type' => 'string',
                          'example' => 'or',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '资源所属的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'tagkey1',
                        ),
                        'DynamicTagRuleId' => 
                        array (
                          'description' => '标签规则ID。',
                          'type' => 'string',
                          'example' => '1536df65-a719-429d-8813-73cc40d7****',
                        ),
                        'MatchExpress' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'MatchExpress' => 
                            array (
                              'description' => '标签生成应用分组的匹配表达式。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签生成应用分组的匹配表达式。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TagValue' => 
                                  array (
                                    'description' => '标签值。

`TagValue`和`TagValueMatchFunction`配合使用。',
                                    'type' => 'string',
                                    'example' => '*',
                                  ),
                                  'TagValueMatchFunction' => 
                                  array (
                                    'description' => '标签值的匹配方法。取值：
- all：全部。                        
- startWith：前缀。
- endWith：后缀。
- contains：包含。
- notContains：不包含。
- equals：相等。',
                                    'type' => 'string',
                                    'example' => 'all',
                                  ),
                                  'TagKey' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'azone-version',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'TemplateIdList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TemplateIdList' => 
                            array (
                              'description' => '报警模板ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '报警模板ID。',
                                'type' => 'string',
                                'example' => '71****',
                              ),
                            ),
                          ),
                        ),
                        'ContactGroupList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ContactGroupList' => 
                            array (
                              'description' => '报警联系组列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '报警联系组。',
                                'type' => 'string',
                                'example' => 'CloudMonitor',
                              ),
                            ),
                          ),
                        ),
                        'TagValueBlacklist' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TagValueBlacklist' => 
                            array (
                              'description' => '动态规则不处理的TagValue。当用户删除动态Tag分组的时候，分组对应的TagValue会添加到黑名单；在之后有新的资源新增此TagValue时，不会创建对应的分组。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'string',
                                'example' => '某个标签的值，例如：test，offline等。',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0D50523D-8D59-4A61-B58E-E2286ECFB3A9\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"PageSize\\": \\"30\\",\\n  \\"PageNumber\\": \\"1\\",\\n  \\"Total\\": 2,\\n  \\"TagGroupList\\": {\\n    \\"TagGroup\\": [\\n      {\\n        \\"Status\\": \\"FINISH\\",\\n        \\"MatchExpressFilterRelation\\": \\"or\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"TagKey\\": \\"tagkey1\\",\\n        \\"DynamicTagRuleId\\": \\"1536df65-a719-429d-8813-73cc40d7****\\",\\n        \\"MatchExpress\\": {\\n          \\"MatchExpress\\": [\\n            {\\n              \\"TagValue\\": \\"*\\",\\n              \\"TagValueMatchFunction\\": \\"all\\",\\n              \\"TagKey\\": \\"azone-version\\"\\n            }\\n          ]\\n        },\\n        \\"TemplateIdList\\": {\\n          \\"TemplateIdList\\": [\\n            \\"71****\\"\\n          ]\\n        },\\n        \\"ContactGroupList\\": {\\n          \\"ContactGroupList\\": [\\n            \\"CloudMonitor\\"\\n          ]\\n        },\\n        \\"TagValueBlacklist\\": {\\n          \\"TagValueBlacklist\\": [\\n            \\"某个标签的值，例如：test，offline等。\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeDynamicTagRuleListResponse>\\r\\n\\t<PageSize>30</PageSize>\\r\\n\\t<PageNumber>1</PageNumber>\\r\\n\\t<Total>2</Total>\\r\\n\\t<TagGroupList>\\r\\n\\t\\t<TagGroup>\\r\\n\\t\\t\\t<Status>FINISH</Status>\\r\\n\\t\\t\\t<ContactGroupList>\\r\\n\\t\\t\\t\\t<ContactGroupList>CloudMonitor</ContactGroupList>\\r\\n\\t\\t\\t</ContactGroupList>\\r\\n\\t\\t\\t<MatchExpressFilterRelation>or</MatchExpressFilterRelation>\\r\\n\\t\\t\\t<DynamicTagRuleId>1536df65-a719-429d-8813-73cc40d7****</DynamicTagRuleId>\\r\\n\\t\\t\\t<TemplateIdList>\\r\\n\\t\\t\\t\\t<TemplateIdList>71****</TemplateIdList>\\r\\n\\t\\t\\t</TemplateIdList>\\r\\n\\t\\t\\t<TagKey>tagkey1</TagKey>\\r\\n\\t\\t\\t<MatchExpress>\\r\\n\\t\\t\\t\\t<MatchExpress>\\r\\n\\t\\t\\t\\t\\t<TagValue>*</TagValue>\\r\\n\\t\\t\\t\\t\\t<TagValueMatchFunction>all</TagValueMatchFunction>\\r\\n\\t\\t\\t\\t</MatchExpress>\\r\\n\\t\\t\\t</MatchExpress>\\r\\n\\t\\t\\t<RegionId>cn-hangzhou</RegionId>\\r\\n\\t\\t</TagGroup>\\r\\n\\t\\t<TagGroup>\\r\\n\\t\\t\\t<Status>FINISH</Status>\\r\\n\\t\\t\\t<ContactGroupList>\\r\\n\\t\\t\\t\\t<ContactGroupList>CloudMonitor</ContactGroupList>\\r\\n\\t\\t\\t</ContactGroupList>\\r\\n\\t\\t\\t<MatchExpressFilterRelation>or</MatchExpressFilterRelation>\\r\\n\\t\\t\\t<DynamicTagRuleId>56e8cebb-b3d7-4a91-9880-78a8c84f****</DynamicTagRuleId>\\r\\n\\t\\t\\t<TemplateIdList>\\r\\n\\t\\t\\t\\t<TemplateIdList>71****</TemplateIdList>\\r\\n\\t\\t\\t</TemplateIdList>\\r\\n\\t\\t\\t<TagKey>tagkey1</TagKey>\\r\\n\\t\\t\\t<MatchExpress>\\r\\n\\t\\t\\t\\t<MatchExpress>\\r\\n\\t\\t\\t\\t\\t<TagValue>*</TagValue>\\r\\n\\t\\t\\t\\t\\t<TagValueMatchFunction>all</TagValueMatchFunction>\\r\\n\\t\\t\\t\\t</MatchExpress>\\r\\n\\t\\t\\t</MatchExpress>\\r\\n\\t\\t\\t<RegionId>cn-hangzhou</RegionId>\\r\\n\\t\\t</TagGroup>\\r\\n\\t</TagGroupList>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeDynamicTagRuleListResponse>\\t","errorExample":""}]',
      'title' => '查询智能标签的规则列表',
      'description' => '本文将提供一个示例，查找标签键`tagkey1`的规则列表。返回结果显示，共有2条规则，规则ID分别为`1536df65-a719-429d-8813-73cc40d7****`和`56e8cebb-b3d7-4a91-9880-78a8c84f****`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RemoveTags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。
> 标签键（`Tag.N.Key`）和标签值（`Tag.N.Value`）需要同时设置。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Key1',
                ),
                'Value' => 
                array (
                  'description' => '标签值。
> 标签键（`Tag.N.Key`）和标签值（`Tag.N.Value`）需要同时设置。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Value1',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10,
          ),
        ),
        1 => 
        array (
          'name' => 'GroupIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => true,
            'example' => '12345',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Illegal parameters.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '195390D2-69D0-4D9E-81AA-A7F5BC1B91EB',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Tag' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Tags' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '被删除的标签列表。',
                      'type' => 'string',
                      'example' => 'tag1',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Illegal parameters.\\",\\n  \\"RequestId\\": \\"195390D2-69D0-4D9E-81AA-A7F5BC1B91EB\\",\\n  \\"Success\\": true,\\n  \\"Tag\\": {\\n    \\"Tags\\": [\\n      \\"tag1\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RemoveTagsResponse>\\n\\t\\t<RequestId>E15C718E-067E-49D0-86F7-BC7242230091</RequestId>\\n\\t\\t<Code>200</Code>\\n\\t\\t<Success>true</Success>\\n</RemoveTagsResponse>","errorExample":""}]',
      'title' => '删除标签',
      'summary' => '调用RemoveTags接口删除标签。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateHostAvailability' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '123456',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可用性监控任务名称。取值范围：4~100个字符，支持英文字母、数字、下划线（_）和汉字。',
            'type' => 'string',
            'required' => true,
            'example' => 'task1',
          ),
        ),
        2 => 
        array (
          'name' => 'TaskScope',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可用性监控任务的探测范围。取值：

- GROUP：表示将当前应用分组内的所有ECS实例作为探测任务的探针。
- GROUP_SPEC_INSTANCE：表示将当前应用分组内的指定ECS实例作为探测任务的探针。设置该参数时，需要同时设置InstanceList（发起探测的ECS实例列表）。',
            'type' => 'string',
            'required' => false,
            'example' => 'GROUP',
            'default' => 'GROUP',
          ),
        ),
        3 => 
        array (
          'name' => 'TaskType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可用性监控任务的探测类型。取值：

- PING
- TELNET
- HTTP',
            'type' => 'string',
            'required' => true,
            'example' => 'HTTP',
          ),
        ),
        4 => 
        array (
          'name' => 'TaskOption.HttpURI',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP探测类型的探测URI地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://www.aliyun.com',
          ),
        ),
        5 => 
        array (
          'name' => 'TaskOption.TelnetOrPingHost',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测的域名或地址。
>如果探测任务类型为PING或TELNET，则需要设置该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.aliyun.com',
          ),
        ),
        6 => 
        array (
          'name' => 'TaskOption.HttpResponseCharset',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP探测类型的响应字符集。

> 仅支持UTF-8。',
            'type' => 'string',
            'required' => false,
            'example' => 'UTF-8',
          ),
        ),
        7 => 
        array (
          'name' => 'TaskOption.HttpPostContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP探测类型探测请求的Post内容。',
            'type' => 'string',
            'required' => false,
            'example' => 'params1=paramsValue1',
          ),
        ),
        8 => 
        array (
          'name' => 'TaskOption.HttpResponseMatchContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '匹配响应的内容。',
            'type' => 'string',
            'required' => false,
            'example' => 'ok',
          ),
        ),
        9 => 
        array (
          'name' => 'TaskOption.HttpMethod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测类型的方法。取值：

- GET
- POST
- HEAD

>如果任务的探测类型为HTTP，则需要设置该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'GET',
          ),
        ),
        10 => 
        array (
          'name' => 'TaskOption.HttpNegative',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '匹配HTTP响应内容的报警规则。取值：
- true：如果HTTP响应内容包含设置的报警规则，则报警。
- false：如果HTTP响应内容不包含设置的报警规则，则报警。

>如果任务的探测类型为HTTP，则该参数生效。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        11 => 
        array (
          'name' => 'TaskOption.HttpHeader',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP请求的Header。格式为`参数名:参数`，多个参数之间用回车符分隔，例如：
```
params1:value1
params2:value2
```',
            'type' => 'string',
            'required' => false,
            'example' => 'token:testTokenValue',
          ),
        ),
        12 => 
        array (
          'name' => 'TaskOption.Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测频率。单位：秒。取值：15、30、60、120、300、900、1800和3600。

> 仅3.5.1及以上版本的云监控插件支持该参数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
        13 => 
        array (
          'name' => 'AlertConfig.NotifyType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警通知类型。取值：

<props="china">- 2：电话+短信+邮件+钉钉机器人。</props>

<props="china">- 1：短信+邮件+钉钉机器人。</props>

<props="china">- 0：邮件+钉钉机器人。</props>


<props="intl">0：邮件+钉钉机器人。</props>

<props="partner">0：邮件+钉钉机器人。</props>',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        14 => 
        array (
          'name' => 'AlertConfig.StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警生效的开始时间。取值范围：0~23。

例如：`AlertConfig.StartTime`为0，`AlertConfig.EndTime`为22，表示报警生效时间为00:00:00至22:00:00。

>如果报警不在生效时间内，则超过阈值也不会发送报警通知。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        15 => 
        array (
          'name' => 'AlertConfig.EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警生效的结束时间。取值范围：0~23。

例如：`AlertConfig.StartTime`为0，`AlertConfig.EndTime`为22，表示报警生效时间为00:00:00至22:00:00。

>如果报警不在生效时间内，则超过阈值也不会发送报警通知。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '22',
          ),
        ),
        16 => 
        array (
          'name' => 'AlertConfig.SilenceTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通道沉默时间。单位：秒，默认值：86400（1天）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '86400',
          ),
        ),
        17 => 
        array (
          'name' => 'AlertConfig.WebHook',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'URL回调地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://www.aliyun.com/webhook.json',
          ),
        ),
        18 => 
        array (
          'name' => 'AlertConfigEscalationList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'MetricName' => 
                array (
                  'description' => '报警的监控项。N的取值范围：1~21。取值：

- HttpStatus：HTTP状态码。
- HttpLatency：HTTP等待时间。
- TelnetStatus：Telnet状态码。
- TelnetLatency：Telnet等待时间。
- PingLostRate：Ping丢包率。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'HttpStatus',
                ),
                'Value' => 
                array (
                  'description' => '报警阈值。N的取值范围：1~21。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '90',
                ),
                'Times' => 
                array (
                  'description' => '报警重试次数。N的取值范围：1~21。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '3',
                ),
                'Operator' => 
                array (
                  'description' => '报警规则比较符号。N的取值范围：1~21。取值：

- `>`
- `>=`
- `<`
- `<=`
- `=`',
                  'type' => 'string',
                  'required' => false,
                  'example' => '>',
                ),
                'Aggregate' => 
                array (
                  'description' => '报警统计方法。N的取值范围：1~21。不同监控项的取值如下：

- HttpStatus：Value。
- HttpLatency：Average。
- TelnetStatus：Value。
- TelnetLatency：Average。
- PingLostRate：Average。

>状态码类的统计方法为原始值（Value），延时时间或丢包率的统计方法为平均值（Average）。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Value',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10,
          ),
        ),
        19 => 
        array (
          'name' => 'InstanceList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '发起探测的ECS实例列表。N的取值范围：1~21。

> 当`TaskScope`为`GROUP_SPEC_INSTANCE`时，需要设置该参数。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '发起探测的ECS实例列表。N的取值范围：1~21。

> 当`TaskScope`为`GROUP_SPEC_INSTANCE`时，需要设置该参数。',
              'type' => 'string',
              'required' => false,
              'example' => '2',
            ),
            'required' => false,
            'example' => 'i-absdfkwl321****',
            'maxItems' => 1000,
          ),
        ),
        20 => 
        array (
          'name' => 'AlertConfigTargetList',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '报警触发目标。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警触发目标。',
              'type' => 'object',
              'properties' => 
              array (
                'Id' => 
                array (
                  'description' => '报警触发目标ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '1',
                ),
                'Arn' => 
                array (
                  'description' => '资源ARN。格式为`acs:{云产品缩写}:{regionId}:{userId}:/{资源类型}/{资源名称}/message`。例如：`acs:mns:cn-hangzhou:120886317861****:/queues/test123/message`。参数说明如下：

- {云产品缩写}：目前仅支持消息服务MNS。

- {userId}：阿里云账号ID。

- {regionId}：消息队列或主题所在地域。

- {资源类型}`：接收报警的资源类型。取值：

  - **queues**：队列。
  - **topics**：主题。

- {资源名称}：资源名称。

  - 如果资源类型为**queues**，则资源名称为队列名称。
  - 如果资源类型为**topics**，则资源名称为主题名称。



 ',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'acs:mns:cn-hangzhou:120886317861****:/queues/test/message',
                ),
                'Level' => 
                array (
                  'description' => '报警级别。取值：

- INFO：信息。
- WARN：警告。
- CRITICAL：紧急。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '["INFO", "WARN", "CRITICAL"]',
                ),
                'JsonParams' => 
                array (
                  'description' => '报警回调的JSON格式参数。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '{"customField1":"value1","customField2":"$.name"}',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'ACBDBB40-DFB6-4F4C-8957-51FFB233969C',
              ),
              'TaskId' => 
              array (
                'description' => '可用性监控任务ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '12345',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResouceOverLimit',
            'errorMessage' => 'The task over limit',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"ACBDBB40-DFB6-4F4C-8957-51FFB233969C\\",\\n  \\"TaskId\\": 12345,\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateHostAvailabilityResponse>\\n\\t<TaskId>12345</TaskId>\\n\\t<RequestId>CDA78493-F10F-485F-98AD-B4C0B40AB225</RequestId>\\n\\t<Code>200</Code>\\n\\t<Success>true</Success>\\n</CreateHostAvailabilityResponse>","errorExample":""}]',
      'title' => '创建可用性监控任务',
      'summary' => '调用CreateHostAvailability接口创建可用性监控任务。',
      'description' => '本文将提供一个示例，在应用分组`123456`中创建探测类型为`HTTP`的可用性监控任务`task1`，通过邮件和钉钉机器人给您发送报警。

',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteHostAvailability' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '任务ID。N的取值范围：1~20。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'integer',
              'format' => 'int64',
            ),
            'required' => true,
            'example' => '12456',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '57C782E6-B235-4842-AD2B-DB94961761EB',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"57C782E6-B235-4842-AD2B-DB94961761EB\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteHostAvailabilityResponse>\\n    <RequestId>57C782E6-B235-4842-AD2B-DB94961761EB</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</DeleteHostAvailabilityResponse>\\n","errorExample":""}]',
      'title' => '删除可用性监控任务',
      'summary' => '调用DeleteHostAvailability接口删除可用性监控任务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableHostAvailability' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '可用性监控任务ID。N的取值范围：1~20。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'integer',
              'format' => 'int64',
            ),
            'required' => true,
            'example' => '123456',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'User not authorized to operate on the specified resource.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'ACBDBB40-DFB6-4F4C-8957-51FFB233969C',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"User not authorized to operate on the specified resource.\\",\\n  \\"RequestId\\": \\"ACBDBB40-DFB6-4F4C-8957-51FFB233969C\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<EnableHostAvailabilityResponse>\\n    <RequestId>ACBDBB40-DFB6-4F4C-8957-51FFB233969C</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</EnableHostAvailabilityResponse>","errorExample":""}]',
      'title' => '启用指定可用性监控任务',
      'summary' => '调用EnableHostAvailability接口启用指定可用性监控任务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableHostAvailability' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '可用性监控任务ID。N的取值范围：1~20。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'integer',
              'format' => 'int64',
            ),
            'required' => true,
            'example' => '12345',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'User not authorized to operate on the specified resource.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'ACBDBB40-DFB6-4F4C-8957-51FFB233969C',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"User not authorized to operate on the specified resource.\\",\\n  \\"RequestId\\": \\"ACBDBB40-DFB6-4F4C-8957-51FFB233969C\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DisableHostAvailabilityResponse>\\n    <RequestId>ACBDBB40-DFB6-4F4C-8957-51FFB233969C</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</DisableHostAvailabilityResponse>","errorExample":""}]',
      'title' => '禁用指定可用性监控任务',
      'summary' => '调用DisableHostAvailability接口禁用指定可用性监控任务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyHostAvailability' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '123456',
          ),
        ),
        1 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可用性监控任务ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '12345',
          ),
        ),
        2 => 
        array (
          'name' => 'TaskName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可用性监控任务名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'task2',
          ),
        ),
        3 => 
        array (
          'name' => 'TaskScope',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可用性监控任务的探测范围。取值：

- GROUP：表示将当前应用分组内的所有ECS实例作为探测任务的探针。
- GROUP_SPEC_INSTANCE：表示将当前应用分组内的指定ECS实例作为探测任务的探针。设置该参数时，需要同时设置InstanceList（发起探测的ECS实例列表）。',
            'type' => 'string',
            'required' => false,
            'example' => 'GROUP',
            'default' => 'GROUP',
          ),
        ),
        4 => 
        array (
          'name' => 'TaskOption.HttpURI',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP探测类型的探测URI地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://www.aliyun.com',
          ),
        ),
        5 => 
        array (
          'name' => 'TaskOption.TelnetOrPingHost',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测的域名或地址。

>如果探测任务类型为PING或TELNET，则需要设置该参数。关于探测任务类型的设置方法，请参见[CreateHostAvailability](~~115317~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.aliyun.com',
          ),
        ),
        6 => 
        array (
          'name' => 'TaskOption.HttpResponseCharset',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP探测类型的响应字符集。

> 仅支持UTF-8。',
            'type' => 'string',
            'required' => false,
            'example' => 'UTF-8',
          ),
        ),
        7 => 
        array (
          'name' => 'TaskOption.HttpPostContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP探测类型探测请求的Post内容。',
            'type' => 'string',
            'required' => false,
            'example' => 'params1=value1',
          ),
        ),
        8 => 
        array (
          'name' => 'TaskOption.HttpResponseMatchContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP探测类型探测响应的Post内容。',
            'type' => 'string',
            'required' => false,
            'example' => 'ok',
          ),
        ),
        9 => 
        array (
          'name' => 'TaskOption.HttpMethod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测类型的方法。取值：

- GET
- POST
- HEAD

>如果探测任务类型为HTTP，则需要设置该参数。关于探测任务类型的设置方法，请参见[CreateHostAvailability](~~115317~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'GET',
          ),
        ),
        10 => 
        array (
          'name' => 'TaskOption.HttpNegative',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '匹配HTTP响应内容的报警规则。取值：
- true：如果HTTP响应内容包含设置的报警规则，则报警。
- false：如果HTTP响应内容不包含设置的报警规则，则报警。

>如果探测任务类型为HTTP，则需要设置该参数。关于探测任务类型的设置方法，请参见[CreateHostAvailability](~~115317~~)。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        11 => 
        array (
          'name' => 'TaskOption.HttpHeader',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP请求的Header。格式为`参数名:参数`，多个参数之间用回车符分隔，例如：
```
params1:value1
params2:value2
```',
            'type' => 'string',
            'required' => false,
            'example' => 'params1:value1',
          ),
        ),
        12 => 
        array (
          'name' => 'TaskOption.Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测频率。单位：秒。取值：15、30、60、120、300、900、1800和3600。

> 仅3.5.1及以上版本的云监控插件支持该参数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
        13 => 
        array (
          'name' => 'AlertConfig.NotifyType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警通知类型。取值：

<props="china">- 2：电话+短信+邮件+钉钉机器人。</props>

<props="china">- 1：短信+邮件+钉钉机器人。</props>

<props="china">- 0：邮件+钉钉机器人。</props>


<props="intl">0：邮件+钉钉机器人。</props>

<props="partner">0：邮件+钉钉机器人。</props>
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        14 => 
        array (
          'name' => 'AlertConfig.StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警生效的开始时间。取值范围：0~23。

例如：`AlertConfig.StartTime`为0，`AlertConfig.EndTime`为22，表示报警生效时间为00:00:00至22:00:00。

>如果报警不在生效时间内，则超过阈值也不会发送报警通知。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        15 => 
        array (
          'name' => 'AlertConfig.EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警生效的结束时间。取值范围：0~23。

例如：`AlertConfig.StartTime`为0，`AlertConfig.EndTime`为22，表示报警生效时间为00:00:00至22:00:00。

>如果报警不在生效时间内，则超过阈值也不会发送报警通知。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '22',
          ),
        ),
        16 => 
        array (
          'name' => 'AlertConfig.SilenceTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通道沉默时间。单位：秒，默认值：86400（1天）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '86400',
          ),
        ),
        17 => 
        array (
          'name' => 'AlertConfig.WebHook',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'URL回调地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://www.aliyun.com/webhook.json',
          ),
        ),
        18 => 
        array (
          'name' => 'AlertConfigEscalationList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警配置列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警配置列表。',
              'type' => 'object',
              'properties' => 
              array (
                'MetricName' => 
                array (
                  'description' => '报警的监控项。N的取值范围：1~21。取值：

- HttpStatus：HTTP状态码。
- HttpLatency：HTTP等待时间。
- TelnetStatus：TELNET状态码。
- TelnetLatency：TELNET等待时间。
- PingLostRate：PING丢包率。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'HttpStatus',
                ),
                'Value' => 
                array (
                  'description' => '报警阈值。N的取值范围：1~21。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '3',
                ),
                'Times' => 
                array (
                  'description' => '报警重试次数。N的取值范围：1~21。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '3',
                ),
                'Operator' => 
                array (
                  'description' => '报警规则比较符号。N的取值范围：1~21。取值：

- `>`
- `>=`
- `<`
- `<=`
- `=`',
                  'type' => 'string',
                  'required' => false,
                  'example' => '>',
                ),
                'Aggregate' => 
                array (
                  'description' => '报警统计方法。N的取值范围：1~21。不同监控项的统计方法取值如下：

- HttpStatus：Value。
- HttpLatency：Average。
- TelnetStatus：Value。
- TelnetLatency：Average。
- PingLostRate：Average。

>状态码类的统计方法为原始值（Value），延时时间或丢包率的统计方法为平均值（Average）。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Value',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10,
          ),
        ),
        19 => 
        array (
          'name' => 'InstanceList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '发起探测的ECS实例列表。N的取值范围：1~21。

> 当`TaskScope`为`GROUP_SPEC_INSTANCE`时，需要设置该参数。

',
            'type' => 'array',
            'items' => 
            array (
              'description' => '发起探测的ECS实例列表。N的取值范围：1~21。

> 当`TaskScope`为`GROUP_SPEC_INSTANCE`时，需要设置该参数。',
              'type' => 'string',
              'required' => false,
              'example' => '2',
            ),
            'required' => false,
            'example' => 'i-absdfkwl321****',
            'maxItems' => 1000,
          ),
        ),
        20 => 
        array (
          'name' => 'AlertConfigTargetList',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '报警触发目标。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警触发目标。',
              'type' => 'object',
              'properties' => 
              array (
                'Id' => 
                array (
                  'description' => '报警触发目标ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '1',
                ),
                'Arn' => 
                array (
                  'description' => '资源ARN。

格式为`acs:{云产品缩写}:{regionId}:{userId}:/{资源类型}/{资源名称}/message`。例如：`acs:mns:cn-hangzhou:120886317861****:/queues/test123/message`。参数说明如下：

- {云产品缩写}：目前仅支持消息服务MNS。

- {userId}：阿里云账号ID。

- {regionId}：消息队列或主题所在地域。

- {资源类型}`：接收报警的资源类型。取值：

  - **queues**：队列。
  - **topics**：主题。

- {资源名称}：资源名称。

  - 如果资源类型为**queues**，则资源名称为队列名称。
  - 如果资源类型为**topics**，则资源名称为主题名称。


',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'acs:mns:cn-hangzhou:111:/queues/test/message',
                ),
                'Level' => 
                array (
                  'description' => '报警级别。取值：

- INFO：信息。
- WARN：警告。
- CRITICAL：紧急。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '["INFO", "WARN", "CRITICAL"]',
                ),
                'JsonParams' => 
                array (
                  'description' => '报警回调的JSON格式参数。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '{"customField1":"value1","customField2":"$.name"}',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '16E815A3-47E1-4290-87F9-D5C99471FF45',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"16E815A3-47E1-4290-87F9-D5C99471FF45\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ModifyHostAvailabilityResponse>\\n\\t\\t<RequestId>16E815A3-47E1-4290-87F9-D5C99471FF45</RequestId>\\n\\t\\t<Success>true</Success>\\n\\t\\t<Code>200</Code>\\n</ModifyHostAvailabilityResponse>","errorExample":""}]',
      'title' => '修改可用性监控任务',
      'summary' => '调用ModifyHostAvailability接口修改可用性监控任务。',
      'description' => '本文将提供一个示例，将应用分组`123456`中可用性监控任务`12345`的名称修改为`task2`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeUnhealthyHostAvailability' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '任务ID。N的取值范围：1~20。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'integer',
              'format' => 'int64',
            ),
            'required' => true,
            'example' => '123456',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'User not authorized to operate on the specified resource.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'ACBDBB40-DFB6-4F4C-8957-51FFB233969C',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'UnhealthyList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'NodeTaskInstance' => 
                  array (
                    'description' => '探测异常的服务器列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '任务ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'InstanceList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'String' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '异常服务器列表。',
                                'type' => 'string',
                                'example' => 'i-a34b581****',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"User not authorized to operate on the specified resource.\\",\\n  \\"RequestId\\": \\"ACBDBB40-DFB6-4F4C-8957-51FFB233969C\\",\\n  \\"Success\\": true,\\n  \\"UnhealthyList\\": {\\n    \\"NodeTaskInstance\\": [\\n      {\\n        \\"Id\\": 123456,\\n        \\"InstanceList\\": {\\n          \\"String\\": [\\n            \\"i-a34b581****\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeUnhealthyHostAvailabilityResponse>\\n\\t\\t<RequestId>8C2F25CB-F9E7-4693-95C7-A095417B2948</RequestId>\\n\\t\\t<Code>200</Code>\\n\\t\\t<Success>true</Success>\\n\\t\\t<UnhealthyList>\\n\\t\\t\\t<NodeTaskInstance>\\n\\t\\t\\t\\t<Id>123456</Id>\\n\\t\\t\\t\\t<InstanceList>\\n\\t\\t\\t\\t\\t<String>i-a34b581****</String>\\n\\t\\t\\t\\t</InstanceList>\\n\\t\\t\\t</NodeTaskInstance>\\n\\t\\t</UnhealthyList>\\n</DescribeUnhealthyHostAvailabilityResponse>","errorExample":""}]',
      'title' => '查询探测结果异常的服务器列表',
      'summary' => '调用DescribeUnhealthyHostAvailability接口查询探测结果异常的服务器列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeHostAvailabilityList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '单个可用性监控任务ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '123456',
          ),
        ),
        1 => 
        array (
          'name' => 'Ids',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '多个可用性监控任务ID。多个可用性监控任务ID之间用半角逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'example' => '123456,345678',
          ),
        ),
        2 => 
        array (
          'name' => 'TaskName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可用性监控任务名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'ecs_instance',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

起始值：1。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页时每页显示的数据行数。

起始值：1。默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '12345',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4A288E86-45C3-4858-9DB0-6D85B10BD92A',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TaskList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'NodeTaskConfig' => 
                  array (
                    'description' => '可用性监控任务列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '可用性监控任务列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TaskType' => 
                        array (
                          'description' => '任务类型。取值：

- PING
- TELNET
- HTTP',
                          'type' => 'string',
                          'example' => 'HTTP',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '应用分组名称。',
                          'type' => 'string',
                          'example' => 'Group_ECS',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '应用分组ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '12345',
                        ),
                        'TaskName' => 
                        array (
                          'description' => '可用性监控任务名称。',
                          'type' => 'string',
                          'example' => 'ecs_instance',
                        ),
                        'Disabled' => 
                        array (
                          'description' => '可用性监控任务是否禁用。取值：

- true：禁用。

- false：启用。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'TaskScope' => 
                        array (
                          'description' => '可用性监控任务的探测范围。取值：

- GROUP：表示将当前应用分组内的所有ECS实例作为探测任务的探针。
- GROUP_SPEC_INSTANCE：表示将当前应用分组内的指定ECS实例作为探测任务的探针。',
                          'type' => 'string',
                          'example' => 'GROUP',
                        ),
                        'Id' => 
                        array (
                          'description' => '可用性监控任务ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'Instances' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Instance' => 
                            array (
                              'description' => '发起探测的ECS实例列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '发起探测的ECS实例列表。',
                                'type' => 'string',
                                'example' => 'i-abcdefgh12****',
                              ),
                            ),
                          ),
                        ),
                        'TaskOption' => 
                        array (
                          'description' => '可用性监控任务的参数选项。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'HttpMethod' => 
                            array (
                              'description' => '探测类型的方法。取值：

- GET
- POST
- HEAD',
                              'type' => 'string',
                              'example' => 'GET',
                            ),
                            'Interval' => 
                            array (
                              'description' => '探测频率。单位：秒。 ',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '60',
                            ),
                            'HttpURI' => 
                            array (
                              'description' => 'HTTP探测类型的探测URI地址。',
                              'type' => 'string',
                              'example' => 'https://www.aliyun.com',
                            ),
                            'TelnetOrPingHost' => 
                            array (
                              'description' => '探测的域名或地址。',
                              'type' => 'string',
                              'example' => 'ssh.aliyun.com',
                            ),
                            'HttpResponseCharset' => 
                            array (
                              'description' => 'HTTP探测类型的响应字符集。',
                              'type' => 'string',
                              'example' => 'UTF-8',
                            ),
                            'HttpPostContent' => 
                            array (
                              'description' => 'HTTP探测类型探测请求的Post内容。',
                              'type' => 'string',
                              'example' => 'params1=paramsValue1',
                            ),
                            'HttpNegative' => 
                            array (
                              'description' => '匹配HTTP响应内容的报警规则。取值：
- true：如果HTTP响应内容包含设置的报警规则，则报警。
- false：如果HTTP响应内容不包含设置的报警规则，则报警。',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                            'HttpKeyword' => 
                            array (
                              'description' => 'HTTP探测类型匹配响应内容。',
                              'type' => 'string',
                              'example' => 'OK',
                            ),
                          ),
                        ),
                        'AlertConfig' => 
                        array (
                          'description' => '报警规则配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SilenceTime' => 
                            array (
                              'description' => '通道沉默时间。单位：秒。默认值：86400。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '86400',
                            ),
                            'EndTime' => 
                            array (
                              'description' => '报警生效的结束时间。取值范围：0~23。

例如：`AlertConfig.StartTime`为0，`AlertConfig.EndTime`为22，表示报警生效时间为00:00:00至22:00:00。

>如果报警不在生效时间内，则超过阈值也不会发送报警通知。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '22',
                            ),
                            'StartTime' => 
                            array (
                              'description' => '报警生效的开始时间。取值范围：0~23。

例如：`AlertConfig.StartTime`为0，`AlertConfig.EndTime`为22，表示报警生效时间为00:00:00至22:00:00。

>如果报警不在生效时间内，则超过阈值也不会发送报警通知。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '0',
                            ),
                            'WebHook' => 
                            array (
                              'description' => '报警发生回调时的URL地址。

云监控会将报警信息通过POST请求推送到该地址，目前仅支持HTTP协议。',
                              'type' => 'string',
                              'example' => 'https://www.aliyun.com',
                            ),
                            'NotifyType' => 
                            array (
                              'description' => '报警通知类型。取值：

<props="china">- 2：电话+短信+邮件+钉钉机器人。</props>

<props="china">- 1：短信+邮件+钉钉机器人。</props>

<props="china">- 0：邮件+钉钉机器人。</props>

<props="intl">- 2：邮件+钉钉机器人。</props>

<props="intl">- 1：邮件+钉钉机器人。</props>

<props="intl">- 0：邮件+钉钉机器人。</props>',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'EscalationList' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'escalationList' => 
                                array (
                                  'description' => '报警触发条件。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '报警触发条件。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Value' => 
                                      array (
                                        'description' => '报警阈值。',
                                        'type' => 'string',
                                        'example' => '400',
                                      ),
                                      'MetricName' => 
                                      array (
                                        'description' => '报警监控项。取值：

- HttpStatus：HTTP状态码。
- HttpLatency：HTTP等待时间。
- TelnetStatus：TELNET状态码。
- TelnetLatency：TELNET等待时间。
- PingLostRate：PING丢包率。',
                                        'type' => 'string',
                                        'example' => 'HttpStatus',
                                      ),
                                      'Operator' => 
                                      array (
                                        'description' => '报警规则比较符号。取值：

- `>`
- `>=`
- `<`
- `<=`
- `=`',
                                        'type' => 'string',
                                        'example' => '=',
                                      ),
                                      'Times' => 
                                      array (
                                        'description' => '报警周期。即连续几个周期超过阈值。',
                                        'type' => 'string',
                                        'example' => '3',
                                      ),
                                      'Aggregate' => 
                                      array (
                                        'description' => '报警统计方法。不同监控项的取值如下：

- Value：HTTP状态码的值。
- Average：HTTP等待时间的平均值。
- Value：TELNET状态码的值。
- TelnetLatency：TELNET等待时间的平均值。
- Average：PING丢包率的平均值。',
                                        'type' => 'string',
                                        'example' => 'Value',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'TargetList' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Target' => 
                                array (
                                  'description' => '报警目标列表。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '报警目标列表。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Id' => 
                                      array (
                                        'description' => '报警触发目标ID。',
                                        'type' => 'string',
                                        'example' => '1',
                                      ),
                                      'Arn' => 
                                      array (
                                        'description' => 'ARN资源描述。

格式：`arn:acs:${Service}:${Region}:${Account}:${ResourceType}/${ResourceId}`。各字段含义如下：

- Service：云服务Code。

- Region：地域ID。

- Account：阿里云账号ID。

- ResourceType：资源类型。

- ResourceId：资源ID。',
                                        'type' => 'string',
                                        'example' => 'acs:mns:cn-hangzhou:17754132319*****:/queues/test/messages',
                                      ),
                                      'Level' => 
                                      array (
                                        'description' => '报警级别。取值：

- INFO：信息。
- WARN：警告。
- CRITICAL：紧急。',
                                        'type' => 'string',
                                        'example' => 'INFO',
                                      ),
                                      'JsonParams' => 
                                      array (
                                        'description' => '报警回调的JSON格式参数。',
                                        'type' => 'string',
                                        'example' => '{"key1":"value1"}',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"4A288E86-45C3-4858-9DB0-6D85B10BD92A\\",\\n  \\"Total\\": 1,\\n  \\"Success\\": true,\\n  \\"TaskList\\": {\\n    \\"NodeTaskConfig\\": [\\n      {\\n        \\"TaskType\\": \\"HTTP\\",\\n        \\"GroupName\\": \\"Group_ECS\\",\\n        \\"GroupId\\": 12345,\\n        \\"TaskName\\": \\"ecs_instance\\",\\n        \\"Disabled\\": false,\\n        \\"TaskScope\\": \\"GROUP\\",\\n        \\"Id\\": 123456,\\n        \\"Instances\\": {\\n          \\"Instance\\": [\\n            \\"i-abcdefgh12****\\"\\n          ]\\n        },\\n        \\"TaskOption\\": {\\n          \\"HttpMethod\\": \\"GET\\",\\n          \\"Interval\\": 60,\\n          \\"HttpURI\\": \\"https://www.aliyun.com\\",\\n          \\"TelnetOrPingHost\\": \\"ssh.aliyun.com\\",\\n          \\"HttpResponseCharset\\": \\"UTF-8\\",\\n          \\"HttpPostContent\\": \\"params1=paramsValue1\\",\\n          \\"HttpNegative\\": true,\\n          \\"HttpKeyword\\": \\"OK\\"\\n        },\\n        \\"AlertConfig\\": {\\n          \\"SilenceTime\\": 86400,\\n          \\"EndTime\\": 22,\\n          \\"StartTime\\": 0,\\n          \\"WebHook\\": \\"https://www.aliyun.com\\",\\n          \\"NotifyType\\": 1,\\n          \\"EscalationList\\": {\\n            \\"escalationList\\": [\\n              {\\n                \\"Value\\": \\"400\\",\\n                \\"MetricName\\": \\"HttpStatus\\",\\n                \\"Operator\\": \\"=\\",\\n                \\"Times\\": \\"3\\",\\n                \\"Aggregate\\": \\"Value\\"\\n              }\\n            ]\\n          },\\n          \\"TargetList\\": {\\n            \\"Target\\": [\\n              {\\n                \\"Id\\": \\"1\\",\\n                \\"Arn\\": \\"acs:mns:cn-hangzhou:17754132319*****:/queues/test/messages\\",\\n                \\"Level\\": \\"INFO\\",\\n                \\"JsonParams\\": \\"{\\\\\\"key1\\\\\\":\\\\\\"value1\\\\\\"}\\"\\n              }\\n            ]\\n          }\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeHostAvailabilityListResponse>\\r\\n\\t<RequestId>4A288E86-45C3-4858-9DB0-6D85B10BD92A</RequestId>\\r\\n\\t<Total>1</Total>\\r\\n\\t<TaskList>\\r\\n\\t\\t<NodeTaskConfig>\\r\\n\\t\\t\\t<GroupName>Group_ECS</GroupName>\\r\\n\\t\\t\\t<TaskOption>\\r\\n\\t\\t\\t\\t<HttpURI>https://aliyun.com</HttpURI>\\r\\n\\t\\t\\t\\t<HttpMethod>GET</HttpMethod>\\r\\n\\t\\t\\t</TaskOption>\\r\\n\\t\\t\\t<AlertConfig>\\r\\n\\t\\t\\t\\t<NotifyType>1</NotifyType>\\r\\n\\t\\t\\t\\t<SilenceTime>86400</SilenceTime>\\r\\n\\t\\t\\t\\t<EndTime>22</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>0</StartTime>\\r\\n\\t\\t\\t\\t<EscalationList>\\r\\n\\t\\t\\t\\t\\t<escalationList>\\r\\n\\t\\t\\t\\t\\t\\t<Operator>=</Operator>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>HttpStatus</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<Times>3</Times>\\r\\n\\t\\t\\t\\t\\t\\t<Value>400</Value>\\r\\n\\t\\t\\t\\t\\t\\t<Aggregate>Value</Aggregate>\\r\\n\\t\\t\\t\\t\\t</escalationList>\\r\\n\\t\\t\\t\\t\\t<escalationList>\\r\\n\\t\\t\\t\\t\\t\\t<Operator>=</Operator>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>HttpLatency</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<Times>3</Times>\\r\\n\\t\\t\\t\\t\\t\\t<Value>500</Value>\\r\\n\\t\\t\\t\\t\\t\\t<Aggregate>Average</Aggregate>\\r\\n\\t\\t\\t\\t\\t</escalationList>\\r\\n\\t\\t\\t\\t</EscalationList>\\r\\n\\t\\t\\t</AlertConfig>\\r\\n\\t\\t\\t<TaskName>ecs_instance</TaskName>\\r\\n\\t\\t\\t<TaskScope>GROUP</TaskScope>\\r\\n\\t\\t\\t<TaskType>HTTP</TaskType>\\r\\n\\t\\t\\t<Id>123456</Id>\\r\\n\\t\\t\\t<Disabled>false</Disabled>\\r\\n\\t\\t\\t<GroupId>12345</GroupId>\\r\\n\\t\\t</NodeTaskConfig>\\r\\n\\t</TaskList>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeHostAvailabilityListResponse>\\t","errorExample":""}]',
      'title' => '查询可用性监控任务列表',
      'summary' => '调用DescribeHostAvailabilityList接口查询可用性监控任务列表。',
      'description' => '本文将提供一个示例，查询当前账号的可用性监控任务列表。返回结果显示，当前账号存在一条可用性监控任务记录`ecs_instance`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InstallMonitoringAgent' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制安装云监控插件。取值：
- true（默认值）：强制安装。
- false：不强制安装。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'true',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '阿里云主机ID。

N的取值范围：1~10。

> `InstallCommand`和`InstanceIds`必须二选一。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '阿里云主机ID。

N的取值范围：1~10。

> `InstallCommand`和`InstanceIds`必须二选一。',
              'type' => 'string',
              'required' => false,
              'example' => 'i-m5e0k0bexac8tykr****',
            ),
            'required' => false,
            'example' => 'i-m5e0k0bexac8tykr****',
            'maxItems' => 10,
          ),
        ),
        2 => 
        array (
          'name' => 'InstallCommand',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '为当前阿里云账号下的所有阿里云主机安装云监控插件。取值：

- `onlyInstallNotHasAgent` ： 仅为未安装云监控插件的阿里云主机安装最新版本插件。

- `onlyUpgradeAgent`：仅为已安装非最新版本云监控插件的阿里云主机升级插件。

- `installAndUpgrade`：不仅为未安装云监控插件的阿里云主机安装最新版本插件，且为已安装非最新版本云监控插件的阿里云主机升级插件。

> 如果您已设置该参数，参数`InstanceIds`的设置无效。',
            'type' => 'string',
            'required' => false,
            'example' => 'onlyInstallNotHasAgent',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0BDAF8A8-04DC-5F0C-90E4-724D42C41945',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"0BDAF8A8-04DC-5F0C-90E4-724D42C41945\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<InstallMonitoringAgentResponse>\\r\\n\\t<RequestId>0BDAF8A8-04DC-5F0C-90E4-724D42C41945</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</InstallMonitoringAgentResponse>","errorExample":""}]',
      'title' => '为指定阿里云主机安装云监控插件',
      'summary' => '调用InstallMonitoringAgent接口为指定阿里云主机安装云监控插件。',
      'description' => '# 前提条件
请确保阿里云主机已安装云助手。关于如何安装云助手，请参见[云助手概述](~~64601~~)。

# 背景信息
本接口仅适用于阿里云主机，即ECS实例。
通过API安装云监控插件的成功率约为95%，如果安装失败，则请手动安装。关于如何安装云监控插件，请参见[安装和卸载C++版本插件](~~183482~~)。

# 使用说明
本文将提供一个示例，强制为阿里云主机`i-m5e0k0bexac8tykr****`安装最新版本云监控插件。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMonitoringAgentHosts' => 
    array (
      'summary' => '调用DescribeMonitoringAgentHosts接口查询所有已安装和未安装云监控插件的主机列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'KeyWord',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模糊搜索关键字。',
            'type' => 'string',
            'required' => false,
            'example' => 'host1',
          ),
        ),
        1 => 
        array (
          'name' => 'HostName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主机名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'hostNam1',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-a3d1q1pm2f9yr29e****',
          ),
        ),
        3 => 
        array (
          'name' => 'SerialNumbers',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主机序列号。

每台主机成功安装云监控插件之后会生成一个SerialNumber，具备全局唯一性。非阿里云主机无实例ID，有SerialNumber。

>该参数可用于精准查找监控的任何一台主机。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1ab31a3-1234-40f2-9e95-c8caa8f0****',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示记录条数。取值：

- 10
- 20
- 50
- 100

>虽然目前阿里云未限制该参数的最大值，但是不建议设置的值过大，可能会导致超时无法正常获取。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'InstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所在的地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        7 => 
        array (
          'name' => 'AliyunHost',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阿里云主机（ECS）。取值：
- true（默认值）：过滤出所有阿里云主机（ECS）。
- false：过滤出所有非阿里云主机。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主机状态。取值：
- Running：运行中。
- Stopped：已停止、未安装或安装失败。',
            'type' => 'string',
            'required' => false,
            'example' => 'Running',
          ),
        ),
        9 => 
        array (
          'name' => 'SysomStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SysOM的开启状态。取值：

- installing：开启中。
- running：运行中。
- stopped：已停止。
- uninstalling：关闭中。',
            'type' => 'string',
            'required' => false,
            'example' => 'running',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '63EEBB2A-9E51-41E4-9E83-5DE7F3B292E0',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'PageNumber' => 
              array (
                'description' => '分页页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页大小。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageTotal' => 
              array (
                'description' => '页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '50',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Hosts' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Host' => 
                  array (
                    'description' => '主机列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '主机。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SerialNumber' => 
                        array (
                          'description' => '主机序列号。非阿里云主机无实例ID，有SerialNumber。

>该参数可用于精准查找监控的任何一台主机。',
                          'type' => 'string',
                          'example' => 'x12335-6cc8-4a22-9f21-1a00a719****',
                        ),
                        'NatIp' => 
                        array (
                          'description' => 'NAT IP地址。',
                          'type' => 'string',
                          'example' => '192.168.XX.XX',
                        ),
                        'HostName' => 
                        array (
                          'description' => '主机名称。',
                          'type' => 'string',
                          'example' => 'hostIP',
                        ),
                        'AliUid' => 
                        array (
                          'description' => '阿里云账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '103201326074****',
                        ),
                        'NetworkType' => 
                        array (
                          'description' => '网络类型。',
                          'type' => 'string',
                          'example' => 'vpc',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'i-a2d5q7pm3f9yr212****',
                        ),
                        'isAliyunHost' => 
                        array (
                          'description' => '是否为阿里云主机。取值：

- true：是。

- false：否。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'EipAddress' => 
                        array (
                          'description' => 'EIP的IP地址。',
                          'type' => 'string',
                          'example' => '192.168.XX.XX',
                        ),
                        'AgentVersion' => 
                        array (
                          'description' => '插件版本。',
                          'type' => 'string',
                          'example' => '3.4.6',
                        ),
                        'IpGroup' => 
                        array (
                          'description' => '主机IP地址。

>多个IP地址之前用半角逗号（,）分隔。',
                          'type' => 'string',
                          'example' => '192.168.XX.XX',
                        ),
                        'EipId' => 
                        array (
                          'description' => 'EIP的ID。',
                          'type' => 'string',
                          'example' => 'eip-bp16i16k9gcezyfrp****',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'InstanceTypeFamily' => 
                        array (
                          'description' => 'ECS实例规格。',
                          'type' => 'string',
                          'example' => 'ecs.n4',
                        ),
                        'OperatingSystem' => 
                        array (
                          'description' => '操作系统。',
                          'type' => 'string',
                          'example' => 'Linux',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"63EEBB2A-9E51-41E4-9E83-5DE7F3B292E0\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"PageTotal\\": 50,\\n  \\"Total\\": 10,\\n  \\"Hosts\\": {\\n    \\"Host\\": [\\n      {\\n        \\"SerialNumber\\": \\"x12335-6cc8-4a22-9f21-1a00a719****\\",\\n        \\"NatIp\\": \\"192.168.XX.XX\\",\\n        \\"HostName\\": \\"hostIP\\",\\n        \\"AliUid\\": 0,\\n        \\"NetworkType\\": \\"vpc\\",\\n        \\"InstanceId\\": \\"i-a2d5q7pm3f9yr212****\\",\\n        \\"isAliyunHost\\": true,\\n        \\"EipAddress\\": \\"192.168.XX.XX\\",\\n        \\"AgentVersion\\": \\"3.4.6\\",\\n        \\"IpGroup\\": \\"192.168.XX.XX\\",\\n        \\"EipId\\": \\"eip-bp16i16k9gcezyfrp****\\",\\n        \\"Region\\": \\"cn-hangzhou\\",\\n        \\"InstanceTypeFamily\\": \\"ecs.n4\\",\\n        \\"OperatingSystem\\": \\"Linux\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMonitoringAgentHostsResponse>\\r\\n\\t\\t<Hosts>\\r\\n\\t\\t\\t<Host>\\r\\n\\t\\t\\t\\t<OperatingSystem>Windows</OperatingSystem>\\r\\n\\t\\t\\t\\t<SerialNumber>f0a434f2-632b-4588-95e6-202d4396****</SerialNumber>\\r\\n\\t\\t\\t\\t<isAliyunHost>true</isAliyunHost>\\r\\n\\t\\t\\t\\t<InstanceId>i-uf6hm9lnlzsarrc7****</InstanceId>\\r\\n\\t\\t\\t\\t<AgentVersion>3.4.6</AgentVersion>\\r\\n\\t\\t\\t\\t<NetworkType>vpc</NetworkType>\\r\\n\\t\\t\\t\\t<InstanceTypeFamily>ecs.g6</InstanceTypeFamily>\\r\\n\\t\\t\\t\\t<Region>cn-shanghai</Region>\\r\\n\\t\\t\\t\\t<IpGroup>192.168.XX.XX,192.168.XX.XX</IpGroup>\\r\\n\\t\\t\\t\\t<HostName>iZlzsarrc78****</HostName>\\r\\n\\t\\t\\t\\t<AliUid>103201326074****</AliUid>\\r\\n\\t\\t\\t</Host>\\r\\n\\t\\t\\t<Host>\\r\\n\\t\\t\\t\\t<OperatingSystem>Linux</OperatingSystem>\\r\\n\\t\\t\\t\\t<SerialNumber>9c336dc5-1802-4db0-b7a0-2d46ad4f****</SerialNumber>\\r\\n\\t\\t\\t\\t<isAliyunHost>true</isAliyunHost>\\r\\n\\t\\t\\t\\t<InstanceId>i-uf6hn19s56zumk9w****</InstanceId>\\r\\n\\t\\t\\t\\t<AgentVersion>3.4.4</AgentVersion>\\r\\n\\t\\t\\t\\t<NetworkType>vpc</NetworkType>\\r\\n\\t\\t\\t\\t<InstanceTypeFamily>ecs.g5</InstanceTypeFamily>\\r\\n\\t\\t\\t\\t<Region>cn-shanghai</Region>\\r\\n\\t\\t\\t\\t<IpGroup>192.168.XX.XX,192.168.XX.XX</IpGroup>\\r\\n\\t\\t\\t\\t<HostName>launch-advisor-2019****</HostName>\\r\\n\\t\\t\\t\\t<AliUid>103201326074****</AliUid>\\r\\n\\t\\t\\t</Host>\\r\\n\\t\\t</Hosts>\\r\\n\\t\\t<PageSize>100</PageSize>\\r\\n\\t\\t<PageNumber>1</PageNumber>\\r\\n\\t\\t<PageTotal>1</PageTotal>\\r\\n\\t\\t<Total>5</Total>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Success>true</Success>\\r\\n</DescribeMonitoringAgentHostsResponse>","errorExample":""}]',
      'title' => '查询所有已安装和未安装云监控插件的主机列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMonitoringAgentAccessKey' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'AccessKey' => 
              array (
                'description' => '安装插件需要的AccessKey。',
                'type' => 'string',
                'example' => 'E7A27f9****',
              ),
              'SecretKey' => 
              array (
                'description' => '安装插件需要的AccessSecret。',
                'type' => 'string',
                'example' => 'sBjNOUhLylrxMX-Xv1****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0F655E9-D793-51E6-BD78-CABBCCFC1047',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"AccessKey\\": \\"E7A27f9****\\",\\n  \\"SecretKey\\": \\"sBjNOUhLylrxMX-Xv1****\\",\\n  \\"RequestId\\": \\"C0F655E9-D793-51E6-BD78-CABBCCFC1047\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The specified resource is not found.\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeMonitoringAgentAccessKeyResponse>\\n    <SecretKey>sBjNOUhLylrxMX-Xv1****</SecretKey>\\n    <RequestId>C0F655E9-D793-51E6-BD78-CABBCCFC1047</RequestId>\\n    <AccessKey>E7A27f9****</AccessKey>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</DescribeMonitoringAgentAccessKeyResponse>","errorExample":""}]',
      'title' => '查询非阿里云主机安装云监控插件时所需要的AccessKey和AccessSecret',
      'summary' => '调用DescribeMonitoringAgentAccessKey接口查询非阿里云主机安装云监控插件时所需要的AccessKey和AccessSecret。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMonitoringAgentConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'EnableActiveAlert' => 
              array (
                'description' => '开通一键告警的云服务。',
                'type' => 'string',
                'example' => 'redis,rds,ecs',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E9F4FA2A-54BE-4EF9-9D1D-1A0B1DC86B8D',
              ),
              'AutoInstall' => 
              array (
                'description' => '现有ECS主机是否自动安装云监控插件。取值：

- true

- false',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'EnableInstallAgentNewECS' => 
              array (
                'description' => '新购ECS主机是否自动安装云监控插件。取值：

- true

- false',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is not valid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'The Request is not authorization.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"EnableActiveAlert\\": \\"redis,rds,ecs\\",\\n  \\"RequestId\\": \\"E9F4FA2A-54BE-4EF9-9D1D-1A0B1DC86B8D\\",\\n  \\"AutoInstall\\": true,\\n  \\"Success\\": true,\\n  \\"EnableInstallAgentNewECS\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeMonitoringAgentConfigResponse>\\r\\n\\t<AutoInstall>true</AutoInstall>\\r\\n\\t<EnableActiveAlert></EnableActiveAlert>\\r\\n\\t<EnableInstallAgentNewECS>true</EnableInstallAgentNewECS>\\r\\n\\t<RequestId>B4EB0F95-3181-4E8F-B32E-8C3734E8F88E</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeMonitoringAgentConfigResponse>","errorExample":""}]',
      'title' => '查询云监控插件的配置信息',
      'summary' => '调用DescribeMonitoringAgentConfig接口查询云监控插件的配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMonitoringAgentStatuses' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。多个实例ID之间用半角逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'i-hp3dunahluwajv6f****',
          ),
        ),
        1 => 
        array (
          'name' => 'HostAvailabilityTaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可用性监控的任务ID。',
            'type' => 'string',
            'required' => false,
            'example' => '126****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6F8371DF-AB81-41B8-9E1B-5493B3FF0E4F',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'NodeStatusList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'NodeStatus' => 
                  array (
                    'description' => '主机的状态列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '主机的状态列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '插件的运行状态。取值：
- running：运行中。
- stopped：已停止。
- installing：安装中。
- install_faild：安装失败。
- abnormal：安装异常。
- not_installed：未安装。
 
',
                          'type' => 'string',
                          'example' => 'running',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'i-hp3dunahluwajv6f****',
                        ),
                        'AutoInstall' => 
                        array (
                          'description' => '是否开启自动安装插件。取值：

- true：开启自动安装插件。

- false：关闭自动安装插件。
',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'OsMonitorStatus' => 
                        array (
                          'description' => 'SysOM的开启状态。取值： 

- installing：开启中。 
- running：运行中。 
- stopped：已停止。 
- uninstalling：关闭中。
',
                          'type' => 'string',
                          'example' => 'running',
                        ),
                        'OsMonitorErrorCode' => 
                        array (
                          'description' => 'SysOM的错误状态。取值：

- `install_fail`：开启错误或未知错误。
- `install_assist_invalid`：云助手状态引起的开启错误。
- `install_assist_command_fail`：执行开启命令失败，导致的开启错误。
- `uninstall_fail`：关闭错误或未知错误。
- `uninstall_assist_invalid`：云助手状态引起的关闭错误。
- `uninstall_assist_command_fail`：执行关闭命令失败，导致的开启错误。',
                          'type' => 'string',
                          'example' => 'install_fail',
                        ),
                        'OsMonitorErrorDetail' => 
                        array (
                          'description' => '执行错误的详细信息。取值：

- `Command.ErrorCode.Fail.Downlaod.REGIN_ID`：获取地域ID失败。
- `Command.ErrorCode.Fail.Downlaod.SYSAK`：下载SYSAK RPM失败。
- `Command.ErrorCode.Fail.Downlaod.CMON_FILE`：下载CMON文件失败。
- `Command.ErrorCode.Fail.Downlaod.BTF`：SYSAK服务启动失败，BTF文件缺失。
- `Command.ErrorCode.Fail.Start.SYSAK`：SYSAK服务启动失败（未知原因）。',
                          'type' => 'string',
                          'example' => 'Command.ErrorCode.Fail.Downlaod.REGIN_ID',
                        ),
                        'OsMonitorVersion' => 
                        array (
                          'description' => 'SysOM监控的插件版本。',
                          'type' => 'string',
                          'example' => '1.3.0-12',
                        ),
                        'OsMonitorConfig' => 
                        array (
                          'description' => 'SysOM插件的配置信息`sysak`是否开启监控。取值：

- true：`sysak`开启监控。

- false：`sysak`未开启监控。',
                          'type' => 'string',
                          'example' => '{"sysak":true}',
                        ),
                        'AgentInstallErrorCode' => 
                        array (
                          'description' => '安装云监控插件的错误码。取值：
- Common.Timeout：安装超时。
- Common.SLR：未授权云监控的ServiceLinkRole。
- Common.OS：不支持此操作系统。
- Assist.Invalid：云助手未运行。
- Assist.Invoke：启动安装程序错误。
- Assist.Execute：安装程序执行错误。',
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"6F8371DF-AB81-41B8-9E1B-5493B3FF0E4F\\",\\n  \\"Success\\": true,\\n  \\"NodeStatusList\\": {\\n    \\"NodeStatus\\": [\\n      {\\n        \\"Status\\": \\"running\\",\\n        \\"InstanceId\\": \\"i-hp3dunahluwajv6f****\\",\\n        \\"AutoInstall\\": true,\\n        \\"OsMonitorStatus\\": \\"running\\",\\n        \\"OsMonitorErrorCode\\": \\"install_fail\\",\\n        \\"OsMonitorErrorDetail\\": \\"Command.ErrorCode.Fail.Downlaod.REGIN_ID\\",\\n        \\"OsMonitorVersion\\": \\"1.3.0-12\\",\\n        \\"OsMonitorConfig\\": \\"{\\\\\\"sysak\\\\\\":true}\\",\\n        \\"AgentInstallErrorCode\\": \\"\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMonitoringAgentStatusesResponse>\\n\\t<RequestId>6F8371DF-AB81-41B8-9E1B-5493B3FF0E4F</RequestId>\\n\\t<NodeStatusList>\\n\\t\\t<NodeStatus>\\n\\t\\t\\t<Status>running</Status>\\n\\t\\t\\t<AutoInstall>true</AutoInstall>\\n\\t\\t\\t<InstanceId>i-hp3dunahluwajv6f****</InstanceId>\\n\\t\\t</NodeStatus>\\n\\t</NodeStatusList>\\n\\t<Code>200</Code>\\n\\t<Success>true</Success>\\n</DescribeMonitoringAgentStatusesResponse>\\t","errorExample":""}]',
      'title' => '查询云监控插件运行状态',
      'summary' => '调用DescribeMonitoringAgentStatuses接口查询云监控插件运行状态。',
      'description' => '本文将提供一个示例，查询实例`i-hp3dunahluwajv6f****`的云监控插件的运行状态。返回结果显示云监控插件的运行状态为`running`（运行中）。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyHostInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。仅支持非阿里云主机。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'host-R_NSWNV****',
          ),
        ),
        1 => 
        array (
          'name' => 'HostName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主机名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'portalHost',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EBB5215C-44AB-4000-A2D7-48634FDC4F04',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"EBB5215C-44AB-4000-A2D7-48634FDC4F04\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ModifyHostInfo>\\n\\t\\t<RequestId>EBB5215C-44AB-4000-A2D7-48634FDC4F04</RequestId>\\n\\t\\t<Success>true</Success>\\n\\t\\t<Code>200</Code>\\n</ModifyHostInfo>","errorExample":""}]',
      'title' => '修改非阿里云的主机显示信息',
      'summary' => '调用ModifyHostInfo接口修改非阿里云的主机显示信息。',
      'description' => '****',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMonitoringConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F35654DB-0C9D-4FB3-903F-479BA7663061',
              ),
              'AutoInstall' => 
              array (
                'description' => '现有ECS主机是否自动安装云监控插件。取值：

- true

- false',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'EnableInstallAgentNewECS' => 
              array (
                'description' => '新购ECS主机是否自动安装云监控插件。取值：

- true

- false',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is not valid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'The Request is not authorization.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F35654DB-0C9D-4FB3-903F-479BA7663061\\",\\n  \\"AutoInstall\\": false,\\n  \\"Success\\": true,\\n  \\"EnableInstallAgentNewECS\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeMonitoringConfigResponse>\\r\\n\\t<AutoInstall>false</AutoInstall>\\r\\n\\t<EnableInstallAgentNewECS>true</EnableInstallAgentNewECS>\\r\\n\\t<RequestId>BA76F154-DE3F-442C-94D3-895E7ABC1BDE</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeMonitoringConfigResponse>","errorExample":""}]',
      'title' => '查询云监控插件的全局配置',
      'summary' => '调用DescribeMonitoringConfig接口查询云监控插件的全局配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutMonitoringConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AutoInstall',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该参数已废弃，无需关注。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        1 => 
        array (
          'name' => 'EnableInstallAgentNewECS',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新购ECS主机是否自动安装云监控插件。取值：
- true（默认值）：新购ECS主机自动安装云监控插件。

- false：新购ECS主机不自动安装云监控插件。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Specified parameter EnableInstallAgentNewECS is not valid.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '109C8095-6FAD-4DBB-B013-6ED18CE4C0B1',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is not valid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'The Request is not authorization.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"Specified parameter EnableInstallAgentNewECS is not valid.\\",\\n  \\"RequestId\\": \\"109C8095-6FAD-4DBB-B013-6ED18CE4C0B1\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PutMonitoringConfigResponse>\\n    <RequestId>109C8095-6FAD-4DBB-B013-6ED18CE4C0B1</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</PutMonitoringConfigResponse>","errorExample":""}]',
      'title' => '设置云监控插件的全局配置',
      'summary' => '调用PutMonitoringConfig接口设置云监控插件的全局配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UninstallMonitoringAgent' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'high',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '非阿里云主机的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'host-****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'Successfully',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '466902B9-2842-40B0-B796-00FE772B6EF3',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => 'AgentStateError',
            'errorMessage' => 'Expected agent running state is stopped.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successfully\\",\\n  \\"RequestId\\": \\"466902B9-2842-40B0-B796-00FE772B6EF3\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UninstallMonitoringAgentResponse>\\n  <RequestId>466902B9-2842-40B0-B796-00FE772B6EF3</RequestId>\\n  <Code>200</Code>\\n  <Message>Successfully</Message>\\n</UninstallMonitoringAgentResponse>","errorExample":""}]',
      'title' => '卸载非阿里云主机的云监控插件',
      'summary' => '调用UninstallMonitoringAgent接口卸载非阿里云主机的云监控插件。',
      'description' => '> 本接口不适用于阿里云主机的云监控插件。卸载阿里云主机的云监控插件的方法，请参见[安装和卸载插件](~~183482~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateMonitoringAgentProcess' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProcessName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '进程名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'java',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => ' i-2ze51wjtwox01r8g****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProcessUser',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '执行进程的用户。',
            'type' => 'string',
            'required' => false,
            'example' => 'admin',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。
',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误消息。',
                'type' => 'string',
                'example' => 'User not authorized to operate on the specified resource.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0DFCB47D-E7E1-4CBE-A381-8339F7B300EF',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Id' => 
              array (
                'description' => '进程ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '12345',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"User not authorized to operate on the specified resource.\\",\\n  \\"RequestId\\": \\"0DFCB47D-E7E1-4CBE-A381-8339F7B300EF\\",\\n  \\"Success\\": true,\\n  \\"Id\\": 12345\\n}","errorExample":""},{"type":"xml","example":"<CreateMonitoringAgentProcessResponse>\\n    <RequestId>0DFCB47D-E7E1-4CBE-A381-8339F7B300EF</RequestId>\\n    <Id>171894</Id>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</CreateMonitoringAgentProcessResponse>","errorExample":""}]',
      'title' => '创建进程监控',
      'summary' => '调用CreateMonitoringAgentProcess接口创建进程监控。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateMonitorAgentProcess' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProcessName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '进程名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'AliYunDun',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-2ze2d6j5uhg20x47****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProcessUser',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '执行进程的用户。',
            'type' => 'string',
            'required' => false,
            'example' => 'admin',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'User not authorized to operate on the specified resource.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '971CC023-5A96-452A-BB7C-2483F948BCFD',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Id' => 
              array (
                'description' => '进程ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '123456',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"User not authorized to operate on the specified resource.\\",\\n  \\"RequestId\\": \\"971CC023-5A96-452A-BB7C-2483F948BCFD\\",\\n  \\"Success\\": true,\\n  \\"Id\\": 123456\\n}","errorExample":""},{"type":"xml","example":"<CreateMonitorAgentProcessResponse>\\n    <RequestId>971CC023-5A96-452A-BB7C-2483F948BCFD</RequestId>\\n    <Id>123456</Id>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</CreateMonitorAgentProcessResponse>","errorExample":""}]',
      'title' => '创建进程监控',
      'summary' => '调用CreateMonitorAgentProcess接口创建进程监控。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMonitoringAgentProcesses' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-hp3hl3cx1pbahzy8****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C11C0E85-6862-4F25-8D66-D6A5E0882984',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'NodeProcesses' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'NodeProcess' => 
                  array (
                    'description' => '进程数列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ProcessName' => 
                        array (
                          'description' => '进程名称。',
                          'type' => 'string',
                          'example' => 'Nginx',
                        ),
                        'ProcessId' => 
                        array (
                          'description' => '进程ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '234567',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '应用分组ID。',
                          'type' => 'string',
                          'example' => '3619****',
                        ),
                        'Command' => 
                        array (
                          'description' => '用于取得指定进程数信息的指令。目前仅支持`number`。

> `number`表示匹配条件的进程数。
',
                          'type' => 'string',
                          'example' => 'number',
                        ),
                        'ProcessUser' => 
                        array (
                          'description' => '执行进程的用户。',
                          'type' => 'string',
                          'example' => 'alice',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'i-hp3hl3cx1pbahzy8****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"C11C0E85-6862-4F25-8D66-D6A5E0882984\\",\\n  \\"Success\\": true,\\n  \\"NodeProcesses\\": {\\n    \\"NodeProcess\\": [\\n      {\\n        \\"ProcessName\\": \\"Nginx\\",\\n        \\"ProcessId\\": 234567,\\n        \\"GroupId\\": \\"3619****\\",\\n        \\"Command\\": \\"number\\",\\n        \\"ProcessUser\\": \\"alice\\",\\n        \\"InstanceId\\": \\"i-hp3hl3cx1pbahzy8****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMonitoringAgentProcessesResponse>\\r\\n\\t<RequestId>C11C0E85-6862-4F25-8D66-D6A5E0882984</RequestId>\\r\\n\\t<NodeProcesses>\\r\\n\\t\\t<NodeProcess>\\r\\n\\t\\t\\t<ProcessName>HTTP</ProcessName>\\r\\n\\t\\t\\t<InstanceId>i-hp3hl3cx1pbahzy8****</InstanceId>\\r\\n\\t\\t\\t<Command>number</Command>\\r\\n\\t\\t\\t<ProcessId>123456</ProcessId>\\r\\n\\t\\t</NodeProcess>\\r\\n\\t\\t<NodeProcess>\\r\\n\\t\\t\\t<ProcessName>Nginx</ProcessName>\\r\\n\\t\\t\\t<ProcessUser>alice</ProcessUser>\\r\\n\\t\\t\\t<GroupId>3619****</GroupId>\\r\\n\\t\\t\\t<InstanceId>i-hp3hl3cx1pbahzy8****</InstanceId>\\r\\n\\t\\t\\t<Command>number</Command>\\r\\n\\t\\t\\t<ProcessId>234567</ProcessId>\\r\\n\\t\\t</NodeProcess>\\r\\n\\t</NodeProcesses>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeMonitoringAgentProcessesResponse>\\t","errorExample":""}]',
      'title' => '查询指定资源的进程数列表',
      'summary' => '调用DescribeMonitoringAgentProcesses接口查询指定资源的进程数列表。',
      'description' => '> 调用本接口之前，您需要先调用CreateMonitoringAgentProcess接口创建进程数。更多信息，请参见[CreateMonitoringAgentProcess](~~114951~~~)。

本文将提供一个示例，查询资源`i-hp3hl3cx1pbahzy8****`的进程数列表。返回结果显示进程数`Nginx`和`HTTP`的详细信息。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteMonitoringAgentProcess' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-KpVny6l****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProcessName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '进程名称。

> `ProcessId`和`ProcessName`必须设置一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'http',
          ),
        ),
        2 => 
        array (
          'name' => 'ProcessId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '进程ID。

> `ProcessId`和`ProcessName`必须设置一个。',
            'type' => 'string',
            'required' => false,
            'example' => '123****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '971CC023-5A96-452A-BB7C-2483F948BCFD',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"971CC023-5A96-452A-BB7C-2483F948BCFD\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteMonitoringAgentProcessResponse>\\n    <RequestId>EBB5215C-44AB-4000-A2D7-48634FDC4F04</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</DeleteMonitoringAgentProcessResponse>","errorExample":""}]',
      'title' => '删除指定主机中的指定进程监控',
      'summary' => '调用DeleteMonitoringAgentProcess接口删除指定主机中的指定进程监控。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSystemEventHistogram' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Product',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的名称缩写。
>关于产品名称缩写的取值，请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'OSS',
          ),
        ),
        1 => 
        array (
          'name' => 'EventType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件类型。
>关于事件类型的取值，请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'Exception',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件名称。
>关于事件名称的取值，请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'BucketIngressBandwidth',
          ),
        ),
        3 => 
        array (
          'name' => 'Level',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件级别，取值：

- CRITICAL：严重
- WARN：警告
- INFO：信息',
            'type' => 'string',
            'required' => false,
            'example' => 'CRITICAL',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件状态。

>关于事件状态的取值，请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'normal',
          ),
        ),
        5 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '12345',
          ),
        ),
        6 => 
        array (
          'name' => 'SearchKeywords',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索事件内容包含的关键字。取值：

- 如果您待搜索事件的内容中包括a和b，可以搜索`a and b`。

- 如果您待搜索事件的内容中包括a或b，可以搜索`a or b`。',
            'type' => 'string',
            'required' => false,
            'example' => 'cms',
          ),
        ),
        7 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
            'type' => 'string',
            'required' => false,
            'example' => '1552209685596',
          ),
        ),
        8 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
            'type' => 'string',
            'required' => false,
            'example' => '1552220485596',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '486029C9-53E1-44B4-85A8-16A571A043FD',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'SystemEventHistograms' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SystemEventHistogram' => 
                  array (
                    'description' => '事件分段统计详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EndTime' => 
                        array (
                          'description' => '结束时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1552225753000',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '开始时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1552225770000',
                        ),
                        'Count' => 
                        array (
                          'description' => '事件发生数量。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"486029C9-53E1-44B4-85A8-16A571A043FD\\",\\n  \\"Success\\": \\"true\\",\\n  \\"SystemEventHistograms\\": {\\n    \\"SystemEventHistogram\\": [\\n      {\\n        \\"EndTime\\": 1552225753000,\\n        \\"StartTime\\": 1552225770000,\\n        \\"Count\\": 2\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSystemEventHistogram>\\r\\n\\t\\t<RequestId>E38CA81A-A012-4C59-B694-42AAFBE27ED2</RequestId>\\r\\n\\t\\t<SystemEventHistograms>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593671700000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593671684000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593671730000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593671700000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593671760000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593671730000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593671790000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593671760000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593671820000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593671790000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593671850000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593671820000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593671880000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593671850000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593671910000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593671880000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593671940000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593671910000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593671970000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593671940000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672000000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593671970000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672030000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672000000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672060000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672030000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672090000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672060000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672120000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672090000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672150000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672120000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672180000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672150000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672210000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672180000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672240000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672210000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672270000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672240000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672300000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672270000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672330000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672300000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672360000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672330000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672390000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672360000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672420000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672390000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672450000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672420000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672480000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672450000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672510000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672480000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672540000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672510000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672570000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672540000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t\\t<SystemEventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1593672584000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1593672570000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</SystemEventHistogram>\\r\\n\\t\\t</SystemEventHistograms>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Success>true</Success>\\r\\n</DescribeSystemEventHistogram>\\r\\n","errorExample":""}]',
      'title' => '查询系统事件的时段数量分布图（柱状图）',
      'summary' => '调用DescribeSystemEventHistogram接口查询系统事件的时段数量分布图（柱状图）。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSystemEventMetaList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A6582C8B-E67C-4A19-BC15-EAEFEBDC7995',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Resource' => 
                  array (
                    'description' => 'Meta返回信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '事件状态。',
                          'type' => 'string',
                          'example' => 'failed',
                        ),
                        'EventType' => 
                        array (
                          'description' => '事件类型。取值：

- StatusNotification：故障通知。

- Exception：异常。

- Maintenance：运维。',
                          'type' => 'string',
                          'example' => 'Exception',
                        ),
                        'Product' => 
                        array (
                          'description' => '产品名称缩写。',
                          'type' => 'string',
                          'example' => 'ADS',
                        ),
                        'NameDesc' => 
                        array (
                          'description' => '事件名称的描述信息。',
                          'type' => 'string',
                          'example' => '查询失败率高',
                        ),
                        'NameDesc.En' => 
                        array (
                          'description' => '英文事件名称的描述信息。',
                          'type' => 'string',
                          'example' => 'High query failure rate.',
                        ),
                        'Name' => 
                        array (
                          'description' => '事件名称。',
                          'type' => 'string',
                          'example' => 'SelectFailureRate',
                        ),
                        'StatusDesc' => 
                        array (
                          'description' => '事件状态描述。',
                          'type' => 'string',
                          'example' => 'Operation Failed',
                        ),
                        'Level' => 
                        array (
                          'description' => '报警级别。取值：

- CRITICAL：紧急。
- WARN：警告。
- INFO：信息。',
                          'type' => 'string',
                          'example' => 'INFO',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"A6582C8B-E67C-4A19-BC15-EAEFEBDC7995\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Resource\\": [\\n      {\\n        \\"Status\\": \\"failed\\",\\n        \\"EventType\\": \\"Exception\\",\\n        \\"Product\\": \\"ADS\\",\\n        \\"NameDesc\\": \\"查询失败率高\\",\\n        \\"NameDesc.En\\": \\"High query failure rate.\\",\\n        \\"Name\\": \\"SelectFailureRate\\",\\n        \\"StatusDesc\\": \\"Operation Failed\\",\\n        \\"Level\\": \\"INFO\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSystemEventMetaListResponse>\\r\\n\\t\\t<RequestId>46350DCE-3399-473B-875F-1340DC97186C</RequestId>\\r\\n\\t\\t<Message>success</Message>\\r\\n\\t\\t<Data>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Status>Failed</Status>\\r\\n\\t\\t\\t\\t<StatusDesc>OperationFailed</StatusDesc>\\r\\n\\t\\t\\t\\t<NameDesc>插入失败率10%</NameDesc>\\r\\n\\t\\t\\t\\t<NameDesc.En>InsertFailureRate</NameDesc.En>\\r\\n\\t\\t\\t\\t<EventType>Exception</EventType>\\r\\n\\t\\t\\t\\t<Product>ADS</Product>\\r\\n\\t\\t\\t\\t<Level>CRITICAL</Level>\\r\\n\\t\\t\\t\\t<Name>InsertFailureRate</Name>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Status>Failed</Status>\\r\\n\\t\\t\\t\\t<StatusDesc>OptionFailed</StatusDesc>\\r\\n\\t\\t\\t\\t<NameDesc>查询失败率10%</NameDesc>\\r\\n\\t\\t\\t\\t<NameDesc.En>SelectFailureRate</NameDesc.En>\\r\\n\\t\\t\\t\\t<EventType>Exception</EventType>\\r\\n\\t\\t\\t\\t<Product>ADS</Product>\\r\\n\\t\\t\\t\\t<Level>CRITICAL</Level>\\r\\n\\t\\t\\t\\t<Name>SelectFailureRate</Name>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Status>Failed</Status>\\r\\n\\t\\t\\t\\t<StatusDesc>Operation Failed</StatusDesc>\\r\\n\\t\\t\\t\\t<NameDesc>磁盘使用率80%</NameDesc>\\r\\n\\t\\t\\t\\t<NameDesc.En>StorageUsage</NameDesc.En>\\r\\n\\t\\t\\t\\t<EventType>Maintenance</EventType>\\r\\n\\t\\t\\t\\t<Product>ADS</Product>\\r\\n\\t\\t\\t\\t<Level>CRITICAL</Level>\\r\\n\\t\\t\\t\\t<Name>StorageUsage</Name>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Status>EightyPercentQuotaExceeded</Status>\\r\\n\\t\\t\\t\\t<StatusDesc>超过Quota 80%事件</StatusDesc>\\r\\n\\t\\t\\t\\t<NameDesc>超过Quota 80%事件</NameDesc>\\r\\n\\t\\t\\t\\t<NameDesc.En>EightyPercentQuotaExceeded:Route</NameDesc.En>\\r\\n\\t\\t\\t\\t<EventType>80%QuotaExceeded</EventType>\\r\\n\\t\\t\\t\\t<Product>CEN</Product>\\r\\n\\t\\t\\t\\t<Level>WARN</Level>\\r\\n\\t\\t\\t\\t<Name>EightyPercentQuotaExceeded:Route</Name>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Status>NinetyEightPercentQuotaExceeded</Status>\\r\\n\\t\\t\\t\\t<StatusDesc>超过Quota 98%事件</StatusDesc>\\r\\n\\t\\t\\t\\t<NameDesc>超过Quota 98%事件</NameDesc>\\r\\n\\t\\t\\t\\t<NameDesc.En>NinetyEightPercentQuotaExceeded:Route</NameDesc.En>\\r\\n\\t\\t\\t\\t<EventType>98%QuotaExceeded</EventType>\\r\\n\\t\\t\\t\\t<Product>CEN</Product>\\r\\n\\t\\t\\t\\t<Level>WARN</Level>\\r\\n\\t\\t\\t\\t<Name>NinetyEightPercentQuotaExceeded:Route</Name>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t</Data>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Success>true</Success>\\r\\n</DescribeSystemEventMetaListResponse>","errorExample":""}]',
      'title' => '查询系统事件的Meta信息',
      'summary' => '调用DescribeSystemEventMetaList接口查询系统事件的Meta信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSystemEventAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Product',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品名称缩写。

>关于产品名称缩写的取值，请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'oss',
          ),
        ),
        1 => 
        array (
          'name' => 'EventType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件类型。

>关于事件类型的取值，请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'Exception',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件名称。

>关于事件名称的取值，请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'BucketIngressBandwidth',
          ),
        ),
        3 => 
        array (
          'name' => 'Level',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件级别。取值：

- CRITICAL：严重。
- WARN：警告。
- INFO：信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'CRITICAL',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件状态。

>关于事件状态的取值，请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'normal',
          ),
        ),
        5 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '12346',
          ),
        ),
        6 => 
        array (
          'name' => 'SearchKeywords',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索事件内容包含的关键字。取值：

- 如果您待搜索事件的内容中包括a和b，可以搜索`a and b`。

- 如果您待搜索事件的内容中包括a或b，可以搜索`a or b`。
',
            'type' => 'string',
            'required' => false,
            'example' => 'cms',
          ),
        ),
        7 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
            'type' => 'string',
            'required' => false,
            'example' => '1552199984949',
          ),
        ),
        8 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
            'type' => 'string',
            'required' => false,
            'example' => '1552221584949',
          ),
        ),
        9 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

取值范围：1~100000000。

默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        10 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示记录条数。

取值范围：1~100。

默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。当操作成功时，返回`success`；当操作失败时，返回错误信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '60912C8D-B340-4253-ADE7-61ACDFD25CFC',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'SystemEvents' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SystemEvent' => 
                  array (
                    'description' => '事件内容详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '事件状态。',
                          'type' => 'string',
                          'example' => 'normal',
                        ),
                        'Time' => 
                        array (
                          'description' => '事件发生的时间戳。

单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1552199984000',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '应用分组ID。',
                          'type' => 'string',
                          'example' => '12345',
                        ),
                        'Product' => 
                        array (
                          'description' => '产品名称缩写。',
                          'type' => 'string',
                          'example' => 'CloudMonitor',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => 'instanceId1',
                        ),
                        'ResourceId' => 
                        array (
                          'description' => '资源ID。',
                          'type' => 'string',
                          'example' => 'xxxxx-1',
                        ),
                        'Name' => 
                        array (
                          'description' => '事件名称。',
                          'type' => 'string',
                          'example' => 'Agent_Status_Stopped',
                        ),
                        'Content' => 
                        array (
                          'description' => '事件内容详情。',
                          'type' => 'string',
                          'example' => '[{"product":"CloudMonitor","content":"{\\"ipGroup\\":\\"112.126.XX.XX,10.163.XX.XX\\",\\"tianjimonVersion\\":\\"1.2.22\\"}","groupId":"176,177,178,179,180,692,120812,1663836,96,2028302","time":"1552209568000","resourceId":"acs:ecs:cn-beijing:173651113438****:instance/i-25k35****","level":"CRITICAL","status":"stopped","instanceName":"cmssiteprobebj-6","name":"Agent_Status_Stopped","regionId":"cn-beijing"}]',
                        ),
                        'Level' => 
                        array (
                          'description' => '事件级别。取值：

- CRITICAL：严重。
- WARN：警告。
- INFO：信息。',
                          'type' => 'string',
                          'example' => 'WARN',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'Id' => 
                        array (
                          'description' => '事件ID。',
                          'type' => 'string',
                          'example' => 'b936efc9-f621-4e8a-a6eb-076be40e****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"60912C8D-B340-4253-ADE7-61ACDFD25CFC\\",\\n  \\"Success\\": \\"true\\",\\n  \\"SystemEvents\\": {\\n    \\"SystemEvent\\": [\\n      {\\n        \\"Status\\": \\"normal\\",\\n        \\"Time\\": 1552199984000,\\n        \\"GroupId\\": \\"12345\\",\\n        \\"Product\\": \\"CloudMonitor\\",\\n        \\"InstanceName\\": \\"instanceId1\\",\\n        \\"ResourceId\\": \\"xxxxx-1\\",\\n        \\"Name\\": \\"Agent_Status_Stopped\\",\\n        \\"Content\\": \\"[{\\\\\\"product\\\\\\":\\\\\\"CloudMonitor\\\\\\",\\\\\\"content\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"ipGroup\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"112.126.XX.XX,10.163.XX.XX\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"tianjimonVersion\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1.2.22\\\\\\\\\\\\\\"}\\\\\\",\\\\\\"groupId\\\\\\":\\\\\\"176,177,178,179,180,692,120812,1663836,96,2028302\\\\\\",\\\\\\"time\\\\\\":\\\\\\"1552209568000\\\\\\",\\\\\\"resourceId\\\\\\":\\\\\\"acs:ecs:cn-beijing:173651113438****:instance/i-25k35****\\\\\\",\\\\\\"level\\\\\\":\\\\\\"CRITICAL\\\\\\",\\\\\\"status\\\\\\":\\\\\\"stopped\\\\\\",\\\\\\"instanceName\\\\\\":\\\\\\"cmssiteprobebj-6\\\\\\",\\\\\\"name\\\\\\":\\\\\\"Agent_Status_Stopped\\\\\\",\\\\\\"regionId\\\\\\":\\\\\\"cn-beijing\\\\\\"}]\\",\\n        \\"Level\\": \\"WARN\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"Id\\": \\"b936efc9-f621-4e8a-a6eb-076be40e****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSystemEventAttribute>\\r\\n\\t\\t<SystemEvents>\\r\\n\\t\\t\\t<SystemEvent>\\r\\n\\t\\t\\t\\t<Status>normal</Status>\\r\\n\\t\\t\\t\\t<InstanceName>instanceId1</InstanceName>\\r\\n\\t\\t\\t\\t<ResourceId>xxxxx-1</ResourceId>\\r\\n\\t\\t\\t\\t<Content>[{\\\\\\"product\\\\\\":\\\\\\"CloudMonitor\\\\\\",\\\\\\"content\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"ipGroup\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"112.126.XX.XX,10.163.XX.XX\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"tianjimonVersion\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1.2.22\\\\\\\\\\\\\\"}\\\\\\",\\\\\\"groupId\\\\\\":\\\\\\"176,177,178,179,180,692,120812,1663836,96,2028302\\\\\\",\\\\\\"time\\\\\\":\\\\\\"1552209568000\\\\\\",\\\\\\"resourceId\\\\\\":\\\\\\"acs:ecs:cn-beijing:173651113438****:instance/i-25k35****\\\\\\",\\\\\\"level\\\\\\":\\\\\\"CRITICAL\\\\\\",\\\\\\"status\\\\\\":\\\\\\"stopped\\\\\\",\\\\\\"instanceName\\\\\\":\\\\\\"cmssiteprobebj-6\\\\\\",\\\\\\"name\\\\\\":\\\\\\"Agent_Status_Stopped\\\\\\",\\\\\\"regionId\\\\\\":\\\\\\"cn-beijing\\\\\\"}]</Content>\\r\\n\\t\\t\\t\\t<Product>CloudMonitor</Product>\\r\\n\\t\\t\\t\\t<Level>WARN</Level>\\r\\n\\t\\t\\t\\t<Time>1552199984000</Time>\\r\\n\\t\\t\\t\\t<RegionId>cn-hangzhou</RegionId>\\r\\n\\t\\t\\t\\t<Name>Agent_Status_Stopped</Name>\\r\\n\\t\\t\\t\\t<GroupId>12345</GroupId>\\r\\n\\t\\t\\t</SystemEvent>\\r\\n\\t\\t</SystemEvents>\\r\\n\\t\\t<Message>success</Message>\\r\\n\\t\\t<RequestId>60912C8D-B340-4253-ADE7-61ACDFD25CFC</RequestId>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Success>true</Success>\\r\\n</DescribeSystemEventAttribute>","errorExample":""}]',
      'title' => '查询系统事件详情',
      'summary' => '调用DescribeSystemEventAttribute接口查询系统事件详情。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSystemEventCount' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Product',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务名称。

调用DescribeSystemEventMetaList接口，获取返回参数`Product`的值，即可获得当前阿里云账号下所有事件的云服务名称。更多信息，请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS',
          ),
        ),
        1 => 
        array (
          'name' => 'EventType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件类型。

调用DescribeSystemEventMetaList接口，获取返回参数`EventType`的值，即可获得当前阿里云账号下所有云服务的事件类型。更多信息，请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'StatusNotification',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件名称。

调用DescribeSystemEventMetaList接口，获取返回参数`Name`的值，即可获得当前阿里云账号下所有云服务的事件名称。更多信息，请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'Instance:StateChange',
          ),
        ),
        3 => 
        array (
          'name' => 'Level',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件级别。取值：

- Critical：严重。

- Warn：警告。

- Info：信息。

调用DescribeSystemEventMetaList接口，获取返回参数`Level`的值，即可获得当前阿里云账号下所有云服务的事件级别。更多信息，请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'Info',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件状态。

调用DescribeSystemEventMetaList接口，获取返回参数`Status`的值，即可获得当前阿里云账号下所有云服务的事件状态。更多信息，请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'Normal',
          ),
        ),
        5 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '17285****',
          ),
        ),
        6 => 
        array (
          'name' => 'SearchKeywords',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索事件内容包含的关键字。取值：

- 如果您需要搜索事件的内容中包括a和b，则可以搜索`a and b`。

- 如果您需要搜索事件的内容中包括a或b，可以搜索`a or b`。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS',
          ),
        ),
        7 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询事件开始的时间戳。单位：毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1635993541000',
          ),
        ),
        8 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询事件结束的时间戳。单位：毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1635993921000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

当请求成功时，返回成功信息；当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C7A7B776-0ACE-5A93-9B07-DE8008D9CCDF',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'SystemEventCounts' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SystemEventCount' => 
                  array (
                    'description' => '事件详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '事件详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '事件状态。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'Time' => 
                        array (
                          'description' => '事件发生的时间戳。单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1635993751000',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '应用分组ID。',
                          'type' => 'string',
                          'example' => '17285****',
                        ),
                        'Product' => 
                        array (
                          'description' => '事件的云服务名称。',
                          'type' => 'string',
                          'example' => 'ECS',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => 'ECS-test',
                        ),
                        'Num' => 
                        array (
                          'description' => '发生事件的数量。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3',
                        ),
                        'ResourceId' => 
                        array (
                          'description' => '资源ID。',
                          'type' => 'string',
                          'example' => 'i-rj99xc6cptkk64ml****',
                        ),
                        'Name' => 
                        array (
                          'description' => '事件名称。',
                          'type' => 'string',
                          'example' => 'Instance:StateChange',
                        ),
                        'Content' => 
                        array (
                          'description' => '事件描述。',
                          'type' => 'string',
                          'example' => '实例状态改变通知',
                        ),
                        'Level' => 
                        array (
                          'description' => '事件级别。取值：

- Critical：严重。

- Warn：警告。

- Info：信息。',
                          'type' => 'string',
                          'example' => 'Info',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"C7A7B776-0ACE-5A93-9B07-DE8008D9CCDF\\",\\n  \\"Success\\": \\"true\\",\\n  \\"SystemEventCounts\\": {\\n    \\"SystemEventCount\\": [\\n      {\\n        \\"Status\\": \\"Normal\\",\\n        \\"Time\\": 1635993751000,\\n        \\"GroupId\\": \\"17285****\\",\\n        \\"Product\\": \\"ECS\\",\\n        \\"InstanceName\\": \\"ECS-test\\",\\n        \\"Num\\": 3,\\n        \\"ResourceId\\": \\"i-rj99xc6cptkk64ml****\\",\\n        \\"Name\\": \\"Instance:StateChange\\",\\n        \\"Content\\": \\"实例状态改变通知\\",\\n        \\"Level\\": \\"Info\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSystemEventCountResponse>\\r\\n\\t<Message>success</Message>\\r\\n\\t<RequestId>C7A7B776-0ACE-5A93-9B07-DE8008D9CCDF</RequestId>\\r\\n\\t<SystemEventCounts>\\r\\n\\t\\t<SystemEventCount>\\r\\n\\t\\t\\t<Num>3</Num>\\r\\n\\t\\t\\t<Product>ECS</Product>\\r\\n\\t\\t\\t<Time>1635993751000</Time>\\r\\n\\t\\t\\t<Name>Instance:StateChange</Name>\\r\\n\\t\\t</SystemEventCount>\\r\\n\\t</SystemEventCounts>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeSystemEventCountResponse>\\t","errorExample":""}]',
      'title' => '查询当前账号下各云服务发生事件的数量',
      'summary' => '调用DescribeSystemEventCount接口查询当前账号下各云服务发生事件的数量。',
      'description' => '### 背景信息
您可以调用[DescribeSystemEventMetaList](~~114972~~)，获取云监控支持的各云服务及其系统事件。
### 使用说明
本文将提供一个示例，查询当前账号云服务器`ECS`发生事件的数量，返回结果显示，发生事件的数量共3条。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。

',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMonitorResourceQuotaAttribute' => 
    array (
      'summary' => '调用DescribeMonitorResourceQuotaAttribute接口查询云监控各个资源的配额。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ShowUsed',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值是否包含已使用配额。取值：
- true（默认值）：包含。
- false：不包含。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '31BC7201-00F2-47B2-B7B9-6A173076ACE',
              ),
              'ResourceQuota' => 
              array (
                'description' => '云监控的配额详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'SuitInfo' => 
                  array (
                    'description' => '云监控当前版本。取值：
- free：免费版。
- pro：专业版。
- cms_post：后付费。',
                    'type' => 'string',
                    'example' => 'pro',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '预付费套餐ID。',
                    'type' => 'string',
                    'example' => 'cms_edition-cn-n6w20rn****',
                  ),
                  'ExpireTime' => 
                  array (
                    'description' => '套餐到期时间。',
                    'type' => 'string',
                    'example' => '2021-02-28',
                  ),
                  'SiteMonitorEcsProbe' => 
                  array (
                    'description' => '站点监控ECS探测点配额。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'QuotaLimit' => 
                      array (
                        'description' => '站点监控ECS探测点的总配额。

> 单个站点监控任务能够选择的最大ECS探测点的数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'QuotaPackage' => 
                      array (
                        'description' => '套餐包内站点监控ECS探测点的配额。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'QuotaUsed' => 
                      array (
                        'description' => '套餐包内站点监控ECS探测点的配额使用量。

> 目前已创建的所有站点监控任务的总ECS探测点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '20',
                      ),
                    ),
                  ),
                  'SiteMonitorOperatorProbe' => 
                  array (
                    'description' => '站点监控运营商探测点配额。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'QuotaLimit' => 
                      array (
                        'description' => '站点监控运营商探测点的总配额。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'QuotaPackage' => 
                      array (
                        'description' => '套餐包内站点监控运营商探测点的配额。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'QuotaUsed' => 
                      array (
                        'description' => '套餐包内站点监控运营商探测点的配额使用量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '0',
                      ),
                    ),
                  ),
                  'SiteMonitorTask' => 
                  array (
                    'description' => '站点监控任务配额。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'QuotaLimit' => 
                      array (
                        'description' => '站点监控任务的总配额。单位：个。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '25',
                      ),
                      'QuotaPackage' => 
                      array (
                        'description' => '套餐包内站点监控任务的配额。单位：个。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '20',
                      ),
                      'QuotaUsed' => 
                      array (
                        'description' => '套餐包内站点监控任务的配额使用量。单位：个。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '15',
                      ),
                    ),
                  ),
                  'SiteMonitorBrowser' => 
                  array (
                    'description' => '浏览器拨测任务数配额。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'QuotaLimit' => 
                      array (
                        'description' => '浏览器拨测任务数的总配额。单位：个。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '50',
                      ),
                      'QuotaPackage' => 
                      array (
                        'description' => '套餐内浏览器拨测任务数的配额。单位：个。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '50',
                      ),
                      'QuotaUsed' => 
                      array (
                        'description' => '套餐内浏览器拨测任务数的配额用量。单位：个。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '15',
                      ),
                    ),
                  ),
                  'SiteMonitorMobile' => 
                  array (
                    'description' => '移动端拨测任务数配额。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'QuotaLimit' => 
                      array (
                        'description' => '移动端拨测任务数配额总量。  单位：个。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '50',
                      ),
                      'QuotaPackage' => 
                      array (
                        'description' => '套餐内移动端拨测任务数配额。  单位：个。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '50',
                      ),
                      'QuotaUsed' => 
                      array (
                        'description' => '套餐内移动端拨测任务数配额用量。 单位：个。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '15',
                      ),
                    ),
                  ),
                  'CustomMonitor' => 
                  array (
                    'description' => '自定义监控配额。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'QuotaLimit' => 
                      array (
                        'description' => '自定义监控时间序列的总配额。单位：个。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1200',
                      ),
                      'QuotaPackage' => 
                      array (
                        'description' => '套餐内自定义监控时间序列的配额。单位：个。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1000',
                      ),
                      'QuotaUsed' => 
                      array (
                        'description' => '套餐内自定义监控时间序列的配额用量。单位：个。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '8',
                      ),
                    ),
                  ),
                  'EventMonitor' => 
                  array (
                    'description' => '事件监控配额。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'QuotaLimit' => 
                      array (
                        'description' => '事件监控的总配额。单位：万。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '55',
                      ),
                      'QuotaPackage' => 
                      array (
                        'description' => '套餐包内事件监控的配额。单位：万。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '50',
                      ),
                      'QuotaUsed' => 
                      array (
                        'description' => '套餐包内事件监控的配额用量。单位：万。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                    ),
                  ),
                  'LogMonitor' => 
                  array (
                    'description' => '日志监控配额。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'QuotaLimit' => 
                      array (
                        'description' => '日志监控的总配额。单位：MByte/Min。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '150',
                      ),
                      'QuotaPackage' => 
                      array (
                        'description' => '套餐包内日志监控的配额。单位：MByte/Min。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '150',
                      ),
                      'QuotaUsed' => 
                      array (
                        'description' => '套餐包内日志监控的配额使用量。单位：MByte/Min。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '80',
                      ),
                    ),
                  ),
                  'Api' => 
                  array (
                    'description' => 'API配额。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'QuotaLimit' => 
                      array (
                        'description' => 'API总配额。单位：万次。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '500',
                      ),
                      'QuotaPackage' => 
                      array (
                        'description' => '套餐内API的配额。单位：万次。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '500',
                      ),
                      'QuotaUsed' => 
                      array (
                        'description' => '套餐内API的配额用量。单位：次。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '9987',
                      ),
                    ),
                  ),
                  'SMS' => 
                  array (
                    'description' => '报警短信包配额。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'QuotaLimit' => 
                      array (
                        'description' => '报警短信的总配额。单位：条。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '550',
                      ),
                      'QuotaPackage' => 
                      array (
                        'description' => '报警短信包的配额。单位：条。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '500',
                      ),
                      'QuotaUsed' => 
                      array (
                        'description' => '报警短信包的配额使用量。单位：条。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '38',
                      ),
                    ),
                  ),
                  'Phone' => 
                  array (
                    'description' => '报警电话包配额。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'QuotaLimit' => 
                      array (
                        'description' => '报警电话的总配额。单位：通。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '550',
                      ),
                      'QuotaPackage' => 
                      array (
                        'description' => '报警电话包的配额。单位：通。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '500',
                      ),
                      'QuotaUsed' => 
                      array (
                        'description' => '报警电话包的配额使用量。单位：通。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '100',
                      ),
                    ),
                  ),
                  'EnterpriseQuota' => 
                  array (
                    'description' => '企业云监控配额详情。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'SuitInfo' => 
                      array (
                        'description' => '企业云监控描述。',
                        'type' => 'string',
                        'example' => 'ENTERPRISE',
                      ),
                      'InstanceId' => 
                      array (
                        'description' => '企业云监控实例ID。',
                        'type' => 'string',
                        'example' => 'cms_enterprise_public_cn-7mz27pd****',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"31BC7201-00F2-47B2-B7B9-6A173076ACE\\",\\n  \\"ResourceQuota\\": {\\n    \\"SuitInfo\\": \\"pro\\",\\n    \\"InstanceId\\": \\"cms_edition-cn-n6w20rn****\\",\\n    \\"ExpireTime\\": \\"2021-02-28\\",\\n    \\"SiteMonitorEcsProbe\\": {\\n      \\"QuotaLimit\\": 5,\\n      \\"QuotaPackage\\": 5,\\n      \\"QuotaUsed\\": 20\\n    },\\n    \\"SiteMonitorOperatorProbe\\": {\\n      \\"QuotaLimit\\": 5,\\n      \\"QuotaPackage\\": 5,\\n      \\"QuotaUsed\\": 0\\n    },\\n    \\"SiteMonitorTask\\": {\\n      \\"QuotaLimit\\": 25,\\n      \\"QuotaPackage\\": 20,\\n      \\"QuotaUsed\\": 15\\n    },\\n    \\"SiteMonitorBrowser\\": {\\n      \\"QuotaLimit\\": 50,\\n      \\"QuotaPackage\\": 50,\\n      \\"QuotaUsed\\": 15\\n    },\\n    \\"SiteMonitorMobile\\": {\\n      \\"QuotaLimit\\": 50,\\n      \\"QuotaPackage\\": 50,\\n      \\"QuotaUsed\\": 15\\n    },\\n    \\"CustomMonitor\\": {\\n      \\"QuotaLimit\\": 1200,\\n      \\"QuotaPackage\\": 1000,\\n      \\"QuotaUsed\\": 8\\n    },\\n    \\"EventMonitor\\": {\\n      \\"QuotaLimit\\": 55,\\n      \\"QuotaPackage\\": 50,\\n      \\"QuotaUsed\\": 2\\n    },\\n    \\"LogMonitor\\": {\\n      \\"QuotaLimit\\": 150,\\n      \\"QuotaPackage\\": 150,\\n      \\"QuotaUsed\\": 80\\n    },\\n    \\"Api\\": {\\n      \\"QuotaLimit\\": 500,\\n      \\"QuotaPackage\\": 500,\\n      \\"QuotaUsed\\": 9987\\n    },\\n    \\"SMS\\": {\\n      \\"QuotaLimit\\": 550,\\n      \\"QuotaPackage\\": 500,\\n      \\"QuotaUsed\\": 38\\n    },\\n    \\"Phone\\": {\\n      \\"QuotaLimit\\": 550,\\n      \\"QuotaPackage\\": 500,\\n      \\"QuotaUsed\\": 100\\n    },\\n    \\"EnterpriseQuota\\": {\\n      \\"SuitInfo\\": \\"ENTERPRISE\\",\\n      \\"InstanceId\\": \\"cms_enterprise_public_cn-7mz27pd****\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMonitorResourceQuotaAttributeResponse>\\r\\n\\t<RequestId>1E1961C4-B340-45D7-8CC3-F7D0BF19F2E0</RequestId>\\r\\n\\t<ResourceQuota>\\r\\n\\t\\t<SiteMonitorOperatorProbe>\\r\\n\\t\\t\\t<QuotaUsed>0</QuotaUsed>\\r\\n\\t\\t\\t<QuotaPackage>5</QuotaPackage>\\r\\n\\t\\t\\t<QuotaLimit>5</QuotaLimit>\\r\\n\\t\\t</SiteMonitorOperatorProbe>\\r\\n\\t\\t<InstanceId>cms_edition-cn-n6w20rn****</InstanceId>\\r\\n\\t\\t<Phone>\\r\\n\\t\\t\\t<QuotaUsed>100</QuotaUsed>\\r\\n\\t\\t\\t<QuotaPackage>500</QuotaPackage>\\r\\n\\t\\t\\t<QuotaLimit>550</QuotaLimit>\\r\\n\\t\\t</Phone>\\r\\n\\t\\t<SuitInfo>pro</SuitInfo>\\r\\n\\t\\t<SiteMonitorTask>\\r\\n\\t\\t\\t<QuotaUsed>7</QuotaUsed>\\r\\n\\t\\t\\t<QuotaPackage>20</QuotaPackage>\\r\\n\\t\\t\\t<QuotaLimit>20</QuotaLimit>\\r\\n\\t\\t</SiteMonitorTask>\\r\\n\\t\\t<SMS>\\r\\n\\t\\t\\t<QuotaUsed>38</QuotaUsed>\\r\\n\\t\\t\\t<QuotaPackage>500</QuotaPackage>\\r\\n\\t\\t\\t<QuotaLimit>550</QuotaLimit>\\r\\n\\t\\t</SMS>\\r\\n\\t\\t<LogMonitor>\\r\\n\\t\\t\\t<QuotaUsed>0</QuotaUsed>\\r\\n\\t\\t\\t<QuotaPackage>50</QuotaPackage>\\r\\n\\t\\t\\t<QuotaLimit>50</QuotaLimit>\\r\\n\\t\\t</LogMonitor>\\r\\n\\t\\t<Api>\\r\\n\\t\\t\\t<QuotaUsed>9987</QuotaUsed>\\r\\n\\t\\t\\t<QuotaPackage>500</QuotaPackage>\\r\\n\\t\\t\\t<QuotaLimit>500</QuotaLimit>\\r\\n\\t\\t</Api>\\r\\n\\t\\t<ExpireTime>2021-02-28</ExpireTime>\\r\\n\\t\\t<SiteMonitorEcsProbe>\\r\\n\\t\\t\\t<QuotaUsed>20</QuotaUsed>\\r\\n\\t\\t\\t<QuotaPackage>5</QuotaPackage>\\r\\n\\t\\t\\t<QuotaLimit>5</QuotaLimit>\\r\\n\\t\\t</SiteMonitorEcsProbe>\\r\\n\\t\\t<CustomMonitor>\\r\\n\\t\\t\\t<QuotaUsed>8</QuotaUsed>\\r\\n\\t\\t\\t<QuotaPackage>1000</QuotaPackage>\\r\\n\\t\\t\\t<QuotaLimit>1200</QuotaLimit>\\r\\n\\t\\t</CustomMonitor>\\r\\n\\t\\t<EventMonitor>\\r\\n\\t\\t\\t<QuotaUsed>2</QuotaUsed>\\r\\n\\t\\t\\t<QuotaPackage>50</QuotaPackage>\\r\\n\\t\\t\\t<QuotaLimit>55</QuotaLimit>\\r\\n\\t\\t</EventMonitor>\\r\\n\\t</ResourceQuota>\\r\\n\\t<Code>200</Code>\\r\\n</DescribeMonitorResourceQuotaAttributeResponse>\\t","errorExample":""}]',
      'title' => '查询云监控各个资源的配额',
      'requestParamsDescription' => ' 关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SendDryRunSystemEvent' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Product',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务名称。

>事件支持的云服务，详细信息请参见[云服务系统事件](~~167388~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ecs',
          ),
        ),
        1 => 
        array (
          'name' => 'EventName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件名称。

>详细信息请参见[DescribeSystemEventMetaList](~~114972~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Agent_Status_Stopped',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '123456',
          ),
        ),
        3 => 
        array (
          'name' => 'EventContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件内容。

>该参数的取值可以为任意一个合法的JSON，建议JSON中包含关键字值`product`、`resourceId`和`regionId`。
',
            'type' => 'string',
            'required' => false,
            'example' => '{"product":"CloudMonitor","resourceId":"acs:ecs:cn-hongkong:173651113438****:instance/{instanceId}","level":"CRITICAL","instanceName":"instanceName","regionId":"cn-hangzhou","name":"Agent_Status_Stopped","content":{"ipGroup":"0.0.0.0,0.0.0.1","tianjimonVersion":"1.2.11"},"status":"stopped"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '486029C9-53E1-44B4-85A8-16A571A043FD',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"486029C9-53E1-44B4-85A8-16A571A043FD\\",\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<SendDryRunSystemEventResponse>\\r\\n\\t<Message>success</Message>\\r\\n\\t<RequestId>590FB642-5FFE-4AE0-883B-E1323DD20541</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</SendDryRunSystemEventResponse>\\t","errorExample":""}]',
      'title' => '调试云资源的系统事件',
      'summary' => '调用SendDryRunSystemEvent接口调试云资源的系统事件。',
      'description' => '本接口用于调试资源配置的触发逻辑是否符合预期，即通过调用该接口发送一条测试事件，帮助您验证对应的事件触发报警后返回的内容是否符合预期。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCustomEventCount' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'BABEL_BUY',
          ),
        ),
        1 => 
        array (
          'name' => 'EventId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件ID。',
            'type' => 'string',
            'required' => false,
            'example' => '123',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '12345',
          ),
        ),
        3 => 
        array (
          'name' => 'SearchKeywords',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索事件内容包含的关键字。

- 如果您待搜索事件的内容中包括A和B，则可以搜索A和B。
- 如果您待搜索事件的内容中包括A或B，则可以搜索A或B。',
            'type' => 'string',
            'required' => false,
            'example' => 'cms',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
            'type' => 'string',
            'required' => false,
            'example' => '1552209685596',
          ),
        ),
        5 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
            'type' => 'string',
            'required' => false,
            'example' => '1552220485596',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。当请求成功时，返回成功信息；当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '60912C8D-B340-4253-ADE7-61ACDFD25CFC',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'CustomEventCounts' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CustomEventCount' => 
                  array (
                    'description' => '自定义事件详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Time' => 
                        array (
                          'description' => '事件发生的时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1552267615000',
                        ),
                        'Num' => 
                        array (
                          'description' => '事件数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'Name' => 
                        array (
                          'description' => '事件名称。',
                          'type' => 'string',
                          'example' => 'BABEL_BUY',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"60912C8D-B340-4253-ADE7-61ACDFD25CFC\\",\\n  \\"Success\\": true,\\n  \\"CustomEventCounts\\": {\\n    \\"CustomEventCount\\": [\\n      {\\n        \\"Time\\": 1552267615000,\\n        \\"Num\\": 20,\\n        \\"Name\\": \\"BABEL_BUY\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCustomEventCount>\\n\\t\\t<CustomEventCounts>\\n\\t\\t\\t<CustomEventCount>\\n\\t\\t\\t\\t<Name>BABEL_BUY</Name>\\n\\t\\t\\t\\t<Time>1552267615000</Time>\\n\\t\\t\\t\\t<Num>20</Num>\\n\\t\\t\\t</CustomEventCount>\\n\\t\\t</CustomEventCounts>\\n\\t\\t<Message>success</Message>\\n\\t\\t<RequestId>38D3C270-6799-4461-AA55-7975352140C1</RequestId>\\n\\t\\t<Code>200</Code>\\n\\t\\t<Success>true</Success>\\n</DescribeCustomEventCount>","errorExample":""}]',
      'title' => '查询自定义事件的统计结果',
      'summary' => '调用DescribeCustomEventCount接口查询自定义事件的统计结果。',
      'description' => '>此API以产品为维度统计每个产品自定义事件的数量。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCustomEventHistogram' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'BucketIngressBandwidth',
          ),
        ),
        1 => 
        array (
          'name' => 'Level',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件级别。取值：
- CRITICAL：严重
- WARN：警告
- INFO：信息',
            'type' => 'string',
            'required' => false,
            'example' => 'CRITICAL',
          ),
        ),
        2 => 
        array (
          'name' => 'EventId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件ID。',
            'type' => 'string',
            'required' => false,
            'example' => '123',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '12345',
          ),
        ),
        4 => 
        array (
          'name' => 'SearchKeywords',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索事件内容包含的关键字。

- 如果您待搜索事件的内容中包括A和B，则可以搜索A和B。
- 如果您待搜索事件的内容中包括A或B，则可以搜索A或B。',
            'type' => 'string',
            'required' => false,
            'example' => 'cms',
          ),
        ),
        5 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
            'type' => 'string',
            'required' => false,
            'example' => '1552209685596',
          ),
        ),
        6 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
            'type' => 'string',
            'required' => false,
            'example' => '1552220485596',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。当请求成功时，返回成功信息；当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '486029C9-53E1-44B4-85A8-16A571A043FD',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'EventHistograms' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EventHistogram' => 
                  array (
                    'description' => '自定义事件统计数据列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EndTime' => 
                        array (
                          'description' => '结束时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1552226750000',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '开始时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1552226740000',
                        ),
                        'Count' => 
                        array (
                          'description' => '事件发生的数量。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"486029C9-53E1-44B4-85A8-16A571A043FD\\",\\n  \\"Success\\": \\"true\\",\\n  \\"EventHistograms\\": {\\n    \\"EventHistogram\\": [\\n      {\\n        \\"EndTime\\": 1552226750000,\\n        \\"StartTime\\": 1552226740000,\\n        \\"Count\\": 3\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCustomEventHistogramResponse>\\r\\n\\t\\t<Message>success</Message>\\r\\n\\t\\t<RequestId>5977C7EE-E727-4EC4-B756-ECC8CB820CF4</RequestId>\\r\\n\\t\\t<EventHistograms>\\r\\n\\t\\t\\t<EventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1596000690000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1596000689000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</EventHistogram>\\r\\n\\t\\t\\t<EventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1596000720000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1596000690000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</EventHistogram>\\r\\n\\t\\t\\t<EventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1596000930000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1596000900000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</EventHistogram>\\r\\n\\t\\t\\t<EventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1596000960000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1596000930000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</EventHistogram>\\r\\n\\t\\t\\t<EventHistogram>\\r\\n\\t\\t\\t\\t<EndTime>1596000990000</EndTime>\\r\\n\\t\\t\\t\\t<StartTime>1596000960000</StartTime>\\r\\n\\t\\t\\t\\t<Count>0</Count>\\r\\n\\t\\t\\t</EventHistogram>\\r\\n\\t\\t</EventHistograms>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Success>true</Success>\\r\\n</DescribeCustomEventHistogramResponse>\\r\\n","errorExample":""}]',
      'title' => '查询自定义上报事件的分时段数量分布图',
      'summary' => '调用DescribeCustomEventHistogram接口查询自定义上报事件的分时段数量分布图。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCustomEventAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test123',
          ),
        ),
        1 => 
        array (
          'name' => 'EventId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件ID。',
            'type' => 'string',
            'required' => false,
            'example' => '123****',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '123****',
          ),
        ),
        3 => 
        array (
          'name' => 'SearchKeywords',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索事件内容包含的关键字。

- 如果您待搜索事件的内容中包括A和B，则可以搜索A和B。
- 如果您待搜索事件的内容中包括A或B，则可以搜索A或B。',
            'type' => 'string',
            'required' => false,
            'example' => 'cms',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
            'type' => 'string',
            'required' => false,
            'example' => '1552224365971',
          ),
        ),
        5 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
            'type' => 'string',
            'required' => false,
            'example' => '1552227965971',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '50',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'userId:173651113438**** and name:"BABEL_CHECK"',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '60912C8D-B340-4253-ADE7-61ACDFD25CFC',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'CustomEvents' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CustomEvent' => 
                  array (
                    'description' => '事件详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Time' => 
                        array (
                          'description' => '事件发生的时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
                          'type' => 'string',
                          'example' => '1552199984000',
                        ),
                        'Name' => 
                        array (
                          'description' => '事件名称。',
                          'type' => 'string',
                          'example' => 'BABEL_CHECK',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '应用分组ID。',
                          'type' => 'string',
                          'example' => '12345',
                        ),
                        'Content' => 
                        array (
                          'description' => '上报事件详情。',
                          'type' => 'string',
                          'example' => 'requestId:4975A6F3-19AC-4C01-BAD2-034DA07FEBB5, info:{"autoPay":false,"autoUseCoupon":false,"bid":"26842","buyerId":118935342242****,"commodities":[{"aliyunProduceCode":"cms","chargeType":"PREPAY","commodityCode":"cms_call_num","components":[{"componentCode":"phone_count","instanceProperty":[{"code":"phone_count","value":"500"}],"moduleAttrStatus":1}],"duration":6,"free":false,"orderParams":{"aliyunProduceCode":"cms"},"orderType":"BUY","prePayPostCharge":false,"pricingCycle":"Month","quantity":1,"refundSpecCode":"","renewChange":false,"specCode":"cms_call_num","specUpdate":false,"syncToSubscription":false,"upgradeInquireFinancialValue":true}],"fromApp":"commonbuy","orderParams":{"priceCheck":"true"},"payerId":118935342242****,"requestId":"ade3ad32-f58b-45d7-add4-ac542be3d8ec","skipChannel":false,"userId":118935342242****}',
                        ),
                        'Id' => 
                        array (
                          'description' => '事件ID。',
                          'type' => 'string',
                          'example' => '123',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"userId:173651113438**** and name:\\\\\\"BABEL_CHECK\\\\\\"\\",\\n  \\"RequestId\\": \\"60912C8D-B340-4253-ADE7-61ACDFD25CFC\\",\\n  \\"Success\\": \\"true\\",\\n  \\"CustomEvents\\": {\\n    \\"CustomEvent\\": [\\n      {\\n        \\"Time\\": \\"1552199984000\\",\\n        \\"Name\\": \\"BABEL_CHECK\\",\\n        \\"GroupId\\": \\"12345\\",\\n        \\"Content\\": \\"requestId:4975A6F3-19AC-4C01-BAD2-034DA07FEBB5, info:{\\\\\\"autoPay\\\\\\":false,\\\\\\"autoUseCoupon\\\\\\":false,\\\\\\"bid\\\\\\":\\\\\\"26842\\\\\\",\\\\\\"buyerId\\\\\\":118935342242****,\\\\\\"commodities\\\\\\":[{\\\\\\"aliyunProduceCode\\\\\\":\\\\\\"cms\\\\\\",\\\\\\"chargeType\\\\\\":\\\\\\"PREPAY\\\\\\",\\\\\\"commodityCode\\\\\\":\\\\\\"cms_call_num\\\\\\",\\\\\\"components\\\\\\":[{\\\\\\"componentCode\\\\\\":\\\\\\"phone_count\\\\\\",\\\\\\"instanceProperty\\\\\\":[{\\\\\\"code\\\\\\":\\\\\\"phone_count\\\\\\",\\\\\\"value\\\\\\":\\\\\\"500\\\\\\"}],\\\\\\"moduleAttrStatus\\\\\\":1}],\\\\\\"duration\\\\\\":6,\\\\\\"free\\\\\\":false,\\\\\\"orderParams\\\\\\":{\\\\\\"aliyunProduceCode\\\\\\":\\\\\\"cms\\\\\\"},\\\\\\"orderType\\\\\\":\\\\\\"BUY\\\\\\",\\\\\\"prePayPostCharge\\\\\\":false,\\\\\\"pricingCycle\\\\\\":\\\\\\"Month\\\\\\",\\\\\\"quantity\\\\\\":1,\\\\\\"refundSpecCode\\\\\\":\\\\\\"\\\\\\",\\\\\\"renewChange\\\\\\":false,\\\\\\"specCode\\\\\\":\\\\\\"cms_call_num\\\\\\",\\\\\\"specUpdate\\\\\\":false,\\\\\\"syncToSubscription\\\\\\":false,\\\\\\"upgradeInquireFinancialValue\\\\\\":true}],\\\\\\"fromApp\\\\\\":\\\\\\"commonbuy\\\\\\",\\\\\\"orderParams\\\\\\":{\\\\\\"priceCheck\\\\\\":\\\\\\"true\\\\\\"},\\\\\\"payerId\\\\\\":118935342242****,\\\\\\"requestId\\\\\\":\\\\\\"ade3ad32-f58b-45d7-add4-ac542be3d8ec\\\\\\",\\\\\\"skipChannel\\\\\\":false,\\\\\\"userId\\\\\\":118935342242****}\\",\\n        \\"Id\\": \\"123\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCustomEventAttributeResponse>\\r\\n      <Message>userId:173651113438**** and name:\\"BABEL_CHECK\\"</Message>\\r\\n      <RequestId>194A3F1D-8EA6-4922-BBF2-5F213AC7B648</RequestId>\\r\\n      <CustomEvents>\\r\\n            <CustomEvent>\\r\\n                  <Name>BABEL_CHECK</Name>\\r\\n                  <Time>1553422490000</Time>\\r\\n                  <Id>E4407D77-72BA-4818-8644-39D119D7****</Id>\\r\\n                  <Content>requestId:BD524A26-A3DA-4133-A863-FF56B335797E, info:{\\"autoPay\\":false,\\"autoUseCoupon\\":false,\\"bid\\":\\"26842\\",\\"buyerId\\":118935342242****,\\"commodities\\":[{\\"aliyunProduceCode\\":\\"cms\\",\\"chargeType\\":\\"PREPAY\\",\\"commodityCode\\":\\"cms_edition\\",\\"components\\":[{\\"componentCode\\":\\"suggest_type\\",\\"instanceProperty\\":[{\\"code\\":\\"suggest_type\\",\\"value\\":\\"pro\\"}],\\"moduleAttrStatus\\":1},{\\"componentCode\\":\\"pay_type\\",\\"instanceProperty\\":[{\\"code\\":\\"pay_type\\",\\"value\\":\\"suggest\\"}],\\"moduleAttrStatus\\":1}],\\"duration\\":1,\\"free\\":false,\\"orderParams\\":{\\"aliyunProduceCode\\":\\"cms\\"},\\"orderType\\":\\"BUY\\",\\"prePayPostCharge\\":false,\\"pricingCycle\\":\\"Month\\",\\"quantity\\":1,\\"refundSpecCode\\":\\"\\",\\"renewChange\\":false,\\"specCode\\":\\"cms_edition\\",\\"specUpdate\\":false,\\"syncToSubscription\\":false,\\"upgradeInquireFinancialValue\\":true}],\\"fromApp\\":\\"commonbuy\\",\\"orderParams\\":{\\"priceCheck\\":\\"true\\"},\\"payerId\\":118935342242****,\\"requestId\\":\\"57d81d14-3c60-468e-b50a-1dfdb1594673\\",\\"skipChannel\\":false,\\"userId\\":118935342242****}</Content>\\r\\n                  <GroupId>12345</GroupId>\\r\\n            </CustomEvent>\\r\\n            <CustomEvent>\\r\\n                  <Name>BABEL_CHECK</Name>\\r\\n                  <Time>1553422498000</Time>\\r\\n                  <Id>D44FAC44-EB81-470A-909D-BD963FF9****</Id>\\r\\n                  <Content>requestId:14CC5306-0BAB-464F-B340-CF33AD306510, info:{\\"autoPay\\":false,\\"autoUseCoupon\\":false,\\"bid\\":\\"26842\\",\\"buyerId\\":118935342242****,\\"commodities\\":[{\\"aliyunProduceCode\\":\\"cms\\",\\"chargeType\\":\\"PREPAY\\",\\"commodityCode\\":\\"cms_smspackage\\",\\"components\\":[{\\"componentCode\\":\\"sms_count\\",\\"instanceProperty\\":[{\\"code\\":\\"sms_count\\",\\"value\\":\\"1000\\"}],\\"moduleAttrStatus\\":1}],\\"duration\\":6,\\"free\\":false,\\"orderParams\\":{\\"aliyunProduceCode\\":\\"cms\\"},\\"orderType\\":\\"BUY\\",\\"prePayPostCharge\\":false,\\"pricingCycle\\":\\"Month\\",\\"quantity\\":1,\\"refundSpecCode\\":\\"\\",\\"renewChange\\":false,\\"specCode\\":\\"cms_smspackage\\",\\"specUpdate\\":false,\\"syncToSubscription\\":false,\\"upgradeInquireFinancialValue\\":true}],\\"fromApp\\":\\"commonbuy\\",\\"orderParams\\":{\\"priceCheck\\":\\"true\\"},\\"payerId\\":118935342242****,\\"requestId\\":\\"64461412-31f2-4e52-a875-43bf1410bdf0\\",\\"skipChannel\\":false,\\"userId\\":118935342242****}</Content>\\r\\n                  <GroupId>12345</GroupId>\\r\\n            </CustomEvent>\\r\\n            <CustomEvent>\\r\\n                  <Name>BABEL_CHECK</Name>\\r\\n                  <Time>1553422506000</Time>\\r\\n                  <Id>3AF6FE15-4F6E-459A-96F6-45C74F765209</Id>\\r\\n                  <Content>requestId:4975A6F3-19AC-4C01-BAD2-034DA07FEBB5, info:{\\"autoPay\\":false,\\"autoUseCoupon\\":false,\\"bid\\":\\"26842\\",\\"buyerId\\":118935342242****,\\"commodities\\":[{\\"aliyunProduceCode\\":\\"cms\\",\\"chargeType\\":\\"PREPAY\\",\\"commodityCode\\":\\"cms_call_num\\",\\"components\\":[{\\"componentCode\\":\\"phone_count\\",\\"instanceProperty\\":[{\\"code\\":\\"phone_count\\",\\"value\\":\\"500\\"}],\\"moduleAttrStatus\\":1}],\\"duration\\":6,\\"free\\":false,\\"orderParams\\":{\\"aliyunProduceCode\\":\\"cms\\"},\\"orderType\\":\\"BUY\\",\\"prePayPostCharge\\":false,\\"pricingCycle\\":\\"Month\\",\\"quantity\\":1,\\"refundSpecCode\\":\\"\\",\\"renewChange\\":false,\\"specCode\\":\\"cms_call_num\\",\\"specUpdate\\":false,\\"syncToSubscription\\":false,\\"upgradeInquireFinancialValue\\":true}],\\"fromApp\\":\\"commonbuy\\",\\"orderParams\\":{\\"priceCheck\\":\\"true\\"},\\"payerId\\":118935342242****,\\"requestId\\":\\"ade3ad32-f58b-45d7-add4-ac542be3d8ec\\",\\"skipChannel\\":false,\\"userId\\":118935342242****}</Content>\\r\\n                  <GroupId>12345</GroupId>\\r\\n            </CustomEvent>\\r\\n      </CustomEvents>\\r\\n      <Success>true</Success>\\r\\n      <Code>200</Code>\\r\\n</DescribeCustomEventAttributeResponse>","errorExample":""}]',
      'title' => '查询自定义事件的详情',
      'summary' => '调用DescribeCustomEventAttribute接口查询自定义事件的详情。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutCustomEvent' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EventInfo',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '事件信息列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '事件信息列表。',
              'type' => 'object',
              'properties' => 
              array (
                'EventName' => 
                array (
                  'description' => '事件名称。N的取值范围：1~50。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'myEvent',
                ),
                'Time' => 
                array (
                  'description' => '发生事件的时间。

格式：`yyyyMMddTHHmmss.SSSZ`（年月日时分秒.毫秒时区）。

N的取值范围：1~50。

> 您还可以输入Unix时间（例如：1552199984000）。单位：毫秒。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '20171013T170923.456+0800',
                ),
                'GroupId' => 
                array (
                  'description' => '应用分组ID。N的取值范围：0~50。

默认值：0.0表示上报的事件不属于任何一个应用分组。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '123456',
                ),
                'Content' => 
                array (
                  'description' => '事件内容。N的取值范围：1~50。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'IOException',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '131DD9C8-9A32-4428-AD2E-4E3013B6E3A7',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"131DD9C8-9A32-4428-AD2E-4E3013B6E3A7\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>131DD9C8-9A32-4428-AD2E-4E3013B6E3A7</RequestId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '上报自定义事件的监控数据',
      'summary' => '调用PutCustomEvent接口上报自定义事件的监控数据。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutCustomMetric' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MetricList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '监控数据列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Type' => 
                array (
                  'description' => '上报数值类型。N的取值范围：1~21。取值：

- 0：原始数据。
- 1：聚合数据。

>当上报聚合数据时，建议周期为60秒和300秒的数据均上报，否则无法正常查询跨度大于7天的监控数据。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '0',
                ),
                'MetricName' => 
                array (
                  'description' => '监控项名称。N的取值范围：1~21。详情请参见[云服务监控项](~~163515~~)。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'cpu_total',
                ),
                'Time' => 
                array (
                  'description' => '指标发生的时间。N的取值范围：1~21。支持以下两种类型：
- UTC时间。格式：YYYY-MM-DDThh:mm:ssZ，例如：20171012T132456.888+0800。
- Long型时间戳。例如：1508136760000。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => '1508136760000',
                ),
                'GroupId' => 
                array (
                  'description' => '应用分组ID。N的取值范围：1~21。

> 如果监控项不属于任何应用分组， 则输入0。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '12345',
                ),
                'Values' => 
                array (
                  'description' => '指标值集合。N的取值范围：1~21。

>如果上报数值的类型为0，则上报的是原始值，云监控会按周期将原始值聚合为多个值，例如：最大、计数、求和等。
',
                  'type' => 'string',
                  'required' => true,
                  'example' => '{"value":10.5}',
                ),
                'Dimensions' => 
                array (
                  'description' => '维度Map，用于查询指定资源的监控数据。N的取值范围：1~21。

格式：key-value键值对形式的集合，常用的key-value集合为：`{"Key":"Value"}`。

Key和Value的长度为1~64个字符，超过64个字符时截取前64个。

Key和Value的取值可包含英文字母、数字、点号（.）、短划线（-）、下划线（_）、正斜线（/）和反斜线（\\）。

>Dimensions传入时需要使用JSON字符串表示该Map对象，必须按顺序传入。 ',
                  'type' => 'string',
                  'required' => true,
                  'example' => '{"sampleName1":"value1","sampleName2":"value2"}',
                ),
                'Period' => 
                array (
                  'description' => '聚合周期。N的取值范围：1~21。单位：秒，取值：60或300。

>如果上报数值的类型为1，则需要设置该参数。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '60',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The request has failed due to a temporary failure of the server.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '05B36C2C-5F6E-48D5-8B41-CE36DD7EE8E0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The request has failed due to a temporary failure of the server.\\",\\n  \\"RequestId\\": \\"05B36C2C-5F6E-48D5-8B41-CE36DD7EE8E0\\"\\n}","errorExample":""},{"type":"xml","example":"<PutCustomMetricResponse>\\n\\t<RequestId>75D115CE-5DA8-4647-9073-8F72BB85B6F7</RequestId>\\n\\t<Message>success</Message>\\n\\t<Code>200</Code>\\n</PutCustomMetricResponse>","errorExample":""}]',
      'title' => '上报自定义监控数据',
      'summary' => '调用PutCustomMetric接口上报自定义监控数据。',
      'description' => '> 推荐您使用企业云监控中的接口[PutHybridMonitorMetricData](~~383455~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutCustomMetricRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义监控数据所属应用分组ID。

> 0表示上报的自定义监控数据不属于任何一个应用分组。',
            'type' => 'string',
            'required' => false,
            'example' => '7378****',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。

> 如果报警规则ID已存在，则表示修改报警规则；如果报警规则ID不存在，则表示创建报警规则。',
            'type' => 'string',
            'required' => true,
            'example' => 'MyRuleId1',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'CpuUsage',
          ),
        ),
        3 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项名称。

> 获取方法请参见[DescribeCustomMetricList](~~115005~~)。

',
            'type' => 'string',
            'required' => true,
            'example' => 'cpu_total',
          ),
        ),
        4 => 
        array (
          'name' => 'Resources',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则作用的自定义监控数据。由自定义监控数据所属应用分组ID和监控项所属维度组成。',
            'type' => 'string',
            'required' => true,
            'example' => '[{"groupId":7378****,"dimension":"instanceId=i-hp3543t5e4sudb3s****"}]',
          ),
        ),
        5 => 
        array (
          'name' => 'ContactGroups',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系人组。多个联系人组之间用英文逗号（,）分隔。',
            'type' => 'string',
            'required' => true,
            'example' => 'ECS_Group',
          ),
        ),
        6 => 
        array (
          'name' => 'Webhook',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警发生回调时指定的URL地址，向URL发送POST请求。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://www.aliyun.com',
          ),
        ),
        7 => 
        array (
          'name' => 'EffectiveInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则生效的时间范围。取值范围：00:00-23:59。',
            'type' => 'string',
            'required' => false,
            'example' => '00:00-23:59',
          ),
        ),
        8 => 
        array (
          'name' => 'SilenceTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通道沉默周期。单位：秒，默认值：86400（1天）。

> 当监控数据持续超过报警规则阈值时，每个沉默周期内只发送一次报警通知。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '86400',
            'default' => '86400',
          ),
        ),
        9 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义监控数据的聚合周期。单位：秒。取值为60或60的整数倍。默认为自定义监控数据的原始上报周期。',
            'type' => 'string',
            'required' => false,
            'example' => '300',
            'default' => '300',
          ),
        ),
        10 => 
        array (
          'name' => 'EmailSubject',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警邮件主题。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS实例',
          ),
        ),
        11 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警阈值。',
            'type' => 'string',
            'required' => true,
            'example' => '90',
          ),
        ),
        12 => 
        array (
          'name' => 'Level',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警级别。取值：
- CRITICAL：严重。
- WARN：警告。
- INFO：信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'CRITICAL',
          ),
        ),
        13 => 
        array (
          'name' => 'EvaluationCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警重试次数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '3',
          ),
        ),
        14 => 
        array (
          'name' => 'Statistics',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警统计方法。',
            'type' => 'string',
            'required' => true,
            'example' => 'Average',
          ),
        ),
        15 => 
        array (
          'name' => 'ComparisonOperator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阈值比较符号。取值：

- `>=`

- `=`

- `<=`

- `>`

- `<`

- `!=`',
            'type' => 'string',
            'required' => true,
            'example' => '>=',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。接口调用成功时，返回为空；接口调用失败时，返回失败原因。',
                'type' => 'string',
                'example' => 'ComparisonOperator is mandatory for this action.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '65D50468-ECEF-48F1-A6E1-D952E89D9432',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        204 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        499 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"ComparisonOperator is mandatory for this action.\\",\\n  \\"RequestId\\": \\"65D50468-ECEF-48F1-A6E1-D952E89D9432\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PutCustomMetricRuleResponse>\\n\\t<Message></Message>\\n\\t<Code>200</Code>\\n\\t<Success>true</Success>\\n</PutCustomMetricRuleResponse>","errorExample":""}]',
      'title' => '创建自定义监控报警规则',
      'summary' => '调用PutCustomMetricRule接口创建自定义监控报警规则。',
      'description' => '调用本接口前，请先调用PutCustomMetric接口上报自定义监控数据，详情请参见 [PutCustomMetric](~~115004~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCustomMetricList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。

关于如何获取应用分组ID，请参见[DescribeMonitorGroups](~~115032~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '7378****',
          ),
        ),
        1 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义监控项名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'cpu_total',
          ),
        ),
        2 => 
        array (
          'name' => 'Dimension',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '维度Map，用于查询指定资源的监控数据。
 
',
            'type' => 'string',
            'required' => false,
            'example' => '{sampleName1=value1&amp;sampleName2=value2}',
          ),
        ),
        3 => 
        array (
          'name' => 'Md5',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息摘要算法，可以产生一个128位（16字节）的散列值，用来校验上报的自定义监控数据的唯一性。',
            'type' => 'string',
            'required' => false,
            'example' => '97c25982d9745a231276bff27469****',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

起始值：1。默认值：1。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页时每页显示的数据行数。

起始值：1。默认值：10。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1AF425E4-1DEA-54F2-910A-8117C9686140',
              ),
              'Result' => 
              array (
                'description' => '自定义监控数据查询结果。',
                'type' => 'string',
                'example' => '{\\"all\\":0,\\"size\\":10,\\"param\\":{\\"metric\\":\\"{\\\\\\"metricName\\\\\\":\\\\\\"cpu_total\\\\\\",\\\\\\"groupId\\\\\\":7378****,\\\\\\"project\\\\\\":\\\\\\"acs_customMetric_120886317861****\\\\\\",\\\\\\"dimension\\\\\\":\\\\\\"sampleName1=value1&sampleName2=value2\\\\\\",\\\\\\"status\\\\\\":1}\\",\\"service\\":\\"metric-center.aliyun-inc.com\\"},\\"page\\":1,\\"list\\":[]}',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"1AF425E4-1DEA-54F2-910A-8117C9686140\\",\\n  \\"Result\\": \\"{\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"size\\\\\\\\\\\\\\":10,\\\\\\\\\\\\\\"param\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"metric\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"metricName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"cpu_total\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"groupId\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":7378****,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"project\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"acs_customMetric_120886317861****\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"dimension\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"sampleName1=value1&sampleName2=value2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":1}\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"service\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"metric-center.aliyun-inc.com\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"page\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\"list\\\\\\\\\\\\\\":[]}\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeCustomMetricListResponse>\\r\\n\\t<Message>success</Message>\\r\\n\\t<RequestId>1AF425E4-1DEA-54F2-910A-8117C9686140</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Result>{\\\\\\"all\\\\\\":0,\\\\\\"size\\\\\\":10,\\\\\\"param\\\\\\":{\\\\\\"metric\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"metricName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"cpu_total\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"groupId\\\\\\\\\\\\\\":7378****,\\\\\\\\\\\\\\"project\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"acs_customMetric_120886317861****\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"dimension\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"sampleName1=value1&=value2\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\":1}\\\\\\",\\\\\\"service\\\\\\":\\\\\\"metric-center.aliyun-inc.com\\\\\\"},\\\\\\"page\\\\\\":1,\\\\\\"list\\\\\\":[]}</Result>\\r\\n</DescribeCustomMetricListResponse>\\t","errorExample":""}]',
      'title' => '查询上报的自定义监控数据',
      'summary' => '调用DescribeCustomMetricList接口查询上报的自定义监控数据。',
      'description' => '> 建议您通过DescribeMetricList接口查询监控数据。更多信息，请参见[DescribeMetricList](~~51936~~)。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteCustomMetric' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => true,
            'example' => '3607****',
          ),
        ),
        1 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项的名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'AdvanceCredit',
          ),
        ),
        2 => 
        array (
          'name' => 'Md5',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息摘要算法，可以产生一个128位（16字节）的散列值，用来校验上报的自定义监控数据的唯一性。

> 当查询自定义监控项时，会返回`Md5`。


',
            'type' => 'string',
            'required' => false,
            'example' => '38796C8CFFEB8F89BB2A626C7BD7****',
          ),
        ),
        3 => 
        array (
          'name' => 'UUID',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '发起请求申请时的UUID。

> 查询自定义监控项时，会返回`UUID`，建议您使用`Md5`。',
            'type' => 'string',
            'required' => false,
            'example' => '5497633c-66c5-4eae-abaa-89db5adb****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '05B36C2C-5F6E-48D5-8B41-CE36DD7EE8E0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"05B36C2C-5F6E-48D5-8B41-CE36DD7EE8E0\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteCustomMetric>\\n\\t\\t<Message>success</Message>\\n\\t\\t<RequestId>05B36C2C-5F6E-48D5-8B41-CE36DD7EE8E0</RequestId>\\n\\t\\t<Code>200</Code>\\n</DeleteCustomMetric>","errorExample":""}]',
      'title' => '删除自定义监控上报数据',
      'summary' => '调用DeleteCustomMetric接口删除自定义监控上报数据。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutLogMonitor' => 
    array (
      'summary' => '调用PutLogMonitor接口创建或修改日志监控。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志监控ID。',
            'type' => 'string',
            'required' => false,
            'example' => '16****',
          ),
        ),
        1 => 
        array (
          'name' => 'SlsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务中日志项目（Project）所在地域。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'SlsProject',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务中日志项目的名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'test-project',
          ),
        ),
        3 => 
        array (
          'name' => 'SlsLogstore',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务中日志库的名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'test-logstore',
          ),
        ),
        4 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项名称。关于云监控支持云服务的监控项，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'cpu_total',
          ),
        ),
        5 => 
        array (
          'name' => 'MetricExpress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展字段。 扩展字段为统计方法中的结果提供四则运算的功能。

例如：在统计方法中配置了HTTP状态码请求总数TotalNumber和HTTP状态码大于499的请求数5xxNumber，则可以通过扩展字段计算出服务端的错误率：5xxNumber/TotalNumber*100。

JSON格式：{"extend":{"errorPercent":"5xxNumber/TotalNumber*100"}}。字段说明如下：

- extend：必填字段。

- errorPercent：计算结果生成新字段的别名，您可以根据真实情况自行命名。 

- errorPercent：现有字段的计算表达式。',
            'type' => 'string',
            'required' => false,
            'example' => '{"extend":{"errorPercent":"5XXNumber/TotalNumber*100"}}',
          ),
        ),
        6 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '7301****',
          ),
        ),
        7 => 
        array (
          'name' => 'ValueFilterRelation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志筛选的过滤条件。取值：

- and：和。

- or：或。

> 本参数需要与`ValueFilter.N.Key`配合使用。',
            'type' => 'string',
            'required' => true,
            'example' => 'and',
          ),
        ),
        8 => 
        array (
          'name' => 'Tumblingwindows',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预计算窗口时间。单位：秒。云监控将在定义的预计算时间对数据做一次聚合计算。',
            'type' => 'string',
            'required' => false,
            'example' => '60,300',
          ),
        ),
        9 => 
        array (
          'name' => 'Unit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '单位。',
            'type' => 'string',
            'required' => false,
            'example' => 'Percent',
          ),
        ),
        10 => 
        array (
          'name' => 'Aggregates',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '聚合计算定义。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'FieldName' => 
                array (
                  'description' => '聚合计算原始的字段名称。N的取值范围：1~10。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'sourceCount',
                ),
                'Function' => 
                array (
                  'description' => '在计算周期内根据选定的统计方法对日志数据进行聚合处理。N的取值范围：1~10。取值：
- count：计数。
- sum：求和。
- avg：平均值。
- max：最大值。
- min：最小值。
- countps：计算统计周期内指定字段求count后的每秒平均值。
- sumps：计算统计周期内指定字段求sum后的每秒平均值。
- distinct：去重后计算统计周期内指定字段出现的次数。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'count',
                ),
                'Alias' => 
                array (
                  'description' => '聚合计算别名。N的取值范围：1~10。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Count',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10,
          ),
        ),
        11 => 
        array (
          'name' => 'Groupbys',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '对数据进行空间维度聚合。相当于SQL中的Group By，根据指定的维度，对监控数据进行分组。如果Group By不选择任何维度，则根据聚合方法对全部监控数据进行聚合。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'FieldName' => 
                array (
                  'description' => 'GroupBy字段名称。N的取值范围：1~10。 ',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cpu',
                ),
                'Alias' => 
                array (
                  'description' => 'GroupBy别名。N的取值范围：1~10。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'CPUUtilization',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        12 => 
        array (
          'name' => 'ValueFilter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '筛选的过滤规则，配合ValueFilterRelation使用。相当于SQL中的Where条件。如果不填写，则表示对全部数据进行处理。例如：日志中有Level和Error字段，如果需要统计每分钟Error出现的次数，则统计方法可以定义为对Level求和，并且Level=Error。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '日志匹配的字段名名称。N的取值范围：1~10。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'lh_source',
                ),
                'Value' => 
                array (
                  'description' => '日志匹配的字段值。N的取值范围：1~10。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'Operator' => 
                array (
                  'description' => '字段值的匹配方式。N的取值范围：1~10。取值：
- `contain`：包含。
- `notContain`：不包含。
- `>`：大于。
- `<`：小于。
- `>=`：大于等于。
- `<=`：小于等于。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'contain',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。结果如下：

- 当操作成功时，返回`successful`。

- 当操作失败时，返回错误信息，例如：`alias of aggreate must be set value.`。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '91561287-0802-5F9C-9BDE-404C50D41B06',
              ),
              'LogId' => 
              array (
                'description' => '日志监控ID。',
                'type' => 'string',
                'example' => '16****',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'LimitorError',
            'errorMessage' => 'Log monitor limit is not enough',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"RequestId\\": \\"91561287-0802-5F9C-9BDE-404C50D41B06\\",\\n  \\"LogId\\": \\"16****\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PutLogMonitorResponse>\\r\\n\\t<Message>successful</Message>\\r\\n\\t<RequestId>91561287-0802-5F9C-9BDE-404C50D41B06</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<LogId>16****</LogId>\\r\\n\\t<Success>true</Success>\\r\\n</PutLogMonitorResponse>","errorExample":""}]',
      'title' => '创建或修改日志监控',
      'description' => '本文将提供一个示例，创建一个日志监控`cpu_total`。返回结果显示，创建日志监控成功，日志监控ID为`16****`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteLogMonitor' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志监控ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '12345',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'metric not exist.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '42BFFC2B-5E4D-4FDE-BCC6-E91EE33C5967',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"metric not exist.\\",\\n  \\"RequestId\\": \\"42BFFC2B-5E4D-4FDE-BCC6-E91EE33C5967\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteLogMonitorResponse>\\n\\t\\t<RequestId>EBB5215C-44AB-4000-A2D7-48634FDC4F04</RequestId>\\n\\t\\t<Success>true</Success>\\n\\t\\t<Code>200</Code>\\n</DeleteLogMonitorResponse>","errorExample":""}]',
      'title' => '删除日志监控',
      'summary' => '调用DeleteLogMonitor接口删除日志监控。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeLogMonitorList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示记录条数。默认：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'SearchValue',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项搜索。支持模糊搜索。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '01E90080-4300-4FAA-B9AE-161956BC350D',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'PageSize' => 
              array (
                'description' => '分页大小。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '15',
              ),
              'LogMonitorList' => 
              array (
                'description' => '日志监控列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ValueFilterRelation' => 
                    array (
                      'description' => '日志筛选的过滤条件。需要和ValueFilter配合使用。取值：
- and：表示和的关系。
- or ：表示或的关系。',
                      'type' => 'string',
                      'example' => 'and',
                    ),
                    'SlsLogstore' => 
                    array (
                      'description' => '日志服务名称。',
                      'type' => 'string',
                      'example' => 'testSlS****',
                    ),
                    'MetricName' => 
                    array (
                      'description' => '监控项名称。详情请参见[云产品监控项](~~163515~~)。',
                      'type' => 'string',
                      'example' => 'cpu_total',
                    ),
                    'GroupId' => 
                    array (
                      'description' => '应用分组ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12345',
                    ),
                    'LogId' => 
                    array (
                      'description' => '日志监控ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12345',
                    ),
                    'SlsRegionId' => 
                    array (
                      'description' => '日志服务所在的地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'GmtCreate' => 
                    array (
                      'description' => '创建时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的毫秒数。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1577766395000',
                    ),
                    'SlsProject' => 
                    array (
                      'description' => '日志Project。',
                      'type' => 'string',
                      'example' => 'sls-project-test****',
                    ),
                    'ValueFilter' => 
                    array (
                      'description' => '筛选的过滤规则，配合ValueFilterRelation使用。相当于SQL中的Where条件。
如果不填写，则表示对全部数据进行处理。例如：日志中有Level和Error字段，如果需要统计每分钟Error出现的次数，则统计方法可以定义为对Level求和，并且Level=Error。
',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '日志匹配的字段名称。',
                            'type' => 'string',
                            'example' => 'hostName',
                          ),
                          'Value' => 
                          array (
                            'description' => '日志匹配的字段值。',
                            'type' => 'string',
                            'example' => 'portal',
                          ),
                          'Operator' => 
                          array (
                            'description' => '字段值的匹配方式。取值：
- contain：包含。
- notContain：不包含。
- `>`：大于。
-  `<`：小于。
- `>=`：大于等于。
- `<=`：小于等于。',
                            'type' => 'string',
                            'example' => 'contain',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"01E90080-4300-4FAA-B9AE-161956BC350D\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"Total\\": 15,\\n  \\"LogMonitorList\\": [\\n    {\\n      \\"ValueFilterRelation\\": \\"and\\",\\n      \\"SlsLogstore\\": \\"testSlS****\\",\\n      \\"MetricName\\": \\"cpu_total\\",\\n      \\"GroupId\\": 12345,\\n      \\"LogId\\": 12345,\\n      \\"SlsRegionId\\": \\"cn-hangzhou\\",\\n      \\"GmtCreate\\": 1577766395000,\\n      \\"SlsProject\\": \\"sls-project-test****\\",\\n      \\"ValueFilter\\": [\\n        {\\n          \\"Key\\": \\"hostName\\",\\n          \\"Value\\": \\"portal\\",\\n          \\"Operator\\": \\"contain\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeLogMonitorListResponse>\\r\\n\\t\\t<Message>successful</Message>\\r\\n\\t\\t<RequestId>C085617E-7A64-402E-877D-410E86174B0C</RequestId>\\r\\n\\t\\t<PageSize>10</PageSize>\\r\\n\\t\\t<Total>2</Total>\\r\\n\\t\\t<LogMonitorList>\\r\\n\\t\\t\\t<SlsProject>sls-project-test****</SlsProject>\\r\\n\\t\\t\\t<MetricName>cpu_total</MetricName>\\r\\n\\t\\t\\t<GmtCreate>1591175112000</GmtCreate>\\r\\n\\t\\t\\t<ValueFilterRelation>and</ValueFilterRelation>\\r\\n\\t\\t\\t<LogId>12345</LogId>\\r\\n\\t\\t\\t<SlsRegionId>cn-hangzhou</SlsRegionId>\\r\\n\\t\\t\\t<SlsLogstore>testSlS****</SlsLogstore>\\r\\n\\t\\t\\t<GroupId>12345</GroupId>\\r\\n\\t\\t</LogMonitorList>\\r\\n\\t\\t<LogMonitorList>\\r\\n\\t\\t\\t<SlsProject>sls-project-test****</SlsProject>\\r\\n\\t\\t\\t<MetricName>cpu_total</MetricName>\\r\\n\\t\\t\\t<GmtCreate>1586826787000</GmtCreate>\\r\\n\\t\\t\\t<ValueFilterRelation>and</ValueFilterRelation>\\r\\n\\t\\t\\t<ValueFilter>\\r\\n\\t\\t\\t\\t<Operator>=</Operator>\\r\\n\\t\\t\\t\\t<Value>1</Value>\\r\\n\\t\\t\\t\\t<Key>lh_source</Key>\\r\\n\\t\\t\\t</ValueFilter>\\r\\n\\t\\t\\t<LogId>12345</LogId>\\r\\n\\t\\t\\t<SlsRegionId>cn-hangzhou</SlsRegionId>\\r\\n\\t\\t\\t<SlsLogstore>internal-alert-history</SlsLogstore>\\r\\n\\t\\t\\t<GroupId>12345</GroupId>\\r\\n\\t\\t</LogMonitorList>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Success>true</Success>\\r\\n</DescribeLogMonitorListResponse>\\r\\n","errorExample":""}]',
      'title' => '获取日志监控列表',
      'summary' => '调用DescribeLogMonitorList接口获取日志监控列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeLogMonitorAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项的名称。支持精确匹配。

详情请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cpu_total',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。当请求成功时，返回成功信息；当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C6718537-E673-4A58-8EE1-24B8B38C7AAE',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'LogMonitor' => 
              array (
                'description' => '日志监控详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'ValueFilterRelation' => 
                  array (
                    'description' => '日志筛选的过滤条件。需要和ValueFilter配合使用。取值：
- and：和。
- or：或。',
                    'type' => 'string',
                    'example' => 'and',
                  ),
                  'SlsLogstore' => 
                  array (
                    'description' => '日志服务名称。',
                    'type' => 'string',
                    'example' => 'test-logstore',
                  ),
                  'MetricName' => 
                  array (
                    'description' => '监控项名称。详情请参见[云产品监控项](~~163515~~)。',
                    'type' => 'string',
                    'example' => 'cpu_total',
                  ),
                  'GroupId' => 
                  array (
                    'description' => '应用分组ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12345',
                  ),
                  'LogId' => 
                  array (
                    'description' => '日志ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1234',
                  ),
                  'MetricExpress' => 
                  array (
                    'description' => '扩展字段。扩展字段为统计方法中的结果提供四则运算功能。

例如：在统计方法中已配置HTTP状态码请求总数TotalNumber，HTTP状态码大于499的请求数5XXNumber，则可以通过扩展字段计算出服务端错误率：5XXNumber/TotalNumber*100。',
                    'type' => 'string',
                    'example' => '{"extend":{"errorPercent":"5XXNumber/TotalNumber*100"}}',
                  ),
                  'SlsRegionId' => 
                  array (
                    'description' => '日志服务所在的地域ID。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建时间。

格式为Unix时间戳，即从1970年1月1日开始所经过的秒数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1547431398000',
                  ),
                  'SlsProject' => 
                  array (
                    'description' => '日志Project。',
                    'type' => 'string',
                    'example' => 'test-project',
                  ),
                  'Aggregates' => 
                  array (
                    'description' => '聚合计算定义。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Max' => 
                        array (
                          'description' => '最大值。',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'Min' => 
                        array (
                          'description' => '最小值。',
                          'type' => 'string',
                          'example' => '0',
                        ),
                        'Function' => 
                        array (
                          'description' => '统计方法，即在统计周期内计算日志数据的函数方法。取值：
- count：计数值。
- sum：求和。
- avg：平均值。
- max：最大值。
- min：最小值。
- countps：计算统计周期内指定字段求count后的每秒平均值。
- sumps：计算统计周期内指定字段求sum后的每秒平均值。
- distinct：去重后计算统计周期内指定字段出现的次数。',
                          'type' => 'string',
                          'example' => 'count',
                        ),
                        'Alias' => 
                        array (
                          'description' => '字段别名。',
                          'type' => 'string',
                          'example' => 'HostName',
                        ),
                        'FieldName' => 
                        array (
                          'description' => '日志中原始的字段名称。',
                          'type' => 'string',
                          'example' => 'hostName',
                        ),
                      ),
                    ),
                  ),
                  'ValueFilter' => 
                  array (
                    'description' => '筛选的过滤规则，配合ValueFilterRelation使用。相当于SQL中的Where条件。

如果不填写，则表示对全部数据进行处理。例如：日志中有Level和Error字段，如果需要统计每分钟Error出现的次数，则统计方法可以定义为对Level求和，并且Level=Error。
',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '日志匹配的字段名。',
                          'type' => 'string',
                          'example' => 'hostName',
                        ),
                        'Value' => 
                        array (
                          'description' => '日志匹配的字段值。',
                          'type' => 'string',
                          'example' => 'portal',
                        ),
                        'Operator' => 
                        array (
                          'description' => '字段值的匹配方式。取值：
- `contain`：包含。
- `notContain`：不包含。
- `>`：大于。
- `<`：小于。
- `>=`：大于等于。
- `<=`：小于等于。',
                          'type' => 'string',
                          'example' => 'contain',
                        ),
                      ),
                    ),
                  ),
                  'Tumblingwindows' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '预计算窗口时间。单位：秒。系统将在定义的预计算时间对数据做一次聚合计算。',
                      'type' => 'string',
                      'example' => '60',
                    ),
                  ),
                  'Groupbys' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '对数据进行空间维度聚合。相当于SQL中的Group By，根据指定的维度，对监控数据进行分组。如果Group By不选择任何维度，则根据聚合方法对全部监控数据进行聚合。',
                      'type' => 'string',
                      'example' => 'value',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"RequestId\\": \\"C6718537-E673-4A58-8EE1-24B8B38C7AAE\\",\\n  \\"Success\\": true,\\n  \\"LogMonitor\\": {\\n    \\"ValueFilterRelation\\": \\"and\\",\\n    \\"SlsLogstore\\": \\"test-logstore\\",\\n    \\"MetricName\\": \\"cpu_total\\",\\n    \\"GroupId\\": 12345,\\n    \\"LogId\\": 1234,\\n    \\"MetricExpress\\": \\"{\\\\\\"extend\\\\\\":{\\\\\\"errorPercent\\\\\\":\\\\\\"5XXNumber/TotalNumber*100\\\\\\"}}\\",\\n    \\"SlsRegionId\\": \\"cn-hangzhou\\",\\n    \\"GmtCreate\\": 1547431398000,\\n    \\"SlsProject\\": \\"test-project\\",\\n    \\"Aggregates\\": [\\n      {\\n        \\"Max\\": \\"10\\",\\n        \\"Min\\": \\"0\\",\\n        \\"Function\\": \\"count\\",\\n        \\"Alias\\": \\"HostName\\",\\n        \\"FieldName\\": \\"hostName\\"\\n      }\\n    ],\\n    \\"ValueFilter\\": [\\n      {\\n        \\"Key\\": \\"hostName\\",\\n        \\"Value\\": \\"portal\\",\\n        \\"Operator\\": \\"contain\\"\\n      }\\n    ],\\n    \\"Tumblingwindows\\": [\\n      \\"60\\"\\n    ],\\n    \\"Groupbys\\": [\\n      \\"value\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeLogMonitorAttributeResponse>\\r\\n\\t\\t<Message>successful</Message>\\r\\n\\t\\t<RequestId>BBD7B294-1325-46D1-BD08-848D6A6B9AC6</RequestId>\\r\\n\\t\\t<LogMonitor>\\r\\n\\t\\t\\t<SlsProject>slsProject</SlsProject>\\r\\n\\t\\t\\t<Tumblingwindows>60</Tumblingwindows>\\r\\n\\t\\t\\t<SlsLogstore>slsLogstore</SlsLogstore>\\r\\n\\t\\t\\t<MetricExpress>{&quot;extend&quot;:{}}</MetricExpress>\\r\\n\\t\\t\\t<GroupId>12345</GroupId>\\r\\n\\t\\t\\t<MetricName>cpu_total</MetricName>\\r\\n\\t\\t\\t<GmtCreate>1577766395000</GmtCreate>\\r\\n\\t\\t\\t<Aggregates>\\r\\n\\t\\t\\t\\t<Function>count</Function>\\r\\n\\t\\t\\t\\t<Min></Min>\\r\\n\\t\\t\\t\\t<Max></Max>\\r\\n\\t\\t\\t\\t<Alias>lh_source_count</Alias>\\r\\n\\t\\t\\t\\t<FieldName>lh_source</FieldName>\\r\\n\\t\\t\\t</Aggregates>\\r\\n\\t\\t\\t<ValueFilterRelation>and</ValueFilterRelation>\\r\\n\\t\\t\\t<ValueFilter>\\r\\n\\t\\t\\t\\t<Operator>contais</Operator>\\r\\n\\t\\t\\t\\t<Value>test</Value>\\r\\n\\t\\t\\t\\t<Key>hostName</Key>\\r\\n\\t\\t\\t</ValueFilter>\\r\\n\\t\\t\\t<LogId>1234</LogId>\\r\\n\\t\\t\\t<SlsRegionId>cn-hangzhou</SlsRegionId>\\r\\n\\t\\t</LogMonitor>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Success>true</Success>\\r\\n</DescribeLogMonitorAttributeResponse>\\r\\n","errorExample":""}]',
      'title' => '获取日志监控详情',
      'summary' => '调用DescribeLogMonitorAttribute接口获取日志监控详情。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateMonitorGroupByResourceGroupId' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnableSubscribeEvent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组是否开启自动订阅事件通知。当应用分组内资源发生严重和警告级别的事件时，云监控发送报警通知。取值：

- true：开启。

- false（默认值）：关闭。

',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        1 => 
        array (
          'name' => 'EnableInstallAgent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组是否开启自动安装云监控插件。云监控自动为应用分组内的主机安装云监控插件。取值：

- true：开启。

- false（默认值）：关闭。

',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组对应的地域ID。

关于如何获取资源组对应的地域ID，请参见[GetResourceGroup](~~158866~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

关于如何获取资源组ID，请参见[ListResourceGroups](~~158855~~)。
',
            'type' => 'string',
            'required' => true,
            'example' => 'rg-acfmw3ty5y7****',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组名称。

关于如何获取资源组名称，请参见[ListResourceGroups](~~158855~~)。
',
            'type' => 'string',
            'required' => true,
            'example' => 'CloudMonitor',
          ),
        ),
        5 => 
        array (
          'name' => 'ContactGroupList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警联系组。应用分组的报警通知会发送给该报警联系组中的报警联系人。

报警联系组是一组报警联系人，可以包含一个或多个报警联系人。关于如何创建报警联系人和报警联系组，请参见[PutContact](~~114923~~)和[PutContactGroup](~~114929~~)。关于如何获取报警联系组，请参见[DescribeContactGroupList](~~114922~~)。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警联系组。应用分组的报警通知会发送给该报警联系组中的报警联系人。

报警联系组是一组报警联系人，可以包含一个或多个报警联系人。关于如何创建报警联系人和报警联系组，请参见[PutContact](~~114923~~)和[PutContactGroup](~~114929~~)。关于如何获取报警联系组，请参见[DescribeContactGroupList](~~114922~~)。',
              'type' => 'string',
              'required' => false,
              'example' => 'ECS_Group',
            ),
            'required' => true,
            'example' => 'ECS_Group',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '784CAB3C-F613-5BCE-8469-6DCB29B18A20',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Id' => 
              array (
                'description' => '应用分组ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '3607****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        4092 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'ResourceGroupId already create group',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"784CAB3C-F613-5BCE-8469-6DCB29B18A20\\",\\n  \\"Success\\": true,\\n  \\"Id\\": 0\\n}","errorExample":""},{"type":"xml","example":"<CreateMonitorGroupByResourceGroupIdResponse>\\n    <RequestId>784CAB3C-F613-5BCE-8469-6DCB29B18A20</RequestId>\\n    <Id>3607****</Id>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</CreateMonitorGroupByResourceGroupIdResponse>","errorExample":""}]',
      'title' => '通过资源组创建应用分组',
      'summary' => '调用CreateMonitorGroupByResourceGroupId接口通过资源组创建应用分组。',
      'description' => '本文将提供一个示例，为地域`cn-hangzhou`的资源组`CloudMonitor`创建一个应用分组，应用分组的报警联系人组为`ECS_Group`。

',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSiteMonitor' => 
    array (
      'summary' => '调用CreateSiteMonitor接口创建站点监控任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Address',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务的URL或IP地址。',
            'type' => 'string',
            'required' => true,
            'example' => 'https://www.aliyun.com',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务的监控类型。

目前站点监控任务的类型包括：HTTP（S）、PING、TCP、UDP、DNS、SMTP、POP3、FTP。',
            'type' => 'string',
            'required' => true,
            'example' => 'HTTP',
          ),
        ),
        2 => 
        array (
          'name' => 'TaskName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务的名称。

长度4~100个字符，取值可包含英文字母、数字、下划线（_）和汉字。',
            'type' => 'string',
            'required' => true,
            'example' => 'HanZhou_ECS1',
          ),
        ),
        3 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控频率。

取值：1分钟、5分钟、15分钟、30分钟和60分钟。

默认值：1分钟。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'IspCities',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探针信息。如果该参数取值为空，则系统随机选择3个探测点。

格式为JSONArray，例如：`[{"city":"546","isp":"465"},{"city":"572","isp":"465"},{"city":"738","isp":"465"}]`，分别对应北京、杭州、青岛。

关于如何获取探测点信息，请参见[DescribeSiteMonitorISPCityList](~~115045~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"city":"546","isp":"465"},{"city":"572","isp":"465"},{"city":"738","isp":"465"}]',
          ),
        ),
        5 => 
        array (
          'name' => 'OptionsJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务对应协议类型的高级扩展选项。不同监控任务的协议类型对应不同的扩展选项。',
            'type' => 'string',
            'required' => false,
            'example' => '{"time_out":5000}',
          ),
        ),
        6 => 
        array (
          'name' => 'AlertIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。

关于如何获取云监控中已存在的报警规则ID，请参见[DescribeMetricRuleList](~~114941~~)。

',
            'type' => 'string',
            'required' => false,
            'example' => 'SystemDefault_acs_ecs_dashboard_InternetOutRate_Percent',
          ),
        ),
        7 => 
        array (
          'name' => 'CustomSchedule',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '自定义探测周期。只能选择周一至周日的某个时间段进行探测。',
            'type' => 'string',
            'required' => false,
            'example' => '{"start_hour":0,"end_hour":24, "days":[0], "time_zone":"Local"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'Successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '68192f5d-0d45-4b98-9724-892813f86c71',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '监控任务的结果详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'AttachAlertResult' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Contact' => 
                      array (
                        'description' => '关联已有报警规则的结果。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '关联已有报警规则的结果。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Code' => 
                            array (
                              'description' => '关联报警规则的状态码。

> 200表示成功。',
                              'type' => 'string',
                              'example' => '200',
                            ),
                            'Message' => 
                            array (
                              'description' => '关联报警规则的返回信息。',
                              'type' => 'string',
                              'example' => 'successful',
                            ),
                            'RequestId' => 
                            array (
                              'description' => '关联报警规则的请求ID。',
                              'type' => 'string',
                              'example' => '5dd33455-4f65-4b0c-9200-33d66f3f340b',
                            ),
                            'Success' => 
                            array (
                              'description' => '关联报警规则是否成功。取值：

- true：成功。

- false：失败。',
                              'type' => 'string',
                              'example' => 'true',
                            ),
                            'RuleId' => 
                            array (
                              'description' => '关联报警规则的ID。',
                              'type' => 'string',
                              'example' => 'SystemDefault_acs_ecs_dashboard_InternetOutRate_Percent',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'CreateResultList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CreateResultList' => 
                  array (
                    'description' => '返回结果。

当创建监控任务成功时，有返回结果；当创建监控任务失败时，无返回结果。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回结果。

当创建监控任务成功时，有返回结果；当创建监控任务失败时，无返回结果。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TaskId' => 
                        array (
                          'description' => '监控任务ID。',
                          'type' => 'string',
                          'example' => '2c8dbdf9-a3ab-46a1-85a4-f094965e****',
                        ),
                        'TaskName' => 
                        array (
                          'description' => '监控任务名称。',
                          'type' => 'string',
                          'example' => 'HanZhou_ECS1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalAddress',
            'errorMessage' => 'Illegal HTTP address',
          ),
          2 => 
          array (
            'errorCode' => 'OperationError',
            'errorMessage' => 'Operation failed',
          ),
          3 => 
          array (
            'errorCode' => 'TaskNotExists',
            'errorMessage' => 'Task does not exist',
          ),
          4 => 
          array (
            'errorCode' => 'OperatorInvalid',
            'errorMessage' => 'Operator invalid',
          ),
          5 => 
          array (
            'errorCode' => 'OperatorCityInvalid',
            'errorMessage' => 'Operator City invalid',
          ),
          6 => 
          array (
            'errorCode' => 'NameRepeat',
            'errorMessage' => 'Task name repeat',
          ),
          7 => 
          array (
            'errorCode' => 'CreateAlarmError',
            'errorMessage' => 'Create alarm error',
          ),
          8 => 
          array (
            'errorCode' => 'NameNotExists',
            'errorMessage' => 'Task name not exists',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'RestrictedUser',
            'errorMessage' => 'The user\'s operation is restricted, please register NAAM product code',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'ExceedingQuota',
            'errorMessage' => 'Exceeding quota limits.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful\\",\\n  \\"RequestId\\": \\"68192f5d-0d45-4b98-9724-892813f86c71\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Data\\": {\\n    \\"AttachAlertResult\\": {\\n      \\"Contact\\": [\\n        {\\n          \\"Code\\": \\"200\\",\\n          \\"Message\\": \\"successful\\",\\n          \\"RequestId\\": \\"5dd33455-4f65-4b0c-9200-33d66f3f340b\\",\\n          \\"Success\\": \\"true\\",\\n          \\"RuleId\\": \\"SystemDefault_acs_ecs_dashboard_InternetOutRate_Percent\\"\\n        }\\n      ]\\n    }\\n  },\\n  \\"CreateResultList\\": {\\n    \\"CreateResultList\\": [\\n      {\\n        \\"TaskId\\": \\"2c8dbdf9-a3ab-46a1-85a4-f094965e****\\",\\n        \\"TaskName\\": \\"HanZhou_ECS1\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateSiteMonitorResponse>\\r\\n\\t<Message>successful</Message>\\r\\n\\t<RequestId>68192f5d-0d45-4b98-9724-892813f86c71</RequestId>\\r\\n\\t<Data>\\r\\n\\t\\t<AttachAlertResult>\\r\\n\\t\\t\\t<Contact>\\r\\n\\t\\t\\t\\t<Message>successful</Message>\\r\\n\\t\\t\\t\\t<RequestId>5dd33455-4f65-4b0c-9200-33d66f3f340b</RequestId>\\r\\n\\t\\t\\t\\t<RuleId>SystemDefault_acs_ecs_dashboard_InternetOutRate_Percent</RuleId>\\r\\n\\t\\t\\t\\t<Code>200</Code>\\r\\n\\t\\t\\t\\t<Success>true</Success>\\r\\n\\t\\t\\t</Contact>\\r\\n\\t\\t</AttachAlertResult>\\r\\n\\t</Data>\\r\\n\\t<Code>200</Code>\\r\\n\\t<CreateResultList>\\r\\n\\t\\t<CreateResultList>\\r\\n\\t\\t\\t<TaskId>2c8dbdf9-a3ab-46a1-85a4-f094965e****</TaskId>\\r\\n\\t\\t\\t<TaskName>HanZhou_ECS1</TaskName>\\r\\n\\t\\t</CreateResultList>\\r\\n\\t</CreateResultList>\\r\\n\\t<Success>true</Success>\\r\\n</CreateSiteMonitorResponse>","errorExample":""}]',
      'title' => '创建站点监控任务',
      'description' => '本文将提供一个示例，创建一个站点监控任务`HanZhou_ECS1`，该监控任务的监控地址为`https://www.aliyun.com`、监控类型为`HTTPS`。',
      'requestParamsDescription' => 'TaskType中HTTP（S）、PING、TCP、UDP、DNS、SMTP、POP3和FTP的高级参数的设置方法如下表所示。

- HTTP（S）

|参数 |类型 |描述|
| ----- | -------------- | ----------- |
|http_method |String |HTTP或HTTPS请求方式。支持三种请求方式：GET、POST、HEAD。默认值：GET。           |
|header |String |换行符（\\n）分隔的自定义HTTP header。<br>每行Header格式需符合HTTP协议（使用半角冒号分隔的键值）。          |
|cookie |String |Cookie和HTTP请求标准的写法一致。   |
|request_content |String |请求内容。支持两种格式：JSON和表单。不提供时，请求中不含正文。 |
|response_content |String |期望的回应内容。探测时会在HTTP服务器返回的前64个字节进行检查。        |
|match_rule |String |0：回应中不含response_content时，探测成功。<br>1：回应中含response_content时，探测成功。      |
|username |String |如果提供用户名，则会在HTTP请求中携带BasicAuth header。          |
|password |String |HTTP或HTTPS请求验证密码。        |
|time_out |int |超时时间。单位：毫秒。默认值：5 。      |
|max_redirect |int |最大跳转次数。ECS探针默认5次，运营商探针默认2次。<br>如果需要禁止跳转，则将该参数设置为：0。<br>取值范围：0~50 。  |

 
- PING

|参数  |类型  |描述 |
| ----- | -------------- | ----------- |
|failure_rate |文本 |当PING失败率超过该参数时，探测失败，返回610（PingAllFail）或615（PingPartialFail）。<br>默认值：0.1。      |
|ping_num |int |PING次数，默认值：10。<br>取值范围：1~100。    |

- DNS

|参数  |类型  |描述 |
| ----- | -------------- | ----------- |
|dns_server |string |DNS服务器地址，可以为域名或IP地址。   |
|dns_type |string |DNS查询类型。取值：A、NS、CNAME、MX、TXT、ANY、AAAA。 |
|expect_value |string |英文空白符分隔的期望值列表。   |
|match_rule |string |期望值列表与DNS列表的关系，当不满足指定关系时，探测失败。  <br>空字符串或IN_DNS：期望值列表是DNS列表的子集。 <br>DNS_IN：DNS列表是期望值列表的子集。   <br>EQUAL：DNS列表与期望值列表相等。  <br>ANY：DNS列表与期望值列表有交集（交集不为空）。  |

- FTP

|参数  |类型  |描述 |
| ----- | -------------- | ----------- |
|port |int |FTP服务器端口号。如果不提供，则使用默认值。FTP默认值：21，FTPS默认值：990。 |
|username |string |FTP用户名。 如果未提供，则匿名登录。 |
|password |string |FTP密码。  |

- POP3或SMTP

|参数  |类型  |描述 |
| ----- | -------------- | ----------- |
|port |int |POP3或SMTP服务器的端口号。POP3默认值：110，POP3S默认值：995，SMTP默认值：25。 |
|username |string |POP3或SMTP的用户名。POP3或SMTP的用户名和密码必填。  |
|password |string |POP3或SMTP的密码。POP3或SMTP的用户名和密码必填。 |

- TCP或UDP

|参数  |类型  |描述 |
| ----- | -------------- | ----------- |
|port |int |TCP或UDP服务器的端口。 |
|request_content |string |请求内容。当request_format为hex时，request_content内容为十六进制紧凑格式。 |
|request_format |string |当request_format为其他值时，request_content作为普通字符串发送给TCP或UDP服务器。 |
|response_content |string |回应内容。当TCP或UDP服务器返回的内容中不含response_content时，探测失败。<br>当response_format为hex时，response_content中的内容为十六进制紧凑格式。<br>当response_content为其他值时，response_content为普通字符串。 |
',
      'responseParamsDescription' => ' ',
      'extraInfo' => '


',
    ),
    'CreateInstantSiteMonitor' => 
    array (
      'summary' => '调用CreateSiteMonitor接口创建一次性探测任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Address',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测任务的URL或IP地址。',
            'type' => 'string',
            'required' => true,
            'example' => 'http://www.aliyun.com',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测任务的类型。
目前探测任务的类型包括：HTTP、PING、TCP、UDP和DNS。',
            'type' => 'string',
            'required' => true,
            'example' => 'HTTP',
          ),
        ),
        2 => 
        array (
          'name' => 'TaskName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测任务的名称。

<props="china">长度4~100个字符，取值可包含英文字母、数字、下划线（_）和汉字。</props>


<props="intl">长度4~100个字符，取值可包含英文字母、数字和下划线（_）。</props>

<props="partner">长度4~100个字符，取值可包含英文字母、数字和下划线（_）。</props>
',
            'type' => 'string',
            'required' => true,
            'example' => 'task1',
          ),
        ),
        3 => 
        array (
          'name' => 'IspCities',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测点信息。如果该参数取值为空，则系统随机选择3个探测点。

格式为`JSONArray`，例如：[{"city":"546","isp":"465"},{"city":"572","isp":"465"},{"city":"738","isp":"465"}]，分别对应北京、杭州、青岛。

关于如何获取探测点信息，请参见[DescribeSiteMonitorISPCityList](~~115045~~)。

> `IspCities`和`RandomIspCity`必须二选一。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"city":"546","isp":"465"},{"city":"572","isp":"465"},{"city":"738","isp":"465"}]',
          ),
        ),
        4 => 
        array (
          'name' => 'OptionsJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测任务对应协议类型的高级扩展选项。不同探测任务的协议类型对应不同的扩展选项。',
            'type' => 'string',
            'required' => false,
            'example' => '{"time_out":5000}',
          ),
        ),
        5 => 
        array (
          'name' => 'RandomIspCity',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测点的数量。

> - `IspCities`和`RandomIspCity`必须二选一。- 如果您设置了参数`RandomIspCity`，参数`IspCities`自动失效。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '68192f5d-0d45-4b98-9724-892813f86c71',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：
* true：成功。
* false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'CreateResultList' => 
              array (
                'description' => '创建一次性探测任务的结果列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '创建一次性探测任务的结果列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TaskId' => 
                    array (
                      'description' => '探测任务ID。',
                      'type' => 'string',
                      'example' => '2c8dbdf9-a3ab-46a1-85a4-f094965e****',
                    ),
                    'TaskName' => 
                    array (
                      'description' => '探测任务名称。',
                      'type' => 'string',
                      'example' => 'task1',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalAddress',
            'errorMessage' => 'Illegal HTTP address',
          ),
          2 => 
          array (
            'errorCode' => 'OperationError',
            'errorMessage' => 'Operation failed',
          ),
          3 => 
          array (
            'errorCode' => 'TaskNotExists',
            'errorMessage' => 'Task does not exist',
          ),
          4 => 
          array (
            'errorCode' => 'OperatorInvalid',
            'errorMessage' => 'Operator invalid',
          ),
          5 => 
          array (
            'errorCode' => 'OperatorCityInvalid',
            'errorMessage' => 'Operator City invalid',
          ),
          6 => 
          array (
            'errorCode' => 'NameRepeat',
            'errorMessage' => 'Task name repeat',
          ),
          7 => 
          array (
            'errorCode' => 'CreateAlarmError',
            'errorMessage' => 'Create alarm error',
          ),
          8 => 
          array (
            'errorCode' => 'NameNotExists',
            'errorMessage' => 'Task name not exists',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => '%s',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'ExceedingQuota',
            'errorMessage' => 'Exceeding quota limits.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"RequestId\\": \\"68192f5d-0d45-4b98-9724-892813f86c71\\",\\n  \\"Success\\": \\"true\\",\\n  \\"CreateResultList\\": [\\n    {\\n      \\"TaskId\\": \\"2c8dbdf9-a3ab-46a1-85a4-f094965e****\\",\\n      \\"TaskName\\": \\"task1\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CreateInstantSiteMonitorResponse>\\r\\n\\t<Message>successful</Message>\\r\\n\\t<RequestId>68192f5d-0d45-4b98-9724-892813f86c71</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<CreateResultList>\\r\\n\\t\\t<TaskId>2c8dbdf9-a3ab-46a1-85a4-f094965e****</TaskId>\\r\\n\\t\\t<TaskName>task1</TaskName>\\r\\n\\t</CreateResultList>\\r\\n\\t<Success>true</Success>\\r\\n</CreateInstantSiteMonitorResponse>\\t","errorExample":""}]',
      'title' => '创建一次性探测任务',
      'description' => '仅开通网络分析与监控的阿里云账号，才能创建一次性探测任务。

本文将提供一个示例，创建一次性探测任务，该探测任务的名称为`task1`，探测地址为`http://www.aliyun.com`，探测类型为`HTTP`，探测点数量为`1`。',
      'requestParamsDescription' => '# TaskType的高级参数说明

`TaskType`中HTTP、PING、TCP、UDP和DNS的高级参数的设置方法如下表所示。

- HTTP

|参数 |类型 |描述|
| ----- | -------------- | ----------- |
|http_method |String |HTTP请求方式。支持三种请求方式：GET、POST、HEAD。默认值：GET。           |
|header |String |换行符（\\n）分隔的自定义HTTP header。<br>每行Header格式需符合HTTP协议（使用半角冒号分隔的键值）。          |
|cookie |String |Cookie和HTTP请求标准的写法一致。   |
|request_content |String |请求内容。支持两种格式：JSON和表单。不提供时，请求中不含正文。 |
|response_content |String |期望的回应内容。探测时会检查HTTP服务器返回的前64个字节。        |
|match_rule |String |0：回应中不含response_content时，探测成功。<br>1：回应中含response_content时，探测成功。      |
|username |String |如果提供用户名，则会在HTTP请求中携带BasicAuth header。          |
|password |String |HTTP请求验证密码。        |
|time_out |int |超时时间。单位：毫秒。默认值：5 。      |
|max_redirect |int |最大跳转次数。ECS探针默认5次，运营商探针默认2次。<br>如果需要禁止跳转，则将该参数设置为0。<br>取值范围：0~50 。  |

 
- PING

|参数  |类型  |描述 |
| ----- | -------------- | ----------- |
|failure_rate |int |当PING失败率超过该参数时，探测失败，返回610（PingAllFail）或615（PingPartialFail）。<br>默认值：0.1。      |
|ping_num |int |PING次数，默认值：20。<br>取值范围：1~100。    |

- TCP或UDP

|参数  |类型  |描述 |
| ----- | -------------- | ----------- |
|port |int |TCP或UDP服务器的端口。 |
|request_content |string |请求内容。当request_format为hex时，request_content内容为十六进制紧凑格式。 |
|request_format |string |当request_format为其他值时，request_content作为普通字符串发送给TCP或UDP服务器。 |
|response_content |string |回应内容。当TCP或UDP服务器返回的内容中不含response_content时，探测失败。<br>当response_format为hex时，response_content中的内容为十六进制紧凑格式。<br>当response_content为其他值时，response_content为普通字符串。 |

- DNS

|参数  |类型  |描述 |
| ----- | -------------- | ----------- |
|dns_server |string |DNS服务器地址，可以为域名或IP地址。   |
|dns_type |string |DNS查询类型。取值：A、NS、CNAME、MX、TXT、ANY。 |
|expect_value |string |英文空白符分隔的期望值列表。   |
|match_rule |string |期望值列表与DNS列表的关系，当不满足指定关系时，探测失败。  <br>空字符串或IN_DNS：期望值列表是DNS列表的子集。 <br>DNS_IN：DNS列表是期望值列表的子集。   <br>EQUAL：DNS列表与期望值列表相等。  <br>ANY：DNS列表与期望值列表有交集（交集不为空）。  |


',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchCreateOnceSiteMonitor' => 
    array (
      'summary' => '批量创建一次性任务',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => true,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Address' => 
                array (
                  'type' => 'string',
                ),
                'IspCities' => 
                array (
                  'type' => 'string',
                ),
                'OptionsJson' => 
                array (
                  'type' => 'string',
                ),
                'TaskName' => 
                array (
                  'type' => 'string',
                ),
                'TaskType' => 
                array (
                  'type' => 'string',
                ),
              ),
            ),
            'required' => true,
            'maxItems' => 200,
            'minItems' => 1,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
              'Data' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'Illegal parameters.',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'The parameter is missing or invalid. %s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'Permission denied',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceOverLimit',
            'errorMessage' => 'The resource has exceeded the limit. %s',
          ),
        ),
      ),
    ),
    'BatchCreateInstantSiteMonitor' => 
    array (
      'summary' => '调用BatchCreateInstantSiteMonitor接口批量创建站点监控任务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '站点监控任务列表。

> 至少需要创建一条站点监控任务，且`Address`、`TaskName`和`TaskType`必须设置。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '站点监控任务列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Address' => 
                array (
                  'description' => '站点监控任务的URL或IP地址。

> 至少需要创建一条站点监控任务，且`Address`、`TaskName`和`TaskType`必须设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'https://www.aliyun.com',
                ),
                'IspCities' => 
                array (
                  'description' => '探测点信息。如果该参数取值为空，则系统随机选择3个探测点。

格式为`JSONArray`，例如：`[{"city":"546","isp":"465"},{"city":"572","isp":"465"},{"city":"738","isp":"465"}]`，分别对应北京、杭州、青岛。

关于如何获取探测点信息，请参见[DescribeSiteMonitorISPCityList](~~115045~~)。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '[{"city":"546","isp":"465"},{"city":"572","isp":"465"},{"city":"738","isp":"465"}]',
                ),
                'OptionsJson' => 
                array (
                  'description' => '站点监控任务对应协议类型的高级扩展选项。不同探测任务的协议类型对应不同的扩展选项。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '{"time_out":5000}',
                ),
                'TaskName' => 
                array (
                  'description' => '站点监控任务的名称。

<props="china">长度4~100个字符，取值可包含英文字母、数字、短划线（_）和汉字。</props>


<props="intl">长度4~100个字符，取值可包含英文字母、数字和短划线（_）。</props>

<props="partner">长度4~100个字符，取值可包含英文字母、数字和短划线（_）。</props>

> 至少需要创建一条站点监控任务，且`Address`、`TaskName`和`TaskType`必须设置。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'HangZhou_ECS1',
                ),
                'TaskType' => 
                array (
                  'description' => '监控任务的监控类型。

目前站点监控任务的类型包括：HTTP、PING、TCP、UDP、DNS、SMTP、POP3、FTP。

> 至少需要创建一条站点监控任务，且`Address`、`TaskName`和`TaskType`必须设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'HTTP',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 200,
            'minItems' => 1,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7AE72720-2C96-5446-9F2B-308C7CEDFF1A',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：
* true：成功。
* false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '站点监控任务信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '站点监控任务信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TaskName' => 
                    array (
                      'description' => '站点监控任务名称。',
                      'type' => 'string',
                      'example' => 'HangZhou_ECS1',
                    ),
                    'TaskId' => 
                    array (
                      'description' => '站点监控任务ID。',
                      'type' => 'string',
                      'example' => '679fbe4f-b80b-4706-91b2-5427b43e****',
                    ),
                  ),
                ),
                'example' => '[{"taskName": "HangZhou_ECS1", "taskId": "679fbe4f-b80b-4706-91b2-5427b43e****"}]',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'Illegal parameters.',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'The parameter is missing or invalid. %s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceOverLimit',
            'errorMessage' => 'The resource has exceeded the limit. %s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7AE72720-2C96-5446-9F2B-308C7CEDFF1A\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"TaskName\\": \\"HangZhou_ECS1\\",\\n      \\"TaskId\\": \\"679fbe4f-b80b-4706-91b2-5427b43e****\\"\\n    }\\n  ],\\n  \\"Code\\": \\"200\\"\\n}","errorExample":""},{"type":"xml","example":"<BatchCreateInstantSiteMonitorResponse>\\n    <RequestId>7AE72720-2C96-5446-9F2B-308C7CEDFF1A</RequestId>\\n    <Message>successful</Message>\\n    <Data>\\n        <taskName>HangZhou_ECS1</taskName>\\n        <taskId>679fbe4f-b80b-4706-91b2-5427b43e****</taskId>\\n    </Data>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</BatchCreateInstantSiteMonitorResponse>","errorExample":""}]',
      'title' => '批量创建站点监控任务',
      'description' => '本文将提供一个示例，创建一个站点监控任务`HangZhou_ECS1`，该任务的监控地址为`https://www.aliyun.com`，监控类型为`HTTP`。返回结果显示，创建站点监控任务成功，该站点监控任务的名称为`HangZhou_ECS1`，ID为`679fbe4f-b80b-4706-91b2-5427b43e****`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSiteMonitors' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除的任务ID。多个任务ID之间用半角逗号（,）分隔。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '01adacc2-ece5-41b6-afa2-3143ab5d****,43bd1ead-514f-4524-813e-228ce091****',
          ),
        ),
        1 => 
        array (
          'name' => 'IsDeleteAlarms',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '删除任务的同时是否删除报警规则。取值：

- true（默认值）：删除报警规则。

- false：不删除报警规则。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。当请求成功时，返回成功信息；当请求失败时，返回失败原因，例如：`TaskId not found`。',
                'type' => 'string',
                'example' => '请求成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '123BCC5D-8B63-48EA-B747-9A8995BE7AA6',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回受影响的行数。',
                'type' => 'object',
                'properties' => 
                array (
                  'count' => 
                  array (
                    'description' => '受影响的行数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'You are not authorized to operate the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => 'TaskId not found',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'ExceedingQuota',
            'errorMessage' => 'Exceeding quota limits.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"请求成功\\",\\n  \\"RequestId\\": \\"123BCC5D-8B63-48EA-B747-9A8995BE7AA6\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Data\\": {\\n    \\"count\\": 0\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DeleteSiteMonitorsResponse>\\n\\t\\t<Data>\\n\\t\\t\\t<count>0</count>\\n\\t\\t</Data>\\n\\t\\t<Message>请求成功</Message>\\n\\t\\t<RequestId>123BCC5D-8B63-48EA-B747-9A8995BE7AA6</RequestId>\\n\\t\\t<Success>true</Success>\\n\\t\\t<Code>200</Code>\\n<DeleteSiteMonitorsResponse>","errorExample":""}]',
      'title' => '删除站点监控的探测任务',
      'summary' => '调用DeleteSiteMonitors接口删除站点监控的探测任务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableSiteMonitors' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '站点监控任务ID。多个ID之间用英文逗号（,）分隔。',
            'type' => 'string',
            'required' => true,
            'example' => '49f7b317-7645-4cc9-94fd-ea42e522****,49f7b317-7645-4cc9-94fd-ea42e522****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3fcd12e7-d387-42ee-b77e-661c775bb17f',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '站点监控任务影响探测点的记录数。',
                'type' => 'object',
                'properties' => 
                array (
                  'count' => 
                  array (
                    'description' => '探测点的记录条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'You are not authorized to operate the specified resource.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'ExceedingQuota',
            'errorMessage' => 'Exceeding quota limits.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'ThrottlingException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"RequestId\\": \\"3fcd12e7-d387-42ee-b77e-661c775bb17f\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Data\\": {\\n    \\"count\\": 0\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DisableSiteMonitorsResponse>\\r\\n\\t<Message>successful</Message>\\r\\n\\t<RequestId>EC3F33C8-9149-493C-92A8-9B33A9DA951C</RequestId>\\r\\n\\t<Data>\\r\\n\\t\\t<count>0</count>\\r\\n\\t</Data>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DisableSiteMonitorsResponse>","errorExample":""}]',
      'title' => '禁用一个或多个站点监控任务',
      'summary' => '调用DisableSiteMonitors接口禁用一个或多个站点监控任务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySiteMonitor' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Address',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务的URL或IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'http://www.aliyun.com',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => '2c8dbdf9-a3ab-46a1-85a4-f094965e****',
          ),
        ),
        2 => 
        array (
          'name' => 'TaskName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务名称。长度4~100个字符，取值可包含英文字母、数字、下划线（_）和汉字。',
            'type' => 'string',
            'required' => false,
            'example' => 'HanZhou_ECS2',
          ),
        ),
        3 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控频率。取值：1、5、15。单位：分钟。默认值：1。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'IspCities',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探针信息。格式为JSONArray，例如：`[{"city":"546","isp":"465"},{"city":"572","isp":"465"},{"city":"738","isp":"465"}]`，`city`分别对应北京、杭州和青岛。

> 您可以通过DescribeSiteMonitorISPCityList接口获取探测点信息，请参见[DescribeSiteMonitorISPCityList](~~115045~~)。如果该参数取值为空，则系统随机选择3个探测点。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"city":"546","isp":"465"},{"city":"572","isp":"465"},{"city":"738","isp":"465"}]',
          ),
        ),
        5 => 
        array (
          'name' => 'OptionsJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务对应协议类型的高级扩展选项。不同监控任务的协议类型对应不同的扩展选项。',
            'type' => 'string',
            'required' => false,
            'example' => '{"time_out":5000}',
          ),
        ),
        6 => 
        array (
          'name' => 'AlertIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。云监控中已存在的报警规则ID，可通过DescribeMetricRuleList接口查询，请参见[DescribeMetricRuleList](~~114941~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '49f7c317-7645-4cc9-94fd-ea42e122****',
          ),
        ),
        7 => 
        array (
          'name' => 'IntervalUnit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控指标的单位。

单位：毫秒（ms）。',
            'type' => 'string',
            'required' => false,
            'example' => 'ms',
          ),
        ),
        8 => 
        array (
          'name' => 'CustomSchedule',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '自定义探测周期。只能选择周一至周日的某个时间段进行探测。',
            'type' => 'string',
            'required' => false,
            'example' => '{"start_hour":0,"end_hour":24, "days":[0], "time_zone":"Local"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '68192f5d-0d45-4b98-9724-892813f86c71',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '修改任务结果详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'count' => 
                  array (
                    'description' => '监控任务数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalAddress',
            'errorMessage' => 'Illegal HTTP address',
          ),
          2 => 
          array (
            'errorCode' => 'OperationError',
            'errorMessage' => 'Operation failed',
          ),
          3 => 
          array (
            'errorCode' => 'TaskNotExists',
            'errorMessage' => 'Task does not exist',
          ),
          4 => 
          array (
            'errorCode' => 'OperatorInvalid',
            'errorMessage' => '%s',
          ),
          5 => 
          array (
            'errorCode' => 'OperatorCityInvalid',
            'errorMessage' => '%s',
          ),
          6 => 
          array (
            'errorCode' => 'NameRepeat',
            'errorMessage' => 'Task name repeat',
          ),
          7 => 
          array (
            'errorCode' => 'CreateAlarmError',
            'errorMessage' => 'Create alarm error',
          ),
          8 => 
          array (
            'errorCode' => 'NameNotExists',
            'errorMessage' => 'Task name not exists',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'You are not authorized to operate the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'RestrictedUser',
            'errorMessage' => 'The user\'s operation is restricted, please register NAAM product code.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'ExceedingQuota',
            'errorMessage' => 'Exceeding quota limits.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'ThrottlingException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternetServerError',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"RequestId\\": \\"68192f5d-0d45-4b98-9724-892813f86c71\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Data\\": {\\n    \\"count\\": 1\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ModifySiteMonitorResponse>\\r\\n\\t<Message>successful</Message>\\r\\n\\t<RequestId>32E77F32-B86E-4763-A0BB-0311581ABE67</RequestId>\\r\\n\\t<Data>\\r\\n\\t\\t<count>1</count>\\r\\n\\t</Data>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</ModifySiteMonitorResponse>","errorExample":""}]',
      'title' => '修改站点监控任务',
      'summary' => '调用ModifySiteMonitor接口修改站点监控任务。',
      'requestParamsDescription' => '站点监控支持以下8种任务类型，每种任务类型对应的扩展参数（OptionsJson）如下表所示。 

- HTTP

|名称 |类型 |描述|
| ----- | -------------- | ----------- |
|http_method |String |HTTP请求方式，支持三种：GET、POST、HEAD。默认值：GET。           |
|header |String |换行符（\\n）分隔的自定义HTTP header。<br>每行header格式需符合HTTP协议（使用英文冒号分隔的键值）。          |
|cookie |String |cookie和HTTP请求标准的写法一致。   |
|request_content |String |请求内容。支持两种格式：JSON和表单。不提供时，请求中不含正文。 |
|response_content |String |期望的响应内容。探测时会在HTTP服务器返回的前64个字节进行检查。        |
|match_rule |String |0：响应中不含response_content时，探测成功。<br>1：响应中含response_content时，探测成功。      |
|username |String |如果提供username，则会在HTTP请求中携带BasicAuth header。          |
|password |String |HTTP请求验证密码。        |
|time_out |int |超时时间。单位：毫秒。默认值：5 。      |
|max_redirect |int |大跳转次数。ECS探针默认5次，运营商探针默认2次。<br>如果需要禁止跳转，则将该参数设置为：0。<br>取值范围：0~50 。  |

 
- PING

|名称  |类型  |描述 |
| ----- | -------------- | ----------- |
|failure_rate |int |当PING失败率超过该参数时，探测失败，返回610（PingAllFail）或615（PingPartialFail）。<br>默认值：0.1。      |
|ping_num |int |PING次数，默认值：20。<br>取值范围：1~100。    |

- DNS

|名称  |类型  |描述 |
| ----- | -------------- | ----------- |
|dns_server |string |DNS服务器地址，可以为域名或IP地址。   |
|dns_type |string |DNS查询类型。取值：A、NS、CNAME、MX、TXT、ANY。 |
|expect_value |string |英文空白符分隔的期望值列表。   |
|match_rule |string |期望值列表与DNS列表的关系，当不满足指定关系时，探测失败。  <br>空字符串或IN_DNS：期望值列表是DNS列表的子集。 <br>DNS_IN：DNS列表是期望值列表的子集。   <br>EQUAL：DNS列表与期望值列表相等。  <br>ANY：DNS列表与期望值列表有交集（交集不为空）。  |

- FTP

|名称  |类型  |描述 |
| ----- | -------------- | ----------- |
|port |int |FTP服务器端口号。如果不提供，则使用默认值。FTP默认值：21，FTPs默认值：990。 |
|username |string |FTP用户名。 如果未提供，则匿名登录。 |
|password |string |FTP密码。  |

- POP3/SMTP

|名称  |类型  |描述 |
| ----- | -------------- | ----------- |
|port |int |POP3服务器端口号。POP3默认值：110，POP3s默认值：995。 |
|username |string |POP3/SMTP的用户名。  |
|password |string |POP3/SMTP的密码 。 |

- TCP/UDP

|名称  |类型  |描述 |
| ----- | -------------- | ----------- |
|port |int |TCP/UDP服务器的端口。 |
|request_content |string |请求内容。当request_format为hex时，request_content内容为十六进制紧凑格式。 |
|request_format |string |当request_format为其他值时，request_content作为普通字符串发送给TCP/UDP服务器。 |
|response_content |string |响应内容。当TCP/UDP服务器返回的内容中不含response_content时，探测失败。<br>当response_format为hex时，response_content中的内容为十六进制紧凑格式。<br>当response_content为其他值时，response_content为普通字符串。 |
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableSiteMonitors' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '站点监控任务ID。多个ID之间用英文逗号（,）分隔。',
            'type' => 'string',
            'required' => true,
            'example' => '49f7b317-7645-4cc9-94fd-ea42e522****,49f7b317-7645-4cc9-94fd-ea42e522****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3fcd12e7-d387-42ee-b77e-661c775bb17f',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '站点监控任务影响探测点的记录数。',
                'type' => 'object',
                'properties' => 
                array (
                  'count' => 
                  array (
                    'description' => '探测点的记录条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'You are not authorized to operate the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'RestrictedUser',
            'errorMessage' => 'The user\'s operation is restricted, please register NAAM product code.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'ExceedingQuota',
            'errorMessage' => 'Exceeding quota limits.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'ThrottlingException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"RequestId\\": \\"3fcd12e7-d387-42ee-b77e-661c775bb17f\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Data\\": {\\n    \\"count\\": 0\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DisableSiteMonitorsResponse>\\n\\t<Message>successful</Message>\\n\\t<RequestId>7AB49ADD-3276-4161-B9F9-8662CAA800D6</RequestId>\\n\\t<Data>\\n\\t\\t<count>0</count>\\n\\t</Data>\\n\\t<Code>200</Code>\\n\\t<Success>true</Success>\\n</DisableSiteMonitorsResponse>","errorExample":""}]',
      'title' => '启用一个或多个站点监控任务',
      'summary' => '调用EnableSiteMonitors接口启用一个或多个站点监控任务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSiteMonitorQuota' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '26860260-76C6-404E-AB7A-EB98D36A6885',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '配额。',
                'type' => 'object',
                'properties' => 
                array (
                  'SiteMonitorOperatorQuotaQuota' => 
                  array (
                    'description' => '非阿里巴巴探测点配额。默认值：0。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'SecondMonitor' => 
                  array (
                    'description' => '是否开启秒级监控。取值：

- true：开启。

- false：关闭。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'SiteMonitorQuotaTaskUsed' => 
                  array (
                    'description' => '站点监控探测任务配额使用数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '6',
                  ),
                  'SiteMonitorTaskQuota' => 
                  array (
                    'description' => '站点监控探测任务配额。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'SiteMonitorVersion' => 
                  array (
                    'description' => '站点监控版本。取值：

- V1：老版本。
 
- V2：新版本。',
                    'type' => 'string',
                    'example' => 'V1',
                  ),
                  'SiteMonitorIdcQuota' => 
                  array (
                    'description' => '阿里巴巴探测点配额。免费配额5个。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'You are not authorized to operate the specified resource.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'ExceedingQuota',
            'errorMessage' => 'Exceeding quota limits.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"请求成功\\",\\n  \\"RequestId\\": \\"26860260-76C6-404E-AB7A-EB98D36A6885\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Data\\": {\\n    \\"SiteMonitorOperatorQuotaQuota\\": 0,\\n    \\"SecondMonitor\\": false,\\n    \\"SiteMonitorQuotaTaskUsed\\": 6,\\n    \\"SiteMonitorTaskQuota\\": 10,\\n    \\"SiteMonitorVersion\\": \\"V1\\",\\n    \\"SiteMonitorIdcQuota\\": 5\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSiteMonitorQuotaResponse>\\n\\t\\t<Message>请求成功</Message>\\n\\t\\t<RequestId>C1359088-B0D3-4344-BA51-FB920425D836</RequestId>\\n\\t\\t<Data>\\n\\t\\t\\t<SiteMonitorVersion>V2</SiteMonitorVersion>\\n\\t\\t\\t<SiteMonitorQuotaTaskUsed>2</SiteMonitorQuotaTaskUsed>\\n\\t\\t\\t<SecondMonitor>false</SecondMonitor>\\n\\t\\t\\t<SiteMonitorOperatorQuotaQuota>0</SiteMonitorOperatorQuotaQuota>\\n\\t\\t\\t<SiteMonitorTaskQuota>100</SiteMonitorTaskQuota>\\n\\t\\t\\t<SiteMonitorIdcQuota>5</SiteMonitorIdcQuota>\\n\\t\\t</Data>\\n\\t\\t<Code>200</Code>\\n\\t\\t<Success>true</Success>\\n</DescribeSiteMonitorQuotaResponse>","errorExample":""}]',
      'title' => '查询站点监控的配额以及版本',
      'summary' => '调用DescribeSiteMonitorQuota接口查询站点监控的配额以及版本。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSiteMonitorAttribute' => 
    array (
      'summary' => '调用DescribeSiteMonitorAttribute接口查询站点监控任务的详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cc641dff-c19d-45f3-ad0a-818a0c4f****',
          ),
        ),
        1 => 
        array (
          'name' => 'IncludeAlert',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回的任务详情是否包含报警规则。

- true：如果该参数的取值为true，则返回报警规则。
- false（默认值）：如果该参数的取值为false，则不返回报警规则。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D17DF650-7EBD-54D0-903A-1D4E624D7402',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'SiteMonitors' => 
              array (
                'description' => '监控任务详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'TaskType' => 
                  array (
                    'description' => '监控任务类型。目前站点监控任务的类型包括：HTTP（S）、PING、TCP、UDP、DNS、SMTP、POP3、FTP。',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'Interval' => 
                  array (
                    'description' => '监控任务的周期。单位：分钟。取值：1、 5、15、30和60。',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'TaskState' => 
                  array (
                    'description' => '监控任务的状态。取值：

- 1：启用。
- 2：禁用。',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'TaskName' => 
                  array (
                    'description' => '监控任务名称。',
                    'type' => 'string',
                    'example' => 'test123',
                  ),
                  'Address' => 
                  array (
                    'description' => '监控任务的探测地址。',
                    'type' => 'string',
                    'example' => 'https://aliyun.com',
                  ),
                  'TaskId' => 
                  array (
                    'description' => '监控任务ID。',
                    'type' => 'string',
                    'example' => 'cc641dff-c19d-45f3-ad0a-818a0c4f****',
                  ),
                  'IspCities' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'IspCity' => 
                      array (
                        'description' => '探测点的运营商和城市。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '探测点的运营商和城市。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'City' => 
                            array (
                              'description' => '城市ID。',
                              'type' => 'string',
                              'example' => '738',
                            ),
                            'IspName' => 
                            array (
                              'description' => '运营商名称。',
                              'type' => 'string',
                              'example' => '阿里巴巴',
                            ),
                            'Isp' => 
                            array (
                              'description' => '运营商ID。',
                              'type' => 'string',
                              'example' => '465',
                            ),
                            'CityName' => 
                            array (
                              'description' => '城市名称。',
                              'type' => 'string',
                              'example' => '北京市',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'OptionJson' => 
                  array (
                    'description' => '扩展选项。每一种探测类型有不同的扩展类型，详情请参见[CreateSiteMonitor](~~115048~~)。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'request_format' => 
                      array (
                        'description' => 'HTTP请求内容格式。取值：
- hex：十六进制格式。
- txt：文本格式。',
                        'type' => 'string',
                        'example' => 'txt',
                      ),
                      'response_content' => 
                      array (
                        'description' => '匹配响应内容。',
                        'type' => 'string',
                        'example' => 'txt',
                      ),
                      'port' => 
                      array (
                        'description' => 'TCP、UDP、SMTP、POP3探测类型的端口。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '110',
                      ),
                      'authentication' => 
                      array (
                        'description' => '是否开启安全验证。取值：
- 0：否。
- 1：是。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'match_rule' => 
                      array (
                        'description' => '是否包含报警规则。取值：
- 0：是。
- 1：否。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'dns_match_rule' => 
                      array (
                        'description' => 'DNS的匹配规则。取值：

- IN_DNS：期望解析的别名或IP地址均在DNS应答中。
- DNS_IN：所有的DNS应答都出现在期望解析的别名或IP地址中。
- EQUAL：DNS应答和期望解析的别名或IP地址完全相同。
- ANY：DNS应答和期望解析的别名或IP地址有交集。',
                        'type' => 'string',
                        'example' => 'IN_DNS',
                      ),
                      'request_content' => 
                      array (
                        'description' => 'HTTP探测类型的请求内容。',
                        'type' => 'string',
                        'example' => 'aa=bb',
                      ),
                      'username' => 
                      array (
                        'description' => 'FTP、SMTP或POP3的用户名。',
                        'type' => 'string',
                        'example' => 'testUser',
                      ),
                      'dns_type' => 
                      array (
                        'description' => 'DNS解析类型。仅适用于DNS探测类型。取值：
- A：指定主机名或域名对应的IP地址。
- CNAME：将多个域名映射到另外一个域名。
- NS：指定域名由某个DNS服务器解析。
- MX：将域名指向一个邮件服务器地址。
- TXT：主机名或域名的说明。文本长度限制512字节，通常用做SPF（Sender Policy Framework）记录，即反垃圾邮件。',
                        'type' => 'string',
                        'example' => 'A',
                      ),
                      'response_format' => 
                      array (
                        'description' => 'HTTP响应内容格式。取值：
- hex：十六进制格式。
- txt：文本格式。',
                        'type' => 'string',
                        'example' => 'txt',
                      ),
                      'password' => 
                      array (
                        'description' => 'SMTP、POP3或FTP探测类型的密码。',
                        'type' => 'string',
                        'example' => '123****',
                      ),
                      'expect_value' => 
                      array (
                        'description' => '待解析的别名或地址。

> 该参数仅适用于DNS探测类型。',
                        'type' => 'string',
                        'example' => 'dns_server',
                      ),
                      'time_out' => 
                      array (
                        'description' => '超时时间。单位：毫秒。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '3',
                      ),
                      'failure_rate' => 
                      array (
                        'description' => '丢包率。

> 该参数仅适用于PING探测类型。',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '0.4',
                      ),
                      'header' => 
                      array (
                        'description' => 'HTTP请求头。',
                        'type' => 'string',
                        'example' => 'testKey:testValue',
                      ),
                      'cookie' => 
                      array (
                        'description' => '发送HTTP请求的Cookie。',
                        'type' => 'string',
                        'example' => 'lang=en',
                      ),
                      'ping_num' => 
                      array (
                        'description' => 'PING探测类型的心跳。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '29',
                      ),
                      'http_method' => 
                      array (
                        'description' => 'HTTP请求方法。取值：
- get 
- post
- head',
                        'type' => 'string',
                        'example' => 'get',
                      ),
                      'dns_server' => 
                      array (
                        'description' => 'DNS服务器的IP地址。

> 仅适用于DNS探测类型。',
                        'type' => 'string',
                        'example' => '192.168.XX.XX',
                      ),
                      'attempts' => 
                      array (
                        'description' => 'DNS失败后重试次数。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '3',
                      ),
                      'protocol' => 
                      array (
                        'description' => '探测协议。',
                        'type' => 'string',
                        'example' => 'TCP',
                      ),
                      'isBase64Encode' => 
                      array (
                        'description' => '是否对密码进行base64解码存储。取值：
- true：对密码进行base64解码存储。
- false：不对密码进行base64解码存储。',
                        'type' => 'string',
                        'example' => 'false',
                      ),
                      'diagnosis_mtr' => 
                      array (
                        'description' => '是否开启任务失败后的自动MTR网络诊断。取值：
- false：不开启自动MTR网络诊断。
- true  开启自动MTR网络诊断。',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'diagnosis_ping' => 
                      array (
                        'description' => '是否开启任务失败后自动PING网络延时探测。取值：
- false：不开启自动PING网络延时探测。
- true：开启自动PING网络延时探测。',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'retry_delay' => 
                      array (
                        'description' => '探测失败后重试次数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '0',
                      ),
                      'assertions' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'assertions' => 
                          array (
                            'description' => '断言配置组。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '断言配置组。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'property' => 
                                array (
                                  'description' => '断言内容解析路径。

- 如果断言类型为`body_json`，则路径为`json path`。

- 如果断言类型是`body_xml`，则路径为`xml path`',
                                  'type' => 'string',
                                  'example' => 'json path',
                                ),
                                'type' => 
                                array (
                                  'description' => '断言类型。取值：
- response_time：判定响应时间是否符合预期。
- status_code：判断HTTP响应状态码是否符合预期。
- header：判定响应Header中的字段是否符合预期。
- body_text：通过文本字符匹配判断返回Body中的内容是否符合预期。
- body_json：通过JSON解析（JSON Path）判断返回Body中的内容是否符合预期。
- body_xml：通过XML解析（XPath）判断返回Body中的内容是否符合预期。',
                                  'type' => 'string',
                                  'example' => 'response_time',
                                ),
                                'operator' => 
                                array (
                                  'description' => '断言比较操作符。取值：
- contains：包含。
- doesNotContain：不包含。
- matches：正则匹配。
- doesNotMatch：正则不匹配。
- is：数值等于或字符匹配相等。
- isNot：不等于。
- lessThan：小于。
- moreThan：大于。',
                                  'type' => 'string',
                                  'example' => 'lessThan',
                                ),
                                'target' => 
                                array (
                                  'description' => '断言匹配比较的目标数值或字符。',
                                  'type' => 'string',
                                  'example' => '0',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                      'min_tls_version' => 
                      array (
                        'description' => '最低TLS版本。默认支持TLS1.2及以上版本，TLS1.0和1.1已被禁用，如仍需支持可更改配置',
                        'type' => 'string',
                        'example' => 'tlsv1.2',
                      ),
                      'dns_hijack_whitelist' => 
                      array (
                        'description' => 'DNS劫持配置列表。',
                        'type' => 'string',
                        'example' => 'www.taobao.com:www.taobao.com.danuoyi.tbcache.com',
                      ),
                      'ping_type' => 
                      array (
                        'description' => 'PING协议类型。取值：

- icmp

- tcp

- udp',
                        'type' => 'string',
                        'example' => 'icmp',
                        'default' => 'icmp',
                      ),
                      'ping_port' => 
                      array (
                        'description' => 'PING端口。适用于TCP PING。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '80',
                      ),
                      'browser_insecure' => 
                      array (
                        'description' => '是否忽略证书错误。取值：

- false：不忽略证书错误。
- true：忽略证书错误。',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'browser_info' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'browser_info' => 
                          array (
                            'description' => '浏览器信息。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '浏览器信息。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'browser' => 
                                array (
                                  'description' => '浏览器类型。',
                                  'type' => 'string',
                                  'example' => 'Chrome',
                                ),
                                'device' => 
                                array (
                                  'description' => '屏幕类型。',
                                  'type' => 'string',
                                  'example' => 'laptop',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                      'traffic_hijack_element_count' => 
                      array (
                        'description' => '当发生重定向时，如果浏览器加载资源数超过这个值，则认为发生流量劫持。当该值为0时，不进行校验，默认值为0。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '0',
                      ),
                      'traffic_hijack_element_blacklist' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'traffic_hijack_element_blacklist' => 
                          array (
                            'description' => '当发生重定向时，如果浏览器加载资源的URL与该列表中的表达能匹配，则认为发生流量劫持。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '当发生重定向时，如果浏览器加载资源的URL与该列表中的表达能匹配，则认为发生流量劫持。',
                              'type' => 'string',
                              'example' => 'www.taobao.com',
                            ),
                          ),
                        ),
                      ),
                      'traffic_hijack_element_whitelist' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'traffic_hijack_element_whitelist' => 
                          array (
                            'description' => '当发生重定向时，如果浏览器加载资源的URL与该列表中的任意一个表达式都不匹配，则认为发生流量劫持。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '当发生重定向时，如果浏览器加载资源的URL与该列表中的任意一个表达式都不匹配，则认为发生流量劫持。',
                              'type' => 'string',
                              'example' => 'www.taobao.com',
                            ),
                          ),
                        ),
                      ),
                      'blocked_url_list' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'blocked_url_list' => 
                          array (
                            'description' => '屏蔽的资源URL列表。支持路径通配符。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '屏蔽的资源URL列表。支持路径通配符。',
                              'type' => 'string',
                              'example' => 'www.taobao.com/**',
                            ),
                          ),
                        ),
                      ),
                      'expect_exist_string' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'expect_exist_string' => 
                          array (
                            'description' => '期待页面中存在的字符串列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '期待页面中存在的字符串列表。',
                              'type' => 'string',
                              'example' => 'expected string',
                            ),
                          ),
                        ),
                      ),
                      'expect_non_exist_string' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'expect_non_exist_string' => 
                          array (
                            'description' => '期待页面中不存在的字符串列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '期待页面中不存在的字符串列表。',
                              'type' => 'string',
                              'example' => 'unexpected string',
                            ),
                          ),
                        ),
                      ),
                      'browser_headers' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'browser_headers' => 
                          array (
                            'description' => '自定义Header。结构为`{"key": "somekey", "value":"somevalue"}`',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '自定义Header。结构为`{"key": "somekey", "value":"somevalue"}`',
                              'type' => 'object',
                              'example' => '{"key":"value"}',
                            ),
                          ),
                        ),
                      ),
                      'browser_hosts' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'browser_hosts' => 
                          array (
                            'description' => '自定义Host。结构为`{"url":"someurl", "ip":"someip"}`。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '自定义Host。结构为`{"url":"someurl", "ip":"someip"}`。',
                              'type' => 'string',
                              'example' => '{"url":"www.taobao.com","ip":"127.0.0.1"}',
                            ),
                          ),
                        ),
                      ),
                      'browser_task_version' => 
                      array (
                        'description' => '浏览器拨测版本。取值：

- 1：单页拨测。
- 2：多页拨测。',
                        'type' => 'string',
                        'example' => '1',
                      ),
                      'waitTime_after_completion' => 
                      array (
                        'description' => '浏览器拨测任务中，页面打开后的额外等待时间。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'ip_network' => 
                      array (
                        'type' => 'string',
                        'enum' => 
                        array (
                        ),
                      ),
                      'empty_message' => 
                      array (
                        'type' => 'boolean',
                      ),
                    ),
                  ),
                  'AgentGroup' => 
                  array (
                    'description' => '探测点类型。默认为PC。
取值：

- PC 固网

- MOBILE 移动端',
                    'type' => 'string',
                    'example' => 'PC',
                  ),
                  'CustomSchedule' => 
                  array (
                    'description' => '自定义探测周期。只能选择周一至周日的某个时间段进行探测。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'start_hour' => 
                      array (
                        'description' => '自定义探测开始时间。

单位：小时。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '8',
                      ),
                      'end_hour' => 
                      array (
                        'description' => '自定义探测结束时间。

单位：小时。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '18',
                      ),
                      'time_zone' => 
                      array (
                        'description' => '自定义探测的时区。',
                        'type' => 'string',
                        'example' => 'local',
                      ),
                      'days' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'days' => 
                          array (
                            'description' => '探测日。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '探测日。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'MetricRules' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MetricRule' => 
                  array (
                    'description' => '监控任务的报警规则。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '监控任务的报警规则。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MetricName' => 
                        array (
                          'description' => '监控项名称。',
                          'type' => 'string',
                          'example' => 'Availability',
                        ),
                        'EvaluationCount' => 
                        array (
                          'description' => '报警重试次数。',
                          'type' => 'string',
                          'example' => '3',
                        ),
                        'Namespace' => 
                        array (
                          'description' => '云服务的数据命名空间。',
                          'type' => 'string',
                          'example' => 'acs_networkmonitor',
                        ),
                        'OkActions' => 
                        array (
                          'description' => '收到报警的联系人组。',
                          'type' => 'string',
                          'example' => '[ "CloudMonitor"]',
                        ),
                        'AlarmActions' => 
                        array (
                          'description' => '报警规则通知的报警联系组。',
                          'type' => 'string',
                          'example' => 'CloudMonitor',
                        ),
                        'RuleId' => 
                        array (
                          'description' => '报警规则ID。',
                          'type' => 'string',
                          'example' => 'bf071ae_7b7aec3817b0fdf****',
                        ),
                        'RuleName' => 
                        array (
                          'description' => '报警规则名称。',
                          'type' => 'string',
                          'example' => 'rule1',
                        ),
                        'Period' => 
                        array (
                          'description' => '时间间隔。通常是监控项的上报周期，单位：秒。

>如果您设置了统计周期，则会按照此周期查询对应的统计数据 。',
                          'type' => 'string',
                          'example' => '15s',
                        ),
                        'ComparisonOperator' => 
                        array (
                          'description' => '报警规则的阈值比较符。取值：

- `>=`
- `>`
- `<=`
- `<`
- `=`
- `!=`
- GreaterThanYesterday：同比昨天同时间上涨。
- LessThanYesterday：同比昨天同时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                          'type' => 'string',
                          'example' => 'GreaterThanYesterday',
                        ),
                        'Expression' => 
                        array (
                          'description' => '报警规则的表达式。',
                          'type' => 'string',
                          'example' => '$Availability=30',
                        ),
                        'Dimensions' => 
                        array (
                          'description' => '报警规则对应的维度。',
                          'type' => 'string',
                          'example' => '[{"taskId": "cc641dff-c19d-45f3-ad0a-818a0c4f****" }]',
                        ),
                        'StateValue' => 
                        array (
                          'description' => '报警的状态。取值：

- OK：正常。

- ALARM：报警。',
                          'type' => 'string',
                          'example' => 'OK',
                        ),
                        'ActionEnable' => 
                        array (
                          'description' => '报警规则的状态。取值：

- true：启用。
- false：禁用。',
                          'type' => 'string',
                          'example' => 'true',
                        ),
                        'Level' => 
                        array (
                          'description' => '报警规则的级别。取值：

- 1：紧急。

- 2：警告。

- 3：信息。',
                          'type' => 'string',
                          'example' => '2',
                        ),
                        'Threshold' => 
                        array (
                          'description' => '报警阈值。',
                          'type' => 'string',
                          'example' => '30',
                        ),
                        'Statistics' => 
                        array (
                          'description' => '报警的统计方法。取值：

- Availability：可用探测点百分比。
- AvailableNumber：可用探测点数量。
- ErrorCodeMaximum：任意状态码（独立报警）。
- ErrorCodeMinimum：所有状态码（组合报警）。
- Average：响应时间。',
                          'type' => 'string',
                          'example' => 'Availability',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'You are not authorized to operate the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'Task Id does not exist',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'ExceedingQuota',
            'errorMessage' => 'Exceeding quota limits.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"RequestId\\": \\"D17DF650-7EBD-54D0-903A-1D4E624D7402\\",\\n  \\"Success\\": true,\\n  \\"SiteMonitors\\": {\\n    \\"TaskType\\": \\"HTTP\\",\\n    \\"Interval\\": \\"1\\",\\n    \\"TaskState\\": \\"1\\",\\n    \\"TaskName\\": \\"test123\\",\\n    \\"Address\\": \\"https://aliyun.com\\",\\n    \\"TaskId\\": \\"cc641dff-c19d-45f3-ad0a-818a0c4f****\\",\\n    \\"IspCities\\": {\\n      \\"IspCity\\": [\\n        {\\n          \\"City\\": \\"738\\",\\n          \\"IspName\\": \\"阿里巴巴\\",\\n          \\"Isp\\": \\"465\\",\\n          \\"CityName\\": \\"北京市\\"\\n        }\\n      ]\\n    },\\n    \\"OptionJson\\": {\\n      \\"request_format\\": \\"txt\\",\\n      \\"response_content\\": \\"txt\\",\\n      \\"port\\": 110,\\n      \\"authentication\\": 1,\\n      \\"match_rule\\": 1,\\n      \\"dns_match_rule\\": \\"IN_DNS\\",\\n      \\"request_content\\": \\"aa=bb\\",\\n      \\"username\\": \\"testUser\\",\\n      \\"dns_type\\": \\"A\\",\\n      \\"response_format\\": \\"txt\\",\\n      \\"password\\": \\"123****\\",\\n      \\"expect_value\\": \\"dns_server\\",\\n      \\"time_out\\": 3,\\n      \\"failure_rate\\": 0.4,\\n      \\"header\\": \\"testKey:testValue\\",\\n      \\"cookie\\": \\"lang=en\\",\\n      \\"ping_num\\": 29,\\n      \\"http_method\\": \\"get\\",\\n      \\"dns_server\\": \\"192.168.XX.XX\\",\\n      \\"attempts\\": 3,\\n      \\"protocol\\": \\"TCP\\",\\n      \\"isBase64Encode\\": \\"false\\",\\n      \\"diagnosis_mtr\\": false,\\n      \\"diagnosis_ping\\": false,\\n      \\"retry_delay\\": 0,\\n      \\"assertions\\": {\\n        \\"assertions\\": [\\n          {\\n            \\"property\\": \\"json path\\",\\n            \\"type\\": \\"response_time\\",\\n            \\"operator\\": \\"lessThan\\",\\n            \\"target\\": \\"0\\"\\n          }\\n        ]\\n      },\\n      \\"min_tls_version\\": \\"tlsv1.2\\",\\n      \\"dns_hijack_whitelist\\": \\"www.taobao.com:www.taobao.com.danuoyi.tbcache.com\\",\\n      \\"ping_type\\": \\"icmp\\",\\n      \\"ping_port\\": 80,\\n      \\"browser_insecure\\": false,\\n      \\"browser_info\\": {\\n        \\"browser_info\\": [\\n          {\\n            \\"browser\\": \\"Chrome\\",\\n            \\"device\\": \\"laptop\\"\\n          }\\n        ]\\n      },\\n      \\"traffic_hijack_element_count\\": 0,\\n      \\"traffic_hijack_element_blacklist\\": {\\n        \\"traffic_hijack_element_blacklist\\": [\\n          \\"www.taobao.com\\"\\n        ]\\n      },\\n      \\"traffic_hijack_element_whitelist\\": {\\n        \\"traffic_hijack_element_whitelist\\": [\\n          \\"www.taobao.com\\"\\n        ]\\n      },\\n      \\"blocked_url_list\\": {\\n        \\"blocked_url_list\\": [\\n          \\"www.taobao.com/**\\"\\n        ]\\n      },\\n      \\"expect_exist_string\\": {\\n        \\"expect_exist_string\\": [\\n          \\"expected string\\"\\n        ]\\n      },\\n      \\"expect_non_exist_string\\": {\\n        \\"expect_non_exist_string\\": [\\n          \\"unexpected string\\"\\n        ]\\n      },\\n      \\"strict_mode\\": false,\\n      \\"browser_headers\\": {\\n        \\"browser_headers\\": [\\n          {\\n            \\"key\\": \\"value\\"\\n          }\\n        ]\\n      },\\n      \\"browser_hosts\\": {\\n        \\"browser_hosts\\": [\\n          \\"{\\\\\\"url\\\\\\":\\\\\\"www.taobao.com\\\\\\",\\\\\\"ip\\\\\\":\\\\\\"127.0.0.1\\\\\\"}\\"\\n        ]\\n      },\\n      \\"browser_task_version\\": \\"1\\",\\n      \\"waitTime_after_completion\\": 3,\\n      \\"ip_network\\": \\"\\",\\n      \\"empty_message\\": true\\n    },\\n    \\"AgentGroup\\": \\"PC\\",\\n    \\"CustomSchedule\\": {\\n      \\"start_hour\\": 8,\\n      \\"end_hour\\": 18,\\n      \\"time_zone\\": \\"local\\",\\n      \\"days\\": {\\n        \\"days\\": [\\n          1\\n        ]\\n      }\\n    }\\n  },\\n  \\"MetricRules\\": {\\n    \\"MetricRule\\": [\\n      {\\n        \\"MetricName\\": \\"Availability\\",\\n        \\"EvaluationCount\\": \\"3\\",\\n        \\"Namespace\\": \\"acs_networkmonitor\\",\\n        \\"OkActions\\": \\"[ \\\\\\"CloudMonitor\\\\\\"]\\",\\n        \\"AlarmActions\\": \\"CloudMonitor\\",\\n        \\"RuleId\\": \\"bf071ae_7b7aec3817b0fdf****\\",\\n        \\"RuleName\\": \\"rule1\\",\\n        \\"Period\\": \\"15s\\",\\n        \\"ComparisonOperator\\": \\"GreaterThanYesterday\\",\\n        \\"Expression\\": \\"$Availability=30\\",\\n        \\"Dimensions\\": \\"[{\\\\\\"taskId\\\\\\": \\\\\\"cc641dff-c19d-45f3-ad0a-818a0c4f****\\\\\\" }]\\",\\n        \\"StateValue\\": \\"OK\\",\\n        \\"ActionEnable\\": \\"true\\",\\n        \\"Level\\": \\"2\\",\\n        \\"Threshold\\": \\"30\\",\\n        \\"Statistics\\": \\"Availability\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSiteMonitorAttributeResponse>\\r\\n\\t<MetricRules>\\r\\n\\t\\t<MetricRule>\\r\\n\\t\\t\\t<ComparisonOperator>GreaterThanYesterday</ComparisonOperator>\\r\\n\\t\\t\\t<RuleId>bf071ae_7b7aec3817b0fdf****</RuleId>\\r\\n\\t\\t\\t<Period>15s</Period>\\r\\n\\t\\t\\t<EvaluationCount>3</EvaluationCount>\\r\\n\\t\\t\\t<Dimensions>\\r\\n\\t\\t\\t\\t<taskId>cc641dff-c19d-45f3-ad0a-818a0c4f****</taskId>\\r\\n\\t\\t\\t</Dimensions>\\r\\n\\t\\t\\t<Statistics>Availability</Statistics>\\r\\n\\t\\t\\t<Namespace>acs_networkmonitor</Namespace>\\r\\n\\t\\t\\t<AlarmActions>CloudMonitor</AlarmActions>\\r\\n\\t\\t\\t<MetricName>Availability</MetricName>\\r\\n\\t\\t\\t<OkActions>CloudMonitor</OkActions>\\r\\n\\t\\t\\t<Expression>$Availability=30</Expression>\\r\\n\\t\\t\\t<ActionEnable>true</ActionEnable>\\r\\n\\t\\t\\t<StateValue>OK</StateValue>\\r\\n\\t\\t\\t<Level>2</Level>\\r\\n\\t\\t\\t<RuleName>rule1</RuleName>\\r\\n\\t\\t\\t<Threshold>30</Threshold>\\r\\n\\t\\t</MetricRule>\\r\\n\\t</MetricRules>\\r\\n\\t<Message>successful</Message>\\r\\n\\t<RequestId>D17DF650-7EBD-54D0-903A-1D4E624D7402</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n\\t<SiteMonitors>\\r\\n\\t\\t<OptionJson>\\r\\n\\t\\t\\t<time_out>30000</time_out>\\r\\n\\t\\t\\t<http_method>get</http_method>\\r\\n\\t\\t</OptionJson>\\r\\n\\t\\t<TaskId>cc641dff-c19d-45f3-ad0a-818a0c4f****</TaskId>\\r\\n\\t\\t<Address>https://aliyun.com</Address>\\r\\n\\t\\t<TaskName>test123</TaskName>\\r\\n\\t\\t<TaskType>HTTP</TaskType>\\r\\n\\t\\t<IspCities>\\r\\n\\t\\t\\t<IspCity>\\r\\n\\t\\t\\t\\t<IspName>阿里巴巴</IspName>\\r\\n\\t\\t\\t\\t<Isp>465</Isp>\\r\\n\\t\\t\\t\\t<CityName>北京市</CityName>\\r\\n\\t\\t\\t\\t<City>738</City>\\r\\n\\t\\t\\t</IspCity>\\r\\n\\t\\t</IspCities>\\r\\n\\t\\t<TaskState>1</TaskState>\\r\\n\\t\\t<Interval>1</Interval>\\r\\n\\t</SiteMonitors>\\r\\n</DescribeSiteMonitorAttributeResponse>\\t","errorExample":""}]',
      'title' => '查询站点监控任务的详细信息',
      'description' => '本文将提供一个示例，查询站点监控任务`cc641dff-c19d-45f3-ad0a-818a0c4f****`的详细信息，返回结果显示，站点监控任务的名称为`test123`、探测地址为`https://aliyun.com`、运营商为`阿里巴巴`等信息。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSiteMonitorISPCityList' => 
    array (
      'summary' => '调用DescribeSiteMonitorISPCityList接口查询所有运营商探测点详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商探测点的名称或ID。

> 运营商名称支持模糊查询。',
            'type' => 'string',
            'required' => false,
            'example' => '联通',
          ),
        ),
        1 => 
        array (
          'name' => 'City',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商探测点所在城市的名称或ID。

> 城市名称支持模糊查询。',
            'type' => 'string',
            'required' => false,
            'example' => '贵阳市',
          ),
        ),
        2 => 
        array (
          'name' => 'IPV6',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否查询IPv6探针。取值：
- true（默认值）：查询IPv6探针。
- false：不查询IPv6探针。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'IPV4',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否查询IPv4探针。取值：
- true（默认值）：查询IPv4探针。
- false：不查询IPv4探针。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'ViewAll',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否返回所有探测点。取值：

- true（默认值）：返回所有探测点。
- false：只返回可用探测点。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B35D7D84-547B-4E61-B909-48A1F8A0C756',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'IspCityList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'IspCity' => 
                  array (
                    'description' => '探测点列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '探测点列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CityName.en' => 
                        array (
                          'description' => '城市名称（英文）。',
                          'type' => 'string',
                          'example' => 'Guiyang',
                        ),
                        'IPV4ProbeCount' => 
                        array (
                          'description' => 'IPv4探针数量。',
                          'type' => 'string',
                          'example' => '4',
                        ),
                        'City' => 
                        array (
                          'description' => '城市ID。',
                          'type' => 'string',
                          'example' => '4',
                        ),
                        'Isp' => 
                        array (
                          'description' => '运营商ID。',
                          'type' => 'string',
                          'example' => '232',
                        ),
                        'CityName.zh_CN' => 
                        array (
                          'description' => '城市名称（简体中文）。
> 该参数仅适用于中国站。',
                          'type' => 'string',
                          'example' => '贵阳市',
                        ),
                        'Region.zh_CN' => 
                        array (
                          'description' => '省份（简体中文）。
> 该参数仅适用于中国站。',
                          'type' => 'string',
                          'example' => '贵州省',
                        ),
                        'IspName.zh_CN' => 
                        array (
                          'description' => '运营商名称（简体中文）。
> 该参数仅适用于中国站。',
                          'type' => 'string',
                          'example' => '联通',
                        ),
                        'Country.en' => 
                        array (
                          'description' => '国家（英文）。',
                          'type' => 'string',
                          'example' => 'China',
                        ),
                        'IPV6ProbeCount' => 
                        array (
                          'description' => 'IPv6探针数量。',
                          'type' => 'string',
                          'example' => '3',
                        ),
                        'Region' => 
                        array (
                          'description' => '省份代码。',
                          'type' => 'string',
                          'example' => '264',
                        ),
                        'Country' => 
                        array (
                          'description' => '国家代码。',
                          'type' => 'string',
                          'example' => '629',
                        ),
                        'IspName.en' => 
                        array (
                          'description' => '运营商名称（英文）。',
                          'type' => 'string',
                          'example' => 'China-Unicom',
                        ),
                        'Region.en' => 
                        array (
                          'description' => '省份（英文）。',
                          'type' => 'string',
                          'example' => 'Guizhou',
                        ),
                        'Country.zh_CN' => 
                        array (
                          'description' => '国家（简体中文）。
> 该参数仅适用于中国站。',
                          'type' => 'string',
                          'example' => '中国',
                        ),
                        'Area.zh_CN' => 
                        array (
                          'description' => '区域（简体中文）。

> 该参数仅适用于中国站。',
                          'type' => 'string',
                          'example' => '西南',
                        ),
                        'Area.en' => 
                        array (
                          'description' => '区域（汉语拼音）。',
                          'type' => 'string',
                          'example' => 'XiNan',
                        ),
                        'IPPool' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'IPPool' => 
                            array (
                              'description' => 'IP地址池。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'IP地址池。',
                                'type' => 'string',
                                'example' => '["192.68.XX.XX","192.68.XX.XX"]',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'You are not authorized to operate the specified resource.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'ExceedingQuota',
            'errorMessage' => 'Exceeding quota limits.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'ThrottlingException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"RequestId\\": \\"B35D7D84-547B-4E61-B909-48A1F8A0C756\\",\\n  \\"Success\\": \\"true\\",\\n  \\"IspCityList\\": {\\n    \\"IspCity\\": [\\n      {\\n        \\"CityName.en\\": \\"Guiyang\\",\\n        \\"IPV4ProbeCount\\": \\"4\\",\\n        \\"City\\": \\"4\\",\\n        \\"Isp\\": \\"232\\",\\n        \\"CityName.zh_CN\\": \\"贵阳市\\",\\n        \\"Region.zh_CN\\": \\"贵州省\\",\\n        \\"IspName.zh_CN\\": \\"联通\\",\\n        \\"Country.en\\": \\"China\\",\\n        \\"IPV6ProbeCount\\": \\"3\\",\\n        \\"Region\\": \\"264\\",\\n        \\"Country\\": \\"629\\",\\n        \\"IspName.en\\": \\"China-Unicom\\",\\n        \\"Region.en\\": \\"Guizhou\\",\\n        \\"Country.zh_CN\\": \\"中国\\",\\n        \\"Area.zh_CN\\": \\"西南\\",\\n        \\"Area.en\\": \\"XiNan\\",\\n        \\"IPPool\\": {\\n          \\"IPPool\\": [\\n            \\"[\\\\\\"192.68.XX.XX\\\\\\",\\\\\\"192.68.XX.XX\\\\\\"]\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSiteMonitorISPCityListResponse>\\r\\n\\t<Message>successful</Message>\\r\\n\\t<RequestId>B35D7D84-547B-4E61-B909-48A1F8A0C756</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n\\t<IspCityList>\\r\\n\\t\\t<IspCity>\\r\\n\\t\\t\\t<Country.zh_CN>中国</Country.zh_CN>\\r\\n\\t\\t\\t<Area.zh_CN>西南</Area.zh_CN>\\r\\n\\t\\t\\t<CityName.en>Guiyang</CityName.en>\\r\\n\\t\\t\\t<IPV4ProbeCount>4</IPV4ProbeCount>\\r\\n\\t\\t\\t<Isp>232</Isp>\\r\\n\\t\\t\\t<City>4</City>\\r\\n\\t\\t\\t<IspName.en>China-Unicom</IspName.en>\\r\\n\\t\\t\\t<Country.en>China</Country.en>\\r\\n\\t\\t\\t<IPV6ProbeCount>0</IPV6ProbeCount>\\r\\n\\t\\t\\t<CityName.zh_CN>贵阳市</CityName.zh_CN>\\r\\n\\t\\t\\t<Area.en>XiNan</Area.en>\\r\\n\\t\\t\\t<Region.zh_CN>贵州省</Region.zh_CN>\\r\\n\\t\\t\\t<APIProbeCount>0</APIProbeCount>\\r\\n\\t\\t\\t<Region>264</Region>\\r\\n\\t\\t\\t<Country>629</Country>\\r\\n\\t\\t\\t<IspName.zh_CN>联通</IspName.zh_CN>\\r\\n\\t\\t\\t<Region.en>Guizhou</Region.en>\\r\\n\\t\\t\\t<IPPool>\\r\\n\\t\\t\\t\\t<IPPool>192.168.XX.XX</IPPool>\\r\\n\\t\\t\\t\\t<IPPool>192.168.XX.XX</IPPool>\\r\\n\\t\\t\\t</IPPool>\\r\\n\\t\\t</IspCity>\\r\\n\\t</IspCityList>\\r\\n</DescribeSiteMonitorISPCityListResponse>","errorExample":""}]',
      'title' => '查询所有运营商探测点详情',
      'description' => '本文将提供一个示例，查询运营商“联通”在“贵阳市”的探测点详情。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSiteMonitorData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => '49f7b317-7645-4cc9-94fd-ea42e522****',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控的数据类型。取值：
- metric：时序类指标监控
- event：事件类监控',
            'type' => 'string',
            'required' => false,
            'example' => 'metric',
          ),
        ),
        2 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项的名称。取值：
- Availability：可用率
- ResponseTime：响应时间',
            'type' => 'string',
            'required' => true,
            'example' => 'Availability',
          ),
        ),
        3 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。支持的格式：

- Unix时间戳：从1970年1月1日开始所经过的毫秒数。

- Format格式：YYYY-MM-DDThh:mm:ssZ。

',
            'type' => 'string',
            'required' => false,
            'example' => '1551579637000',
          ),
        ),
        4 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间。支持的格式：

- Unix时间戳：从1970年1月1日开始所经过的毫秒数。

- Format格式：YYYY-MM-DDThh:mm:ssZ。',
            'type' => 'string',
            'required' => false,
            'example' => '1551581437000',
          ),
        ),
        5 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '统计周期。单位：秒，取值为60或60的整数倍。
>默认根据探测频率最小周期返回数据。',
            'type' => 'string',
            'required' => false,
            'example' => '60',
          ),
        ),
        6 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页游标。',
            'type' => 'string',
            'required' => false,
            'example' => '49f7b317-7645-4cc9-94fd-ea42e5220930ea42e5220930ea42e522****',
          ),
        ),
        7 => 
        array (
          'name' => 'Length',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回的数据点数量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '分页游标。',
                'type' => 'string',
                'example' => 'ea42e5220930ea42e522****',
              ),
              'Data' => 
              array (
                'description' => '监控数据。',
                'type' => 'string',
                'example' => '[{"Maximum":247,"Mimimum":61,"Average":154,"userId":"127067667954****","taskId":"49f7b317-7645-4cc9-94fd-ea42e522****","timestamp":1551581760000}]',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3febb181-0d98-4af9-8b04-7faf36b048b9',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'Successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'You are not authorized to operate the specified resource.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'ExceedingQuota',
            'errorMessage' => 'Exceeding quota limits.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'ThrottlingException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Data\\": \\"[{\\\\\\"Maximum\\\\\\":247,\\\\\\"Mimimum\\\\\\":61,\\\\\\"Average\\\\\\":154,\\\\\\"userId\\\\\\":\\\\\\"127067667954****\\\\\\",\\\\\\"taskId\\\\\\":\\\\\\"49f7b317-7645-4cc9-94fd-ea42e522****\\\\\\",\\\\\\"timestamp\\\\\\":1551581760000}]\\",\\n  \\"NextToken\\": \\"ea42e5220930ea42e522****\\",\\n  \\"RequestId\\": \\"3febb181-0d98-4af9-8b04-7faf36b048b9\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeSiteMonitorData>\\r\\n\\t\\t<Data>\\r\\n\\t\\t\\t<Over5totalTime>0</Over5totalTime>\\r\\n\\t\\t\\t<Error4XXRate>0</Error4XXRate>\\r\\n\\t\\t\\t<UnavailableNumber>0</UnavailableNumber>\\r\\n\\t\\t\\t<Over2totalTime>0</Over2totalTime>\\r\\n\\t\\t\\t<timestamp>1551581040000</timestamp>\\r\\n\\t\\t\\t<Over100FailureRate>0</Over100FailureRate>\\r\\n\\t\\t\\t<Over10FailureRate>0</Over10FailureRate>\\r\\n\\t\\t\\t<Availability>100</Availability>\\r\\n\\t\\t\\t<Over80FailureRate>0</Over80FailureRate>\\r\\n\\t\\t\\t<userId>123****</userId>\\r\\n\\t\\t\\t<AvailableNumber>2</AvailableNumber>\\r\\n\\t\\t\\t<Unavailability>0</Unavailability>\\r\\n\\t\\t\\t<ErrorCodeMaximum>0</ErrorCodeMaximum>\\r\\n\\t\\t\\t<Over10totalTime>0</Over10totalTime>\\r\\n\\t\\t\\t<taskId>49f7b317-7645-4cc9-94fd-1****</taskId>\\r\\n\\t\\t\\t<Over30FailureRate>0</Over30FailureRate>\\r\\n\\t\\t\\t<Error6XXRate>0</Error6XXRate>\\r\\n\\t\\t\\t<Over500NumberRate>0</Over500NumberRate>\\r\\n\\t\\t\\t<Over3totalTime>0</Over3totalTime>\\r\\n\\t\\t\\t<Over400NumberRate>0</Over400NumberRate>\\r\\n\\t\\t\\t<Error5XXRate>0</Error5XXRate>\\r\\n\\t\\t\\t<Error5XXNumber>0</Error5XXNumber>\\r\\n\\t\\t\\t<Over90FailureRate>0</Over90FailureRate>\\r\\n\\t\\t\\t<Error4XXNumber>0</Error4XXNumber>\\r\\n\\t\\t\\t<Over50FailureRate>0</Over50FailureRate>\\r\\n\\t\\t\\t<ErrorCodeMinimum>0</ErrorCodeMinimum>\\r\\n\\t\\t\\t<Error6XXNumber>0</Error6XXNumber>\\r\\n\\t\\t</Data>\\r\\n\\t\\t<Data>\\r\\n\\t\\t\\t<Over5totalTime>0</Over5totalTime>\\r\\n\\t\\t\\t<Error4XXRate>0</Error4XXRate>\\r\\n\\t\\t\\t<UnavailableNumber>0</UnavailableNumber>\\r\\n\\t\\t\\t<Over2totalTime>0</Over2totalTime>\\r\\n\\t\\t\\t<timestamp>1551581100000</timestamp>\\r\\n\\t\\t\\t<Over100FailureRate>0</Over100FailureRate>\\r\\n\\t\\t\\t<Over10FailureRate>0</Over10FailureRate>\\r\\n\\t\\t\\t<Availability>100</Availability>\\r\\n\\t\\t\\t<Over80FailureRate>0</Over80FailureRate>\\r\\n\\t\\t\\t<userId>12345</userId>\\r\\n\\t\\t\\t<AvailableNumber>2</AvailableNumber>\\r\\n\\t\\t\\t<Unavailability>0</Unavailability>\\r\\n\\t\\t\\t<ErrorCodeMaximum>0</ErrorCodeMaximum>\\r\\n\\t\\t\\t<Over10totalTime>0</Over10totalTime>\\r\\n\\t\\t\\t<taskId>49f7b317-7645-4cc9-94fd-1****</taskId>\\r\\n\\t\\t\\t<Over30FailureRate>0</Over30FailureRate>\\r\\n\\t\\t\\t<Error6XXRate>0</Error6XXRate>\\r\\n\\t\\t\\t<Over500NumberRate>0</Over500NumberRate>\\r\\n\\t\\t\\t<Over3totalTime>0</Over3totalTime>\\r\\n\\t\\t\\t<Over400NumberRate>0</Over400NumberRate>\\r\\n\\t\\t\\t<Error5XXRate>0</Error5XXRate>\\r\\n\\t\\t\\t<Error5XXNumber>0</Error5XXNumber>\\r\\n\\t\\t\\t<Over90FailureRate>0</Over90FailureRate>\\r\\n\\t\\t\\t<Error4XXNumber>0</Error4XXNumber>\\r\\n\\t\\t\\t<Over50FailureRate>0</Over50FailureRate>\\r\\n\\t\\t\\t<ErrorCodeMinimum>0</ErrorCodeMinimum>\\r\\n\\t\\t\\t<Error6XXNumber>0</Error6XXNumber>\\r\\n\\t\\t</Data>\\r\\n\\t\\t<RequestId>DBDEAC51-EA3C-4853-8F25-6B48D38A28A9</RequestId>\\r\\n\\t\\t<Success>true</Success>\\r\\n\\t\\t<Code>200</Code>\\r\\n</DescribeSiteMonitorData>","errorExample":""}]',
      'title' => '查询任务的细粒度监控数据',
      'summary' => '调用DescribeSiteMonitorData接口查询任务的细粒度监控数据。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' 返回结果是一个JSON字符串，描述信息如下：

- Error4XXRate：4XX错误占比
- Error6XXRate：6xx错误占比
- Error5XXRate：5xx错误占比
- Error4XXNumber：4xx错误探针的数量
- Error5XXNumber：5xx错误探针的数量
- Error6XXNumber：6xx错误探针数量
- Over5totalTime：响应时间超过5000毫秒的占比
- Over3totalTime：响应时间超过3000毫秒的占比
- Over2totalTime：响应时间超过2000毫秒的占比
- Over10FailureRate：错误大于10%所占的比例
- Over100FailureRate：错误大于99%所占的比例
- Over30FailureRate：错误大于30%所占的比例
- Over50FailureRate：错误大于50%所占的比例
- Over80FailureRate：错误大于80%所占的比例
- Over90FailureRate：错误大于90%所占的比例
- Over400NumberRate：超过4XX错误所占的比例
- Over500NumberRate：超过5XX错误所占的比例
- AvailableNumber：可用探针数量
- UnavailableNumber：不可用探测点数量
- Availability：可用率
- Unavailability：不可用率
- ErrorCodeMaximum：最大错误码，例如：1分钟内5个探测点有4个是200， 1个是404， 那么最大错误码就是404
- ErrorCodeMinimum：最小错误码， 例如：1分钟内5个探测点有4个是200， 1个是404， 那么最小错误码就是200

> 建议您使用AvailableNumber、UnavailableNumber、Availability、Unavailability、ErrorCodeMaximum或ErrorCodeMinimum，其他计算方式较繁琐。',
      'extraInfo' => ' ',
    ),
    'DescribeSiteMonitorStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '站点监控任务ID。

关于如何获取站点监控任务ID，请参见[DescribeSiteMonitorList](~~115052~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'ef4cdc8b-9dc7-43e7-810e-f950e56c****',
          ),
        ),
        1 => 
        array (
          'name' => 'TimeRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '统计周期。


单位：分钟。默认值：1440（1天）。最大值：43200（30天）。',
            'type' => 'string',
            'required' => false,
            'example' => '1440',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间戳。

单位：毫秒。默认值为当前时间向前推1小时。',
            'type' => 'string',
            'required' => false,
            'example' => '1576142850527',
          ),
        ),
        3 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项名称。取值：

- Availability：可用率。
- ErrorRate：错误率。
- ResponseTime：响应时间。',
            'type' => 'string',
            'required' => true,
            'example' => 'Availability',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'Successful',
              ),
              'Data' => 
              array (
                'description' => '统计结果。',
                'type' => 'string',
                'example' => '100',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3AD2724D-E317-4BFB-B422-D6691D071BE1',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'The specified parameter is not valid.',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'You are not authorized to operate the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidClientTokenId',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful\\",\\n  \\"Data\\": \\"100\\",\\n  \\"RequestId\\": \\"3AD2724D-E317-4BFB-B422-D6691D071BE1\\",\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeSiteMonitorStatisticsResponse>\\n\\t<Message>successful</Message>\\n\\t<RequestId>3AD2724D-E317-4BFB-B422-D6691D071BE1</RequestId>\\n\\t<Data>100</Data>\\n\\t<Code>200</Code>\\n\\t<Success>true</Success>\\n</DescribeSiteMonitorStatisticsResponse>\\t","errorExample":""}]',
      'title' => '查询指定站点监控任务中指定监控项的平均统计数据',
      'summary' => '调用DescribeSiteMonitorStatistics接口查询指定站点监控任务中指定监控项的平均统计数据。',
      'description' => '本文将提供一个示例，查询站点监控任务`ef4cdc8b-9dc7-43e7-810e-f950e56c****`中监控项`Availability`（可用率）的平均统计数据。返回结果显示可用率为`100`。


',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSiteMonitorList' => 
    array (
      'summary' => '调用DescribeSiteMonitorList接口查询站点监控任务列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '站点监控任务ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1ecd34a-8157-44d9-b060-14950837****',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '站点监控任务探测类型。云监控支持的探测类型包括：HTTP 、PING 、TCP 、UDP 、DNS 、SMTP 、POP3 、FTP。',
            'type' => 'string',
            'required' => false,
            'example' => 'HTTP',
          ),
        ),
        2 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询站点监控任务的关键字。

> 支持根据任务名称或任务地址模糊搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'site',
          ),
        ),
        3 => 
        array (
          'name' => 'Page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示条数。默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'TaskState',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务状态。取值：

- 1：正常。

- 2：禁用。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A80DB41C-AF6C-50E1-ADB5-66DCBA3D266B',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'PageNumber' => 
              array (
                'description' => '分页页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'SiteMonitors' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SiteMonitor' => 
                  array (
                    'description' => '站点监控任务列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TaskType' => 
                        array (
                          'description' => '站点监控任务探测类型。云监控支持的探测类型包括：HTTP 、PING 、TCP 、UDP 、DNS 、SMTP 、POP3 、FTP。',
                          'type' => 'string',
                          'example' => 'TCP',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '站点监控任务更新时间。',
                          'type' => 'string',
                          'example' => '2022-03-08 17:14:31',
                        ),
                        'Interval' => 
                        array (
                          'description' => '探测频率。单位：分钟。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'TaskState' => 
                        array (
                          'description' => '任务状态。取值：

- 1：正常。

- 2：禁用。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '任务的创建时间。',
                          'type' => 'string',
                          'example' => '2021-11-01 11:05:18',
                        ),
                        'TaskName' => 
                        array (
                          'description' => '站点监控任务名称。',
                          'type' => 'string',
                          'example' => '新的探测任务',
                        ),
                        'Address' => 
                        array (
                          'description' => '任务的探测URL地址或IP地址。',
                          'type' => 'string',
                          'example' => 'https://aliyun.com',
                        ),
                        'TaskId' => 
                        array (
                          'description' => '站点监控任务ID。',
                          'type' => 'string',
                          'example' => 'f5783760-1b39-4b6b-80e8-453d962a****',
                        ),
                        'OptionsJson' => 
                        array (
                          'description' => '扩展选项。每一种探测类型有不同的扩展类型，详情请参见[CreateSiteMonitor](~~115048~~)。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'password' => 
                            array (
                              'description' => 'SMTP、POP3或FTP探测类型的密码。',
                              'type' => 'string',
                              'example' => '123****',
                            ),
                            'request_format' => 
                            array (
                              'description' => 'HTTP请求内容格式。取值：
- hex：十六进制格式。
- txt：文本格式。',
                              'type' => 'string',
                              'example' => 'hex',
                            ),
                            'response_content' => 
                            array (
                              'description' => '匹配响应内容。
- 十六进制格式：当请求的内容是字节串，且无法用可见字符表达时，可以将字节串转换为十六进制表示的可见字符串形式。具体转换规则为：一个字节转换成二字节的十六进制字符，例如：1字节（1B）转换成十六进制为`01`， 27字节（27B）转换成十六进制为`1B`。二进制数组（Java形式）为`{(byte)1, (byte)27}`，转换成十六进制为`011b`或`011B`。站点监控对十六进制不区分大小写。将字符串`011B`填入请求内容中，同时请求内容格式选择十六进制格式。

- 文本格式：普通文本指字符串，即由可见字符组成的字符串。',
                              'type' => 'string',
                              'example' => 'cf0f85',
                            ),
                            'failure_rate' => 
                            array (
                              'description' => '丢包率。

> 该参数仅适用于PING探测类型。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '0.5',
                            ),
                            'time_out' => 
                            array (
                              'description' => '超时时间。单位：毫秒。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '3000',
                            ),
                            'header' => 
                            array (
                              'description' => 'HTTP请求头。格式为`key1:value1`，通过回车键换行。',
                              'type' => 'string',
                              'example' => 'testKey:testValue',
                            ),
                            'cookie' => 
                            array (
                              'description' => '发送HTTP请求的Cookie文本。',
                              'type' => 'string',
                              'example' => 'lang=en',
                            ),
                            'port' => 
                            array (
                              'description' => 'TCP、UDP、SMTP或POP3探测类型的端口。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '80',
                            ),
                            'ping_num' => 
                            array (
                              'description' => 'PING探测的次数设置。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '20',
                            ),
                            'authentication' => 
                            array (
                              'description' => '是否开启安全验证。取值：
- 0：开启。
- 1：关闭。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'http_method' => 
                            array (
                              'description' => 'HTTP的请求方法。取值：
- get 
- post
- head',
                              'type' => 'string',
                              'example' => 'get',
                            ),
                            'match_rule' => 
                            array (
                              'description' => '是否包含报警规则。取值：
- 0：包含。
- 1：不包含。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '0',
                            ),
                            'dns_match_rule' => 
                            array (
                              'description' => 'DNS的匹配规则。取值：

- IN_DNS：期望解析的别名或IP地址均在DNS应答中。
- DNS_IN：所有的DNS应答都出现在期望解析的别名或IP地址中。
- EQUAL：DNS应答和期望解析的别名或IP地址完全相同。
- ANY：DNS应答和期望解析的别名或IP地址有交集。',
                              'type' => 'string',
                              'example' => 'IN_DNS',
                            ),
                            'request_content' => 
                            array (
                              'description' => 'HTTP探测请求内容。',
                              'type' => 'string',
                              'example' => 'cf0f85',
                            ),
                            'username' => 
                            array (
                              'description' => 'FTP、SMTP或POP3的用户名。',
                              'type' => 'string',
                              'example' => 'testUser',
                            ),
                            'response_format' => 
                            array (
                              'description' => 'HTTP响应内容格式。取值：
- hex：十六进制格式。
- txt：文本格式。',
                              'type' => 'string',
                              'example' => 'hex',
                            ),
                            'dns_type' => 
                            array (
                              'description' => 'DNS解析类型。仅适用于DNS探测类型。取值：
- A（默认值）：指定主机名或域名对应的IP地址。
- CNAME：将多个域名映射到另外一个域名。
- NS：指定域名由某个DNS服务器解析。
- MX：将域名指向一个邮件服务器地址。
- TXT：主机名或域名的说明。文本长度限制512字节，通常用做SPF（Sender Policy Framework）记录，即反垃圾邮件。
- AAAA：将域名解析到IPv6地址的DNS记录。',
                              'type' => 'string',
                              'example' => 'A',
                            ),
                            'dns_server' => 
                            array (
                              'description' => '指定DNS解析服务器的域名或IP地址。
',
                              'type' => 'string',
                              'example' => '192.168.XX.XX',
                            ),
                            'enable_operator_dns' => 
                            array (
                              'description' => '是否使用运营商的DNS。
- true（默认值）：使用运营商的DNS。
- false：不使用运营商的DNS。使用默认DNS或指定服务器的DNS。',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                            'attempts' => 
                            array (
                              'description' => 'DNS失败后重试次数。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '3',
                            ),
                            'protocol' => 
                            array (
                              'description' => 'DNS探测协议类型。取值：
- udp（默认值）
- tcp
- tcp-tls',
                              'type' => 'string',
                              'example' => 'udp',
                            ),
                            'proxy_protocol' => 
                            array (
                              'description' => '是否开启ProxyProtocol。取值：
- false（默认值）：不开启ProxyProtocol。
- true：开启ProxyProtocol。',
                              'type' => 'boolean',
                              'example' => 'false',
                            ),
                            'acceptable_response_code' => 
                            array (
                              'description' => '可接受的状态码。 

> 建议您使用断言配置。',
                              'type' => 'string',
                              'example' => '400',
                            ),
                            'isBase64Encode' => 
                            array (
                              'description' => '是否对密码进行base64解码存储。取值：
- true：对密码进行base64解码存储。
- false（默认值）：不对密码进行base64解码存储。',
                              'type' => 'string',
                              'example' => 'false',
                            ),
                            'cert_verify' => 
                            array (
                              'description' => '是否验证证书。取值：
- false（默认值）：忽略证书验证。
- true：证书验证。',
                              'type' => 'boolean',
                              'example' => 'false',
                            ),
                            'unfollow_redirect' => 
                            array (
                              'description' => '如果出现301或302状态码，是否跟随再次做重定向探测。取值：
- true：不跟随跳转。
- false（默认值）：跟随跳转。',
                              'type' => 'boolean',
                              'example' => 'false',
                            ),
                            'diagnosis_mtr' => 
                            array (
                              'description' => '是否开启任务失败后的自动MTR网络诊断。取值：
- false（默认值）：不开启自动MTR网络诊断。
- true  开启自动MTR网络诊断。',
                              'type' => 'boolean',
                              'example' => 'false',
                            ),
                            'diagnosis_ping' => 
                            array (
                              'description' => '是否开启探测任务失败后自动Ping网络延时探测。取值：
- false（默认值）：不开启。
- true：开启。',
                              'type' => 'boolean',
                              'example' => 'false',
                            ),
                            'retry_delay' => 
                            array (
                              'description' => '探测失败后重试次数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'assertions' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'assertions' => 
                                array (
                                  'description' => '断言配置组。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '断言配置组。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'property' => 
                                      array (
                                        'description' => '断言内容解析路径。

- 如果断言类型为`body_json`，则路径为`json path`。

- 如果断言类型是`body_xml`，则路径为`xml path`。
',
                                        'type' => 'string',
                                        'example' => 'json path',
                                      ),
                                      'type' => 
                                      array (
                                        'description' => '断言类型。取值：
- response_time：判定响应时间是否符合预期。
- status_code：判断HTTP响应状态码是否符合预期。
- header：判定响应Header中的字段是否符合预期。
- body_text：通过文本字符匹配判断返回Body中的内容是否符合预期。
- body_json：通过JSON解析（JSON Path）判断返回Body中的内容是否符合预期。
- body_xml：通过XML解析（XPath）判断返回Body中的内容是否符合预期。',
                                        'type' => 'string',
                                        'example' => 'response_time',
                                      ),
                                      'operator' => 
                                      array (
                                        'description' => '断言比较操作符。取值：
- contains：包含。
- doesNotContain：不包含。
- matches：正则匹配。
- doesNotMatch：正则不匹配。
- is：数值等于或字符匹配相等。
- isNot：不等于。
- lessThan：小于。
- moreThan：大于。',
                                        'type' => 'string',
                                        'example' => 'lessThan',
                                      ),
                                      'target' => 
                                      array (
                                        'description' => '断言匹配比较的目标数值或字符。',
                                        'type' => 'string',
                                        'example' => '1000',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'AgentGroup' => 
                        array (
                          'description' => '探针类型。取值：

- PC：PC端。
- MOBILE：移动端。',
                          'type' => 'string',
                          'example' => 'PC',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'You are not authorized to operate the specified resource.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'ExceedingQuota',
            'errorMessage' => 'Exceeding quota limits.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'ThrottlingException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A80DB41C-AF6C-50E1-ADB5-66DCBA3D266B\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"SiteMonitors\\": {\\n    \\"SiteMonitor\\": [\\n      {\\n        \\"TaskType\\": \\"TCP\\",\\n        \\"UpdateTime\\": \\"2022-03-08 17:14:31\\",\\n        \\"Interval\\": \\"1\\",\\n        \\"TaskState\\": \\"1\\",\\n        \\"CreateTime\\": \\"2021-11-01 11:05:18\\",\\n        \\"TaskName\\": \\"新的探测任务\\",\\n        \\"Address\\": \\"https://aliyun.com\\",\\n        \\"TaskId\\": \\"f5783760-1b39-4b6b-80e8-453d962a****\\",\\n        \\"OptionsJson\\": {\\n          \\"password\\": \\"123****\\",\\n          \\"request_format\\": \\"hex\\",\\n          \\"response_content\\": \\"cf0f85\\",\\n          \\"failure_rate\\": 0.5,\\n          \\"time_out\\": 3000,\\n          \\"header\\": \\"testKey:testValue\\",\\n          \\"cookie\\": \\"lang=en\\",\\n          \\"port\\": 80,\\n          \\"ping_num\\": 20,\\n          \\"authentication\\": 1,\\n          \\"http_method\\": \\"get\\",\\n          \\"match_rule\\": 0,\\n          \\"dns_match_rule\\": \\"IN_DNS\\",\\n          \\"request_content\\": \\"cf0f85\\",\\n          \\"username\\": \\"testUser\\",\\n          \\"response_format\\": \\"hex\\",\\n          \\"dns_type\\": \\"A\\",\\n          \\"dns_server\\": \\"192.168.XX.XX\\",\\n          \\"enable_operator_dns\\": true,\\n          \\"attempts\\": 3,\\n          \\"protocol\\": \\"udp\\",\\n          \\"proxy_protocol\\": false,\\n          \\"acceptable_response_code\\": \\"400\\",\\n          \\"isBase64Encode\\": \\"false\\",\\n          \\"cert_verify\\": false,\\n          \\"unfollow_redirect\\": false,\\n          \\"diagnosis_mtr\\": false,\\n          \\"diagnosis_ping\\": false,\\n          \\"retry_delay\\": 1,\\n          \\"assertions\\": {\\n            \\"assertions\\": [\\n              {\\n                \\"property\\": \\"json path\\",\\n                \\"type\\": \\"response_time\\",\\n                \\"operator\\": \\"lessThan\\",\\n                \\"target\\": \\"1000\\"\\n              }\\n            ]\\n          }\\n        },\\n        \\"AgentGroup\\": \\"PC\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSiteMonitorListResponse>\\r\\n\\t<TotalCount>1</TotalCount>\\r\\n\\t<RequestId>A80DB41C-AF6C-50E1-ADB5-66DCBA3D266B</RequestId>\\r\\n\\t<Message>successful</Message>\\r\\n\\t<PageSize>10</PageSize>\\r\\n\\t<PageNumber>1</PageNumber>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n\\t<SiteMonitors>\\r\\n\\t\\t<SiteMonitor>\\r\\n\\t\\t\\t<TaskId>f5783760-1b39-4b6b-80e8-453d962a****</TaskId>\\r\\n\\t\\t\\t<Address>https://aliyun.com</Address>\\r\\n\\t\\t\\t<EndTime></EndTime>\\r\\n\\t\\t\\t<TaskName>test123</TaskName>\\r\\n\\t\\t\\t<OptionsJson>\\r\\n\\t\\t\\t\\t<response_content></response_content>\\r\\n\\t\\t\\t\\t<request_format>hex</request_format>\\r\\n\\t\\t\\t\\t<response_format>hex</response_format>\\r\\n\\t\\t\\t\\t<request_content>cf0f85</request_content>\\r\\n\\t\\t\\t\\t<port>80</port>\\r\\n\\t\\t\\t</OptionsJson>\\r\\n\\t\\t\\t<TaskType>TCP</TaskType>\\r\\n\\t\\t\\t<CreateTime>2021-11-01 11:05:18</CreateTime>\\r\\n\\t\\t\\t<UpdateTime>2022-03-08 17:14:31</UpdateTime>\\r\\n\\t\\t\\t<TaskState>1</TaskState>\\r\\n\\t\\t\\t<Interval>1</Interval>\\r\\n\\t\\t</SiteMonitor>\\r\\n\\t</SiteMonitors>\\r\\n</DescribeSiteMonitorListResponse>\\t","errorExample":""}]',
      'title' => '查询站点监控任务列表',
      'description' => '本文将提供一个示例，查询当前账号的站点监控任务列表。返回结果显示，当前账号存在一条站点监控记录`HanZhou_ECS2`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSiteMonitorLog' => 
    array (
      'summary' => '调用DescribeSiteMonitorLog接口查询一次性探测任务的探测日志。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测任务ID。多个探测任务ID之间用半角逗号（,）分隔。',
            'type' => 'string',
            'required' => true,
            'example' => 'afa5c3ce-f944-4363-9edb-ce919a29****',
          ),
        ),
        1 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商标识码。',
            'type' => 'string',
            'required' => false,
            'example' => '465',
          ),
        ),
        2 => 
        array (
          'name' => 'City',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '城市标识码。',
            'type' => 'string',
            'required' => false,
            'example' => '546',
          ),
        ),
        3 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项。

目前仅支持监控项`ProbeLog`。',
            'type' => 'string',
            'required' => false,
            'example' => 'ProbeLog',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。支持的格式：

- UNIX时间戳：从1970年01月01日开始所经过的毫秒数。
- UTC格式：YYYY-MM-DDThh:mm:ssZ。

> - 开始时间和结束时间遵循左开右闭模式，StartTime不能等于或大于EndTime。                                                                                                                   
    - 建议您使用UNIX时间戳，避免时区问题。',
            'type' => 'string',
            'required' => false,
            'example' => '1638422474389',
          ),
        ),
        5 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间。支持的格式：

- UNIX时间戳：从1970年01月01日开始所经过的毫秒数。
- UTC格式：YYYY-MM-DDThh:mm:ssZ。

> 建议您使用UNIX时间戳，避免时区问题。',
            'type' => 'string',
            'required' => false,
            'example' => '1638422475687',
          ),
        ),
        6 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当请求的返回结果被截断时，您可以使用`NextToken`再次发起请求，获取从当前截断位置之后的内容。',
            'type' => 'string',
            'required' => false,
            'example' => 'IWBjqMYSy0is7zSMGu16****',
          ),
        ),
        7 => 
        array (
          'name' => 'Length',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的记录条数，用于分页查询。取值范围：1~1440。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1000',
          ),
        ),
        8 => 
        array (
          'name' => 'Filter',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤探测值。

支持简单的表达式，例如：`TotalTime>100`，表示过滤出总响应时间超过100毫秒的探测数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'TotalTime>100',
          ),
        ),
        9 => 
        array (
          'name' => 'BrowserInfo',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '该参数已废弃，无需关注。',
            'type' => 'string',
            'required' => false,
            'example' => '无',
          ),
        ),
        10 => 
        array (
          'name' => 'Browser',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '浏览器类型。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              ' Chrome' => ' Chrome',
              'Safari' => 'Safari',
              'Edge' => 'Edge',
              'Firefox' => 'Firefox',
            ),
            'example' => 'Chrome',
          ),
        ),
        11 => 
        array (
          'name' => 'Device',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '设备类型（模拟屏幕大小类型）。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'tablet' => 'tablet',
              'mobile' => 'mobile',
              'laptop' => 'laptop',
            ),
            'example' => 'laptop',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '查询下一页使用的Token。',
                'type' => 'string',
                'example' => 'IWBjqMYSy0is7zSMGu16****',
              ),
              'Data' => 
              array (
                'description' => '一次性探测任务的探测日志。',
                'type' => 'string',
                'example' => '[{\\"redirectCount\\":0.0,\\"SSLConnectTime\\":0.0,\\"pingDetail\\":\\"\\",\\"HTTPConnectTime\\":0.0,\\"isp\\":\\"465\\",\\"errorCode\\":611,\\"ispCN\\":\\"阿里巴巴\\",\\"resolution\\":\\"\\",\\"areaEN\\":\\"HuaBei\\",\\"taskEndTimestamp\\":1638422475687,\\"targetIspEN\\":\\"\\",\\"TotalTime\\":1.0,\\"taskStartTimestamp\\":1638422474389,\\"countryCN\\":\\"中国\\",\\"provinceEN\\":\\"Beijing\\",\\"countryEN\\":\\"China\\",\\"targetCityEN\\":\\"\\",\\"curlConnectTime\\":0.0,\\"ips\\":\\"\\",\\"route\\":\\"\\",\\"tcpConnectTime\\":0.0,\\"cityEN\\":\\"Beijing\\",\\"HTTPDownloadSpeed\\":0.0,\\"HTTPDownloadTime\\":0.0,\\"HTTPResponseCode\\":0.0,\\"areaCN\\":\\"华北\\",\\"city\\":\\"546\\",\\"expection\\":\\"\\",\\"suorceIp\\":\\"192.168.XX.XX \\",\\"ispEN\\":\\"Alibaba\\",\\"HTTPDNSTime\\":1.0,\\"targetIsp\\":\\"\\",\\"curlStarttransferTime\\":0.0,\\"provinceCN\\":\\"北京市\\",\\"timestamp\\":1638422474000,\\"redirectTime\\":0.0,\\"targetCity\\":\\"\\", \\"expect\\":\\"\\",\\"HTTPDownloadSize\\":0.0,\\"localDns\\":\\"192.168.XX.XX\\",\\"cityCN\\":\\"北京市\\",\\"taskId\\":\\"afa5c3ce-f944-4363-9edb-ce919a29****\\"}]',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '67F646FA-ED8A-58C2-B461-451DB52C8B14',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'You are not authorized to operate the specified resource.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'ExceedingQuota',
            'errorMessage' => 'Exceeding quota limits.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'ThrottlingException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"NextToken\\": \\"IWBjqMYSy0is7zSMGu16****\\",\\n  \\"Data\\": \\"[{\\\\\\\\\\\\\\"redirectCount\\\\\\\\\\\\\\":0.0,\\\\\\\\\\\\\\"SSLConnectTime\\\\\\\\\\\\\\":0.0,\\\\\\\\\\\\\\"pingDetail\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"HTTPConnectTime\\\\\\\\\\\\\\":0.0,\\\\\\\\\\\\\\"isp\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"465\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"errorCode\\\\\\\\\\\\\\":611,\\\\\\\\\\\\\\"ispCN\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"阿里巴巴\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"resolution\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"areaEN\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"HuaBei\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"taskEndTimestamp\\\\\\\\\\\\\\":1638422475687,\\\\\\\\\\\\\\"targetIspEN\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"TotalTime\\\\\\\\\\\\\\":1.0,\\\\\\\\\\\\\\"taskStartTimestamp\\\\\\\\\\\\\\":1638422474389,\\\\\\\\\\\\\\"countryCN\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"中国\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"provinceEN\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Beijing\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"countryEN\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"China\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"targetCityEN\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"curlConnectTime\\\\\\\\\\\\\\":0.0,\\\\\\\\\\\\\\"ips\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"route\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"tcpConnectTime\\\\\\\\\\\\\\":0.0,\\\\\\\\\\\\\\"cityEN\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Beijing\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"HTTPDownloadSpeed\\\\\\\\\\\\\\":0.0,\\\\\\\\\\\\\\"HTTPDownloadTime\\\\\\\\\\\\\\":0.0,\\\\\\\\\\\\\\"HTTPResponseCode\\\\\\\\\\\\\\":0.0,\\\\\\\\\\\\\\"areaCN\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"华北\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"city\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"546\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"expection\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"suorceIp\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"192.168.XX.XX \\\\\\\\\\\\\\",\\\\\\\\\\\\\\"ispEN\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Alibaba\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"HTTPDNSTime\\\\\\\\\\\\\\":1.0,\\\\\\\\\\\\\\"targetIsp\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"curlStarttransferTime\\\\\\\\\\\\\\":0.0,\\\\\\\\\\\\\\"provinceCN\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"北京市\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\":1638422474000,\\\\\\\\\\\\\\"redirectTime\\\\\\\\\\\\\\":0.0,\\\\\\\\\\\\\\"targetCity\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"expect\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"HTTPDownloadSize\\\\\\\\\\\\\\":0.0,\\\\\\\\\\\\\\"localDns\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"192.168.XX.XX\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"cityCN\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"北京市\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"taskId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"afa5c3ce-f944-4363-9edb-ce919a29****\\\\\\\\\\\\\\"}]\\",\\n  \\"RequestId\\": \\"67F646FA-ED8A-58C2-B461-451DB52C8B14\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\"\\n}","type":"json"}]',
      'title' => '查询一次性探测任务的探测日志',
      'description' => '仅开通网络分析与监控的阿里云账号，才能创建一次性探测任务。

本文将提供一个示例，查询一次性探测任务`afa5c3ce-f944-4363-9edb-ce919a29****`的探测日志。',
    ),
    'DescribeSiteInstantMonitorLog' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskIds',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'Length',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
          ),
        ),
        6 => 
        array (
          'name' => 'Filter',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'type' => 'string',
              ),
              'Data' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'You are not authorized to operate the specified resource.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'ExceedingQuota',
            'errorMessage' => 'Exceeding quota limits.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'ThrottlingException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
    ),
    'DescribeMetricLast' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的数据命名空间。

关于云产品的数据命名空间，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        1 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的监控项名称。

关于监控项名称，请参见[云产品监控项](~~163515~~)。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'CPUUtilization',
          ),
        ),
        2 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控数据的统计周期。

取值：15、60、900和3600。

单位：秒。

> - 如果不设置统计周期，则按照注册监控项时申请的上报周期来查询监控数据。
    - 每个云产品的监控项（`MetricName`）的统计周期不同。更多信息，请参见[云产品监控项](~~163515~~)中目标云产品**指标列表**页面中的`Min Periods`列。',
            'type' => 'string',
            'required' => false,
            'example' => '60',
          ),
        ),
        3 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询监控项的开始时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-01-31 10:00:00',
          ),
        ),
        4 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询监控项的结束时间。

- 对于秒级数据，查询数据的起始时间是EndTime往前倒推20分钟后与startTime对比的最大值。

- 对于分钟级数据，查询数据的起始时间是EndTime往前倒推2小时后与startTime对比的最大值。

- 对于小时级数据，查询数据的起始时间是EndTime往前倒推2天后与startTime对比的最大值。

 ',
            'type' => 'string',
            'required' => false,
            'example' => '2019-01-31 10:10:00',
          ),
        ),
        5 => 
        array (
          'name' => 'Dimensions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定资源的监控维度。

格式：`key:value`键值对形式的集合，例如：`{"userId":"120886317861****"}`和`{"instanceId":"i-2ze2d6j5uhg20x47****"}`。

> 单次请求最多支持批量查询50个实例。




',
            'type' => 'string',
            'required' => false,
            'example' => '[{"instanceId":"i-2ze2d6j5uhg20x47****"}]',
          ),
        ),
        6 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页游标的标识。

- 如果匹配查询条件的返回结果超过了分页大小，则会返回这个分页游标。
- 如果需要获取下一页数据，将返回的游标值作为请求参数即可，直到无游标值返回，表示已经获取了全部数据。',
            'type' => 'string',
            'required' => false,
            'example' => '15761432850009dd70bb64cff1f0fff6c0b08ffff073be5fb1e785e2b020f7fed9b5e137bd810a6d6cff5ae****',
          ),
        ),
        7 => 
        array (
          'name' => 'Length',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回监控数据的每页大小，用于分页查询。

默认值：1000，即每页1000条监控数据。

> 单次请求Length的最大值为1440。',
            'type' => 'string',
            'required' => false,
            'example' => '1000',
          ),
        ),
        8 => 
        array (
          'name' => 'Express',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对现有查询结果进行实时计算的表达式。',
            'type' => 'string',
            'required' => false,
            'example' => '{"groupby":["userId","instanceId"]}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '分页游标标识。',
                'type' => 'string',
                'example' => 'xxxxxx',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '021472A6-25E3-4094-8D00-BA4B6A5486C3',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Datapoints' => 
              array (
                'description' => '监控数据列表。',
                'type' => 'string',
                'example' => '[{"timestamp":1548777660000,"userId":"123456789876****","instanceId":"i-abcdefgh12****","Minimum":93.1,"Average":99.52,"Maximum":100}]',
              ),
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'Period' => 
              array (
                'description' => '时间间隔。

单位：秒。',
                'type' => 'string',
                'example' => '60',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"xxxxxx\\",\\n  \\"RequestId\\": \\"021472A6-25E3-4094-8D00-BA4B6A5486C3\\",\\n  \\"Success\\": true,\\n  \\"Datapoints\\": \\"[{\\\\\\"timestamp\\\\\\":1548777660000,\\\\\\"userId\\\\\\":\\\\\\"123456789876****\\\\\\",\\\\\\"instanceId\\\\\\":\\\\\\"i-abcdefgh12****\\\\\\",\\\\\\"Minimum\\\\\\":93.1,\\\\\\"Average\\\\\\":99.52,\\\\\\"Maximum\\\\\\":100}]\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"Period\\": \\"60\\"\\n}","errorExample":""},{"type":"xml","example":"<QueryMetricListResponse>\\r\\n\\t<Period>60</Period>\\r\\n\\t<Datapoints>\\r\\n\\t\\t<timestamp>1548777660000</timestamp>\\r\\n\\t\\t<Maximum>100</Maximum>\\r\\n\\t\\t<userId>123456789876****</userId>\\r\\n\\t\\t<Minimum>93.1</Minimum>\\r\\n\\t\\t<instanceId>i-abcdefgh12****</instanceId>\\r\\n\\t\\t<Average>99.52</Average>\\r\\n\\t</Datapoints>\\r\\n\\t<RequestId>6A5F022D-AC7C-460E-94AE-B9E75083D027</RequestId>\\r\\n\\t<Success>true</Success>\\r\\n\\t<Code>200</Code>\\r\\n</QueryMetricListResponse>","errorExample":""}]',
      'title' => '查询指定监控项的最新监控数据',
      'summary' => '调用DescribeMetricLast接口查询指定监控项的最新监控数据。',
      'description' => '### 使用限制
单个API的调用次数限制为50次/秒，即一个阿里云账号及该账号下的RAM用户共用50次/秒。
> 当您调用API时，如果返回信息`Throttling.User`或`Request was denied due to user flow control`，则说明该API被限流。处理方法，请参见[如何处理查询API限流问题](~~2615031~~)。
### 注意事项
各云产品监控数据的存储时长与`Period`（统计周期）有关，`Period`越大，查询的监控数据越稀疏，监控数据的存储时间越长，具体关系如下：
- `Period`小于60秒，存储时长为7天。
- `Period`等于60秒，存储时长为31天。
- `Period`等于300秒，存储时长为91天。
### 使用说明
本文将提供一个示例，查询云产品`acs_ecs_dashboard`监控项`CPUUtilization`的最新监控数据。返回结果显示，当前账号`123456789876****`下实例`i-abcdefgh12****`间隔60秒的最大值为100、最小值为93.1、平均值为99.52。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。 ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMetricList' => 
    array (
      'summary' => '调用DescribeMetricList接口查询指定云产品的指定监控项的监控数据。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的数据命名空间。

关于云产品的数据命名空间，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        1 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的监控项名称。

关于监控项名称，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cpu_idle',
          ),
        ),
        2 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控数据的统计周期。

取值：15、60、900和3600。

单位：秒。

> - 如果不设置统计周期，则按照注册监控项时申请的上报周期来查询监控数据。
- 每个云产品的监控项（`MetricName`）的统计周期不同。更多信息，请参见[云产品监控项](~~163515~~)。
',
            'type' => 'string',
            'required' => false,
            'example' => '60',
          ),
        ),
        3 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。支持的格式：

- Unix时间戳：从1970年1月1日开始所经过的毫秒数。
- Format格式：YYYY-MM-DDThh:mm:ssZ。 

> - 开始和结束时间执行的是左开右闭的模式，StartTime不能等于或大于EndTime。
- StartTime和EndTime之间的间隔小于等于31天。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-01-30 00:00:00',
          ),
        ),
        4 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间。支持的格式：

- Unix时间戳：从1970年1月1日开始所经过的毫秒数。
- Format格式：YYYY-MM-DDThh:mm:ssZ。 

> StartTime和EndTime之间的间隔小于等于31天。
 ',
            'type' => 'string',
            'required' => false,
            'example' => '2019-01-30 00:10:00',
          ),
        ),
        5 => 
        array (
          'name' => 'Dimensions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定资源的监控维度。

格式：`key:value`键值对形式的集合，例如：`{"userId":"120886317861****"}`和`{"instanceId":"i-2ze2d6j5uhg20x47****"}`。

> 单次请求最多支持批量查询50个实例。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"instanceId":"i-2ze2d6j5uhg20x47****"}]',
          ),
        ),
        6 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页游标标识。


>如果不设置该参数，则表示获取第一页的数据。当该参数有返回值时，说明还有下一页，您可以将返回的NextToken作为参数再次请求获得下一页的数据，直到返回为Null为止，表示获取到了所有的数据。',
            'type' => 'string',
            'required' => false,
            'example' => '15761485350009dd70bb64cff1f0fff750b08ffff073be5fb1e785e2b020f1a949d5ea14aea7fed82f01dd8****',
          ),
        ),
        7 => 
        array (
          'name' => 'Length',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的记录条数，用于分页查询。

> 单次请求Length的最大值为1440。',
            'type' => 'string',
            'required' => false,
            'example' => '1000',
          ),
        ),
        8 => 
        array (
          'name' => 'Express',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询出的现有结果进行实时计算的表达式。

> 目前仅支持groupby，类似数据库的groupby语句。',
            'type' => 'string',
            'required' => false,
            'example' => '{"groupby":["userId","instanceId"]}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '分页游标标识。',
                'type' => 'string',
                'example' => '15761441850009dd70bb64cff1f0fff6d0b08ffff073be5fb1e785e2b020f7fed9b5e137bd810a6d6cff5ae****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3121AE7D-4AFF-4C25-8F1D-C8226EBB1F42',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Datapoints' => 
              array (
                'description' => '监控数据列表。',
                'type' => 'string',
                'example' => '[{"timestamp":1548777660000,"userId":"120886317861****","instanceId":"i-abc","Minimum":9.92,"Average":9.92,"Maximum":9.92}]',
              ),
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'Period' => 
              array (
                'description' => '时间间隔。单位：秒。取值：60、300、900。',
                'type' => 'string',
                'example' => '60',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"15761441850009dd70bb64cff1f0fff6d0b08ffff073be5fb1e785e2b020f7fed9b5e137bd810a6d6cff5ae****\\",\\n  \\"RequestId\\": \\"3121AE7D-4AFF-4C25-8F1D-C8226EBB1F42\\",\\n  \\"Success\\": true,\\n  \\"Datapoints\\": \\"[{\\\\\\"timestamp\\\\\\":1548777660000,\\\\\\"userId\\\\\\":\\\\\\"120886317861****\\\\\\",\\\\\\"instanceId\\\\\\":\\\\\\"i-abc\\\\\\",\\\\\\"Minimum\\\\\\":9.92,\\\\\\"Average\\\\\\":9.92,\\\\\\"Maximum\\\\\\":9.92}]\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"Period\\": \\"60\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeMetricListResponse>\\r\\n\\t<Period>60</Period>\\r\\n\\t<Datapoints>\\r\\n\\t\\t<timestamp>1490152860000</timestamp>\\r\\n\\t\\t<Maximum>100</Maximum>\\r\\n\\t\\t<userId>120886317861****</userId>\\r\\n\\t\\t<Minimum>93.1</Minimum>\\r\\n\\t\\t<instanceId>i-abcdefgh12****</instanceId>\\r\\n\\t\\t<Average>99.52</Average>\\r\\n\\t</Datapoints>\\r\\n\\t<RequestId>6A5F022D-AC7C-460E-94AE-B9E75083D027</RequestId>\\r\\n\\t<Success>true</Success>\\r\\n\\t<Code>200</Code>\\r\\n</DescribeMetricListResponse>","errorExample":""}]',
      'title' => '查询指定云产品的指定监控项的监控数据',
      'description' => '### 使用限制
单个API的调用次数限制为50次/秒。一个阿里云账号及该账号下的RAM用户共用50次/秒。
> 当您调用API时，如果返回信息`Throttling.User`或`Request was denied due to user flow control`，则说明该API被限流。处理方法，请参见[如何处理查询API限流问题](~~2615031~~)。
### 注意事项
各云产品监控数据的存储时长与`Period`（统计周期）有关，`Period`越大，查询的监控数据越稀疏，监控数据的存储时间越长，具体关系如下：
- `Period`小于60秒，存储时长为7天。
- `Period`等于60秒，存储时长为31天。
- `Period`等于300秒，存储时长为91天。
### 使用说明
本文将提供一个示例，查询云产品`acs_ecs_dashboard`的监控项`cpu_idle`的监控数据。返回结果显示，当前账号`120886317861****`下实例`i-abcdefgh12****`间隔60秒的最大值为100、最小值为93.1、平均值为99.52。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMetricData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的数据命名空间。

关于云产品的数据命名空间，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        1 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的监控项名称。

关于云产品的监控项名称，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cpu_idle',
          ),
        ),
        2 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项的统计周期。

取值：15、60、900和3600。

单位：秒。

> - 如果不设置统计周期，则按照注册监控项时申请的上报周期来查询监控数据。
- 监控项（`MetricName`）的统计周期，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '60',
          ),
        ),
        3 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询监控数据的开始时间。

- 当您未设置`StartTime`和`EndTime`时，查询当前时间最近一个统计周期`Period`的监控数据。

- 当您同时设置`StartTime`和`EndTime`时，查询指定时间段内距离`EndTime`最近一个统计周期`Period`的监控数据。具体如下：

   - 当`Period`设置为15秒时，指定时间段必须小于或等于20分钟。例如：StartTime为2021-05-08 08:10:00，EndTime为2021-05-08 08:30:00，统计距离2021-05-08 08:30:00最近一个15秒的监控数据。

   - 当`Period`设置为60秒或900秒时，指定时间段必须小于或等于2小时。例如：Period为60秒，StartTime为2021-05-08 08:00:00，EndTime为2021-05-08 10:00:00，统计距离2021-05-08 10:00:00最近一个60秒的监控数据。

   - 当`Period`设置为3600秒时，指定时间段必须小于或等于2天。例如：StartTime为2021-05-08 08:00:00，EndTime为2021-05-10 08:00:00，统计距离2021-05-10 08:00:00最近一个3600秒的监控数据。

开始时间支持的格式：

- Unix时间戳：从1970年1月1日开始所经过的毫秒数。

- Format格式：YYYY-MM-DDThh:mm:ssZ。

> - `StartTime`如果设置过早，则无效。
- 建议您使用Unix时间戳，避免时区的问题。',
            'type' => 'string',
            'required' => false,
            'example' => '1618368900000',
          ),
        ),
        4 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询监控数据的结束时间。

- 当您未设置`StartTime`和`EndTime`时，查询当前时间最近一个统计周期`Period`的监控数据。

- 当您同时设置`StartTime`和`EndTime`时，查询指定时间段内距离`EndTime`最近一个统计周期`Period`的监控数据。具体如下：

   - 当`Period`设置为15秒时，指定时间段必须小于或等于20分钟。例如：StartTime为2021-05-08 08:10:00，EndTime为2021-05-08 08:30:00，统计距离2021-05-08 08:30:00最近一个15秒的监控数据。

   - 当`Period`设置为60秒或900秒时，指定时间段必须小于或等于2小时。例如：Period为60秒，StartTime为2021-05-08 08:00:00，EndTime为2021-05-08 10:00:00，统计距离2021-05-08 10:00:00最近一个60秒的监控数据。

   - 当`Period`设置为3600秒时，指定时间段必须小于或等于2天。例如：StartTime为2021-05-08 08:00:00，EndTime为2021-05-10 08:00:00，统计距离2021-05-10 08:00:00最近一个3600秒的监控数据。



结束时间支持的格式：

- Unix时间戳：从1970年1月1日开始所经过的毫秒数。

- Format格式：YYYY-MM-DDThh:mm:ssZ。

> 建议您使用Unix时间戳，避免时区的问题。

 ',
            'type' => 'string',
            'required' => false,
            'example' => '1618368960000',
          ),
        ),
        5 => 
        array (
          'name' => 'Dimensions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '维度Map，用于查询指定资源的监控数据。

格式：key-value键值对形式的集合，常用的key-value集合为`instanceId:i-2ze2d6j5uhg20x47****`。

> 单次请求最多支持批量查询50个实例。
',
            'type' => 'string',
            'required' => false,
            'example' => '[{"instanceId": "i-abcdefgh12****"}]',
          ),
        ),
        6 => 
        array (
          'name' => 'Express',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对查询出的现有结果进行实时计算的表达式。

> 目前仅支持`groupby`（类似数据库`groupby`语句）。',
            'type' => 'string',
            'required' => false,
            'example' => '{"groupby":["userId","instanceId"]}',
          ),
        ),
        7 => 
        array (
          'name' => 'Length',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的记录条数，用于分页查询。

默认值：1000。

> 单次请求Length的最大值为1440。',
            'type' => 'string',
            'required' => false,
            'example' => '1000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6A5F022D-AC7C-460E-94AE-B9E75083D027',
              ),
              'Datapoints' => 
              array (
                'description' => '监控数据列表。包括如下信息：

- `timestamp`：发生报警的时间戳。

- `userId`：发生报警的用户ID。

- `instanceId`：发生报警的实例ID。

- `Minimum`、`Average`、`Maximum`：报警规则。',
                'type' => 'string',
                'example' => '[{\\"timestamp\\":1618368900000,\\"Average\\":95.8291666666667,\\"Minimum\\":65.48,\\"Maximum\\":100.0},{\\"timestamp\\":1618368960000,\\"Average\\":95.8683333333333,\\"Minimum\\":67.84,\\"Maximum\\":100.0}]',
              ),
              'Period' => 
              array (
                'description' => '监控数据的统计周期。

取值：15、60、900和3600。

单位：秒。',
                'type' => 'string',
                'example' => '60',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"6A5F022D-AC7C-460E-94AE-B9E75083D027\\",\\n  \\"Datapoints\\": \\"[{\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\":1618368900000,\\\\\\\\\\\\\\"Average\\\\\\\\\\\\\\":95.8291666666667,\\\\\\\\\\\\\\"Minimum\\\\\\\\\\\\\\":65.48,\\\\\\\\\\\\\\"Maximum\\\\\\\\\\\\\\":100.0},{\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\":1618368960000,\\\\\\\\\\\\\\"Average\\\\\\\\\\\\\\":95.8683333333333,\\\\\\\\\\\\\\"Minimum\\\\\\\\\\\\\\":67.84,\\\\\\\\\\\\\\"Maximum\\\\\\\\\\\\\\":100.0}]\\",\\n  \\"Period\\": \\"60\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeMetricDataResponse>\\r\\n\\t<RequestId>7598FEED-3B79-4B4A-AD01-435F34DA8EDC</RequestId>\\r\\n\\t<Period>60</Period>\\t\\r\\n    <Datapoints>[{\\\\\\"timestamp\\\\\\":1618368900000,\\\\\\"Average\\\\\\":95.8291666666667,\\\\\\"Minimum\\\\\\":65.48,\\\\\\"Maximum\\\\\\":100.0},{\\\\\\"timestamp\\\\\\":1618368960000,\\\\\\"Average\\\\\\":95.8683333333333,\\\\\\"Minimum\\\\\\":67.84,\\\\\\"Maximum\\\\\\":100.0}]</Datapoints>\\r\\n\\t<Code>200</Code>\\r\\n</DescribeMetricDataResponse>\\t","errorExample":""}]',
      'title' => '查询指定云产品的某个监控项的监控数据',
      'summary' => '调用DescribeMetricData接口查询指定云产品的某个监控项的监控数据。',
      'description' => '### 使用限制
单个API的调用次数限制为10次/秒。一个阿里云账号及该账号下的RAM用户共用10次/秒。

### 使用说明
> 与[DescribeMetricList](~~51936~~)不同，本接口具有统计功能（即`Dimension={"instanceId": "i-abcdefgh12****"}`），将该账号下的所有监控数据进行聚合统计。

本文将提供一个示例，查询云产品`acs_ecs_dashboard`监控项`cpu_idle`的监控数据。

',
      'requestParamsDescription' => ' 关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMetricMetaList' => 
    array (
      'summary' => '调用DescribeMetricMetaList接口查询云监控开放的监控项详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的命名空间。

关于云产品的命名空间，请参见[云产品监控项](~~163515~~)。
',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'acs_kvstore',
          ),
        ),
        1 => 
        array (
          'name' => 'Labels',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '根据标签过滤资源。是一个JSON的字符串。

格式：`[{"name":"标签键","value":"标签值"},{"name":"标签键","value":"标签值"}] `。已有标签说明如下： 

- metricCategory：监控项分类描述。  
- alertEnable：是否需要报警。  
- alertUnit：建议的报警单位。 
- unitFactor：单位转换系数。  
- minAlertPeriod：最小报警周期。  
- productCategory：产品类型分类。 ',
            'type' => 'string',
            'required' => false,
            'example' => '[{"name":"productCategory","value":"kvstore_old"}]',
          ),
        ),
        2 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项名称。详情请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'CPUUtilization',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页参数。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页最大数量。默认值：30。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '30',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CDE9EAFF-D54E-4024-BBFC-B0AAC883143B',
              ),
              'TotalCount' => 
              array (
                'description' => '总记录条数。',
                'type' => 'string',
                'example' => '10',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Resources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Resource' => 
                  array (
                    'description' => '资源中监控项的配置信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '资源中监控项的配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MetricName' => 
                        array (
                          'description' => '监控项名称。',
                          'type' => 'string',
                          'example' => 'ads.diskSize',
                        ),
                        'Description' => 
                        array (
                          'description' => '监控项描述。',
                          'type' => 'string',
                          'example' => 'The rated disk capacity',
                        ),
                        'Labels' => 
                        array (
                          'description' => '监控项的标签，是一个或多个JSON字符串。

格式：`[{"name":"标签键","value":"标签值"}]`，`name`可以重复，已有标签说明如下： 

- metricCategory：监控项分类描述。  
- alertEnable：是否需要报警。  
- alertUnit：建议的报警单位。 
- unitFactor：单位转换系数。  
- minAlertPeriod：最小报警周期。  
- productCategory：产品类型分类。 ',
                          'type' => 'string',
                          'example' => '[{\\"name\\":\\"minAlertPeriod\\",\\"value\\":\\"300\\"},{\\"name\\":\\"alertDefault\\",\\"value\\":\\"\\"},{\\"name\\":\\"unitFactor\\",\\"value\\":\\"1\\"},{\\"name\\":\\"alertUnit\\",\\"value\\":\\"Mbytes\\"},{\\"name\\":\\"productCategory\\",\\"value\\":\\"ads\\"},{\\"name\\":\\"is_alarm\\",\\"value\\":\\"true\\"},{\\"name\\":\\"metricCategory\\",\\"value\\":\\"workerId\\"}]',
                        ),
                        'Unit' => 
                        array (
                          'description' => '监控项的单位。',
                          'type' => 'string',
                          'example' => 'MB',
                        ),
                        'Dimensions' => 
                        array (
                          'description' => '资源的监控维度。多个监控维度之间用半角逗号（,）分隔。',
                          'type' => 'string',
                          'example' => 'userId,instanceId,tableSchema,workerId',
                        ),
                        'Namespace' => 
                        array (
                          'description' => '云产品的命名空间。',
                          'type' => 'string',
                          'example' => 'acs_ads',
                        ),
                        'Periods' => 
                        array (
                          'description' => '监控项的所有统计周期。多个统计周期之间用半角逗号（,）分隔。

单位：秒。',
                          'type' => 'string',
                          'example' => '300',
                        ),
                        'Statistics' => 
                        array (
                          'description' => '统计方法。多个统计方法之间用半角逗号（,）分隔。',
                          'type' => 'string',
                          'example' => 'Average,Minimum,Maximum',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"CDE9EAFF-D54E-4024-BBFC-B0AAC883143B\\",\\n  \\"TotalCount\\": \\"10\\",\\n  \\"Success\\": true,\\n  \\"Resources\\": {\\n    \\"Resource\\": [\\n      {\\n        \\"MetricName\\": \\"ads.diskSize\\",\\n        \\"Description\\": \\"The rated disk capacity\\",\\n        \\"Labels\\": \\"[{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"minAlertPeriod\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"300\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"alertDefault\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"unitFactor\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"alertUnit\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Mbytes\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"productCategory\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"ads\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"is_alarm\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"metricCategory\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"workerId\\\\\\\\\\\\\\"}]\\",\\n        \\"Unit\\": \\"MB\\",\\n        \\"Dimensions\\": \\"userId,instanceId,tableSchema,workerId\\",\\n        \\"Namespace\\": \\"acs_ads\\",\\n        \\"Periods\\": \\"300\\",\\n        \\"Statistics\\": \\"Average,Minimum,Maximum\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMetricMetaListResponse>\\r\\n\\t\\t<TotalCount>1853</TotalCount>\\r\\n\\t\\t<RequestId>CDE9EAFF-D54E-4024-BBFC-B0AAC883143B</RequestId>\\r\\n\\t\\t<Success>true</Success>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Resources>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>磁盘额定容量</Description>\\r\\n\\t\\t\\t\\t<Statistics>Average,Minimum,Maximum</Statistics>\\r\\n\\t\\t\\t\\t<MetricName>ads.diskSize</MetricName>\\r\\n\\t\\t\\t\\t<Labels>[{\\\\\\"name\\\\\\":\\\\\\"minAlertPeriod\\\\\\",\\\\\\"value\\\\\\":\\\\\\"300\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"alertDefault\\\\\\",\\\\\\"value\\\\\\":\\\\\\"\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"unitFactor\\\\\\",\\\\\\"value\\\\\\":\\\\\\"1\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"alertUnit\\\\\\",\\\\\\"value\\\\\\":\\\\\\"Mbytes\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"productCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"ads\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"is_alarm\\\\\\",\\\\\\"value\\\\\\":\\\\\\"true\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"metricCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"workerId\\\\\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Dimensions>userId,instanceId,tableSchema,workerId</Dimensions>\\r\\n\\t\\t\\t\\t<Namespace>acs_ads</Namespace>\\r\\n\\t\\t\\t\\t<Periods>300</Periods>\\r\\n\\t\\t\\t\\t<Unit>MB</Unit>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>磁盘已用容量</Description>\\r\\n\\t\\t\\t\\t<Statistics>Average,Minimum,Maximum</Statistics>\\r\\n\\t\\t\\t\\t<MetricName>ads.diskUsed</MetricName>\\r\\n\\t\\t\\t\\t<Labels>[{\\\\\\"name\\\\\\":\\\\\\"alertUnit\\\\\\",\\\\\\"value\\\\\\":\\\\\\"Mbytes\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"minAlertPeriod\\\\\\",\\\\\\"value\\\\\\":\\\\\\"300\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"metricCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"workerId\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"is_alarm\\\\\\",\\\\\\"value\\\\\\":\\\\\\"true\\\\\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Dimensions>userId,instanceId,tableSchema,workerId</Dimensions>\\r\\n\\t\\t\\t\\t<Namespace>acs_ads</Namespace>\\r\\n\\t\\t\\t\\t<Periods>300</Periods>\\r\\n\\t\\t\\t\\t<Unit>MB</Unit>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>磁盘使用率</Description>\\r\\n\\t\\t\\t\\t<Statistics>Average,Minimum,Maximum</Statistics>\\r\\n\\t\\t\\t\\t<MetricName>ads.diskUsedPercent</MetricName>\\r\\n\\t\\t\\t\\t<Labels>[{\\\\\\"name\\\\\\":\\\\\\"alertUnit\\\\\\",\\\\\\"value\\\\\\":\\\\\\"%\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"minAlertPeriod\\\\\\",\\\\\\"value\\\\\\":\\\\\\"300\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"metricCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"workerId\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"is_alarm\\\\\\",\\\\\\"value\\\\\\":\\\\\\"true\\\\\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Dimensions>userId,instanceId,tableSchema,workerId</Dimensions>\\r\\n\\t\\t\\t\\t<Namespace>acs_ads</Namespace>\\r\\n\\t\\t\\t\\t<Periods>300</Periods>\\r\\n\\t\\t\\t\\t<Unit>%</Unit>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>queue的未消费的消息数目</Description>\\r\\n\\t\\t\\t\\t<Statistics>Maximum</Statistics>\\r\\n\\t\\t\\t\\t<MetricName>QueueMessageAccumulation</MetricName>\\r\\n\\t\\t\\t\\t<Labels>[{\\\\\\"name\\\\\\":\\\\\\"minAlertPeriod\\\\\\",\\\\\\"value\\\\\\":\\\\\\"60\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"alertDefault\\\\\\",\\\\\\"value\\\\\\":\\\\\\"\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"unitFactor\\\\\\",\\\\\\"value\\\\\\":\\\\\\"1\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"alertUnit\\\\\\",\\\\\\"value\\\\\\":\\\\\\"count/min\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"productCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"amqp\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"is_alarm\\\\\\",\\\\\\"value\\\\\\":\\\\\\"true\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"metricCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"queue\\\\\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Dimensions>userId,regionId,vhostName,queueName</Dimensions>\\r\\n\\t\\t\\t\\t<Namespace>acs_amqp</Namespace>\\r\\n\\t\\t\\t\\t<Periods>60,300</Periods>\\r\\n\\t\\t\\t\\t<Unit>count/min</Unit>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>queue每分钟消息生产量</Description>\\r\\n\\t\\t\\t\\t<Statistics>Value</Statistics>\\r\\n\\t\\t\\t\\t<MetricName>QueueMessageInput</MetricName>\\r\\n\\t\\t\\t\\t<Labels>[{\\\\\\"name\\\\\\":\\\\\\"minAlertPeriod\\\\\\",\\\\\\"value\\\\\\":\\\\\\"60\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"alertDefault\\\\\\",\\\\\\"value\\\\\\":\\\\\\"\\\\\\"},{\\\\\\"n ame\\\\\\":\\\\\\"unitFactor\\\\\\",\\\\\\"value\\\\\\":\\\\\\"1\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"alertUnit\\\\\\",\\\\\\"value\\\\\\":\\\\\\"count/min\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"productCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"amqp\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"is_alarm\\\\\\",\\\\\\"value\\\\\\":\\\\\\"true\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"metricCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"queue\\\\\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Dimensions>userId,regionId,vhostName,queueName</Dimensions>\\r\\n\\t\\t\\t\\t<Namespace>acs_amqp</Namespace>\\r\\n\\t\\t\\t\\t<Periods>60,300</Periods>\\r\\n\\t\\t\\t\\t<Unit>count/min</Unit>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>queue的未消费的消息数目</Description>\\r\\n\\t\\t\\t\\t<Statistics>Value</Statistics>\\r\\n\\t\\t\\t\\t<MetricName>QueueMessageOutput</MetricName>\\r\\n\\t\\t\\t\\t<Labels>[{\\\\\\"name\\\\\\":\\\\\\"minAlertPeriod\\\\\\",\\\\\\"value\\\\\\":\\\\\\"60\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"alertDefault\\\\\\",\\\\\\"value\\\\\\":\\\\\\"\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"unitFactor\\\\\\",\\\\\\"value\\\\\\":\\\\\\"1\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"alertUnit\\\\\\",\\\\\\"value\\\\\\":\\\\\\"count/min\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"productCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"amqp\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"is_alarm\\\\\\",\\\\\\"value\\\\\\":\\\\\\"true\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"metricCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"queue\\\\\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Dimensions>userId,regionId,vhostName,queueName</Dimensions>\\r\\n\\t\\t\\t\\t<Namespace>acs_amqp</Namespace>\\r\\n\\t\\t\\t\\t<Periods>60,300</Periods>\\r\\n\\t\\t\\t\\t<Unit>count/min</Unit>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>实例每分钟产生的消息数量</Description>\\r\\n\\t\\t\\t\\t<Statistics>Value</Statistics>\\r\\n\\t\\t\\t\\t<MetricName>VhostMessageInput</MetricName>\\r\\n\\t\\t\\t\\t<Labels>[{\\\\\\"name\\\\\\":\\\\\\"minAlertPeriod\\\\\\",\\\\\\"value\\\\\\":\\\\\\"60\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"alertDefault\\\\\\",\\\\\\"value\\\\\\":\\\\\\"\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"unitFactor\\\\\\",\\\\\\"value\\\\\\":\\\\\\"1\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"alertUnit\\\\\\",\\\\\\"value\\\\\\":\\\\\\"count/min\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"productCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"amqp\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"is_alarm\\\\\\",\\\\\\"value\\\\\\":\\\\\\"true\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"metricCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"vhost\\\\\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Dimensions>userId,regionId,vhostName</Dimensions>\\r\\n\\t\\t\\t\\t<Namespace>acs_amqp</Namespace>\\r\\n\\t\\t\\t\\t<Periods>60,300</Periods>\\r\\n\\t\\t\\t\\t<Unit>count/min</Unit>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>实例每分钟消费的消息数量</Description>\\r\\n\\t\\t\\t\\t<Statistics>Value</Statistics>\\r\\n\\t\\t\\t\\t<MetricName>VhostMessageOutput</MetricName>\\r\\n\\t\\t\\t\\t<Labels>[{\\\\\\"name\\\\\\":\\\\\\"minAlertPeriod\\\\\\",\\\\\\"value\\\\\\":\\\\\\"60\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"alertDefault\\\\\\",\\\\\\"value\\\\\\":\\\\\\"\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"unitFactor\\\\\\",\\\\\\"value\\\\\\":\\\\\\"1\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"alertUnit\\\\\\",\\\\\\"value\\\\\\":\\\\\\"count/min\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"productCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"amqp\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"is_alarm\\\\\\",\\\\\\"value\\\\\\":\\\\\\"true\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"metricCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"vhost\\\\\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Dimensions>userId,regionId,vhostName</Dimensions>\\r\\n\\t\\t\\t\\t<Namespace>acs_amqp</Namespace>\\r\\n\\t\\t\\t\\t<Periods>60,300</Periods>\\r\\n\\t\\t\\t\\t<Unit>count/min</Unit>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description></Description>\\r\\n\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t<MetricName>Latency</MetricName>\\r\\n\\t\\t\\t\\t<Labels>[{\\\\\\"name\\\\\\":\\\\\\"alertUnit\\\\\\",\\\\\\"value\\\\\\":\\\\\\"ms\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"minAlertPeriod\\\\\\",\\\\\\"value\\\\\\":\\\\\\"60\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"metricCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"instanceId\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"is_alarm\\\\\\",\\\\\\"value\\\\\\":\\\\\\"true\\\\\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Dimensions>userId,region,apiUid</Dimensions>\\r\\n\\t\\t\\t\\t<Namespace>acs_apigateway_dashboard</Namespace>\\r\\n\\t\\t\\t\\t<Periods>60,300,900</Periods>\\r\\n\\t\\t\\t\\t<Unit>ms</Unit>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>时间粒度内http返回码4XX占全部返回码的百分比</Description>\\r\\n\\t\\t\\t\\t<Statistics>Average,Minimum,Maximum</Statistics>\\r\\n\\t\\t\\t\\t<MetricName>code4xx</MetricName>\\r\\n\\t\\t\\t\\t<Labels>[{\\\\\\"name\\\\\\":\\\\\\"alertUnit\\\\\\",\\\\\\"value\\\\\\":\\\\\\"%\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"minAlertPeriod\\\\\\",\\\\\\"value\\\\\\":\\\\\\"60\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"metricCategory\\\\\\",\\\\\\"value\\\\\\":\\\\\\"instanceId\\\\\\"},{\\\\\\"name\\\\\\":\\\\\\"is_alarm\\\\\\",\\\\\\"value\\\\\\":\\\\\\"true\\\\\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Dimensions>userId,instanceId</Dimensions>\\r\\n\\t\\t\\t\\t<Namespace>acs_cdn</Namespace>\\r\\n\\t\\t\\t\\t<Periods>60,300</Periods>\\r\\n\\t\\t\\t\\t<Unit>%</Unit>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t</Resources>\\r\\n</DescribeMetricMetaListResponse>","errorExample":""}]',
      'title' => '查询云监控开放的监控项详情',
      'description' => '通常配合查询监控数据接口DescribeMetricList和DescribeMetricLast一起使用，详情请参见[DescribeMetricList](~~51936~~)和[DescribeMetricLast](~~51939~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeProjectMeta' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Labels',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签。根据标签过滤，标签为每个报警增加特殊标记。

目前仅支持按照产品过滤，即`name`为`product`的过滤方式，例如：{"name":"product","value":"ECS"}。
>对于阿里云中云监控控制台的特殊标签，不建议您使用。
',
            'type' => 'string',
            'required' => false,
            'example' => '[{"name":"product","value":"ECS"}]',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

取值范围：1~100。

默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小。

取值范围：1~10000。

默认值：30。

>目前阿里云未限制该参数，如果您需要获取所有结果，则将分页大小设置为较大的值即可。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '30',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4C2061B2-3B1B-43BF-A4A4-C53426F479C0',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'PageSize' => 
              array (
                'description' => '分页大小。',
                'type' => 'string',
                'example' => '5',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'string',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'string',
                'example' => '12',
              ),
              'Resources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Resource' => 
                  array (
                    'description' => '云产品信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Namespace' => 
                        array (
                          'description' => '命名空间，用于区分产品。格式：`acs_产品缩写`，详情请参见[云产品监控项](~~163515~~)。',
                          'type' => 'string',
                          'example' => 'acs_cdn',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息。',
                          'type' => 'string',
                          'example' => 'CDN',
                        ),
                        'Labels' => 
                        array (
                          'description' => '标签。根据标签过滤，标签为每个报警增加特殊标记。

例如：报警所属产品的规格，是否能设置告警，格式：`[{"name":"标签名","value":"标签值"}、{"name":"标签名","value":"标签值"}]​`。常用的标签如下：

- alertUnit：报警的单位。
  为了避免原始上报数据的单位过小，而导致告警规则输入的值过大而增加的`alertUnit`标签，目前主要应用于云监控控制台。

- minAlertPeriod：最小上报周期。上报监控数据的时间间隔，通常为1分钟。

- metricCategory：产品的规格。例如： kvstore_sharding。
  部分阿里云产品分不同规格，定义在同一个namespace中，用该参数进行区分。

- is_alarm：能否设置告警规则。
  对于阿里云中云监控控制台的特殊标签，不建议您使用。

',
                          'type' => 'string',
                          'example' => '[{"metricCategory":ecs}]',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4C2061B2-3B1B-43BF-A4A4-C53426F479C0\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"PageSize\\": \\"5\\",\\n  \\"PageNumber\\": \\"1\\",\\n  \\"Total\\": \\"12\\",\\n  \\"Resources\\": {\\n    \\"Resource\\": [\\n      {\\n        \\"Namespace\\": \\"acs_cdn\\",\\n        \\"Description\\": \\"CDN\\",\\n        \\"Labels\\": \\"[{\\\\\\"metricCategory\\\\\\":ecs}]\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeProjectMeta>\\r\\n\\t\\t<PageNumber>1</PageNumber>\\r\\n\\t\\t<PageSize>5</PageSize>\\r\\n\\t\\t<RequestId>4C2061B2-3B1B-43BF-A4A4-C53426F479C0</RequestId>\\r\\n\\t\\t<Success>true</Success>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Total>12</Total>\\r\\n\\t\\t<Resources>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>分析型数据库</Description>\\r\\n\\t\\t\\t\\t<Labels>[{\\"name\\":\\"product\\",\\"value\\":\\"ADS\\"},{\\"name\\":\\"productCategory\\",\\"value\\":\\"ads\\"},{\\"name\\":\\"groupFlag\\",\\"value\\":\\"true\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Namespace>acs_ads</Namespace>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>智能推荐</Description>\\r\\n\\t\\t\\t\\t<Labels>[{\\"name\\":\\"product\\",\\"value\\":\\"AIRec\\"},{\\"name\\":\\"productCategory\\",\\"value\\":\\"airec\\"},{\\"name\\":\\"groupFlag\\",\\"value\\":\\"true\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Namespace>acs_airec</Namespace>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>API网关</Description>\\r\\n\\t\\t\\t\\t<Labels>[{\\"name\\":\\"product\\",\\"value\\":\\"APIGateway\\"},{\\"name\\":\\"productCategory\\",\\"value\\":\\"apigateway\\"},{\\"name\\":\\"groupFlag\\",\\"value\\":\\"true\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Namespace>acs_apigateway_dashboard</Namespace>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>CDN</Description>\\r\\n\\t\\t\\t\\t<Labels>[{\\"name\\":\\"product\\",\\"value\\":\\"CDN\\"},{\\"name\\":\\"productCategory\\",\\"value\\":\\"cdn\\"},{\\"name\\":\\"groupFlag\\",\\"value\\":\\"true\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Namespace>acs_cdn</Namespace>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t<Description>云企业网</Description>\\r\\n\\t\\t\\t\\t<Labels>[{\\"name\\":\\"product\\",\\"value\\":\\"CEN\\"},{\\"name\\":\\"productCategory\\",\\"value\\":\\"cen,cen_flow,cen_vbr\\"},{\\"name\\":\\"groupFlag\\",\\"value\\":\\"true\\"}]</Labels>\\r\\n\\t\\t\\t\\t<Namespace>acs_cen</Namespace>\\r\\n\\t\\t\\t</Resource>\\r\\n\\t\\t</Resources>\\r\\n</DescribeProjectMeta>\\r\\n","errorExample":""}]',
      'title' => '查询云监控支持的时序类监控项产品列表',
      'summary' => '调用DescribeProjectMeta接口查询云监控支持的时序类监控项产品列表。',
      'description' => '获取接入的云产品信息，包括产品的描述信息、Namespace和标签。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteExporterOutput' => 
    array (
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DestName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置的目标名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testName',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 状态码为200表示成功，其余取值表示失败。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2DECF751-7AFA-43BB-8C63-2B6B07E51AE1',
              ),
              'Success' => 
              array (
                'description' => '是否成功，取值：  
- `true`：成功
- `false`：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"RequestId\\": \\"2DECF751-7AFA-43BB-8C63-2B6B07E51AE1\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>296AE90D-153C-4612-AF24-75D0F5921976</RequestId>\\n<Code>200</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '删除监控数据导出配置',
      'summary' => '调用DeleteExporterOutput接口删除监控数据导出配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteExporterRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '导出规则名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'myRuleName',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 状态码为200表示成功，其余取值表示失败。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6A5F022D-AC7C-460E-94AE-B9E75083D023',
              ),
              'Success' => 
              array (
                'description' => '是否成功，取值：  
- `true`：成功
- `false`：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"6A5F022D-AC7C-460E-94AE-B9E75083D023\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>8B524AE2-FBB1-4202-AA17-B3DEAAC8D861</RequestId>\\n<Code>200</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '删除数据导出规则',
      'summary' => '调用DeleteExporterRule接口删除数据导出规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeExporterOutputList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页码，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示记录条数，默认为10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '10',
            'default' => '1000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。

',
                'type' => 'string',
                'example' => '0E657631-CD6C-4C24-9637-98D000B9272C',
              ),
              'Success' => 
              array (
                'description' => '是否成功，取值：  
- `true`：成功
- `false`：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 状态码为200表示成功，其余取值表示失败。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'sucess',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '25',
              ),
              'Datapoints' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Datapoint' => 
                  array (
                    'description' => '输出的配置列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DestType' => 
                        array (
                          'description' => '数据导出的类型。

> 目前仅支持SLS，后续将支持导出更多的产品。',
                          'type' => 'string',
                          'example' => 'SLS',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建的uninx时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1584016495498',
                        ),
                        'DestName' => 
                        array (
                          'description' => '配置的名称。',
                          'type' => 'string',
                          'example' => 'exporterOut',
                        ),
                        'ConfigJson' => 
                        array (
                          'description' => '监控输出配置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ak' => 
                            array (
                              'description' => 'AccessKeyId。',
                              'type' => 'string',
                              'example' => 'LTAIpY33********',
                            ),
                            'endpoint' => 
                            array (
                              'description' => 'SLS的数据对应的域名。',
                              'type' => 'string',
                              'example' => 'http://cn-qingdao-share.log.aliyuncs.com',
                            ),
                            'logstore' => 
                            array (
                              'description' => '日志库。',
                              'type' => 'string',
                              'example' => 'monitorlogstore',
                            ),
                            'project' => 
                            array (
                              'description' => 'SLS项目。',
                              'type' => 'string',
                              'example' => 'exporter',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0E657631-CD6C-4C24-9637-98D000B9272C\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"sucess\\",\\n  \\"PageNumber\\": 1,\\n  \\"Total\\": 25,\\n  \\"Datapoints\\": {\\n    \\"Datapoint\\": [\\n      {\\n        \\"DestType\\": \\"SLS\\",\\n        \\"CreateTime\\": 1584016495498,\\n        \\"DestName\\": \\"exporterOut\\",\\n        \\"ConfigJson\\": {\\n          \\"ak\\": \\"LTAIpY33********\\",\\n          \\"endpoint\\": \\"http://cn-qingdao-share.log.aliyuncs.com\\",\\n          \\"project\\": \\"exporter\\",\\n          \\"logstore\\": \\"monitorlogstore\\",\\n          \\"as\\": \\"TxHwuJ8yAb3AULcnny******\\"\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>BB30C6D9-8D0D-442E-9484-C15BADE76A21</RequestId>\\n<PageNumber>1</PageNumber>\\n<Total>1</Total>\\n<Datapoints>\\n    <Datapoint>\\n        <DestType>SLS</DestType>\\n        <DestName>desctName1</DestName>\\n        <CreateTime>1584016495498</CreateTime>\\n        <ConfigJson>\\n            <endpoint>http://cn-qingdao-share.log.aliyuncs.com</endpoint>\\n            <as>TxHwuJ8yAb3AULcnny******</as>\\n            <project>exporter</project>\\n            <ak>LTAIpY33********</ak>\\n            <logstore>exporter</logstore>\\n        </ConfigJson>\\n    </Datapoint>\\n</Datapoints>\\n<Code>200</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '查询监控数据导出列表',
      'summary' => '调用DescribeExporterOutputList接口查询监控数据导出列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeExporterRuleList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页码，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示记录条数，默认为1000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1000',
            'default' => '1000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6BA047CA-8BC6-40BC-BC8F-FBECF35F1993',
              ),
              'Success' => 
              array (
                'description' => '是否成功，取值：  
- `true`：成功
- `false`：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 状态码为200表示成功，其余取值表示失败。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'susscess',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1000',
              ),
              'Datapoints' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Datapoint' => 
                  array (
                    'description' => '输出的规则列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MetricName' => 
                        array (
                          'description' => '监控项名称。 
>详情请参见[DescribeMetricMetaList](~~98846~~)或[预设监控项参考](~~28619~~)。',
                          'type' => 'string',
                          'example' => 'cpu_total',
                        ),
                        'Describe' => 
                        array (
                          'description' => '规则描述信息。',
                          'type' => 'string',
                          'example' => '监控数据导出',
                        ),
                        'TargetWindows' => 
                        array (
                          'description' => '导出数据的时间窗口。  
如果要导出多个窗口，使用逗号分隔。

> 不支持小于60秒数据的导出。',
                          'type' => 'string',
                          'example' => '60,300',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建的时间， 为unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1584024616228',
                        ),
                        'Enabled' => 
                        array (
                          'description' => '是否启用。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Dimension' => 
                        array (
                          'description' => '关联的维度。',
                          'type' => 'string',
                          'example' => '{"instanceId":"xxxxx"}',
                        ),
                        'Namespace' => 
                        array (
                          'description' => '产品的数据命名空间。 
>详情请参见[DescribeMetricMetaList](~~98846~~)或[预设监控项参考](~~28619~~)。',
                          'type' => 'string',
                          'example' => 'acs_ecs_dashboard',
                        ),
                        'RuleName' => 
                        array (
                          'description' => '导出规则名。 ',
                          'type' => 'string',
                          'example' => 'myRuleName',
                        ),
                        'DstName' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DstName' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '导出目的地。',
                                'type' => 'string',
                                'example' => 'exporter1',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6BA047CA-8BC6-40BC-BC8F-FBECF35F1993\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"susscess\\",\\n  \\"PageNumber\\": 1,\\n  \\"Total\\": 1000,\\n  \\"Datapoints\\": {\\n    \\"Datapoint\\": [\\n      {\\n        \\"MetricName\\": \\"cpu_total\\",\\n        \\"Describe\\": \\"监控数据导出\\",\\n        \\"TargetWindows\\": \\"60,300\\",\\n        \\"CreateTime\\": 1584024616228,\\n        \\"Enabled\\": true,\\n        \\"Dimension\\": \\"{\\\\\\"instanceId\\\\\\":\\\\\\"xxxxx\\\\\\"}\\",\\n        \\"Namespace\\": \\"acs_ecs_dashboard\\",\\n        \\"RuleName\\": \\"myRuleName\\",\\n        \\"DstName\\": {\\n          \\"DstName\\": [\\n            \\"exporter1\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>6BA047CA-8BC6-40BC-BC8F-FBECF35F1993</RequestId>\\n<PageNumber>1</PageNumber>\\n<Total>1</Total>\\n<Datapoints>\\n    <Datapoint>\\n        <TargetWindows>60,300</TargetWindows>\\n        <Describe/>\\n        <MetricName>cpu_total</MetricName>\\n        <CreateTime>1584024616228</CreateTime>\\n        <Enabled>false</Enabled>\\n        <Dimension>{\'userId\': \'177******\'}</Dimension>\\n        <DstName>\\n            <DstName>exporter1</DstName>\\n        </DstName>\\n        <RuleName>exporterRule1</RuleName>\\n        <Namespace>acs_ecs_dashboard</Namespace>\\n        <dstNames/>\\n    </Datapoint>\\n</Datapoints>\\n<Code>200</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '查询数据导出规则列表',
      'summary' => '调用DescribeExporterRuleList接口查询数据导出规则列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMetricTop' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控数据的统计周期。

取值：15、60、900和3600。

单位：秒。

> - 如果不设置统计周期，则按照注册监控项时申请的上报周期来查询监控数据。
- 每个云产品的监控项（`MetricName`）的统计周期不同。更多信息，请参见[云产品监控项](~~163515~~)。

',
            'type' => 'string',
            'required' => false,
            'example' => '60',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的数据命名空间。

关于云产品的数据命名空间，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        2 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的监控项名称。

关于监控项名称，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cpu_idle',
          ),
        ),
        3 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询监控数据的开始时间。

- 当您未设置`StartTime`和`EndTime`时，查询当前时间最近一个统计周期`Period`的监控数据。

- 当您同时设置`StartTime`和`EndTime`时，查询指定时间段内距离`EndTime`最近一个统计周期`Period`的监控数据。具体如下：

   - 当`Period`设置为15秒时，指定时间段必须小于或等于20分钟。例如：StartTime为2021-05-08 08:10:00，EndTime为2021-05-08 08:30:00，统计距离2021-05-08 08:30:00最近一个15秒的监控数据。

   - 当`Period`设置为60秒或900秒时，指定时间段必须小于或等于2小时。例如：Period为60秒，StartTime为2021-05-08 08:00:00，EndTime为2021-05-08 10:00:00，统计距离2021-05-08 10:00:00最近一个60秒的监控数据。

   - 当`Period`设置为3600秒时，指定时间段必须小于或等于2天。例如：StartTime为2021-05-08 08:00:00，EndTime为2021-05-10 08:00:00，统计距离2021-05-10 08:00:00最近一个3600秒的监控数据。

开始时间支持的格式：

- Unix时间戳：从1970年1月1日开始所经过的毫秒数。

- Format格式：YYYY-MM-DDThh:mm:ssZ。

> - `StartTime`如果设置过早，则无效。
- 建议您使用Unix时间戳，避免时区的问题。',
            'type' => 'string',
            'required' => false,
            'example' => '2021-05-08 08:00:00',
          ),
        ),
        4 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询监控数据的结束时间。

- 当您未设置`StartTime`和`EndTime`时，查询当前时间最近一个统计周期`Period`的监控数据。

- 当您同时设置`StartTime`和`EndTime`时，查询指定时间段内距离`EndTime`最近一个统计周期`Period`的监控数据。具体如下：

   - 当`Period`设置为15秒时，指定时间段必须小于或等于20分钟。例如：StartTime为2021-05-08 08:10:00，EndTime为2021-05-08 08:30:00，统计距离2021-05-08 08:30:00最近一个15秒的监控数据。

   - 当`Period`设置为60秒或900秒时，指定时间段必须小于或等于2小时。例如：Period为60秒，StartTime为2021-05-08 08:00:00，EndTime为2021-05-08 10:00:00，统计距离2021-05-08 10:00:00最近一个60秒的监控数据。

   - 当`Period`设置为3600秒时，指定时间段必须小于或等于2天。例如：StartTime为2021-05-08 08:00:00，EndTime为2021-05-10 08:00:00，统计距离2021-05-10 08:00:00最近一个3600秒的监控数据。



结束时间支持的格式：

- Unix时间戳：从1970年1月1日开始所经过的毫秒数。

- Format格式：YYYY-MM-DDThh:mm:ssZ。

> 建议您使用Unix时间戳，避免时区的问题。

 ',
            'type' => 'string',
            'required' => false,
            'example' => '2021-05-08 10:00:00',
          ),
        ),
        5 => 
        array (
          'name' => 'Dimensions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定资源的监控维度。

格式：`key:value`键值对形式的集合，例如：`{"userId":"120886317861****"}`和`{"instanceId":"i-2ze2d6j5uhg20x47****"}`。

> 单次请求最多支持批量查询50个实例。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"instanceId": "i-2ze2d6j5uhg20x47****"}]',
          ),
        ),
        6 => 
        array (
          'name' => 'Orderby',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序字段，即按该字段进行排序。取值：

- Average：平均值。

- Minimum：最小值。

- Maximum：最大值。',
            'type' => 'string',
            'required' => true,
            'example' => 'Average',
          ),
        ),
        7 => 
        array (
          'name' => 'OrderDesc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序方式。取值：
- True：由小到大排序。
- False（默认值）：由大到小排序。',
            'type' => 'string',
            'required' => false,
            'example' => 'False',
          ),
        ),
        8 => 
        array (
          'name' => 'Length',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的记录条数。

用于分页查询，默认值：10。

> 单次请求Length的最大值为1440。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
        9 => 
        array (
          'name' => 'Express',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对查询出的现有结果进行实时计算的表达式。

> 目前仅支持`groupby`（类似数据库的groupby语句）。

',
            'type' => 'string',
            'required' => false,
            'example' => '{"groupby":["userId","instanceId"]}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3121AE7D-4AFF-4C25-8F1D-C8226EBB1F42',
              ),
              'Datapoints' => 
              array (
                'description' => '监控数据列表。',
                'type' => 'string',
                'example' => '[{\\"order\\":1,\\"timestamp\\":1620287520000,\\"userId\\":\\"120886317861****\\",\\"instanceId\\":\\"i-j6ccf7d5fn335qpo****\\",\\"Average\\":99.92,\\"Minimum\\":99.5,\\"Maximum\\":100.0,\\"_count\\":1.0},{\\"order\\":2,\\"timestamp\\":1620287520000,\\"userId\\":\\"120886317861****\\",\\"instanceId\\":\\"i-0xii2bvf42iqvxbp****\\",\\"Average\\":99.91,\\"Minimum\\":99.0,\\"Maximum\\":100.0,\\"_count\\":1.0}]',
              ),
              'Period' => 
              array (
                'description' => '监控数据的统计周期。单位：秒。取值：15、60、900和3600。',
                'type' => 'string',
                'example' => '60',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"3121AE7D-4AFF-4C25-8F1D-C8226EBB1F42\\",\\n  \\"Datapoints\\": \\"[{\\\\\\\\\\\\\\"order\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\":1620287520000,\\\\\\\\\\\\\\"userId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"120886317861****\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"instanceId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"i-j6ccf7d5fn335qpo****\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"Average\\\\\\\\\\\\\\":99.92,\\\\\\\\\\\\\\"Minimum\\\\\\\\\\\\\\":99.5,\\\\\\\\\\\\\\"Maximum\\\\\\\\\\\\\\":100.0,\\\\\\\\\\\\\\"_count\\\\\\\\\\\\\\":1.0},{\\\\\\\\\\\\\\"order\\\\\\\\\\\\\\":2,\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\":1620287520000,\\\\\\\\\\\\\\"userId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"120886317861****\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"instanceId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"i-0xii2bvf42iqvxbp****\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"Average\\\\\\\\\\\\\\":99.91,\\\\\\\\\\\\\\"Minimum\\\\\\\\\\\\\\":99.0,\\\\\\\\\\\\\\"Maximum\\\\\\\\\\\\\\":100.0,\\\\\\\\\\\\\\"_count\\\\\\\\\\\\\\":1.0}]\\",\\n  \\"Period\\": \\"60\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeMetricTopResponse>\\r\\n\\t<RequestId>18DC44ED-B058-49B0-9D49-1D6608328E4D</RequestId>\\r\\n\\t<Period>60</Period>\\r\\n\\t<Datapoints>[{\\\\\\"order\\\\\\":1,\\\\\\"timestamp\\\\\\":1620287520000,\\\\\\"userId\\\\\\":\\\\\\"120886317861****\\\\\\",\\\\\\"instanceId\\\\\\":\\\\\\"i-j6ccf7d5fn335qpo****\\\\\\",\\\\\\"Average\\\\\\":99.92,\\\\\\"Minimum\\\\\\":99.5,\\\\\\"Maximum\\\\\\":100.0,\\\\\\"_count\\\\\\":1.0},{\\\\\\"order\\\\\\":2,\\\\\\"timestamp\\\\\\":1620287520000,\\\\\\"userId\\\\\\":\\\\\\"120886317861****\\\\\\",\\\\\\"instanceId\\\\\\":\\\\\\"i-0xii2bvf42iqvxbp****\\\\\\",\\\\\\"Average\\\\\\":99.91,\\\\\\"Minimum\\\\\\":99.0,\\\\\\"Maximum\\\\\\":100.0,\\\\\\"_count\\\\\\":1.0}]</Datapoints>\\r\\n\\t<Code>200</Code>\\r\\n</DescribeMetricTopResponse>\\t","errorExample":""}]',
      'title' => '查询排序后的最新监控数据',
      'summary' => '调用DescribeMetricTop接口先查询指定云产品的指定监控项的最新监控数据，再查询该监控项排序后的监控数据。',
      'description' => '### 使用限制
单个API的调用次数限制为10次/秒。一个阿里云账号及该账号下的RAM用户共用10次/秒。
### 注意事项
各云产品监控数据的存储时长与`Period`（统计周期）有关，`Period`越大，查询的监控数据越稀疏，监控数据的存储时间越长，具体关系如下：
- `Period`小于60秒，存储时长为7天。
- `Period`等于60秒，存储时长为31天。
- `Period`等于300秒，存储时长为91天。
### 使用说明
本文将提供一个示例，查询云服务`acs_ecs_dashboard`监控项`cpu_idle`在最近60秒的监控数据，并对监控数据的`Average`从大到小排序。',
      'requestParamsDescription' => ' 关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutExporterOutput' => 
    array (
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DestName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置的名称。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'exporterConfig',
          ),
        ),
        1 => 
        array (
          'name' => 'ConfigJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据导出的配置。是一个JSONObject字符串。必须要包含如下字段：

- endpoint：日志服务（SLS）数据对应的域名。
- project：项目。
- logstore：日志库。
- ak：AccessKey ID。
- as：AccessKey Secret。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{ "endpoint": "http://cn-qingdao-share.log.aliyuncs.com", "project": "exporter", "logstore": "exporter","ak": "LTAIp*******", "userId": "17754********", "as": "TxHwuJ8yAb3AU******"}',
          ),
        ),
        2 => 
        array (
          'name' => 'Desc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置的描述信息。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'CPU指标导出',
          ),
        ),
        3 => 
        array (
          'name' => 'DestType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '导出的产品。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'sls',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6A5F022D-AC7C-460E-94AE-B9E75083D027',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"6A5F022D-AC7C-460E-94AE-B9E75083D027\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PutExporterOutput>\\n\\t\\t<RequestId>E5DC60DD-2FDE-488F-942C-424FA3E18BF8</RequestId>\\n\\t\\t<Code>200</Code>\\n\\t\\t<Success>true</Success>\\n</PutExporterOutput>","errorExample":""}]',
      'title' => '创建或者修改一个监控数据导出配置',
      'summary' => '调用PutExporterOutput接口创建或者修改一个监控数据导出配置。',
      'description' => '> 目前仅支持日志服务（SLS），后续将支持导出更多的产品。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutExporterRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则名称。

> 如果该规则名称与现有的名称重复，则表示修改，否则表示创建。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'MyRuleName',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务的数据命名空间。 
>详情请参见[云服务监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        2 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项名称。
>>详情请参见[云服务监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cpu_total',
          ),
        ),
        3 => 
        array (
          'name' => 'TargetWindows',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '导出数据的时间窗口。单位：秒。

> - 如果需要导出多个窗口，则使用英文逗号（,）分隔。
- 不支持导出小于60秒的数据。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '60,300',
          ),
        ),
        4 => 
        array (
          'name' => 'Describe',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '导出规则描述。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '导出CPU指标',
          ),
        ),
        5 => 
        array (
          'name' => 'DstNames',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '数据导出的目的地。N的取值范围：1~20。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'distName1',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。当请求成功时，返回成功信息；当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '461CF2CD-2FC3-4B26-8645-7BD27E7D0F1D',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"461CF2CD-2FC3-4B26-8645-7BD27E7D0F1D\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PutExporterRuleResponse>\\n\\t\\t<Message>success</Message>\\n\\t\\t<RequestId>8B524AE2-FBB1-4202-AA17-B3DEAAC8D861</RequestId>\\n\\t\\t<Code>200</Code>\\n\\t\\t<Success>true</Success>\\n</PutExporterRuleResponse>","errorExample":""}]',
      'title' => '创建或修改数据导出规则',
      'summary' => '调用PutExporterRule接口创建或修改数据导出规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeAlertHistoryList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。

关于如何查询报警规则ID，请参见[DescribeMetricRuleList](~~114941~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'applyTemplate61dc81b5-d357-4cf6-a9b7-9f83c1d5****',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则名称。

关于如何查询报警规则名称，请参见[DescribeMetricRuleList](~~114941~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS_Rule',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的数据命名空间。

关于如何查询云产品的数据命名空间，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        3 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的监控项名称。

关于如何查询云产品的监控项名称，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'cpu_total',
          ),
        ),
        4 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。

关于如何获取应用分组ID，请参见[DescribeMonitorGroups](~~115032~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '7671****',
          ),
        ),
        5 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通道沉默状态。取值：
- 2（默认值）：通道沉默。
- 0：报警或恢复。
- 1：失效期。',
            'type' => 'string',
            'required' => false,
            'example' => '2',
          ),
        ),
        6 => 
        array (
          'name' => 'State',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警状态。取值：
- ALARM（默认值）：报警状态。
- OK：正常状态。',
            'type' => 'string',
            'required' => false,
            'example' => 'ALARM',
          ),
        ),
        7 => 
        array (
          'name' => 'Ascending',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '时间排序。取值：
- true（默认值）：表示时间倒序。
- false：表示时间正序。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询报警历史的开始时间戳。

单位：毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1640237400000',
          ),
        ),
        9 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询报警历史的结束时间戳。

单位：毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1640608200000',
          ),
        ),
        10 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示记录条数。

默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        11 => 
        array (
          'name' => 'Page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C3C69FBE-2262-541F-A409-C52F380BAE63',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'string',
                'example' => '2',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AlarmHistoryList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AlarmHistory' => 
                  array (
                    'description' => '报警历史详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '报警历史详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '通道沉默状态。取值：
- 2（默认值）：通道沉默。
- 0：报警或恢复。
- 1：失效期。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'MetricName' => 
                        array (
                          'description' => '监控项名称。',
                          'type' => 'string',
                          'example' => 'cpu_total',
                        ),
                        'EvaluationCount' => 
                        array (
                          'description' => '报警重试次数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'State' => 
                        array (
                          'description' => '报警状态。取值：

- ALARM：报警状态。

- OK：正常状态。',
                          'type' => 'string',
                          'example' => 'ALARM',
                        ),
                        'Namespace' => 
                        array (
                          'description' => '云服务的命名空间。',
                          'type' => 'string',
                          'example' => 'acs_ecs_dashboard',
                        ),
                        'Webhooks' => 
                        array (
                          'description' => 'URL回调地址。',
                          'type' => 'string',
                          'example' => 'https://www.aliyun.com',
                        ),
                        'RuleName' => 
                        array (
                          'description' => '报警规则名称。',
                          'type' => 'string',
                          'example' => 'ECS_Rule',
                        ),
                        'RuleId' => 
                        array (
                          'description' => '报警规则ID。',
                          'type' => 'string',
                          'example' => 'applyTemplate61dc81b5-d357-4cf6-a9b7-9f83c1d5****',
                        ),
                        'LastTime' => 
                        array (
                          'description' => '报警持续的时间。单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '360133',
                        ),
                        'Value' => 
                        array (
                          'description' => '出现报警或报警恢复时的监控值。',
                          'type' => 'string',
                          'example' => '10.58',
                        ),
                        'Expression' => 
                        array (
                          'description' => '报警触发的表达式。',
                          'type' => 'string',
                          'example' => '$Average>=10',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '应用分组ID。',
                          'type' => 'string',
                          'example' => '7671****',
                        ),
                        'AlertTime' => 
                        array (
                          'description' => '报警推送的时间戳。单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1640586600000',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => 'i-bp1cqhiw1za2****',
                        ),
                        'Dimensions' => 
                        array (
                          'description' => '报警的资源。',
                          'type' => 'string',
                          'example' => '{\\"instanceId\\":\\"i-bp1cqhiw1za2****\\"}',
                        ),
                        'Level' => 
                        array (
                          'description' => '报警的级别和通知方式。取值：

<props="china">- P2：电话+短信+邮件+钉钉机器人。</props>

<props="china">- P3：短信+邮件+钉钉机器人。</props>

<props="china">- P4：邮件+钉钉机器人。</props>

<props="china">- OK：无报警。</props>

<props="intl">- P4：邮件+钉钉机器人。</props>

<props="intl">- OK：无报警。</props>

<props="partner">- P4：邮件+钉钉机器人。</props>

<props="partner">- OK：无报警。</props>
',
                          'type' => 'string',
                          'example' => 'P4',
                        ),
                        'Contacts' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Contact' => 
                            array (
                              'description' => '报警联系人。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '报警联系人。',
                                'type' => 'string',
                                'example' => 'Alice',
                              ),
                            ),
                          ),
                        ),
                        'ContactALIIMs' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ContactALIIM' => 
                            array (
                              'description' => '报警联系人的旺旺号。

> 该参数仅适用于中国站。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '报警联系人的旺旺号。

> 该参数仅适用于中国站。',
                                'type' => 'string',
                                'example' => 'username@example.com',
                              ),
                            ),
                          ),
                        ),
                        'ContactMails' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ContactMail' => 
                            array (
                              'description' => '报警联系人的邮箱地址。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '报警联系人的邮箱地址。',
                                'type' => 'string',
                                'example' => 'username@example.com',
                              ),
                            ),
                          ),
                        ),
                        'ContactSmses' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ContactSms' => 
                            array (
                              'description' => '报警联系人的手机号码。

> 该参数仅适用于中国站。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '报警联系人的手机号码。

> 该参数仅适用于中国站。',
                                'type' => 'string',
                                'example' => '13900009999',
                              ),
                            ),
                          ),
                        ),
                        'ContactGroups' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ContactGroup' => 
                            array (
                              'description' => '报警联系人组。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '报警联系人组。',
                                'type' => 'string',
                                'example' => 'ECS_Group',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        204 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError ',
            'errorMessage' => 'The request processing has failed due to some unknown error. ',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'substitutions' => 
        array (
          0 => 'Cms::2019-01-01::DescribeAlertLogList',
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"C3C69FBE-2262-541F-A409-C52F380BAE63\\",\\n  \\"Total\\": \\"2\\",\\n  \\"Success\\": true,\\n  \\"AlarmHistoryList\\": {\\n    \\"AlarmHistory\\": [\\n      {\\n        \\"Status\\": 2,\\n        \\"MetricName\\": \\"cpu_total\\",\\n        \\"EvaluationCount\\": 3,\\n        \\"State\\": \\"ALARM\\",\\n        \\"Namespace\\": \\"acs_ecs_dashboard\\",\\n        \\"Webhooks\\": \\"https://www.aliyun.com\\",\\n        \\"RuleName\\": \\"ECS_Rule\\",\\n        \\"RuleId\\": \\"applyTemplate61dc81b5-d357-4cf6-a9b7-9f83c1d5****\\",\\n        \\"LastTime\\": 360133,\\n        \\"Value\\": \\"10.58\\",\\n        \\"Expression\\": \\"$Average>=10\\",\\n        \\"GroupId\\": \\"7671****\\",\\n        \\"AlertTime\\": 1640586600000,\\n        \\"InstanceName\\": \\"i-bp1cqhiw1za2****\\",\\n        \\"Dimensions\\": \\"{\\\\\\\\\\\\\\"instanceId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"i-bp1cqhiw1za2****\\\\\\\\\\\\\\"}\\",\\n        \\"Level\\": \\"P4\\",\\n        \\"Contacts\\": {\\n          \\"Contact\\": [\\n            \\"Alice\\"\\n          ]\\n        },\\n        \\"ContactALIIMs\\": {\\n          \\"ContactALIIM\\": [\\n            \\"username@example.com\\"\\n          ]\\n        },\\n        \\"ContactMails\\": {\\n          \\"ContactMail\\": [\\n            \\"username@example.com\\"\\n          ]\\n        },\\n        \\"ContactSmses\\": {\\n          \\"ContactSms\\": [\\n            \\"13900009999\\"\\n          ]\\n        },\\n        \\"ContactGroups\\": {\\n          \\"ContactGroup\\": [\\n            \\"ECS_Group\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeAlertHistoryListResponse>\\r\\n\\t<AlarmHistoryList>\\r\\n\\t\\t<AlarmHistory>\\r\\n\\t\\t\\t<Status>2</Status>\\r\\n\\t\\t\\t<ContactGroups>\\r\\n\\t\\t\\t\\t<ContactGroup>ECS_Group</ContactGroup>\\r\\n\\t\\t\\t</ContactGroups>\\r\\n\\t\\t\\t<RuleId>applyTemplate61dc81b5-d357-4cf6-a9b7-9f83c1d5****</RuleId>\\r\\n\\t\\t\\t<Dimensions>{\\\\\\"instanceId\\\\\\":\\\\\\"i-bp1cqhiw1za2****\\\\\\"}</Dimensions>\\r\\n\\t\\t\\t<EvaluationCount>3</EvaluationCount>\\r\\n\\t\\t\\t<ContactMails></ContactMails>\\r\\n\\t\\t\\t<ContactSmses></ContactSmses>\\r\\n\\t\\t\\t<Namespace>acs_ecs_dashboard</Namespace>\\r\\n\\t\\t\\t<AlertTime>1640586600000</AlertTime>\\r\\n\\t\\t\\t<GroupId>7671****</GroupId>\\r\\n\\t\\t\\t<InstanceName>i-bp1cqhiw1za2****</InstanceName>\\r\\n\\t\\t\\t<MetricName>cpu_total</MetricName>\\r\\n\\t\\t\\t<Contacts></Contacts>\\r\\n\\t\\t\\t<Expression>$Average>=10</Expression>\\r\\n\\t\\t\\t<State>ALARM</State>\\r\\n\\t\\t\\t<Value>10.58</Value>\\r\\n\\t\\t\\t<Level>P4</Level>\\r\\n\\t\\t\\t<PreLevel>P4</PreLevel>\\r\\n\\t\\t\\t<LastTime>360133</LastTime>\\r\\n\\t\\t\\t<RuleName>ECS_Rule</RuleName>\\r\\n\\t\\t\\t<ContactALIIMs></ContactALIIMs>\\r\\n\\t\\t</AlarmHistory>\\r\\n\\t\\t<AlarmHistory>\\r\\n\\t\\t\\t<Status>0</Status>\\r\\n\\t\\t\\t<ContactGroups>\\r\\n\\t\\t\\t\\t<ContactGroup>ECS_Group</ContactGroup>\\r\\n\\t\\t\\t</ContactGroups>\\r\\n\\t\\t\\t<RuleId>applyTemplate61dc81b5-d357-4cf6-a9b7-9f83****</RuleId>\\r\\n\\t\\t\\t<Dimensions>{\\\\\\"instanceId\\\\\\":\\\\\\"i-bp1cqhiw1za2807s****\\\\\\"}</Dimensions>\\r\\n\\t\\t\\t<EvaluationCount>3</EvaluationCount>\\r\\n\\t\\t\\t<ContactMails></ContactMails>\\r\\n\\t\\t\\t<ContactSmses></ContactSmses>\\r\\n\\t\\t\\t<Namespace>acs_ecs_dashboard</Namespace>\\r\\n\\t\\t\\t<AlertTime>1640586540000</AlertTime>\\r\\n\\t\\t\\t<GroupId>7671****</GroupId>\\r\\n\\t\\t\\t<InstanceName>i-bp1cqhiw1za2807s****</InstanceName>\\r\\n\\t\\t\\t<MetricName>cpu_total</MetricName>\\r\\n\\t\\t\\t<Contacts></Contacts>\\r\\n\\t\\t\\t<Expression>$Average>=10</Expression>\\r\\n\\t\\t\\t<State>ALARM</State>\\r\\n\\t\\t\\t<Value>10.13</Value>\\r\\n\\t\\t\\t<Level>P4</Level>\\r\\n\\t\\t\\t<LastTime>300085</LastTime>\\r\\n\\t\\t\\t<RuleName>ECS_Rule</RuleName>\\r\\n\\t\\t\\t<ContactALIIMs>\\r\\n\\t\\t\\t\\t<ContactALIIM>\\\\\\"username@example.com\\\\\\"</ContactALIIM>\\r\\n\\t\\t\\t</ContactALIIMs>\\r\\n\\t\\t</AlarmHistory>\\r\\n\\t</AlarmHistoryList>\\r\\n\\t<RequestId>C3C69FBE-2262-541F-A409-C52F380BAE63</RequestId>\\r\\n\\t<Total>2</Total>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeAlertHistoryListResponse>\\t","errorExample":""}]',
      'title' => '查询报警历史详情',
      'summary' => '调用DescribeAlertHistoryList接口查询报警历史详情。',
      'description' => '本API不再维护，推荐您使用[DescribeAlertLogList](~~201087~~)。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeAlertLogCount' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询报警历史的开始时间戳。

单位：毫秒。

您只能查询最近一年的报警历史，如果查询时间大于一年，则参数`AlertLogCount`的返回值为空。

> 开始时间（StartTime）和结束时间（EndTime）之间必须小于等于15天，并且需要同时填写或同时不填写。如果不填，则默认查询最近15分钟的报警历史。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1609988009694',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询报警历史的结束时间戳。

单位：毫秒。

您只能查询最近一年的报警历史，如果查询时间大于一年，则参数`AlertLogCount`的返回值为空。

> 开始时间（StartTime）和结束时间（EndTime）之间必须小于等于15天，并且需要同时填写或同时不填写。如果不填，则默认查询最近15分钟的报警历史。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1610074409694',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示记录条数。默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'SearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '统计报警历史的搜索关键字。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务的命名空间。

>关于云服务的命名空间，请参见[云服务监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        6 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '7301****',
          ),
        ),
        7 => 
        array (
          'name' => 'Product',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务名称缩写。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS',
          ),
        ),
        8 => 
        array (
          'name' => 'Level',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警的级别和通知方式。取值：

<props="china">- P2：电话+短信+邮件+钉钉机器人。</props>

<props="china">- P3：短信+邮件+钉钉机器人。</props>

<props="china">- P4：邮件+钉钉机器人。</props>

<props="china">- OK：无报警。</props>

<props="intl">- P4：邮件+钉钉机器人。</props>

<props="intl">- OK：无报警。</props>

<props="partner">- P4：邮件+钉钉机器人。</props>

<props="partner">- OK：无报警。</props>
',
            'type' => 'string',
            'required' => false,
            'example' => 'P4',
          ),
        ),
        9 => 
        array (
          'name' => 'SendStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警状态。取值：
- 0：发生报警或报警恢复正常。
- 1：非生效期。
- 2：通道沉默周期。
- 3：主机重启中。
- 4：不发送报警。

<props="china">当报警状态为0时，如果Level的取值为P2、P3或P4，则发生告警；如果Level的取值为OK，则报警恢复正常。</props>
<props="intl">当报警状态为0时，如果Level的取值为P4，则发生告警；如果Level的取值为OK，则报警恢复正常。</props>
<props="partner">当报警状态为0时，如果Level的取值为P4，则发生告警；如果Level的取值为OK，则报警恢复正常。</props>',
            'type' => 'string',
            'required' => false,
            'example' => '0',
          ),
        ),
        10 => 
        array (
          'name' => 'ContactGroup',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系人组。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS_Group',
          ),
        ),
        11 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test123',
          ),
        ),
        12 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项名称。

>关于云服务的监控项，请参见[云服务监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'cpu_total',
          ),
        ),
        13 => 
        array (
          'name' => 'LastMin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取日志的周期。单位：分钟。',
            'type' => 'string',
            'required' => false,
            'example' => '360',
          ),
        ),
        14 => 
        array (
          'name' => 'GroupBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对数据进行空间维度聚合，相当于SQL中的Group By。取值：
- `product`：按照云服务统计。
- `level`：按照报警级别统计。
- `groupId`：按照应用分组统计。
- `contactGroup`：按照报警联系人组统计。
- `product,metricName`：按照云服务和监控项统计。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'product',
          ),
        ),
        15 => 
        array (
          'name' => 'SourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该参数已废弃，无需关注。',
            'type' => 'string',
            'required' => false,
            'example' => '无',
          ),
        ),
        16 => 
        array (
          'name' => 'EventType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '告警类型。取值：

- TRIGGERED：告警触发。

- RESOLVED：告警恢复。',
            'type' => 'string',
            'required' => false,
            'example' => 'TRIGGERED',
          ),
        ),
        17 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。


关于如何获取报警规则ID，请参见[DescribeMetricRuleList](~~114941~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'bfae2ca5b4e07d2c7278772e***********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1C4A3709-BF52-42EE-87B5-7435F0929585',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AlertLogCount' => 
              array (
                'description' => '报警历史数量统计。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Count' => 
                    array (
                      'description' => '报警历史统计的数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'Logs' => 
                    array (
                      'description' => '报警历史统计的数量详情。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Name' => 
                          array (
                            'description' => '报警历史统计的字段名称。',
                            'type' => 'string',
                            'example' => 'product',
                          ),
                          'Value' => 
                          array (
                            'description' => '报警历史统计的字段值。',
                            'type' => 'string',
                            'example' => 'ECS',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"1C4A3709-BF52-42EE-87B5-7435F0929585\\",\\n  \\"Success\\": true,\\n  \\"AlertLogCount\\": [\\n    {\\n      \\"Count\\": 1,\\n      \\"Logs\\": [\\n        {\\n          \\"Name\\": \\"product\\",\\n          \\"Value\\": \\"ECS\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeAlertLogCountResponse>\\r\\n\\t<RequestId>0BA67F6D-B699-4E3F-B205-93A5C38A0A2E</RequestId>\\r\\n\\t<AlertLogCount>\\r\\n\\t\\t<Count>1</Count>\\r\\n\\t\\t<Logs>\\r\\n\\t\\t\\t<Value>ECS</Value>\\r\\n\\t\\t\\t<Name>product</Name>\\r\\n\\t\\t</Logs>\\r\\n\\t</AlertLogCount>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeAlertLogCountResponse>\\t","errorExample":""}]',
      'title' => '统计报警历史',
      'summary' => '调用DescribeAlertLogCount接口统计报警历史。',
      'description' => '该接口只能统计到最近一年的报警历史。

本文将提供一个示例，从云服务`product`维度查询ECS的报警统计历史。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeAlertLogList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询报警历史的开始时间戳。

单位：毫秒。

您只能查询最近一年的报警历史，如果查询时间大于一年，则参数`AlertLogList`的返回值为空。

> 开始时间（`StartTime`）和结束时间（`EndTime`）之间必须小于等于15天，并且需要同时填写或同时不填写。如果不填，则默认查询最近15分钟的报警历史。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1609988009694',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询报警历史的结束时间戳。

单位：毫秒。

您只能查询最近一年的报警历史，如果查询时间大于一年，则参数`AlertLogList`的返回值为空。

> 开始时间（`StartTime`）和结束时间（`EndTime`）之间必须小于等于15天，并且需要同时填写或同时不填写。如果不填，则默认查询最近15分钟的报警历史。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1610074409694',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小。

默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'SearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询报警历史的搜索关键字。',
            'type' => 'string',
            'required' => false,
            'example' => 'alert',
          ),
        ),
        5 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '7301****',
          ),
        ),
        6 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的命名空间。

> 关于云产品的命名空间，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        7 => 
        array (
          'name' => 'Product',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品名称缩写。

关于如何获取云产品名称缩写，请参见[DescribeProductsOfActiveMetricRule](~~114930~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS',
          ),
        ),
        8 => 
        array (
          'name' => 'Level',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警的级别和通知方式。取值：

<props="china">- P2：电话+短信+邮件+钉钉机器人。</props>

<props="china">- P3：短信+邮件+钉钉机器人。</props>

<props="china">- P4：邮件+钉钉机器人。</props>

<props="china">- OK：无报警。</props>

<props="intl">- P4：邮件+钉钉机器人。</props>

<props="intl">- OK：无报警。</props>

<props="partner">- P4：邮件+钉钉机器人。</props>

<props="partner">- OK：无报警。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'P4',
          ),
        ),
        9 => 
        array (
          'name' => 'SendStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警状态。取值：
- 0：发生报警或报警恢复正常。
- 1：非生效期。
- 2：通道沉默周期。
- 3：主机重启中。
- 4：不发送报警。

<props="china">当报警状态为0时，如果Level的取值为P2、P3或P4，则发生告警；如果Level的取值为OK，则报警恢复正常。</props>
<props="intl">当报警状态为0时，如果Level的取值为P4，则发生告警；如果Level的取值为OK，则报警恢复正常。</props>
<props="partner">当报警状态为0时，如果Level的取值为P4，则发生告警；如果Level的取值为OK，则报警恢复正常。</props>',
            'type' => 'string',
            'required' => false,
            'example' => '0',
          ),
        ),
        10 => 
        array (
          'name' => 'ContactGroup',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系人组。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS_Group',
          ),
        ),
        11 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test123',
          ),
        ),
        12 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项名称。

>关于云产品的监控项，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'IntranetInRate',
          ),
        ),
        13 => 
        array (
          'name' => 'LastMin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取日志的周期。单位：分钟。',
            'type' => 'string',
            'required' => false,
            'example' => '360',
          ),
        ),
        14 => 
        array (
          'name' => 'GroupBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对数据进行空间维度聚合，相当于SQL中的Group By。取值：
- `product`：按照云产品统计。
- `level`：按照报警级别统计。
- `groupId`：按照应用分组统计。
- `contactGroup`：按照报警联系人组统计。
- `product,metricName`：按照云产品和监控项统计。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'product',
          ),
        ),
        15 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。

关于如何查询报警规则ID，请参见[DescribeMetricRuleList](~~114941~~)。
',
            'type' => 'string',
            'required' => false,
            'example' => 'bc369e8_30f87e517ed2fc****',
          ),
        ),
        16 => 
        array (
          'name' => 'SourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则类型。取值：METRIC，表示时序指标报警规则。',
            'type' => 'string',
            'required' => false,
            'example' => 'METRIC',
          ),
        ),
        17 => 
        array (
          'name' => 'EventType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '告警类型。取值：

- TRIGGERED：告警触发。

- RESOLVED：告警恢复。',
            'type' => 'string',
            'required' => false,
            'example' => 'TRIGGERED',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1C4A3709-BF52-42EE-87B5-7435F0929585',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'AlertLogList' => 
              array (
                'description' => '报警历史列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MetricName' => 
                    array (
                      'description' => '监控项名称。',
                      'type' => 'string',
                      'example' => 'cpu_total',
                    ),
                    'EventName' => 
                    array (
                      'description' => '事件名称。',
                      'type' => 'string',
                      'example' => 'IOHang',
                    ),
                    'Product' => 
                    array (
                      'description' => '云产品标识。取值：

- 如果是阿里云产品，则为云产品名称缩写，例如：ECS。

- 如果非阿里云产品，则为`acs_产品关键字`，例如：acs_networkmonitor。',
                      'type' => 'string',
                      'example' => 'ECS',
                    ),
                    'BlackListUUID' => 
                    array (
                      'description' => '命中的报警黑名单UUID。',
                      'type' => 'string',
                      'example' => '8410dbbd-7d30-41c5-94cb-****',
                    ),
                    'Message' => 
                    array (
                      'description' => '报警相关信息，为一个JSON串。',
                      'type' => 'string',
                      'example' => '{"alertName":"e47aa0ac-4076-44db-a47d-d1083968****_Availability"}',
                    ),
                    'Namespace' => 
                    array (
                      'description' => '云产品的命名空间。',
                      'type' => 'string',
                      'example' => 'acs_ecs_dashboard',
                    ),
                    'LevelChange' => 
                    array (
                      'description' => '报警级别的变更。取值：
- `P4->OK`：由P4级别报警到报警恢复。
- `P4->P4`：P4级别报警。',
                      'type' => 'string',
                      'example' => 'P4->OK',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '资源ID。',
                      'type' => 'string',
                      'example' => 'i-m5e1qg6uo38rztr4****',
                    ),
                    'RuleName' => 
                    array (
                      'description' => '报警规则名称。',
                      'type' => 'string',
                      'example' => 'CPU使用率',
                    ),
                    'RuleId' => 
                    array (
                      'description' => '报警规则ID。',
                      'type' => 'string',
                      'example' => 'd582b9e9-b1c1-4f17-9279-0fe7333a****_ResponseTime',
                    ),
                    'BlackListName' => 
                    array (
                      'description' => '命中的报警黑名单名称。',
                      'type' => 'string',
                      'example' => 'Black_Test',
                    ),
                    'GroupName' => 
                    array (
                      'description' => '应用分组名称。',
                      'type' => 'string',
                      'example' => 'ECS_Instances',
                    ),
                    'GroupId' => 
                    array (
                      'description' => '应用分组ID。',
                      'type' => 'string',
                      'example' => '7301****',
                    ),
                    'AlertTime' => 
                    array (
                      'description' => '发生报警的时间戳。

单位：毫秒。',
                      'type' => 'string',
                      'example' => '1610043776621',
                    ),
                    'InstanceName' => 
                    array (
                      'description' => '资源名称。',
                      'type' => 'string',
                      'example' => 'portalHost',
                    ),
                    'BlackListDetail' => 
                    array (
                      'description' => '命中的报警黑名单详情。',
                      'type' => 'string',
                      'example' => '{"id":12****,"metricProject":"acs_ecs_dashboard","userId":173651113438****,"uuid":"8410dbbd-7d30-41c5-94cb-****","name":"alert-****","productCategory":"ecs","instances":[{"instanceId":"i-m5e1qg6uo38rztr4****"}],"metrics":null,"scopeType":"USER","scopeValue":"","startTime":"0001-01-01T00:00:00Z","endTime":"9999-12-31T23:59:59.999999999+08:00","effectiveTime":null,"isEnable":true,"status":1,"gmtCreate":"2021-11-02T16:35:59+08:00","gmtModified":"2021-11-02T16:35:59+08:00","loadTime":"2021-11-02T16:36:15.213072177+08:00"}',
                    ),
                    'Level' => 
                    array (
                      'description' => '报警级别和报警通知方式。取值：

<props="china">- P2：电话+短信+邮件+钉钉机器人。</props>

<props="china">- P3：短信+邮件+钉钉机器人。</props>

<props="china">- P4：邮件+钉钉机器人。</props>

<props="china">- OK：无报警。</props>

<props="intl">- P4：邮件+钉钉机器人。</props>

<props="intl">- OK：无报警。</props>

<props="partner">- P4：邮件+钉钉机器人。</props>

<props="partner">- OK：无报警。</props>',
                      'type' => 'string',
                      'example' => 'P4',
                    ),
                    'SendStatus' => 
                    array (
                      'description' => '报警状态。取值：
- 0：发生报警或报警恢复正常。
- 1：非生效期。
- 2：通道沉默周期。
- 3：主机重启中。
- 4：不发送报警。

<props="china">当报警状态为0时，如果Level的取值为P2、P3或P4，则发生告警；如果Level的取值为OK，则报警恢复正常。</props>
<props="intl">当报警状态为0时，如果Level的取值为P4，则发生告警；如果Level的取值为OK，则报警恢复正常。</props>
<props="partner">当报警状态为0时，如果Level的取值为P4，则发生告警；如果Level的取值为OK，则报警恢复正常。</props>',
                      'type' => 'string',
                      'example' => '0',
                    ),
                    'ExtendedInfo' => 
                    array (
                      'description' => '报警的扩展信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '无。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Name' => 
                          array (
                            'description' => '扩展字段名称。',
                            'type' => 'string',
                            'example' => 'userId',
                          ),
                          'Value' => 
                          array (
                            'description' => '扩展字段值。',
                            'type' => 'string',
                            'example' => '100931896542****',
                          ),
                        ),
                      ),
                    ),
                    'Dimensions' => 
                    array (
                      'description' => '报警资源的维度。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '无。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '报警资源的Key。',
                            'type' => 'string',
                            'example' => 'instanceId',
                          ),
                          'Value' => 
                          array (
                            'description' => '报警资源的Value。',
                            'type' => 'string',
                            'example' => 'i-m5e1qg6uo38rztr4****',
                          ),
                        ),
                      ),
                    ),
                    'WebhookList' => 
                    array (
                      'description' => '报警回调的URL地址列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '无。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'code' => 
                          array (
                            'description' => '报警回调的状态码。',
                            'type' => 'string',
                            'example' => '200',
                          ),
                          'url' => 
                          array (
                            'description' => '报警回调的URL地址。',
                            'type' => 'string',
                            'example' => 'https://www.aliyun.com/webhook.html',
                          ),
                          'message' => 
                          array (
                            'description' => '报警回调的返回信息。',
                            'type' => 'string',
                            'example' => 'success',
                          ),
                        ),
                      ),
                    ),
                    'DingdingWebhookList' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '报警联系人的Webhook地址列表。',
                        'type' => 'string',
                        'example' => 'https://oapi.dingtalk.com/robot/send?access_token=b7ff24032da1a5f86659ecda46797e13cc1d4e4da6903d7b014ea1d1488b****',
                      ),
                    ),
                    'ContactOnCallList' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '报警联系人的电话通知列表。

> 该参数仅适用于中国站。',
                        'type' => 'string',
                        'example' => '1368888****',
                      ),
                    ),
                    'ContactMailList' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '报警联系人的邮件列表。',
                        'type' => 'string',
                        'example' => 'username@example.com',
                      ),
                    ),
                    'ContactGroups' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '报警联系人组。',
                        'type' => 'string',
                        'example' => 'ECS_Group',
                      ),
                    ),
                    'ContactALIIWWList' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '报警联系人的旺旺列表。

> 该参数仅适用于中国站。',
                        'type' => 'string',
                        'example' => 'Alice',
                      ),
                    ),
                    'ContactSMSList' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '报警联系人的短信通知列表。

> 该参数仅适用于中国站。',
                        'type' => 'string',
                        'example' => '1368888****',
                      ),
                    ),
                    'ContactDingList' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '报警联系人的钉钉列表。',
                        'type' => 'string',
                        'example' => 'CloudMonitor',
                      ),
                    ),
                    'SendDetail' => 
                    array (
                      'description' => '报警推送结果详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ResultCode' => 
                        array (
                          'description' => '报警信息推送状态。

- success：推送成功。

- 错误码：当配置错误时，无推送列表，显示错误码。',
                          'type' => 'string',
                          'example' => 'success',
                        ),
                        'ChannelResultList' => 
                        array (
                          'description' => '按报警渠道推送的报警结果列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Channel' => 
                              array (
                                'description' => '报警推送渠道。取值：

- MAIL：邮件。

- SMS：短信。

- WEBHOOK：报警回调。

- SLS：日志服务。

- ONCALL：电话。

- FC：函数计算

- MNS：消息队列。',
                                'type' => 'string',
                                'example' => 'MAIL',
                              ),
                              'ResultList' => 
                              array (
                                'description' => '云监控向报警渠道发送的报警信息结果列表。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'Code' => 
                                    array (
                                      'description' => '状态码。

- 当`Channel`为`WEBHOOK`时，状态码为200或500。

- 当`Channel`为`MAIL`、`SMS`、`SLS`、`ONCALL`、`FC`和`MNS`时，无该参数，或该参数为空。',
                                      'type' => 'string',
                                      'example' => '200',
                                    ),
                                    'RequestId' => 
                                    array (
                                      'description' => '调用其他云产品返回的请求ID。',
                                      'type' => 'string',
                                      'example' => '0BDAF8A8-04DC-5F0C-90E4-724D42C4****',
                                    ),
                                    'Success' => 
                                    array (
                                      'description' => '调用目标的结果

- true  成功

- false  失败',
                                      'type' => 'boolean',
                                      'example' => 'true',
                                    ),
                                    'Detail' => 
                                    array (
                                      'description' => '返回结果详情。',
                                      'type' => 'string',
                                      'example' => '{ }',
                                    ),
                                    'notifyTargetList' => 
                                    array (
                                      'type' => 'array',
                                      'items' => 
                                      array (
                                        'description' => '渠道通知列表。',
                                        'type' => 'string',
                                        'example' => 'MAIL',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'Escalation' => 
                    array (
                      'description' => '触发报警的规则。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Expression' => 
                        array (
                          'description' => '触发报警的规则描述。

> 报警规则的主体，当监控数据满足报警条件时，触发报警规则。',
                          'type' => 'string',
                          'example' => '$Average<90',
                        ),
                        'Times' => 
                        array (
                          'description' => '报警重试次数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Level' => 
                        array (
                          'description' => '报警级别和报警通知方式。取值：

<props="china">- P2：电话+短信+邮件+钉钉机器人。</props>

<props="china">- P3：短信+邮件+钉钉机器人。</props>

<props="china">- P4：邮件+钉钉机器人。</props>

<props="china">- OK：无报警。</props>

<props="intl">- P4：邮件+钉钉机器人。</props>

<props="intl">- OK：无报警。</props>

<props="partner">- P4：邮件+钉钉机器人。</props>

<props="partner">- OK：无报警。</props>',
                          'type' => 'string',
                          'example' => 'P4',
                        ),
                      ),
                    ),
                    'SendResultList' => 
                    array (
                      'description' => '报警的发送结果列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '报警的发送结果列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '发送报警渠道。取值：
- MAIL：邮件。
- ALIIM：旺旺。
- SMS：短信。
- CALL：电话。
- DING：钉钉机器人。
- Merged：报警合并。',
                            'type' => 'string',
                            'example' => 'MAIL',
                          ),
                          'Value' => 
                          array (
                            'description' => '报警渠道对应的通知对象。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '报警渠道对应的通知对象。',
                              'type' => 'string',
                              'example' => 'username@example.com',
                            ),
                          ),
                        ),
                      ),
                    ),
                    'LogId' => 
                    array (
                      'description' => '日志ID。',
                      'type' => 'string',
                      'example' => '7510****::e8a472a0-46ae-4ac0-84b1-e46be368****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1C4A3709-BF52-42EE-87B5-7435F0929585\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"AlertLogList\\": [\\n    {\\n      \\"MetricName\\": \\"cpu_total\\",\\n      \\"EventName\\": \\"IOHang\\",\\n      \\"Product\\": \\"ECS\\",\\n      \\"BlackListUUID\\": \\"8410dbbd-7d30-41c5-94cb-****\\",\\n      \\"Message\\": \\"{\\\\\\"alertName\\\\\\":\\\\\\"e47aa0ac-4076-44db-a47d-d1083968****_Availability\\\\\\"}\\",\\n      \\"Namespace\\": \\"acs_ecs_dashboard\\",\\n      \\"LevelChange\\": \\"P4->OK\\",\\n      \\"InstanceId\\": \\"i-m5e1qg6uo38rztr4****\\",\\n      \\"RuleName\\": \\"CPU使用率\\",\\n      \\"RuleId\\": \\"d582b9e9-b1c1-4f17-9279-0fe7333a****_ResponseTime\\",\\n      \\"BlackListName\\": \\"Black_Test\\",\\n      \\"GroupName\\": \\"ECS_Instances\\",\\n      \\"GroupId\\": \\"7301****\\",\\n      \\"AlertTime\\": \\"1610043776621\\",\\n      \\"InstanceName\\": \\"portalHost\\",\\n      \\"BlackListDetail\\": \\"{\\\\\\"id\\\\\\":12****,\\\\\\"metricProject\\\\\\":\\\\\\"acs_ecs_dashboard\\\\\\",\\\\\\"userId\\\\\\":173651113438****,\\\\\\"uuid\\\\\\":\\\\\\"8410dbbd-7d30-41c5-94cb-****\\\\\\",\\\\\\"name\\\\\\":\\\\\\"alert-****\\\\\\",\\\\\\"productCategory\\\\\\":\\\\\\"ecs\\\\\\",\\\\\\"instances\\\\\\":[{\\\\\\"instanceId\\\\\\":\\\\\\"i-m5e1qg6uo38rztr4****\\\\\\"}],\\\\\\"metrics\\\\\\":null,\\\\\\"scopeType\\\\\\":\\\\\\"USER\\\\\\",\\\\\\"scopeValue\\\\\\":\\\\\\"\\\\\\",\\\\\\"startTime\\\\\\":\\\\\\"0001-01-01T00:00:00Z\\\\\\",\\\\\\"endTime\\\\\\":\\\\\\"9999-12-31T23:59:59.999999999+08:00\\\\\\",\\\\\\"effectiveTime\\\\\\":null,\\\\\\"isEnable\\\\\\":true,\\\\\\"status\\\\\\":1,\\\\\\"gmtCreate\\\\\\":\\\\\\"2021-11-02T16:35:59+08:00\\\\\\",\\\\\\"gmtModified\\\\\\":\\\\\\"2021-11-02T16:35:59+08:00\\\\\\",\\\\\\"loadTime\\\\\\":\\\\\\"2021-11-02T16:36:15.213072177+08:00\\\\\\"}\\",\\n      \\"Level\\": \\"P4\\",\\n      \\"SendStatus\\": \\"0\\",\\n      \\"ExtendedInfo\\": [\\n        {\\n          \\"Name\\": \\"userId\\",\\n          \\"Value\\": \\"100931896542****\\"\\n        }\\n      ],\\n      \\"Dimensions\\": [\\n        {\\n          \\"Key\\": \\"instanceId\\",\\n          \\"Value\\": \\"i-m5e1qg6uo38rztr4****\\"\\n        }\\n      ],\\n      \\"WebhookList\\": [\\n        {\\n          \\"code\\": \\"200\\",\\n          \\"url\\": \\"https://www.aliyun.com/webhook.html\\",\\n          \\"message\\": \\"success\\"\\n        }\\n      ],\\n      \\"DingdingWebhookList\\": [\\n        \\"https://oapi.dingtalk.com/robot/send?access_token=b7ff24032da1a5f86659ecda46797e13cc1d4e4da6903d7b014ea1d1488b****\\"\\n      ],\\n      \\"ContactOnCallList\\": [\\n        \\"1368888****\\"\\n      ],\\n      \\"ContactMailList\\": [\\n        \\"username@example.com\\"\\n      ],\\n      \\"ContactGroups\\": [\\n        \\"ECS_Group\\"\\n      ],\\n      \\"ContactALIIWWList\\": [\\n        \\"Alice\\"\\n      ],\\n      \\"ContactSMSList\\": [\\n        \\"1368888****\\"\\n      ],\\n      \\"ContactDingList\\": [\\n        \\"CloudMonitor\\"\\n      ],\\n      \\"SendDetail\\": {\\n        \\"ResultCode\\": \\"success\\",\\n        \\"ChannelResultList\\": [\\n          {\\n            \\"Channel\\": \\"MAIL\\",\\n            \\"ResultList\\": [\\n              {\\n                \\"Code\\": \\"200\\",\\n                \\"RequestId\\": \\"0BDAF8A8-04DC-5F0C-90E4-724D42C4****\\",\\n                \\"Success\\": true,\\n                \\"Detail\\": \\"{ }\\",\\n                \\"notifyTargetList\\": [\\n                  \\"MAIL\\"\\n                ]\\n              }\\n            ]\\n          }\\n        ]\\n      },\\n      \\"Escalation\\": {\\n        \\"Expression\\": \\"$Average<90\\",\\n        \\"Times\\": 1,\\n        \\"Level\\": \\"P4\\"\\n      },\\n      \\"SendResultList\\": [\\n        {\\n          \\"Key\\": \\"MAIL\\",\\n          \\"Value\\": [\\n            \\"username@example.com\\"\\n          ]\\n        }\\n      ],\\n      \\"LogId\\": \\"7510****::e8a472a0-46ae-4ac0-84b1-e46be368****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeAlertLogListResponse>\\r\\n\\t<AlertLogList>\\r\\n\\t\\t<GroupName></GroupName>\\r\\n\\t\\t<Message>{\\\\\\"alertName\\\\\\":\\\\\\"d582b9e9-b1c1-4f17-9279-0fe7333a****_ResponseTime\\\\\\",\\\\\\"curLevel\\\\\\":\\\\\\"OK\\\\\\",\\\\\\"dimensions\\\\\\":{\\\\\\"taskId\\\\\\":\\\\\\"d582b9e9-b1c1-4f17-9279-0fe7333a****\\\\\\",\\\\\\"userId\\\\\\":\\\\\\"127067667954****\\\\\\"},\\\\\\"escalation\\\\\\":{\\\\\\"expression\\\\\\":\\\\\\"$Average>=800\\\\\\",\\\\\\"level\\\\\\":P4,\\\\\\"tag\\\\\\":\\\\\\"P4\\\\\\",\\\\\\"times\\\\\\":1}</Message>\\r\\n\\t\\t<RuleId>d582b9e9-b1c1-4f17-9279-0fe7****_ResponseTime</RuleId>\\r\\n\\t\\t<Escalation>\\r\\n\\t\\t\\t<Expression>$Average>=800</Expression>\\r\\n\\t\\t\\t<Times>1</Times>\\r\\n\\t\\t\\t<Level>P4</Level>\\r\\n\\t\\t</Escalation>\\r\\n\\t\\t<SendStatus>0</SendStatus>\\r\\n\\t\\t<Product>acs_ecs_dashboard</Product>\\r\\n\\t\\t<MetricName>cpu_total</MetricName>\\r\\n\\t\\t<RuleName>CPU使用率</RuleName>\\r\\n\\t\\t<ContactGroups>ECS_Group</ContactGroups>\\r\\n\\t\\t<InstanceId></InstanceId>\\r\\n\\t\\t<LevelChange>P4->OK</LevelChange>\\r\\n\\t\\t<Dimensions>\\r\\n\\t\\t\\t<Value>100931896542****</Value>\\r\\n\\t\\t\\t<Key>userId</Key>\\r\\n\\t\\t</Dimensions>\\r\\n\\t\\t<Dimensions>\\r\\n\\t\\t\\t<Value>i-abcdefgh12****</Value>\\r\\n\\t\\t\\t<Key>instanceId</Key>\\r\\n\\t\\t</Dimensions>\\r\\n\\t\\t<EventName>AlertOk</EventName>\\r\\n\\t\\t<ExtendedInfo>\\r\\n\\t\\t\\t<Value>i-hp34y1eiszazu49y****</Value>\\r\\n\\t\\t\\t<Name>instanceId</Name>\\r\\n\\t\\t</ExtendedInfo>\\r\\n\\t\\t<ExtendedInfo>\\r\\n\\t\\t\\t<Value>12706****</Value>\\r\\n\\t\\t\\t<Name>userId</Name>\\r\\n\\t\\t</ExtendedInfo>\\r\\n\\t\\t<Namespace>acs_ecs_dashboard</Namespace>\\r\\n\\t\\t<AlertTime>1610085521564</AlertTime>\\r\\n\\t\\t<GroupId>7301****</GroupId>\\r\\n\\t\\t<InstanceName>portalHost</InstanceName>\\r\\n\\t\\t<Level>OK</Level>\\r\\n\\t</AlertLogList>\\r\\n\\t<RequestId>6FCB1AB7-57F7-4DDA-B14E-6468FAFE79D9</RequestId>\\r\\n\\t<PageSize>10</PageSize>\\r\\n\\t<PageNumber>1</PageNumber>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeAlertLogListResponse>\\t","errorExample":""}]',
      'title' => '查询报警历史',
      'summary' => '调用DescribeAlertLogList接口查询报警历史。',
      'description' => '该接口只能查询到最近一年的报警历史。

本文将提供一个示例，从云产品`product`维度查询云服务器ECS的报警历史。',
      'requestParamsDescription' => ' 关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeAlertLogHistogram' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询报警历史的开始时间戳。

单位：毫秒。

> - 您只能查询最近一年的报警历史。
> - 开始时间（`StartTime`）和结束时间（`EndTime`）之间必须小于等于15天。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1609988009694',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询报警历史的结束时间戳。

单位：毫秒。

> - 您只能查询最近一年的报警历史。
> - 开始时间（`StartTime`）和结束时间（`EndTime`）之间必须小于等于15天。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1609989009694',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示记录条数。

默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'SearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询报警历史的搜索关键字。',
            'type' => 'string',
            'required' => false,
            'example' => 'alert',
          ),
        ),
        5 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '7301****',
          ),
        ),
        6 => 
        array (
          'name' => 'Product',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务名称缩写。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS',
          ),
        ),
        7 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务的命名空间。

>关于云服务的命名空间，请参见[云服务监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        8 => 
        array (
          'name' => 'Level',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警的级别和通知方式。取值：

<props="china">- P2：电话+短信+邮件+钉钉机器人。</props>

<props="china">- P3：短信+邮件+钉钉机器人。</props>

<props="china">- P4：邮件+钉钉机器人。</props>

<props="china">- OK：无报警。</props>

<props="intl">- P4：邮件+钉钉机器人。</props>

<props="intl">- OK：无报警。</props>

<props="partner">- P4：邮件+钉钉机器人。</props>

<props="partner">- OK：无报警。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'P4',
          ),
        ),
        9 => 
        array (
          'name' => 'SendStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警状态。取值：
- 0：发生报警或报警恢复正常。
- 1：非生效期。
- 2：通道沉默周期。
- 3：主机重启中。
- 4：不发送报警。

<props="china">当报警状态为0时，如果Level的取值为P2、P3或P4，则发生告警；如果Level的取值为OK，则报警恢复正常。</props>
<props="intl">当报警状态为0时，如果Level的取值为P4，则发生告警；如果Level的取值为OK，则报警恢复正常。</props>
<props="partner">当报警状态为0时，如果Level的取值为P4，则发生告警；如果Level的取值为OK，则报警恢复正常。</props>',
            'type' => 'string',
            'required' => false,
            'example' => '0',
          ),
        ),
        10 => 
        array (
          'name' => 'ContactGroup',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系人组。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS_Group',
          ),
        ),
        11 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test123',
          ),
        ),
        12 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项名称。

>关于云服务的监控项，请参见[云服务监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'cpu_total',
          ),
        ),
        13 => 
        array (
          'name' => 'LastMin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取日志的周期。单位：分钟。',
            'type' => 'string',
            'required' => false,
            'example' => '360',
          ),
        ),
        14 => 
        array (
          'name' => 'GroupBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对数据进行空间维度聚合，相当于SQL中的Group By。取值：
- `product`：按照云服务统计。
- `level`：按照报警级别统计。
- `groupId`：按照应用分组统计。
- `contactGroup`：按照报警联系人组统计。
- `product,metricName`：按照云服务和监控项统计。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'product',
          ),
        ),
        15 => 
        array (
          'name' => 'SourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该参数已废弃，无需关注。',
            'type' => 'string',
            'required' => false,
            'example' => '无',
          ),
        ),
        16 => 
        array (
          'name' => 'EventType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '告警类型。取值：

- TRIGGERED：告警触发。
- RESOLVED：告警恢复。',
            'type' => 'string',
            'required' => false,
            'example' => 'RESOLVED',
          ),
        ),
        17 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。


关于如何获取报警规则ID，请参见[DescribeMetricRuleList](~~114941~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'ae06917_75a8c43178ab66****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1C4A3709-BF52-42EE-87B5-7435F0929585',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AlertLogHistogramList' => 
              array (
                'description' => '查询报警历史的直方图列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'From' => 
                    array (
                      'description' => '查询报警历史的开始时间戳。

单位：秒。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1610074791',
                    ),
                    'To' => 
                    array (
                      'description' => '查询报警历史的结束时间戳。

单位：秒。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1610074800',
                    ),
                    'Count' => 
                    array (
                      'description' => '报警历史的数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '20',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"1C4A3709-BF52-42EE-87B5-7435F0929585\\",\\n  \\"Success\\": true,\\n  \\"AlertLogHistogramList\\": [\\n    {\\n      \\"From\\": 1610074791,\\n      \\"To\\": 1610074800,\\n      \\"Count\\": 20\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeAlertLogHistogramResponse>\\n    <Code>200</Code>\\n    <Message>The specified resource is not found.</Message>\\n    <RequestId>1C4A3709-BF52-42EE-87B5-7435F0929585</RequestId>\\n    <Success>true</Success>\\n    <AlertLogHistogramList>\\n        <From>1610074791</From>\\n        <To>1610074800</To>\\n        <Count>20</Count>\\n    </AlertLogHistogramList>\\n</DescribeAlertLogHistogramResponse>","errorExample":""}]',
      'title' => '查询报警历史的直方图列表',
      'summary' => '调用DescribeAlertLogHistogram接口查询报警历史的直方图列表。',
      'description' => '本文将提供一个示例，从云服务`product`维度查询ECS报警历史的直方图列表。',
      'requestParamsDescription' => ' 关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeProductsOfActiveMetricRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F82E6667-7811-4BA0-842F-5B2DC42BBAAD',
              ),
              'Datapoints' => 
              array (
                'description' => '开通一键报警的云服务列表。云服务之间用英文逗号（,）分隔。取值：
 
- ecs：云服务器ECS。
- rds：云数据库RDS版。
- slb：负载均衡。
- redis_standard：云数据库Redis标准版。
- redis_sharding：云数据库Redis集群版。
- redis_splitrw：云数据库Redis读写分离版。
- mongodb：云数据库MongoDB版（副本集）。
- mongodb_sharding：云数据库MongoDB版（分片集群）。
- hbase：云数据库HBase版。
- elasticsearch：Elasticsearch。
- opensearch：OpenSearch。',
                'type' => 'string',
                'example' => 'ecs,rds',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AllProductInitMetricRuleList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AllProductInitMetricRule' => 
                  array (
                    'description' => '开通一键报警的云服务列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '开通一键报警的云服务列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Product' => 
                        array (
                          'description' => '阿里云服务缩写。',
                          'type' => 'string',
                          'example' => 'ecs',
                        ),
                        'AlertInitConfigList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AlertInitConfig' => 
                            array (
                              'description' => '初始化开通一键报警云服务的规则列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '初始化开通一键报警云服务的规则列表。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'MetricName' => 
                                  array (
                                    'description' => '监控项名称。详情请参见[云服务监控项](~~163515~~)。',
                                    'type' => 'string',
                                    'example' => 'cpu_total',
                                  ),
                                  'EvaluationCount' => 
                                  array (
                                    'description' => '报警重试次数。',
                                    'type' => 'string',
                                    'example' => '3',
                                  ),
                                  'Namespace' => 
                                  array (
                                    'description' => '指标所属空间。用于区分每个云服务配置。详情请参见[云服务监控项](~~163515~~)。',
                                    'type' => 'string',
                                    'example' => 'acs_rds_dashboard',
                                  ),
                                  'Threshold' => 
                                  array (
                                    'description' => '报警阈值。',
                                    'type' => 'string',
                                    'example' => '90',
                                  ),
                                  'Statistics' => 
                                  array (
                                    'description' => '报警统计方法。详情请参见[云服务监控项](~~163515~~)。',
                                    'type' => 'string',
                                    'example' => 'Average',
                                  ),
                                  'Period' => 
                                  array (
                                    'description' => '监控数据的聚合周期。单位：分钟。详情请参见[云服务监控项](~~163515~~)。',
                                    'type' => 'string',
                                    'example' => '1m',
                                  ),
                                  'Level' => 
                                  array (
                                    'description' => '报警级别。',
                                    'type' => 'string',
                                    'enumValueTitles' => 
                                    array (
                                      'INFO' => '信息',
                                      'WARN' => '警告',
                                      'CRITICAL' => '紧急',
                                    ),
                                    'example' => 'CRITICAL',
                                  ),
                                  'ComparisonOperator' => 
                                  array (
                                    'description' => '警告级别阈值比较符。',
                                    'type' => 'string',
                                    'enumValueTitles' => 
                                    array (
                                      'LessThanThreshold' => '小于',
                                      'GreaterThanLastWeek' => '同比上周同一时间上涨',
                                      'LessThanOrEqualToThreshold' => '小于等于',
                                      'NotEqualToThreshold' => '不等于',
                                      'GreaterThanLastPeriod' => '环比上周期上涨',
                                      'GreaterThanYesterday' => '同比昨天时间上涨',
                                      'LessThanYesterday' => '同比昨天时间下降',
                                      'LessThanLastWeek' => '同比上周同一时间下降',
                                      'GreaterThanOrEqualToThreshold' => '大于等于',
                                      'GreaterThanThreshold' => '大于',
                                      'LessThanLastPeriod' => '环比上周期下降',
                                    ),
                                    'example' => 'GreaterThanOrEqualToThreshold',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is not valid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'The Request is not authorization.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"F82E6667-7811-4BA0-842F-5B2DC42BBAAD\\",\\n  \\"Datapoints\\": \\"ecs,rds\\",\\n  \\"Success\\": true,\\n  \\"AllProductInitMetricRuleList\\": {\\n    \\"AllProductInitMetricRule\\": [\\n      {\\n        \\"Product\\": \\"ecs\\",\\n        \\"AlertInitConfigList\\": {\\n          \\"AlertInitConfig\\": [\\n            {\\n              \\"MetricName\\": \\"cpu_total\\",\\n              \\"EvaluationCount\\": \\"3\\",\\n              \\"Namespace\\": \\"acs_rds_dashboard\\",\\n              \\"Threshold\\": \\"90\\",\\n              \\"Statistics\\": \\"Average\\",\\n              \\"Period\\": \\"1m\\",\\n              \\"Level\\": \\"CRITICAL\\",\\n              \\"ComparisonOperator\\": \\"GreaterThanOrEqualToThreshold\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeProductsOfActiveMetricRuleResponse>\\r\\n\\t\\t<RequestId>A4FFAEFF-4225-4EF6-8F63-FAAA8F58289D</RequestId>\\r\\n\\t\\t<AllProductInitMetricRuleList>\\r\\n\\t\\t\\t<AllProductInitMetricRule>\\r\\n\\t\\t\\t\\t<AlertInitConfigList>\\r\\n\\t\\t\\t\\t\\t<AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>CPUUtilization</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<EvaluationCount>5</EvaluationCount>\\r\\n\\t\\t\\t\\t\\t\\t<Period>1m</Period>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Namespace>acs_ecs_dashboard</Namespace>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>95</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t<AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>vm.DiskUtilization</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<EvaluationCount>5</EvaluationCount>\\r\\n\\t\\t\\t\\t\\t\\t<Period>1m</Period>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Namespace>acs_ecs_dashboard</Namespace>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>95</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t<AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>vm.MemoryUtilization</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<EvaluationCount>5</EvaluationCount>\\r\\n\\t\\t\\t\\t\\t\\t<Period>1m</Period>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Namespace>acs_ecs_dashboard</Namespace>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>95</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t<AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>InternetOutRate_Percent</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<EvaluationCount>5</EvaluationCount>\\r\\n\\t\\t\\t\\t\\t\\t<Period>1m</Period>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Namespace>acs_ecs_dashboard</Namespace>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>95</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertInitConfig>\\r\\n\\t\\t\\t\\t</AlertInitConfigList>\\r\\n\\t\\t\\t\\t<Product>ecs</Product>\\r\\n\\t\\t\\t</AllProductInitMetricRule>\\r\\n\\t\\t\\t<AllProductInitMetricRule>\\r\\n\\t\\t\\t\\t<AlertInitConfigList>\\r\\n\\t\\t\\t\\t\\t<AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>CpuUsage</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<EvaluationCount>5</EvaluationCount>\\r\\n\\t\\t\\t\\t\\t\\t<Period>5m</Period>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Namespace>acs_rds_dashboard</Namespace>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>80</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t<AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>DiskUsage</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<EvaluationCount>5</EvaluationCount>\\r\\n\\t\\t\\t\\t\\t\\t<Period>5m</Period>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Namespace>acs_rds_dashboard</Namespace>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>80</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t<AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>IOPSUsage</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<EvaluationCount>5</EvaluationCount>\\r\\n\\t\\t\\t\\t\\t\\t<Period>5m</Period>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Namespace>acs_rds_dashboard</Namespace>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>80</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t<AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>ConnectionUsage</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<EvaluationCount>5</EvaluationCount>\\r\\n\\t\\t\\t\\t\\t\\t<Period>5m</Period>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Namespace>acs_rds_dashboard</Namespace>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>80</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t<AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>DataDelay</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<EvaluationCount>5</EvaluationCount>\\r\\n\\t\\t\\t\\t\\t\\t<Period>5m</Period>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Namespace>acs_rds_dashboard</Namespace>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>5</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertInitConfig>\\r\\n\\t\\t\\t\\t</AlertInitConfigList>\\r\\n\\t\\t\\t\\t<Product>rds</Product>\\r\\n\\t\\t\\t</AllProductInitMetricRule>\\r\\n\\t\\t\\t<AllProductInitMetricRule>\\r\\n\\t\\t\\t\\t<AlertInitConfigList>\\r\\n\\t\\t\\t\\t\\t<AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>DocSizeRatiobyApp</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<EvaluationCount>1</EvaluationCount>\\r\\n\\t\\t\\t\\t\\t\\t<Period>10m</Period>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Maximum</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Namespace>acs_opensearch</Namespace>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>85</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t<AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>lossqpsbyapp</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<EvaluationCount>1</EvaluationCount>\\r\\n\\t\\t\\t\\t\\t\\t<Period>10m</Period>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Maximum</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Namespace>acs_opensearch</Namespace>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>0</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t<AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>ComputeResourceRatiobyApp</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<EvaluationCount>1</EvaluationCount>\\r\\n\\t\\t\\t\\t\\t\\t<Period>10m</Period>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Maximum</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Namespace>acs_opensearch</Namespace>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>85</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t<AlertInitConfig>\\r\\n\\t\\t\\t\\t\\t\\t<MetricName>app_realtime_write_latency</MetricName>\\r\\n\\t\\t\\t\\t\\t\\t<EvaluationCount>1</EvaluationCount>\\r\\n\\t\\t\\t\\t\\t\\t<Period>20m</Period>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Maximum</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Namespace>acs_opensearch</Namespace>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>1800000</Threshold>\\r\\n\\t\\t\\t\\t\\t</AlertInitConfig>\\r\\n\\t\\t\\t\\t</AlertInitConfigList>\\r\\n\\t\\t\\t\\t<Product>opensearch</Product>\\r\\n\\t\\t\\t</AllProductInitMetricRule>\\r\\n\\t\\t</AllProductInitMetricRuleList>\\r\\n\\t\\t<Datapoints>rds,redis_standard</Datapoints>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Success>true</Success>\\r\\n</DescribeProductsOfActiveMetricRuleResponse>","errorExample":""}]',
      'title' => '查询开通一键报警规则的云服务列表',
      'summary' => '调用DescribeProductsOfActiveMetricRule接口查询开通一键报警规则的云服务列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeActiveMetricRuleList' => 
    array (
      'summary' => '调用DescribeActiveMetricRuleList接口查询一键报警规则的列表详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Product',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '支持一键报警规则的云产品名称缩写。

关于如何获取云产品名称，请参见[DescribeProductsOfActiveMetricRule](~~114930~~)。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ecs',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F82E6667-7811-4BA0-842F-5B2DC42BBAAD',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Datapoints' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Alarm' => 
                  array (
                    'description' => '报警规则列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SilenceTime' => 
                        array (
                          'description' => '通道沉默时间。

单位：秒。',
                          'type' => 'string',
                          'example' => '86400',
                        ),
                        'MetricName' => 
                        array (
                          'description' => '监控指标名称。',
                          'type' => 'string',
                          'example' => 'cpu_total',
                        ),
                        'EvaluationCount' => 
                        array (
                          'description' => '报警重试次数。',
                          'type' => 'string',
                          'example' => '3',
                        ),
                        'Webhook' => 
                        array (
                          'description' => 'URL回调地址。',
                          'type' => 'string',
                          'example' => 'https://www.aliyun.com',
                        ),
                        'State' => 
                        array (
                          'description' => '报警规则的启用状态。',
                          'type' => 'string',
                          'example' => 'Enable',
                        ),
                        'ContactGroups' => 
                        array (
                          'description' => '报警联系人组。',
                          'type' => 'string',
                          'example' => 'ECS_Group',
                        ),
                        'Namespace' => 
                        array (
                          'description' => '云产品的命名空间。',
                          'type' => 'string',
                          'example' => 'acs_ecs_dashboard',
                        ),
                        'RuleName' => 
                        array (
                          'description' => '报警规则名称。',
                          'type' => 'string',
                          'example' => 'SystemDefault_acs_rds_dashboard_CpuUsage',
                        ),
                        'RuleId' => 
                        array (
                          'description' => '报警规则ID。',
                          'type' => 'string',
                          'example' => 'a151cd6023eacee2f0978e03863cc1697c89508****',
                        ),
                        'Period' => 
                        array (
                          'description' => '监控数据的聚合周期。

单位：秒。',
                          'type' => 'string',
                          'example' => '60',
                        ),
                        'ComparisonOperator' => 
                        array (
                          'description' => '报警规则比较符。取值：

- `>`

- `<`

- `>=`

- `<=`

- `=`

- `=`',
                          'type' => 'string',
                          'example' => '>',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '报警规则失效时间。

单位：小时。例如：23表示`23:59:59`。',
                          'type' => 'string',
                          'example' => '24',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '报警规则生效起始时间。

单位：小时。例如：00表示`00：00：00`。',
                          'type' => 'string',
                          'example' => '00',
                        ),
                        'Threshold' => 
                        array (
                          'description' => '报警阈值。',
                          'type' => 'string',
                          'example' => '90',
                        ),
                        'Statistics' => 
                        array (
                          'description' => '统计方法。',
                          'type' => 'string',
                          'example' => 'Average',
                        ),
                        'Enable' => 
                        array (
                          'description' => '报警规则的启用状态。取值：

- true：启用。

- false：禁用。',
                          'type' => 'string',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'AlertList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Alert' => 
                  array (
                    'description' => '报警规则列表。该列表的结构和获取报警规则列表保持统一。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SilenceTime' => 
                        array (
                          'description' => '通道沉默时间。

单位：秒。',
                          'type' => 'string',
                          'example' => '86400',
                        ),
                        'MetricName' => 
                        array (
                          'description' => '监控项的名称。',
                          'type' => 'string',
                          'example' => 'cpu_total',
                        ),
                        'Webhook' => 
                        array (
                          'description' => 'URL回调地址。',
                          'type' => 'string',
                          'example' => 'http://www.aliyun.com',
                        ),
                        'ContactGroups' => 
                        array (
                          'description' => '报警联系人组。',
                          'type' => 'string',
                          'example' => 'ECS_Group',
                        ),
                        'Namespace' => 
                        array (
                          'description' => '云服务的命名空间。',
                          'type' => 'string',
                          'example' => 'acs_ecs_dashboard',
                        ),
                        'EffectiveInterval' => 
                        array (
                          'description' => '报警规则的生效时间段。',
                          'type' => 'string',
                          'example' => '00:00-23:59',
                        ),
                        'NoEffectiveInterval' => 
                        array (
                          'description' => '报警不生效的时间段。',
                          'type' => 'string',
                          'example' => '00:00-06:00',
                        ),
                        'MailSubject' => 
                        array (
                          'description' => '发送邮件的主题。',
                          'type' => 'string',
                          'example' => 'ECS_Bucket',
                        ),
                        'RuleName' => 
                        array (
                          'description' => '报警规则名称。',
                          'type' => 'string',
                          'example' => 'myAlert',
                        ),
                        'RuleId' => 
                        array (
                          'description' => '报警规则ID。',
                          'type' => 'string',
                          'example' => 'ruleIdxxxx',
                        ),
                        'Period' => 
                        array (
                          'description' => '监控数据的聚合周期。

单位：秒。',
                          'type' => 'string',
                          'example' => '60',
                        ),
                        'AlertState' => 
                        array (
                          'description' => '报警规则状态。取值：

- OK：正常。

- ALARM：报警。

- INSUFFICIENT_DATA：无数据。',
                          'type' => 'string',
                          'example' => 'OK',
                        ),
                        'Dimensions' => 
                        array (
                          'description' => '指定资源的监控数据。',
                          'type' => 'string',
                          'example' => '""',
                        ),
                        'EnableState' => 
                        array (
                          'description' => '报警规则的启用状态。取值：

- true：启用。

- false：禁用。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Resources' => 
                        array (
                          'description' => '报警规则关联的资源。 ',
                          'type' => 'string',
                          'example' => '[{"resource":"_ALL"}]',
                        ),
                        'Escalations' => 
                        array (
                          'description' => '报警分级别触发条件。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Info' => 
                            array (
                              'description' => 'Info级别报警触发条件。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'ComparisonOperator' => 
                                array (
                                  'description' => 'Info级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                                  'type' => 'string',
                                  'example' => 'GreaterThanThreshold',
                                ),
                                'Times' => 
                                array (
                                  'description' => 'Info级别连续出现次数。

Info级别连续出现达到该值且超过阈值才会触发报警。',
                                  'type' => 'string',
                                  'example' => '3',
                                ),
                                'Threshold' => 
                                array (
                                  'description' => 'Info级别阈值。',
                                  'type' => 'string',
                                  'example' => '95',
                                ),
                                'Statistics' => 
                                array (
                                  'description' => 'Info级别报警统计方法。',
                                  'type' => 'string',
                                  'example' => 'Average',
                                ),
                              ),
                            ),
                            'Warn' => 
                            array (
                              'description' => 'Warn级别报警触发条件。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'ComparisonOperator' => 
                                array (
                                  'description' => 'Warn级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                                  'type' => 'string',
                                  'example' => 'GreaterThanThreshold',
                                ),
                                'Times' => 
                                array (
                                  'description' => 'Warn级别连续出现次数。

Warn级别连续出现达到该值且超过阈值才会触发报警。',
                                  'type' => 'string',
                                  'example' => '3',
                                ),
                                'Threshold' => 
                                array (
                                  'description' => 'Warn级别阈值。',
                                  'type' => 'string',
                                  'example' => '80',
                                ),
                                'Statistics' => 
                                array (
                                  'description' => 'Warn级别报警统计方法。',
                                  'type' => 'string',
                                  'example' => 'Average',
                                ),
                              ),
                            ),
                            'Critical' => 
                            array (
                              'description' => 'Critical级别报警触发条件。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'ComparisonOperator' => 
                                array (
                                  'description' => 'Critical级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                                  'type' => 'string',
                                  'example' => 'GreaterThanThreshold',
                                ),
                                'Times' => 
                                array (
                                  'description' => 'Critical级别连续出现次数。Critical级别连续出现达到该值且超过阈值才会触发报警。',
                                  'type' => 'string',
                                  'example' => '3',
                                ),
                                'Threshold' => 
                                array (
                                  'description' => 'Critical级别阈值。',
                                  'type' => 'string',
                                  'example' => '99',
                                ),
                                'Statistics' => 
                                array (
                                  'description' => 'Critical级别报警统计方法。',
                                  'type' => 'string',
                                  'example' => 'Average',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"F82E6667-7811-4BA0-842F-5B2DC42BBAAD\\",\\n  \\"Success\\": true,\\n  \\"Datapoints\\": {\\n    \\"Alarm\\": [\\n      {\\n        \\"SilenceTime\\": \\"86400\\",\\n        \\"MetricName\\": \\"cpu_total\\",\\n        \\"EvaluationCount\\": \\"3\\",\\n        \\"Webhook\\": \\"https://www.aliyun.com\\",\\n        \\"State\\": \\"Enable\\",\\n        \\"ContactGroups\\": \\"ECS_Group\\",\\n        \\"Namespace\\": \\"acs_ecs_dashboard\\",\\n        \\"RuleName\\": \\"SystemDefault_acs_rds_dashboard_CpuUsage\\",\\n        \\"RuleId\\": \\"a151cd6023eacee2f0978e03863cc1697c89508****\\",\\n        \\"Period\\": \\"60\\",\\n        \\"ComparisonOperator\\": \\">\\",\\n        \\"EndTime\\": \\"24\\",\\n        \\"StartTime\\": \\"00\\",\\n        \\"Threshold\\": \\"90\\",\\n        \\"Statistics\\": \\"Average\\",\\n        \\"Enable\\": \\"true\\"\\n      }\\n    ]\\n  },\\n  \\"AlertList\\": {\\n    \\"Alert\\": [\\n      {\\n        \\"SilenceTime\\": \\"86400\\",\\n        \\"MetricName\\": \\"cpu_total\\",\\n        \\"Webhook\\": \\"http://www.aliyun.com\\",\\n        \\"ContactGroups\\": \\"ECS_Group\\",\\n        \\"Namespace\\": \\"acs_ecs_dashboard\\",\\n        \\"EffectiveInterval\\": \\"00:00-23:59\\",\\n        \\"NoEffectiveInterval\\": \\"00:00-06:00\\",\\n        \\"MailSubject\\": \\"ECS_Bucket\\",\\n        \\"RuleName\\": \\"myAlert\\",\\n        \\"RuleId\\": \\"ruleIdxxxx\\",\\n        \\"Period\\": \\"60\\",\\n        \\"AlertState\\": \\"OK\\",\\n        \\"Dimensions\\": \\"\\\\\\"\\\\\\"\\",\\n        \\"EnableState\\": true,\\n        \\"Resources\\": \\"[{\\\\\\"resource\\\\\\":\\\\\\"_ALL\\\\\\"}]\\",\\n        \\"Escalations\\": {\\n          \\"Info\\": {\\n            \\"ComparisonOperator\\": \\"GreaterThanThreshold\\",\\n            \\"Times\\": \\"3\\",\\n            \\"Threshold\\": \\"95\\",\\n            \\"Statistics\\": \\"Average\\"\\n          },\\n          \\"Warn\\": {\\n            \\"ComparisonOperator\\": \\"GreaterThanThreshold\\",\\n            \\"Times\\": \\"3\\",\\n            \\"Threshold\\": \\"80\\",\\n            \\"Statistics\\": \\"Average\\"\\n          },\\n          \\"Critical\\": {\\n            \\"ComparisonOperator\\": \\"GreaterThanThreshold\\",\\n            \\"Times\\": \\"3\\",\\n            \\"Threshold\\": \\"99\\",\\n            \\"Statistics\\": \\"Average\\"\\n          }\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeActiveMetricRuleListResponse>\\r\\n\\t\\t<AlertList>\\r\\n\\t\\t\\t<Alert>\\r\\n\\t\\t\\t\\t<SilenceTime>86400</SilenceTime>\\r\\n\\t\\t\\t\\t<ContactGroups>ECS_Group</ContactGroups>\\r\\n\\t\\t\\t\\t<NoEffectiveInterval></NoEffectiveInterval>\\r\\n\\t\\t\\t\\t<MailSubject>${serviceType}-${metricName}-${levelDescription}</MailSubject>\\r\\n\\t\\t\\t\\t<RuleId>SystemDefault_acs_rds_dashboard_IOPSUsage</RuleId>\\r\\n\\t\\t\\t\\t<Period>300</Period>\\r\\n\\t\\t\\t\\t<Dimensions></Dimensions>\\r\\n\\t\\t\\t\\t<EffectiveInterval></EffectiveInterval>\\r\\n\\t\\t\\t\\t<Namespace>acs_rds_dashboard</Namespace>\\r\\n\\t\\t\\t\\t<AlertState>INSUFFICIENT_DATA</AlertState>\\r\\n\\t\\t\\t\\t<MetricName>IOPSUsage</MetricName>\\r\\n\\t\\t\\t\\t<EnableState>true</EnableState>\\r\\n\\t\\t\\t\\t<Escalations>\\r\\n\\t\\t\\t\\t\\t<Critical />\\r\\n\\t\\t\\t\\t\\t<Info>\\r\\n\\t\\t\\t\\t\\t\\t<ComparisonOperator>GreaterThanThreshold</ComparisonOperator>\\r\\n\\t\\t\\t\\t\\t\\t<Times>5</Times>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>80</Threshold>\\r\\n\\t\\t\\t\\t\\t</Info>\\r\\n\\t\\t\\t\\t\\t<Warn />\\r\\n\\t\\t\\t\\t</Escalations>\\r\\n\\t\\t\\t\\t<Webhook></Webhook>\\r\\n\\t\\t\\t\\t<Resources>[{\\\\\\"resource\\\\\\":\\\\\\"_ALL\\\\\\"}]</Resources>\\r\\n\\t\\t\\t\\t<RuleName>SystemDefault_acs_rds_dashboard_IOPSUsage</RuleName>\\r\\n\\t\\t\\t</Alert>\\r\\n\\t\\t\\t<Alert>\\r\\n\\t\\t\\t\\t<SilenceTime>86400</SilenceTime>\\r\\n\\t\\t\\t\\t<ContactGroups>ECS_Group</ContactGroups>\\r\\n\\t\\t\\t\\t<NoEffectiveInterval></NoEffectiveInterval>\\r\\n\\t\\t\\t\\t<MailSubject>${serviceType}-${metricName}-${levelDescription}</MailSubject>\\r\\n\\t\\t\\t\\t<RuleId>SystemDefault_acs_rds_dashboard_CpuUsage</RuleId>\\r\\n\\t\\t\\t\\t<Period>300</Period>\\r\\n\\t\\t\\t\\t<Dimensions></Dimensions>\\r\\n\\t\\t\\t\\t<EffectiveInterval></EffectiveInterval>\\r\\n\\t\\t\\t\\t<Namespace>acs_rds_dashboard</Namespace>\\r\\n\\t\\t\\t\\t<AlertState>INSUFFICIENT_DATA</AlertState>\\r\\n\\t\\t\\t\\t<MetricName>CpuUsage</MetricName>\\r\\n\\t\\t\\t\\t<EnableState>true</EnableState>\\r\\n\\t\\t\\t\\t<Escalations>\\r\\n\\t\\t\\t\\t\\t<Critical />\\r\\n\\t\\t\\t\\t\\t<Info>\\r\\n\\t\\t\\t\\t\\t\\t<ComparisonOperator>GreaterThanThreshold</ComparisonOperator>\\r\\n\\t\\t\\t\\t\\t\\t<Times>5</Times>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>80</Threshold>\\r\\n\\t\\t\\t\\t\\t</Info>\\r\\n\\t\\t\\t\\t\\t<Warn />\\r\\n\\t\\t\\t\\t</Escalations>\\r\\n\\t\\t\\t\\t<Webhook></Webhook>\\r\\n\\t\\t\\t\\t<Resources>[{\\\\\\"resource\\\\\\":\\\\\\"_ALL\\\\\\"}]</Resources>\\r\\n\\t\\t\\t\\t<RuleName>SystemDefault_acs_rds_dashboard_CpuUsage</RuleName>\\r\\n\\t\\t\\t</Alert>\\r\\n\\t\\t</AlertList>\\r\\n\\t\\t<Datapoints>\\r\\n\\t\\t\\t<Alarm>\\r\\n\\t\\t\\t\\t<SilenceTime>86400</SilenceTime>\\r\\n\\t\\t\\t\\t<ContactGroups>[\\\\\\"Alice\\\\\\"]</ContactGroups>\\r\\n\\t\\t\\t\\t<ComparisonOperator>GreaterThanThreshold</ComparisonOperator>\\r\\n\\t\\t\\t\\t<EndTime></EndTime>\\r\\n\\t\\t\\t\\t<RuleId>SystemDefault_acs_rds_dashboard_IOPSUsage</RuleId>\\r\\n\\t\\t\\t\\t<StartTime></StartTime>\\r\\n\\t\\t\\t\\t<Period>300</Period>\\r\\n\\t\\t\\t\\t<EvaluationCount>5</EvaluationCount>\\r\\n\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t<Namespace>acs_rds_dashboard</Namespace>\\r\\n\\t\\t\\t\\t<MetricName>IOPSUsage</MetricName>\\r\\n\\t\\t\\t\\t<State>INSUFFICIENT_DATA</State>\\r\\n\\t\\t\\t\\t<Enable>true</Enable>\\r\\n\\t\\t\\t\\t<Webhook></Webhook>\\r\\n\\t\\t\\t\\t<RuleName>SystemDefault_acs_rds_dashboard_IOPSUsage</RuleName>\\r\\n\\t\\t\\t\\t<Threshold>80</Threshold>\\r\\n\\t\\t\\t</Alarm>\\r\\n\\t\\t\\t<Alarm>\\r\\n\\t\\t\\t\\t<SilenceTime>86400</SilenceTime>\\r\\n\\t\\t\\t\\t<ContactGroups>[\\\\\\"Jim\\\\\\"]</ContactGroups>\\r\\n\\t\\t\\t\\t<ComparisonOperator>GreaterThanThreshold</ComparisonOperator>\\r\\n\\t\\t\\t\\t<EndTime></EndTime>\\r\\n\\t\\t\\t\\t<RuleId>SystemDefault_acs_rds_dashboard_CpuUsage</RuleId>\\r\\n\\t\\t\\t\\t<StartTime></StartTime>\\r\\n\\t\\t\\t\\t<Period>300</Period>\\r\\n\\t\\t\\t\\t<EvaluationCount>5</EvaluationCount>\\r\\n\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t<Namespace>acs_rds_dashboard</Namespace>\\r\\n\\t\\t\\t\\t<MetricName>CpuUsage</MetricName>\\r\\n\\t\\t\\t\\t<State>INSUFFICIENT_DATA</State>\\r\\n\\t\\t\\t\\t<Enable>true</Enable>\\r\\n\\t\\t\\t\\t<Webhook></Webhook>\\r\\n\\t\\t\\t\\t<RuleName>SystemDefault_acs_rds_dashboard_CpuUsage</RuleName>\\r\\n\\t\\t\\t\\t<Threshold>80</Threshold>\\r\\n\\t\\t\\t</Alarm>\\r\\n\\t\\t</Datapoints>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Success>true</Success>\\r\\n</DescribeActiveMetricRuleListResponse>","errorExample":""}]',
      'title' => '查询一键报警规则的列表详情',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableActiveMetricRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Product',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '支持一键报警规则的云服务名称。取值：

* ecs：云服务器ECS。
* rds：云数据库RDS版。
* slb：负载均衡。
* redis_standard：云数据库Redis标准版。
* redis_sharding：云数据库Redis集群版。
* redis_splitrw：云数据库Redis读写分离版。
* mongodb：云数据库MongoDB版（副本集）。
* mongodb_sharding：云数据库MongoDB版（分片集群）。
* hbase：云数据库HBase版。
* elasticsearch：Elasticsearch。
* opensearch：OpenSearch。',
            'type' => 'string',
            'required' => true,
            'example' => 'ecs',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。
',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F82E6667-7811-4BA0-842F-5B2DC42BBAAD',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"F82E6667-7811-4BA0-842F-5B2DC42BBAAD\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<EnableActiveMetricRuleResponse>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n    <RequestId>55850888-9CCE-4FD5-B949-5F8947D63929</RequestId>\\n</EnableActiveMetricRuleResponse>","errorExample":""}]',
      'title' => '启用一键报警规则',
      'summary' => '调用EnableActiveMetricRule接口启用一键报警规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableActiveMetricRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Product',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '支持一键报警规则的云服务名称。取值：

* ecs：云服务器ECS。
* rds：云数据库RDS版）
* slb：负载均衡。
* redis_standard：云数据库Redis标准版。
* redis_sharding：云数据库Redis集群版。
* redis_splitrw：云数据库Redis读写分离版。
* mongodb：云数据库MongoDB版（副本集）。
* mongodb_sharding：云数据库MongoDB版（分片集群）。
* hbase：云数据库HBase版。
* elasticsearch：Elasticsearch。
* opensearch：OpenSearch。',
            'type' => 'string',
            'required' => true,
            'example' => 'ecs',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F82E6667-7811-4BA0-842F-5B2DC42BBAAD',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"F82E6667-7811-4BA0-842F-5B2DC42BBAAD\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DisableActiveMetricRuleResponse>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n    <RequestId>55850888-9CCE-4FD5-B949-5F8947D63929</RequestId>\\n</DisableActiveMetricRuleResponse>","errorExample":""}]',
      'title' => '禁用一键报警规则',
      'summary' => '调用DisableActiveMetricRule接口禁用一键报警规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateMetricRuleTemplate' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警模板名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'Template1',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警模板描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS_Template1',
          ),
        ),
        2 => 
        array (
          'name' => 'AlertTemplates',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警模板列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警模板。',
              'type' => 'object',
              'properties' => 
              array (
                'Escalations.Info.Threshold' => 
                array (
                  'description' => '普通级别报警阈值。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '20',
                ),
                'MetricName' => 
                array (
                  'description' => '监控项名称。

N的取值范围：1~200。

关于如何获取监控项，请参见[DescribeMetricMetaList](~~98846~~)或[云产品监控项](~~163515~~)。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'cpu_total',
                ),
                'Webhook' => 
                array (
                  'description' => '报警发生回调时的URL地址。

N的取值范围：1~200。

填写公网可访问的URL地址，云监控会将报警信息通过POST请求推送到该地址，目前仅支持HTTP协议。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'http://ww.aliyun.com',
                ),
                'Escalations.Warn.Threshold' => 
                array (
                  'description' => '警告级别报警阈值。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '30',
                ),
                'Namespace' => 
                array (
                  'description' => '云产品的数据命名空间。

N的取值范围：1~200。

关于如何获取云产品的数据命名空间，请参见[DescribeMetricMetaList](~~98846~~)或[云产品监控项](~~163515~~)。
',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'acs_ecs_dashboard',
                ),
                'Period' => 
                array (
                  'description' => '监控数据的聚合周期。单位：秒。

默认为监控项对应的最小周期，通常不需要指定。

N的取值范围：1~200。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '60',
                ),
                'RuleName' => 
                array (
                  'description' => '报警规则名称。

N的取值范围：1~200。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ECS_Rule1',
                ),
                'Escalations.Critical.Times' => 
                array (
                  'description' => '发送紧急报警通知需要监控指标达到报警阈值的次数。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '3',
                ),
                'Selector' => 
                array (
                  'description' => 'Dimension扩展字段的选项。

N的取值范围：1~200。

例如：报警模板被应用到了一个应用分组中，当该参数设置为`{"disk":"/"}`，监控项（MetricName）设置为`DiskUtilization`时，表示关联报警模板的应用分组中所有实例的磁盘根分区（`"/"`) 被关联到了对应报警规则中。

>关于扩展字段选项的取值，请参见[DescribeMetricRuleTemplateAttribute](~~114979~~)。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '{"disk":"/"}',
                ),
                'Escalations.Info.Statistics' => 
                array (
                  'description' => '普通级别报警统计方法。

N的取值范围：1~200。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Average',
                ),
                'Escalations.Warn.Times' => 
                array (
                  'description' => '发送警告报警通知需要监控指标达到报警阈值的次数。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'Escalations.Info.ComparisonOperator' => 
                array (
                  'description' => '普通级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。 
- GreaterThanThreshold：大于。 
- LessThanOrEqualToThreshold：小于等于。 
- LessThanThreshold：小于。 
- NotEqualToThreshold：不等于。 
- GreaterThanYesterday：同比昨天时间上涨。 
- LessThanYesterday：同比昨天时间下降。 
- GreaterThanLastWeek：同比上周同一时间上涨。 
- LessThanLastWeek：同比上周同一时间下降。 
- GreaterThanLastPeriod：环比上周期上涨。 
- LessThanLastPeriod：环比上周期下降。 

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Category' => 
                array (
                  'description' => '云产品名称缩写。

N的取值范围：1~200。

关于如何获取云产品名称缩写，请参见[DescribeProjectMeta](~~114916~~)接口的返回参数`Labels`中的`metricCategory`。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ecs',
                ),
                'Escalations.Critical.Threshold' => 
                array (
                  'description' => '触发紧急级别报警通知的阈值。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '30',
                ),
                'Escalations.Critical.Statistics' => 
                array (
                  'description' => '紧急级别报警统计方法。

N的取值范围：1~200。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Average',
                ),
                'Escalations.Critical.ComparisonOperator' => 
                array (
                  'description' => '紧急级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。 
- GreaterThanThreshold：大于。 
- LessThanOrEqualToThreshold：小于等于。 
- LessThanThreshold：小于。 
- NotEqualToThreshold：不等于。 
- GreaterThanYesterday：同比昨天时间上涨。 
- LessThanYesterday：同比昨天时间下降。 
- GreaterThanLastWeek：同比上周同一时间上涨。 
- LessThanLastWeek：同比上周同一时间下降。 
- GreaterThanLastPeriod：环比上周期上涨。 
- LessThanLastPeriod：环比上周期下降。 

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Escalations.Warn.ComparisonOperator' => 
                array (
                  'description' => '警告级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。 
- GreaterThanThreshold：大于。 
- LessThanOrEqualToThreshold：小于等于。 
- LessThanThreshold：小于。 
- NotEqualToThreshold：不等于。 
- GreaterThanYesterday：同比昨天时间上涨。 
- LessThanYesterday：同比昨天时间下降。 
- GreaterThanLastWeek：同比上周同一时间上涨。 
- LessThanLastWeek：同比上周同一时间下降。 
- GreaterThanLastPeriod：环比上周期上涨。 
- LessThanLastPeriod：环比上周期下降。 

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Escalations.Info.Times' => 
                array (
                  'description' => '发送普通报警通知需要监控指标达到报警阈值的次数。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'Escalations.Warn.Statistics' => 
                array (
                  'description' => '警告级别报警统计方法。

N的取值范围：1~200。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Average',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 200,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回数据。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9763ED1A-4D09-41BF-851E-310421750204',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Id' => 
              array (
                'description' => '报警模板ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '12345',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidClientTokenId',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourcesOverLimit',
            'errorMessage' => 'Resources over limit.',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalFailure',
            'errorMessage' => '%s',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"9763ED1A-4D09-41BF-851E-310421750204\\",\\n  \\"Success\\": true,\\n  \\"Id\\": 12345\\n}","errorExample":""},{"type":"xml","example":"<CreateMetricRuleTemplateResponse>\\n\\t\\t<RequestId>9763ED1A-4D09-41BF-851E-310421750204</RequestId>\\n\\t\\t<Id>12345</Id>\\n\\t\\t<Success>true</Success>\\n\\t\\t<Code>200</Code>\\n</CreateMetricRuleTemplateResponse>","errorExample":""}]',
      'title' => '创建报警模板',
      'summary' => '调用CreateMetricRuleTemplate接口创建报警模板。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteMetricRuleTemplate' => 
    array (
      'summary' => '调用DeleteMetricRuleTemplate接口删除报警规则模板。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则模板ID。',
            'type' => 'string',
            'required' => true,
            'example' => '123****',
            'docRequired' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7B63F8CF-D48D-4608-A402-04FB5B2B4B6A',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Resource' => 
              array (
                'description' => '模板信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'TemplateId' => 
                  array (
                    'description' => '模板ID。',
                    'type' => 'string',
                    'example' => '123****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"7B63F8CF-D48D-4608-A402-04FB5B2B4B6A\\",\\n  \\"Success\\": true,\\n  \\"Resource\\": {\\n    \\"TemplateId\\": \\"123****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DeleteMetricRuleTemplateResponse>\\r\\n    <Resource>\\r\\n        <TemplateId>123****</TemplateId>\\r\\n    </Resource>\\r\\n    <RequestId>7B63F8CF-D48D-4608-A402-04FB5B2B4B6A</RequestId>\\r\\n    <Success>true</Success>\\r\\n    <Code>200</Code>\\r\\n</DeleteMetricRuleTemplateResponse>","errorExample":""}]',
      'title' => '删除报警规则模板',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyMetricRuleTemplate' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警模板ID。

关于如何获取报警模板ID，请参见[DescribeMetricRuleTemplateList](~~114982~~)。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '123456',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警模板名称。

关于如何获取报警模板名称，请参见[DescribeMetricRuleTemplateList](~~114982~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'Template_123',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警模板描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS_template1',
          ),
        ),
        3 => 
        array (
          'name' => 'RestVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警模板的版本。该参数随报警模板的修改次数自动更新。

关于如何获取报警模板的版本，请参见[DescribeMetricRuleTemplateList](~~114982~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'AlertTemplates',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警模板列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警模板列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Escalations.Info.Threshold' => 
                array (
                  'description' => '普通级别报警阈值。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '20',
                ),
                'MetricName' => 
                array (
                  'description' => '监控项名称。

N的取值范围：1~200。

关于如何获取监控项，请参见[DescribeMetricMetaList](~~98846~~)或[云产品监控项](~~163515~~)。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cpu_total',
                ),
                'Webhook' => 
                array (
                  'description' => '报警发生回调时的URL地址。

N的取值范围：1~200。

填写公网可访问的URL地址，云监控会将报警信息通过POST请求推送到该地址，目前仅支持HTTP协议。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'http://www.aliyun.com',
                ),
                'Escalations.Warn.Threshold' => 
                array (
                  'description' => '警告级别报警阈值。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '30',
                ),
                'Namespace' => 
                array (
                  'description' => '云产品的命名空间。

N的取值范围：1~200。

关于如何获取云产品的命名空间，请参见[DescribeMetricMetaList](~~98846~~)或[云产品监控项](~~163515~~)。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'acs_ecs_dashboard',
                ),
                'Period' => 
                array (
                  'description' => '监控数据的统计周期。

N的取值范围：1~200。

> 设置为300秒，表示每300秒统计一次监控值。如果监控数据每分钟上报一次，则会统计5分钟的值（平均值、最大值、最小值）。因为该统计周期可能会造成非您期望的报警，所以目前不建议您单独设置该参数。

',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '60',
                ),
                'RuleName' => 
                array (
                  'description' => '报警规则名称。

N的取值范围：1~200。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Rule_123',
                ),
                'Escalations.Critical.Times' => 
                array (
                  'description' => '发送紧急报警通知需要监控指标达到报警阈值的次数。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '2',
                ),
                'Selector' => 
                array (
                  'description' => 'Dimension扩展字段的选项。

N的取值范围：1~200。

例如：报警模板被应用到了一个应用分组中，当该参数设置为`{"disk":"/"}`，监控项（MetricName）设置为`DiskUtilization`时，表示关联报警模板的应用分组中所有实例的磁盘根分区（`"/"`) 被关联到了对应报警规则中。

>关于扩展字段选项的取值，请参见[DescribeMetricRuleTemplateAttribute](~~114979~~)。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '{"disk":"/"}',
                ),
                'Escalations.Info.Statistics' => 
                array (
                  'description' => '普通级别报警统计方法。

N的取值范围：1~200。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Average',
                ),
                'Escalations.Warn.Times' => 
                array (
                  'description' => '发送警告报警通知需要监控指标达到报警阈值的次数。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。
',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'Escalations.Info.ComparisonOperator' => 
                array (
                  'description' => '普通级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。 
- GreaterThanThreshold：大于。 
- LessThanOrEqualToThreshold：小于等于。 
- LessThanThreshold：小于。 
- NotEqualToThreshold：不等于。 
- GreaterThanYesterday：同比昨天时间上涨。 
- LessThanYesterday：同比昨天时间下降。 
- GreaterThanLastWeek：同比上周同一时间上涨。 
- LessThanLastWeek：同比上周同一时间下降。 
- GreaterThanLastPeriod：环比上周期上涨。 
- LessThanLastPeriod：环比上周期下降。 

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Category' => 
                array (
                  'description' => '云产品名称缩写。

N的取值范围：1~200。

关于如何获取云产品名称缩写，请参见[DescribeProjectMeta](~~114916~~)接口的返回参数`Labels`中的`metricCategory`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'ecs',
                ),
                'Escalations.Critical.Threshold' => 
                array (
                  'description' => '触发紧急级别报警通知的阈值。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '30',
                ),
                'Escalations.Critical.Statistics' => 
                array (
                  'description' => '紧急级别报警统计方法。

N的取值范围：1~200。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Average',
                ),
                'Escalations.Critical.ComparisonOperator' => 
                array (
                  'description' => '紧急级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。 
- GreaterThanThreshold：大于。 
- LessThanOrEqualToThreshold：小于等于。 
- LessThanThreshold：小于。 
- NotEqualToThreshold：不等于。 
- GreaterThanYesterday：同比昨天时间上涨。 
- LessThanYesterday：同比昨天时间下降。 
- GreaterThanLastWeek：同比上周同一时间上涨。 
- LessThanLastWeek：同比上周同一时间下降。 
- GreaterThanLastPeriod：环比上周期上涨。 
- LessThanLastPeriod：环比上周期下降。 

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Escalations.Warn.ComparisonOperator' => 
                array (
                  'description' => '警告级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。 
- GreaterThanThreshold：大于。 
- LessThanOrEqualToThreshold：小于等于。 
- LessThanThreshold：小于。 
- NotEqualToThreshold：不等于。 
- GreaterThanYesterday：同比昨天时间上涨。 
- LessThanYesterday：同比昨天时间下降。 
- GreaterThanLastWeek：同比上周同一时间上涨。 
- LessThanLastWeek：同比上周同一时间下降。 
- GreaterThanLastPeriod：环比上周期上涨。 
- LessThanLastPeriod：环比上周期下降。 

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Escalations.Info.Times' => 
                array (
                  'description' => '发送普通报警通知需要监控指标达到报警阈值的次数。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'Escalations.Warn.Statistics' => 
                array (
                  'description' => '警告级别报警统计方法。

N的取值范围：1~200。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Average',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 200,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9E07117F-F6AE-4F1C-81E8-36FBB4892235',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidQueryParameter',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidClientTokenId',
            'errorMessage' => 'The X.509 certificate or cms access key ID provided does not exist in our records.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalFailure',
            'errorMessage' => '%s',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"9E07117F-F6AE-4F1C-81E8-36FBB4892235\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ModifyMetricRuleTemplateResponse>\\n\\t\\t<RequestId>97EAC0E2-CD54-4183-95AC-F0C113024E18</RequestId>\\n\\t\\t<Code>200</Code>\\n\\t\\t<Success>true</Success>\\n</ModifyMetricRuleTemplateResponse>","errorExample":""}]',
      'title' => '修改报警模板',
      'summary' => '调用ModifyMetricRuleTemplate接口修改报警模板。',
      'description' => '本文将提供一个示例，修改版本`1`的报警模板`123456`，将报警级别修改为`Critical`，报警统计方法修改为`Average`，报警阈值比较符修改为`GreaterThanOrEqualToThreshold`，报警阈值修改为`90`，报警重试次数修改为`3`。返回结果显示，修改报警模板成功。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMetricRuleTemplateAttribute' => 
    array (
      'summary' => '调用DescribeMetricRuleTemplateAttribute接口查询报警模板详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警模板名称。`Name`和`TemplateId`必须设置一个。

关于如何获取报警模板名称，请参见[DescribeMetricRuleTemplateList](~~114982~~)。

',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS_Template1',
          ),
        ),
        1 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警模板ID。`Name`和`TemplateId`必须设置一个。

关于如何获取报警模板ID，请参见[DescribeMetricRuleTemplateList](~~114982~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '70****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8F3A82AD-DA92-52B0-8EC6-C059D1C3839F',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Resource' => 
              array (
                'description' => '报警模板详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'Description' => 
                  array (
                    'description' => '报警模板描述信息。',
                    'type' => 'string',
                    'example' => 'ECS模板',
                  ),
                  'Name' => 
                  array (
                    'description' => '报警模板名称。',
                    'type' => 'string',
                    'example' => 'ECS_Template1',
                  ),
                  'RestVersion' => 
                  array (
                    'description' => '报警模板版本。',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'TemplateId' => 
                  array (
                    'description' => '报警模板ID。',
                    'type' => 'string',
                    'example' => '70****',
                  ),
                  'AlertTemplates' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AlertTemplate' => 
                      array (
                        'description' => '报警模板列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '报警模板。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'MetricName' => 
                            array (
                              'description' => '监控项名称。',
                              'type' => 'string',
                              'example' => 'cpu_total',
                            ),
                            'Selector' => 
                            array (
                              'description' => '报警维度扩展选项。',
                              'type' => 'string',
                              'example' => '{"disk":"/"}',
                            ),
                            'Webhook' => 
                            array (
                              'description' => '触发报警回调的URL地址。',
                              'type' => 'string',
                              'example' => 'https://www.aliyun.com',
                            ),
                            'Namespace' => 
                            array (
                              'description' => '云服务的命名空间。',
                              'type' => 'string',
                              'example' => 'acs_ecs_dashboard',
                            ),
                            'Category' => 
                            array (
                              'description' => '云服务名称缩写。',
                              'type' => 'string',
                              'example' => 'ecs',
                            ),
                            'RuleName' => 
                            array (
                              'description' => '报警规则名称。',
                              'type' => 'string',
                              'example' => 'ECS_Rule',
                            ),
                            'NoDataPolicy' => 
                            array (
                              'description' => '无监控数据时报警的处理方式。取值：
- KEEP_LAST_STATE（默认值）：不做任何处理。
- INSUFFICIENT_DATA：报警内容为无数据。
- OK：正常。',
                              'type' => 'string',
                              'example' => 'KEEP_LAST_STATE',
                            ),
                            'Escalations' => 
                            array (
                              'description' => '阈值及报警级别。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Info' => 
                                array (
                                  'description' => 'Info级别报警触发条件。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'ComparisonOperator' => 
                                    array (
                                      'description' => 'Info级别的阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                                      'type' => 'string',
                                      'example' => 'GreaterThanOrEqualToThreshold',
                                    ),
                                    'Times' => 
                                    array (
                                      'description' => 'Info级别的重试次数。',
                                      'type' => 'integer',
                                      'format' => 'int32',
                                      'example' => '3',
                                    ),
                                    'Threshold' => 
                                    array (
                                      'description' => 'Info级别的阈值。',
                                      'type' => 'string',
                                      'example' => '90',
                                    ),
                                    'Statistics' => 
                                    array (
                                      'description' => 'Info级别的统计方法。

每个云服务的`Statistics`取值不同。更多信息，请参见[云服务监控项](~~163515~~)。',
                                      'type' => 'string',
                                      'example' => 'Average',
                                    ),
                                  ),
                                ),
                                'Warn' => 
                                array (
                                  'description' => 'Warn级别报警触发条件。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'ComparisonOperator' => 
                                    array (
                                      'description' => 'Warn级别阈值的比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                                      'type' => 'string',
                                      'example' => 'GreaterThanOrEqualToThreshold',
                                    ),
                                    'Times' => 
                                    array (
                                      'description' => 'Warn级别的重试次数。',
                                      'type' => 'integer',
                                      'format' => 'int32',
                                      'example' => '3',
                                    ),
                                    'Threshold' => 
                                    array (
                                      'description' => 'Warn级别的阈值。',
                                      'type' => 'string',
                                      'example' => '90',
                                    ),
                                    'Statistics' => 
                                    array (
                                      'description' => 'Warn级别的统计方法。

每个云服务的`Statistics`取值不同。更多信息，请参见[云服务监控项](~~163515~~)。',
                                      'type' => 'string',
                                      'example' => 'Average',
                                    ),
                                  ),
                                ),
                                'Critical' => 
                                array (
                                  'description' => 'Critical级别报警触发条件。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'ComparisonOperator' => 
                                    array (
                                      'description' => 'Critical级别的阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                                      'type' => 'string',
                                      'example' => 'GreaterThanOrEqualToThreshold',
                                    ),
                                    'Times' => 
                                    array (
                                      'description' => 'Critical级别的重试次数。',
                                      'type' => 'integer',
                                      'format' => 'int32',
                                      'example' => '5',
                                    ),
                                    'Threshold' => 
                                    array (
                                      'description' => 'Critical级别的阈值。',
                                      'type' => 'string',
                                      'example' => '90',
                                    ),
                                    'Statistics' => 
                                    array (
                                      'description' => 'Critical级别的统计方法。

每个云服务的`Statistics`取值不同。更多信息，请参见[云服务监控项](~~163515~~)。',
                                      'type' => 'string',
                                      'example' => 'Average',
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'Labels' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Labels' => 
                                array (
                                  'description' => '报警模板标签。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '报警模板的标签。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Key' => 
                                      array (
                                        'description' => '报警模板的标签键。',
                                        'type' => 'string',
                                        'example' => 'label1',
                                      ),
                                      'Value' => 
                                      array (
                                        'description' => '报警模板的标签值。',
                                        'type' => 'string',
                                        'example' => 'value1',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
          1 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"8F3A82AD-DA92-52B0-8EC6-C059D1C3839F\\",\\n  \\"Success\\": true,\\n  \\"Resource\\": {\\n    \\"Description\\": \\"ECS模板\\",\\n    \\"Name\\": \\"ECS_Template1\\",\\n    \\"RestVersion\\": \\"1\\",\\n    \\"TemplateId\\": \\"70****\\",\\n    \\"AlertTemplates\\": {\\n      \\"AlertTemplate\\": [\\n        {\\n          \\"MetricName\\": \\"cpu_total\\",\\n          \\"Selector\\": \\"{\\\\\\"disk\\\\\\":\\\\\\"/\\\\\\"}\\",\\n          \\"Webhook\\": \\"https://www.aliyun.com\\",\\n          \\"Namespace\\": \\"acs_ecs_dashboard\\",\\n          \\"Category\\": \\"ecs\\",\\n          \\"RuleName\\": \\"ECS_Rule\\",\\n          \\"NoDataPolicy\\": \\"KEEP_LAST_STATE\\",\\n          \\"Escalations\\": {\\n            \\"Info\\": {\\n              \\"ComparisonOperator\\": \\"GreaterThanOrEqualToThreshold\\",\\n              \\"Times\\": 3,\\n              \\"Threshold\\": \\"90\\",\\n              \\"Statistics\\": \\"Average\\"\\n            },\\n            \\"Warn\\": {\\n              \\"ComparisonOperator\\": \\"GreaterThanOrEqualToThreshold\\",\\n              \\"Times\\": 3,\\n              \\"Threshold\\": \\"90\\",\\n              \\"Statistics\\": \\"Average\\"\\n            },\\n            \\"Critical\\": {\\n              \\"ComparisonOperator\\": \\"GreaterThanOrEqualToThreshold\\",\\n              \\"Times\\": 5,\\n              \\"Threshold\\": \\"90\\",\\n              \\"Statistics\\": \\"Average\\"\\n            }\\n          },\\n          \\"Labels\\": {\\n            \\"Labels\\": [\\n              {\\n                \\"Key\\": \\"label1\\",\\n                \\"Value\\": \\"value1\\"\\n              }\\n            ]\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMetricRuleTemplateAttributeResponse>\\r\\n\\t<RequestId>8F3A82AD-DA92-52B0-8EC6-C059D1C3839F</RequestId>\\r\\n\\t<Resource>\\r\\n\\t\\t<AlertTemplates>\\r\\n\\t\\t\\t<AlertTemplate>\\r\\n\\t\\t\\t\\t<MetricName>cpu_total</MetricName>\\r\\n\\t\\t\\t\\t<Category>ecs</Category>\\r\\n\\t\\t\\t\\t<Escalations>\\r\\n\\t\\t\\t\\t\\t<Critical>\\r\\n\\t\\t\\t\\t\\t\\t<ComparisonOperator>GreaterThanOrEqualToThreshold</ComparisonOperator>\\r\\n\\t\\t\\t\\t\\t\\t<Times>5</Times>\\r\\n\\t\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t\\t<Threshold>90</Threshold>\\r\\n\\t\\t\\t\\t\\t</Critical>\\r\\n\\t\\t\\t\\t\\t<Info />\\r\\n\\t\\t\\t\\t\\t<Warn />\\r\\n\\t\\t\\t\\t</Escalations>\\r\\n\\t\\t\\t\\t<CompositeExpression />\\r\\n\\t\\t\\t\\t<Webhook></Webhook>\\r\\n\\t\\t\\t\\t<Namespace>acs_ecs_dashboard</Namespace>\\r\\n\\t\\t\\t\\t<RuleName>ECS_Rule</RuleName>\\r\\n\\t\\t\\t\\t<Selector />\\r\\n\\t\\t\\t</AlertTemplate>\\r\\n\\t\\t</AlertTemplates>\\r\\n\\t\\t<Description></Description>\\r\\n\\t\\t<RestVersion>1</RestVersion>\\r\\n\\t\\t<TemplateId>70****</TemplateId>\\r\\n\\t\\t<Name>ECS_Template1</Name>\\r\\n\\t</Resource>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeMetricRuleTemplateAttributeResponse>\\t","errorExample":""}]',
      'title' => '查询报警模板详情',
      'description' => '本文将提供一个示例，查询报警模板`70****`的详情。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMetricRuleTemplateList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警模板名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS_Template1',
          ),
        ),
        1 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警模板名称关键字。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS',
          ),
        ),
        2 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警模板ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '70****',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

默认值：1。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示模板的记录条数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'History',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否显示报警模板应用到应用分组的历史记录。取值：

- true：显示。

- false（默认值）：不显示。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'Order',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序方式。取值：

- true（默认值）：升序。   

- false：降序。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'OrderBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序依据。取值：

- gmtMotified：修改日期。  

- gmtCreate（默认值）：创建日期。',
            'type' => 'string',
            'required' => false,
            'example' => 'gmtCreate',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '659401C0-6214-5C02-972A-CFA929D717B7',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Templates' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Template' => 
                  array (
                    'description' => '报警模板列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Description' => 
                        array (
                          'description' => '报警模板描述信息。',
                          'type' => 'string',
                          'example' => 'ECS的CPU使用率',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建报警模板的时间戳。

单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1646018798000',
                        ),
                        'Name' => 
                        array (
                          'description' => '报警模板名称。',
                          'type' => 'string',
                          'example' => 'ECS_Template1',
                        ),
                        'RestVersion' => 
                        array (
                          'description' => '报警模板版本。

默认值：0。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '修改报警模板的时间戳。

单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1646054798000',
                        ),
                        'TemplateId' => 
                        array (
                          'description' => '报警模板ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '70****',
                        ),
                        'ApplyHistories' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ApplyHistory' => 
                            array (
                              'description' => '报警模板应用到应用分组的历史记录。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '无。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'GroupId' => 
                                  array (
                                    'description' => '应用分组ID。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '3607****',
                                  ),
                                  'GroupName' => 
                                  array (
                                    'description' => '应用分组名称。',
                                    'type' => 'string',
                                    'example' => 'ECS_Group',
                                  ),
                                  'ApplyTime' => 
                                  array (
                                    'description' => '报警模板应用到应用分组的时间戳。

单位：毫秒。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1646055898000',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"659401C0-6214-5C02-972A-CFA929D717B7\\",\\n  \\"Total\\": 2,\\n  \\"Success\\": true,\\n  \\"Templates\\": {\\n    \\"Template\\": [\\n      {\\n        \\"Description\\": \\"ECS的CPU使用率\\",\\n        \\"GmtCreate\\": 1646018798000,\\n        \\"Name\\": \\"ECS_Template1\\",\\n        \\"RestVersion\\": 0,\\n        \\"GmtModified\\": 1646054798000,\\n        \\"TemplateId\\": 0,\\n        \\"ApplyHistories\\": {\\n          \\"ApplyHistory\\": [\\n            {\\n              \\"GroupId\\": 0,\\n              \\"GroupName\\": \\"ECS_Group\\",\\n              \\"ApplyTime\\": 1646055898000\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMetricRuleTemplateListResponse>\\r\\n\\t<RequestId>659401C0-6214-5C02-972A-CFA929D717B7</RequestId>\\r\\n\\t<Total>2</Total>\\r\\n\\t<Templates>\\r\\n\\t\\t<Template>\\r\\n\\t\\t\\t<GmtCreate>1606291110000</GmtCreate>\\r\\n\\t\\t\\t<Description></Description>\\r\\n\\t\\t\\t<GmtModified>1646018798000</GmtModified>\\r\\n\\t\\t\\t<RestVersion>0</RestVersion>\\r\\n\\t\\t\\t<TemplateId>70****</TemplateId>\\r\\n\\t\\t\\t<Name>ECS_Template1</Name>\\r\\n\\t\\t</Template>\\r\\n\\t\\t<Template>\\r\\n\\t\\t\\t<GmtCreate>1607420429000</GmtCreate>\\r\\n\\t\\t\\t<Description></Description>\\r\\n\\t\\t\\t<GmtModified>1646017352000</GmtModified>\\r\\n\\t\\t\\t<RestVersion>1</RestVersion>\\r\\n\\t\\t\\t<TemplateId>71****</TemplateId>\\r\\n\\t\\t\\t<Name>ECS_Template2</Name>\\r\\n\\t\\t</Template>\\r\\n\\t</Templates>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeMetricRuleTemplateListResponse>\\t","errorExample":""}]',
      'title' => '查询报警模板列表',
      'summary' => '调用DescribeMetricRuleTemplateList接口查询报警模板列表。',
      'description' => '本文将提供一个示例，查询报警模板列表。返回结果显示，报警模板列表中共有2个报警模板，分别是`ECS_Template1`和`ECS_Template2`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。

',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ApplyMetricRuleTemplate' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SilenceTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通道沉默周期。单位：秒。默认值：86400。

> 当监控数据持续超过报警规则阈值时，每个沉默周期内只发送一次报警通知。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '86400',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。

关于如何获取应用分组ID，请参见[DescribeMonitorGroups](~~115032~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '123456',
          ),
        ),
        2 => 
        array (
          'name' => 'TemplateIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警模板ID。

关于如何获取报警模板ID，请参见[DescribeMetricRuleTemplateList](~~114982~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '700****',
          ),
        ),
        3 => 
        array (
          'name' => 'EnableStartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警生效的开始时间。取值范围：00~23，表示00:00到23:00。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '00',
          ),
        ),
        4 => 
        array (
          'name' => 'EnableEndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警生效的结束时间。取值范围：00~23，表示00:59到23:59。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '23',
          ),
        ),
        5 => 
        array (
          'name' => 'NotifyLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警通知方式。取值：

<props="china">- 2：电话+短信+邮箱+旺旺+钉钉机器人。</props>

<props="china">- 3：短信+邮箱+旺旺+钉钉机器人。</props>

<props="china">- 4：旺旺+钉钉机器人。</props>


<props="intl">4：旺旺+钉钉机器人。</props>

<props="partner">4：旺旺+钉钉机器人。</props>',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '4',
          ),
        ),
        6 => 
        array (
          'name' => 'ApplyMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板应用方式。取值：

- GROUP_INSTANCE_FIRST：应用分组实例优先。应用报警模板时，以应用分组实例优先，如果应用分组中不存在该实例，则忽略模板中的规则。

- ALARM_TEMPLATE_FIRST：报警模板实例优先。应用报警模板时，不管应用分组中是否存在该实例，都创建报警规则。',
            'type' => 'string',
            'required' => false,
            'example' => 'GROUP_INSTANCE_FIRST',
          ),
        ),
        7 => 
        array (
          'name' => 'Webhook',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警发生时会回调指定的URL地址并发送POST请求。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://www.aliyun.com',
          ),
        ),
        8 => 
        array (
          'name' => 'AppendMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模板应用策略。取值：

- all：删除已选择分组上所有通过报警模板创建的规则，然后按模板创建新的报警规则（默认值）。

- append：删除已选择分组上通过该报警模板创建的规则，然后按当前模板创建新的报警规则。',
            'type' => 'string',
            'required' => false,
            'example' => 'all',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3F897F3C-020A-4993-95B4-63ABB84F83E6',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Resource' => 
              array (
                'description' => '报警规则影响的资源。',
                'type' => 'object',
                'properties' => 
                array (
                  'GroupId' => 
                  array (
                    'description' => '应用分组ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '123456',
                  ),
                  'AlertResults' => 
                  array (
                    'description' => '生成报警规则的详细结果。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Code' => 
                        array (
                          'description' => '状态码。
>200表示成功。',
                          'type' => 'string',
                          'example' => '200',
                        ),
                        'Message' => 
                        array (
                          'description' => '返回信息。',
                          'type' => 'string',
                          'example' => 'alert rule is creating, please wait a few minutes.',
                        ),
                        'Success' => 
                        array (
                          'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'RuleName' => 
                        array (
                          'description' => '报警规则名称。',
                          'type' => 'string',
                          'example' => 'test123',
                        ),
                        'RuleId' => 
                        array (
                          'description' => '报警规则ID。',
                          'type' => 'string',
                          'example' => 'applyTemplate8ab74c6b-9f27-47ab-8841-de01dc08****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"3F897F3C-020A-4993-95B4-63ABB84F83E6\\",\\n  \\"Success\\": true,\\n  \\"Resource\\": {\\n    \\"GroupId\\": 123456,\\n    \\"AlertResults\\": [\\n      {\\n        \\"Code\\": \\"200\\",\\n        \\"Message\\": \\"alert rule is creating, please wait a few minutes.\\",\\n        \\"Success\\": true,\\n        \\"RuleName\\": \\"test123\\",\\n        \\"RuleId\\": \\"applyTemplate8ab74c6b-9f27-47ab-8841-de01dc08****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ApplyMetricRuleTemplateResponse>\\r\\n\\t<RequestId>37D4037E-827E-4E66-87DF-F56A22F2884D</RequestId>\\r\\n\\t<Resource>\\r\\n\\t\\t<GroupId>123456</GroupId>\\r\\n\\t\\t<AlertResults>\\r\\n\\t\\t\\t<Message>alert rule is creating, please wait a few minutes.</Message>\\r\\n\\t\\t\\t<RuleId>applyTemplate8ab74c6b-9f27-47ab-8841-de01dc08****</RuleId>\\r\\n\\t\\t\\t<Code>202</Code>\\r\\n\\t\\t\\t<RuleName>test123</RuleName>\\r\\n\\t\\t\\t<Success>true</Success>\\r\\n\\t\\t</AlertResults>\\r\\n\\t</Resource>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</ApplyMetricRuleTemplateResponse>","errorExample":""}]',
      'title' => '应用报警模板至应用分组',
      'summary' => '调用ApplyMetricRuleTemplate接口将报警模板应用到应用分组并生成报警规则。',
      'description' => '本文将提供一个示例，将报警模板`700****`应用到应用分组`123456`，生成报警规则的ID为`applyTemplate8ab74c6b-9f27-47ab-8841-de01dc08****`，名称为`test123`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMetricRuleList' => 
    array (
      'summary' => '调用DescribeMetricRuleList接口查询报警规则列表中的所有规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项名称。

关于如何获取监控项名称，请参见[DescribeMetricMetaList](~~98846~~)或[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'cpu_total',
          ),
        ),
        1 => 
        array (
          'name' => 'EnableState',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则的启用状态。取值：
- true：启用。
- false：禁用。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的命名空间。

关于如何获取云产品的命名空间，请参见[DescribeMetricMetaList](~~98846~~)或[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        3 => 
        array (
          'name' => 'Page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

起始值：1。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页时每页显示的数据行数。

起始值：1。默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'AlertState',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则状态。取值：
- OK：正常。
- ALARM：报警。
- INSUFFICIENT_DATA：无数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'OK',
          ),
        ),
        6 => 
        array (
          'name' => 'Dimensions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定资源的监控维度。

格式：`key:value`键值对形式的集合，例如：`{"userId":"120886317861****"}`和`{"instanceId":"i-2ze2d6j5uhg20x47****"}`。',
            'type' => 'string',
            'required' => false,
            'example' => '{"instanceId":"i-2ze2d6j5uhg20x47****"}',
          ),
        ),
        7 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则名称。

该参数支持模糊查询。',
            'type' => 'string',
            'required' => false,
            'example' => 'Rule_01',
          ),
        ),
        8 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。

关于如何获取应用分组ID，请参见[DescribeMonitorGroups](~~115032~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '7301****',
          ),
        ),
        9 => 
        array (
          'name' => 'RuleIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。多个报警规则ID之间用半角逗号（,）分隔，一次最多可查询20条。',
            'type' => 'string',
            'required' => false,
            'example' => 'applyTemplate344cfd42-0f32-4fd6-805a-88d7908a****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '386C6712-335F-5054-930A-CC92B851ECBA',
              ),
              'Total' => 
              array (
                'description' => '总记录数。',
                'type' => 'string',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Alarms' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Alarm' => 
                  array (
                    'description' => '报警规则列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SilenceTime' => 
                        array (
                          'description' => '通道沉默周期。单位：秒。默认值：86400，最小值：3600。

监控数据持续超过报警规则阈值时，每个沉默周期内只发送一次报警通知。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '86400',
                        ),
                        'MetricName' => 
                        array (
                          'description' => '监控项名称。',
                          'type' => 'string',
                          'example' => 'cpu_total',
                        ),
                        'Webhook' => 
                        array (
                          'description' => '报警发生回调时的URL地址。云监控会将报警信息通过POST请求推送到该地址，目前仅支持HTTP协议。',
                          'type' => 'string',
                          'example' => 'https://www.aliyun.com',
                        ),
                        'ContactGroups' => 
                        array (
                          'description' => '报警联系组。',
                          'type' => 'string',
                          'example' => 'ECS_Alarm',
                        ),
                        'SourceType' => 
                        array (
                          'description' => '报警规则类型。取值：METRIC，表示时序指标报警规则。

',
                          'type' => 'string',
                          'example' => 'METRIC',
                        ),
                        'Namespace' => 
                        array (
                          'description' => '云服务的命名空间。',
                          'type' => 'string',
                          'example' => 'acs_ecs_dashboard',
                        ),
                        'MailSubject' => 
                        array (
                          'description' => '报警邮件主题。',
                          'type' => 'string',
                          'example' => '"${serviceType}-${metricName}-${levelDescription}通知（${dimensions}）"',
                        ),
                        'NoEffectiveInterval' => 
                        array (
                          'description' => '报警规则的失效时间范围。',
                          'type' => 'string',
                          'example' => '00:00-05:30',
                        ),
                        'EffectiveInterval' => 
                        array (
                          'description' => '报警规则的生效时间范围。',
                          'type' => 'string',
                          'example' => '05:31-23:59',
                        ),
                        'RuleName' => 
                        array (
                          'description' => '报警规则名称。',
                          'type' => 'string',
                          'example' => 'Rule_01',
                        ),
                        'AlertState' => 
                        array (
                          'description' => '报警规则状态。取值：
- OK：正常。 
- ALARM：报警。
- INSUFFICIENT_DATA：无数据。',
                          'type' => 'string',
                          'example' => 'OK',
                        ),
                        'Period' => 
                        array (
                          'description' => '统计周期。',
                          'type' => 'string',
                          'example' => '60',
                        ),
                        'RuleId' => 
                        array (
                          'description' => '报警规则ID。',
                          'type' => 'string',
                          'example' => 'applyTemplate344cfd42-0f32-4fd6-805a-88d7908a****',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '应用分组名称。

> 如果报警规则关联到应用分组，此处显示该参数。',
                          'type' => 'string',
                          'example' => 'ECS_Group',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '应用分组ID。',
                          'type' => 'string',
                          'example' => '7301****',
                        ),
                        'Dimensions' => 
                        array (
                          'description' => '报警规则维度。',
                          'type' => 'string',
                          'example' => '[{"instanceId":"i-2ze2d6j5uhg20x47****"}]',
                        ),
                        'EnableState' => 
                        array (
                          'description' => '启用状态。取值：
- true：启用。
- false：禁用。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Resources' => 
                        array (
                          'description' => '报警规则关联的资源。',
                          'type' => 'string',
                          'example' => '[{\\"instanceId\\":\\"i-2ze2d6j5uhg20x47****\\"}]',
                        ),
                        'Escalations' => 
                        array (
                          'description' => '报警分级别触发条件。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Info' => 
                            array (
                              'description' => 'Info级别报警触发条件。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'ComparisonOperator' => 
                                array (
                                  'description' => 'Info级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                                  'type' => 'string',
                                  'example' => 'GreaterThanOrEqualToThreshold',
                                ),
                                'PreCondition' => 
                                array (
                                  'description' => 'Info级别报警的前置条件。当参数ComparisonOperator设置为同比或环比时，与该参数共同起作用。

例如：该参数设置为$Average>80，ComparisonOperator设置为GreaterThanYesterday，Threshold设置为10，表示当平均值大于80且环比昨天上涨10%时，触发报警。 

> $Average>0中的$Average为一个占位符，格式为`$监控结果字段值`，云监控会将其替换为对应的统计值或原始的监控值。',
                                  'type' => 'string',
                                  'example' => '$Average>80',
                                ),
                                'Times' => 
                                array (
                                  'description' => 'Info级别报警连续出现次数。报警连续出现这个次数，且超过阈值才会触发报警。',
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'example' => '3',
                                ),
                                'Threshold' => 
                                array (
                                  'description' => 'Info级别报警阈值。',
                                  'type' => 'string',
                                  'example' => '90',
                                ),
                                'Statistics' => 
                                array (
                                  'description' => 'Info级别报警统计方法。',
                                  'type' => 'string',
                                  'example' => 'Average',
                                ),
                              ),
                            ),
                            'Warn' => 
                            array (
                              'description' => 'Warn级别报警触发条件。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'ComparisonOperator' => 
                                array (
                                  'description' => 'Warn级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                                  'type' => 'string',
                                  'example' => 'GreaterThanOrEqualToThreshold',
                                ),
                                'PreCondition' => 
                                array (
                                  'description' => 'Warn级别报警的前置条件。当参数ComparisonOperator设置为同比或环比时，与该参数共同起作用。

例如：该参数设置为$Average>80，ComparisonOperator设置为GreaterThanYesterday，Threshold设置为10，表示当平均值大于80且环比昨天上涨10%时，触发报警。 

> $Average>0中的$Average为一个占位符，格式为`$监控结果字段值`，云监控会将其替换为对应的统计值或原始的监控值。',
                                  'type' => 'string',
                                  'example' => '$Average>80',
                                ),
                                'Times' => 
                                array (
                                  'description' => 'Warn级别报警连续出现次数。报警连续出现这个次数，且超过阈值才会触发报警。',
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'example' => '3',
                                ),
                                'Threshold' => 
                                array (
                                  'description' => 'Warn级别报警阈值。',
                                  'type' => 'string',
                                  'example' => '90',
                                ),
                                'Statistics' => 
                                array (
                                  'description' => 'Warn级别报警统计方法。',
                                  'type' => 'string',
                                  'example' => 'Average',
                                ),
                              ),
                            ),
                            'Critical' => 
                            array (
                              'description' => 'Critical级别报警触发条件。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'ComparisonOperator' => 
                                array (
                                  'description' => 'Critical级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                                  'type' => 'string',
                                  'example' => 'GreaterThanOrEqualToThreshold',
                                ),
                                'PreCondition' => 
                                array (
                                  'description' => 'Critical级别报警的前置条件。当参数ComparisonOperator设置为同比或环比时，与该参数共同起作用。

例如：该参数设置为$Average>80，ComparisonOperator设置为GreaterThanYesterday，Threshold设置为10，表示当平均值大于80且环比昨天上涨10%时，触发报警。 

> $Average>0中的$Average为一个占位符，格式为`$监控结果字段值`，云监控会将其替换为对应的统计值或原始的监控值。',
                                  'type' => 'string',
                                  'example' => '$Average>80',
                                ),
                                'Times' => 
                                array (
                                  'description' => 'Critical级别报警连续出现次数。报警连续出现这个次数，且超过阈值才会触发报警。',
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'example' => '3',
                                ),
                                'Threshold' => 
                                array (
                                  'description' => 'Critical级别报警阈值。',
                                  'type' => 'string',
                                  'example' => '90',
                                ),
                                'Statistics' => 
                                array (
                                  'description' => 'Critical级别报警统计方法。',
                                  'type' => 'string',
                                  'example' => 'Average',
                                ),
                              ),
                            ),
                          ),
                        ),
                        'NoDataPolicy' => 
                        array (
                          'description' => '无监控数据时报警的处理方式。取值：
- KEEP_LAST_STATE（默认值）：不做任何处理。
- INSUFFICIENT_DATA：报警内容为无数据。
- OK：正常。',
                          'type' => 'string',
                          'example' => 'KEEP_LAST_STATE',
                        ),
                        'CompositeExpression' => 
                        array (
                          'description' => '多指标的报警条件。

> 单指标和多指标互斥，不能同时设置。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Level' => 
                            array (
                              'description' => '报警级别。取值：
- Critical：严重。
- Warn：警告。
- Info：信息。',
                              'type' => 'string',
                              'example' => 'Critical',
                            ),
                            'ExpressionList' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'ExpressionList' => 
                                array (
                                  'description' => '标准创建的报警条件列表。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '无。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'MetricName' => 
                                      array (
                                        'description' => '云产品的监控项名称。',
                                        'type' => 'string',
                                        'example' => 'cpu_total',
                                      ),
                                      'Period' => 
                                      array (
                                        'description' => '监控项的聚合周期。

单位：秒。',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '60',
                                      ),
                                      'Statistics' => 
                                      array (
                                        'description' => '监控项的统计方法。取值：
- $Maximum：最大值。
- $Minimum：最小值。
- $Average：平均值。
- $Availability：可用率（通常用于站点监控）。

> `$`为监控项的统一前缀符号。支持的云产品，请参见[云产品监控项](~~163515~~)。',
                                        'type' => 'string',
                                        'example' => '$Maximum',
                                      ),
                                      'ComparisonOperator' => 
                                      array (
                                        'description' => '阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                                        'type' => 'string',
                                        'example' => 'GreaterThanOrEqualToThreshold',
                                      ),
                                      'Threshold' => 
                                      array (
                                        'description' => '报警阈值。',
                                        'type' => 'string',
                                        'example' => '90',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'ExpressionListJoin' => 
                            array (
                              'description' => '多指标报警条件之间的关系。取值： 

- `&&`：当所有指标都符合报警条件时，才触发报警。当ExpressionList下各表达式均为`true`时，才触发报警。

- `||`：其中一个指标符合报警条件，即触发报警。',
                              'type' => 'string',
                              'example' => '||',
                            ),
                            'ExpressionRaw' => 
                            array (
                              'description' => '表达式创建的报警条件。包括但不限于以下情况：

- 为部分资源设置报警黑名单，例如：`$instanceId != \'i-io8kfvcpp7x5****\' ``&&`` $Average > 50`，表示当报警规则中的实例`i-io8kfvcpp7x5****`的`Average`大于50时，也不会产生报警。
- 对规则中的指定实例设置特殊报警阈值，例如：`$Average > ($instanceId == \'i-io8kfvcpp7x5****\'? 80: 50)`，表示当报警规则中的实例`i-io8kfvcpp7x5****`的`Average`大于80时，才报警，其他实例的`Average`大于50，即可报警。
- 对规则中超过阈值的实例数量进行限制，例如：`count($Average > 20) > 3`，表示当报警规则中的`Average`大于20的实例数大于3个时，才进行报警。
',
                              'type' => 'string',
                              'example' => '$Average > ($instanceId == \'i-io8kfvcpp7x5****\'? 80: 50)',
                            ),
                            'Times' => 
                            array (
                              'description' => '发出报警通知需要达到报警条件的次数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '3',
                            ),
                          ),
                        ),
                        'Labels' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Labels' => 
                            array (
                              'description' => '报警规则标签。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '无。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '报警规则的标签键。',
                                    'type' => 'string',
                                    'example' => 'cmsRuleKey',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '报警规则的标签值。',
                                    'type' => 'string',
                                    'example' => 'cmsRuleValue',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Prometheus' => 
                        array (
                          'description' => 'Prometheus报警。

> 仅当您为企业云监控创建Prometheus报警规则，需要设置该参数。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PromQL' => 
                            array (
                              'description' => 'PromQL查询语句。

> 通过PromQL查询语句获取的数据即为报警数据，请您在该语句中携带报警阈值。',
                              'type' => 'string',
                              'example' => 'CpuUsage{instanceId="xxxx"}[1m]>90',
                            ),
                            'Level' => 
                            array (
                              'description' => '报警级别。取值：
- Critical：严重。
- Warn：警告。
- Info：信息。',
                              'type' => 'string',
                              'example' => 'Critical',
                            ),
                            'Times' => 
                            array (
                              'description' => '发出报警通知需要达到报警条件的次数。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '3',
                            ),
                            'Annotations' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Annotations' => 
                                array (
                                  'description' => 'Prometheus报警时，将注释的键和值进行渲染，易于您对监控项或报警规则的理解。

> 该功能等同于Prometheus的Annotation。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '无。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Key' => 
                                      array (
                                        'description' => '注释的键。',
                                        'type' => 'string',
                                        'example' => 'summary',
                                      ),
                                      'Value' => 
                                      array (
                                        'description' => '注释的值。',
                                        'type' => 'string',
                                        'example' => '{{ $labels.instance }} CPU usage above 10% {current value: {{ humanizePercentage $value }} }',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is not valid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'The Request is not authorization.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"386C6712-335F-5054-930A-CC92B851ECBA\\",\\n  \\"Total\\": \\"1\\",\\n  \\"Success\\": true,\\n  \\"Alarms\\": {\\n    \\"Alarm\\": [\\n      {\\n        \\"SilenceTime\\": 86400,\\n        \\"MetricName\\": \\"cpu_total\\",\\n        \\"Webhook\\": \\"https://www.aliyun.com\\",\\n        \\"ContactGroups\\": \\"ECS_Alarm\\",\\n        \\"SourceType\\": \\"METRIC\\",\\n        \\"Namespace\\": \\"acs_ecs_dashboard\\",\\n        \\"MailSubject\\": \\"\\\\\\"${serviceType}-${metricName}-${levelDescription}通知（${dimensions}）\\\\\\"\\",\\n        \\"NoEffectiveInterval\\": \\"00:00-05:30\\",\\n        \\"EffectiveInterval\\": \\"05:31-23:59\\",\\n        \\"RuleName\\": \\"Rule_01\\",\\n        \\"AlertState\\": \\"OK\\",\\n        \\"Period\\": \\"60\\",\\n        \\"RuleId\\": \\"applyTemplate344cfd42-0f32-4fd6-805a-88d7908a****\\",\\n        \\"GroupName\\": \\"ECS_Group\\",\\n        \\"GroupId\\": \\"7301****\\",\\n        \\"Dimensions\\": \\"[{\\\\\\"instanceId\\\\\\":\\\\\\"i-2ze2d6j5uhg20x47****\\\\\\"}]\\",\\n        \\"EnableState\\": true,\\n        \\"Resources\\": \\"[{\\\\\\\\\\\\\\"instanceId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"i-2ze2d6j5uhg20x47****\\\\\\\\\\\\\\"}]\\",\\n        \\"Escalations\\": {\\n          \\"Info\\": {\\n            \\"ComparisonOperator\\": \\"GreaterThanOrEqualToThreshold\\",\\n            \\"PreCondition\\": \\"$Average>80\\",\\n            \\"Times\\": 3,\\n            \\"Threshold\\": \\"90\\",\\n            \\"Statistics\\": \\"Average\\"\\n          },\\n          \\"Warn\\": {\\n            \\"ComparisonOperator\\": \\"GreaterThanOrEqualToThreshold\\",\\n            \\"PreCondition\\": \\"$Average>80\\",\\n            \\"Times\\": 3,\\n            \\"Threshold\\": \\"90\\",\\n            \\"Statistics\\": \\"Average\\"\\n          },\\n          \\"Critical\\": {\\n            \\"ComparisonOperator\\": \\"GreaterThanOrEqualToThreshold\\",\\n            \\"PreCondition\\": \\"$Average>80\\",\\n            \\"Times\\": 3,\\n            \\"Threshold\\": \\"90\\",\\n            \\"Statistics\\": \\"Average\\"\\n          }\\n        },\\n        \\"NoDataPolicy\\": \\"KEEP_LAST_STATE\\",\\n        \\"CompositeExpression\\": {\\n          \\"Level\\": \\"Critical\\",\\n          \\"ExpressionList\\": {\\n            \\"ExpressionList\\": [\\n              {\\n                \\"MetricName\\": \\"cpu_total\\",\\n                \\"Period\\": 60,\\n                \\"Statistics\\": \\"$Maximum\\",\\n                \\"ComparisonOperator\\": \\"GreaterThanOrEqualToThreshold\\",\\n                \\"Threshold\\": \\"90\\"\\n              }\\n            ]\\n          },\\n          \\"ExpressionListJoin\\": \\"||\\",\\n          \\"ExpressionRaw\\": \\"$Average > ($instanceId == \'i-io8kfvcpp7x5****\'? 80: 50)\\",\\n          \\"Times\\": 3\\n        },\\n        \\"Labels\\": {\\n          \\"Labels\\": [\\n            {\\n              \\"Key\\": \\"cmsRuleKey\\",\\n              \\"Value\\": \\"cmsRuleValue\\"\\n            }\\n          ]\\n        },\\n        \\"Prometheus\\": {\\n          \\"PromQL\\": \\"CpuUsage{instanceId=\\\\\\"xxxx\\\\\\"}[1m]>90\\",\\n          \\"Level\\": \\"Critical\\",\\n          \\"Times\\": 3,\\n          \\"Annotations\\": {\\n            \\"Annotations\\": [\\n              {\\n                \\"Key\\": \\"summary\\",\\n                \\"Value\\": \\"{{ $labels.instance }} CPU usage above 10% {current value: {{ humanizePercentage $value }} }\\"\\n              }\\n            ]\\n          }\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMetricRuleListResponse>\\r\\n\\t<RequestId>386C6712-335F-5054-930A-CC92B851ECBA</RequestId>\\r\\n\\t<Total>1</Total>\\r\\n\\t<Alarms>\\r\\n\\t\\t<Alarm>\\r\\n\\t\\t\\t<GroupName>ECS_Group</GroupName>\\r\\n\\t\\t\\t<SilenceTime>86400</SilenceTime>\\r\\n\\t\\t\\t<ContactGroups>ECS_Alarm</ContactGroups>\\r\\n\\t\\t\\t<NoEffectiveInterval>00:00-05:30</NoEffectiveInterval>\\r\\n\\t\\t\\t<GroupBy>group</GroupBy>\\r\\n\\t\\t\\t<MailSubject>${serviceType}-${metricName}-${levelDescription}通知（${dimensions}）</MailSubject>\\r\\n\\t\\t\\t<SourceType>METRIC</SourceType>\\r\\n\\t\\t\\t<RuleId>applyTemplate344cfd42-0f32-4fd6-805a-88d7908a****</RuleId>\\r\\n\\t\\t\\t<Period>60</Period>\\r\\n\\t\\t\\t<Dimensions>\\r\\n\\t\\t\\t\\t<instanceId>i-2ze2d6j5uhg20x47****</instanceId>\\r\\n\\t\\t\\t</Dimensions>\\r\\n\\t\\t\\t<EffectiveInterval>05:31-23:59</EffectiveInterval>\\r\\n\\t\\t\\t<Namespace>acs_ecs_dashboard</Namespace>\\r\\n\\t\\t\\t<AlertState>OK</AlertState>\\r\\n\\t\\t\\t<GroupId>7301****</GroupId>\\r\\n\\t\\t\\t<MetricName>cpu_total</MetricName>\\r\\n\\t\\t\\t<EnableState>true</EnableState>\\r\\n\\t\\t\\t<Escalations>\\r\\n\\t\\t\\t\\t<Critical>\\r\\n\\t\\t\\t\\t\\t<ComparisonOperator>GreaterThanOrEqualToThreshold</ComparisonOperator>\\r\\n\\t\\t\\t\\t\\t<Times>3</Times>\\r\\n\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t<Threshold>90</Threshold>\\r\\n\\t\\t\\t\\t</Critical>\\r\\n\\t\\t\\t\\t<Info>\\r\\n\\t\\t\\t\\t\\t<ComparisonOperator>GreaterThanOrEqualToThreshold</ComparisonOperator>\\r\\n\\t\\t\\t\\t\\t<Times>3</Times>\\r\\n\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t<Threshold>90</Threshold>\\r\\n\\t\\t\\t\\t</Info>\\r\\n\\t\\t\\t\\t<Warn>\\r\\n\\t\\t\\t\\t\\t<ComparisonOperator>GreaterThanOrEqualToThreshold</ComparisonOperator>\\r\\n\\t\\t\\t\\t\\t<Times>3</Times>\\r\\n\\t\\t\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t\\t\\t<Threshold>90</Threshold>\\r\\n\\t\\t\\t\\t</Warn>\\r\\n\\t\\t\\t</Escalations>\\r\\n\\t\\t\\t<Webhook>https://www.aliyun.com</Webhook>\\r\\n\\t\\t\\t<Resources>[{\\\\\\"instanceId\\\\\\":\\\\\\"i-2ze2d6j5uhg20x47****\\\\\\"}]</Resources>\\r\\n\\t\\t\\t<RuleName>Rule_01</RuleName>\\r\\n\\t\\t</Alarm>\\r\\n\\t</Alarms>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeMetricRuleListResponse>\\t","errorExample":""}]',
      'title' => '查询报警规则列表中的所有规则',
      'description' => '本文将提供一个示例，查询当前阿里云账号下的报警规则列表中的所有报警规则。返回结果显示，报警规则列表中只有一条报警规则，该报警规则的名称为`Rule_01`、ID为`applyTemplate344cfd42-0f32-4fd6-805a-88d7908a****`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateGroupMetricRules' => 
    array (
      'summary' => '调用CreateGroupMetricRules接口批量为指定应用分组创建报警规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。

关于如何获取应用分组ID，请参见[DescribeMonitorGroups](~~115032~~)。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '3607****',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupMetricRules',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '应用分组的监控项规则列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '应用分组的监控项规则。',
              'type' => 'object',
              'properties' => 
              array (
                'Escalations.Info.Threshold' => 
                array (
                  'description' => '普通级别报警阈值。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10',
                ),
                'MetricName' => 
                array (
                  'description' => '监控项名称。

N的取值范围：1~200。

关于如何获取监控项名称，请参见[DescribeMetricMetaList](~~98846~~)或[云产品监控项](~~163515~~)。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'cpu_total',
                ),
                'Escalations.Warn.Threshold' => 
                array (
                  'description' => '警告级别报警阈值。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '20',
                ),
                'EffectiveInterval' => 
                array (
                  'description' => '报警规则的生效时间范围。N的取值范围：1~200。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '05:31-23:59',
                ),
                'NoEffectiveInterval' => 
                array (
                  'description' => '报警规则的失效时间范围。N的取值范围：1~200。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '00:00-05:30',
                ),
                'RuleId' => 
                array (
                  'description' => '报警规则ID。

N的取值范围：1~200。

',
                  'type' => 'string',
                  'required' => true,
                  'example' => '456789',
                ),
                'Escalations.Critical.Times' => 
                array (
                  'description' => '发送紧急报警通知需要监控指标达到报警阈值的次数。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '3',
                ),
                'Dimensions' => 
                array (
                  'description' => '指定资源的监控维度。

格式：`key:value`键值对形式的集合，例如：`{"userId":"120886317861****"}`和`{"instanceId":"i-2ze2d6j5uhg20x47****"}`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '[{"instanceId":"i-m5e1qg6uo38rztr4****"}]',
                ),
                'Escalations.Critical.Threshold' => 
                array (
                  'description' => '触发紧急级别报警通知的阈值。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '90',
                ),
                'Escalations.Critical.Statistics' => 
                array (
                  'description' => '紧急级别报警统计方法。

N的取值范围：1~200。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Average',
                ),
                'Escalations.Warn.ComparisonOperator' => 
                array (
                  'description' => '警告级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。 
- GreaterThanThreshold：大于。 
- LessThanOrEqualToThreshold：小于等于。 
- LessThanThreshold：小于。 
- NotEqualToThreshold：不等于。 
- GreaterThanYesterday：同比昨天时间上涨。 
- LessThanYesterday：同比昨天时间下降。 
- GreaterThanLastWeek：同比上周同一时间上涨。 
- LessThanLastWeek：同比上周同一时间下降。 
- GreaterThanLastPeriod：环比上周期上涨。 
- LessThanLastPeriod：环比上周期下降。 

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Escalations.Info.Times' => 
                array (
                  'description' => '发送普通报警通知需要监控指标达到报警阈值的次数。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'SilenceTime' => 
                array (
                  'description' => '报警通知的沉默周期。N的取值范围：1~200。

单位：秒。默认值：86400。最小值：3600。

',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '86400',
                ),
                'Webhook' => 
                array (
                  'description' => '报警发生回调时的URL地址。N的取值范围：1~200。

填写公网可访问的URL地址，云监控会将报警信息通过POST请求推送到该地址，目前仅支持HTTP协议。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'https://www.aliyun.com',
                ),
                'Namespace' => 
                array (
                  'description' => '云产品的数据命名空间。

N的取值范围：1~200。

关于如何获取云产品的数据命名空间，请参见[DescribeMetricMetaList](~~98846~~)或[云产品监控项](~~163515~~)。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'acs_ecs_dashboard',
                ),
                'EmailSubject' => 
                array (
                  'description' => '报警邮件主题。

N的取值范围：1~200。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'ECS实例',
                ),
                'Period' => 
                array (
                  'description' => '监控数据的上报周期。

N的取值范围：1~200。 

`Period`的取值为60或60的整数倍。单位：秒。默认值：300。





',
                  'type' => 'string',
                  'required' => false,
                  'example' => '60',
                ),
                'RuleName' => 
                array (
                  'description' => '报警规则名称。

N的取值范围：1~200。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ECS_Rule1',
                ),
                'Escalations.Info.Statistics' => 
                array (
                  'description' => '普通级别报警统计方法。

N的取值范围：1~200。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Average',
                ),
                'Escalations.Warn.Times' => 
                array (
                  'description' => '发送警告报警通知需要监控指标达到报警阈值的次数。

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '3',
                ),
                'Escalations.Info.ComparisonOperator' => 
                array (
                  'description' => '普通级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。 
- GreaterThanThreshold：大于。 
- LessThanOrEqualToThreshold：小于等于。 
- LessThanThreshold：小于。 
- NotEqualToThreshold：不等于。 
- GreaterThanYesterday：同比昨天时间上涨。 
- LessThanYesterday：同比昨天时间下降。 
- GreaterThanLastWeek：同比上周同一时间上涨。 
- LessThanLastWeek：同比上周同一时间下降。 
- GreaterThanLastPeriod：环比上周期上涨。 
- LessThanLastPeriod：环比上周期下降。 

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Interval' => 
                array (
                  'description' => '报警规则的探测周期。

N的取值范围：1~200。

单位：秒。秒默认为监控项的最小频率。

> 建议报警规则的探测周期和数据上报周期保持一致。如果报警规则的探测周期小于数据上报周期，会因为数据不足而不能触发报警。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '60',
                ),
                'Category' => 
                array (
                  'description' => '云产品名称缩写。

N的取值范围：1~200。

关于如何获取云产品名称缩写，请参见[DescribeProjectMeta](~~114916~~)接口的返回参数`Labels`中的`metricCategory`。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ECS',
                ),
                'Escalations.Critical.ComparisonOperator' => 
                array (
                  'description' => '紧急级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。 
- GreaterThanThreshold：大于。 
- LessThanOrEqualToThreshold：小于等于。 
- LessThanThreshold：小于。 
- NotEqualToThreshold：不等于。 
- GreaterThanYesterday：同比昨天时间上涨。 
- LessThanYesterday：同比昨天时间下降。 
- GreaterThanLastWeek：同比上周同一时间上涨。 
- LessThanLastWeek：同比上周同一时间下降。 
- GreaterThanLastPeriod：环比上周期上涨。 
- LessThanLastPeriod：环比上周期下降。 

N的取值范围：1~200。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Escalations.Warn.Statistics' => 
                array (
                  'description' => '警告级别报警统计方法。

N的取值范围：1~200。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Average',
                ),
                'NoDataPolicy' => 
                array (
                  'description' => '无监控数据时报警的处理方式。取值：
- KEEP_LAST_STATE（默认值）：不做任何处理。
- INSUFFICIENT_DATA：报警内容为无数据。
- OK：正常。

N的取值范围：1~200。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'KEEP_LAST_STATE',
                ),
                'ContactGroups' => 
                array (
                  'description' => '报警联系人组。

N的取值范围：1~200。

关于如何获取报警联系人组，请参见[DescribeContactGroupList](~~114922~~)。

',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'ECS_Group',
                ),
                'Labels' => 
                array (
                  'description' => '报警规则的标签键。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '报警规则的标签键。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Key' => 
                      array (
                        'description' => '报警规则的标签键。报警通知中会包含标签。

N的取值范围：1~200。',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'key1',
                      ),
                      'Value' => 
                      array (
                        'description' => '报警规则的标签值。报警通知中会包含标签。

N的取值范围：1~200。',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'value1',
                      ),
                    ),
                    'required' => false,
                  ),
                  'required' => false,
                  'maxItems' => 20,
                  'minItems' => 0,
                ),
                'Options' => 
                array (
                  'description' => '高级设置。

格式：{"key1":"value1","key2":"value2"}，例如：{"NotSendOK":true}，表示是否发送报警恢复通知，key为NotSendOK，value为true（不发送）或false（默认发送）。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '{
      "NotSendOK": true
}',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 200,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '报错信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '461CF2CD-2FC3-4B26-8645-7BD27E7D0F1D',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Resources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AlertResult' => 
                  array (
                    'description' => '报警规则列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Code' => 
                        array (
                          'description' => '新创建报警规则的状态码。
>200表示成功。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '200',
                        ),
                        'Message' => 
                        array (
                          'description' => '新创建报警规则的错误信息。',
                          'type' => 'string',
                          'example' => 'Metric not found.',
                        ),
                        'Success' => 
                        array (
                          'description' => '新创建报警规则是否成功。取值：

- true：成功。

- false：失败。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'RuleName' => 
                        array (
                          'description' => '新创建报警规则的名称。',
                          'type' => 'string',
                          'example' => 'ECS_Rule1',
                        ),
                        'RuleId' => 
                        array (
                          'description' => '新创建报警规则的ID。',
                          'type' => 'string',
                          'example' => '456789',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => '500',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"461CF2CD-2FC3-4B26-8645-7BD27E7D0F1D\\",\\n  \\"Success\\": true,\\n  \\"Resources\\": {\\n    \\"AlertResult\\": [\\n      {\\n        \\"Code\\": 200,\\n        \\"Message\\": \\"Metric not found.\\",\\n        \\"Success\\": true,\\n        \\"RuleName\\": \\"ECS_Rule1\\",\\n        \\"RuleId\\": \\"456789\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateGroupMetricRulesResponse>\\r\\n\\t<RequestId>CED22B00-CFD8-5BDF-A645-CAF7B81FAE45</RequestId>\\r\\n\\t<Resources>\\r\\n\\t\\t<AlertResult>\\r\\n\\t\\t\\t<RuleId>456789</RuleId>\\r\\n\\t\\t\\t<Code>200</Code>\\r\\n\\t\\t\\t<Success>true</Success>\\r\\n\\t\\t\\t<RuleName>ECS_Rule1</RuleName>\\r\\n\\t\\t</AlertResult>\\r\\n\\t</Resources>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</CreateGroupMetricRulesResponse>\\t","errorExample":""}]',
      'title' => '批量为指定应用分组创建报警规则',
      'description' => '本文将提供一个示例，为应用分组`123456`中的云服务器ECS的监控项`cpu_total`创建一条报警规则，其中报警规则ID为`456789`，报警规则名称为`ECS_Rule1`，报警级别为`Critical`，报警统计方法为`Average`，报警阈值比较符为`GreaterThanOrEqualToThreshold`，报警阈值为`90`，报警重试次数为`3`。返回结果显示，报警规则`ECS_Rule1`创建成功。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateMetricRuleResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'i-2ze3w55tr2rcpejpcfap_59c96b85-0339-4f35-ba66-ae4e34d3****',
          ),
        ),
        1 => 
        array (
          'name' => 'Overwrite',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否覆盖。取值：
- true：覆盖。表示本次提交的资源将覆盖之前的关联资源，即全量修改。
- false：不覆盖。 表示本次提交的资源将不覆盖之前的关联资源（关联的结果资源为历史的关联资源加本次提交的资源），即增量修改。
',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'Resources',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联的资源。格式为一个JSON数组。

>每次最多添加100个资源实例，一个报警规则最多关联3000个实例。',
            'type' => 'string',
            'required' => true,
            'example' => '[{"instanceId":"i-a2d5q7pm3f9yr29e****"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0671A721-0D7A-4F11-BB77-2416325D65AB',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"0671A721-0D7A-4F11-BB77-2416325D65AB\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>0671A721-0D7A-4F11-BB77-2416325D65AB</RequestId>\\n<Success>true</Success>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '创建一个报警规则关联的资源',
      'summary' => '调用CreateMetricRuleResources接口创建一个报警规则关联的资源。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteMetricRuleTargets' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'delete',
        3 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ruleId-xxxxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'TargetIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '目标ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '目标ID。N的取值范围：1~5。',
              'type' => 'string',
              'required' => false,
              'example' => '1',
            ),
            'required' => true,
            'example' => '12345',
            'maxItems' => 5,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。
',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '786E92D2-AC66-4250-B76F-F1E2FCDDBA1C',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'FailIds' => 
              array (
                'description' => '删除失败的目标ID列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'TargetIds' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'TargetId' => 
                      array (
                        'description' => '删除失败的目标ID。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '删除失败的目标ID。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed because of an unknown error, exception or failure.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"786E92D2-AC66-4250-B76F-F1E2FCDDBA1C\\",\\n  \\"Success\\": true,\\n  \\"FailIds\\": {\\n    \\"TargetIds\\": {\\n      \\"TargetId\\": [\\n        \\"1\\"\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DeleteMetricRuleTargetsResponse>\\r\\n\\t\\t<RequestId>786E92D2-AC66-4250-B76F-F1E2FCDDBA1C</RequestId>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Success>true</Success>\\r\\n\\t\\t<FailIds>\\r\\n\\t\\t\\t<TargetIds>1</TargetIds>\\r\\n\\t\\t</FailIds>\\r\\n</DeleteMetricRuleTargetsResponse>","errorExample":""}]',
      'title' => '删除报警规则的推送渠道',
      'summary' => '调用DeleteMetricRuleTargets接口删除一个报警规则的推送渠道。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteMetricRules' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警规则ID。N的取值范围：1~100。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'ab05733c97b7ce239fb1b53393dc1697c7e12****',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E5599964-8D0D-40DC-8E90-27A619384B81',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'ThrottlingException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternetServerError',
            'errorMessage' => 'InternetServerError',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"E5599964-8D0D-40DC-8E90-27A619384B81\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteMetricRulesResponse>\\n    <RequestId>AE2ACE17-BD92-4FB0-83DB-AC969C677CE7</RequestId>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</DeleteMetricRulesResponse>","errorExample":""}]',
      'title' => '删除一个或多个报警规则',
      'summary' => '调用DeleteMetricRules接口删除一个或多个报警规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteMetricRuleResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rr-bp18017n6iolv****',
          ),
        ),
        1 => 
        array (
          'name' => 'Resources',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则关联的资源。',
            'type' => 'string',
            'required' => true,
            'example' => '[{"instanceId":"i-uf6hm9lnlzsarrc7****"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The alert does not exist.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D8A35882-90C6-4F03-BBEB-153C180398EA',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The alert does not exist.\\",\\n  \\"RequestId\\": \\"D8A35882-90C6-4F03-BBEB-153C180398EA\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteMetricRuleResourcesResponse>\\n\\t\\t<RequestId>0671A721-0D7A-4F11-BB77-2416325D65AB</RequestId>\\n\\t\\t<Success>true</Success>\\n\\t\\t<Code>200</Code>\\n</DeleteMetricRuleResourcesResponse>","errorExample":""}]',
      'title' => '删除报警规则关联的资源',
      'summary' => '调用DeleteMetricRuleResources接口删除报警规则关联的资源。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableMetricRules' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警规则ID。

N的取值范围：1~100。

关于如何获取报警规则ID，请参见[DescribeMetricRuleList](~~114941~~)。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警规则ID。

N的取值范围：1~100。

关于如何获取报警规则ID，请参见[DescribeMetricRuleList](~~114941~~)。',
              'type' => 'string',
              'required' => false,
              'example' => 'GroupProcess_67800278_2FE7D515-4BBD-447B-BC1A-3F17ED49****',
            ),
            'required' => true,
            'example' => 'ab05733c97b7ce239fb1b53393dc1697c123****',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FF38D33A-67C1-40EB-AB65-FAEE51EDB644',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"FF38D33A-67C1-40EB-AB65-FAEE51EDB644\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<EnableMetricRulesResponse>\\n    <Code>200</Code>\\n    <Message>success</Message>\\n    <RequestId>FF38D33A-67C1-40EB-AB65-FAEE51EDB644</RequestId>\\n    <Success>true</Success>\\n</EnableMetricRulesResponse>","errorExample":""}]',
      'title' => '启用一个或多个报警规则',
      'summary' => '调用EnableMetricRules接口启用一个或多个报警规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableMetricRules' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警规则ID。N的取值范围：1~20。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'detect_87****_HTTP_HttpLatency',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'RuleId is mandatory for this action.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FF38D33A-67C1-40EB-AB65-FAEE51EDB644',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDeniedException',
            'errorMessage' => 'You donot have sufficient access to perform this action.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"RuleId is mandatory for this action.\\",\\n  \\"RequestId\\": \\"FF38D33A-67C1-40EB-AB65-FAEE51EDB644\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DisableMetricRulesResponse>\\n    <Code>200</Code>\\n    <RequestId>FF38D33A-67C1-40EB-AB65-FAEE51EDB644</RequestId>\\n    <Success>true</Success>\\n</DisableMetricRulesResponse>","errorExample":""}]',
      'title' => '禁用报警规则',
      'summary' => '调用DisableMetricRules接口禁用报警规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMetricRuleTargets' => 
    array (
      'summary' => '调用DescribeMetricRuleTargets接口查询指定报警规则的推送渠道。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。


关于如何获取报警规则ID，请参见[DescribeMetricRuleList](~~114941~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ae06917_75a8c43178ab66****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'User not authorized to operate on the specified resource.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '786E92D2-AC66-4250-B76F-F1E2FCDDBA1C',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Targets' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Target' => 
                  array (
                    'description' => '报警触发目标。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '报警触发目标。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '报警触发目标ID。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'Arn' => 
                        array (
                          'description' => '资源ARN。格式为`acs:{云产品缩写}:{regionId}:{userId}:/{资源类型}/{资源名称}/message`。目前支持消息服务MNS，弹性伸缩ESS，日志服务SLS，函数计算FC。例如：`acs:mns:cn-hangzhou:120886317861****:/queues/test123/message`。消息服务的ARN参数说明如下：

- {云产品缩写}：mns

- {userId}：阿里云账号ID。

- {regionId}：消息队列或主题所在地域。

- {资源类型}`：接收报警的资源类型。取值：

  - **queues**：队列。
  - **topics**：主题。

- {资源名称}：资源名称。

  - 如果资源类型为**queues**，则资源名称为队列名称。
  - 如果资源类型为**topics**，则资源名称为主题名称。',
                          'type' => 'string',
                          'example' => 'acs:mns:cn-hangzhou:120886317861****:/queues/test/message',
                        ),
                        'Level' => 
                        array (
                          'description' => '报警级别。取值：

- INFO：信息。
- WARN：警告。
- CRITICAL：紧急。',
                          'type' => 'string',
                          'example' => 'INFO',
                        ),
                        'JsonParams' => 
                        array (
                          'description' => '报警回调的JSON格式参数。',
                          'type' => 'string',
                          'example' => '{"customField1":"value1","customField2":"$.name"}',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"User not authorized to operate on the specified resource.\\",\\n  \\"RequestId\\": \\"786E92D2-AC66-4250-B76F-F1E2FCDDBA1C\\",\\n  \\"Success\\": true,\\n  \\"Targets\\": {\\n    \\"Target\\": [\\n      {\\n        \\"Id\\": \\"1\\",\\n        \\"Arn\\": \\"acs:mns:cn-hangzhou:120886317861****:/queues/test/message\\",\\n        \\"Level\\": \\"INFO\\",\\n        \\"JsonParams\\": \\"{\\\\\\"customField1\\\\\\":\\\\\\"value1\\\\\\",\\\\\\"customField2\\\\\\":\\\\\\"$.name\\\\\\"}\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMetricRuleTargetsResponse>\\n\\t<RequestId>786E92D2-AC66-4250-B76F-F1E2FCDDBA1C</RequestId>\\n\\t<Code>200</Code>\\n\\t<Success>true</Success>\\n</DescribeMetricRuleTargetsResponse>\\t","errorExample":""}]',
      'title' => '查询指定报警规则的推送渠道',
      'description' => '# 使用说明
本文将提供一个示例，查询报警规则`ae06917_75a8c43178ab66****`关联的目标资源。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMetricRuleCount' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务的命名空间。详情请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        1 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项名称。详情请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'cpu_total',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FF38D33A-67C1-40EB-AB65-FAEE51EDB644',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'MetricRuleCount' => 
              array (
                'description' => '各类状态报警规则的数量。',
                'type' => 'object',
                'properties' => 
                array (
                  'Ok' => 
                  array (
                    'description' => '正常状态报警规则的数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '40',
                  ),
                  'Nodata' => 
                  array (
                    'description' => '无数据状态报警规则的数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Disable' => 
                  array (
                    'description' => '禁用状态报警规则的数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Total' => 
                  array (
                    'description' => '报警规则总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '45',
                  ),
                  'Alarm' => 
                  array (
                    'description' => '报警状态报警规则的数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'LimitExceeded',
            'errorMessage' => 'The quota for this customer had been reached.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttli∂ngException',
            'errorMessage' => 'The request was denied due to request throttling.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"FF38D33A-67C1-40EB-AB65-FAEE51EDB644\\",\\n  \\"Success\\": true,\\n  \\"MetricRuleCount\\": {\\n    \\"Ok\\": 40,\\n    \\"Nodata\\": 0,\\n    \\"Disable\\": 0,\\n    \\"Total\\": 45,\\n    \\"Alarm\\": 5\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeMetricRuleCountResponse>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n    <RequestId>FF38D33A-67C1-40EB-AB65-FAEE51EDB644</RequestId>\\n    <MetricRuleCount>\\n        <Ok>40</Ok>\\n        <Disable>0</Disable>\\n        <Total>45</Total>\\n        <Nodata>0</Nodata>\\n        <Alarm>5</Alarm>\\n    </MetricRuleCount>\\n</DescribeMetricRuleCountResponse>","errorExample":""}]',
      'title' => '获取各种状态报警规则的数量',
      'summary' => '调用DescribeMetricRuleCount接口获取各种状态报警规则的数量。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeAlertingMetricRuleResources' => 
    array (
      'summary' => '调用DescribeAlertingMetricRuleResources接口查询指定报警规则中正在发生报警的资源列表。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。关于如何查询报警规则ID，请参见[DescribeMetricRuleList](~~114941~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'putNewAlarm_user_7e78d765-0e3e-4671-ba6d-7ce39108****',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。关于如何查询应用分组ID，请参见[DescribeMonitorGroups](~~115032~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '7671****',
          ),
        ),
        2 => 
        array (
          'name' => 'Page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页页码。 

默认值：1 。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小。

默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的数据命名空间。

关于如何获取云产品的数据命名空间，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'acs_mns_new',
          ),
        ),
        5 => 
        array (
          'name' => 'Dimensions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '维度Map，用于查询指定资源的监控数据。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"userId\\":\\"120886317861****\\",\\"region\\":\\"cn-huhehaote\\",\\"queue\\":\\"test-0128\\"}',
          ),
        ),
        6 => 
        array (
          'name' => 'AlertBeforeTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于查询在这个时刻之前发生的报警。支持毫秒时间戳。',
            'type' => 'string',
            'required' => false,
            'example' => '1698827400000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The request processing has failed due to some unknown error.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0724011B-D9E0-4B2F-8C51-F17A894CC42C',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Resources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Resource' => 
                  array (
                    'description' => '报警规则的资源列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MetricName' => 
                        array (
                          'description' => '监控项名称。',
                          'type' => 'string',
                          'example' => 'ActiveMessages',
                        ),
                        'RetryTimes' => 
                        array (
                          'description' => '报警重试次数。',
                          'type' => 'string',
                          'example' => '3',
                        ),
                        'MetricValues' => 
                        array (
                          'description' => '触发报警时监控项的值。格式为一个JSON字符串。',
                          'type' => 'string',
                          'example' => '{\\"timestamp\\":1623727500000,\\"Sum\\":926,\\"value\\":463,\\"Maximum\\":463,\\"Minimum\\":463,\\"Average\\":463,\\"SampleCount\\":2,\\"userId\\":\\"120886317861****\\",\\"region\\":\\"cn-huhehaote\\",\\"queue\\":\\"test-0128\\"}',
                        ),
                        'Namespace' => 
                        array (
                          'description' => '云产品的数据命名空间。',
                          'type' => 'string',
                          'example' => 'acs_mns_new',
                        ),
                        'RuleName' => 
                        array (
                          'description' => '报警规则名称。',
                          'type' => 'string',
                          'example' => 'test123456789',
                        ),
                        'RuleId' => 
                        array (
                          'description' => '报警规则ID。',
                          'type' => 'string',
                          'example' => 'putNewAlarm_user_7e78d765-0e3e-4671-ba6d-7ce39108****',
                        ),
                        'ProductCategory' => 
                        array (
                          'description' => '云产品类型。',
                          'type' => 'string',
                          'example' => 'mns',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '资源被关联到报警规则的时间戳。

单位：毫秒。',
                          'type' => 'string',
                          'example' => '1622427900000',
                        ),
                        'Resource' => 
                        array (
                          'description' => '报警的资源。',
                          'type' => 'string',
                          'example' => 'userId=120886317861****,region=cn-huhehaote,queue=test-0128',
                        ),
                        'LastModifyTime' => 
                        array (
                          'description' => '最后一次修改报警规则的时间戳。

单位：毫秒。',
                          'type' => 'string',
                          'example' => '1622827900000',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '应用分组ID。
>如果报警规则与指定应用分组关联，则显示该应用分组ID。',
                          'type' => 'string',
                          'example' => '7671****',
                        ),
                        'Dimensions' => 
                        array (
                          'description' => '维度Map，用于查询指定资源的监控数据。',
                          'type' => 'string',
                          'example' => '{\\"region\\":\\"cn-huhehaote\\",\\"queue\\":\\"test-0128\\",\\"userId\\":\\"120886317861****\\"}',
                        ),
                        'LastAlertTime' => 
                        array (
                          'description' => '最后一次触发报警的时间戳。

单位：毫秒。',
                          'type' => 'string',
                          'example' => '1622427900000',
                        ),
                        'Level' => 
                        array (
                          'description' => '报警的级别和通知方式。取值：

<props="china">- 2：电话+短信+邮件+钉钉机器人。</props>

<props="china">- 3：短信+邮件+钉钉机器人。</props>

<props="china">- 4：邮件+钉钉机器人。</props>

<props="china">- OK：无报警。</props>

<props="intl">- 4：邮件+钉钉机器人。</props>

<props="intl">- OK：无报警。</props>

<props="partner">- 4：邮件+钉钉机器人。</props>

<props="partner">- OK：无报警。</props>',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'Threshold' => 
                        array (
                          'description' => '报警阈值。',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'Statistics' => 
                        array (
                          'description' => '报警统计方法。',
                          'type' => 'string',
                          'example' => 'Average',
                        ),
                        'Enable' => 
                        array (
                          'description' => '是否启用报警规则。取值：

- true：启用报警规则。

- false：不启用报警规则。
',
                          'type' => 'string',
                          'example' => 'true',
                        ),
                        'Escalation' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Resource' => 
                            array (
                              'description' => '触发报警的规则。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '无。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'ComparisonOperator' => 
                                  array (
                                    'description' => '阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。

- GreaterThanThreshold：大于。

- LessThanOrEqualToThreshold：小于等于。

- LessThanThreshold：小于。

- NotEqualToThreshold：不等于。

- GreaterThanYesterday：同比昨天时间上涨。

- LessThanYesterday：同比昨天时间下降。

- GreaterThanLastWeek：同比上周同一时间上涨。

- LessThanLastWeek：同比上周同一时间下降。

- GreaterThanLastPeriod：环比上周期上涨。

- LessThanLastPeriod：环比上周期下降。',
                                    'type' => 'string',
                                    'example' => 'GreaterThanOrEqualToThreshold',
                                  ),
                                  'PreCondition' => 
                                  array (
                                    'description' => '阈值比较符号。取值：

- `>=`

- `=`

- `<=`

- `>`

- `<`

- `!=`',
                                    'type' => 'string',
                                    'example' => '>=',
                                  ),
                                  'Expression' => 
                                  array (
                                    'description' => '触发报警的规则描述。

> 报警规则的主体，当监控数据满足报警条件时，触发报警规则。',
                                    'type' => 'string',
                                    'example' => '$Average>=10',
                                  ),
                                  'Times' => 
                                  array (
                                    'description' => '报警重试次数。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'Tag' => 
                                  array (
                                    'description' => '该参数已废弃，无需关注。',
                                    'type' => 'string',
                                    'example' => '无',
                                  ),
                                  'Threshold' => 
                                  array (
                                    'description' => '报警阈值。',
                                    'type' => 'string',
                                    'example' => '10',
                                  ),
                                  'Level' => 
                                  array (
                                    'description' => '报警的级别和通知方式。取值：

<props="china">- 2：电话+短信+邮件+钉钉机器人。</props>

<props="china">- 3：短信+邮件+钉钉机器人。</props>

<props="china">- 4：邮件+钉钉机器人。</props>

<props="china">- OK：无报警。</props>

<props="intl">- 4：邮件+钉钉机器人。</props>

<props="intl">- OK：无报警。</props>

<props="partner">- 4：邮件+钉钉机器人。</props>

<props="partner">- OK：无报警。</props>',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '3',
                                  ),
                                  'ExpressionListJoin' => 
                                  array (
                                    'description' => '多个监控项之间的关系。取值：

- &&：当所有监控项都满足报警条件时，发送报警通知。
- ||：当其中一个监控项满足报警条件时，发送报警通知。',
                                    'type' => 'string',
                                    'example' => '&&',
                                  ),
                                  'ExpressionList' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'ExpressionList' => 
                                      array (
                                        'description' => '多指标报警规则描述。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '无。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'ComparisonOperator' => 
                                            array (
                                              'description' => '报警级别的阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                                              'type' => 'string',
                                              'example' => 'GreaterThanOrEqualToThreshold',
                                            ),
                                            'MetricName' => 
                                            array (
                                              'description' => '监控项名称。',
                                              'type' => 'string',
                                              'example' => 'cpu_total',
                                            ),
                                            'Period' => 
                                            array (
                                              'description' => '监控项的统计周期。单位：秒。默认为监控项的原始上报周期。',
                                              'type' => 'string',
                                              'example' => '60',
                                            ),
                                            'Statistics' => 
                                            array (
                                              'description' => '报警级别的统计方法。取值：

- Maximum：最大值。
- Minimum：最小值。
- Average：平均值。',
                                              'type' => 'string',
                                              'example' => 'Average',
                                            ),
                                            'Threshold' => 
                                            array (
                                              'description' => '报警阈值。
 ',
                                              'type' => 'string',
                                              'example' => '90',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                  'ExpressionRaw' => 
                                  array (
                                    'description' => '表达式创建的报警条件。包括但不限于以下情况：

- 为部分资源设置报警黑名单，例如：`$instanceId != \'i-io8kfvcpp7x5****\' ``&&`` $Average > 50`，表示当报警规则中的实例`i-io8kfvcpp7x5****`的`Average`大于50时，也不会产生报警。
- 对规则中的指定实例设置特殊报警阈值，例如：`$Average > ($instanceId == \'i-io8kfvcpp7x5****\'? 80: 50)`，表示当报警规则中的实例`i-io8kfvcpp7x5****`的`Average`大于80时，才报警，其他实例的`Average`大于50，即可报警。
- 对规则中超过阈值的实例数量进行限制，例如：`count($Average > 20) > 3`，表示当报警规则中的`Average`大于20的实例数大于3个时，才进行报警。
',
                                    'type' => 'string',
                                    'example' => '$Average > ($instanceId == \'i-io8kfvcpp7x5****\'? 80: 50)',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The request processing has failed due to some unknown error.\\",\\n  \\"RequestId\\": \\"0724011B-D9E0-4B2F-8C51-F17A894CC42C\\",\\n  \\"Total\\": 2,\\n  \\"Success\\": true,\\n  \\"Resources\\": {\\n    \\"Resource\\": [\\n      {\\n        \\"MetricName\\": \\"ActiveMessages\\",\\n        \\"RetryTimes\\": \\"3\\",\\n        \\"MetricValues\\": \\"{\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\":1623727500000,\\\\\\\\\\\\\\"Sum\\\\\\\\\\\\\\":926,\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":463,\\\\\\\\\\\\\\"Maximum\\\\\\\\\\\\\\":463,\\\\\\\\\\\\\\"Minimum\\\\\\\\\\\\\\":463,\\\\\\\\\\\\\\"Average\\\\\\\\\\\\\\":463,\\\\\\\\\\\\\\"SampleCount\\\\\\\\\\\\\\":2,\\\\\\\\\\\\\\"userId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"120886317861****\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"region\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"cn-huhehaote\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"queue\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"test-0128\\\\\\\\\\\\\\"}\\",\\n        \\"Namespace\\": \\"acs_mns_new\\",\\n        \\"RuleName\\": \\"test123456789\\",\\n        \\"RuleId\\": \\"putNewAlarm_user_7e78d765-0e3e-4671-ba6d-7ce39108****\\",\\n        \\"ProductCategory\\": \\"mns\\",\\n        \\"StartTime\\": \\"1622427900000\\",\\n        \\"Resource\\": \\"userId=120886317861****,region=cn-huhehaote,queue=test-0128\\",\\n        \\"LastModifyTime\\": \\"1622827900000\\",\\n        \\"GroupId\\": \\"7671****\\",\\n        \\"Dimensions\\": \\"{\\\\\\\\\\\\\\"region\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"cn-huhehaote\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"queue\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"test-0128\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"userId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"120886317861****\\\\\\\\\\\\\\"}\\",\\n        \\"LastAlertTime\\": \\"1622427900000\\",\\n        \\"Level\\": 3,\\n        \\"Threshold\\": \\"10\\",\\n        \\"Statistics\\": \\"Average\\",\\n        \\"Enable\\": \\"true\\",\\n        \\"Escalation\\": {\\n          \\"Resource\\": [\\n            {\\n              \\"ComparisonOperator\\": \\"GreaterThanOrEqualToThreshold\\",\\n              \\"PreCondition\\": \\">=\\",\\n              \\"Expression\\": \\"$Average>=10\\",\\n              \\"Times\\": 1,\\n              \\"Tag\\": \\"无\\",\\n              \\"Threshold\\": \\"10\\",\\n              \\"Level\\": 3,\\n              \\"ExpressionListJoin\\": \\"&&\\",\\n              \\"ExpressionList\\": {\\n                \\"ExpressionList\\": [\\n                  {\\n                    \\"ComparisonOperator\\": \\"GreaterThanOrEqualToThreshold\\",\\n                    \\"MetricName\\": \\"cpu_total\\",\\n                    \\"Period\\": \\"60\\",\\n                    \\"Statistics\\": \\"Average\\",\\n                    \\"Threshold\\": \\"90\\"\\n                  }\\n                ]\\n              },\\n              \\"ExpressionRaw\\": \\"$Average > ($instanceId == \'i-io8kfvcpp7x5****\'? 80: 50)\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeAlertingMetricRuleResourcesResponse>\\r\\n\\t<RequestId>0724011B-D9E0-4B2F-8C51-F17A894CC42C</RequestId>\\r\\n\\t<Message></Message>\\r\\n\\t<Total>2</Total>\\r\\n\\t<Resources>\\r\\n\\t\\t<Resource>\\r\\n\\t\\t\\t<RuleId>putNewAlarm_user_7e78d765-0e3e-4671-ba6d-7ce39108****</RuleId>\\r\\n\\t\\t\\t<Escalation>\\r\\n\\t\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t\\t<Expression>$Average>=10</Expression>\\r\\n\\t\\t\\t\\t\\t<Times>1</Times>\\r\\n\\t\\t\\t\\t\\t<Level>3</Level>\\r\\n\\t\\t\\t\\t\\t<Tag>mns</Tag>\\r\\n\\t\\t\\t\\t</Resource>\\r\\n\\t\\t\\t</Escalation>\\r\\n\\t\\t\\t<Resource>userId=120886317861****,region=cn-huhehaote,queue=test-0128</Resource>\\r\\n\\t\\t\\t<StartTime>1622427900000</StartTime>\\r\\n\\t\\t\\t<Dimensions>{\\\\\\"userId\\\\\\":\\\\\\"120886317861****\\\\\\",\\\\\\"region\\\\\\":\\\\\\"cn-huhehaote\\\\\\",\\\\\\"queue\\\\\\":\\\\\\"test-0128\\\\\\"}</Dimensions>\\r\\n\\t\\t\\t<MetricValues>{\\\\\\"timestamp\\\\\\":1623727500000,\\\\\\"Sum\\\\\\":926,\\\\\\"value\\\\\\":463,\\\\\\"Maximum\\\\\\":463,\\\\\\"Minimum\\\\\\":463,\\\\\\"Average\\\\\\":463,\\\\\\"SampleCount\\\\\\":2,\\\\\\"userId\\\\\\":\\\\\\"120886317861****\\\\\\",\\\\\\"region\\\\\\":\\\\\\"cn-huhehaote\\\\\\",\\\\\\"queue\\\\\\":\\\\\\"test-0128\\\\\\"}</MetricValues>\\r\\n\\t\\t\\t<LastModifyTime>1623727904000</LastModifyTime>\\r\\n\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t<Namespace>acs_mns_new</Namespace>\\r\\n\\t\\t\\t<GroupId>7671****</GroupId>\\r\\n\\t\\t\\t<MetricName>ActiveMessages</MetricName>\\r\\n\\t\\t\\t<LastAlertTime>1622427900000</LastAlertTime>\\r\\n\\t\\t\\t<ProductCategory>mns</ProductCategory>\\r\\n\\t\\t\\t<Enable>true</Enable>\\r\\n\\t\\t\\t<Level>3</Level>\\r\\n\\t\\t\\t<RuleName>test123456789</RuleName>\\r\\n\\t\\t\\t<RetryTimes>1</RetryTimes>\\r\\n\\t\\t\\t<Threshold>10</Threshold>\\r\\n\\t\\t</Resource>\\r\\n\\t\\t<Resource>\\r\\n\\t\\t\\t<RuleId>putNewAlarm_user_7e78d765-0e3e-4671-ba6d-7ce39108****</RuleId>\\r\\n\\t\\t\\t<Escalation>\\r\\n\\t\\t\\t\\t<Resource>\\r\\n\\t\\t\\t\\t\\t<Expression>$Average>=10</Expression>\\r\\n\\t\\t\\t\\t\\t<Times>1</Times>\\r\\n\\t\\t\\t\\t\\t<Level>3</Level>\\r\\n\\t\\t\\t\\t\\t<Tag>mns</Tag>\\r\\n\\t\\t\\t\\t</Resource>\\r\\n\\t\\t\\t</Escalation>\\r\\n\\t\\t\\t<Resource>userId=120886317861****,region=cn-huhehaote,queue=test-022401-1</Resource>\\r\\n\\t\\t\\t<StartTime>1622427900000</StartTime>\\r\\n\\t\\t\\t<Dimensions>{\\\\\\"userId\\\\\\":\\\\\\"120886317861****\\\\\\",\\\\\\"region\\\\\\":\\\\\\"cn-huhehaote\\\\\\",\\\\\\"queue\\\\\\":\\\\\\"test-022401-1\\\\\\"}</Dimensions>\\r\\n\\t\\t\\t<MetricValues>{\\\\\\"timestamp\\\\\\":1623727500000,\\\\\\"queue\\\\\\":\\\\\\"test-022401-1\\\\\\",\\\\\\"Maximum\\\\\\":349,\\\\\\"Minimum\\\\\\":349,\\\\\\"Sum\\\\\\":698,\\\\\\"value\\\\\\":349,\\\\\\"userId\\\\\\":\\\\\\"120886317861****\\\\\\",\\\\\\"region\\\\\\":\\\\\\"cn-huhehaote\\\\\\",\\\\\\"Average\\\\\\":349,\\\\\\"SampleCount\\\\\\":2}</MetricValues>\\r\\n\\t\\t\\t<LastModifyTime>1623727904000</LastModifyTime>\\r\\n\\t\\t\\t<Statistics>Average</Statistics>\\r\\n\\t\\t\\t<Namespace>acs_mns_new</Namespace>\\r\\n\\t\\t\\t<GroupId>7671****</GroupId>\\r\\n\\t\\t\\t<MetricName>ActiveMessages</MetricName>\\r\\n\\t\\t\\t<LastAlertTime>1622427900000</LastAlertTime>\\r\\n\\t\\t\\t<ProductCategory>mns</ProductCategory>\\r\\n\\t\\t\\t<Enable>true</Enable>\\r\\n\\t\\t\\t<Level>3</Level>\\r\\n\\t\\t\\t<RuleName>test123456789</RuleName>\\r\\n\\t\\t\\t<RetryTimes>1</RetryTimes>\\r\\n\\t\\t\\t<Threshold>10</Threshold>\\r\\n\\t\\t</Resource>\\r\\n\\t</Resources>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeAlertingMetricRuleResourcesResponse>\\t","errorExample":""}]',
      'title' => '查询指定报警规则中正在发生报警的资源列表',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutMetricRuleTargets' => 
    array (
      'summary' => '调用PutMetricRuleTargets接口为指定报警规则添加或修改推送渠道。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。

关于如何获取报警规则ID，请参见[DescribeMetricRuleList](~~114941~~)。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ae06917_75a8c43178ab66****',
          ),
        ),
        1 => 
        array (
          'name' => 'Targets',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'Id' => 
                array (
                  'description' => '报警触发目标ID。

关于如何获取报警触发目标ID，请参见[DescribeMetricRuleTargets](~~121592~~)。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '1',
                ),
                'Arn' => 
                array (
                  'description' => '资源ARN。格式为`acs:{云产品缩写}:{regionId}:{userId}:/{资源类型}/{资源名称}/message`。目前支持消息服务MNS，弹性伸缩ESS，日志服务SLS，函数计算FC。例如：`acs:mns:cn-hangzhou:120886317861****:/queues/test123/message`。消息服务的ARN参数说明如下：

- {云产品缩写}：mns

- {userId}：阿里云账号ID。

- {regionId}：消息队列或主题所在地域。

- {资源类型}`：接收报警的资源类型。取值：

  - **queues**：队列。
  - **topics**：主题。

- {资源名称}：资源名称。

  - 如果资源类型为**queues**，则资源名称为队列名称。
  - 如果资源类型为**topics**，则资源名称为主题名称。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'acs:mns:cn-hangzhou:120886317861****:/queues/test/message',
                ),
                'Level' => 
                array (
                  'description' => '报警级别。取值：

- INFO：信息。
- WARN：警告。
- CRITICAL：紧急。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '["INFO", "WARN", "CRITICAL"]',
                ),
                'JsonParams' => 
                array (
                  'description' => '报警回调的JSON格式参数。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '{"customField1":"value1","customField2":"$.name"}',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 5,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The request processing has failed due to some unknown error.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6A569B0D-9055-58AF-9E82-BAEAF95C0FD5',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'FailData' => 
              array (
                'description' => '失败列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'Targets' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Target' => 
                      array (
                        'description' => '报警触发目标。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '无。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Id' => 
                            array (
                              'description' => '报警触发目标ID。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                            'Arn' => 
                            array (
                              'description' => '资源ARN。格式为`acs:{云产品缩写}:{regionId}:{userId}:/{资源类型}/{资源名称}/message`。目前支持消息服务MNS，弹性伸缩ESS，日志服务SLS，函数计算FC。例如：`acs:mns:cn-hangzhou:120886317861****:/queues/test123/message`。消息服务的ARN参数说明如下：

- {云产品缩写}：mns

- {userId}：阿里云账号ID。

- {regionId}：消息队列或主题所在地域。

- {资源类型}`：接收报警的资源类型。取值：

  - **queues**：队列。
  - **topics**：主题。

- {资源名称}：资源名称。

  - 如果资源类型为**queues**，则资源名称为队列名称。
  - 如果资源类型为**topics**，则资源名称为主题名称。',
                              'type' => 'string',
                              'example' => 'acs:mns:cn-hangzhou:111:/queues/test/message',
                            ),
                            'Level' => 
                            array (
                              'description' => '报警级别。取值：

- INFO：信息。
- WARN：警告。
- CRITICAL：紧急。',
                              'type' => 'string',
                              'example' => '["INFO", "WARN", "CRITICAL"]',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        201 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The request processing has failed due to some unknown error.\\",\\n  \\"RequestId\\": \\"6A569B0D-9055-58AF-9E82-BAEAF95C0FD5\\",\\n  \\"Success\\": true,\\n  \\"FailData\\": {\\n    \\"Targets\\": {\\n      \\"Target\\": [\\n        {\\n          \\"Id\\": \\"1\\",\\n          \\"Arn\\": \\"acs:mns:cn-hangzhou:111:/queues/test/message\\",\\n          \\"Level\\": \\"[\\\\\\"INFO\\\\\\", \\\\\\"WARN\\\\\\", \\\\\\"CRITICAL\\\\\\"]\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<PutMetricRuleTargetsResponse>\\r\\n\\t<RequestId>6A569B0D-9055-58AF-9E82-BAEAF95C0FD5</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</PutMetricRuleTargetsResponse>\\t","errorExample":""}]',
      'title' => '为指定报警规则添加或修改推送渠道',
      'description' => '# 使用说明
本文将提供一个示例，为报警规则`ae06917_75a8c43178ab66****`关联资源`acs:mns:cn-hangzhou:120886317861****:/queues/test/message`，报警触发目标ID为`1`。返回结果显示，添加关联资源成功。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutResourceMetricRule' => 
    array (
      'summary' => '调用PutResourceMetricRule接口为指定资源的指定监控项设置一条阈值报警规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。

您可以输入新的报警规则ID，也可以使用云监控已存在的报警规则ID。关于如何查询报警规则ID，请参见[DescribeMetricRuleList](~~114941~~)。

> 输入新的报警规则ID，表示创建一条阈值报警规则。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a151cd6023eacee2f0978e03863cc1697c89508****',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则名称。

您可以输入新的报警规则名称，也可以使用云监控已存在的报警规则名称。关于如何查询报警规则名称，请参见[DescribeMetricRuleList](~~114941~~)。

> 输入新的报警规则名称，表示创建一条阈值报警规则。',
            'type' => 'string',
            'required' => true,
            'example' => 'test123',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的数据命名空间。关于如何查询云产品的数据命名空间，请参见[云产品监控项](~~163515~~)。

> 当您为企业云监控创建Prometheus报警规则时，该参数必须为`acs_prometheus`。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        3 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项名称。关于如何查询监控项名称，请参见[云产品监控项](~~163515~~)。

> 当您为企业云监控创建Prometheus报警规则时，该参数为指标仓库名称。关于如何获取指标仓库名称，请参见[DescribeHybridMonitorNamespaceList](~~428880~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cpu_total',
          ),
        ),
        4 => 
        array (
          'name' => 'Resources',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源信息，例如：`[{"instanceId":"i-uf6j91r34rnwawoo****"}]`、`[{"userId":"100931896542****"}]`。

关于资源信息支持的维度Dimensions，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '[{"instanceId":"i-uf6j91r34rnwawoo****"}]',
          ),
        ),
        5 => 
        array (
          'name' => 'ContactGroups',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系组。报警通知会发送给该报警联系组中的报警联系人。

> 报警联系组是一组报警联系人，可以包含一个或多个报警联系人。关于如何创建报警联系人和报警联系组，请参见[PutContact](~~114923~~)和[PutContactGroup](~~114929~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ECS_Group',
          ),
        ),
        6 => 
        array (
          'name' => 'Webhook',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警发生回调时指定的URL地址，向URL发送POST请求。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://alert.aliyun.com.com:8080/callback',
          ),
        ),
        7 => 
        array (
          'name' => 'EffectiveInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则的生效时间范围。',
            'type' => 'string',
            'required' => false,
            'example' => '00:00-23:59',
          ),
        ),
        8 => 
        array (
          'name' => 'NoEffectiveInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则的失效时间范围。',
            'type' => 'string',
            'required' => false,
            'example' => '00:00-06:00',
          ),
        ),
        9 => 
        array (
          'name' => 'SilenceTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通道沉默周期。单位：秒，默认值：86400。

> 通道沉默周期是指报警发生后未恢复正常，间隔多久重新发送一次报警通知。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '86400',
            'default' => '86400',
          ),
        ),
        10 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项的统计周期。单位：秒。默认为监控项的原始上报周期。

>关于如何查询监控项的统计周期，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '60',
          ),
        ),
        11 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则的触发周期。单位：秒。

>关于如何查询监控项的统计周期，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '60',
          ),
        ),
        12 => 
        array (
          'name' => 'EmailSubject',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警邮件主题。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS实例报警',
          ),
        ),
        13 => 
        array (
          'name' => 'Escalations.Critical.Statistics',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Critical级别报警统计方法。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
            'type' => 'string',
            'required' => false,
            'example' => 'Average',
          ),
        ),
        14 => 
        array (
          'name' => 'Escalations.Critical.ComparisonOperator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Critical级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
            'type' => 'string',
            'required' => false,
            'example' => 'GreaterThanOrEqualToThreshold',
          ),
        ),
        15 => 
        array (
          'name' => 'Escalations.Critical.Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Critical级别报警阈值。


> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
            'type' => 'string',
            'required' => false,
            'example' => '90',
          ),
        ),
        16 => 
        array (
          'name' => 'Escalations.Critical.Times',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Critical级别报警重试次数。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
        17 => 
        array (
          'name' => 'Escalations.Warn.Statistics',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Warn级别报警统计方法。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
            'type' => 'string',
            'required' => false,
            'example' => 'Average',
          ),
        ),
        18 => 
        array (
          'name' => 'Escalations.Warn.ComparisonOperator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Warn级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
            'type' => 'string',
            'required' => false,
            'example' => 'GreaterThanOrEqualToThreshold',
          ),
        ),
        19 => 
        array (
          'name' => 'Escalations.Warn.Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Warn级别报警阈值。
> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
            'type' => 'string',
            'required' => false,
            'example' => '90',
          ),
        ),
        20 => 
        array (
          'name' => 'Escalations.Warn.Times',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Warn级别报警重试次数。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
        21 => 
        array (
          'name' => 'Escalations.Info.Statistics',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Info级别报警统计方法。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
            'type' => 'string',
            'required' => false,
            'example' => 'Average',
          ),
        ),
        22 => 
        array (
          'name' => 'Escalations.Info.ComparisonOperator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Info级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
            'type' => 'string',
            'required' => false,
            'example' => 'GreaterThanOrEqualToThreshold',
          ),
        ),
        23 => 
        array (
          'name' => 'Escalations.Info.Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Info级别报警阈值。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
            'type' => 'string',
            'required' => false,
            'example' => '90',
          ),
        ),
        24 => 
        array (
          'name' => 'Escalations.Info.Times',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Info级别报警重试次数。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
        25 => 
        array (
          'name' => 'NoDataPolicy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '无监控数据时报警的处理方式。取值：

- KEEP\\_LAST\\_STATE（默认值）：不做任何处理。
- INSUFFICIENT\\_DATA：报警内容为无数据。
- OK：正常。',
            'type' => 'string',
            'required' => false,
            'example' => 'KEEP_LAST_STATE',
          ),
        ),
        26 => 
        array (
          'name' => 'CompositeExpression',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '多指标的报警条件。

> 单指标和多指标互斥，不能同时设置。',
            'type' => 'object',
            'properties' => 
            array (
              'ExpressionList' => 
              array (
                'description' => '标准创建的报警条件列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MetricName' => 
                    array (
                      'description' => '云产品的监控项名称。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'cpu_total',
                    ),
                    'Period' => 
                    array (
                      'description' => '监控项的聚合周期。

单位：秒。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '60',
                    ),
                    'Statistics' => 
                    array (
                      'description' => '监控项的统计方法。取值：
- $Maximum：最大值。
- $Minimum：最小值。
- $Average：平均值。
- $Availability：可用率（通常用于站点监控）。

> `$`为监控项的统一前缀符号。支持的云产品，请参见[云产品监控项](~~163515~~)。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '$Maximum',
                    ),
                    'ComparisonOperator' => 
                    array (
                      'description' => '阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'GreaterThanOrEqualToThreshold',
                    ),
                    'Threshold' => 
                    array (
                      'description' => '报警阈值。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '90',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'ExpressionListJoin' => 
              array (
                'description' => '多指标报警条件之间的关系。取值： 

- `&&`：当所有指标都符合报警条件时，才触发报警。当ExpressionList下各表达式均为`true`时，才触发报警。

- `||`：其中一个指标符合报警条件，即触发报警。',
                'type' => 'string',
                'required' => false,
                'example' => '||',
              ),
              'ExpressionRaw' => 
              array (
                'description' => '表达式创建的报警条件。包括但不限于以下情况：

- 为部分资源设置报警黑名单，例如：`$instanceId != \'i-io8kfvcpp7x5****\' ``&&`` $Average > 50`，表示当报警规则中的实例`i-io8kfvcpp7x5****`的`Average`大于50时，也不会产生报警。
- 对规则中的指定实例设置特殊报警阈值，例如：`$Average > ($instanceId == \'i-io8kfvcpp7x5****\'? 80: 50)`，表示当报警规则中的实例`i-io8kfvcpp7x5****`的`Average`大于80时，才报警，其他实例的`Average`大于50，即可报警。
- 对规则中超过阈值的实例数量进行限制，例如：`count($Average > 20) > 3`，表示当报警规则中的`Average`大于20的实例数大于3个时，才进行报警。
',
                'type' => 'string',
                'required' => false,
                'example' => '$Average > ($instanceId == \'i-io8kfvcpp7x5****\'? 80: 50)',
              ),
              'Level' => 
              array (
                'description' => '报警级别。取值：
- Critical：严重。
- Warn：警告。
- Info：信息。',
                'type' => 'string',
                'required' => false,
                'example' => 'Critical',
              ),
              'Times' => 
              array (
                'description' => '发出报警通知需要达到报警条件的次数。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '3',
              ),
            ),
            'required' => false,
          ),
        ),
        27 => 
        array (
          'name' => 'Labels',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '当监控项达到报警条件并进行报警时，标签同时写入监控项，在报警通知中进行展示。

> 该功能与Prometheus报警中的Label相同。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagKey1',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

> 标签值支持模板参数，将模板参数替换为实际标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'ECS',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        28 => 
        array (
          'name' => 'Prometheus',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'Prometheus报警。

> 仅当您为企业云监控创建Prometheus报警规则，需要设置该参数。',
            'type' => 'object',
            'properties' => 
            array (
              'PromQL' => 
              array (
                'description' => 'PromQL查询语句。

> 通过PromQL查询语句获取的数据即为报警数据，请您在该语句中携带报警阈值。',
                'type' => 'string',
                'required' => false,
                'example' => 'cpuUsage{instanceId="xxxx"}[1m]>90',
              ),
              'Level' => 
              array (
                'description' => '报警级别。取值：
- Critical：严重。
- Warn：警告。
- Info：信息。',
                'type' => 'string',
                'required' => false,
                'example' => 'Critical',
              ),
              'Times' => 
              array (
                'description' => '发出报警通知需要达到报警条件的次数。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '3',
              ),
              'Annotations' => 
              array (
                'description' => 'Prometheus报警时，将注释的键和值进行渲染，易于您对监控项或报警规则的理解。

> 该功能等同于Prometheus的Annotation。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'description' => '注释的键。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'summary',
                    ),
                    'Value' => 
                    array (
                      'description' => '注释的值。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '{{ $labels.instance }} CPU usage above 10% {current value: {{ humanizePercentage $value }} }',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The request processing has failed due to some unknown error.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '65D50468-ECEF-48F1-A6E1-D952E89D9436',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        204 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceOverLimit',
            'errorMessage' => 'The resource has exceeded the limit. %s',
          ),
        ),
        499 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The request processing has failed due to some unknown error.\\",\\n  \\"RequestId\\": \\"65D50468-ECEF-48F1-A6E1-D952E89D9436\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PutResourceMetricRuleResponse>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Message></Message>\\r\\n\\t<RequestId>65D50468-ECEF-48F1-A6E1-D952E89D9436</RequestId>\\r\\n\\t<Success>true</Success>\\r\\n</PutResourceMetricRuleResponse>","errorExample":""}]',
      'title' => '为指定资源的指定监控项设置一条阈值报警规则',
      'description' => '本文将提供一个示例，为云服务器ECS `acs_ecs_dashboard`的实例`i-uf6j91r34rnwawoo****`中的监控项`cpu_total`设置阈值报警规则。该报警规则的报警联系组为`ECS_Group`、报警规则名称为`test123`、报警规则ID为`a151cd6023eacee2f0978e03863cc1697c89508****`、Critical级别的统计方法为`Average`、Critical级别的比较符为`GreaterThanOrEqualToThreshold`、Critical级别的阈值为`90`和Critical级别的报警重试次数为`3`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutResourceMetricRules' => 
    array (
      'summary' => '调用PutResourceMetricRules接口为指定资源的指定监控项设置多条阈值报警规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Rules',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '阈值报警规则列表。

N的取值范围：1~500。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'Escalations.Info.Threshold' => 
                array (
                  'description' => 'Info级别报警阈值。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '90',
                ),
                'MetricName' => 
                array (
                  'description' => '监控项名称。

N的取值范围：1~500。

关于如何查询监控项名称，请参见[云产品监控项](~~163515~~)。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cpu_total',
                ),
                'Escalations.Warn.Threshold' => 
                array (
                  'description' => 'Warn级别报警阈值。

N的取值范围：1~500。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '90',
                ),
                'EffectiveInterval' => 
                array (
                  'description' => '报警规则的生效时间范围。

N的取值范围：1~500。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '00:00-23:59',
                ),
                'NoEffectiveInterval' => 
                array (
                  'description' => '报警规则的失效时间范围。

N的取值范围：1~500。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '00:00-06:00',
                ),
                'RuleId' => 
                array (
                  'description' => '报警规则ID。

N的取值范围：1~500。

您可以输入新的报警规则ID，也可以使用云监控已存在的报警规则ID。关于如何查询报警规则ID，请参见[DescribeMetricRuleList](~~114941~~)。

> 输入新的报警规则ID，表示创建一条阈值报警规则。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'a151cd6023eacee2f0978e03863cc1697c89508****',
                ),
                'Escalations.Critical.Times' => 
                array (
                  'description' => 'Critical级别报警重试次数。

N的取值范围：1~500。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '3',
                ),
                'Escalations.Critical.Threshold' => 
                array (
                  'description' => 'Critical级别报警阈值。

N的取值范围：1~500。


> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '90',
                ),
                'Escalations.Critical.Statistics' => 
                array (
                  'description' => 'Critical级别报警统计方法。

N的取值范围：1~500。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Average',
                ),
                'Escalations.Warn.ComparisonOperator' => 
                array (
                  'description' => 'Warn级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。

N的取值范围：1~500。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Escalations.Info.Times' => 
                array (
                  'description' => 'Info级别报警重试次数。

N的取值范围：1~500。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '3',
                ),
                'Resources' => 
                array (
                  'description' => '资源信息，例如：`[{"instanceId":"i-uf6j91r34rnwawoo****"}]`、`[{"userId":"100931896542****"}]`。

N的取值范围：1~500。

关于资源信息支持的维度Dimensions，请参见[云产品监控项](~~163515~~)。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '[{"instanceId":"i-uf6j91r34rnwawoo****"}]',
                ),
                'SilenceTime' => 
                array (
                  'description' => '通道沉默周期。

单位：秒，默认值：86400。

N的取值范围：1~500。

> 通道沉默周期是指报警发生后未恢复正常，间隔多久重新发送一次报警通知。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '86400',
                ),
                'Webhook' => 
                array (
                  'description' => '报警发生回调时指定的URL地址，向URL发送POST请求。

N的取值范围：1~500。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'https://alert.aliyun.com.com:8080/callback',
                ),
                'ContactGroups' => 
                array (
                  'description' => '报警联系组。报警通知会发送给该报警联系组中的报警联系人。

N的取值范围：1~500。

> 报警联系组是一组报警联系人，可以包含一个或多个报警联系人。关于如何创建报警联系人和报警联系组，请参见[PutContact](~~114923~~)和[PutContactGroup](~~114929~~)。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ECS_Group',
                ),
                'Namespace' => 
                array (
                  'description' => '云产品的数据命名空间。

N的取值范围：1~500。

关于如何查询云产品的数据命名空间，请参见[云产品监控项](~~163515~~)。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'acs_ecs_dashboard',
                ),
                'EmailSubject' => 
                array (
                  'description' => '报警邮件主题。

N的取值范围：1~500。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'ECS实例报警',
                ),
                'Period' => 
                array (
                  'description' => '监控项的统计周期。

单位：秒。默认为监控项的原始上报周期。

N的取值范围：1~500。

>关于如何查询监控项的统计周期，请参见[云产品监控项](~~163515~~)。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '60',
                ),
                'RuleName' => 
                array (
                  'description' => '报警规则名称。

N的取值范围：1~500。

您可以输入新的报警规则名称，也可以使用云监控已存在的报警规则名称。关于如何查询报警规则名称，请参见[DescribeMetricRuleList](~~114941~~)。

> 输入新的报警规则名称，表示创建一条阈值报警规则。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'test123',
                ),
                'Escalations.Info.Statistics' => 
                array (
                  'description' => 'Info级别报警统计方法。

N的取值范围：1~500。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Average',
                ),
                'Escalations.Warn.Times' => 
                array (
                  'description' => 'Warn级别报警重试次数。

N的取值范围：1~500。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '3',
                ),
                'Escalations.Info.ComparisonOperator' => 
                array (
                  'description' => 'Info级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。

N的取值范围：1~500。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Interval' => 
                array (
                  'description' => '报警规则的触发周期。

单位：秒。

N的取值范围：1~500。

>关于如何查询监控项的统计周期，请参见[云产品监控项](~~163515~~)。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '60',
                ),
                'Escalations.Critical.ComparisonOperator' => 
                array (
                  'description' => 'Critical级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。

N的取值范围：1~500。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GreaterThanOrEqualToThreshold',
                ),
                'Escalations.Warn.Statistics' => 
                array (
                  'description' => 'Warn级别报警统计方法。

N的取值范围：1~500。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。

> 报警级别Critical（严重）、Warn（警告）或Info（信息）至少设置一个，且该报警级别中的参数Statistics、ComparisonOperator、Threshold和Times必须同时设置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Average',
                ),
                'NoDataPolicy' => 
                array (
                  'description' => '无监控数据时报警的处理方式。取值：

- KEEP_LAST_STATE（默认值）：不做任何处理。
- INSUFFICIENT_DATA：报警内容为无数据。
- OK：正常。

N的取值范围：1~500。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'KEEP_LAST_STATE',
                ),
                'Labels' => 
                array (
                  'description' => '当监控项达到报警条件并进行报警时，标签同时写入监控项，在报警通知中进行展示。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '无。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Key' => 
                      array (
                        'description' => '标签键。',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'tagKey1',
                      ),
                      'Value' => 
                      array (
                        'description' => '标签值。

> 标签值支持模板参数，将模板参数替换为实际标签值。',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'ECS',
                      ),
                    ),
                    'required' => false,
                  ),
                  'required' => false,
                  'maxItems' => 20,
                  'minItems' => 0,
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The request processing has failed due to some unknown error.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '15D1440E-BF24-5A41-93E4-36864635179E',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'FailedListResult' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Target' => 
                  array (
                    'description' => '为资源设置报警规则的失败结果列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'RuleId' => 
                        array (
                          'description' => '报警规则ID。',
                          'type' => 'string',
                          'example' => 'a151cd6023eacee2f0978e03863cc1697c89508****',
                        ),
                        'Result' => 
                        array (
                          'description' => '失败结果。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Code' => 
                            array (
                              'description' => '状态码。',
                              'type' => 'string',
                              'example' => '404',
                            ),
                            'Message' => 
                            array (
                              'description' => '错误信息。',
                              'type' => 'string',
                              'example' => 'The request processing has failed due to some unknown error.',
                            ),
                            'Success' => 
                            array (
                              'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                              'type' => 'boolean',
                              'example' => 'false',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        204 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        422 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        499 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The request processing has failed due to some unknown error.\\",\\n  \\"RequestId\\": \\"15D1440E-BF24-5A41-93E4-36864635179E\\",\\n  \\"Success\\": true,\\n  \\"FailedListResult\\": {\\n    \\"Target\\": [\\n      {\\n        \\"RuleId\\": \\"a151cd6023eacee2f0978e03863cc1697c89508****\\",\\n        \\"Result\\": {\\n          \\"Code\\": \\"404\\",\\n          \\"Message\\": \\"The request processing has failed due to some unknown error.\\",\\n          \\"Success\\": false\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<PutResourceMetricRulesResponse>\\r\\n\\t<Message></Message>\\r\\n\\t<RequestId>15D1440E-BF24-5A41-93E4-36864635179E</RequestId>\\r\\n\\t<FailedListResult></FailedListResult>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</PutResourceMetricRulesResponse>\\t","errorExample":""}]',
      'title' => '为指定资源的指定监控项设置多条阈值报警规则',
      'description' => '本文将提供一个示例，为云服务器ECS `acs_ecs_dashboard`的实例`i-uf6j91r34rnwawoo****`中的监控项`cpu_total`设置阈值报警规则。该报警规则的报警联系组为`ECS_Group`、报警规则名称为`test123`、报警规则ID为`a151cd6023eacee2f0978e03863cc1697c89508****`、Critical级别的统计方法为`Average`、Critical级别的比较符为`GreaterThanOrEqualToThreshold`、Critical级别的阈值为`90`和Critical级别的报警重试次数为`3`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutGroupMetricRule' => 
    array (
      'summary' => '调用PutGroupMetricRule接口创建或修改指定应用分组中的报警规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。

关于如何获取应用分组ID，请参见[DescribeMonitorGroups](~~115032~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '17285****',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。

- 当您为该应用分组创建报警规则时，直接输入报警规则ID。

- 当您修改该应用分组中的指定报警规则时，需要获取报警规则ID。关于如何获取报警规则ID，请参见[DescribeMetricRuleList](~~114941~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '123456',
          ),
        ),
        2 => 
        array (
          'name' => 'Category',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品名称缩写。

关于如何获取云产品名称缩写，请参见[DescribeProjectMeta](~~114916~~)接口的返回参数`Labels`中的`metricCategory`。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS',
          ),
        ),
        3 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则名称。

- 当您为该应用分组创建报警规则时，直接输入报警规则名称。

- 当您修改该应用分组中的指定报警规则时，需要获取报警规则名称。关于如何获取报警规则名称，请参见[DescribeMetricRuleList](~~114941~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'Rule_01',
          ),
        ),
        4 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的命名空间。

关于如何获取云产品的命名空间，请参见[DescribeMetricMetaList](~~98846~~)或[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        5 => 
        array (
          'name' => 'MetricName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项名称。

关于如何获取监控项名称，请参见[DescribeMetricMetaList](~~98846~~)或[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'cpu_total',
          ),
        ),
        6 => 
        array (
          'name' => 'Dimensions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组中报警规则的第一级维度。

格式：`key:value`键值对形式的集合，例如：`{"userId":"120886317861****"}`和`{"instanceId":"i-m5e1qg6uo38rztr4****"}`。
',
            'type' => 'string',
            'required' => false,
            'example' => '[{"instanceId":"i-m5e1qg6uo38rztr4****"}]',
          ),
        ),
        7 => 
        array (
          'name' => 'ExtraDimensionJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组中报警规则的第二级或第三级维度。

格式：`key:value`键值对形式的集合，例如：`port:80`、`/dev/xvda:d-m5e6yphgzn3aprwu****`。

当报警规则的第一级维度为`{"instanceId":"i-m5e1qg6uo38rztr4****"}`时，其第二级维度为该实例中的云盘`{"/dev/xvda":"d-m5e6yphgzn3aprwu****"}`。

',
            'type' => 'string',
            'required' => false,
            'example' => '{"/dev/xvda":"d-m5e6yphgzn3aprwu****"}',
          ),
        ),
        8 => 
        array (
          'name' => 'EffectiveInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则的生效时间范围。',
            'type' => 'string',
            'required' => false,
            'example' => '05:31-23:59',
          ),
        ),
        9 => 
        array (
          'name' => 'NoEffectiveInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则的失效时间范围。',
            'type' => 'string',
            'required' => false,
            'example' => '00:00-05:30',
          ),
        ),
        10 => 
        array (
          'name' => 'SilenceTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通道沉默周期。

单位：秒。默认值：86400。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '86400',
          ),
        ),
        11 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控数据的上报周期。

`Period`的取值为60或60的整数倍。单位：秒。默认值：300。',
            'type' => 'string',
            'required' => false,
            'example' => '60',
          ),
        ),
        12 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则的探测周期。单位：秒。

> 建议报警规则的探测周期和数据上报周期保持一致。如果报警规则的探测周期小于数据上报周期，会因为数据不足而不能触发报警。',
            'type' => 'string',
            'required' => false,
            'example' => '60',
          ),
        ),
        13 => 
        array (
          'name' => 'Webhook',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警发生回调时的URL地址。

填写公网可访问的URL地址，云监控会将报警信息通过POST请求推送到该地址，目前仅支持HTTP协议。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://www.aliyun.com',
          ),
        ),
        14 => 
        array (
          'name' => 'EmailSubject',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警邮件主题。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS实例',
          ),
        ),
        15 => 
        array (
          'name' => 'ContactGroups',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系组。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS_Group',
          ),
        ),
        16 => 
        array (
          'name' => 'Escalations.Critical.Statistics',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Critical级别报警统计方法。多个统计方法之间用半角逗号（,）分隔。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'Average',
          ),
        ),
        17 => 
        array (
          'name' => 'Escalations.Critical.ComparisonOperator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Critical级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
            'type' => 'string',
            'required' => false,
            'example' => 'GreaterThanOrEqualToThreshold',
          ),
        ),
        18 => 
        array (
          'name' => 'Escalations.Critical.Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Critical级别报警阈值。',
            'type' => 'string',
            'required' => false,
            'example' => '90',
          ),
        ),
        19 => 
        array (
          'name' => 'Escalations.Critical.Times',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Critical级别报警重试次数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
        20 => 
        array (
          'name' => 'Escalations.Warn.Statistics',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Warn级别报警统计方法。多个统计方法之间用半角逗号（,）分隔。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'Average',
          ),
        ),
        21 => 
        array (
          'name' => 'Escalations.Warn.ComparisonOperator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Warn级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
            'type' => 'string',
            'required' => false,
            'example' => 'GreaterThanOrEqualToThreshold',
          ),
        ),
        22 => 
        array (
          'name' => 'Escalations.Warn.Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Warn级别报警阈值。',
            'type' => 'string',
            'required' => false,
            'example' => '90',
          ),
        ),
        23 => 
        array (
          'name' => 'Escalations.Warn.Times',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Warn级别报警重试次数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
        24 => 
        array (
          'name' => 'Escalations.Info.Statistics',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Info级别报警统计方法。多个统计方法之间用半角逗号（,）分隔。

该参数的取值由指定云产品的`MetricName`对应的`Statistics`列决定，例如：Maximum、Minimum和Average。关于如何获取该参数的取值，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'Average',
          ),
        ),
        25 => 
        array (
          'name' => 'Escalations.Info.ComparisonOperator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Info级别阈值比较符。取值：

- GreaterThanOrEqualToThreshold：大于等于。
- GreaterThanThreshold：大于。
- LessThanOrEqualToThreshold：小于等于。
- LessThanThreshold：小于。
- NotEqualToThreshold：不等于。
- GreaterThanYesterday：同比昨天时间上涨。
- LessThanYesterday：同比昨天时间下降。
- GreaterThanLastWeek：同比上周同一时间上涨。
- LessThanLastWeek：同比上周同一时间下降。
- GreaterThanLastPeriod：环比上周期上涨。
- LessThanLastPeriod：环比上周期下降。',
            'type' => 'string',
            'required' => false,
            'example' => 'GreaterThanOrEqualToThreshold',
          ),
        ),
        26 => 
        array (
          'name' => 'Escalations.Info.Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Info级别报警阈值。',
            'type' => 'string',
            'required' => false,
            'example' => '90',
          ),
        ),
        27 => 
        array (
          'name' => 'Escalations.Info.Times',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Info级别报警重试次数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
        28 => 
        array (
          'name' => 'NoDataPolicy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '无监控数据时报警的处理方式。取值：
- KEEP_LAST_STATE（默认值）：不做任何处理。
- INSUFFICIENT_DATA：报警内容为无数据。
- OK：正常。',
            'type' => 'string',
            'required' => false,
            'example' => 'KEEP_LAST_STATE',
          ),
        ),
        29 => 
        array (
          'name' => 'Labels',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警规则标签。

报警通知中会包含标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '报警规则的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key1',
                ),
                'Value' => 
                array (
                  'description' => '报警规则的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
            'minItems' => 0,
          ),
        ),
        30 => 
        array (
          'name' => 'Options',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '高级设置。

格式：{"key1":"value1","key2":"value2"}，例如：{"NotSendOK":true}，表示是否发送报警恢复通知，key为NotSendOK，value为true（不发送）或false（默认发送）。',
            'type' => 'string',
            'required' => false,
            'example' => '{"NotSendOK":true}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '报错信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '461CF2CD-2FC3-4B26-8645-7BD27E7D0F1D',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Result' => 
              array (
                'description' => '创建或修改报警规则的结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'RuleId' => 
                  array (
                    'description' => '报警规则ID。',
                    'type' => 'string',
                    'example' => '123456',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        204 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        499 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"461CF2CD-2FC3-4B26-8645-7BD27E7D0F1D\\",\\n  \\"Success\\": true,\\n  \\"Result\\": {\\n    \\"RuleId\\": \\"123456\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<PutGroupMetricRuleResponse>\\r\\n\\t<Message></Message>\\r\\n\\t<RequestId>461CF2CD-2FC3-4B26-8645-7BD27E7D0F1D</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n\\t<Result>\\r\\n\\t\\t<RuleId>123456</RuleId>\\r\\n\\t</Result>\\r\\n</PutGroupMetricRuleResponse>","errorExample":""}]',
      'title' => '创建或修改指定应用分组中的报警规则',
      'description' => '本文将提供一个示例，为应用分组`17285****`中的云服务器ECS的监控项`cpu_total`创建一条报警规则，其中报警规则的ID为`123456`，报警规则名称为`Rule_test`，报警级别为`Critical`，报警统计方法为`Average`，报警阈值比较符为`GreaterThanOrEqualToThreshold`，报警阈值为`90`，报警重试次数为`3`。返回结果显示，创建报警规则成功，报警规则ID为`123456`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteEventRuleTargets' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件报警规则名称。

关于如何获取事件报警规则名称，请参见[DescribeEventRuleList](~~114996~~)。

',
            'type' => 'string',
            'required' => true,
            'example' => 'testRule',
          ),
        ),
        1 => 
        array (
          'name' => 'Ids',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '事件报警规则ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '事件报警规则ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'testRuleId',
            ),
            'required' => true,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'successfull',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '142989D9-CC52-54D0-928D-2C9B1D9F051C',
              ),
              'Success' => 
              array (
                'description' => '是否成功，取值：  
- `true`：成功
- `false`：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'Permission denied',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successfull\\",\\n  \\"RequestId\\": \\"142989D9-CC52-54D0-928D-2C9B1D9F051C\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除事件报警的推送渠道',
      'summary' => '调用DeleteEventRuleTargets接口删除事件报警的推送渠道。',
    ),
    'DeleteEventRules' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleNames',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警规则名称。N的取值范围为：1~20。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'rule1',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E5A72B5B-4F44-438C-B68A-147FD5DC53A8',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'Permission denied',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"E5A72B5B-4F44-438C-B68A-147FD5DC53A8\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteEventRulesResponse>\\n    <RequestId>E5A72B5B-4F44-438C-B68A-147FD5DC53A8</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</DeleteEventRulesResponse>","errorExample":""}]',
      'title' => '删除事件报警规则',
      'summary' => '调用DeleteEventRules接口删除事件报警规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableEventRules' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleNames',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警规则名称。N的取值范围：1~20。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'ruleName1',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '20F2896A-6684-4A04-8255-4155B1593C70',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'Permission denied',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"20F2896A-6684-4A04-8255-4155B1593C70\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<EnableEventRulesResponse>\\n    <RequestId>20F2896A-6684-4A04-8255-4155B1593C70</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</EnableEventRulesResponse>","errorExample":""}]',
      'title' => '启用一个或者多个事件监控报警规则',
      'summary' => '调用EnableEventRules接口启用一个或者多个事件监控报警规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableEventRules' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleNames',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警规则名称。N的取值范围：1~20。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'ruleName1',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3FD0E8B5-F132-4F4E-A081-2878AF378B12',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'Permission denied',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"3FD0E8B5-F132-4F4E-A081-2878AF378B12\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DisableEventRulesResponse>\\n    <RequestId>3FD0E8B5-F132-4F4E-A081-2878AF378B12</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</DisableEventRulesResponse>","errorExample":""}]',
      'title' => '调用DisableEventRule接口禁用一个或多个事件报警规则',
      'summary' => '调用DisableEventRule接口禁用一个或多个事件报警规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEventRuleAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件报警规则名称。

关于如何获取事件报警规则名称，请参见[DescribeEventRuleList](~~114996~~)。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testRule',
          ),
        ),
        1 => 
        array (
          'name' => 'SilenceTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通道沉默周期。

单位：秒，默认值：86400（1天）。

> 当监控数据持续超过报警规则阈值时，每个沉默周期内只发送一次报警通知。',
            'type' => 'string',
            'required' => false,
            'example' => '86400',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The alert does not exist.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9AA3F210-C03D-4C86-8DB6-21C84FF692A1',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Result' => 
              array (
                'description' => '事件报警规则详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'EventType' => 
                  array (
                    'description' => '事件类型。取值：

- SYSTEM：系统事件。

- CUSTOM：自定义事件。',
                    'type' => 'string',
                    'example' => 'SYSTEM',
                  ),
                  'GroupId' => 
                  array (
                    'description' => '应用分组ID。',
                    'type' => 'string',
                    'example' => '3607****',
                  ),
                  'Name' => 
                  array (
                    'description' => '事件报警规则的名称。',
                    'type' => 'string',
                    'example' => 'test_DefaultEventRule_7378****',
                  ),
                  'Description' => 
                  array (
                    'description' => '事件报警规则的描述信息。',
                    'type' => 'string',
                    'example' => 'Default group event rule.',
                  ),
                  'State' => 
                  array (
                    'description' => '事件报警规则的状态。取值：

- ENABLED：启用。

- DISABLED：禁用。',
                    'type' => 'string',
                    'example' => 'ENABLED',
                  ),
                  'EventPattern' => 
                  array (
                    'description' => '事件模式。用于描述事件的触发条件。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Product' => 
                      array (
                        'description' => '云产品名称。',
                        'type' => 'string',
                        'example' => 'CloudMonitor',
                      ),
                      'LevelList' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'LevelList' => 
                          array (
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '事件报警规则的级别。取值：

- CRITICAL：严重。

- WARN：警告。

- INFO：信息。',
                              'type' => 'string',
                              'example' => '["CRITICAL","WARN"]    ',
                            ),
                          ),
                        ),
                      ),
                      'StatusList' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'StatusList' => 
                          array (
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '事件状态。',
                              'type' => 'string',
                              'example' => 'Running',
                            ),
                          ),
                        ),
                      ),
                      'NameList' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'NameList' => 
                          array (
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '事件名称。',
                              'type' => 'string',
                              'example' => 'Agent_Status_Running',
                            ),
                          ),
                        ),
                      ),
                      'EventTypeList' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'EventTypeList' => 
                          array (
                            'description' => '事件报警规则的类型列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '事件报警规则的类型。

`*`表示不限制报警规则类型。',
                              'type' => 'string',
                              'example' => '*',
                            ),
                          ),
                        ),
                      ),
                      'SQLFilter' => 
                      array (
                        'description' => '按照SQL过滤日志。如果符合条件，则触发报警。',
                        'type' => 'string',
                        'example' => 'ycccluster1 and (i-23ij0o82612 or Executed1) or Asimulated not 222',
                      ),
                      'KeywordFilterObj' => 
                      array (
                        'description' => '过滤关键词。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Keywords' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'keyword' => 
                              array (
                                'description' => '事件匹配的关键字列表。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '关键字。',
                                  'type' => 'string',
                                  'example' => 'VMException',
                                ),
                              ),
                            ),
                          ),
                          'Relation' => 
                          array (
                            'description' => '多个关键字的条件。取值：

- OR： 多个关键字之间或的关系。
- NOT：不包含关键字。表示匹配非关键字列表中的所有事件。',
                            'type' => 'string',
                            'example' => 'OR',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The alert does not exist.\\",\\n  \\"RequestId\\": \\"9AA3F210-C03D-4C86-8DB6-21C84FF692A1\\",\\n  \\"Success\\": true,\\n  \\"Result\\": {\\n    \\"EventType\\": \\"SYSTEM\\",\\n    \\"GroupId\\": \\"3607****\\",\\n    \\"Name\\": \\"test_DefaultEventRule_7378****\\",\\n    \\"Description\\": \\"Default group event rule.\\",\\n    \\"State\\": \\"ENABLED\\",\\n    \\"EventPattern\\": {\\n      \\"Product\\": \\"CloudMonitor\\",\\n      \\"LevelList\\": {\\n        \\"LevelList\\": [\\n          \\"[\\\\\\"CRITICAL\\\\\\",\\\\\\"WARN\\\\\\"]    \\"\\n        ]\\n      },\\n      \\"StatusList\\": {\\n        \\"StatusList\\": [\\n          \\"Running\\"\\n        ]\\n      },\\n      \\"NameList\\": {\\n        \\"NameList\\": [\\n          \\"Agent_Status_Running\\"\\n        ]\\n      },\\n      \\"EventTypeList\\": {\\n        \\"EventTypeList\\": [\\n          \\"*\\"\\n        ]\\n      },\\n      \\"SQLFilter\\": \\"ycccluster1 and (i-23ij0o82612 or Executed1) or Asimulated not 222\\",\\n      \\"KeywordFilterObj\\": {\\n        \\"Keywords\\": {\\n          \\"keyword\\": [\\n            \\"VMException\\"\\n          ]\\n        },\\n        \\"Relation\\": \\"OR\\"\\n      }\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeEventRuleAttributeResponse>\\r\\n\\t<RequestId>9AA3F210-C03D-4C86-8DB6-21C84FF692A1</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n\\t<Result>\\r\\n\\t\\t<EventPattern>\\r\\n\\t\\t\\t<NameList>\\r\\n\\t\\t\\t\\t<NameList>Agent_Status_Running</NameList>\\r\\n\\t\\t\\t</NameList>\\r\\n\\t\\t\\t<LevelList>\\r\\n\\t\\t\\t\\t<LevelList>CRITICAL</LevelList>\\r\\n\\t\\t\\t</LevelList>\\r\\n\\t\\t\\t<Product>CloudMonitor</Product>\\r\\n\\t\\t</EventPattern>\\r\\n\\t\\t<Description>Default group event rule</Description>\\r\\n\\t\\t<EventType>SYSTEM</EventType>\\r\\n\\t\\t<State>ENABLED</State>\\r\\n\\t\\t<Name>test_DefaultEventRule_7378****</Name>\\r\\n\\t\\t<GroupId>3607****</GroupId>\\r\\n\\t</Result>\\r\\n</DescribeEventRuleAttributeResponse>\\t","errorExample":""}]',
      'title' => '查询指定事件报警规则的详情',
      'summary' => '调用DescribeEventRuleAttribute接口查询指定事件报警规则的详情。',
      'description' => '本文将提供一个示例，查询事件报警规则`testRule`的详情。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEventRuleList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NamePrefix',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件报警规则前缀。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

起始值：1。默认值：1。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页时每页显示的数据行数。

起始值：1。默认值：10。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '7378****',
          ),
        ),
        4 => 
        array (
          'name' => 'IsEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '启用或禁用事件报警规则。取值：

true（默认值）：启用。

false：禁用。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '事件报警规则列表。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'User not authorized to operate on the specified resource.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D0E6D82B-16B5-422A-8136-EE5BDC01E415',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '21',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'EventRules' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EventRule' => 
                  array (
                    'description' => '事件报警规则。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '事件报警规则。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EventType' => 
                        array (
                          'description' => '事件报警类型。取值：

- SYSTEM：系统事件。

- CUSTOM：自定义事件。',
                          'type' => 'string',
                          'example' => 'SYSTEM',
                        ),
                        'Description' => 
                        array (
                          'description' => '事件报警规则的描述信息。',
                          'type' => 'string',
                          'example' => 'Default group event rule.',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '应用分组ID。',
                          'type' => 'string',
                          'example' => '7378****',
                        ),
                        'Name' => 
                        array (
                          'description' => '事件报警规则名称。',
                          'type' => 'string',
                          'example' => 'test_DefaultEventRule_7378****',
                        ),
                        'State' => 
                        array (
                          'description' => '事件报警规则状态。取值：

- ENABLED：启用。

- DISABLED：禁用。',
                          'type' => 'string',
                          'example' => 'ENABLED',
                        ),
                        'EventPattern' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EventPattern' => 
                            array (
                              'description' => '事件报警规则的模式。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '事件报警规则的模式。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Product' => 
                                  array (
                                    'description' => '云服务名称的缩写。',
                                    'type' => 'string',
                                    'example' => 'CloudMonitor',
                                  ),
                                  'LevelList' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'LevelList' => 
                                      array (
                                        'description' => '事件的等级列表。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '事件的等级。取值：

- CRITICAL：严重。

- WARN：警告。

- INFO：信息。',
                                          'type' => 'string',
                                          'example' => 'CRITICAL',
                                        ),
                                      ),
                                    ),
                                  ),
                                  'EventTypeList' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'EventTypeList' => 
                                      array (
                                        'description' => '事件报警规则的类型列表。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '事件报警规则的类型。

`*`表示不限制报警规则类型。',
                                          'type' => 'string',
                                          'example' => '*',
                                        ),
                                      ),
                                    ),
                                  ),
                                  'NameList' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'NameList' => 
                                      array (
                                        'description' => '事件名称列表。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '事件名称列表。',
                                          'type' => 'string',
                                          'example' => '["Agent_Status_Stopped"]',
                                        ),
                                      ),
                                    ),
                                  ),
                                  'CustomFilters' => 
                                  array (
                                    'description' => '自定义过滤条件。',
                                    'type' => 'string',
                                    'example' => 'ECS123',
                                  ),
                                  'KeywordFilter' => 
                                  array (
                                    'description' => '过滤关键词。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Keywords' => 
                                      array (
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'Keywords' => 
                                          array (
                                            'description' => '事件匹配的关键字列表。',
                                            'type' => 'array',
                                            'items' => 
                                            array (
                                              'description' => '关键字。',
                                              'type' => 'string',
                                              'example' => 'VMException',
                                            ),
                                          ),
                                        ),
                                      ),
                                      'Relation' => 
                                      array (
                                        'description' => '多个关键字的条件。取值：

- OR： 多个关键字之前是或的关系。
- NOT：不包含关键字。表示匹配非关键字列表中的所有事件。',
                                        'type' => 'string',
                                        'example' => 'OR',
                                      ),
                                    ),
                                  ),
                                  'SQLFilter' => 
                                  array (
                                    'description' => '按照SQL过滤日志。如果符合条件，则触发报警。',
                                    'type' => 'string',
                                    'example' => 'ycccluster1 and (i-23ij0o82612 or Executed1) or Asimulated not 222',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'SilenceTime' => 
                        array (
                          'description' => '通道沉默周期。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '86400',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"User not authorized to operate on the specified resource.\\",\\n  \\"RequestId\\": \\"D0E6D82B-16B5-422A-8136-EE5BDC01E415\\",\\n  \\"Total\\": 21,\\n  \\"Success\\": true,\\n  \\"EventRules\\": {\\n    \\"EventRule\\": [\\n      {\\n        \\"EventType\\": \\"SYSTEM\\",\\n        \\"Description\\": \\"Default group event rule.\\",\\n        \\"GroupId\\": \\"7378****\\",\\n        \\"Name\\": \\"test_DefaultEventRule_7378****\\",\\n        \\"State\\": \\"ENABLED\\",\\n        \\"EventPattern\\": {\\n          \\"EventPattern\\": [\\n            {\\n              \\"Product\\": \\"CloudMonitor\\",\\n              \\"LevelList\\": {\\n                \\"LevelList\\": [\\n                  \\"CRITICAL\\"\\n                ]\\n              },\\n              \\"EventTypeList\\": {\\n                \\"EventTypeList\\": [\\n                  \\"*\\"\\n                ]\\n              },\\n              \\"NameList\\": {\\n                \\"NameList\\": [\\n                  \\"[\\\\\\"Agent_Status_Stopped\\\\\\"]\\"\\n                ]\\n              },\\n              \\"CustomFilters\\": \\"ECS123\\",\\n              \\"KeywordFilter\\": {\\n                \\"Keywords\\": {\\n                  \\"Keywords\\": [\\n                    \\"VMException\\"\\n                  ]\\n                },\\n                \\"Relation\\": \\"OR\\"\\n              },\\n              \\"SQLFilter\\": \\"ycccluster1 and (i-23ij0o82612 or Executed1) or Asimulated not 222\\"\\n            }\\n          ]\\n        },\\n        \\"SilenceTime\\": 86400\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeEventRuleListResponse>\\r\\n\\t<RequestId>C8308712-6E7A-4FA0-82AC-80D018DAD168</RequestId>\\r\\n\\t<Total>3</Total>\\r\\n\\t<EventRules>\\r\\n\\t\\t<EventRule>\\r\\n\\t\\t\\t<EventPattern>\\r\\n\\t\\t\\t\\t<NameList>\\r\\n\\t\\t\\t\\t\\t<NameList>*</NameList>\\r\\n\\t\\t\\t\\t</NameList>\\r\\n\\t\\t\\t\\t<LevelList>\\r\\n\\t\\t\\t\\t\\t<LevelList>CRITICAL</LevelList>\\r\\n\\t\\t\\t\\t</LevelList>\\r\\n\\t\\t\\t\\t<EventTypeList>\\r\\n\\t\\t\\t\\t\\t<EventTypeList>*</EventTypeList>\\r\\n\\t\\t\\t\\t</EventTypeList>\\r\\n\\t\\t\\t\\t<Product>CloudMonitor</Product>\\r\\n\\t\\t\\t</EventPattern>\\r\\n\\t\\t\\t<EventType>SYSTEM</EventType>\\r\\n\\t\\t\\t<State>ENABLED</State>\\r\\n\\t\\t\\t<Name>test123</Name>\\r\\n\\t\\t</EventRule>\\r\\n\\t\\t<EventRule>\\r\\n\\t\\t\\t<EventPattern>\\r\\n\\t\\t\\t\\t<NameList>\\r\\n\\t\\t\\t\\t\\t<NameList>*</NameList>\\r\\n\\t\\t\\t\\t</NameList>\\r\\n\\t\\t\\t\\t<LevelList>\\r\\n\\t\\t\\t\\t\\t<LevelList>CRITICAL</LevelList>\\r\\n\\t\\t\\t\\t\\t<LevelList>WARN</LevelList>\\r\\n\\t\\t\\t\\t</LevelList>\\r\\n\\t\\t\\t\\t<Product>*</Product>\\r\\n\\t\\t\\t</EventPattern>\\r\\n\\t\\t\\t<Description>Default group event rule.</Description>\\r\\n\\t\\t\\t<EventType>SYSTEM</EventType>\\r\\n\\t\\t\\t<State>ENABLED</State>\\r\\n\\t\\t\\t<Name>test_DefaultEventRule_7378****</Name>\\r\\n\\t\\t\\t<GroupId>7378****</GroupId>\\r\\n\\t\\t</EventRule>\\r\\n\\t\\t<EventRule>\\r\\n\\t\\t\\t<EventPattern>\\r\\n\\t\\t\\t\\t<NameList>\\r\\n\\t\\t\\t\\t\\t<NameList>*</NameList>\\r\\n\\t\\t\\t\\t</NameList>\\r\\n\\t\\t\\t\\t<LevelList>\\r\\n\\t\\t\\t\\t\\t<LevelList>CRITICAL</LevelList>\\r\\n\\t\\t\\t\\t\\t<LevelList>WARN</LevelList>\\r\\n\\t\\t\\t\\t</LevelList>\\r\\n\\t\\t\\t\\t<Product>*</Product>\\r\\n\\t\\t\\t</EventPattern>\\r\\n\\t\\t\\t<Description>Default group event rule.</Description>\\r\\n\\t\\t\\t<EventType>SYSTEM</EventType>\\r\\n\\t\\t\\t<State>ENABLED</State>\\r\\n\\t\\t\\t<Name>test123_DefaultEventRule_7301****</Name>\\r\\n\\t\\t\\t<GroupId>7301****</GroupId>\\r\\n\\t\\t</EventRule>\\r\\n\\t</EventRules>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeEventRuleListResponse>\\t","errorExample":""}]',
      'title' => '查询事件报警规则列表',
      'summary' => '调用DescribeEventRuleList接口查询事件报警规则列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEventRuleTargetList' => 
    array (
      'summary' => '调用DescribeEventRuleTargetList接口查询指定事件报警规则的推送渠道。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件报警规则名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testRule',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '87170bc7-e28a-4c93-b9bf-90a1dbe84736',
              ),
              'ContactParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ContactParameter' => 
                  array (
                    'description' => '报警联系组通知方式。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ContactGroupName' => 
                        array (
                          'description' => '报警联系人组的名称。',
                          'type' => 'string',
                          'example' => '默认告警通知组',
                        ),
                        'Level' => 
                        array (
                          'description' => '通知级别。取值：

<props="china">- 2：电话、短信、钉钉、Email。</props>

<props="china">- 3：短信、钉钉、Email。</props>

<props="china">- 4：钉钉、Email。</props>

<props="intl">4：钉钉、Email。</props>

<props="partner">4：钉钉、Email。</props>
',
                          'type' => 'string',
                          'example' => '3',
                        ),
                        'Id' => 
                        array (
                          'description' => '报警联系人组通知方式唯一标识。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'FcParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'FCParameter' => 
                  array (
                    'description' => '函数计算通知方式。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ServiceName' => 
                        array (
                          'description' => '函数计算服务名称。',
                          'type' => 'string',
                          'example' => 'service1',
                        ),
                        'FunctionName' => 
                        array (
                          'description' => '函数名称。',
                          'type' => 'string',
                          'example' => 'fcTest1',
                        ),
                        'Arn' => 
                        array (
                          'description' => 'ARN资源描述。

格式：`arn:acs:${Service}:${Region}:${Account}:${ResourceType}/${ResourceId}`。各字段含义如下：

- Service：云产品code。

- Region：地域ID。

- Account：阿里云账号ID。

- ResourceType：资源类型。

- ResourceId：资源ID。',
                          'type' => 'string',
                          'example' => 'acs:log:cn-hangzhou::project/cms-log-mon***/logstore/cxxxx***',
                        ),
                        'Id' => 
                        array (
                          'description' => '函数服务通知方式唯一标识。',
                          'type' => 'string',
                          'example' => '3',
                        ),
                        'Region' => 
                        array (
                          'description' => '函数计算服务对应的地域。',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'MnsParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MnsParameter' => 
                  array (
                    'description' => '消息服务通知。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Queue' => 
                        array (
                          'description' => '消息队列的名称。',
                          'type' => 'string',
                          'example' => 'testQueue',
                        ),
                        'Arn' => 
                        array (
                          'description' => 'ARN资源描述。

格式：`arn:acs:${Service}:${Region}:${Account}:${ResourceType}/${ResourceId}`。各字段含义如下：

- Service：云服务Code。

- Region：地域ID。

- Account：阿里云账号ID。

- ResourceType：资源类型。

- ResourceId：资源ID。',
                          'type' => 'string',
                          'example' => 'acs:log:cn-hangzhou::project/cms-log-mon***/logstore/cxxxx***',
                        ),
                        'Region' => 
                        array (
                          'description' => '消息服务对应的地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'Id' => 
                        array (
                          'description' => '消息服务通知方式唯一标识。',
                          'type' => 'string',
                          'example' => '2',
                        ),
                        'Topic' => 
                        array (
                          'description' => '消息服务的主题。',
                          'type' => 'string',
                          'example' => 'topic_sample',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'WebhookParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'WebhookParameter' => 
                  array (
                    'description' => 'URL回调通知方式。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Url' => 
                        array (
                          'description' => '回调的URL地址。',
                          'type' => 'string',
                          'example' => 'http://www.aliyun.com',
                        ),
                        'Method' => 
                        array (
                          'description' => 'HTTP回调的请求方法。目前支持GET和POST方法。',
                          'type' => 'string',
                          'example' => 'GET',
                        ),
                        'Protocol' => 
                        array (
                          'description' => '协议类型。',
                          'type' => 'string',
                          'example' => 'HTTP',
                        ),
                        'Id' => 
                        array (
                          'description' => 'URL回调通知方式唯一标识。',
                          'type' => 'string',
                          'example' => '5',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'SlsParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SlsParameter' => 
                  array (
                    'description' => '日志服务（SLS）通知方式。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Project' => 
                        array (
                          'description' => 'Project名称。',
                          'type' => 'string',
                          'example' => 'project_test',
                        ),
                        'LogStore' => 
                        array (
                          'description' => 'LogStore名称。',
                          'type' => 'string',
                          'example' => 'logstore_test',
                        ),
                        'Arn' => 
                        array (
                          'description' => 'ARN资源描述。

格式：`arn:acs:${Service}:${Region}:${Account}:${ResourceType}/${ResourceId}`。各字段含义如下：

- Service：云服务Code。

- Region：地域ID。

- Account：阿里云账号ID。

- ResourceType：资源类型。

- ResourceId：资源ID。',
                          'type' => 'string',
                          'example' => 'acs:log:cn-hangzhou::project/cms-log-mo****/logstore/c***',
                        ),
                        'Region' => 
                        array (
                          'description' => 'Project对应的地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'Id' => 
                        array (
                          'description' => '日志服务通知方式唯一标识。',
                          'type' => 'string',
                          'example' => '4',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'OpenApiParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'OpenApiParameters' => 
                  array (
                    'description' => '回调API的参数含义。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Action' => 
                        array (
                          'description' => 'API名称。',
                          'type' => 'string',
                          'example' => 'PutLogs',
                        ),
                        'Arn' => 
                        array (
                          'description' => 'ARN资源描述。
格式：`arn:acs:${Service}:${Region}:${Account}:${ResourceType}/${ResourceId}`。各字段含义如下：
  - Service：阿里云产品。
  - Region：地域ID。
  - Account：阿里云账号ID。
  - ResourceType：资源类型。
  - ResourceId：资源ID。ARN资源描述。
格式：`arn:acs:${Service}:${Region}:${Account}:${ResourceType}/${ResourceId}`。各字段含义如下：
  - Service：阿里云产品。
  - Region：地域ID。
  - Account：阿里云账号ID。
  - ResourceType：资源类型。
  - ResourceId：资源ID。',
                          'type' => 'string',
                          'example' => 'acs:log:cn-hangzhou::project/cms-log-mon***/logstore/cxxxx***',
                        ),
                        'Id' => 
                        array (
                          'description' => 'API回调通知方式的唯一标识。',
                          'type' => 'string',
                          'example' => '3',
                        ),
                        'Product' => 
                        array (
                          'description' => 'API对应的云产品ID。',
                          'type' => 'string',
                          'example' => 'log',
                        ),
                        'Region' => 
                        array (
                          'description' => '资源对应的地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'Role' => 
                        array (
                          'description' => '角色名称。',
                          'type' => 'string',
                          'example' => 'MyRole',
                        ),
                        'Version' => 
                        array (
                          'description' => 'API的版本。',
                          'type' => 'string',
                          'example' => '2019-01-01',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"87170bc7-e28a-4c93-b9bf-90a1dbe84736\\",\\n  \\"ContactParameters\\": {\\n    \\"ContactParameter\\": [\\n      {\\n        \\"ContactGroupName\\": \\"默认告警通知组\\",\\n        \\"Level\\": \\"3\\",\\n        \\"Id\\": \\"1\\"\\n      }\\n    ]\\n  },\\n  \\"FcParameters\\": {\\n    \\"FCParameter\\": [\\n      {\\n        \\"ServiceName\\": \\"service1\\",\\n        \\"FunctionName\\": \\"fcTest1\\",\\n        \\"Arn\\": \\"acs:log:cn-hangzhou::project/cms-log-mon***/logstore/cxxxx***\\",\\n        \\"Id\\": \\"3\\",\\n        \\"Region\\": \\"cn-qingdao\\"\\n      }\\n    ]\\n  },\\n  \\"MnsParameters\\": {\\n    \\"MnsParameter\\": [\\n      {\\n        \\"Queue\\": \\"testQueue\\",\\n        \\"Arn\\": \\"acs:log:cn-hangzhou::project/cms-log-mon***/logstore/cxxxx***\\",\\n        \\"Region\\": \\"cn-hangzhou\\",\\n        \\"Id\\": \\"2\\",\\n        \\"Topic\\": \\"topic_sample\\"\\n      }\\n    ]\\n  },\\n  \\"WebhookParameters\\": {\\n    \\"WebhookParameter\\": [\\n      {\\n        \\"Url\\": \\"http://www.aliyun.com\\",\\n        \\"Method\\": \\"GET\\",\\n        \\"Protocol\\": \\"HTTP\\",\\n        \\"Id\\": \\"5\\"\\n      }\\n    ]\\n  },\\n  \\"SlsParameters\\": {\\n    \\"SlsParameter\\": [\\n      {\\n        \\"Project\\": \\"project_test\\",\\n        \\"LogStore\\": \\"logstore_test\\",\\n        \\"Arn\\": \\"acs:log:cn-hangzhou::project/cms-log-mo****/logstore/c***\\",\\n        \\"Region\\": \\"cn-hangzhou\\",\\n        \\"Id\\": \\"4\\"\\n      }\\n    ]\\n  },\\n  \\"OpenApiParameters\\": {\\n    \\"OpenApiParameters\\": [\\n      {\\n        \\"Action\\": \\"PutLogs\\",\\n        \\"Arn\\": \\"acs:log:cn-hangzhou::project/cms-log-mon***/logstore/cxxxx***\\",\\n        \\"Id\\": \\"3\\",\\n        \\"Product\\": \\"log\\",\\n        \\"Region\\": \\"cn-hangzhou\\",\\n        \\"Role\\": \\"MyRole\\",\\n        \\"Version\\": \\"2019-01-01\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeEventRuleTargetList>\\r\\n\\t\\t<RequestId>87170bc7-e28a-4c93-b9bf-90a1dbe84736</RequestId>\\r\\n\\t\\t<ContactParameters>\\r\\n\\t\\t\\t<ContactParameter>\\r\\n\\t\\t\\t\\t<ContactGroupName>默认告警通知组</ContactGroupName>\\r\\n\\t\\t\\t\\t<Level>3</Level>\\r\\n\\t\\t\\t\\t<Id>1</Id>\\r\\n\\t\\t\\t</ContactParameter>\\r\\n\\t\\t</ContactParameters>\\r\\n\\t\\t<SlsParameters>\\r\\n\\t\\t\\t<SlsParameter>\\r\\n\\t\\t\\t\\t<Project>project_test</Project>\\r\\n\\t\\t\\t\\t<LogStore>logstore_test</LogStore>\\r\\n\\t\\t\\t\\t<Region>cn-hangzhou</Region>\\r\\n\\t\\t\\t\\t<Arn>acs:log:cn-hangzhou::project/cms-log-mon***/logstore/cxxxx***</Arn>\\r\\n\\t\\t\\t\\t<Id>2</Id>\\r\\n\\t\\t\\t</SlsParameter>\\r\\n\\t\\t</SlsParameters>\\r\\n\\t\\t<Code>200</Code>\\r\\n</DescribeEventRuleTargetList>","errorExample":""}]',
      'title' => '查询指定事件报警规则的推送渠道',
      'description' => '本文将提供一个示例，查询事件报警规则`testRule`的详情。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutEventRuleTargets' => 
    array (
      'summary' => '调用PutEventRuleTargets接口添加或修改规则的推送渠道。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则的名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testEventRule',
          ),
        ),
        1 => 
        array (
          'name' => 'FcParameters',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '函数计算通知方式。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'FunctionName' => 
                array (
                  'description' => '函数名称。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'fc-test',
                ),
                'Region' => 
                array (
                  'description' => '函数服务对应的地域。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cn-hangzhou',
                ),
                'ServiceName' => 
                array (
                  'description' => '函数服务的服务名称。N的取值范围为1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'fc-test',
                ),
                'Id' => 
                array (
                  'description' => '规则发送目标的唯一标识。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        2 => 
        array (
          'name' => 'ContactParameters',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警联系组通知方式。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'ContactGroupName' => 
                array (
                  'description' => '报警联系人组的名称。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '默认报警联系组',
                ),
                'Id' => 
                array (
                  'description' => '规则发送目标的唯一标识。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '2',
                ),
                'Level' => 
                array (
                  'description' => '报警通知级别。N的取值范围：1~5。取值：

<props="china">- 2：电话、短信、钉钉、邮箱</props>

<props="china">- 3：短信、钉钉、邮箱</props>

<props="china">- 4：钉钉、邮箱</props>

<props="intl">4：钉钉、邮箱</props>

<props="partner">4：钉钉、邮箱</props>',
                  'type' => 'string',
                  'required' => false,
                  'example' => '4',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        3 => 
        array (
          'name' => 'MnsParameters',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '消息服务通知。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'Region' => 
                array (
                  'description' => '消息服务对应的地域。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cn-hangzhou',
                ),
                'Queue' => 
                array (
                  'description' => '队列名称。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'queue1',
                ),
                'Id' => 
                array (
                  'description' => '规则发送目标的唯一标识。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '3',
                ),
                'Topic' => 
                array (
                  'description' => '消息服务的主题。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'topic_sample',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        4 => 
        array (
          'name' => 'WebhookParameters',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'URL回调通知方式。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'Protocol' => 
                array (
                  'description' => '协议名称。N的取值范围：1~5。取值：

- http
- telnet
- ping

',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'http',
                ),
                'Url' => 
                array (
                  'description' => '回调的URL。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'http://www.aliyun.com',
                ),
                'Method' => 
                array (
                  'description' => 'HTTP回调的请求方法。N的取值范围：1~5。

目前仅支持GET和POST。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GET',
                ),
                'Id' => 
                array (
                  'description' => '规则发送目标的唯一标识。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '4',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        5 => 
        array (
          'name' => 'SlsParameters',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '日志服务（SLS）通知方式。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'LogStore' => 
                array (
                  'description' => '日志服务对应的日志库。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'testlogstore',
                ),
                'Region' => 
                array (
                  'description' => '日志服务对应的地域。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cn-hangzhou',
                ),
                'Project' => 
                array (
                  'description' => '日志服务对应的项目。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'testproject',
                ),
                'Id' => 
                array (
                  'description' => '规则发送目标的唯一标识。N的取值范围：1~5。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '5',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        6 => 
        array (
          'name' => 'OpenApiParameters',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'API回调通知参数列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'Action' => 
                array (
                  'description' => 'API名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'PutLogs',
                ),
                'Arn' => 
                array (
                  'description' => '资源的ARN。N的取值范围：1~5。
格式：`arn:acs:${Service}:${Region}:${Account}:${ResourceType}/${ResourceId}`。各字段含义如下：
  - Service：云产品。
  - Region：地域ID。
  - Account：阿里云账号ID。
  - ResourceType：资源类型。
  - ResourceId：资源ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'acs:log:cn-hangzhou::project/cms-log-mon***/logstore/cxxxx***',
                ),
                'Id' => 
                array (
                  'description' => 'API回调通知方式的唯一标识。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '3',
                ),
                'Product' => 
                array (
                  'description' => 'API对应的云产品ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'log',
                ),
                'Region' => 
                array (
                  'description' => '资源对应的地域。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cn-hangzhou',
                ),
                'Role' => 
                array (
                  'description' => '角色名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'MyRole',
                ),
                'Version' => 
                array (
                  'description' => 'API的版本。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '2019-01-01',
                ),
                'JsonParams' => 
                array (
                  'description' => '报警回调的JSON格式参数。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '{"customField1":"value1","customField2":"$.name"}',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。
>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '409C64DA-CF14-45DF-B463-471C790DD15A',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'FailedParameterCount' => 
              array (
                'description' => '错误参数数量统计。',
                'type' => 'string',
                'example' => '2',
              ),
              'FailedContactParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ContactParameter' => 
                  array (
                    'description' => '如果规则发送目标中包含创建错误的报警联系人组，则返回此参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ContactGroupName' => 
                        array (
                          'description' => '报警联系人组的名称。',
                          'type' => 'string',
                          'example' => '默认报警联系人组',
                        ),
                        'Id' => 
                        array (
                          'description' => '规则发送目标的ID。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'Level' => 
                        array (
                          'description' => '
报警通知级别。取值：

<props="china">- 2：电话、短信、钉钉、邮箱</props>

<props="china">- 3：短信、钉钉、邮箱</props>

<props="china">- 4：钉钉、邮箱</props>

<props="intl">4：钉钉、邮箱</props>

<props="partner">4：钉钉、邮箱</props>

',
                          'type' => 'string',
                          'example' => '4',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'FailedMnsParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MnsParameter' => 
                  array (
                    'description' => '如果规则发送目标中包含创建错误的消息服务，则返回此参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Queue' => 
                        array (
                          'description' => '队列的名称。',
                          'type' => 'string',
                          'example' => 'testQueue',
                        ),
                        'Id' => 
                        array (
                          'description' => '规则发送目标的ID。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'FailedFcParameters' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'FcParameter' => 
                  array (
                    'description' => '如果规则发送目标中包含创建错误的函数服务，则返回此参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ServiceName' => 
                        array (
                          'description' => '函数服务的名称。',
                          'type' => 'string',
                          'example' => 'serviceTest1',
                        ),
                        'FunctionName' => 
                        array (
                          'description' => '函数名称。',
                          'type' => 'string',
                          'example' => 'functionTest1',
                        ),
                        'Id' => 
                        array (
                          'description' => '规则发送目标的ID。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"409C64DA-CF14-45DF-B463-471C790DD15A\\",\\n  \\"Success\\": true,\\n  \\"FailedParameterCount\\": \\"2\\",\\n  \\"FailedContactParameters\\": {\\n    \\"ContactParameter\\": [\\n      {\\n        \\"ContactGroupName\\": \\"默认报警联系人组\\",\\n        \\"Id\\": 2,\\n        \\"Level\\": \\"4\\"\\n      }\\n    ]\\n  },\\n  \\"FailedMnsParameters\\": {\\n    \\"MnsParameter\\": [\\n      {\\n        \\"Queue\\": \\"testQueue\\",\\n        \\"Id\\": 2,\\n        \\"Region\\": \\"cn-hangzhou\\"\\n      }\\n    ]\\n  },\\n  \\"FailedFcParameters\\": {\\n    \\"FcParameter\\": [\\n      {\\n        \\"ServiceName\\": \\"serviceTest1\\",\\n        \\"FunctionName\\": \\"functionTest1\\",\\n        \\"Id\\": 1,\\n        \\"Region\\": \\"cn-hangzhou\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DeleteCustomMetric>\\n\\t\\t<RequestId>681CC49A-DD28-4D11-B86F-19D3F71E0EAE</RequestId>\\n\\t\\t<Code>200</Code>\\n\\t\\t<Success>true</Success>\\n</DeleteCustomMetric>","errorExample":""}]',
      'title' => '添加或修改规则的推送渠道',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutEventRule' => 
    array (
      'summary' => '调用PutEventRule接口创建或修改事件的报警规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件报警规则名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'myRuleName',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件报警规则所属的应用分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '7378****',
          ),
        ),
        2 => 
        array (
          'name' => 'EventType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件报警规则的类型。取值：

- SYSTEM：系统事件。
- CUSTOM：自定义事件。',
            'type' => 'string',
            'required' => false,
            'example' => 'SYSTEM',
            'default' => 'SYSTEM',
            'enum' => 
            array (
              0 => 'SYSTEM',
              1 => 'CUSTOM',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件报警规则的描述。',
            'type' => 'string',
            'required' => false,
            'example' => '事件报警测试',
          ),
        ),
        4 => 
        array (
          'name' => 'State',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件报警规则的状态。取值：

- ENABLED：启用。
- DISABLED：禁用。',
            'type' => 'string',
            'required' => false,
            'example' => 'ENABLED',
            'default' => 'ENABLED',
            'enum' => 
            array (
              0 => 'ENABLED',
              1 => 'DISABLED',
            ),
          ),
        ),
        5 => 
        array (
          'name' => 'EventPattern',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '事件报警规则的模式。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'EventTypeList' => 
                array (
                  'description' => '事件报警规则的类型。N的取值范围：1~50。取值：

- StatusNotification：故障通知。

- Exception：异常。

- Maintenance：运维。

- *：无限制。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '事件报警规则的类型。N的取值范围：1~50。取值：

- StatusNotification：故障通知。

- Exception：异常。

- Maintenance：运维。

- *：无限制。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'Exception',
                  ),
                  'required' => false,
                  'example' => 'Exception',
                  'maxItems' => 5,
                ),
                'StatusList' => 
                array (
                  'description' => '事件报警规则的状态。N的取值范围：1~50。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '事件报警规则的状态。N的取值范围：1~50。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'Failed',
                  ),
                  'required' => false,
                  'example' => 'Failed',
                  'maxItems' => 5,
                ),
                'Product' => 
                array (
                  'description' => '云服务类型。N的取值范围：1~50。

>关于事件报警规则支持的云服务，请参见[DescribeSystemEventMetaList](~~114972~~)。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ecs',
                ),
                'LevelList' => 
                array (
                  'description' => '事件报警规则的等级。N的取值范围：1~50。取值：

- CRITICAL：严重。

- WARN：警告。

- INFO：信息。

- *：所有等级。
',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '事件报警规则的等级。N的取值范围：1~50。取值：

- CRITICAL：严重。

- WARN：警告。

- INFO：信息。

- *：所有等级。
',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'CRITICAL',
                  ),
                  'required' => false,
                  'example' => 'CRITICAL',
                  'maxItems' => 5,
                ),
                'NameList' => 
                array (
                  'description' => '事件报警规则的名称。N的取值范围：1~50。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '事件报警规则的名称。N的取值范围：1~50。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'Agent_Status_Stopped',
                  ),
                  'required' => false,
                  'example' => 'Agent_Status_Stopped',
                  'maxItems' => 20,
                ),
                'CustomFilters' => 
                array (
                  'description' => '事件过滤关键字。当事件内容包含该关键字时，自动触发报警。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Stopping',
                ),
                'SQLFilter' => 
                array (
                  'description' => 'SQL事件过滤。当事件内容满足SQL条件时，自动触发报警。
> SQL事件过滤的语法与日志服务SLS的查询语法保持一致。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.XX.XX and Executed',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
        6 => 
        array (
          'name' => 'SilenceTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通道沉默时间。单位：秒。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '86400',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'Data' => 
              array (
                'description' => '创建或修改事件报警规则时，返回影响的行数。',
                'type' => 'string',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0B47C47B-E68A-4429-BB23-370E91889C7D',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"Data\\": \\"1\\",\\n  \\"RequestId\\": \\"0B47C47B-E68A-4429-BB23-370E91889C7D\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PutEventRuleResponse>\\n\\t\\t<RequestId>0B47C47B-E68A-4429-BB23-370E91889C7D</RequestId>\\n\\t\\t<Data>1</Data>\\n\\t\\t<Code>200</Code>\\n\\t\\t<Success>true</Success>\\n</PutEventRuleResponse>","errorExample":""}]',
      'title' => '创建或修改事件的报警规则',
      'description' => '如果报警规则名称不存在，则创建新的报警规则；如果报警规则名称存在，则修改已有报警规则。

本文将提供一个示例，为云服务`ecs`创建一条事件报警规则`myRuleName`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutCustomEventRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。获取方法请参见[DescribeCustomEventAttribute](~~115262~~)。

> 0表示上报的自定义事件不属于任何一个应用分组。',
            'type' => 'string',
            'required' => true,
            'example' => '7378****',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则ID。

> 如果报警规则ID已存在，则表示修改报警规则；如果报警规则ID不存在，则表示创建报警规则。',
            'type' => 'string',
            'required' => true,
            'example' => 'CustomRuleId1',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'CustomeRule',
          ),
        ),
        3 => 
        array (
          'name' => 'EventName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义事件名称。获取方法请参见[DescribeCustomEventAttribute](~~115262~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'HostDown',
          ),
        ),
        4 => 
        array (
          'name' => 'ContactGroups',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系人组。多个联系人组之间用英文逗号（,）分隔。',
            'type' => 'string',
            'required' => true,
            'example' => 'ECS_Group',
          ),
        ),
        5 => 
        array (
          'name' => 'Webhook',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警发生回调时指定的URL地址，向URL发送POST请求。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://www.aliyun.com',
          ),
        ),
        6 => 
        array (
          'name' => 'EffectiveInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则生效的时间范围。取值范围：00:00-23:59。',
            'type' => 'string',
            'required' => false,
            'example' => '00:00-23:59',
          ),
        ),
        7 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义事件监控数据的聚合周期。单位：秒。取值为60或60的整数倍。默认值：300。',
            'type' => 'string',
            'required' => false,
            'example' => '60',
            'default' => '300',
          ),
        ),
        8 => 
        array (
          'name' => 'EmailSubject',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警邮件主题。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS实例',
          ),
        ),
        9 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警阈值。',
            'type' => 'string',
            'required' => true,
            'example' => '99',
          ),
        ),
        10 => 
        array (
          'name' => 'Level',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警级别。取值：
- CRITICAL：严重。
- WARN：警告。
- INFO：信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'CRITICAL',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The request has failed due to a temporary failure of the server.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AD5DCD82-BD1C-405F-BAED-32302DE9F498',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        204 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        206 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        499 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The request has failed due to a temporary failure of the server.\\",\\n  \\"RequestId\\": \\"AD5DCD82-BD1C-405F-BAED-32302DE9F498\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PutCustomEventRuleResponse>\\n\\t<RequestId>AD5DCD82-BD1C-405F-BAED-32302DE9F498</RequestId>\\n\\t<Code>200</Code>\\n\\t<Success>true</Success>\\n</PutCustomEventRuleResponse>","errorExample":""}]',
      'title' => '创建自定义事件报警规则',
      'summary' => '调用PutCustomEventRule接口创建自定义事件报警规则。',
      'description' => '调用本接口前，请先调用PutCustomEvent接口上报自定义事件的监控数据，详情请参见[PutCustomEvent](~~115012~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateMetricRuleBlackList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略的名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'Blacklist-01',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务的数据命名空间。

关于云服务的命名空间，请参见[云服务监控项](~~163515~~)。
',
            'type' => 'string',
            'required' => true,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        2 => 
        array (
          'name' => 'Category',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务的类型分类。例如：Redis有`kvstore_standard`（标准版）、`kvstore_sharding`（集群版）和`kvstore_splitrw`（读写分离版）等。',
            'type' => 'string',
            'required' => true,
            'example' => 'ecs',
          ),
        ),
        3 => 
        array (
          'name' => 'ScopeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略的生效范围。取值：

- USER（默认值）：报警黑名单策略仅在当前阿里云账号中生效。

- GROUP：报警黑名单策略在指定应用分组中生效，您需要选择指定应用分组。
  关于如何获取应用分组ID，请参见[DescribeMonitorGroups](~~115032~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'USER',
          ),
        ),
        4 => 
        array (
          'name' => 'ScopeValue',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID列表。格式为JSON Array。

> 仅当`ScopeType`为`GROUP`时，需要设置该参数。',
            'type' => 'string',
            'required' => false,
            'example' => '["67****","78****"]',
          ),
        ),
        5 => 
        array (
          'name' => 'EnableStartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略生效的开始时间戳。

单位：毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1640237400000',
          ),
        ),
        6 => 
        array (
          'name' => 'EnableEndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略生效的结束时间戳。

单位：毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1640608200000',
          ),
        ),
        7 => 
        array (
          'name' => 'EffectiveTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略的生效时间范围。

- 如果您未设置该参数，则报警黑名单策略永久有效。

- 如果您已设置该参数，则黑名单策略仅在指定的时间范围内有效。该参数有以下两种格式示例：
    - `03:00-04:59`：本地时间凌晨3点到凌5点（不包含05:00）报警黑名单策略有效。
    - `03:00-04:59 UTC+0700`：东7区时间凌晨3点到凌晨5点（不包含05:00）报警黑名单策略有效。',
            'type' => 'string',
            'required' => false,
            'example' => '03:00-04:59',
          ),
        ),
        8 => 
        array (
          'name' => 'Instances',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警黑名单策略中指定云服务的实例列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警黑名单策略中指定云服务的实例列表。

N的取值范围：1~100。',
              'type' => 'string',
              'required' => false,
              'example' => '{"instanceId":"i-bp1ew0zfkjblsuwx****"}',
            ),
            'required' => true,
            'maxItems' => 100,
          ),
        ),
        9 => 
        array (
          'name' => 'Metrics',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '实例中的监控指标。

- 如果您未设置该参数，则报警黑名单策略应用于指定云服务下的所有监控指标。

- 如果您已设置该参数，则黑名单策略仅应用于当前监控指标。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'MetricName' => 
                array (
                  'description' => '监控指标名称。

N的取值范围：1~10。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'disk_utilization',
                ),
                'Resource' => 
                array (
                  'description' => '实例的扩展维度信息。例如：`{"device":"C:"}`，表示对云服务器ECS实例下的所有C盘应用黑名单策略。

N的取值范围：1~10。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '{"device":"C:"}',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The request has failed due to a temporary failure of the server.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5C637FA3-3959-3352-8BE6-78CE2ED2D33D',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Id' => 
              array (
                'description' => '报警黑名单策略的ID。',
                'type' => 'string',
                'example' => '93514c96-ceb8-47d8-8ee3-93b6d98b****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The request has failed due to a temporary failure of the server.\\",\\n  \\"RequestId\\": \\"5C637FA3-3959-3352-8BE6-78CE2ED2D33D\\",\\n  \\"Success\\": true,\\n  \\"Id\\": \\"93514c96-ceb8-47d8-8ee3-93b6d98b****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateMetricRuleBlackListResponse>\\n    <RequestId>5C637FA3-3959-3352-8BE6-78CE2ED2D33D</RequestId>\\n    <Id>93514c96-ceb8-47d8-8ee3-93b6d98b****</Id>\\n    <Success>true</Success>\\n</CreateMetricRuleBlackListResponse>","errorExample":""}]',
      'title' => '创建报警黑名单策略',
      'summary' => '调用CreateMetricRuleBlackList接口创建报警黑名单策略。',
      'description' => '### 背景信息

- 报警黑名单是指云监控根据报警黑名单策略对报警通知进行屏蔽。当阈值报警规则中某个云服务的某个实例中的某个指标无需发送报警通知时，您可以为其设置报警黑名单策略，对报警通知进行屏蔽。

- 目前云监控仅支持为阈值指标设置报警黑名单策略，不支持系统事件。关于云监控支持的云服务和阈值指标，请参见[云服务监控项](~~163515~~)。



',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'ModifyMetricRuleBlackList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略的ID。

关于如何获取报警黑名单策略的ID，请参见[DescribeMetricRuleBlackList](~~457257~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '93514c96-ceb8-47d8-8ee3-93b6d98b****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略的名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'Blacklist-02',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的数据命名空间。

关于云产品的命名空间，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        3 => 
        array (
          'name' => 'Category',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品分类。例如：Redis有`kvstore_standard`（标准版）、`kvstore_sharding`（集群版）和`kvstore_splitrw`（读写分离版）等。',
            'type' => 'string',
            'required' => true,
            'example' => 'ecs',
          ),
        ),
        4 => 
        array (
          'name' => 'ScopeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略的生效范围。取值：

- USER：报警黑名单策略仅在当前阿里云账号中生效。

- GROUP（默认值）：报警黑名单策略在指定应用分组中生效，您需要选择指定应用分组。
  关于如何获取应用分组ID，请参见[DescribeMonitorGroups](~~115032~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'USER',
          ),
        ),
        5 => 
        array (
          'name' => 'ScopeValue',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID列表。

> 仅当`ScopeType`为`GROUP`时，需要设置该参数。',
            'type' => 'string',
            'required' => false,
            'example' => '["67****","78****"]',
          ),
        ),
        6 => 
        array (
          'name' => 'EnableStartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略生效的开始时间戳。

单位：毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1640237400000',
          ),
        ),
        7 => 
        array (
          'name' => 'EnableEndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略生效的结束时间戳。

单位：毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1640608200000',
          ),
        ),
        8 => 
        array (
          'name' => 'EffectiveTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略的生效时间范围。是否设置该参数的含义如下：

- 如果您未设置该参数，则报警黑名单策略永久有效。

- 如果您已设置该参数，则黑名单策略仅在指定的时间范围内有效。该参数有以下两种格式示例：
    - `03:00-04:59`：本地时间凌晨3点到凌晨5点（不包含05:00）报警黑名单策略有效。
    - `03:00-04:59 UTC+0700`：东7区时间凌晨3点到凌晨5点（不包含05:00）报警黑名单策略有效。',
            'type' => 'string',
            'required' => false,
            'example' => '03:00-04:59',
          ),
        ),
        9 => 
        array (
          'name' => 'Instances',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警黑名单策略中指定云服务的实例列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警黑名单策略中指定云服务的实例列表。

N的取值范围：1~100。',
              'type' => 'string',
              'required' => false,
              'example' => '{"instancceId":"i-bp1ew0zfkjblsuwx****"}',
            ),
            'required' => true,
            'maxItems' => 100,
          ),
        ),
        10 => 
        array (
          'name' => 'Metrics',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '实例中的监控指标。

- 如果您未设置该参数，则报警黑名单策略应用于指定云服务下的所有监控指标。

- 如果您已设置该参数，则黑名单策略仅应用于当前监控指标。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'MetricName' => 
                array (
                  'description' => '监控指标名称。

N的取值范围：1~10。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'disk_utilization',
                ),
                'Resource' => 
                array (
                  'description' => '实例的扩展维度信息。例如：`{"device":"C:"}`，表示对云服务器ECS实例下的所有C盘应用黑名单策略。

N的取值范围：1~10。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '{"device":"C:"}',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '008773AE-1D86-3231-90F9-1AF7F808F9CE',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Count' => 
              array (
                'description' => '成功修改报警黑名单策略的数量。',
                'type' => 'string',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"008773AE-1D86-3231-90F9-1AF7F808F9CE\\",\\n  \\"Success\\": true,\\n  \\"Count\\": \\"1\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyMetricRuleBlackListResponse>\\n    <RequestId>008773AE-1D86-3231-90F9-1AF7F808F9CE</RequestId>\\n    <Success>true</Success>\\n    <Count>1</Count>\\n</ModifyMetricRuleBlackListResponse>","errorExample":""}]',
      'title' => '修改报警黑名单策略',
      'summary' => '调用ModifyMetricRuleBlackList接口修改报警黑名单策略。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'DeleteMetricRuleBlackList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略的ID。多个ID之间以半角逗号（,）分隔，且不能超过50个。

关于如何获取报警黑名单策略的ID，请参见[DescribeMetricRuleBlackList](~~457257~~)。

> 该参数也支持JSON Array格式，例如：`["a9ad2ac2-3ed9-11ed-b878-0242ac12****","5cb8a9a4-198f-4651-a353-f8b28788****"]`。',
            'type' => 'string',
            'required' => true,
            'example' => 'a9ad2ac2-3ed9-11ed-b878-0242ac12****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B88D233C-A004-3AB8-AD9C-30CBDD4440C5',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Count' => 
              array (
                'description' => '成功删除的报警黑名单策略的数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"B88D233C-A004-3AB8-AD9C-30CBDD4440C5\\",\\n  \\"Success\\": true,\\n  \\"Count\\": 1\\n}","errorExample":""},{"type":"xml","example":"<DeleteMetricRuleBlackListResponse>\\n    <RequestId>B88D233C-A004-3AB8-AD9C-30CBDD4440C5</RequestId>\\n    <Success>true</Success>\\n    <Count>1</Count>\\n</DeleteMetricRuleBlackListResponse>","errorExample":""}]',
      'title' => '删除报警黑名单策略',
      'summary' => '调用DeleteMetricRuleBlackList接口删除报警黑名单策略。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'DescribeMetricRuleBlackList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务的数据命名空间。

关于云服务的命名空间，请参见[云服务监控项](~~163515~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页码。

默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的记录条数。

默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '100',
          ),
        ),
        3 => 
        array (
          'name' => 'Order',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询结果按时间的排序方式。取值：

- DESC（默认值）：降序。

- ASC：升序。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => 'DESC',
          ),
        ),
        4 => 
        array (
          'name' => 'Category',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务分类。例如：Redis有`kvstore_standard`（标准版）、`kvstore_sharding`（集群版）和`kvstore_splitrw`（读写分离版）等。',
            'type' => 'string',
            'required' => false,
            'example' => 'ecs',
          ),
        ),
        5 => 
        array (
          'name' => 'Ids',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警黑名单策略的ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警黑名单策略的ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'a9ad2ac2-3ed9-11ed-b878-0242ac12****',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        6 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略名称。

该参数支持模糊查询。',
            'type' => 'string',
            'required' => false,
            'example' => 'Blacklist-01',
          ),
        ),
        7 => 
        array (
          'name' => 'ScopeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略的生效范围。取值：

- USER：报警黑名单策略仅在当前阿里云账号中生效。

- GROUP：报警黑名单策略在指定应用分组中生效。

',
            'type' => 'string',
            'required' => false,
            'example' => 'USER',
          ),
        ),
        8 => 
        array (
          'name' => 'IsEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略的启用状态。取值：

- true：启用。
- false：禁用。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        9 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'allowEmptyValue' => false,
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '报警黑名单策略中的实例ID列表。

N的取值范围：0~10。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警黑名单策略中的实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'i-2ze2d6j5uhg20x47****',
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D63E76CB-29AA-5B9F-88CE-400A6F28D428',
              ),
              'Total' => 
              array (
                'description' => '报警黑名单策略的总条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DescribeMetricRuleBlackList' => 
              array (
                'description' => '报警黑名单策略列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '报警黑名单策略列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'EffectiveTime' => 
                    array (
                      'description' => '报警黑名单策略的生效时间范围。',
                      'type' => 'string',
                      'example' => '00:00-23:59',
                    ),
                    'UpdateTime' => 
                    array (
                      'description' => '修改报警黑名单策略的时间戳。

单位：毫秒。',
                      'type' => 'string',
                      'example' => '1665718373000',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建报警黑名单策略的时间戳。

单位：毫秒。',
                      'type' => 'string',
                      'example' => '1665714561000',
                    ),
                    'ScopeType' => 
                    array (
                      'description' => '报警黑名单策略的生效范围。取值：

- USER：报警黑名单策略仅在当前阿里云账号中生效。

- GROUP：报警黑名单策略在指定应用分组中生效。',
                      'type' => 'string',
                      'example' => 'USER',
                    ),
                    'IsEnable' => 
                    array (
                      'description' => '报警黑名单策略的状态。取值：

- true：启用。

- false：禁用。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'Namespace' => 
                    array (
                      'description' => '云服务的数据命名空间。',
                      'type' => 'string',
                      'example' => 'acs_ecs_dashboard',
                    ),
                    'Category' => 
                    array (
                      'description' => '云服务分类。例如：Redis有`kvstore_standard`（标准版）、`kvstore_sharding`（集群版）和`kvstore_splitrw`（读写分离版）等。',
                      'type' => 'string',
                      'example' => 'ecs',
                    ),
                    'EnableEndTime' => 
                    array (
                      'description' => '报警黑名单策略的开始时间戳。

单位：毫秒。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1640608200000',
                    ),
                    'Name' => 
                    array (
                      'description' => '报警黑名单策略的名称。',
                      'type' => 'string',
                      'example' => 'Blacklist-01',
                    ),
                    'EnableStartTime' => 
                    array (
                      'description' => '报警黑名单策略的结束时间戳。

单位：毫秒。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1640237400000',
                    ),
                    'Id' => 
                    array (
                      'description' => '报警黑名单策略的ID。',
                      'type' => 'string',
                      'example' => '93514c96-ceb8-47d8-8ee3-93b6d98b****',
                    ),
                    'Metrics' => 
                    array (
                      'description' => '实例中的监控指标。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '实例中的监控指标。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Resource' => 
                          array (
                            'description' => '实例的扩展维度信息。例如：`{"device":"C:"}`，表示对云服务器ECS实例下的所有C盘应用黑名单策略。',
                            'type' => 'string',
                            'example' => '[{"device":"C:"}]',
                          ),
                          'MetricName' => 
                          array (
                            'description' => '监控指标名称。
',
                            'type' => 'string',
                            'example' => 'disk_utilization',
                          ),
                        ),
                      ),
                    ),
                    'Instances' => 
                    array (
                      'description' => '报警黑名单策略中指定云服务的实例列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '报警黑名单策略中指定云服务的实例列表。',
                        'type' => 'string',
                        'example' => 'i-rj99xc6cptkk64ml****',
                      ),
                    ),
                    'ScopeValue' => 
                    array (
                      'description' => '应用分组ID列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '应用分组ID列表。格式为JSON Array。

> 仅当`ScopeType`为`GROUP`时，显示该参数。',
                        'type' => 'string',
                        'example' => '["67****","78****"]',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"D63E76CB-29AA-5B9F-88CE-400A6F28D428\\",\\n  \\"Total\\": 1,\\n  \\"Success\\": true,\\n  \\"DescribeMetricRuleBlackList\\": [\\n    {\\n      \\"EffectiveTime\\": \\"00:00-23:59\\",\\n      \\"UpdateTime\\": \\"1665718373000\\",\\n      \\"CreateTime\\": \\"1665714561000\\",\\n      \\"ScopeType\\": \\"USER\\",\\n      \\"IsEnable\\": true,\\n      \\"Namespace\\": \\"acs_ecs_dashboard\\",\\n      \\"Category\\": \\"ecs\\",\\n      \\"EnableEndTime\\": 1640608200000,\\n      \\"Name\\": \\"Blacklist-01\\",\\n      \\"EnableStartTime\\": 1640237400000,\\n      \\"Id\\": \\"93514c96-ceb8-47d8-8ee3-93b6d98b****\\",\\n      \\"Metrics\\": [\\n        {\\n          \\"Resource\\": \\"[{\\\\\\"device\\\\\\":\\\\\\"C:\\\\\\"}]\\",\\n          \\"MetricName\\": \\"disk_utilization\\"\\n        }\\n      ],\\n      \\"Instances\\": [\\n        \\"i-rj99xc6cptkk64ml****\\"\\n      ],\\n      \\"ScopeValue\\": [\\n        \\"[\\\\\\"67****\\\\\\",\\\\\\"78****\\\\\\"]\\"\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeMetricRuleBlackListResponse>\\n    <RequestId>D63E76CB-29AA-5B9F-88CE-400A6F28D428</RequestId>\\n    <Total>1</Total>\\n    <DescribeMetricRuleBlackList>\\n        <ScopeType>USER</ScopeType>\\n        <Instances>\\n            <instancceId>i-rj99xc6cptkk64ml****</instancceId>\\n        </Instances>\\n        <IsEnable>true</IsEnable>\\n        <Metrics>\\n            <MetricName>disk_utilization</MetricName>\\n            <Resource/>\\n        </Metrics>\\n        <Category>ecs</Category>\\n        <CreateTime>1635714561000</CreateTime>\\n        <UpdateTime>1635718373000</UpdateTime>\\n        <Id>93514c96-ceb8-47d8-8ee3-93b6d98b****</Id>\\n        <Namespace>acs_ecs_dashboard</Namespace>\\n        <Name>Blacklist-01</Name>\\n    </DescribeMetricRuleBlackList>\\n    <Success>true</Success>\\n</DescribeMetricRuleBlackListResponse>","errorExample":""}]',
      'title' => '查询报警黑名单策略列表',
      'summary' => '调用DescribeMetricRuleBlackList接口查询报警黑名单策略列表。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'EnableMetricRuleBlackList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警黑名单策略的ID。多个ID之间以半角逗号（,）分隔，且不能超过50个。

关于如何获取报警黑名单策略的ID，请参见[DescribeMetricRuleBlackList](~~457257~~)。

> 该参数也支持JSON Array格式，例如：`["a9ad2ac2-3ed9-11ed-b878-0242ac12****","5cb8a9a4-198f-4651-a353-f8b28788****"]`。',
            'type' => 'string',
            'required' => true,
            'example' => 'a9ad2ac2-3ed9-11ed-b878-0242ac12****',
          ),
        ),
        1 => 
        array (
          'name' => 'IsEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '启用或禁用报警黑名单策略。取值：

- true：启用。

- false（默认值）：禁用。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

>200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified resource is not found.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '94869866-1621-3652-BBC9-72A47B2AC2F5',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Count' => 
              array (
                'description' => '成功启用或禁用的报警黑名单策略的数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessForbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceConflict',
            'errorMessage' => 'Concurrent modification of resources.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceExist',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The specified resource is not found.\\",\\n  \\"RequestId\\": \\"94869866-1621-3652-BBC9-72A47B2AC2F5\\",\\n  \\"Success\\": true,\\n  \\"Count\\": 1\\n}","errorExample":""},{"type":"xml","example":"<EnableMetricRuleBlackListResponse>\\n    <RequestId>94869866-1621-3652-BBC9-72A47B2AC2F5</RequestId>\\n    <Success>true</Success>\\n    <Count>1</Count>\\n</EnableMetricRuleBlackListResponse>","errorExample":""}]',
      'title' => '启用或禁用报警黑名单策略',
      'summary' => '调用EnableMetricRuleBlackList接口启用或禁用报警黑名单策略。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'DeleteContactGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ContactGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系组名称。',
            'type' => 'string',
            'required' => true,
            'example' => '我的报警组',
            'docRequired' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F722BE59-2400-4A64-9C1A-AD886AED9A69',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'Permission denied',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ContactNotExists',
            'errorMessage' => 'ContactGroupName Not Exists',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"F722BE59-2400-4A64-9C1A-AD886AED9A69\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteContactGroupResponse>\\n    <RequestId>F722BE59-2400-4A64-9C1A-AD886AED9A69</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</DeleteContactGroupResponse>","errorExample":""}]',
      'title' => '删除报警联系人组',
      'summary' => '调用DeleteContactGroup接口删除报警联系人组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteContact' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ContactName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系人姓名。',
            'type' => 'string',
            'required' => true,
            'example' => '张三',
            'docRequired' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '50D4CFE1-01E5-4543-939C-18BC01E3EC1C',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。true表示成功，false表示失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'Permission denied',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ContactNotExists',
            'errorMessage' => 'ContactName does not exist',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"50D4CFE1-01E5-4543-939C-18BC01E3EC1C\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteContactResponse>\\n    <RequestId>50D4CFE1-01E5-4543-939C-18BC01E3EC1C</RequestId>\\n    <Success>true</Success>\\n    <Code>200</Code>\\n</DeleteContactResponse>","errorExample":""}]',
      'title' => '删除报警联系人',
      'summary' => '调用DeleteContact接口删除报警联系人。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeContactListByContactGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ContactGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系组名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'CloudMonitor',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The group is not exists.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '06D5ECC2-B9BE-42A4-8FA3-1A610FB08B83',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Contacts' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Contact' => 
                  array (
                    'description' => '报警联系人。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '报警联系人。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'UpdateTime' => 
                        array (
                          'description' => '更新报警联系人的时间戳。

单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1552323252000',
                        ),
                        'Name' => 
                        array (
                          'description' => '报警联系人的姓名。',
                          'type' => 'string',
                          'example' => 'Alice',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建报警联系人的时间戳。

单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1552314252000',
                        ),
                        'Desc' => 
                        array (
                          'description' => '报警联系组的描述。',
                          'type' => 'string',
                          'example' => 'ECS',
                        ),
                        'Channels' => 
                        array (
                          'description' => '报警通道。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Mail' => 
                            array (
                              'description' => '报警联系人的Email地址。',
                              'type' => 'string',
                              'example' => 'alice@example.com',
                            ),
                            'AliIM' => 
                            array (
                              'description' => '报警联系人的旺旺名称。
> 该参数仅适用于中国站。',
                              'type' => 'string',
                              'example' => 'Alice',
                            ),
                            'DingWebHook' => 
                            array (
                              'description' => '报警联系人的钉钉机器人地址。',
                              'type' => 'string',
                              'example' => 'https://oapi.dingtalk.com/robot/send?access_token=9bf44f8189597d07dfdd7a123455ffc112****',
                            ),
                            'SMS' => 
                            array (
                              'description' => '报警联系人的手机号码。
> 该参数仅适用于中国站。',
                              'type' => 'string',
                              'example' => '1333333****',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The group is not exists.\\",\\n  \\"RequestId\\": \\"06D5ECC2-B9BE-42A4-8FA3-1A610FB08B83\\",\\n  \\"Success\\": true,\\n  \\"Contacts\\": {\\n    \\"Contact\\": [\\n      {\\n        \\"UpdateTime\\": 1552323252000,\\n        \\"Name\\": \\"Alice\\",\\n        \\"CreateTime\\": 1552314252000,\\n        \\"Desc\\": \\"ECS\\",\\n        \\"Channels\\": {\\n          \\"Mail\\": \\"alice@example.com\\",\\n          \\"AliIM\\": \\"Alice\\",\\n          \\"DingWebHook\\": \\"https://oapi.dingtalk.com/robot/send?access_token=9bf44f8189597d07dfdd7a123455ffc112****\\",\\n          \\"SMS\\": \\"1333333****\\"\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeContactListByContactGroupResponse>\\r\\n\\t<RequestId>96B41DE5-6DC9-4FAF-A790-3D4AA17C1F09</RequestId>\\r\\n\\t<Contacts>\\r\\n\\t\\t<Contact>\\r\\n\\t\\t\\t<Desc></Desc>\\r\\n\\t\\t\\t<CreateTime>1604024233000</CreateTime>\\r\\n\\t\\t\\t<UpdateTime>1604024233000</UpdateTime>\\r\\n\\t\\t\\t<Channels>\\r\\n\\t\\t\\t\\t<SMS></SMS>\\r\\n\\t\\t\\t</Channels>\\r\\n\\t\\t\\t<Name>Alice</Name>\\r\\n\\t\\t</Contact>\\r\\n\\t</Contacts>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeContactListByContactGroupResponse>","errorExample":""}]',
      'title' => '查询报警联系组中的报警联系人列表',
      'summary' => '调用DescribeContactListByContactGroup接口查询报警联系组中的报警联系人列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeContactGroupList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示记录条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '100',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '916EE694-03C2-47B6-85EE-5054E3C168D3',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '22',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ContactGroups' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ContactGroup' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '报警联系组列表。',
                      'type' => 'string',
                      'example' => '{ "ContactGroup": [ "ECS_Group", "Jim" ] }',
                    ),
                  ),
                ),
              ),
              'ContactGroupList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ContactGroup' => 
                  array (
                    'description' => ' 报警联系组详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Describe' => 
                        array (
                          'description' => '报警联系组描述信息。',
                          'type' => 'string',
                          'example' => 'PE报警组',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '修改时间。Unix时间戳：从1970年1月1日开始所经过的毫秒数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1589447759000',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间。Unix时间戳：从1970年1月1日开始所经过的毫秒数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1507070598000',
                        ),
                        'EnabledWeeklyReport' => 
                        array (
                          'description' => '是否支持周报订阅。取值：

- true：支持。

- false：不支持。

> 目前仅ECS实例数量大于5的阿里云账号支持周报订阅。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Name' => 
                        array (
                          'description' => '报警联系组的名称。',
                          'type' => 'string',
                          'example' => 'Contact1',
                        ),
                        'EnableSubscribed' => 
                        array (
                          'description' => '是否开启周报订阅。

- true：开启。

- false：关闭。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Contacts' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Contact' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '报警联系人列表。',
                                'type' => 'string',
                                'example' => 'Jimmy',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"916EE694-03C2-47B6-85EE-5054E3C168D3\\",\\n  \\"Total\\": 22,\\n  \\"Success\\": true,\\n  \\"ContactGroups\\": {\\n    \\"ContactGroup\\": [\\n      \\"{ \\\\\\"ContactGroup\\\\\\": [ \\\\\\"ECS_Group\\\\\\", \\\\\\"Jim\\\\\\" ] }\\"\\n    ]\\n  },\\n  \\"ContactGroupList\\": {\\n    \\"ContactGroup\\": [\\n      {\\n        \\"Describe\\": \\"PE报警组\\",\\n        \\"UpdateTime\\": 1589447759000,\\n        \\"CreateTime\\": 1507070598000,\\n        \\"EnabledWeeklyReport\\": true,\\n        \\"Name\\": \\"Contact1\\",\\n        \\"EnableSubscribed\\": true,\\n        \\"Contacts\\": {\\n          \\"Contact\\": [\\n            \\"Jimmy\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeContactGroupListResponse>\\r\\n\\t\\t<ContactGroupList>\\r\\n\\t\\t\\t<ContactGroup>\\r\\n\\t\\t\\t\\t<Describe></Describe>\\r\\n\\t\\t\\t\\t<Contacts>\\r\\n\\t\\t\\t\\t\\t<Contact>Jimmy</Contact>\\r\\n\\t\\t\\t\\t</Contacts>\\r\\n\\t\\t\\t\\t<CreateTime>1507070598000</CreateTime>\\r\\n\\t\\t\\t\\t<UpdateTime>1589447759000</UpdateTime>\\r\\n\\t\\t\\t\\t<EnabledWeeklyReport>true</EnabledWeeklyReport>\\r\\n\\t\\t\\t\\t<EnableSubscribed>false</EnableSubscribed>\\r\\n\\t\\t\\t\\t<Name>Contact1</Name>\\r\\n\\t\\t\\t</ContactGroup>\\r\\n\\t\\t</ContactGroupList>\\r\\n\\t\\t<ContactGroups>\\r\\n\\t\\t\\t<ContactGroup>MyContactGroup1</ContactGroup>\\r\\n\\t\\t</ContactGroups>\\r\\n\\t\\t<RequestId>38516F54-0364-479E-AFCB-E856A4FFB67E</RequestId>\\r\\n\\t\\t<Total>1</Total>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Success>true</Success>\\r\\n</DescribeContactGroupListResponse>\\r\\n","errorExample":""}]',
      'title' => '查询报警联系组列表',
      'summary' => '调用DescribeContactGroupList接口查询报警联系组列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeContactList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的记录条数。

默认值：100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '100',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页码。

默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'ContactName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系人姓名。',
            'type' => 'string',
            'required' => false,
            'example' => 'Alice',
          ),
        ),
        3 => 
        array (
          'name' => 'ChanelType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警类型。取值：

<props="china">- SMS：短信。</props>

<props="china">- AliIM：阿里旺旺。</props>

- Mail：邮件。

- DingWebHook：钉钉机器人。


',
            'type' => 'string',
            'required' => false,
            'example' => 'Mail',
          ),
        ),
        4 => 
        array (
          'name' => 'ChanelValue',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警类型的值。

> 仅当`ChanelType`设置为`Mail`时，需要设置该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'Alice@example.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '06D5ECC2-B9BE-42A4-8FA3-1A610FB08B83',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '15',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Contacts' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Contact' => 
                  array (
                    'description' => '报警联系方式。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'UpdateTime' => 
                        array (
                          'description' => '报警更新时间戳。

单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1552356159000',
                        ),
                        'Name' => 
                        array (
                          'description' => '报警联系人姓名。',
                          'type' => 'string',
                          'example' => 'Alice',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '报警创建时间戳。

单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1552356159000',
                        ),
                        'Lang' => 
                        array (
                          'description' => '报警的语言类型。取值：
- zh-cn：简体中文。
- en：英文。',
                          'type' => 'string',
                          'example' => 'zh-cn',
                        ),
                        'Desc' => 
                        array (
                          'description' => '描述信息。',
                          'type' => 'string',
                          'example' => 'ECS联系人',
                        ),
                        'ContactGroups' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ContactGroup' => 
                            array (
                              'description' => '无。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '报警联系人组列表。',
                                'type' => 'string',
                                'example' => '{ "ContactGroup": [ 	"ECS_Group", "Jim" ] }',
                              ),
                            ),
                          ),
                        ),
                        'Channels' => 
                        array (
                          'description' => '报警通知方式。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Mail' => 
                            array (
                              'description' => '邮件地址。',
                              'type' => 'string',
                              'example' => 'Alice@example.com',
                            ),
                            'AliIM' => 
                            array (
                              'description' => '旺旺名称。',
                              'type' => 'string',
                              'example' => 'Alice',
                            ),
                            'DingWebHook' => 
                            array (
                              'description' => '钉钉机器人地址。',
                              'type' => 'string',
                              'example' => 'https://oapi.dingtalk.com/robot/send?access_token=9bf44f8189597d07dfdd7a123455ffc112****',
                            ),
                            'SMS' => 
                            array (
                              'description' => '手机号码。',
                              'type' => 'string',
                              'example' => '1333333****',
                            ),
                          ),
                        ),
                        'ChannelsState' => 
                        array (
                          'description' => '报警通道的状态。

<props="china">因为短信、电话号码和Email需要激活以后才能使用，所以当添加或修改报警通道时，如果处于未激活状态，则为PENDING；如果处于激活状态，则为OK。</props>

<props="intl">因为Email需要激活以后才能使用，所以当添加或修改报警通道时，如果处于未激活状态，则为PENDING；如果处于激活状态，则为OK。</props>

<props="partner">因为Email需要激活以后才能使用，所以当添加或修改报警通道时，如果处于未激活状态，则为PENDING；如果处于激活状态，则为OK。</props>

',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Mail' => 
                            array (
                              'description' => 'Email的状态。取值：
- PENDING：对应报警通道未激活，激活后才能使用。
- OK：对应报警通道正常，可正常报警。',
                              'type' => 'string',
                              'example' => 'PENDING',
                            ),
                            'AliIM' => 
                            array (
                              'description' => '旺旺名称的状态正常。

目前取值只支持：OK。OK表示旺旺名状态正常，对应的报警通道正常，可正常报警。

> 该参数仅适用于中国站。',
                              'type' => 'string',
                              'example' => 'OK',
                            ),
                            'DingWebHook' => 
                            array (
                              'description' => '钉钉机器人的状态正常。

目前取值只支持：OK。OK表示钉钉机器人状态正常，对应的报警通道正常，可正常报警。',
                              'type' => 'string',
                              'example' => 'OK',
                            ),
                            'SMS' => 
                            array (
                              'description' => '短信的状态。取值：
- PENDING：对应报警通道未激活，激活后才能使用。
- OK：对应报警通道正常，可正常报警。

> 该参数仅适用于中国站。',
                              'type' => 'string',
                              'example' => 'OK',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"06D5ECC2-B9BE-42A4-8FA3-1A610FB08B83\\",\\n  \\"Total\\": 15,\\n  \\"Success\\": true,\\n  \\"Contacts\\": {\\n    \\"Contact\\": [\\n      {\\n        \\"UpdateTime\\": 1552356159000,\\n        \\"Name\\": \\"Alice\\",\\n        \\"CreateTime\\": 1552356159000,\\n        \\"Lang\\": \\"zh-cn\\",\\n        \\"Desc\\": \\"ECS联系人\\",\\n        \\"ContactGroups\\": {\\n          \\"ContactGroup\\": [\\n            \\"{ \\\\\\"ContactGroup\\\\\\": [ \\\\t\\\\\\"ECS_Group\\\\\\", \\\\\\"Jim\\\\\\" ] }\\"\\n          ]\\n        },\\n        \\"Channels\\": {\\n          \\"Mail\\": \\"Alice@example.com\\",\\n          \\"AliIM\\": \\"Alice\\",\\n          \\"DingWebHook\\": \\"https://oapi.dingtalk.com/robot/send?access_token=9bf44f8189597d07dfdd7a123455ffc112****\\",\\n          \\"SMS\\": \\"1333333****\\"\\n        },\\n        \\"ChannelsState\\": {\\n          \\"Mail\\": \\"PENDING\\",\\n          \\"AliIM\\": \\"OK\\",\\n          \\"DingWebHook\\": \\"OK\\",\\n          \\"SMS\\": \\"OK\\"\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeContactListResponse>\\r\\n\\t\\t<RequestId>A1267F27-942F-40EE-9254-57FE16E3C9AB</RequestId>\\r\\n\\t\\t<Contacts>\\r\\n\\t\\t\\t<Contact>\\r\\n\\t\\t\\t\\t<Desc>Contact Desc</Desc>\\r\\n\\t\\t\\t\\t<ContactGroups>\\r\\n\\t\\t\\t\\t\\t<ContactGroup>ECS_Group</ContactGroup>\\r\\n\\t\\t\\t\\t\\t<ContactGroup>Jim</ContactGroup>\\r\\n\\t\\t\\t\\t</ContactGroups>\\r\\n\\t\\t\\t\\t<ChannelsState>\\r\\n\\t\\t\\t\\t\\t<SMS>PENDING</SMS>\\r\\n\\t\\t\\t\\t\\t<Mail>OK</Mail>\\r\\n\\t\\t\\t\\t</ChannelsState>\\r\\n\\t\\t\\t\\t<CreateTime>1583307692000</CreateTime>\\r\\n\\t\\t\\t\\t<UpdateTime>1589441072000</UpdateTime>\\r\\n\\t\\t\\t\\t<Channels>\\r\\n\\t\\t\\t\\t\\t<Mail>alice@example.com</Mail>\\r\\n\\t\\t\\t\\t\\t<SMS>155*******</SMS>\\r\\n\\t\\t\\t\\t</Channels>\\r\\n\\t\\t\\t\\t<Name>Alice</Name>\\r\\n\\t\\t\\t\\t<Lang>zh-cn</Lang>\\r\\n\\t\\t\\t</Contact>\\r\\n\\t\\t</Contacts>\\r\\n\\t\\t<Total>25</Total>\\r\\n\\t\\t<Code>200</Code>\\r\\n\\t\\t<Success>true</Success>\\r\\n</DescribeContactListResponse>","errorExample":""}]',
      'title' => '查询报警联系人列表',
      'summary' => '调用DescribeContactList接口查询报警联系人列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutContact' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ContactName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系人姓名。',
            'type' => 'string',
            'required' => true,
            'example' => 'Alice',
            'docRequired' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'Describe',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系人描述详情。',
            'type' => 'string',
            'required' => true,
            'example' => 'ECS_Instance',
            'docRequired' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'Channels.SMS',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '手机号码。手机号码会收到一个激活链接， 激活之后您才会被加入到联系人中。

<props="china">手机号码、邮箱、钉钉机器人和旺旺最少添加一种联系方式。</props>
<props="intl">邮箱和钉钉机器人最少添加一种联系方式。</props>
<props="partner">邮箱和钉钉机器人最少添加一种联系方式。</props>
',
            'type' => 'string',
            'required' => false,
            'example' => '1333333****',
          ),
        ),
        3 => 
        array (
          'name' => 'Channels.Mail',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Email地址。Email会收到一个激活链接， 激活之后您才会被加入到联系人中。

<props="china">手机号码、邮箱、钉钉机器人和旺旺最少添加一种联系方式。</props>
<props="intl">邮箱和钉钉机器人最少添加一种联系方式。</props>
<props="partner">邮箱和钉钉机器人最少添加一种联系方式。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'test@aliyun.com',
          ),
        ),
        4 => 
        array (
          'name' => 'Channels.AliIM',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '旺旺联系人。

<props="china">手机号码、邮箱、钉钉机器人和旺旺最少添加一种联系方式。</props>
<props="intl">邮箱和钉钉机器人最少添加一种联系方式。</props>
<props="partner">邮箱和钉钉机器人最少添加一种联系方式。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'Jim',
          ),
        ),
        5 => 
        array (
          'name' => 'Channels.DingWebHook',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '钉钉机器人。

<props="china">手机号码、邮箱、钉钉机器人和旺旺最少添加一种联系方式。</props>
<props="intl">邮箱和钉钉机器人最少添加一种联系方式。</props>
<props="partner">邮箱和钉钉机器人最少添加一种联系方式。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'https://oapi.dingtalk.com/robot/send?access_token=7d49515e8ebf21106a80a9cc4bb3d247771305d52fb15d6201234565****',
          ),
        ),
        6 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警的语言类型。取值：
- zh-cn：简体中文。
- en：英文。

> 如果不设置该参数，则自动按照账号归属地域自动识别。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-cn',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The Request is not authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '181C406E-9DE4-484C-9C61-37AE9A1A12EE',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'Permission denied',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"The Request is not authorization.\\",\\n  \\"RequestId\\": \\"181C406E-9DE4-484C-9C61-37AE9A1A12EE\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PutContactResponse>\\n    <Code>200</Code>\\n    <RequestId>181C406E-9DE4-484C-9C61-37AE9A1A12EE</RequestId>\\n    <Success>true</Success>\\n</PutContactResponse>","errorExample":""}]',
      'title' => '创建或修改报警联系人信息',
      'summary' => '调用PutContact接口创建或修改报警联系人信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PutContactGroup' => 
    array (
      'summary' => '调用PutContactGroup接口创建或修改报警联系组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ContactGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系组的名称。

关于如何获取报警联系组的名称，请参见[DescribeContactGroupList](~~114922~~)。
',
            'type' => 'string',
            'required' => true,
            'example' => 'ECS_Group',
          ),
        ),
        1 => 
        array (
          'name' => 'Describe',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警联系组的描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS_Alert_Group',
          ),
        ),
        2 => 
        array (
          'name' => 'EnableSubscribed',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启周报订阅功能。取值：

- true：是。

- false：否。

> 目前仅当ECS实例等于或大于5时，才能开启周报订阅功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'ContactNames',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警联系人的名称。N的取值范围：1~100。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'Alice',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Illegal parameters.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B4E30DB6-F069-5D0B-A589-2A89F7D62A57',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterValue',
            'errorMessage' => 'Illegal parameters.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'Permission denied',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ContactGroup.NotExists',
            'errorMessage' => 'ContactGroup not exists',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Illegal parameters.\\",\\n  \\"RequestId\\": \\"B4E30DB6-F069-5D0B-A589-2A89F7D62A57\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PutContactGroupResponse>\\r\\n\\t<RequestId>B4E30DB6-F069-5D0B-A589-2A89F7D62A57</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n\\t<Success>true</Success>\\r\\n</PutContactGroupResponse>\\t","errorExample":""}]',
      'title' => '创建或修改报警联系组',
      'description' => '本文将提供一个示例，创建报警联系组`ECS_Group`。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateHybridMonitorNamespace' => 
    array (
      'summary' => '调用CreateHybridMonitorNamespace接口创建指标仓库。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指标仓库名称。

格式：由小写字母、数字和短划线（-）组成。',
            'type' => 'string',
            'required' => true,
            'example' => 'aliyun',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指标仓库描述。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '阿里云产品指标仓库。',
          ),
        ),
        2 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据存储时长。取值：

- cms.s1.large：数据存储时长15天。
- cms.s1.xlarge：数据存储时长32天。
- cms.s1.2xlarge：数据存储时长63天。
- cms.s1.3xlarge（默认值）：数据存储时长93天。
- cms.s1.6xlarge：数据存储时长185天。
- cms.s1.12xlarge：数据存储时长376天。

不同存储时长规格的价格，请参见[监控大盘](~~223532~~)中的**价格表**。

',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'enumValueTitles' => 
            array (
              'cms.s1.large' => 'cms.s1.large',
              'cms.s1.2xlarge' => 'cms.s1.2xlarge',
              'cms.s1.xlarge' => 'cms.s1.xlarge',
              'cms.s1.6xlarge' => 'cms.s1.6xlarge',
              'cms.s1.3xlarge' => 'cms.s1.3xlarge',
            ),
            'example' => 'cms.s1.3xlarge',
            'enum' => 
            array (
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'NamespaceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控数据的存储方案。取值：

- m_prom_user：监控数据存储在日志服务中。

- m_prom_pool：监控数据存储在云监控提供的存储空间中。

> 关于监控数据的存储方案的更多信息，请参见[企业云监控的监控数据存储方案说明](~~2594921~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'm_prometheus',
          ),
        ),
        4 => 
        array (
          'name' => 'NamespaceRegion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控数据存储的地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用结果。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Namespace.Existed',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3843D23A-FB9E-5DC8-BCCC-458768B79296',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Namespace.Existed\\",\\n  \\"RequestId\\": \\"3843D23A-FB9E-5DC8-BCCC-458768B79296\\",\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateHybridMonitorNamespace>\\r\\n\\t<RequestId>3843D23A-FB9E-5DC8-BCCC-458768B79296</RequestId>\\r\\n\\t<Code>Success</Code>\\r\\n\\t<Success>true</Success>\\r\\n</CreateHybridMonitorNamespace>\\t","errorExample":""}]',
      'title' => '创建指标仓库',
      'description' => '# 前提条件
请确保您已开通企业云监控。具体操作，请参见[开通企业云监控](~~250773~~)。

# 使用说明
本文将提供一个示例，创建指标仓库`aliyun`，其数据存储时长为`cms.s1.3xlarge`。返回结果显示创建指标仓库成功。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'ModifyHybridMonitorNamespace' => 
    array (
      'summary' => '调用ModifyHybridMonitorNamespace接口修改指标仓库。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指标仓库名称。

格式：由大写字母、小写字母、数字和短划线（-）组成。

关于如何获取指标仓库名称，请参见[DescribeHybridMonitorNamespaceList](~~428880~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'aliyun',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指标仓库描述。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '阿里云产品指标仓库。',
          ),
        ),
        2 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据存储时长。取值：

- cms.s1.large：数据存储时长15天。
- cms.s1.xlarge：数据存储时长32天。
- cms.s1.2xlarge：数据存储时长63天。
- cms.s1.3xlarge：数据存储时长93天。
- cms.s1.6xlarge：数据存储时长185天。
- cms.s1.12xlarge：数据存储时长376天。

不同存储时长规格的价格，请参见[监控大盘](~~223532~~)中的**价格表**。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'enumValueTitles' => 
            array (
              'cms.s1.12xlarge' => 'cms.s1.12xlarge',
              'cms.s1.large' => 'cms.s1.large',
              'cms.s1.2xlarge' => 'cms.s1.2xlarge',
              'cms.s1.6xlarge' => 'cms.s1.6xlarge',
              'cms.s1.3xlarge' => 'cms.s1.3xlarge',
            ),
            'example' => 'cms.s1.2xlarge',
            'enum' => 
            array (
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用结果。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => '%s',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E190AB2E-7BF9-59B7-9DDC-7CB1782C5ECD',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"%s\\",\\n  \\"RequestId\\": \\"E190AB2E-7BF9-59B7-9DDC-7CB1782C5ECD\\",\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyHybridMonitorNamespace>\\r\\n\\t<RequestId>E190AB2E-7BF9-59B7-9DDC-7CB1782C5ECD</RequestId>\\r\\n\\t<Code>Success</Code>\\r\\n\\t<Success>true</Success>\\r\\n</ModifyHybridMonitorNamespace>\\t","errorExample":""}]',
      'title' => '修改指标仓库',
      'description' => '本文将提供一个示例，将指标仓库`aliyun`中的数据存储时长修改为`cms.s1.2xlarge`。返回结果显示修改指标仓库成功。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'DeleteHybridMonitorNamespace' => 
    array (
      'summary' => '调用DeleteHybridMonitorNamespace接口删除指标仓库。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指标仓库名称。

关于如何获取指标仓库名称，请参见[DescribeHybridMonitorNamespaceList](~~428880~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'aliyun',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用结果。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Namespace.NotFound',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3843D23A-FB9E-5DC8-BCCC-458768B79296',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Namespace.NotFound\\",\\n  \\"RequestId\\": \\"3843D23A-FB9E-5DC8-BCCC-458768B79296\\",\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteHybridMonitorNamespace>\\r\\n\\t<RequestId>3843D23A-FB9E-5DC8-BCCC-458768B79296</RequestId>\\r\\n\\t<Code>Success</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DeleteHybridMonitorNamespace>\\t","errorExample":""}]',
      'title' => '删除指标仓库',
      'description' => '> 如果指标仓库中存在数据接入任务，则不允许删除。

本文将提供一个示例，删除指标仓库`aliyun`。返回结果显示删除指标仓库成功。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'DescribeHybridMonitorNamespaceList' => 
    array (
      'summary' => '调用DescribeHybridMonitorNamespaceList接口查询指标仓库列表，及其接入数据详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页时每页显示的数据行数。

起始值：1。默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '10',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

起始值：1。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键字。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'aliyun',
          ),
        ),
        3 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指标仓库名称。

格式：由大写字母、小写字母、数字和短划线（-）组成。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'aliyun-test',
          ),
        ),
        4 => 
        array (
          'name' => 'ShowTaskStatistic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否显示阿里云产品的数据接入任务的配置详情和非阿里云产品的数据接入任务数量。取值：

- true：显示。
- false（默认值）：不显示。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1EC450A4-3221-5148-B77E-2827576CFE48',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用结果。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Specified parameter PageSize is not valid.',
              ),
              'PageSize' => 
              array (
                'description' => '分页时每页显示的数据行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'DescribeHybridMonitorNamespace' => 
              array (
                'description' => '指标仓库详情。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Description' => 
                    array (
                      'description' => '指标仓库描述。',
                      'type' => 'string',
                      'example' => 'aliyun-test',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建指标仓库的时间戳。

单位：毫秒。',
                      'type' => 'string',
                      'example' => '1652682744000',
                    ),
                    'Namespace' => 
                    array (
                      'description' => '指标仓库名称。',
                      'type' => 'string',
                      'example' => 'aliyun-test',
                    ),
                    'IsDelete' => 
                    array (
                      'description' => '指标仓库是否已删除。取值：

- 0：未删除。
- 1：已删除。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'Id' => 
                    array (
                      'description' => '指标仓库ID。',
                      'type' => 'string',
                      'example' => '3****',
                    ),
                    'ModifyTime' => 
                    array (
                      'description' => '最后一次修改指标仓库的时间戳。',
                      'type' => 'string',
                      'example' => '1652682744000',
                    ),
                    'Detail' => 
                    array (
                      'description' => '数据存储时长的详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Spec' => 
                        array (
                          'description' => '数据存储时长。取值：

- cms.s1.large：数据存储时长15天。
- cms.s1.xlarge：数据存储时长32天。
- cms.s1.2xlarge：数据存储时长63天。
- cms.s1.3xlarge：数据存储时长93天。
- cms.s1.6xlarge：数据存储时长185天。
- cms.s1.12xlarge：数据存储时长376天。',
                          'type' => 'string',
                          'example' => 'cms.s1.3xlarge',
                        ),
                        'NamespaceRegion' => 
                        array (
                          'description' => '监控数据存储的地域。

> 当您创建指标仓库时，如果`NamespaceType`选择`m_prom_user`，则显示该参数。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'SLSProject' => 
                        array (
                          'description' => '监控数据所在的日志项目。

> 当您创建指标仓库时，如果`NamespaceType`选择`m_prom_user`，则显示该参数。',
                          'type' => 'string',
                          'example' => 'cms-hybrid-120886317861****-cn-hangzhou-a83d',
                        ),
                      ),
                    ),
                    'NotAliyunTaskNumber' => 
                    array (
                      'description' => '非阿里云产品的数据接入任务数量。

',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '0',
                    ),
                    'AliyunProductMetricList' => 
                    array (
                      'description' => '阿里云产品的数据接入任务的配置详情。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '无。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'UserId' => 
                          array (
                            'description' => '创建指标仓库的账号。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '120886317861****',
                          ),
                          'NamespaceList' => 
                          array (
                            'description' => '指标仓库列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '无。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Namespace' => 
                                array (
                                  'description' => '阿里云产品数据命名空间。',
                                  'type' => 'string',
                                  'example' => 'acs_ecs_dashboard',
                                ),
                                'MetricList' => 
                                array (
                                  'description' => '阿里云产品的监控项列表。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '无。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Period' => 
                                      array (
                                        'description' => '监控项的采集周期。

单位：秒。',
                                        'type' => 'integer',
                                        'format' => 'int64',
                                        'example' => '60',
                                      ),
                                      'List' => 
                                      array (
                                        'description' => '监控项列表。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '监控项。',
                                          'type' => 'string',
                                          'example' => '["cpu_total"]',
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                          'YAMLConfig' => 
                          array (
                            'description' => '接入企业云监控的阿里云产品的配置文件。

- namespace：阿里云产品的命名空间。
- metric_list：阿里云服务的监控项。
- dimension：企业云监控支持查询的阿里云服务的资源。dimension为空，表示监控所有资源。',
                            'type' => 'string',
                            'example' => 'products:- namespace: acs_ecs_dashboard metric_info: - metric_list: - cpu_total dimension: \'\'',
                          ),
                        ),
                      ),
                    ),
                    'NamespaceType' => 
                    array (
                      'description' => '监控数据的存储方案。取值：

- m_prom_user：监控数据存储在日志服务中。

- m_prom_pool：监控数据存储在云监控提供的存储空间中。',
                      'type' => 'string',
                      'example' => 'm_prom_user',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1EC450A4-3221-5148-B77E-2827576CFE48\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"Success\\",\\n  \\"Message\\": \\"Specified parameter PageSize is not valid.\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"Total\\": 1,\\n  \\"DescribeHybridMonitorNamespace\\": [\\n    {\\n      \\"Description\\": \\"aliyun-test\\",\\n      \\"CreateTime\\": \\"1652682744000\\",\\n      \\"Namespace\\": \\"aliyun-test\\",\\n      \\"IsDelete\\": 0,\\n      \\"Id\\": \\"3****\\",\\n      \\"ModifyTime\\": \\"1652682744000\\",\\n      \\"Detail\\": {\\n        \\"Spec\\": \\"cms.s1.3xlarge\\",\\n        \\"NamespaceRegion\\": \\"cn-hangzhou\\",\\n        \\"SLSProject\\": \\"cms-hybrid-120886317861****-cn-hangzhou-a83d\\"\\n      },\\n      \\"NotAliyunTaskNumber\\": 0,\\n      \\"AliyunProductMetricList\\": [\\n        {\\n          \\"UserId\\": 0,\\n          \\"NamespaceList\\": [\\n            {\\n              \\"Namespace\\": \\"acs_ecs_dashboard\\",\\n              \\"MetricList\\": [\\n                {\\n                  \\"Period\\": 60,\\n                  \\"List\\": [\\n                    \\"[\\\\\\"cpu_total\\\\\\"]\\"\\n                  ]\\n                }\\n              ]\\n            }\\n          ],\\n          \\"YAMLConfig\\": \\"products:- namespace: acs_ecs_dashboard metric_info: - metric_list: - cpu_total dimension: \'\'\\"\\n        }\\n      ],\\n      \\"NamespaceType\\": \\"m_prom_user\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeHybridMonitorNamespaceListResponse>\\r\\n\\t<RequestId>1EC450A4-3221-5148-B77E-2827576CFE48</RequestId>\\r\\n\\t<PageSize>10</PageSize>\\r\\n\\t<PageNumber>1</PageNumber>\\r\\n\\t<Total>1</Total>\\r\\n\\t<DescribeHybridMonitorNamespace>\\r\\n\\t\\t<ModifyTime>1652682744000</ModifyTime>\\r\\n\\t\\t<Description></Description>\\r\\n\\t\\t<CreateTime>1652682744000</CreateTime>\\r\\n\\t\\t<IsDelete>0</IsDelete>\\r\\n\\t\\t<Id>3****</Id>\\r\\n\\t\\t<Namespace>aliyun-test</Namespace>\\r\\n\\t\\t<Detail>\\r\\n\\t\\t\\t<Spec>cms.s1.3xlarge</Spec>\\r\\n\\t\\t</Detail>\\r\\n\\t</DescribeHybridMonitorNamespace>\\r\\n\\t<Code>Success</Code>\\r\\n\\t<Success>true</Success>\\r\\n</DescribeHybridMonitorNamespaceListResponse>\\t","errorExample":""}]',
      'title' => '查询指标仓库列表',
      'description' => '本文将提供一个示例，查询当前账号下的所有指标仓库。返回结果显示，当前账号下只有一个指标仓库`aliyun-test`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'CreateHybridMonitorTask' => 
    array (
      'summary' => '调用CreateHybridMonitorTask接口创建阿里云产品的数据接入任务或SLS日志的监控项。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指标仓库名称。

关于如何获取指标仓库名称，请参见[DescribeHybridMonitorNamespaceList](~~428880~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => false,
            'example' => 'aliyun',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务描述。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '阿里云产品数据接入任务。',
          ),
        ),
        2 => 
        array (
          'name' => 'TaskName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务名称。

- 当`TaskType`为`aliyun_fc`时，输入阿里云产品的数据接入任务名称。
- 当`TaskType`为`aliyun_sls`时，输入SLS日志的监控项名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'aliyun_task',
          ),
        ),
        3 => 
        array (
          'name' => 'TaskType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务类型。取值：

- aliyun_fc：阿里云产品的数据接入任务。
- aliyun_sls：SLS日志的监控项。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
              'aliyun_fc' => 'aliyun_fc',
              'aliyun_sls' => 'aliyun_sls',
            ),
            'example' => 'aliyun_fc',
          ),
        ),
        4 => 
        array (
          'name' => 'CollectTargetType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控数据的采集目标类型。
- 当`TaskType`为`aliyun_fc`时，输入`aliyun_fc`。
- 当`TaskType`为`aliyun_sls`时，输入SLS日志的Logstore组名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'aliyun_fc',
          ),
        ),
        5 => 
        array (
          'name' => 'CollectInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项的采集周期。取值：

- 15
- 60（默认值）

单位：秒。

> 仅当`TaskType`为`aliyun_sls`时，需要设置该参数。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              15 => '15',
              60 => '60',
            ),
            'example' => '60',
          ),
        ),
        6 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。

关于如何获取应用分组ID，请参见[DescribeMonitorGroups](~~115032~~)。

> 仅当`TaskType`为`aliyun_sls`时，需要设置该参数。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '3607****',
          ),
        ),
        7 => 
        array (
          'name' => 'YARMConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '接入企业云监控的阿里云产品的配置文件。

- namespace：阿里云产品的命名空间。关于如何查询阿里云产品的命名空间，请参见[DescribeMetricMetaList](~~98846~~)。
- metric_list：阿里云服务的监控项。关于如何查询阿里云产品的监控项，请参见[DescribeMetricMetaList](~~98846~~)。

配置文件示例如下：

```
products:
- namespace: acs_ecs_dashboard
  metric_info:
  - metric_list:
    - cpu_total
    - cpu_idle
    - diskusage_utilization
    - CPUUtilization
    - DiskReadBPS
    - InternetOut
    - IntranetOut
    - cpu_system
- namespace: acs_rds_dashboard
  metric_info:
  - metric_list:
    - MySQL_QPS
    - MySQL_TPS
```
> 当`TaskType`为`aliyun_fc`时，必须设置该参数。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'products:- namespace: acs_ecs_dashboard  metric_info:  - metric_list:    - cpu_total',
          ),
        ),
        8 => 
        array (
          'name' => 'TargetUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '成员ID。

当您通过管理账号调用API时，可以选择将资源目录中的任意成员的阿里云产品接入企业云监控。通过资源目录实现企业跨账号统一监控目标阿里云产品。

> 仅当`TaskType`为`aliyun_fc`时，需要设置该参数。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '120886317861****',
          ),
        ),
        9 => 
        array (
          'name' => 'AttachLabels',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '监控项的标签。

> 仅当`TaskType`为`aliyun_sls`时，需要设置该参数。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'Value' => 
                array (
                  'description' => '监控项的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'testValue',
                ),
                'Name' => 
                array (
                  'description' => '监控项的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'app_service',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        10 => 
        array (
          'name' => 'TargetUserIdList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '成员ID。多个成员ID之间用半角逗号（,）分隔。

> 仅当您通过管理账号调用本接口时，需要设置该参数。',
            'type' => 'string',
            'required' => false,
            'example' => '120886317861****',
          ),
        ),
        11 => 
        array (
          'name' => 'SLSProcessConfig',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => 'SLS日志配置。

> 仅当`TaskType`为`aliyun_sls`时，需要设置该参数。',
            'type' => 'object',
            'properties' => 
            array (
              'Filter' => 
              array (
                'description' => 'SLS日志中参数的过滤条件。',
                'type' => 'object',
                'properties' => 
                array (
                  'Relation' => 
                  array (
                    'description' => '多个参数过滤条件之间的关系。取值：

- and（默认值）：满足所有过滤条件，才处理日志。
- or：满足任意过滤条件，即可处理日志。',
                    'type' => 'string',
                    'required' => false,
                    'enumValueTitles' => 
                    array (
                      'or' => 'or',
                      'and' => 'and',
                    ),
                    'example' => 'and',
                  ),
                  'Filters' => 
                  array (
                    'description' => 'SLS日志中参数的过滤条件列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SLSKeyName' => 
                        array (
                          'description' => 'SLS日志中过滤的参数名称。',
                          'type' => 'string',
                          'required' => false,
                          'example' => 'code',
                        ),
                        'Operator' => 
                        array (
                          'description' => 'SLS日志中参数值的过滤方式。取值：
- `contain`：包含。
- `notContain`：不包含。
- `>`：大于。
- `<`：小于。
- `=`：等于。
- `!=`：不等于。
- `>=`：大于等于。
- `<=`：小于等于。',
                          'type' => 'string',
                          'required' => false,
                          'example' => '=',
                          'enum' => 
                          array (
                            0 => '>',
                            1 => '>=',
                            2 => '=',
                            3 => '<=',
                            4 => '<',
                            5 => '!=',
                            6 => 'contain',
                            7 => 'notContain',
                          ),
                        ),
                        'Value' => 
                        array (
                          'description' => 'SLS日志中参数的过滤值。',
                          'type' => 'string',
                          'required' => false,
                          'example' => '200',
                        ),
                      ),
                      'required' => false,
                    ),
                    'required' => false,
                  ),
                ),
                'required' => false,
              ),
              'Statistics' => 
              array (
                'description' => 'SLS日志的统计方式。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SLSKeyName' => 
                    array (
                      'description' => 'SLS日志统计的参数名称。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'name',
                    ),
                    'Function' => 
                    array (
                      'description' => '在计算周期内根据选定的统计方法对日志数据进行聚合处理。取值：
- count：计数。
- sum：求和。
- avg：平均值。
- max：最大值。
- min：最小值。
- value：周期内采样。
- countps：计算统计周期内指定字段求count后的每秒平均值。
- sumps：计算统计周期内指定字段求sum后的每秒平均值。
- distinct：去重后计算统计周期内指定字段出现的次数。
- distribution：计算字段值在一个区间内的出现次数。
- percentile：计算字段值的分布值，例如：P50。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'count',
                    ),
                    'Alias' => 
                    array (
                      'description' => 'SLS日志统计结果的别名。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'level_count',
                      'minLength' => 0,
                      'pattern' => '^[a-zA-Z_][a-zA-Z0-9_]{1,39}$',
                    ),
                    'Parameter1' => 
                    array (
                      'description' => 'SLS日志的统计值。

- 当`Function`为`distribution`时，表示统计区间的下限，例如：统计HttpCode的2XX数量，填写200。

- 当`Function`为`percentile`时，表示统计分布的百分位，例如：0.5表示P50。
',
                      'type' => 'string',
                      'required' => false,
                      'example' => '200',
                    ),
                    'Parameter2' => 
                    array (
                      'description' => 'SLS日志的统计值。

> 仅当`Function`为`distribution`时，需要设置该参数。表示统计区间的上限，例如：统计HttpCode的2XX数量，填写299。
',
                      'type' => 'string',
                      'required' => false,
                      'example' => '299',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'GroupBy' => 
              array (
                'description' => '对数据进行空间维度聚合，相当于SQL中的Group By。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SLSKeyName' => 
                    array (
                      'description' => 'SLS日志统计的参数名称。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'code',
                    ),
                    'Alias' => 
                    array (
                      'description' => 'SLS日志统计结果的别名。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'ApiResult',
                      'pattern' => '^[a-zA-Z_][a-zA-Z0-9_]{1,39}$',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'Express' => 
              array (
                'description' => 'SLS日志统计结果的扩展字段的四则运算结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Express' => 
                    array (
                      'description' => 'SLS日志统计结果的扩展字段的四则运算结果。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'success_count',
                    ),
                    'Alias' => 
                    array (
                      'description' => 'SLS日志统计结果的扩展字段的四则运算结果的别名。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'SuccRate',
                      'pattern' => '^[a-zA-Z_][a-zA-Z0-9_]{1,39}$',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
        12 => 
        array (
          'name' => 'CloudAccessId',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '其他云厂商接入云监控的主账号ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '其他云厂商接入云监控的主账号ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'n5n9ik1b****',
            ),
            'required' => false,
            'maxItems' => 50,
            'minItems' => 1,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'yamlConfigFail',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '28CEA2E0-3E90-51B2-A7E8-B1ED75534E49',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'TaskId' => 
              array (
                'description' => '监控任务ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '36****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"yamlConfigFail\\",\\n  \\"RequestId\\": \\"28CEA2E0-3E90-51B2-A7E8-B1ED75534E49\\",\\n  \\"Success\\": \\"true\\",\\n  \\"TaskId\\": 0\\n}","errorExample":""},{"type":"xml","example":"<CreateHybridMonitorTaskResponse>\\n\\t<TaskId>36****</TaskId>\\n\\t<RequestId>28CEA2E0-3E90-51B2-A7E8-B1ED75534E49</RequestId>\\n\\t<Code>200</Code>\\n\\t<Success>true</Success>\\n</CreateHybridMonitorTaskResponse>\\t","errorExample":""}]',
      'title' => '创建监控任务',
      'description' => '# 前提条件

- 请确保您已开通企业云监控。具体操作，请参见[开通企业云监控](~~250773~~)。

- 如果您需要创建SLS日志的监控项，请确保您已开通SLS日志服务，且已创建日志项目（Project）和日志库（Logstore）。具体操作，请参见[快速入门](~~54604~~)。

# 使用说明
本文将提供一个示例，创建阿里云产品的数据接入任务`aliyun_task`，将云服务器ECS的监控项`cpu_total`接入指标仓库`aliyun`。返回结果显示，创建数据接入任务成功。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'ModifyHybridMonitorTask' => 
    array (
      'summary' => '调用ModifyHybridMonitorTask接口修改SLS日志的监控项。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务ID。

关于如何获取监控任务ID，请参见[DescribeHybridMonitorTaskList](~~428624~~)。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '36****',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务名称。

关于如何获取监控任务ID，请参见[DescribeHybridMonitorTaskList](~~428624~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'SLS_task',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务描述。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'SLS日志监控数据。',
          ),
        ),
        3 => 
        array (
          'name' => 'CollectInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控项的采集周期。取值：

- 15

- 60

单位：秒。',
            'type' => 'string',
            'required' => false,
            'example' => '15',
          ),
        ),
        4 => 
        array (
          'name' => 'AttachLabels',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '监控项的标签。

',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'Value' => 
                array (
                  'description' => '监控项的标签值。

',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'testValue',
                ),
                'Name' => 
                array (
                  'description' => '监控项的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'app_service',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        5 => 
        array (
          'name' => 'SLSProcessConfig',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => 'SLS日志配置。

',
            'type' => 'object',
            'properties' => 
            array (
              'Filter' => 
              array (
                'description' => 'SLS日志中参数的过滤条件。

',
                'type' => 'object',
                'properties' => 
                array (
                  'Relation' => 
                  array (
                    'description' => '多个参数过滤条件之间的关系。取值：

- and（默认值）：满足所有过滤条件，才处理日志。
- or：满足任意过滤条件，即可处理日志。

',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'and',
                  ),
                  'Filters' => 
                  array (
                    'description' => '无。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '无。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SLSKeyName' => 
                        array (
                          'description' => 'SLS日志中过滤的参数名称。

',
                          'type' => 'string',
                          'required' => false,
                          'example' => 'code',
                        ),
                        'Operator' => 
                        array (
                          'description' => 'SLS日志中参数值的过滤方式。取值：
- `contain`：包含。
- `notContain`：不包含。
- `>`：大于。
- `<`：小于。
- `=`：等于。
- `!=`：不等于。
- `>=`：大于等于。
- `<=`：小于等于。',
                          'type' => 'string',
                          'required' => false,
                          'example' => '=',
                          'enum' => 
                          array (
                            0 => '>',
                            1 => '>=',
                            2 => '=',
                            3 => '<=',
                            4 => '<',
                            5 => '!=',
                            6 => 'contain',
                            7 => 'notContain',
                          ),
                        ),
                        'Value' => 
                        array (
                          'description' => 'SLS日志中参数的过滤值。',
                          'type' => 'string',
                          'required' => false,
                          'example' => '200',
                        ),
                      ),
                      'required' => false,
                    ),
                    'required' => false,
                  ),
                ),
                'required' => false,
              ),
              'Statistics' => 
              array (
                'description' => '无。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SLSKeyName' => 
                    array (
                      'description' => 'SLS日志统计的参数名称。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'name',
                    ),
                    'Function' => 
                    array (
                      'description' => '在计算周期内根据选定的统计方法对日志数据进行聚合处理。取值：
- count：计数。
- sum：求和。
- avg：平均值。
- max：最大值。
- min：最小值。
- value：周期内采样。
- countps：计算统计周期内指定字段求count后的每秒平均值。
- sumps：计算统计周期内指定字段求sum后的每秒平均值。
- distinct：去重后计算统计周期内指定字段出现的次数。
- distribution：计算字段值在一个区间内的出现次数。
- percentile：计算字段值的分布值，例如：P50。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'count',
                    ),
                    'Alias' => 
                    array (
                      'description' => 'SLS日志统计结果的别名。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'level_count',
                      'minLength' => 0,
                      'pattern' => '^[a-zA-Z_][a-zA-Z0-9_]{1,39}$',
                    ),
                    'Parameter1' => 
                    array (
                      'description' => 'SLS日志的统计值。

- 当`Function`为`distribution`时，表示统计区间的下限，例如：统计HttpCode的2XX数量，填写200。

- 当`Function`为`percentile`时，表示统计分布的百分位，例如：0.5表示P50。
',
                      'type' => 'string',
                      'required' => false,
                      'example' => '200',
                    ),
                    'Parameter2' => 
                    array (
                      'description' => 'SLS日志的统计值。

> 仅当`Function`为`distribution`时，需要设置该参数。表示统计区间的上限，例如：统计HttpCode的2XX数量，填写299。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '299',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'GroupBy' => 
              array (
                'description' => '对数据进行空间维度聚合，相当于SQL中的Group By。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SLSKeyName' => 
                    array (
                      'description' => 'SLS日志统计的参数名称。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'code',
                    ),
                    'Alias' => 
                    array (
                      'description' => 'SLS日志统计结果的别名。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'ApiResult',
                      'pattern' => '^[a-zA-Z_][a-zA-Z0-9_]{1,39}$',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'Express' => 
              array (
                'description' => 'SLS日志统计结果的扩展字段的四则运算结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Express' => 
                    array (
                      'description' => 'SLS日志统计结果的扩展字段的四则运算结果。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'success_count',
                    ),
                    'Alias' => 
                    array (
                      'description' => 'SLS日志统计结果的扩展字段的四则运算结果的别名。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'SuccRate',
                      'pattern' => '^[a-zA-Z_][a-zA-Z0-9_]{1,39}$',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Invalid.SLSConfig',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '11145B76-566A-5D80-A8A3-FAD98D310079',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Invalid.SLSConfig\\",\\n  \\"RequestId\\": \\"11145B76-566A-5D80-A8A3-FAD98D310079\\",\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyHybridMonitorTaskResponse>\\n    <RequestId>11145B76-566A-5D80-A8A3-FAD98D310079</RequestId>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</ModifyHybridMonitorTaskResponse>","errorExample":""}]',
      'title' => '修改监控任务',
      'description' => '本文将提供一个示例，将SLS日志的监控任务`36****`的采集周期修改为`15`秒。返回结果显示，修改监控项成功。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'DeleteHybridMonitorTask' => 
    array (
      'summary' => '调用DeleteHybridMonitorTask接口删除阿里云产品的数据接入任务或SLS日志的监控项。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务ID。

关于如何获取监控任务ID，请参见[DescribeHybridMonitorTaskList](~~428624~~)。

> 当您删除SLS日志的监控项（即`TaskType`为`aliyun_sls`）时，必须设置该参数。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '36****',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指标仓库名称。

格式：由大写字母、小写字母、数字和短划线（-）组成。

> 当您删除阿里云产品的数据接入任务（即`TaskType`为`aliyun_fc`）时，必须设置该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'aliyun',
          ),
        ),
        2 => 
        array (
          'name' => 'TargetUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '成员ID。

> 仅当您通过管理账号调用本接口删除成员的阿里云数据接入任务（即`TaskType`为`aliyun_fc`）时，需要设置该参数。',
            'type' => 'string',
            'required' => false,
            'example' => '120886317861****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'null',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D6B8103F-7BAD-5FEB-945F-71D991AB8834',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"null\\",\\n  \\"RequestId\\": \\"D6B8103F-7BAD-5FEB-945F-71D991AB8834\\",\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteHybridMonitorTaskResponse>\\n    <RequestId>D6B8103F-7BAD-5FEB-945F-71D991AB8834</RequestId>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</DeleteHybridMonitorTaskResponse>","errorExample":""}]',
      'title' => '删除监控任务',
      'description' => '本文将提供一个示例，删除监控任务`36****`。返回结果显示，删除监控任务成功。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'DescribeHybridMonitorTaskList' => 
    array (
      'summary' => '调用DescribeHybridMonitorTaskList接口查询数据接入任务列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键字。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'task',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '36****',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。

关于如何获取应用分组ID，请参见[DescribeMonitorGroups](~~115032~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '3607****',
          ),
        ),
        3 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指标仓库名称。

关于如何获取指标仓库名称，请参见[DescribeHybridMonitorNamespaceList](~~428880~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'aliyun',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页时每页显示的数据行数。

起始值：1。默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

起始值：1。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'IncludeAliyunTask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果是否包含阿里云产品的数据接入任务。取值：

- true（默认值）：包含。
- false：不包含。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'TaskType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控任务类型。取值：

- aliyun_fc：阿里云产品的数据接入任务。
- aliyun_sls：SLS日志的监控项。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'aliyun_sls' => 'aliyun_sls',
            ),
            'example' => 'aliyun_fc',
          ),
        ),
        8 => 
        array (
          'name' => 'TargetUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '成员ID。

> 仅当您通过管理账号调用本接口删除成员的阿里云数据接入任务（即`TaskType`为`aliyun_fc`）时，需要设置该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '120886317861****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '11145B76-566A-5D80-A8A3-FAD98D310079',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当操作成功时，返回`success`。
- 当操作失败时，返回错误信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'PageSize' => 
              array (
                'description' => '分页时每页显示的数据行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TaskList' => 
              array (
                'description' => '监控任务列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'YARMConfig' => 
                    array (
                      'description' => '接入企业云监控的阿里云产品的配置文件。

- namespace：阿里云产品的命名空间。
- metric_list：阿里云服务的监控项。',
                      'type' => 'string',
                      'example' => 'products:- namespace: acs_ecs_dashboard metric_info: - metric_list: - cpu_total',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建监控任务的时间戳。

单位：毫秒。',
                      'type' => 'string',
                      'example' => '1639382496000',
                    ),
                    'TaskName' => 
                    array (
                      'description' => '监控任务名称。',
                      'type' => 'string',
                      'example' => 'aliyun_task',
                    ),
                    'Namespace' => 
                    array (
                      'description' => '主机归属的指标仓库。',
                      'type' => 'string',
                      'example' => 'aliyun',
                    ),
                    'UploadRegion' => 
                    array (
                      'description' => '主机归属的地域。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'NetworkType' => 
                    array (
                      'description' => '主机的网络类型。取值：

- `vpc`：专有网络。
- `Internet`：公网。',
                      'type' => 'string',
                      'example' => 'vpc',
                    ),
                    'CollectTimout' => 
                    array (
                      'description' => '云监控插件采集主机监控数据的超时时间。取值：

- 0
- 15
- 30
- 60

单位：秒。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '15',
                    ),
                    'CollectTargetEndpoint' => 
                    array (
                      'description' => '云监控插件采集主机监控数据的地址。',
                      'type' => 'string',
                      'example' => 'http://localhost',
                    ),
                    'TaskType' => 
                    array (
                      'description' => '监控任务类型。取值：

- aliyun_fc：阿里云产品的数据接入任务。
- aliyun_sls：SLS日志的监控项。',
                      'type' => 'string',
                      'example' => 'aliyun_sls',
                    ),
                    'MatchExpressRelation' => 
                    array (
                      'description' => '监控任务的实例过滤条件。取值：

- or：或。
- and：和。',
                      'type' => 'string',
                      'example' => 'or',
                    ),
                    'Description' => 
                    array (
                      'description' => '监控任务描述。',
                      'type' => 'string',
                      'example' => 'aliyun',
                    ),
                    'GroupId' => 
                    array (
                      'description' => '应用分组ID。',
                      'type' => 'string',
                      'example' => '3607****',
                    ),
                    'CollectInterval' => 
                    array (
                      'description' => '云监控插件采集主机监控数据的间隔时间。取值：

- 15
- 30
- 60

单位：秒。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '60',
                    ),
                    'TargetUserId' => 
                    array (
                      'description' => '成员ID。

> 仅当您通过管理账号调用本接口时，显示该参数。',
                      'type' => 'string',
                      'example' => '120886317861****',
                    ),
                    'CollectTargetPath' => 
                    array (
                      'description' => '云监控Agent采集的时候，采集的相对路径。',
                      'type' => 'string',
                      'example' => '/metrics',
                    ),
                    'CollectTargetType' => 
                    array (
                      'description' => '采集目标类型。包括：Spring、Tomcat、Nginx、Tengine、JVM、Redis和MySQL等。',
                      'type' => 'string',
                      'example' => 'nginx',
                    ),
                    'TaskId' => 
                    array (
                      'description' => '监控任务ID。',
                      'type' => 'string',
                      'example' => '36****',
                    ),
                    'AttachLabels' => 
                    array (
                      'description' => '监控任务的标签。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '无。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Name' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'key1',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'value1',
                          ),
                        ),
                      ),
                    ),
                    'MatchExpress' => 
                    array (
                      'description' => '应用分组中实例的匹配条件。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '无。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Value' => 
                          array (
                            'description' => '实例名称的值。',
                            'type' => 'string',
                            'example' => 'ECS_instance1',
                          ),
                          'Name' => 
                          array (
                            'description' => '实例名称。',
                            'type' => 'string',
                            'example' => 'name',
                          ),
                          'Function' => 
                          array (
                            'description' => '实例名称的匹配方法。取值：

- startWith：前缀。
- endWith：后缀。
- all：全部。
- equals：等于。
- contains：包含。
- notContains：不包含。',
                            'type' => 'string',
                            'example' => 'all',
                          ),
                        ),
                      ),
                    ),
                    'Instances' => 
                    array (
                      'description' => '分批采集监控数据的实例列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '实例ID。',
                        'type' => 'string',
                        'example' => 'i-hp368focau7dp0hw****',
                      ),
                    ),
                    'ExtraInfo' => 
                    array (
                      'description' => '实例的附加信息。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'LogFilePath' => 
                    array (
                      'description' => '本地日志数据保存在云监控所在主机的指定路径。

- Windows：仅支持盘符开头，例如：`C:\\UserData\\log\\\\*.Log`（不支持通配路径）。
- Linux：仅支持以“/”开头，例如：`/home/appdata/log/**/*.log`（`/**/`用于匹配appdata下的所有文件）。',
                      'type' => 'string',
                      'example' => 'C:\\UserData\\log\\*.Log',
                    ),
                    'LogSplit' => 
                    array (
                      'description' => '本地日志数据根据不同匹配模式的切分结果。

> 本地日志数据的匹配模式包括：完整正则模式、分隔符模式和JSON模式。',
                      'type' => 'string',
                      'example' => '{"type": "regex","regex": "\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\s+(\\\\d+)\\\\s+\\\\S+\\\\s+\\\\[\\\\d+/\\\\S+/\\\\d+:\\\\d+:\\\\d+:\\\\d+\\\\s+\\\\+\\\\d+\\\\]\\\\s+(\\\\S+)\\\\s+\\\\S+\\\\s+/\\\\S+/\\\\S+/\\\\S+\\\\s+(\\\\d+)","columns": [{"name": "field1"},{"name": "filed2","translate": {"default": "-","mappings": [{"from": "(\\\\w+)","to": "$1x","type": "regex"}]}},{"name": "filed3","translate": {"default": "-","mappings": [{"from": "NumberRange(100,300)","to": "true","type": "function"}]}}]}',
                    ),
                    'LogProcess' => 
                    array (
                      'description' => '本地日志监控计算方式。',
                      'type' => 'string',
                      'example' => '[{"metric": "metric1","filters": [{"column": "filed2","type": "include","values": ["222222"]}],"groupBys": [{"column": "filed3","name": "filed3"}],"calculates": [{"column": "field1","name": "avg","type": "avg"}]},{"metric": "metric2","filters": [{"column": "field1","type": "include","values": ["11111"]}],"groupBys": [{"column": "filed2","name": "filed2"}],"calculates": [{"column": "field1","name": "avg","type": "avg"}]}]',
                    ),
                    'LogSample' => 
                    array (
                      'description' => '本地日志数据的示例。',
                      'type' => 'string',
                      'example' => '{"logContent":"100.116.134.26 1119 - [13/Aug/2019:16:55:46 +0800] POST metrichub-cn-hongkong.aliyun.com /agent/metrics/putLines 200 0 \\"-\\" \\"127.0.0.1:7001\\" \\"Go-http-client/1.1\\" \\"-\\" \\"-\\" \\"0a98a21a15656865460656276e\\"","addData":{"field1":["1119","1119"],"filed2":["POSTx","POST"],"filed3":["true","200"]}}',
                    ),
                    'SLSProcess' => 
                    array (
                      'description' => 'SLS日志数据的配置信息。',
                      'type' => 'string',
                      'example' => '{"express": [],"filter": {"filters": [{"key": "task_type","operator": "=","value": "1"}]},"groupby": [{"alias": "isp","key": "isp","sqlKey": "t.`isp`","valueKey": "isp"}],"interval": 60,"labels": [{"name": "__cms_app__","type": 0,"value": "sitemonitor"}],"statistics": [{"alias": "http_dns_time_avg","function": "avg","key": "http_dns_time"}]}',
                    ),
                    'SLSProcessConfig' => 
                    array (
                      'description' => 'SLS日志配置。

> 仅当`TaskType`为`aliyun_sls`时，显示该参数。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Filter' => 
                        array (
                          'description' => 'SLS日志中参数的过滤条件。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Relation' => 
                            array (
                              'description' => '多个参数过滤条件之间的关系。取值：

- and（默认值）：满足所有过滤条件，才处理日志。
- or：满足任意过滤条件，即可处理日志。',
                              'type' => 'string',
                              'example' => 'and',
                            ),
                            'Filters' => 
                            array (
                              'description' => 'SLS日志中参数的过滤条件。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'SLS日志中参数的过滤条件。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'SLSKeyName' => 
                                  array (
                                    'description' => 'SLS日志中过滤的参数名称。',
                                    'type' => 'string',
                                    'example' => 'host',
                                  ),
                                  'Operator' => 
                                  array (
                                    'description' => 'SLS日志中参数值的过滤方式。取值：
- `contain`：包含。
- `notContain`：不包含。
- `>`：大于。
- `<`：小于。
- `=`：等于。
- `!=`：不等于。
- `>=`：大于等于。
- `<=`：小于等于。',
                                    'type' => 'string',
                                    'example' => '=',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => 'SLS日志中参数的过滤值。',
                                    'type' => 'string',
                                    'example' => '200',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Statistics' => 
                        array (
                          'description' => 'SLS日志的统计方式。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'SLS日志的统计方式。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'SLSKeyName' => 
                              array (
                                'description' => 'SLS日志统计的参数名称。',
                                'type' => 'string',
                                'example' => 'name',
                              ),
                              'Function' => 
                              array (
                                'description' => '在计算周期内根据选定的统计方法对日志数据进行聚合处理。取值：
- count：计数。
- sum：求和。
- avg：平均值。
- max：最大值。
- min：最小值。
- value：周期内采样。
- countps：计算统计周期内指定字段求count后的每秒平均值。
- sumps：计算统计周期内指定字段求sum后的每秒平均值。
- distinct：去重后计算统计周期内指定字段出现的次数。
- distribution：计算字段值在一个区间内的出现次数。
- percentile：计算字段值的分布值，例如：P50。',
                                'type' => 'string',
                                'example' => 'count',
                              ),
                              'Alias' => 
                              array (
                                'description' => 'SLS日志统计结果的别名。',
                                'type' => 'string',
                                'example' => 'level_count',
                              ),
                              'Parameter1' => 
                              array (
                                'description' => 'SLS日志的统计值。

- 当`Function`为`distribution`时，表示统计区间的下限，例如：统计HttpCode的2XX数量，填写200。

- 当`Function`为`percentile`时，表示统计分布的百分位，例如：0.5表示P50。
',
                                'type' => 'string',
                                'example' => '200',
                              ),
                              'Parameter2' => 
                              array (
                                'description' => 'SLS日志的统计值。

> 仅当`Function`为`distribution`时，需要设置该参数。表示统计区间的上限，例如：统计HttpCode的2XX数量，填写299。',
                                'type' => 'string',
                                'example' => '299',
                              ),
                            ),
                          ),
                        ),
                        'GroupBy' => 
                        array (
                          'description' => '对数据进行空间维度聚合，相当于SQL中的Group By。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '对数据进行空间维度聚合，相当于SQL中的Group By。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'SLSKeyName' => 
                              array (
                                'description' => 'SLS日志统计的参数名称。',
                                'type' => 'string',
                                'example' => 'code',
                              ),
                              'Alias' => 
                              array (
                                'description' => 'SLS日志统计结果的别名。',
                                'type' => 'string',
                                'example' => 'ApiResult',
                              ),
                            ),
                          ),
                        ),
                        'Express' => 
                        array (
                          'description' => 'SLS日志统计结果的扩展字段的四则运算结果。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'SLS日志统计结果的扩展字段的四则运算结果。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Express' => 
                              array (
                                'description' => 'SLS日志统计结果的扩展字段的四则运算结果。',
                                'type' => 'string',
                                'example' => 'success_count',
                              ),
                              'Alias' => 
                              array (
                                'description' => 'SLS日志统计结果的扩展字段的四则运算结果的别名。',
                                'type' => 'string',
                                'example' => 'SuccRate',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"11145B76-566A-5D80-A8A3-FAD98D310079\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"Total\\": 1,\\n  \\"TaskList\\": [\\n    {\\n      \\"YARMConfig\\": \\"products:- namespace: acs_ecs_dashboard metric_info: - metric_list: - cpu_total\\",\\n      \\"CreateTime\\": \\"1639382496000\\",\\n      \\"TaskName\\": \\"aliyun_task\\",\\n      \\"Namespace\\": \\"aliyun\\",\\n      \\"UploadRegion\\": \\"cn-hangzhou\\",\\n      \\"NetworkType\\": \\"vpc\\",\\n      \\"CollectTimout\\": 15,\\n      \\"CollectTargetEndpoint\\": \\"http://localhost\\",\\n      \\"TaskType\\": \\"aliyun_sls\\",\\n      \\"MatchExpressRelation\\": \\"or\\",\\n      \\"Description\\": \\"aliyun\\",\\n      \\"GroupId\\": \\"3607****\\",\\n      \\"CollectInterval\\": 60,\\n      \\"TargetUserId\\": \\"120886317861****\\",\\n      \\"CollectTargetPath\\": \\"/metrics\\",\\n      \\"CollectTargetType\\": \\"nginx\\",\\n      \\"TaskId\\": \\"36****\\",\\n      \\"AttachLabels\\": [\\n        {\\n          \\"Name\\": \\"key1\\",\\n          \\"Value\\": \\"value1\\"\\n        }\\n      ],\\n      \\"MatchExpress\\": [\\n        {\\n          \\"Value\\": \\"ECS_instance1\\",\\n          \\"Name\\": \\"name\\",\\n          \\"Function\\": \\"all\\"\\n        }\\n      ],\\n      \\"Instances\\": [\\n        \\"i-hp368focau7dp0hw****\\"\\n      ],\\n      \\"ExtraInfo\\": \\"test\\",\\n      \\"LogFilePath\\": \\"C:\\\\\\\\UserData\\\\\\\\log\\\\\\\\*.Log\\",\\n      \\"LogSplit\\": \\"{\\\\\\"type\\\\\\": \\\\\\"regex\\\\\\",\\\\\\"regex\\\\\\": \\\\\\"\\\\\\\\\\\\\\\\d+\\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\d+\\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\d+\\\\\\\\\\\\\\\\.\\\\\\\\\\\\\\\\d+\\\\\\\\\\\\\\\\s+(\\\\\\\\\\\\\\\\d+)\\\\\\\\\\\\\\\\s+\\\\\\\\\\\\\\\\S+\\\\\\\\\\\\\\\\s+\\\\\\\\\\\\\\\\[\\\\\\\\\\\\\\\\d+/\\\\\\\\\\\\\\\\S+/\\\\\\\\\\\\\\\\d+:\\\\\\\\\\\\\\\\d+:\\\\\\\\\\\\\\\\d+:\\\\\\\\\\\\\\\\d+\\\\\\\\\\\\\\\\s+\\\\\\\\\\\\\\\\+\\\\\\\\\\\\\\\\d+\\\\\\\\\\\\\\\\]\\\\\\\\\\\\\\\\s+(\\\\\\\\\\\\\\\\S+)\\\\\\\\\\\\\\\\s+\\\\\\\\\\\\\\\\S+\\\\\\\\\\\\\\\\s+/\\\\\\\\\\\\\\\\S+/\\\\\\\\\\\\\\\\S+/\\\\\\\\\\\\\\\\S+\\\\\\\\\\\\\\\\s+(\\\\\\\\\\\\\\\\d+)\\\\\\",\\\\\\"columns\\\\\\": [{\\\\\\"name\\\\\\": \\\\\\"field1\\\\\\"},{\\\\\\"name\\\\\\": \\\\\\"filed2\\\\\\",\\\\\\"translate\\\\\\": {\\\\\\"default\\\\\\": \\\\\\"-\\\\\\",\\\\\\"mappings\\\\\\": [{\\\\\\"from\\\\\\": \\\\\\"(\\\\\\\\\\\\\\\\w+)\\\\\\",\\\\\\"to\\\\\\": \\\\\\"$1x\\\\\\",\\\\\\"type\\\\\\": \\\\\\"regex\\\\\\"}]}},{\\\\\\"name\\\\\\": \\\\\\"filed3\\\\\\",\\\\\\"translate\\\\\\": {\\\\\\"default\\\\\\": \\\\\\"-\\\\\\",\\\\\\"mappings\\\\\\": [{\\\\\\"from\\\\\\": \\\\\\"NumberRange(100,300)\\\\\\",\\\\\\"to\\\\\\": \\\\\\"true\\\\\\",\\\\\\"type\\\\\\": \\\\\\"function\\\\\\"}]}}]}\\",\\n      \\"LogProcess\\": \\"[{\\\\\\"metric\\\\\\": \\\\\\"metric1\\\\\\",\\\\\\"filters\\\\\\": [{\\\\\\"column\\\\\\": \\\\\\"filed2\\\\\\",\\\\\\"type\\\\\\": \\\\\\"include\\\\\\",\\\\\\"values\\\\\\": [\\\\\\"222222\\\\\\"]}],\\\\\\"groupBys\\\\\\": [{\\\\\\"column\\\\\\": \\\\\\"filed3\\\\\\",\\\\\\"name\\\\\\": \\\\\\"filed3\\\\\\"}],\\\\\\"calculates\\\\\\": [{\\\\\\"column\\\\\\": \\\\\\"field1\\\\\\",\\\\\\"name\\\\\\": \\\\\\"avg\\\\\\",\\\\\\"type\\\\\\": \\\\\\"avg\\\\\\"}]},{\\\\\\"metric\\\\\\": \\\\\\"metric2\\\\\\",\\\\\\"filters\\\\\\": [{\\\\\\"column\\\\\\": \\\\\\"field1\\\\\\",\\\\\\"type\\\\\\": \\\\\\"include\\\\\\",\\\\\\"values\\\\\\": [\\\\\\"11111\\\\\\"]}],\\\\\\"groupBys\\\\\\": [{\\\\\\"column\\\\\\": \\\\\\"filed2\\\\\\",\\\\\\"name\\\\\\": \\\\\\"filed2\\\\\\"}],\\\\\\"calculates\\\\\\": [{\\\\\\"column\\\\\\": \\\\\\"field1\\\\\\",\\\\\\"name\\\\\\": \\\\\\"avg\\\\\\",\\\\\\"type\\\\\\": \\\\\\"avg\\\\\\"}]}]\\",\\n      \\"LogSample\\": \\"{\\\\\\"logContent\\\\\\":\\\\\\"100.116.134.26 1119 - [13/Aug/2019:16:55:46 +0800] POST metrichub-cn-hongkong.aliyun.com /agent/metrics/putLines 200 0 \\\\\\\\\\\\\\"-\\\\\\\\\\\\\\" \\\\\\\\\\\\\\"127.0.0.1:7001\\\\\\\\\\\\\\" \\\\\\\\\\\\\\"Go-http-client/1.1\\\\\\\\\\\\\\" \\\\\\\\\\\\\\"-\\\\\\\\\\\\\\" \\\\\\\\\\\\\\"-\\\\\\\\\\\\\\" \\\\\\\\\\\\\\"0a98a21a15656865460656276e\\\\\\\\\\\\\\"\\\\\\",\\\\\\"addData\\\\\\":{\\\\\\"field1\\\\\\":[\\\\\\"1119\\\\\\",\\\\\\"1119\\\\\\"],\\\\\\"filed2\\\\\\":[\\\\\\"POSTx\\\\\\",\\\\\\"POST\\\\\\"],\\\\\\"filed3\\\\\\":[\\\\\\"true\\\\\\",\\\\\\"200\\\\\\"]}}\\",\\n      \\"SLSProcess\\": \\"{\\\\\\"express\\\\\\": [],\\\\\\"filter\\\\\\": {\\\\\\"filters\\\\\\": [{\\\\\\"key\\\\\\": \\\\\\"task_type\\\\\\",\\\\\\"operator\\\\\\": \\\\\\"=\\\\\\",\\\\\\"value\\\\\\": \\\\\\"1\\\\\\"}]},\\\\\\"groupby\\\\\\": [{\\\\\\"alias\\\\\\": \\\\\\"isp\\\\\\",\\\\\\"key\\\\\\": \\\\\\"isp\\\\\\",\\\\\\"sqlKey\\\\\\": \\\\\\"t.`isp`\\\\\\",\\\\\\"valueKey\\\\\\": \\\\\\"isp\\\\\\"}],\\\\\\"interval\\\\\\": 60,\\\\\\"labels\\\\\\": [{\\\\\\"name\\\\\\": \\\\\\"__cms_app__\\\\\\",\\\\\\"type\\\\\\": 0,\\\\\\"value\\\\\\": \\\\\\"sitemonitor\\\\\\"}],\\\\\\"statistics\\\\\\": [{\\\\\\"alias\\\\\\": \\\\\\"http_dns_time_avg\\\\\\",\\\\\\"function\\\\\\": \\\\\\"avg\\\\\\",\\\\\\"key\\\\\\": \\\\\\"http_dns_time\\\\\\"}]}\\",\\n      \\"SLSProcessConfig\\": {\\n        \\"Filter\\": {\\n          \\"Relation\\": \\"and\\",\\n          \\"Filters\\": [\\n            {\\n              \\"SLSKeyName\\": \\"host\\",\\n              \\"Operator\\": \\"=\\",\\n              \\"Value\\": \\"200\\"\\n            }\\n          ]\\n        },\\n        \\"Statistics\\": [\\n          {\\n            \\"SLSKeyName\\": \\"name\\",\\n            \\"Function\\": \\"count\\",\\n            \\"Alias\\": \\"level_count\\",\\n            \\"Parameter1\\": \\"200\\",\\n            \\"Parameter2\\": \\"299\\"\\n          }\\n        ],\\n        \\"GroupBy\\": [\\n          {\\n            \\"SLSKeyName\\": \\"code\\",\\n            \\"Alias\\": \\"ApiResult\\"\\n          }\\n        ],\\n        \\"Express\\": [\\n          {\\n            \\"Express\\": \\"success_count\\",\\n            \\"Alias\\": \\"SuccRate\\"\\n          }\\n        ]\\n      }\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeHybridMonitorTaskListResponse>\\n\\t<RequestId>11145B76-566A-5D80-A8A3-FAD98D310079</RequestId>\\n\\t<PageSize>10</PageSize>\\n\\t<PageNumber>1</PageNumber>\\n\\t<Total>1</Total>\\n\\t<TaskList>\\n\\t\\t<CollectTimout>15</CollectTimout>\\n\\t\\t<CollectInterval>0</CollectInterval>\\n\\t\\t<Description></Description>\\n\\t\\t<TaskId>36****</TaskId>\\n\\t\\t<CreateTime>1639382496000</CreateTime>\\n\\t\\t<YARMConfig></YARMConfig>\\n\\t\\t<CollectTargetPath></CollectTargetPath>\\n\\t\\t<Namespace>aliyun</Namespace>\\n\\t\\t<GroupId>0</GroupId>\\n\\t\\t<MatchExpressRelation></MatchExpressRelation>\\n\\t\\t<SLSProcess>{\\\\\\"express\\\\\\":[],\\\\\\"filter\\\\\\":{\\\\\\"filters\\\\\\":[]},\\\\\\"groupby\\\\\\":[],\\\\\\"interval\\\\\\":60,\\\\\\"labels\\\\\\":[],\\\\\\"statistics\\\\\\":[{\\\\\\"alias\\\\\\":\\\\\\"referer_count\\\\\\",\\\\\\"function\\\\\\":\\\\\\"count\\\\\\",\\\\\\"key\\\\\\":\\\\\\"referer\\\\\\"}]}</SLSProcess>\\n\\t\\t<CollectTargetEndpoint></CollectTargetEndpoint>\\n\\t\\t<TaskName>aliyun_task</TaskName>\\n\\t\\t<UploadRegion>unknown</UploadRegion>\\n\\t\\t<NetworkType>vpc</NetworkType>\\n\\t\\t<TaskType>aliyun_sls</TaskType>\\n\\t\\t<CollectTargetType></CollectTargetType>\\n\\t\\t<TargetUserId></TargetUserId>\\n\\t</TaskList>\\n\\t<Code>200</Code>\\n\\t<Success>true</Success>\\n</DescribeHybridMonitorTaskListResponse>\\t","errorExample":""}]',
      'title' => '查询数据接入任务列表',
      'description' => '本文将提供一个示例，查询当前账号下的所有数据接入任务。返回结果显示，当前账号下只有一个数据接入任务`aliyun_task`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'PutHybridMonitorMetricData' => 
    array (
      'summary' => '调用PutHybridMonitorMetricData接口将指定监控数据上报至企业云监控的指定指标仓库中。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指标仓库名称。

关于如何获取指标仓库名称，请参见[DescribeHybridMonitorNamespaceList](~~428880~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'default-aliyun',
          ),
        ),
        1 => 
        array (
          'name' => 'MetricList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '上报的监控数据',
            'description' => '监控数据列表。

N的取值范围：1~100。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'Name' => 
                array (
                  'title' => '指标名，只能是英文字母、数字、下划线',
                  'description' => '监控指标名称。

N的取值范围：1~100。

格式：由大写字母、小写字母、数字和下划线（_）组成。开头必须为大写字母或小写字母。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'CPU_Usage',
                  'maxLength' => 128,
                  'minLength' => 1,
                  'pattern' => '^[a-zA-Z_][a-zA-Z0-9_]*$',
                ),
                'Labels' => 
                array (
                  'title' => '标签，Key只能是英文字母、数字、下划线',
                  'description' => '监控指标的标签列表。

N的取值范围：1~100。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '无。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Key' => 
                      array (
                        'title' => '只能是英文字母、数字、下划线',
                        'description' => '监控指标的标签键。

N的取值范围：1~100。

格式：由大写字母、小写字母、数字和下划线（_）组成。开头必须为大写字母、小写字母或下划线。

> Key和Value必须同时设置。',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'IP',
                      ),
                      'Value' => 
                      array (
                        'description' => '监控指标的标签值。

N的取值范围：1~100。

> Key和Value必须同时设置。',
                        'type' => 'string',
                        'required' => false,
                        'example' => '192.168.XX.XX',
                      ),
                    ),
                    'required' => false,
                  ),
                  'required' => false,
                  'example' => 'app、ip、hostName等标识信息',
                  'maxItems' => 20,
                ),
                'Value' => 
                array (
                  'title' => '监控值，浮点或整型',
                  'description' => '监控指标的取值。

N的取值范围：1~100。

格式：整数或浮点数。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '90',
                  'pattern' => '^[0-9\\.]*$',
                ),
                'TS' => 
                array (
                  'title' => '时间戳，unix毫秒数，如果不传会使用服务器时间',
                  'description' => '监控数据上报的时间戳。

N的取值范围：1~100。

单位：毫秒。默认值为当前时间。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '1640776119473',
                ),
              ),
              'required' => true,
            ),
            'required' => true,
            'maxItems' => 100,
            'minItems' => 1,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'title' => '返回code',
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'title' => '请求的requestId',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5DB1CBCA-D14A-55FA-814F-B4DBD9735F68',
              ),
              'ErrorDetail' => 
              array (
                'title' => '不合法的指标信息',
                'description' => '错误参数的详情。

如果您设置的请求参数不符合要求，则会显示错误参数的详情。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Index' => 
                    array (
                      'title' => '错误数据在上报列表中的序号，从0开始',
                      'description' => '错误信息在数组中的位置。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '0',
                    ),
                    'ErrorMessage' => 
                    array (
                      'title' => '错误信息',
                      'description' => '错误参数的提示信息。',
                      'type' => 'string',
                      'example' => 'label name :123 not match [a-zA-Z_][a-zA-Z0-9_]*',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"RequestId\\": \\"5DB1CBCA-D14A-55FA-814F-B4DBD9735F68\\",\\n  \\"ErrorDetail\\": [\\n    {\\n      \\"Index\\": 0,\\n      \\"ErrorMessage\\": \\"label name :123 not match [a-zA-Z_][a-zA-Z0-9_]*\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<PutHybridMonitorMetricDataResponse>\\r\\n\\t<RequestId>5DB1CBCA-D14A-55FA-814F-B4DBD9735F68</RequestId>\\r\\n\\t<Code>200</Code>\\r\\n</PutHybridMonitorMetricDataResponse>\\t","errorExample":""}]',
      'title' => '上报监控数据至指标仓库',
      'description' => '# 前提条件
请确保您已开通企业云监控。具体操作，请参见[开通企业云监控](~~250773~~)。

# 使用限制
单次上报监控数据小于等于1 MB。

# 使用说明
本文将提供一个示例，将监控指标`CPU_Usage`的监控数据上报至企业云监控的指标仓库`default-aliyun`中。

',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。

',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeHybridMonitorDataList' => 
    array (
      'summary' => '调用DescribeHybridMonitorDataList接口查询指定指标仓库中的监控数据。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指标仓库名称。

关于如何获取指标仓库名称，请参见[DescribeHybridMonitorNamespaceList](~~428880~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => false,
            'example' => 'default-aliyun',
          ),
        ),
        1 => 
        array (
          'name' => 'PromSQL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控指标。

> 支持PromQL查询语句。',
            'type' => 'string',
            'required' => true,
            'docRequired' => false,
            'example' => 'AliyunEcs_cpu_total',
          ),
        ),
        2 => 
        array (
          'name' => 'Start',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间戳。

单位：秒。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => false,
            'example' => '1653804865',
          ),
        ),
        3 => 
        array (
          'name' => 'End',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间戳。

单位：秒。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => false,
            'example' => '1653805225',
          ),
        ),
        4 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控数据的统计周期。

单位：秒。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '60',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'end timestamp must not be before start time.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C240412F-3F5F-50E2-ACEC-DE808EF9C4BE',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'TimeSeries' => 
              array (
                'description' => '监控指标的时间线列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MetricName' => 
                    array (
                      'description' => '监控指标名称。',
                      'type' => 'string',
                      'example' => 'AliyunEcs_cpu_total',
                    ),
                    'Labels' => 
                    array (
                      'description' => '时间维度的标签。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '无。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'K' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'instanceId',
                          ),
                          'V' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'i-rj99xc6cptkk64ml****',
                          ),
                        ),
                      ),
                    ),
                    'Values' => 
                    array (
                      'description' => '时间点的值。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '无。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'V' => 
                          array (
                            'description' => '监控指标的值。',
                            'type' => 'string',
                            'example' => '0.13',
                          ),
                          'Ts' => 
                          array (
                            'description' => '监控指标值对应的时间戳。

单位：秒。',
                            'type' => 'string',
                            'example' => '1653804865',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'BadRequest',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => 'Resources already exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"end timestamp must not be before start time.\\",\\n  \\"RequestId\\": \\"C240412F-3F5F-50E2-ACEC-DE808EF9C4BE\\",\\n  \\"Success\\": \\"true\\",\\n  \\"TimeSeries\\": [\\n    {\\n      \\"MetricName\\": \\"AliyunEcs_cpu_total\\",\\n      \\"Labels\\": [\\n        {\\n          \\"K\\": \\"instanceId\\",\\n          \\"V\\": \\"i-rj99xc6cptkk64ml****\\"\\n        }\\n      ],\\n      \\"Values\\": [\\n        {\\n          \\"V\\": \\"0.13\\",\\n          \\"Ts\\": \\"1653804865\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeHybridMonitorDataList>\\n\\t<TimeSeries>\\n\\t\\t<MetricName>AliyunEcs_cpu_total</MetricName>\\n\\t\\t<Values>\\n\\t\\t\\t<V>0.13</V>\\n\\t\\t\\t<Ts>1653804865</Ts>\\n\\t\\t</Values>\\n\\t\\t<Values>\\n\\t\\t\\t<V>0.13</V>\\n\\t\\t\\t<Ts>1653804925</Ts>\\n\\t\\t</Values>\\n\\t\\t<Values>\\n\\t\\t\\t<V>0.13</V>\\n\\t\\t\\t<Ts>1653804985</Ts>\\n\\t\\t</Values>\\n\\t\\t<Values>\\n\\t\\t\\t<V>0.17</V>\\n\\t\\t\\t<Ts>1653805045</Ts>\\n\\t\\t</Values>\\n\\t\\t<Values>\\n\\t\\t\\t<V>0.23</V>\\n\\t\\t\\t<Ts>1653805105</Ts>\\n\\t\\t</Values>\\n\\t\\t<Values>\\n\\t\\t\\t<V>0.2</V>\\n\\t\\t\\t<Ts>1653805165</Ts>\\n\\t\\t</Values>\\n\\t\\t<Values>\\n\\t\\t\\t<V>0.13</V>\\n\\t\\t\\t<Ts>1653805225</Ts>\\n\\t\\t</Values>\\n\\t\\t<Labels>\\n\\t\\t\\t<V>rg-acfmw3ty5y7****</V>\\n\\t\\t\\t<K>rmgroup_id</K>\\n\\t\\t</Labels>\\n\\t\\t<Labels>\\n\\t\\t\\t<V>ESS</V>\\n\\t\\t\\t<K>tag_ess</K>\\n\\t\\t</Labels>\\n\\t\\t<Labels>\\n\\t\\t\\t<V>hostname1</V>\\n\\t\\t\\t<K>hostname</K>\\n\\t\\t</Labels>\\n\\t\\t<Labels>\\n\\t\\t\\t<V>i-rj99xc6cptkk64ml****</V>\\n\\t\\t\\t<K>instanceId</K>\\n\\t\\t</Labels>\\n\\t\\t<Labels>\\n\\t\\t\\t<V>cn-hangzhou</V>\\n\\t\\t\\t<K>regionId</K>\\n\\t\\t</Labels>\\n\\t\\t<Labels>\\n\\t\\t\\t<V>192.168.XX.XX</V>\\n\\t\\t\\t<K>ipgroup</K>\\n\\t\\t</Labels>\\n\\t\\t<Labels>\\n\\t\\t\\t<V>120886317861****</V>\\n\\t\\t\\t<K>userId</K>\\n\\t\\t</Labels>\\n\\t</TimeSeries>\\n\\t<RequestId>C240412F-3F5F-50E2-ACEC-DE808EF9C4BE</RequestId>\\n\\t<Code>200</Code>\\n\\t<Success>true</Success>\\n</DescribeHybridMonitorDataList>\\t","errorExample":""}]',
      'title' => '查询指定指标仓库中的监控数据',
      'description' => '# 前提条件
请确保您已开通企业云监控。具体操作，请参见[开通企业云监控](~~250773~~)。

# 使用限制
单次最多返回监控数据1.5 MB。如果返回数据过大，则查询失败，请您重新设置查询条件。

# 使用说明
本文将提供一个示例，查询指标仓库`default-aliyun`中监控指标`AliyunEcs_cpu_total`在指定时间`1653804865`（2022-05-29 14:14:25）至`1653805225`（2022-05-29 14:20:25）内的监控数据。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'CreateHybridMonitorSLSGroup' => 
    array (
      'summary' => '调用CreateHybridMonitorSLSGroup接口为SLS日志的监控项创建Logstore组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SLSGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Logstore组名称。

长度为2~32个字符，由大写字母、小写字母、数字和下划线（_）组成。开头必须为大写字母或小写字母。',
            'type' => 'string',
            'required' => true,
            'example' => 'Logstore_test',
          ),
        ),
        1 => 
        array (
          'name' => 'SLSGroupDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Logstore组描述。',
            'type' => 'string',
            'required' => false,
            'example' => '阿里云产品归属的Logstore组。',
          ),
        ),
        2 => 
        array (
          'name' => 'SLSGroupConfig',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'Logstore组的配置信息。

N的取值范围：1~25。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'SLSRegion' => 
                array (
                  'description' => '地域。

N的取值范围：1~25。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'cn-hangzhou',
                ),
                'SLSProject' => 
                array (
                  'description' => '日志项目。

N的取值范围：1~25。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'aliyun-project',
                ),
                'SLSLogstore' => 
                array (
                  'description' => '日志库。

N的取值范围：1~25。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Logstore-ECS',
                ),
                'SLSUserId' => 
                array (
                  'description' => '成员ID。

N的取值范围：1~25。

当您通过管理账号调用API时，可以选择将资源目录中的任意成员的阿里云产品接入企业云监控。通过资源目录实现企业跨账号统一监控目标阿里云产品。

> 如果目标成员初次使用云监控，则需要确保该成员已授权云监控服务关联角色（AliyunServiceRoleForCloudMonitor）。更多信息，请参见[云监控服务关联角色](~~170423~~)。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '120886317861****',
                ),
              ),
              'required' => true,
            ),
            'required' => true,
            'maxItems' => 30,
            'minItems' => 1,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Duplicate.SLSGroup',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '66683237-7126-50F8-BBF8-D67ACC919A17',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterInvalid',
            'errorMessage' => 'The parameter is missing or invalid. %s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAuthorization',
            'errorMessage' => 'Permission denied.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified resource is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Duplicate.SLSGroup\\",\\n  \\"RequestId\\": \\"66683237-7126-50F8-BBF8-D67ACC919A17\\",\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateHybridMonitorSLSGroupResponse>\\n    <RequestId>66683237-7126-50F8-BBF8-D67ACC919A17</RequestId>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</CreateHybridMonitorSLSGroupResponse>","errorExample":""}]',
      'title' => '为SLS日志的监控项创建Logstore组',
      'description' => '# 前提条件
请确保您已开通SLS日志服务，且已创建日志项目（Project）和日志库（Logstore）。具体操作，请参见[快速入门](~~54604~~)。

# 使用说明
本文将提供一个示例，创建一个Logstore组`Logstore_test`，其中地域为`cn-hangzhou`、日志项目为`aliyun-project`，日志库为`Logstore-ECS`。返回结果显示，创建Logstore组成功。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'ModifyHybridMonitorSLSGroup' => 
    array (
      'summary' => '调用ModifyHybridMonitorSLSGroup接口修改Logstore组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SLSGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Logstore组名称。

关于如何获取Logstore组名称，请参见[DescribeHybridMonitorSLSGroup](~~429526~~)。




',
            'type' => 'string',
            'required' => true,
            'example' => 'Logstore_test',
          ),
        ),
        1 => 
        array (
          'name' => 'SLSGroupDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Logstore组描述。',
            'type' => 'string',
            'required' => false,
            'example' => '阿里云产品归属的Logstore组。',
          ),
        ),
        2 => 
        array (
          'name' => 'SLSGroupConfig',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'Logstore组的配置信息。

N的取值范围：1~25。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '无。',
              'type' => 'object',
              'properties' => 
              array (
                'SLSRegion' => 
                array (
                  'description' => '地域。

N的取值范围：1~25。

',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'cn-hangzhou',
                ),
                'SLSProject' => 
                array (
                  'description' => '日志项目。

N的取值范围：1~25。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'aliyun-project',
                ),
                'SLSLogstore' => 
                array (
                  'description' => '日志库。

N的取值范围：1~25。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Logstore-aliyun-all',
                ),
                'SLSUserId' => 
                array (
                  'description' => '成员ID。

N的取值范围：1~25。

当您通过管理账号调用API时，可以选择将资源目录中的任意成员的阿里云产品接入企业云监控。通过资源目录实现企业跨账号统一监控目标阿里云产品。

> 如果目标成员初次使用云监控，则需要确保该成员已授权云监控服务关联角色（AliyunServiceRoleForCloudMonitor）。更多信息，请参见[云监控服务关联角色](~~170423~~)。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '120886317861****',
                ),
              ),
              'required' => true,
            ),
            'required' => true,
            'maxItems' => 30,
            'minItems' => 1,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'NotFound.SLSGroup',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '66683237-7126-50F8-BBF8-D67ACC919A17',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"NotFound.SLSGroup\\",\\n  \\"RequestId\\": \\"66683237-7126-50F8-BBF8-D67ACC919A17\\",\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyHybridMonitorSLSGroupResponse>\\n    <RequestId>66683237-7126-50F8-BBF8-D67ACC919A17</RequestId>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</ModifyHybridMonitorSLSGroupResponse>","errorExample":""}]',
      'title' => '修改Logstore组',
      'description' => '本文将提供一个示例，将Logstore组`Logstore_test`中地域`cn-hangzhou`下的日志项目`aliyun-project`中的日志库修改为`Logstore-aliyun-all`。返回结果显示，修改Logstore组成功。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'DeleteHybridMonitorSLSGroup' => 
    array (
      'summary' => '调用DeleteHybridMonitorSLSGroup接口删除Logstore组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SLSGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Logstore组名称。

关于如何获取Logstore组名称，请参见[DescribeHybridMonitorSLSGroup](~~429526~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'Logstore_test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'RESOURCE_NOT_FOUND',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '85198BFF-1DE6-556E-B6A4-C77C51C62B8D',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"RESOURCE_NOT_FOUND\\",\\n  \\"RequestId\\": \\"85198BFF-1DE6-556E-B6A4-C77C51C62B8D\\",\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteHybridMonitorSLSGroupResponse>\\n    <RequestId>85198BFF-1DE6-556E-B6A4-C77C51C62B8D</RequestId>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</DeleteHybridMonitorSLSGroupResponse>","errorExample":""}]',
      'title' => '删除Logstore组',
      'description' => '本文将提供一个示例，删除Logstore组`Logstore_test`。返回结果显示，删除Logstore组成功。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'DescribeHybridMonitorSLSGroup' => 
    array (
      'summary' => '调用DescribeHybridMonitorSLSGroup接口查询Logstore组列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键字。',
            'type' => 'string',
            'required' => false,
            'example' => 'Logstore',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页时每页显示的数据行数。

起始值：1。默认值：10。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。

起始值：1。默认值：1。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'SLSGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Logstore组名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'Logstore_test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'NotFound.SLSGroup',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '66683237-7126-50F8-BBF8-D67ACC919A17',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。
- false：失败。',
                'type' => 'string',
                'example' => '无。',
              ),
              'List' => 
              array (
                'description' => 'Logstore组列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '无。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SLSGroupName' => 
                    array (
                      'description' => 'Logstore组名称。',
                      'type' => 'string',
                      'format' => 'int64',
                      'example' => 'Logstore_test',
                    ),
                    'SLSGroupDescription' => 
                    array (
                      'description' => 'Logstore组描述。',
                      'type' => 'string',
                      'example' => '阿里云产品归属的Logstore组。',
                    ),
                    'SLSGroupConfig' => 
                    array (
                      'description' => 'Logstore组的配置信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '无。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'SLSRegion' => 
                          array (
                            'description' => '地域。',
                            'type' => 'string',
                            'example' => 'cn-hangzhou',
                          ),
                          'SLSProject' => 
                          array (
                            'description' => '日志项目。',
                            'type' => 'string',
                            'example' => 'aliyun-project',
                          ),
                          'SLSLogstore' => 
                          array (
                            'description' => '日志库。',
                            'type' => 'string',
                            'example' => 'Logstore-aliyun-all',
                          ),
                          'SLSUserId' => 
                          array (
                            'description' => '成员ID。

> 当您通过管理账号调用API时，显示该参数。
',
                            'type' => 'string',
                            'example' => '120886317861****',
                          ),
                        ),
                      ),
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建Logstore组的时间戳。

单位：毫秒。',
                      'type' => 'string',
                      'example' => '1652845630000',
                    ),
                    'UpdateTime' => 
                    array (
                      'description' => '修改Logstore组的时间戳。

单位：毫秒。',
                      'type' => 'string',
                      'example' => '1652845630000',
                    ),
                  ),
                ),
              ),
              'PageSize' => 
              array (
                'description' => '分页时每页显示的数据行数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页面。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        412 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"NotFound.SLSGroup\\",\\n  \\"RequestId\\": \\"66683237-7126-50F8-BBF8-D67ACC919A17\\",\\n  \\"Success\\": \\"无。\\",\\n  \\"List\\": [\\n    {\\n      \\"SLSGroupName\\": 0,\\n      \\"SLSGroupDescription\\": \\"阿里云产品归属的Logstore组。\\",\\n      \\"SLSGroupConfig\\": [\\n        {\\n          \\"SLSRegion\\": \\"cn-hangzhou\\",\\n          \\"SLSProject\\": \\"aliyun-project\\",\\n          \\"SLSLogstore\\": \\"Logstore-aliyun-all\\",\\n          \\"SLSUserId\\": \\"120886317861****\\"\\n        }\\n      ],\\n      \\"CreateTime\\": \\"1652845630000\\",\\n      \\"UpdateTime\\": \\"1652845630000\\"\\n    }\\n  ],\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"Total\\": 2\\n}","errorExample":""},{"type":"xml","example":"<DescribeHybridMonitorSLSGroupResponse>\\n    <RequestId>66683237-7126-50F8-BBF8-D67ACC919A17</RequestId>\\n    <PageSize>10</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <Total>2</Total>\\n    <List>\\n        <CreateTime>1652845630000</CreateTime>\\n        <SLSGroupName>Logstore_test</SLSGroupName>\\n        <UpdateTime>1652845630000</UpdateTime>\\n        <SLSGroupDescription/>\\n        <SLSGroupConfig>\\n            <SLSProject>aliyun-project</SLSProject>\\n            <SLSRegion>cn-hangzhou</SLSRegion>\\n            <SLSLogstore>Logstore-aliyun-all</SLSLogstore>\\n        </SLSGroupConfig>\\n    </List>\\n    <List>\\n        <CreateTime>1649230049000</CreateTime>\\n        <SLSGroupName>Logstore_aliyun</SLSGroupName>\\n        <UpdateTime>1649230049000</UpdateTime>\\n        <SLSGroupDescription/>\\n        <SLSGroupConfig>\\n            <SLSProject>aliyun-test</SLSProject>\\n            <SLSRegion>cn-qingdao</SLSRegion>\\n            <SLSLogstore>oss_log</SLSLogstore>\\n        </SLSGroupConfig>\\n    </List>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</DescribeHybridMonitorSLSGroupResponse>","errorExample":""}]',
      'title' => '查询Logstore组列表',
      'description' => '本文将提供一个示例，查询当前账号下的所有Logstore组。返回结果显示，当前账号下有两个Logstore组，分别是`Logstore_test`和`Logstore_aliyun`。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'Cursor' => 
    array (
      'summary' => '调用Cursor接口定义导出监控数据的范围，并返回用于初始调用BatchExport接口的Cursor值。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '云产品的数据命名空间。

关于如何获取云产品的数据命名空间，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        1 => 
        array (
          'name' => 'Metric',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '云产品的监控项名称。

关于如何获取云产品的监控项名称，请参见[云产品监控项](~~163515~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'cpu_idle',
          ),
        ),
        2 => 
        array (
          'name' => 'Period',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '监控项的时间间隔。

单位：秒。

> 监控项的时间间隔通常为60秒。特殊取值，请参见[云产品监控项](~~163515~~)中的参数`Period`。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '60',
          ),
        ),
        3 => 
        array (
          'name' => 'StartTime',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '开始时间戳。

支持Format格式（YYYY-MM-DDThh:mm:ssZ），例如：2023-01-01T00:00:00Z，表示GMT时间2023年01月01日零时零分零秒。

> 云监控不同时间粒度的监控数据TTL不同，请具体参考`Period`输入参数对应的数据TTL，设置合理的时间间隔。',
            'type' => 'string',
            'required' => true,
            'example' => '1641627000000',
          ),
        ),
        4 => 
        array (
          'name' => 'EndTime',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '结束时间戳。

单位：毫秒。

> - Unix时间戳：从1970年01月01日开始所经过的毫秒数。支持Format格式（YYYY-MM-DDThh:mm:ssZ），例如：2023-01-01T00:00:00Z，表示GMT时间2023年01月01日零时零分零秒。
- 不设置结束时间，表示结束时间无限大，使用实时导出的场景，可不设置该参数。
- 云监控不同时间粒度的监控数据TTL不同，具体请参见`Period`输入参数对应的数据TTL，设置合理的时间间隔。',
            'type' => 'string',
            'required' => false,
            'example' => '1641645000000',
          ),
        ),
        5 => 
        array (
          'name' => 'Matchers',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '监控项的维度信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '监控项的维度信息。',
              'required' => false,
              '$ref' => '#/components/schemas/Matcher',
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'CursorPopResponse',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Cursor' => 
              array (
                'description' => 'Cursor在[BatchExport](~~2329847~~)接口中作为输入参数进行数据导出。

',
                'type' => 'string',
                'example' => 'v2.5eyJiYXRjaGVzIjoxLCJidWNrZXRCeXRlcyI6IndBPT0iLCJidWNrZXRzIjo0LCJjdXJyZW50QnVja2V0IjotNjQsImN1cnJlbnRUYXJnZXRUaW1lU2xvdCI6MTY3ODc1MjAwMCwiZW5kVGltZSI6MTY3ODc4MjQxOTAwMCwiZXhwb3J0RW5kVGltZSI6MTY3ODc4MjQxOTAwMCwiZXhwb3J0U3RhcnRUaW1lIjoxNjc4NzgxODE5MDAwLCJleHByZXNzUmFuZ2UiOmZhbHNlLCJoYXNOZXh0Ijp0cnVlLCJpbmRleCI6MCwibGF0ZXN0TG9nVGltZSI6MCwibWF0Y2hlcnMiOnsiY2hhaW4iOlt7ImxhYmVsIjoidXNlcklkIiwib3BlcmF0b3IiOiJFUVVBTFMiLCJ2YWx1ZSI6IjEyNzA2NzY2Nzk1NDY3MDQifV0sImxvY2tlZCI6dHJ1ZX0sIm1ldHJpYyI6IlNwbGl0cndQcm94eU1heFJlc3BvbnNlU2l6ZSIsIm1ldHJpY1R5cGUiOiJNRVRSSUMiLCJuYW1lc3BhY2UiOiJhY3Nfa3ZzdG9yZV9leCIsIm5leHRQa0FkYXB0ZXIiOnsiZGltIjoiVjowXG5EOmB1c2VySWRgPTEyNzA2NzY2Nzk1NDY3MDQsYGluc3RhbmNlSWRgPXItcmo5ZjlzMTlsc3V1MXd1bnVyLGBub2RlSWRgPXItcmo5ZjlzMTlsc3V1MXd1bnVyLXByb3h5LTIsXG4iLCJtZXRhIjoiXG5WOjBcbk06YWNzX2t2c3RvcmVfZXgvU3BsaXRyd1Byb3h5TWF4UmVzcG9uc2VTaXplXG5XOjYwXG5COjRcbkk6LTFcblQ6MFxuQzpgQXZlcmFnZWAsYE1heGltdW1gLGBfX2NvdW50X19gLGBfX3RzX19gXG4iLCJyZCI6InN1YkFMU0RwWXY2K0t6aENQQUFBWkErNUFKMEpjbGErRGd2V0hFNWxDSHMvbGtqR2FXYTFJTkVwdFE9PSIsInRhZyI6IiJ9LCJvZmZzZXQiOjAsIm9mZnNldERpZ2l0Ijo0NTU0NTczNDQyMTc4NDIxMjIsInN0YXJ0VGltZSI6MTY3ODc4MTgxOTAwMCwic3RlcCI6LTEsInRhZ01hdGNoZXJzIjp7ImNoYWluIjpbXSwibG9ja2VkIjp0cnVlfSwidGFyZ2V0VGltZVNsb3RzIjpbMTY3ODY2NTYwMCwxNjc4NzUyMDAwXSwidXVpZCI6ImQwMmFhZmY1LWU3ZGQtNDUyYy0***********',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '915C2D7A-E6A4-17C3-8E13-4DBDD61E7919',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
          1 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"success\\",\\n  \\"Cursor\\": \\"v2.5eyJiYXRjaGVzIjoxLCJidWNrZXRCeXRlcyI6IndBPT0iLCJidWNrZXRzIjo0LCJjdXJyZW50QnVja2V0IjotNjQsImN1cnJlbnRUYXJnZXRUaW1lU2xvdCI6MTY3ODc1MjAwMCwiZW5kVGltZSI6MTY3ODc4MjQxOTAwMCwiZXhwb3J0RW5kVGltZSI6MTY3ODc4MjQxOTAwMCwiZXhwb3J0U3RhcnRUaW1lIjoxNjc4NzgxODE5MDAwLCJleHByZXNzUmFuZ2UiOmZhbHNlLCJoYXNOZXh0Ijp0cnVlLCJpbmRleCI6MCwibGF0ZXN0TG9nVGltZSI6MCwibWF0Y2hlcnMiOnsiY2hhaW4iOlt7ImxhYmVsIjoidXNlcklkIiwib3BlcmF0b3IiOiJFUVVBTFMiLCJ2YWx1ZSI6IjEyNzA2NzY2Nzk1NDY3MDQifV0sImxvY2tlZCI6dHJ1ZX0sIm1ldHJpYyI6IlNwbGl0cndQcm94eU1heFJlc3BvbnNlU2l6ZSIsIm1ldHJpY1R5cGUiOiJNRVRSSUMiLCJuYW1lc3BhY2UiOiJhY3Nfa3ZzdG9yZV9leCIsIm5leHRQa0FkYXB0ZXIiOnsiZGltIjoiVjowXG5EOmB1c2VySWRgPTEyNzA2NzY2Nzk1NDY3MDQsYGluc3RhbmNlSWRgPXItcmo5ZjlzMTlsc3V1MXd1bnVyLGBub2RlSWRgPXItcmo5ZjlzMTlsc3V1MXd1bnVyLXByb3h5LTIsXG4iLCJtZXRhIjoiXG5WOjBcbk06YWNzX2t2c3RvcmVfZXgvU3BsaXRyd1Byb3h5TWF4UmVzcG9uc2VTaXplXG5XOjYwXG5COjRcbkk6LTFcblQ6MFxuQzpgQXZlcmFnZWAsYE1heGltdW1gLGBfX2NvdW50X19gLGBfX3RzX19gXG4iLCJyZCI6InN1YkFMU0RwWXY2K0t6aENQQUFBWkErNUFKMEpjbGErRGd2V0hFNWxDSHMvbGtqR2FXYTFJTkVwdFE9PSIsInRhZyI6IiJ9LCJvZmZzZXQiOjAsIm9mZnNldERpZ2l0Ijo0NTU0NTczNDQyMTc4NDIxMjIsInN0YXJ0VGltZSI6MTY3ODc4MTgxOTAwMCwic3RlcCI6LTEsInRhZ01hdGNoZXJzIjp7ImNoYWluIjpbXSwibG9ja2VkIjp0cnVlfSwidGFyZ2V0VGltZVNsb3RzIjpbMTY3ODY2NTYwMCwxNjc4NzUyMDAwXSwidXVpZCI6ImQwMmFhZmY1LWU3ZGQtNDUyYy0***********\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"RequestId\\": \\"915C2D7A-E6A4-17C3-8E13-4DBDD61E7919\\"\\n}","errorExample":""},{"type":"xml","example":"<CursorResponse>\\n\\t<RequestId>915C2D7A-E6A4-17C3-8E13-4DBDD61E7919</RequestId>\\n\\t<Message>success</Message>\\n\\t<Data>\\n\\t\\t<Cursor>eyJidWNrZXRzIjo0LCJjdXJzb3IiOiIxNjQxNDU0MzIwMDAwMWUxY2YxNWY0NTU0MTliZjllYTY4OWQ2ODI1OTU1Yzc1NmZjMDQ2OTMxMzczMzM2MzUzMTMxMzEzMzM0MzMzODM5MzEzMTMwMjQyYzY5MmQ3NTY2MzYzMjY3NmI2ZjM5MzU2YjY4MzAzMTYyNzg3MTcwNjkzMTM3MjQyYyIsImN1cnNvclZlcnNpb24iOiJxdWVyeSIsImVuZFRpbWUiOjE2NDE0NTQ3OTU4MjMsImV4cG9ydEVuZFRpbWUiOjE2NDE0NTQ3OTU4MjMsImV4cG9ydFN0YXJ0VGltZSI6MTY0MTQ1NDE5NTgyMywiZXhwcmVzc1JhbmdlIjpmYWxzZSwiaGFzTmV4dCI6dHJ1ZSwiaW5wdXRNZXRyaWMiOiJDUFVVdGlsaXphdGlvbiIsImlucHV0TmFtZXNwYWNlIjoiYWNzX2Vjc19kYXNoYm9hcmQiLCJsaW1pdCI6MTAwMCwibG9nVGltZU1vZGUiOnRydWUsIm1hdGNoZXJzIjp7ImNoYWluIjpbeyJsYWJlbCI6InVzZXJJZCIsIm9wZXJhdG9yIjoiRVFVQUxTIiwidmFsdWUiOiIxNzM2NTExMTM0Mzg5MTEwIn1dfSwibWV0cmljIjoiQ1BVVXRpbGl6YXRpb24iLCJtZXRyaWNUeXBlIjoiTUVUUklDIiwibmFtZXNwYWNlIjoiYWNzX2Vjc19kYXNoYm9hcmQiLCJuZXh0UGtBZGFwdGVyIjp7fSwib2Zmc2V0IjowLCJwYXJlbnRVaWQiOjEyNzA2NzY2Nzk1NDY3MDQsInN0YXJ0VGltZSI6MTY0MTQ1NDE5NTgyMywic3RlcCI6LTEsInRpbWVvdXQiOjEyMCwid2luZG93Ijo2****</Cursor>\\n\\t</Data>\\n\\t<Code>200</Code>\\n\\t<Success>true</Success>\\n</CursorResponse>\\t","errorExample":""}]',
      'title' => '定义导出监控数据的范围',
      'description' => '### 前提条件
请确保您已开通企业云监控。具体操作，请参见[开通企业云监控](~~250773~~)。

### 背景信息
先调用本接口获取初始的Cursor，再调用[BatchExport](~~2329847~~)接口导出监控数据。
### 使用说明
本文将提供一个示例，定义云产品`acs_ecs_dashboard`的监控项`cpu_idle`在时间段`1641627000000`（2022-01-08 15:30:00）至`1641645000000`（2022-01-08 20:30:00）内每60秒的数据导出范围。返回结果显示`Cursor`信息。',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'BatchExport' => 
    array (
      'summary' => '调用BatchExport接口导出在Cursor接口中定义的监控数据。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '云产品的数据命名空间。

关于如何获取云产品的数据命名空间，请参见[云产品监控项](~~163515~~)。

> 本参数必须与Cursor接口中的请求参数`Namespace`相同。',
            'type' => 'string',
            'required' => true,
            'example' => 'acs_ecs_dashboard',
          ),
        ),
        1 => 
        array (
          'name' => 'Metric',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '云产品的监控项名称。

关于如何获取云产品的监控项名称，请参见[云产品监控项](~~163515~~)。

> 本参数必须与Cursor接口中的请求参数`Metric`相同。',
            'type' => 'string',
            'required' => true,
            'example' => 'cpu_idle',
          ),
        ),
        2 => 
        array (
          'name' => 'Cursor',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '循环调用本接口导出数据时，必须输入`Cursor`的值。`Cursor`值的获取方法如下：

- 当您初次调用本接口时，必须先调用Cursor接口，获取`Cursor`的值。更多信息，请参见[Cursor](~~2330730~~)。

- 当您再次调用本接口时，可以从上次调用本接口的返回数据中获取`Cursor`的值。
',
            'type' => 'string',
            'required' => true,
            'example' => 'eyJidWNrZXRzIjo0LCJjdXJzb3IiOiIxNjQxNDU0MzIwMDAwMWUxY2YxNWY0NTU0MTliZjllYTY4OWQ2ODI1OTU1Yzc1NmZjMDQ2OTMxMzczMzM2MzUzMTMxMzEzMzM0MzMzODM5MzEzMTMwMjQyYzY5MmQ3NTY2MzYzMjY3NmI2ZjM5MzU2YjY4MzAzMTYyNzg3MTcwNjkzMTM3MjQyYyIsImN1cnNvclZlcnNpb24iOiJxdWVyeSIsImVuZFRpbWUiOjE2NDE0NTQ3OTU4MjMsImV4cG9ydEVuZFRpbWUiOjE2NDE0NTQ3OTU4MjMsImV4cG9ydFN0YXJ0VGltZSI6MTY0MTQ1NDE5NTgyMywiZXhwcmVzc1JhbmdlIjpmYWxzZSwiaGFzTmV4dCI6dHJ1ZSwiaW5wdXRNZXRyaWMiOiJDUFVVdGlsaXphdGlvbiIsImlucHV0TmFtZXNwYWNlIjoiYWNzX2Vjc19kYXNoYm9hcmQiLCJsaW1pdCI6MTAwMCwibG9nVGltZU1vZGUiOnRydWUsIm1hdGNoZXJzIjp7ImNoYWluIjpbeyJsYWJlbCI6InVzZXJJZCIsIm9wZXJhdG9yIjoiRVFVQUxTIiwidmFsdWUiOiIxNzM2NTExMTM0Mzg5MTEwIn1dfSwibWV0cmljIjoiQ1BVVXRpbGl6YXRpb24iLCJtZXRyaWNUeXBlIjoiTUVUUklDIiwibmFtZXNwYWNlIjoiYWNzX2Vjc19kYXNoYm9hcmQiLCJuZXh0UGtBZGFwdGVyIjp7fSwib2Zmc2V0IjowLCJwYXJlbnRVaWQiOjEyNzA2NzY2Nzk1NDY3MDQsInN0YXJ0VGltZSI6MTY0MTQ1NDE5NTgyMywic3RlcCI6LTEsInRpbWVvdXQiOjEyMCwid2luZG93Ijo2****',
          ),
        ),
        3 => 
        array (
          'name' => 'Length',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '每次最多返回的数据条数。

取值范围：1~10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1000',
          ),
        ),
        4 => 
        array (
          'name' => 'Measurements',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '用于定制返回数据的测量值。默认返回全部测量值。

例如：云产品`acs_ecs_dashboard`的监控指标`cpu_idle`下有三个测量值的列，分别是`Average`、`Maximum`或`Minimum`，如果只需要返回`Average`和`Maximum`两列，则该参数设置为`["Average", "Maximum"]`数组即可。

关于如何获取云产品的监控指标的测量值，请参见[云产品监控项](~~163515~~)的`statistics`列。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '测量值列名。',
              'type' => 'string',
              'required' => false,
              'example' => 'Maximum',
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '无。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Code' => 
              array (
                'description' => '状态码。

> 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '251402CD-305C-1617-808E-D8C11FC8138D',
              ),
              'Cursor' => 
              array (
                'description' => '用于再次调用本接口。

> 如果返回结果为`null`，则说明监控数据导出完成。',
                'type' => 'string',
                'example' => 'v2.5eyJidWNrZXRzIjo0LCJjdXJzb3IiOiIxNjQxNDU0ODAwMDAwMWUxY2YxNWY0NTU0MTliZjllYTY4OWQ2ODI1OTU1Yzc1NmZjMDQ2OTMxMzczMzM2MzUzMTMxMzEzMzM0MzMzODM5MzEzMTMwMjQyYzY5MmQzMjdhNjU2MjY3N2E2NjZhNzczOTY2NmM3Mjc0NjM3MzY5Njg3NDcyMjQyYyIsImN1cnNvclZlcnNpb24iOiJxdWVyeSIsImVuZFRpbWUiOjE2NDE0NTUyMzYxMTIsImV4cG9ydEVuZFRpbWUiOjE2NDE0NTUyMzYxMTIsImV4cG9ydFN0YXJ0VGltZSI6MTY0MTQ1NDYzNjExMiwiZXhwcmVzc1JhbmdlIjpmYWxzZSwiaGFzTmV4dCI6dHJ1ZSwiaW5wdXRNZXRyaWMiOiJDUFVVdGlsaXphdGlvbiIsImlucHV0TmFtZXNwYWNlIjoiYWNzX2Vjc19kYXNoYm9hcmQiLCJsaW1pdCI6MTAwMCwibG9nVGltZU1vZGUiOnRydWUsIm1hdGNoZXJzIjp7ImNoYWluIjpbeyJsYWJlbCI6InVzZXJJZCIsIm9wZXJhdG9yIjoiRVFVQUxTIiwidmFsdWUiOiIxNzM2NTExMTM0Mzg5MTEwIn1dfSwibWV0cmljIjoiQ1BVVXRpbGl6YXRpb24iLCJtZXRyaWNUeXBlIjoiTUVUUklDIiwibmFtZXNwYWNlIjoiYWNzX2Vjc19kYXNoYm9hcmQiLCJuZXh0UGtBZGFwdGVyIjp7fSwib2Zmc2V0IjowLCJwYXJlbnRVaWQiOjEyNzA2NzY2Nzk1NDY3MDQsInN0YXJ0VGltZSI6MTY0MTQ1NDYzNjExMiwic3RlcCI6LTEsInRpbWVvdXQiOjEyMCwid2luZG93Ijo2MH0***',
              ),
              'Length' => 
              array (
                'description' => '本次调用数据返回的条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1000',
              ),
              'Anchor' => 
              array (
                'description' => '后端请求数据的时间戳。时间戳越大，表示导出数据越靠近当前时间。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1678781819000',
              ),
              'HasNext' => 
              array (
                'description' => '数据是否已完成导出。取值：

- true：部分数据未完成导出。
- false：数据已完成导出。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DataResults' => 
              array (
                'description' => '当前调用的返回数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '导出数据。具体如下：
- Namespace：云产品的数据命名空间，例如：`acs_ecs_dashboard`。
- Metric：云产品的监控项名称，例如：`cpu_idle`。
- Timestamp：监控数据的时间戳（单位：毫秒），例如：1641454680000。
- Period：监控数据的统计周期（单位：秒），例如：60。
- Dimensions：用于标识监控对象（实例）的Dimension信息，例如：`[{"Label":"userId", "Value":""20654616023382****"}, {"Label":"InstanceId", "Value":""i-2ze2d6j5uhg20x4****"}]`。
- Associated：监控对象（实例）的附加信息，例如：标签信息之类，key:value键值对形式的集合，例如：`{"group":"test****", "name":"Alice"}`。
- Measurements：指标的测量值（默认多值模式），例如：`{"Average":60,"Maximum":85}`。
- LogTime：监控数据的记录时间（单位：毫秒），对于非原始数据（聚合后的数据），`LogTime`为空（NULL）。',
                  '$ref' => '#/components/schemas/MetricStat',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
          1 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
        503 => 
        array (
          0 => 
          array (
            'errorCode' => '%s',
            'errorMessage' => '%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"success\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"RequestId\\": \\"251402CD-305C-1617-808E-D8C11FC8138D\\",\\n  \\"Cursor\\": \\"v2.5eyJidWNrZXRzIjo0LCJjdXJzb3IiOiIxNjQxNDU0ODAwMDAwMWUxY2YxNWY0NTU0MTliZjllYTY4OWQ2ODI1OTU1Yzc1NmZjMDQ2OTMxMzczMzM2MzUzMTMxMzEzMzM0MzMzODM5MzEzMTMwMjQyYzY5MmQzMjdhNjU2MjY3N2E2NjZhNzczOTY2NmM3Mjc0NjM3MzY5Njg3NDcyMjQyYyIsImN1cnNvclZlcnNpb24iOiJxdWVyeSIsImVuZFRpbWUiOjE2NDE0NTUyMzYxMTIsImV4cG9ydEVuZFRpbWUiOjE2NDE0NTUyMzYxMTIsImV4cG9ydFN0YXJ0VGltZSI6MTY0MTQ1NDYzNjExMiwiZXhwcmVzc1JhbmdlIjpmYWxzZSwiaGFzTmV4dCI6dHJ1ZSwiaW5wdXRNZXRyaWMiOiJDUFVVdGlsaXphdGlvbiIsImlucHV0TmFtZXNwYWNlIjoiYWNzX2Vjc19kYXNoYm9hcmQiLCJsaW1pdCI6MTAwMCwibG9nVGltZU1vZGUiOnRydWUsIm1hdGNoZXJzIjp7ImNoYWluIjpbeyJsYWJlbCI6InVzZXJJZCIsIm9wZXJhdG9yIjoiRVFVQUxTIiwidmFsdWUiOiIxNzM2NTExMTM0Mzg5MTEwIn1dfSwibWV0cmljIjoiQ1BVVXRpbGl6YXRpb24iLCJtZXRyaWNUeXBlIjoiTUVUUklDIiwibmFtZXNwYWNlIjoiYWNzX2Vjc19kYXNoYm9hcmQiLCJuZXh0UGtBZGFwdGVyIjp7fSwib2Zmc2V0IjowLCJwYXJlbnRVaWQiOjEyNzA2NzY2Nzk1NDY3MDQsInN0YXJ0VGltZSI6MTY0MTQ1NDYzNjExMiwic3RlcCI6LTEsInRpbWVvdXQiOjEyMCwid2luZG93Ijo2MH0***\\",\\n  \\"Length\\": 1000,\\n  \\"Anchor\\": 1678781819000,\\n  \\"HasNext\\": true,\\n  \\"DataResults\\": [\\n    {\\n      \\"Namespace\\": \\"\\",\\n      \\"Metric\\": \\"\\",\\n      \\"Period\\": 0,\\n      \\"Timestamp\\": 0,\\n      \\"Dimensions\\": [\\n        {\\n          \\"Label\\": \\"\\",\\n          \\"Value\\": \\"\\"\\n        }\\n      ],\\n      \\"Associated\\": {\\n        \\"key\\": \\"\\"\\n      },\\n      \\"Measurements\\": {\\n        \\"key\\": \\"\\"\\n      },\\n      \\"LogTime\\": 0\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<BatchExportResponse>\\n    <DataResults>\\n        <Associated/>\\n        <LogTime/>\\n        <Dimensions>\\n            <Value>1270676***********</Value>\\n            <Label>userId</Label>\\n        </Dimensions>\\n        <Dimensions>\\n            <Value>r-rj9f9s*********</Value>\\n            <Label>instanceId</Label>\\n        </Dimensions>\\n        <Dimensions>\\n            <Value>r-rj9f9s19lsu*******</Value>\\n            <Label>nodeId</Label>\\n        </Dimensions>\\n        <Namespace>acs_kvstore</Namespace>\\n        <Timestamp>1678781700000</Timestamp>\\n        <Metric>SplitrwProxyMaxResponseSize</Metric>\\n        <Period>60</Period>\\n        <Measurements>\\n            <Average>0.583</Average>\\n            <Maximum>0.583</Maximum>\\n        </Measurements>\\n    </DataResults>\\n    <RequestId>733A3B5A-F082-1092-B429-1208168FC07F</RequestId>\\n    <Code>200</Code>\\n    <Length>10</Length>\\n    <Message>success</Message>\\n    <Cursor>v2.5eyJiYXRjaGVzIjoxLCJidWNrZXRCeXRlcyI6IndBPT0iLCJidWNrZXRzIjo0LCJjdXJyZW50QnVja2V0IjotNjQsImN1cnJlbnRUYXJnZXRUaW1lU2xvdCI6MTY3ODc1MjAwMCwiZW5kVGltZSI6MTY3ODc4MjQxOTAwMCwiZXhwb3J0RW5kVGltZSI6MTY3ODc4MjQxOTAwMCwiZXhwb3J0U3RhcnRUaW1lIjoxNjc4NzgxODE5MDAwLCJleHByZXNzUmFuZ2UiOmZhbHNlLCJoYXNOZXh0Ijp0cnVlLCJpbmRleCI6MCwibGF0ZXN0TG9nVGltZSI6MCwibWF0Y2hlcnMiOnsiY2hhaW4iOlt7ImxhYmVsIjoidXNlcklkIiwib3BlcmF0b3IiOiJFUVVBTFMiLCJ2YWx1ZSI6IjEyNzA2NzY2Nzk1NDY3MDQifV0sImxvY2tlZCI6dHJ1ZX0sIm1ldHJpYyI6IlNwbGl0cndQcm94eU1heFJlc3BvbnNlU2l6ZSIsIm1ldHJpY1R5cGUiOiJNRVRSSUMiLCJuYW1lc3BhY2UiOiJhY3Nfa3ZzdG9yZV9leCIsIm5leHRQa0FkYXB0ZXIiOnsiZGltIjoiVjowXG5EOmB1c2VySWRgPTEyNzA2NzY2Nzk1NDY3MDQsYGluc3RhbmNlSWRgPXItcmo5ZjlzMTlsc3V1MXd1bnVyLGBub2RlSWRgPXItcmo5ZjlzMTlsc3V1MXd1bnVyLXByb3h5LTIsXG4iLCJtZXRhIjoiXG5WOjBcbk06YWNzX2t2c3RvcmVfZXgvU3BsaXRyd1Byb3h5TWF4UmVzcG9uc2VTaXplXG5XOjYwXG5COjRcbkk6LTFcblQ6MFxuQzpgQXZlcmFnZWAsYE1heGltdW1gLGBfX2NvdW50X19gLGBfX3RzX19gXG4iLCJyZCI6InN1YkFMU0RwWXY2K0t6aENQQUFBWkErNUFKMEpjbGErRGd2V0hFNWxDSHMvbGtqR2FXYTFJTkVwdFE9PSIsInRhZyI6IiJ9LCJvZmZzZXQiOjAsIm9mZnNldERpZ2l0Ijo0NTU0NTczNDQyMTc4NDIxMjIsInN0YXJ0VGltZSI6MTY3ODc4MTgxOTAwMCwic3RlcCI6LTEsInRhZ01hdGNoZXJzIjp7ImNoYWluIjpbXSwibG9ja2VkIjp0cnVlfSwidGFyZ2V0VGltZVNsb3RzIjpbMTY3ODY2NTYwMCwxNjc4NzUyMDAwXSwidXVpZCI6ImQwMmFhZmY1LWU3ZGQtNDUyYy04ZGMwLTZlY2QxZGVhZGY***************</Cursor>\\n    <Success>true</Success>\\n    <HasNext>true</HasNext>\\n    <Anchor>1678781819000</Anchor>\\n</BatchExportResponse>","errorExample":""}]',
      'title' => '导出在Cursor中定义的监控数据',
      'description' => '### 前提条件
请确保您已调用[Cursor](~~2330730~~)接口获取初始的`Cursor`。
### 使用说明
本文将提供一个示例，导出云产品`acs_ecs_dashboard`的监控项`cpu_idle`的某个初始`Cursor`的监控数据，且每次最多返回1000条数据。
',
      'requestParamsDescription' => '关于公共请求参数的详情，请参见[公共参数](~~199331~~)。',
    ),
    'OpenCmsService' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'APP' => 
          array (
          ),
        ),
        2 => 
        array (
          'PrivateKey' => 
          array (
          ),
        ),
        3 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => true,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'OrderId' => 
              array (
                'description' => '开通服务的订单号。',
                'type' => 'string',
                'example' => '211206750270***',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E5A72B5B-4F44-438C-B68A-147FD5DC53A8',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'noSubstitutionReason' => '无替代API，历史原因导致该API被标记为弃用。',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"OrderId\\": \\"211206750270***\\",\\n  \\"RequestId\\": \\"E5A72B5B-4F44-438C-B68A-147FD5DC53A8\\"\\n}","type":"json"}]',
      'title' => '开通Cms按量付费服务',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-qingdao',
      'endpoint' => 'metrics.cn-qingdao.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'cn-beijing',
      'endpoint' => 'metrics.cn-beijing.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'cn-zhangjiakou',
      'endpoint' => 'metrics.cn-zhangjiakou.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'cn-zhengzhou-jva',
      'endpoint' => 'metrics.cn-zhengzhou-jva.aliyuncs.com',
    ),
    4 => 
    array (
      'regionId' => 'cn-huhehaote',
      'endpoint' => 'metrics.cn-huhehaote.aliyuncs.com',
    ),
    5 => 
    array (
      'regionId' => 'cn-wulanchabu',
      'endpoint' => 'metrics.cn-wulanchabu.aliyuncs.com',
    ),
    6 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'metrics.cn-hangzhou.aliyuncs.com',
    ),
    7 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'metrics.cn-shanghai.aliyuncs.com',
    ),
    8 => 
    array (
      'regionId' => 'cn-nanjing',
      'endpoint' => 'metrics.cn-nanjing.aliyuncs.com',
    ),
    9 => 
    array (
      'regionId' => 'cn-fuzhou',
      'endpoint' => 'metrics.cn-fuzhou.aliyuncs.com',
    ),
    10 => 
    array (
      'regionId' => 'cn-shenzhen',
      'endpoint' => 'metrics.cn-shenzhen.aliyuncs.com',
    ),
    11 => 
    array (
      'regionId' => 'cn-heyuan',
      'endpoint' => 'metrics.cn-heyuan.aliyuncs.com',
    ),
    12 => 
    array (
      'regionId' => 'cn-guangzhou',
      'endpoint' => 'metrics.cn-guangzhou.aliyuncs.com',
    ),
    13 => 
    array (
      'regionId' => 'cn-chengdu',
      'endpoint' => 'metrics.cn-chengdu.aliyuncs.com',
    ),
    14 => 
    array (
      'regionId' => 'cn-hongkong',
      'endpoint' => 'metrics.cn-hongkong.aliyuncs.com',
    ),
    15 => 
    array (
      'regionId' => 'ap-northeast-1',
      'endpoint' => 'metrics.ap-northeast-1.aliyuncs.com',
    ),
    16 => 
    array (
      'regionId' => 'ap-northeast-2',
      'endpoint' => 'metrics.ap-northeast-2.aliyuncs.com',
    ),
    17 => 
    array (
      'regionId' => 'ap-southeast-1',
      'endpoint' => 'metrics.ap-southeast-1.aliyuncs.com',
    ),
    18 => 
    array (
      'regionId' => 'ap-southeast-2',
      'endpoint' => 'metrics.ap-southeast-2.aliyuncs.com',
    ),
    19 => 
    array (
      'regionId' => 'ap-southeast-3',
      'endpoint' => 'metrics.ap-southeast-3.aliyuncs.com',
    ),
    20 => 
    array (
      'regionId' => 'ap-southeast-5',
      'endpoint' => 'metrics.ap-southeast-5.aliyuncs.com',
    ),
    21 => 
    array (
      'regionId' => 'ap-southeast-6',
      'endpoint' => 'metrics.ap-southeast-6.aliyuncs.com',
    ),
    22 => 
    array (
      'regionId' => 'us-east-1',
      'endpoint' => 'metrics.us-east-1.aliyuncs.com',
    ),
    23 => 
    array (
      'regionId' => 'us-west-1',
      'endpoint' => 'metrics.us-west-1.aliyuncs.com',
    ),
    24 => 
    array (
      'regionId' => 'eu-west-1',
      'endpoint' => 'metrics.eu-west-1.aliyuncs.com',
    ),
    25 => 
    array (
      'regionId' => 'eu-central-1',
      'endpoint' => 'metrics.eu-central-1.aliyuncs.com',
    ),
    26 => 
    array (
      'regionId' => 'ap-south-1',
      'endpoint' => 'metrics.ap-south-1.aliyuncs.com',
    ),
    27 => 
    array (
      'regionId' => 'me-east-1',
      'endpoint' => 'metrics.me-east-1.aliyuncs.com',
    ),
    28 => 
    array (
      'regionId' => 'cn-shanghai-finance-1',
      'endpoint' => 'metrics.cn-shanghai-finance-1.aliyuncs.com',
    ),
    29 => 
    array (
      'regionId' => 'cn-shenzhen-finance-1',
      'endpoint' => 'metrics.cn-shenzhen-finance-1.aliyuncs.com',
    ),
    30 => 
    array (
      'regionId' => 'ap-southeast-7',
      'endpoint' => 'metrics.ap-southeast-7.aliyuncs.com',
    ),
    31 => 
    array (
      'regionId' => 'cn-beijing-finance-1',
      'endpoint' => 'metrics.cn-beijing-finance-1.aliyuncs.com',
    ),
    32 => 
    array (
      'regionId' => 'me-central-1',
      'endpoint' => 'metrics.me-central-1.aliyuncs.com',
    ),
  ),
);