<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'ROA',
    'product' => 'Edas',
    'version' => '2017-08-01',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 62657,
      'title' => '系统管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DeleteRole',
        1 => 'UpdateRole',
        2 => 'UpdateAccountInfo',
        3 => 'ListRole',
        4 => 'ListSubAccount',
        5 => 'ListAuthority',
        6 => 'GetPackageStorageCredential',
        7 => 'InsertRole',
        8 => 'AuthorizeRole',
        9 => 'AuthorizeApplication',
        10 => 'AuthorizeResourceGroup',
      ),
    ),
    1 => 
    array (
      'id' => 62552,
      'title' => '资源管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 62553,
          'title' => 'ECS集群和K8s集群',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'DeleteUserDefineRegion',
            1 => 'DeleteCluster',
            2 => 'ListAliyunRegion',
            3 => 'QueryMigrateRegionList',
            4 => 'ListCluster',
            5 => 'GetCluster',
            6 => 'ListVpc',
            7 => 'QueryRegionConfig',
            8 => 'ListApplicationEcu',
            9 => 'ListResourceGroup',
            10 => 'ListTagResources',
            11 => 'TagResources',
            12 => 'UntagResources',
          ),
        ),
        1 => 
        array (
          'id' => 62559,
          'title' => 'ECS集群',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateIDCImportCommand',
            1 => 'DeleteClusterMember',
            2 => 'DeleteEcu',
            3 => 'ListClusterMembers',
            4 => 'ListEcuByRegion',
            5 => 'ListConvertableEcu',
            6 => 'ListEcsNotInCluster',
            7 => 'QueryMigrateEcuList',
            8 => 'ListScaleOutEcu',
            9 => 'ListSlb',
            10 => 'BindSlb',
            11 => 'InsertCluster',
            12 => 'InsertClusterMember',
            13 => 'InstallAgent',
            14 => 'TransformClusterMember',
            15 => 'MigrateEcu',
            16 => 'SynchronizeResource',
          ),
        ),
        2 => 
        array (
          'id' => 62575,
          'title' => 'K8s集群',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'UpdateK8sResource',
            1 => 'GetK8sCluster',
            2 => 'ListK8sNamespaces',
            3 => 'ImportK8sCluster',
          ),
        ),
      ),
    ),
    2 => 
    array (
      'id' => 62579,
      'title' => '应用管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 62580,
          'title' => 'ECS集群和K8s集群通用',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'UpdateHealthCheckUrl',
            1 => 'GetChangeOrderInfo',
            2 => 'GetSecureToken',
            3 => 'QueryEccInfo',
            4 => 'GetScalingRules',
            5 => 'ListUserDefineRegion',
            6 => 'GetContainerConfiguration',
            7 => 'ListApplication',
            8 => 'ListDeployGroup',
            9 => 'ListHistoryDeployVersion',
            10 => 'ListRecentChangeOrder',
            11 => 'ListBuildPack',
            12 => 'InsertOrUpdateRegion',
            13 => 'SwitchAdvancedMonitoring',
            14 => 'ContinuePipeline',
            15 => 'AbortChangeOrder',
            16 => 'RollbackChangeOrder',
          ),
        ),
        1 => 
        array (
          'id' => 62598,
          'title' => 'ECS集群专属',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'UpdateApplicationBaseInfo',
            1 => 'AddLogPath',
            2 => 'DeleteApplication',
            3 => 'DeleteLogPath',
            4 => 'DeleteDeployGroup',
            5 => 'UpdateHookConfiguration',
            6 => 'ModifyScalingRule',
            7 => 'StartApplication',
            8 => 'StopApplication',
            9 => 'UpdateContainer',
            10 => 'UpdateContainerConfiguration',
            11 => 'ChangeDeployGroup',
            12 => 'UpdateJvmConfiguration',
            13 => 'GetJvmConfiguration',
            14 => 'GetApplication',
            15 => 'ListComponents',
            16 => 'QueryApplicationStatus',
            17 => 'InsertDeployGroup',
            18 => 'BindEcsSlb',
            19 => 'UnbindSlb',
            20 => 'RollbackApplication',
            21 => 'InsertApplication',
            22 => 'DeployApplication',
            23 => 'ScaleoutApplicationWithNewInstances',
            24 => 'ScaleOutApplication',
            25 => 'ScaleInApplication',
            26 => 'ResetApplication',
            27 => 'RestartApplication',
          ),
        ),
        2 => 
        array (
          'id' => 62624,
          'title' => 'K8s集群专属',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateK8sService',
            1 => 'DeleteK8sApplication',
            2 => 'DeleteK8sService',
            3 => 'UpdateK8sApplicationBaseInfo',
            4 => 'UpdateK8sApplicationConfig',
            5 => 'StartK8sApplication',
            6 => 'StopK8sApplication',
            7 => 'UpdateK8sSlb',
            8 => 'UpdateK8sService',
            9 => 'UpdateSlsLogStore',
            10 => 'StartK8sAppPrecheck',
            11 => 'GetK8sApplication',
            12 => 'GetK8sServices',
            13 => 'QuerySlsLogStoreList',
            14 => 'GetAppDeployment',
            15 => 'DescribeAppInstanceList',
            16 => 'GetK8sAppPrecheckResult',
            17 => 'BindK8sSlb',
            18 => 'UnbindK8sSlb',
            19 => 'InsertK8sApplication',
            20 => 'DeployK8sApplication',
            21 => 'ScaleK8sApplication',
            22 => 'RestartK8sApplication',
            23 => 'ConvertK8sResource',
            24 => 'AbortAndRollbackChangeOrder',
          ),
        ),
      ),
    ),
    3 => 
    array (
      'id' => 62520,
      'title' => '服务管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DeleteServiceGroup',
        1 => 'GetServiceConsumersPage',
        2 => 'GetServiceListPage',
        3 => 'GetServiceMethodPage',
        4 => 'GetServiceProvidersPage',
        5 => 'ListConsumedServices',
        6 => 'ListPublishedServices',
        7 => 'GetServiceDetail',
        8 => 'ListMethods',
        9 => 'ListServiceGroups',
        10 => 'InsertServiceGroup',
      ),
    ),
    4 => 
    array (
      'id' => 62509,
      'title' => '应用路由',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateK8sIngressRule',
        1 => 'DeleteK8sIngressRule',
        2 => 'UpdateK8sIngressRule',
        3 => 'ListK8sIngressRules',
      ),
    ),
    5 => 
    array (
      'id' => 165305,
      'title' => '配置管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateConfigTemplate',
        1 => 'CreateK8sConfigMap',
        2 => 'CreateK8sSecret',
        3 => 'DeleteConfigTemplate',
        4 => 'DeleteK8sConfigMap',
        5 => 'DeleteK8sSecret',
        6 => 'UpdateConfigTemplate',
        7 => 'UpdateK8sConfigMap',
        8 => 'UpdateK8sSecret',
        9 => 'ListConfigTemplates',
        10 => 'GetJavaStartUpConfig',
        11 => 'GetWebContainerConfig',
        12 => 'ListK8sConfigMaps',
        13 => 'ListK8sSecrets',
        14 => 'RetryChangeOrderTask',
      ),
    ),
    6 => 
    array (
      'id' => 142529,
      'title' => '弹性伸缩',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateApplicationScalingRule',
        1 => 'DeleteApplicationScalingRule',
        2 => 'DisableApplicationScalingRule',
        3 => 'EnableApplicationScalingRule',
        4 => 'UpdateApplicationScalingRule',
        5 => 'DescribeApplicationScalingRules',
      ),
    ),
    7 => 
    array (
      'id' => 172451,
      'title' => '泳道管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'InsertSwimmingLaneGroup',
        1 => 'InsertSwimmingLane',
        2 => 'DeleteSwimmingLane',
        3 => 'UpdateSwimmingLaneGroup',
        4 => 'UpdateSwimmingLane',
        5 => 'ListSwimmingLaneGroup',
        6 => 'ListSwimmingLane',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
      'AppConfig' => 
      array (
        'title' => '应用配置',
        'description' => '应用配置',
        'type' => 'object',
        'properties' => 
        array (
          'ImageConfig' => 
          array (
            'title' => '镜像配置',
            'type' => 'object',
            'properties' => 
            array (
              'ImageUrl' => 
              array (
                'title' => '镜像地址',
                'type' => 'string',
              ),
              'CrRegionId' => 
              array (
                'title' => '镜像仓库Region',
                'type' => 'string',
              ),
              'CrInstanceId' => 
              array (
                'title' => '镜像服务实例ID',
                'type' => 'string',
              ),
              'ContainerRegistryId' => 
              array (
                'title' => '镜像仓库实例ID',
                'type' => 'string',
              ),
            ),
          ),
          'PackageConfig' => 
          array (
            'title' => '部署包配置',
            'type' => 'object',
            'properties' => 
            array (
              'PackageVersion' => 
              array (
                'title' => '部署包版本',
                'type' => 'string',
              ),
              'PackageType' => 
              array (
                'title' => '部署包类型',
                'type' => 'string',
              ),
              'PackageUrl' => 
              array (
                'title' => '部署包地址',
                'type' => 'string',
              ),
              'Jdk' => 
              array (
                'title' => 'JDK版本',
                'type' => 'string',
              ),
              'WebContainer' => 
              array (
                'title' => 'Tomcat版本',
                'type' => 'string',
              ),
              'EdasContainerVersion' => 
              array (
                'title' => 'Pandora版本',
                'type' => 'string',
              ),
              'Timezone' => 
              array (
                'title' => '时区',
                'type' => 'string',
              ),
              'UriEncoding' => 
              array (
                'title' => 'URI字符编码',
                'type' => 'string',
              ),
              'UseBodyEncoding' => 
              array (
                'title' => 'useBodyEncodingForURI是否启用',
                'type' => 'boolean',
              ),
            ),
          ),
          'IsMultilingualApp' => 
          array (
            'title' => '是否多语言应用',
            'type' => 'boolean',
          ),
          'Replicas' => 
          array (
            'title' => '应用实例数',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'LimitCpu' => 
          array (
            'title' => 'CPU限制',
            'type' => 'string',
          ),
          'LimitMem' => 
          array (
            'title' => '内存限制',
            'type' => 'string',
          ),
          'RequestCpu' => 
          array (
            'title' => 'CPU需求',
            'type' => 'string',
          ),
          'RequestMem' => 
          array (
            'title' => '内存需求',
            'type' => 'string',
          ),
          'Envs' => 
          array (
            'title' => '环境变量',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Name' => 
                array (
                  'title' => '变量名',
                  'type' => 'string',
                ),
                'Value' => 
                array (
                  'title' => '变量值',
                  'type' => 'string',
                ),
                'ValueFrom' => 
                array (
                  'title' => '变量引用',
                  'type' => 'string',
                ),
              ),
            ),
          ),
          'EnvFroms' => 
          array (
            'title' => '环境变量引用',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ConfigMapRef' => 
                array (
                  'title' => '配置项引用',
                  'type' => 'string',
                ),
                'SecretRef' => 
                array (
                  'title' => '保密字典引用',
                  'type' => 'string',
                ),
              ),
            ),
          ),
          'EmptyDirs' => 
          array (
            'title' => 'EmptyDir挂载配置',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Name' => 
                array (
                  'title' => '容器名称',
                  'type' => 'string',
                ),
                'ReadOnly' => 
                array (
                  'title' => '是否只读',
                  'type' => 'boolean',
                ),
                'MountPath' => 
                array (
                  'title' => '挂载路径',
                  'type' => 'string',
                ),
                'SubPathExpr' => 
                array (
                  'title' => '子路径表达式',
                  'type' => 'string',
                ),
              ),
            ),
          ),
          'LocalVolumes' => 
          array (
            'title' => '本地磁盘挂载配置',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Name' => 
                array (
                  'title' => '名称',
                  'type' => 'string',
                ),
                'Type' => 
                array (
                  'title' => '类型',
                  'type' => 'string',
                ),
                'NodePath' => 
                array (
                  'title' => '节点路径',
                  'type' => 'string',
                ),
                'MountPath' => 
                array (
                  'title' => '容器挂载路径',
                  'type' => 'string',
                ),
                'OpsAuth' => 
                array (
                  'title' => '权限类型',
                  'type' => 'integer',
                  'format' => 'int64',
                ),
              ),
            ),
          ),
          'NasId' => 
          array (
            'title' => 'NAS实例ID',
            'type' => 'string',
          ),
          'NasStorageType' => 
          array (
            'title' => 'NAS存储类型',
            'type' => 'string',
          ),
          'NasMountDescs' => 
          array (
            'title' => 'NAS挂载配置',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'MountPath' => 
                array (
                  'title' => 'NAS挂载路径',
                  'type' => 'string',
                ),
                'NasPath' => 
                array (
                  'title' => 'NAS文件路径',
                  'type' => 'string',
                ),
              ),
            ),
          ),
          'PvcMountDescs' => 
          array (
            'title' => '持久化存储挂载配置',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'PvcName' => 
                array (
                  'title' => '持久化存储名称',
                  'type' => 'string',
                ),
                'MountPaths' => 
                array (
                  'title' => '持久化存储挂载路径列表',
                  'type' => 'array',
                  'items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MountPath' => 
                      array (
                        'title' => '挂载路径',
                        'type' => 'string',
                      ),
                      'ReadOnly' => 
                      array (
                        'title' => '是否只读',
                        'type' => 'boolean',
                      ),
                      'SubPathExpr' => 
                      array (
                        'title' => '子路径表达式',
                        'type' => 'string',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
          'ConfigMountDescs' => 
          array (
            'title' => '配置项挂载配置',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Name' => 
                array (
                  'title' => '名称',
                  'type' => 'string',
                ),
                'Type' => 
                array (
                  'title' => '类型',
                  'type' => 'string',
                ),
                'MountPath' => 
                array (
                  'title' => '挂载路径',
                  'type' => 'string',
                ),
                'MountItems' => 
                array (
                  'title' => '挂载条目',
                  'type' => 'array',
                  'items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Key' => 
                      array (
                        'title' => '配置项',
                        'type' => 'string',
                      ),
                      'Path' => 
                      array (
                        'title' => '路径',
                        'type' => 'string',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
          'SlsConfigs' => 
          array (
            'title' => '日志采集配置',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Type' => 
                array (
                  'title' => '类型',
                  'type' => 'string',
                ),
                'LogDir' => 
                array (
                  'title' => '日志目录',
                  'type' => 'string',
                ),
                'Logstore' => 
                array (
                  'title' => '日志存储',
                  'type' => 'string',
                ),
                'Project' => 
                array (
                  'title' => '日志项目',
                  'type' => 'string',
                ),
              ),
            ),
          ),
          'JavaStartUpConfig' => 
          array (
            'title' => 'Java启动参数配置',
            'type' => 'string',
          ),
          'WebContainerConfig' => 
          array (
            'title' => 'Tomcat配置',
            'type' => 'object',
            'properties' => 
            array (
              'HttpPort' => 
              array (
                'title' => '应用端口',
                'type' => 'integer',
                'format' => 'int64',
              ),
              'MaxThreads' => 
              array (
                'title' => '最大线程数',
                'type' => 'integer',
                'format' => 'int64',
              ),
              'ContextInputType' => 
              array (
                'title' => 'Context选择类型',
                'type' => 'string',
              ),
              'ContextPath' => 
              array (
                'title' => 'Context路径',
                'type' => 'string',
              ),
              'UriEncoding' => 
              array (
                'title' => 'URI字符编码',
                'type' => 'string',
              ),
              'UseAdvancedServerXml' => 
              array (
                'title' => '是否使用高级配置',
                'type' => 'boolean',
              ),
              'UseBodyEncoding' => 
              array (
                'title' => 'useBodyEncodingForURI是否启用',
                'type' => 'boolean',
              ),
              'ServerXml' => 
              array (
                'title' => '自定义配置',
                'type' => 'string',
              ),
              'ConnectorType' => 
              array (
                'title' => 'connector类型',
                'type' => 'string',
              ),
              'UseDefaultConfig' => 
              array (
                'title' => '是否使用默认配置',
                'type' => 'boolean',
              ),
            ),
          ),
          'Command' => 
          array (
            'title' => '启动命令',
            'type' => 'string',
          ),
          'CommandArgs' => 
          array (
            'title' => '启动参数',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
          ),
          'Liveness' => 
          array (
            'title' => 'liveness探针配置',
            'type' => 'string',
          ),
          'Readiness' => 
          array (
            'title' => 'readiness探针配置',
            'type' => 'string',
          ),
          'PreStop' => 
          array (
            'title' => 'preStop挂钩配置',
            'type' => 'string',
          ),
          'PostStart' => 
          array (
            'title' => 'postStart挂钩配置',
            'type' => 'string',
          ),
          'RuntimeClassName' => 
          array (
            'title' => '运行时类型',
            'type' => 'string',
          ),
          'DeployAcrossZones' => 
          array (
            'title' => '是否尽量多可用区部署',
            'type' => 'boolean',
          ),
          'DeployAcrossNodes' => 
          array (
            'title' => '是否尽量多节点部署',
            'type' => 'boolean',
          ),
          'EnableAhas' => 
          array (
            'title' => '是否开启限流降级',
            'type' => 'boolean',
          ),
        ),
      ),
    ),
  ),
  'apis' => 
  array (
    'DeleteRole' => 
    array (
      'path' => '/pop/v5/account/delete_role',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RoleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '角色ID。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '99999999',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '042F329B-F518-4CC1-****-**********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"042F329B-F518-4CC1-****-**********\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>delete successfully</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '删除角色',
      'summary' => '删除角色。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateRole' => 
    array (
      'path' => '/pop/v5/account/edit_role',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RoleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '角色ID，可以使用[ListRole](~~149410~~)获取。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '32371',
          ),
        ),
        1 => 
        array (
          'name' => 'ActionData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '操作权限集合，格式：`权限组ID1:权限码1;...;权限组IDn:权限码n`，例如`1:1;1:2;2:1;2:2`。详细权限组及权限码含义请参见[ListAuthority](~~149409~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '15:1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'edit successfully',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4823-bhjf-23u4-****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"edit successfully\\",\\n  \\"RequestId\\": \\"4823-bhjf-23u4-****\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>edit successfully</Message>\\n<RequestId/>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '编辑角色',
      'summary' => '编辑角色。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateAccountInfo' => 
    array (
      'path' => '/pop/v5/account/edit_account_info',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '账号名称',
            'type' => 'string',
            'required' => false,
            'example' => 'edas-test',
          ),
        ),
        1 => 
        array (
          'name' => 'Telephone',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '联系方式',
            'type' => 'string',
            'required' => false,
            'example' => '1321234****',
          ),
        ),
        2 => 
        array (
          'name' => 'Email',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '电子邮箱地址',
            'type' => 'string',
            'required' => false,
            'example' => '1321234****@alibaba-inc.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'code码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息',
                'type' => 'string',
                'example' => 'edit successfully',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'ECD1D6FC-4307-4583-BA6F-215F3857EAF4',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"edit successfully\\",\\n  \\"RequestId\\": \\"ECD1D6FC-4307-4583-BA6F-215F3857EAF4\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>edit successfully</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '编辑账号信息',
      'summary' => '编辑账号信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListRole' => 
    array (
      'path' => '/pop/v5/account/role_list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '57609587-DFA2-41EC-****-*********',
              ),
              'RoleList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RoleItem' => 
                  array (
                    'description' => '角色列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ActionList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Action' => 
                            array (
                              'description' => '操作权限集合',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Code' => 
                                  array (
                                    'description' => '权限码',
                                    'type' => 'string',
                                    'example' => '1',
                                  ),
                                  'Description' => 
                                  array (
                                    'description' => '权限描述',
                                    'type' => 'string',
                                    'example' => '操作记录',
                                  ),
                                  'GroupId' => 
                                  array (
                                    'description' => '权限组ID',
                                    'type' => 'string',
                                    'example' => '31',
                                  ),
                                  'Name' => 
                                  array (
                                    'description' => '权限名称',
                                    'type' => 'string',
                                    'example' => '操作记录',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Role' => 
                        array (
                          'description' => '角色列表',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'UpdateTime' => 
                            array (
                              'description' => '角色更新时间的时间戳',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1542717260156',
                            ),
                            'IsDefault' => 
                            array (
                              'description' => '是否是默认生成的角色',
                              'type' => 'boolean',
                              'example' => 'false',
                            ),
                            'AdminUserId' => 
                            array (
                              'description' => '云账号ID',
                              'type' => 'string',
                              'example' => 'test**@aliyun.com',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => '角色创建时间的时间戳',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1542717260156',
                            ),
                            'Name' => 
                            array (
                              'description' => '角色名称',
                              'type' => 'string',
                              'example' => 'Super Admin(All privileges)',
                            ),
                            'Id' => 
                            array (
                              'description' => '角色ID',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"57609587-DFA2-41EC-****-*********\\",\\n  \\"RoleList\\": {\\n    \\"RoleItem\\": [\\n      {\\n        \\"ActionList\\": {\\n          \\"Action\\": [\\n            {\\n              \\"Code\\": \\"1\\",\\n              \\"Description\\": \\"操作记录\\",\\n              \\"GroupId\\": \\"31\\",\\n              \\"Name\\": \\"操作记录\\"\\n            }\\n          ]\\n        },\\n        \\"Role\\": {\\n          \\"UpdateTime\\": 1542717260156,\\n          \\"IsDefault\\": false,\\n          \\"AdminUserId\\": \\"test**@aliyun.com\\",\\n          \\"CreateTime\\": 1542717260156,\\n          \\"Name\\": \\"Super Admin(All privileges)\\",\\n          \\"Id\\": 1\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Code>200</Code>\\n<RoleList>\\n    <RoleItem>\\n        <Role>\\n            <Name>Super Admin(All privileges)</Name>\\n            <CreateTime>1542717260156</CreateTime>\\n            <UpdateTime>1542717260156</UpdateTime>\\n            <Id>15691</Id>\\n        </Role>\\n        <ActionList>\\n            <Action>\\n                <Name>操作记录</Name>\\n                <Description>操作记录</Description>\\n                <Code>1</Code>\\n                <GroupId>31</GroupId>\\n            </Action>\\n        </ActionList>\\n    </RoleItem>\\n</RoleList>","errorExample":""}]',
      'title' => '获取角色列表',
      'summary' => '获取角色列表。',
      'requestParamsDescription' => ' 无请求参数。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
      'parameters' => 
      array (
      ),
    ),
    'ListSubAccount' => 
    array (
      'path' => '/pop/v5/account/sub_account_list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'message',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '57609587-DFA2-41EC-****-*********',
              ),
              'SubAccountList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SubAccount' => 
                  array (
                    'description' => '子账号和RAM用户列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SubEdasId' => 
                        array (
                          'description' => '子账号或RAM用户的EdasId',
                          'type' => 'string',
                          'example' => '28382009411268****',
                        ),
                        'SubUserId' => 
                        array (
                          'description' => '子账号或RAM用户的UserId',
                          'type' => 'string',
                          'example' => 'ram1@117274586608****',
                        ),
                        'Email' => 
                        array (
                          'description' => '电子邮箱',
                          'type' => 'string',
                          'example' => 'email@aliyun.com',
                        ),
                        'AdminUserId' => 
                        array (
                          'description' => '云账号的UserId',
                          'type' => 'string',
                          'example' => 'test@13624697***',
                        ),
                        'AdminUserKp' => 
                        array (
                          'description' => '云账号的Kp（旧概念，实际上就是云账号的EdasId）',
                          'type' => 'string',
                          'example' => '12456889****',
                        ),
                        'AdminEdasId' => 
                        array (
                          'description' => '云账号的EdasId。',
                          'type' => 'string',
                          'example' => '12456889****',
                        ),
                        'SubUserKp' => 
                        array (
                          'description' => '子账号或RAM用户的Kp（旧概念，实际上就是子账号或RAM用户的EdasId）',
                          'type' => 'string',
                          'example' => '28382009411268****',
                        ),
                        'Phone' => 
                        array (
                          'description' => '联系方式',
                          'type' => 'string',
                          'example' => '1373322****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"message\\",\\n  \\"RequestId\\": \\"57609587-DFA2-41EC-****-*********\\",\\n  \\"SubAccountList\\": {\\n    \\"SubAccount\\": [\\n      {\\n        \\"SubEdasId\\": \\"28382009411268****\\",\\n        \\"SubUserId\\": \\"ram1@117274586608****\\",\\n        \\"Email\\": \\"email@aliyun.com\\",\\n        \\"AdminUserId\\": \\"test@13624697***\\",\\n        \\"AdminUserKp\\": \\"12456889****\\",\\n        \\"AdminEdasId\\": \\"12456889****\\",\\n        \\"SubUserKp\\": \\"28382009411268****\\",\\n        \\"Phone\\": \\"1373322****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>57609587-DFA2-41EC-****-*********</RequestId>\\n<Message>message</Message>\\n<SubAccountList>\\n    <SubAccount>\\n        <AdminEdasId>12456889****</AdminEdasId>\\n        <AdminUserKp>12456889****</AdminUserKp>\\n        <Email>email@aliyun.com</Email>\\n        <SubEdasId>28382009411268****</SubEdasId>\\n        <Phone>1373322****</Phone>\\n        <AdminUserId>test@13624697***</AdminUserId>\\n        <SubUserId>ram1@117274586608****</SubUserId>\\n        <SubUserKp>28382009411268****</SubUserKp>\\n    </SubAccount>\\n</SubAccountList>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取子账号列表',
      'summary' => '获取子账号和RAM用户列表。',
      'requestParamsDescription' => ' 无请求参数。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
      'parameters' => 
      array (
      ),
    ),
    'ListAuthority' => 
    array (
      'path' => '/pop/v5/account/authority_list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '57609587-DFA2-41EC-****-*********',
              ),
              'AuthorityList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Authority' => 
                  array (
                    'description' => '权限列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GroupId' => 
                        array (
                          'description' => '权限组ID',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'Name' => 
                        array (
                          'description' => '权限组名称',
                          'type' => 'string',
                          'example' => '应用管理',
                        ),
                        'Description' => 
                        array (
                          'description' => '权限组描述',
                          'type' => 'string',
                          'example' => '对应用的所有操作',
                        ),
                        'ActionList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Action' => 
                            array (
                              'description' => '权限集合',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Code' => 
                                  array (
                                    'description' => '权限码',
                                    'type' => 'string',
                                    'example' => '1',
                                  ),
                                  'Description' => 
                                  array (
                                    'description' => '权限描述',
                                    'type' => 'string',
                                    'example' => '创建应用',
                                  ),
                                  'GroupId' => 
                                  array (
                                    'description' => '权限组ID',
                                    'type' => 'string',
                                    'example' => '1',
                                  ),
                                  'Name' => 
                                  array (
                                    'description' => '权限名称',
                                    'type' => 'string',
                                    'example' => '创建应用',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"57609587-DFA2-41EC-****-*********\\",\\n  \\"AuthorityList\\": {\\n    \\"Authority\\": [\\n      {\\n        \\"GroupId\\": \\"1\\",\\n        \\"Name\\": \\"应用管理\\",\\n        \\"Description\\": \\"对应用的所有操作\\",\\n        \\"ActionList\\": {\\n          \\"Action\\": [\\n            {\\n              \\"Code\\": \\"1\\",\\n              \\"Description\\": \\"创建应用\\",\\n              \\"GroupId\\": \\"1\\",\\n              \\"Name\\": \\"创建应用\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>57609587-DFA2-41EC-****-*********</RequestId>\\n<Message>success</Message>\\n<Code>200</Code>\\n<AuthorityList>\\n    <Authority>\\n        <Description>对应用的所有操作</Description>\\n        <Name>应用管理</Name>\\n        <GroupId>1</GroupId>\\n        <ActionList>\\n            <Action>\\n                <Description>创建应用</Description>\\n                <Code>1</Code>\\n                <Name>创建应用</Name>\\n                <GroupId>1</GroupId>\\n            </Action>\\n        </ActionList>\\n    </Authority>\\n</AuthorityList>","errorExample":""}]',
      'title' => '查询所有权限',
      'summary' => '查询所有权限。',
      'requestParamsDescription' => '无请求参数。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
      'parameters' => 
      array (
      ),
    ),
    'GetPackageStorageCredential' => 
    array (
      'path' => '/pop/v5/package_storage_credential',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '请求返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-****',
              ),
              'Credential' => 
              array (
                'description' => '认证信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'KeyPrefix' => 
                  array (
                    'description' => 'OSS的存储Key前缀。',
                    'type' => 'string',
                    'example' => 'release-pkg/117274586608****',
                  ),
                  'SecurityToken' => 
                  array (
                    'description' => 'STS安全令牌。',
                    'type' => 'string',
                    'example' => '<yourSecurityToken>',
                  ),
                  'AccessKeySecret' => 
                  array (
                    'description' => '用户的AccessKey Secret。',
                    'type' => 'string',
                    'example' => '<yourAccessKeySecret>',
                  ),
                  'Expiration' => 
                  array (
                    'description' => '超期时间信息，如：2019-11-10T07:20:19Z。',
                    'type' => 'string',
                    'example' => '2019-11-10T07:20:19Z',
                  ),
                  'AccessKeyId' => 
                  array (
                    'description' => '用户的AccessKey ID。',
                    'type' => 'string',
                    'example' => '<yourAccessKeyId>',
                  ),
                  'Bucket' => 
                  array (
                    'description' => 'OSS的Bucket。',
                    'type' => 'string',
                    'example' => 'edas-bj',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '地域ID。',
                    'type' => 'string',
                    'example' => 'cn-beijing',
                  ),
                  'OssPublicEndpoint' => 
                  array (
                    'description' => 'OSS的公网访问地址。',
                    'type' => 'string',
                    'example' => 'oss-cn-beijing.aliyuncs.com',
                  ),
                  'OssInternalEndpoint' => 
                  array (
                    'description' => 'OSS的私网访问地址。',
                    'type' => 'string',
                    'example' => 'oss-cn-beijing-internal.aliyuncs.com',
                  ),
                  'OssVpcEndpoint' => 
                  array (
                    'description' => 'OSS的VPC访问地址。',
                    'type' => 'string',
                    'example' => 'oss-cn-beijing-internal.aliyuncs.com',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-****\\",\\n  \\"Credential\\": {\\n    \\"KeyPrefix\\": \\"release-pkg/117274586608****\\",\\n    \\"SecurityToken\\": \\"<yourSecurityToken>\\",\\n    \\"AccessKeySecret\\": \\"<yourAccessKeySecret>\\",\\n    \\"Expiration\\": \\"2019-11-10T07:20:19Z\\",\\n    \\"AccessKeyId\\": \\"<yourAccessKeyId>\\",\\n    \\"Bucket\\": \\"edas-bj\\",\\n    \\"RegionId\\": \\"cn-beijing\\",\\n    \\"OssPublicEndpoint\\": \\"oss-cn-beijing.aliyuncs.com\\",\\n    \\"OssInternalEndpoint\\": \\"oss-cn-beijing-internal.aliyuncs.com\\",\\n    \\"OssVpcEndpoint\\": \\"oss-cn-beijing-internal.aliyuncs.com\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetPackageStorageCredentialResponse>\\n    <Credential>\\n        <KeyPrefix>release-pkg/117274586608****</KeyPrefix>\\n        <AccessKeySecret>yourAccessKeySecret</AccessKeySecret>\\n        <AccessKeyId>yourAccessKeyId</AccessKeyId>\\n        <Expiration>2019-11-10T07:20:19Z</Expiration>\\n        <SecurityToken>yourSecurityToken</SecurityToken>\\n        <RegionId>cn-beijing</RegionId>\\n        <Bucket>edas-bj</Bucket>\\n    </Credential>\\n    <Message>success</Message>\\n    <Code>200</Code>\\n</GetPackageStorageCredentialResponse>","errorExample":""}]',
      'title' => '获取临时存储包所需的STS',
      'summary' => '获取临时存储包所需的STS。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
      'parameters' => 
      array (
      ),
    ),
    'InsertRole' => 
    array (
      'path' => '/pop/v5/account/create_role',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RoleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '角色名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testrole',
          ),
        ),
        1 => 
        array (
          'name' => 'ActionData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '操作权限集合，格式：`权限组ID1:权限码1;...;权限组IDn:权限码n`，例如`1:1;1:2;2:1;2:2`。详细权限组及权限码含义请参见[ListAuthority](~~149409~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '15:1;14:2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID',
                'type' => 'string',
                'example' => '57609587-DFA2-41EC-****-*********',
              ),
              'RoleId' => 
              array (
                'description' => '角色ID',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '33',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"57609587-DFA2-41EC-****-*********\\",\\n  \\"RoleId\\": 33\\n}","errorExample":""},{"type":"xml","example":"<RequestId>57609587-DFA2-41EC-****-*********</RequestId>\\n<Code>200</Code>\\n<Message>sucess</Message>","errorExample":""}]',
      'title' => '创建角色',
      'summary' => '创建角色。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AuthorizeRole' => 
    array (
      'path' => '/pop/v5/account/authorize_role',
      'methods' => 
      array (
        0 => 'post',
        1 => 'delete',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TargetUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待授权子账号 ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test@133******',
          ),
        ),
        1 => 
        array (
          'name' => 'RoleIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '角色 ID，用“;”号分割，null 代表取消角色授权',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1;2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '57609587-DFA2-*******',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"57609587-DFA2-*******\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>57609587-DFA2-41EC-****-*********</RequestId>\\n<Code>200</Code>\\n<Message>sucess</Message>","errorExample":""}]',
      'title' => '授权角色',
      'summary' => '授权角色。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AuthorizeApplication' => 
    array (
      'path' => '/pop/v5/account/authorize_app',
      'methods' => 
      array (
        0 => 'post',
        1 => 'delete',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TargetUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待授权子账号或RAM用户的USER ID，格式为`子账号名称@主账号UID`。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test@133434434****',
          ),
        ),
        1 => 
        array (
          'name' => 'AppIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。用半角分号（;）分割，null表示取消授权。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5fdf50e8-*****;696-******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID',
                'type' => 'string',
                'example' => 'E3DA95D3-**********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"E3DA95D3-**********\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>E3DA95D3-***********</RequestId>\\n<Code>200</Code>\\n<Message>success</Message>","errorExample":""}]',
      'title' => '为子账号授权应用',
      'summary' => '为子账号或RAM用户授予应用的操作权限。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AuthorizeResourceGroup' => 
    array (
      'path' => '/pop/v5/account/authorize_res_group',
      'methods' => 
      array (
        0 => 'post',
        1 => 'delete',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TargetUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待授权的子账号或RAM用户的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test@13333********',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceGroupIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。可以通过调用ListResourceGroup接口获取，具体操作，请参见[ListResourceGroup](~~62055~~)。

支持设置多个资源组，资源组之间用英文分号（;）分隔。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '461;462',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '57609587-DFA2-**********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"57609587-DFA2-**********\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>57609587-DFA2-41EC-**********</RequestId>\\n<Code>200</Code>\\n<Message>success</Message>","errorExample":""}]',
      'title' => '为子账号授予资源组的操作权限',
      'summary' => '为子账号或RAM用户授予指定资源组的操作权限。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteUserDefineRegion' => 
    array (
      'path' => '/pop/v5/user_region_def',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '定义命名空间的唯一标识序号，可调用ListUserDefineRegion接口获取，详情请参见[ListUserDefineRegion](~~149377~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'example' => '2564',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionTag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间标签。',
            'type' => 'string',
            'required' => false,
            'example' => 'regiontag',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1234-1sda-321d-****',
              ),
              'RegionDefine' => 
              array (
                'description' => '自定义命名空间。',
                'type' => 'object',
                'properties' => 
                array (
                  'BelongRegion' => 
                  array (
                    'description' => '隶属的地域ID。',
                    'type' => 'string',
                    'example' => 'cn-beijing',
                  ),
                  'RegionName' => 
                  array (
                    'description' => '命名空间名称。',
                    'type' => 'string',
                    'example' => 'test_region',
                  ),
                  'Description' => 
                  array (
                    'description' => '命名空间描述信息。',
                    'type' => 'string',
                    'example' => 'logic region',
                  ),
                  'UserId' => 
                  array (
                    'description' => '用户主账号ID。',
                    'type' => 'string',
                    'example' => '11727****22398',
                  ),
                  'Id' => 
                  array (
                    'description' => '唯一标识。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '8848',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '命名空间标识，创建后不可更改。格式为`地域ID：命名空间标识符`。',
                    'type' => 'string',
                    'example' => 'cn-beijing:test',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"1234-1sda-321d-****\\",\\n  \\"RegionDefine\\": {\\n    \\"BelongRegion\\": \\"cn-beijing\\",\\n    \\"RegionName\\": \\"test_region\\",\\n    \\"Description\\": \\"logic region\\",\\n    \\"UserId\\": \\"11727****22398\\",\\n    \\"Id\\": 8848,\\n    \\"RegionId\\": \\"cn-beijing:test\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RegionDefine>\\n    <Description>test</Description>\\n    <RegionName>test_region</RegionName>\\n    <BelongRegion>cn-beijing</BelongRegion>\\n    <RegionId>cn-beijing:test</RegionId>\\n    <Id>8683</Id>\\n    <UserId>edas_****_test@aliyun-****.com</UserId>\\n</RegionDefine>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '删除指定的自定义命名空间',
      'summary' => '删除指定的自定义命名空间。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteCluster' => 
    array (
      'path' => '/pop/v5/resource/cluster',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8b96ade0-0a07-****-af9d-5ed83640d076',
          ),
        ),
        1 => 
        array (
          'name' => 'Mode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID类型，取值如下：
* 0 - EDAS集群ID。
* 1 - 容器服务集群ID。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加消息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '处理结果：
* true - 删除成功。
* false - 删除失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '856D4438-****-4EA9-****-894628C0434E',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": true,\\n  \\"RequestId\\": \\"856D4438-****-4EA9-****-894628C0434E\\"\\n}","errorExample":""},{"type":"xml","example":"<Data>true</Data>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '删除集群',
      'summary' => '用于删除ECS集群或取消导入K8s集群。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListAliyunRegion' => 
    array (
      'path' => '/pop/v5/resource/region_list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '请求返回信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'b197-40ab-9155-7ca7',
              ),
              'RegionEntityList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RegionEntity' => 
                  array (
                    'description' => '地域列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Name' => 
                        array (
                          'description' => '地域名称',
                          'type' => 'string',
                          'example' => 'China East 1 (Hangzhou)',
                        ),
                        'Id' => 
                        array (
                          'description' => '地域ID',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-7ca7\\",\\n  \\"RegionEntityList\\": {\\n    \\"RegionEntity\\": [\\n      {\\n        \\"Name\\": \\"China East 1 (Hangzhou)\\",\\n        \\"Id\\": \\"cn-hangzhou\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RegionEntityList>\\n    <RegionEntity>\\n        <Name>China East 1 (Hangzhou)</Name>\\n        <Id>cn-hangzhou</Id>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <Name>China North 1 (Qingdao)</Name>\\n        <Id>cn-qingdao</Id>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <Name>China North 2 (Beijing)</Name>\\n        <Id>cn-beijing</Id>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <Name>China South 1 (Shenzhen)</Name>\\n        <Id>cn-shenzhen</Id>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <Name>China East 2 (Shanghai)</Name>\\n        <Id>cn-shanghai</Id>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <Name>Asia Pacific SE 1 (Singapore)</Name>\\n        <Id>ap-southeast-1</Id>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <Name>Hong Kong (China)</Name>\\n        <Id>cn-hongkong</Id>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <Name>Australia(Sydney)</Name>\\n        <Id>ap-southeast-2</Id>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <Name>America(Virginia)</Name>\\n        <Id>us-east-1</Id>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <Name>China North 3</Name>\\n        <Id>cn-zhangjiakou</Id>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <Name>Germany (Frankfurt)</Name>\\n        <Id>eu-central-1</Id>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <Name>public</Name>\\n        <Id>public</Id>\\n    </RegionEntity>\\n</RegionEntityList>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取阿里云地域列表',
      'summary' => '获取阿里云地域列表。',
      'requestParamsDescription' => ' 无请求参数。',
      'responseParamsDescription' => ' ',
      'parameters' => 
      array (
      ),
    ),
    'QueryMigrateRegionList' => 
    array (
      'path' => '/pop/v5/resource/migrate_region_select',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou:test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'b197-40ab-9155-7ca7',
              ),
              'RegionEntityList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RegionEntity' => 
                  array (
                    'description' => '命名空间列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'RegionName' => 
                        array (
                          'description' => '命名空间名称',
                          'type' => 'string',
                          'example' => 'Beta',
                        ),
                        'RegionNo' => 
                        array (
                          'description' => '命名空间ID',
                          'type' => 'string',
                          'example' => 'cn-beijing:beta',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-7ca7\\",\\n  \\"RegionEntityList\\": {\\n    \\"RegionEntity\\": [\\n      {\\n        \\"RegionName\\": \\"Beta\\",\\n        \\"RegionNo\\": \\"cn-beijing:beta\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RegionEntityList>\\n    <RegionEntity>\\n        <RegionName>Beta</RegionName>\\n        <RegionNo>cn-beijing:beta</RegionNo>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <RegionName>AllFlow</RegionName>\\n        <RegionNo>cn-beijing:AllFlow</RegionNo>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <RegionName>doc-test</RegionName>\\n        <RegionNo>cn-beijing:doc</RegionNo>\\n    </RegionEntity>\\n    <RegionEntity>\\n        <RegionName>test_region</RegionName>\\n        <RegionNo>cn-beijing:test</RegionNo>\\n    </RegionEntity>\\n</RegionEntityList>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '查询可供迁移的命名空间列表',
      'summary' => '查询可供迁移的命名空间列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListCluster' => 
    array (
      'path' => '/pop/v5/resource/cluster_list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间的ID。查询命名空间ID，请参见[ListUserDefineRegion](~~149377~~)。
- 未设置该参数，则查询默认命名空间的集群列表。
- 设置该参数，则查询指定命名空间的集群列表。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing:test',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。查询资源组ID，请参见[ListResourceGroup](~~62055~~)。
- 未设置该参数，则查询默认资源组的集群列表。
- 设置该参数，则查询指定资源组的集群列表。',
            'type' => 'string',
            'required' => false,
            'example' => '461',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '1053-08e4-47a5-b2ab-5c0323de****',
              ),
              'ClusterList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Cluster' => 
                  array (
                    'description' => '集群列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => 'VPC ID',
                          'type' => 'string',
                          'example' => 'vpc-23727****',
                        ),
                        'OversoldFactor' => 
                        array (
                          'description' => 'Docker集群支持的CPU超卖比例。
- 1：1:1比例，不超卖
- 2：1:2比例
- 4：1:4比例
- 8：1:8比例',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '最后变更时间的时间戳',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1533820823203',
                        ),
                        'MemUsed' => 
                        array (
                          'description' => '已使用内存，单位为MB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '200',
                        ),
                        'IaasProvider' => 
                        array (
                          'description' => '集群供应商',
                          'type' => 'string',
                          'example' => 'ALIYUN',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间的时间戳',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1502888064561',
                        ),
                        'CpuUsed' => 
                        array (
                          'description' => '已使用CPU核数',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Mem' => 
                        array (
                          'description' => '总内存，单位为MB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3072',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地域ID',
                          'type' => 'string',
                          'example' => 'cn-beijing',
                        ),
                        'Cpu' => 
                        array (
                          'description' => '总CPU核数',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'CsClusterId' => 
                        array (
                          'description' => '容器服务Kubernetes版中创建的K8s集群的ID',
                          'type' => 'string',
                          'example' => 'c2ce************b9203a9',
                        ),
                        'NetworkMode' => 
                        array (
                          'description' => '网络类型。
- 1：经典网络
- 2：VPC',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Description' => 
                        array (
                          'description' => '集群描述',
                          'type' => 'string',
                          'example' => '测试集群',
                        ),
                        'ClusterType' => 
                        array (
                          'description' => '集群类型。
- 0：普通Docker集群
- 1：Swarm集群
- 2：ECS集群
- 3：EDAS自建K8s集群
- 4：Pandora自动注册应用集群
- 5：容器服务K8s集群',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '资源组ID',
                          'type' => 'string',
                          'example' => '461',
                        ),
                        'ClusterName' => 
                        array (
                          'description' => '集群名称',
                          'type' => 'string',
                          'example' => 'cluster-test',
                        ),
                        'NodeNum' => 
                        array (
                          'description' => '实例数量',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'ClusterId' => 
                        array (
                          'description' => 'EDAS中的集群ID',
                          'type' => 'string',
                          'example' => 'b98b5919-c111-4dad-9f74-7233********',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"1053-08e4-47a5-b2ab-5c0323de****\\",\\n  \\"ClusterList\\": {\\n    \\"Cluster\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-23727****\\",\\n        \\"OversoldFactor\\": 1,\\n        \\"UpdateTime\\": 1533820823203,\\n        \\"MemUsed\\": 200,\\n        \\"IaasProvider\\": \\"ALIYUN\\",\\n        \\"CreateTime\\": 1502888064561,\\n        \\"CpuUsed\\": 1,\\n        \\"Mem\\": 3072,\\n        \\"RegionId\\": \\"cn-beijing\\",\\n        \\"Cpu\\": 2,\\n        \\"CsClusterId\\": \\"c2ce************b9203a9\\",\\n        \\"NetworkMode\\": 1,\\n        \\"Description\\": \\"测试集群\\",\\n        \\"ClusterType\\": 2,\\n        \\"ResourceGroupId\\": \\"461\\",\\n        \\"ClusterName\\": \\"cluster-test\\",\\n        \\"NodeNum\\": 2,\\n        \\"ClusterId\\": \\"b98b5919-c111-4dad-9f74-7233********\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ClusterList>\\n    <Cluster>\\n        <OversoldFactor>1</OversoldFactor>\\n        <Description>测试集群</Description>\\n        <ResourceGroupId>461</ResourceGroupId>\\n        <NodeNum>2</NodeNum>\\n        <ClusterId>b98b5919-c111-4dad-9f74-7233********</ClusterId>\\n        <CreateTime>1502888064561</CreateTime>\\n        <Cpu>2</Cpu>\\n        <NetworkMode>1</NetworkMode>\\n        <ClusterType>2</ClusterType>\\n        <CsClusterId>c2ce************b9203a9</CsClusterId>\\n        <MemUsed>200</MemUsed>\\n        <Mem>3072</Mem>\\n        <VpcId>vpc-23727****</VpcId>\\n        <UpdateTime>1533820823203</UpdateTime>\\n        <ClusterName>cluster-test</ClusterName>\\n        <IaasProvider>ALIYUN</IaasProvider>\\n        <RegionId>cn-beijing</RegionId>\\n        <CpuUsed>1</CpuUsed>\\n    </Cluster>\\n</ClusterList>\\n<RequestId>1053-08e4-47a5-b2ab-5c0323de****</RequestId>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取集群列表',
      'summary' => '获取集群列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetCluster' => 
    array (
      'path' => '/pop/v5/resource/cluster',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。可以通过调用ListCluster获取集群ID，具体操作，请参见[ListCluster](~~154995~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5439271a-015b-433d-****-d76db49****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'code码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '详细信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'd76db491',
              ),
              'Cluster' => 
              array (
                'description' => '集群信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'VpcId' => 
                  array (
                    'description' => 'VPC网络ID。',
                    'type' => 'string',
                    'example' => 'vpc-xxxxz1mlwpb****',
                  ),
                  'OversoldFactor' => 
                  array (
                    'description' => 'Docker集群CPU超卖：
- 1：1:1比例，不超卖。
- 2：1:2比例超卖
- 4：1:4比例超卖
- 8：1:8比例超卖',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'UpdateTime' => 
                  array (
                    'description' => '最后变更时间的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1570708232145',
                  ),
                  'MemUsed' => 
                  array (
                    'description' => '已使用内存量，单位MB。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1024',
                  ),
                  'IaasProvider' => 
                  array (
                    'description' => 'IaaS资源提供者。',
                    'type' => 'string',
                    'example' => 'ALIYUN',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '集群创建时间的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1570708232145',
                  ),
                  'CpuUsed' => 
                  array (
                    'description' => '已使用CPU核数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'Mem' => 
                  array (
                    'description' => '内存总量，单位为MB。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2048',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '地域ID。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'Cpu' => 
                  array (
                    'description' => 'CPU总核数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '4',
                  ),
                  'CsClusterId' => 
                  array (
                    'description' => '容器服务集群ID。',
                    'type' => 'string',
                    'example' => 'c2ce62869f4d4466b920312315f05****',
                  ),
                  'NetworkMode' => 
                  array (
                    'description' => '网络类型：
- 1：经典网络。
- 2：VPC。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'Description' => 
                  array (
                    'description' => '描述。',
                    'type' => 'string',
                    'example' => '测试',
                  ),
                  'ClusterType' => 
                  array (
                    'description' => '集群类型。
- 0：普通Docker集群
- 1：Swarm集群
- 2：ECS集群
- 3：EDAS自建K8s集群
- 4：Pandora自动注册应用集群类型
- 5：容器服务K8s集群',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'ClusterName' => 
                  array (
                    'description' => '集群名称。',
                    'type' => 'string',
                    'example' => 'ClusterTest',
                  ),
                  'NodeNum' => 
                  array (
                    'description' => 'ECS数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '4',
                  ),
                  'ClusterImportStatus' => 
                  array (
                    'description' => '导入集群状态。
- 1：导入成功
- 2：导入失败
- 3：正在导入
- 4：集群已删除
- 0：未导入',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'ClusterId' => 
                  array (
                    'description' => '集群ID。',
                    'type' => 'string',
                    'example' => '5439271a-015b-433d-befb-d76d****',
                  ),
                  'SubClusterType' => 
                  array (
                    'title' => 'K8S类型集群的子类型：ManagedKubernetes为阿里云ACK集群类型，
Ask为阿里云ASK集群类型，
ExternalKubernetes为外部集群类型',
                    'description' => 'K8s类型集群的子类型：ManagedKubernetes为阿里云ACK集群类型，
Ask为阿里云ASK集群类型，
ExternalKubernetes为外部集群类型。',
                    'type' => 'string',
                    'example' => 'ManagedKubernetes',
                    'enum' => 
                    array (
                      0 => 'ManagedKubernetes',
                      1 => 'Ask',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"d76db491\\",\\n  \\"Cluster\\": {\\n    \\"VpcId\\": \\"vpc-xxxxz1mlwpb****\\",\\n    \\"OversoldFactor\\": 2,\\n    \\"UpdateTime\\": 1570708232145,\\n    \\"MemUsed\\": 1024,\\n    \\"IaasProvider\\": \\"ALIYUN\\",\\n    \\"CreateTime\\": 1570708232145,\\n    \\"CpuUsed\\": 2,\\n    \\"Mem\\": 2048,\\n    \\"RegionId\\": \\"cn-hangzhou\\",\\n    \\"Cpu\\": 4,\\n    \\"CsClusterId\\": \\"c2ce62869f4d4466b920312315f05****\\",\\n    \\"NetworkMode\\": 2,\\n    \\"Description\\": \\"测试\\",\\n    \\"ClusterType\\": 2,\\n    \\"ClusterName\\": \\"ClusterTest\\",\\n    \\"NodeNum\\": 4,\\n    \\"ClusterImportStatus\\": 0,\\n    \\"ClusterId\\": \\"5439271a-015b-433d-befb-d76d****\\",\\n    \\"SubClusterType\\": \\"ManagedKubernetes\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Code>200</Code>\\n<Cluster>\\n    <MemUsed>2048</MemUsed>\\n    <Mem>2048</Mem>\\n    <NetworkMode>2</NetworkMode>\\n    <UpdateTime>1570708232145</UpdateTime>\\n    <NodeNum>2</NodeNum>\\n    <VpcId>vpc-bp19z1mlwpbjx3e9mwefe</VpcId>\\n    <OversoldFactor>1</OversoldFactor>\\n    <Cpu>2</Cpu>\\n    <ClusterId>5439271a-015b-433d-befb-d76db4911b7c</ClusterId>\\n    <ClusterName>GTSDemoTesting</ClusterName>\\n    <CreateTime>1561444573420</CreateTime>\\n    <RegionId>cn-hangzhou</RegionId>\\n    <CpuUsed>2</CpuUsed>\\n    <ClusterType>2</ClusterType>\\n    <IaasProvider>ALIYUN</IaasProvider>\\n</Cluster>","errorExample":""}]',
      'title' => '获取集群信息',
      'summary' => '获取指定集群的信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListVpc' => 
    array (
      'path' => '/pop/v5/vpc_list',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'b197-40ab-9155-7ca7',
              ),
              'VpcList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VpcEntity' => 
                  array (
                    'description' => 'VPC列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => 'VPC ID',
                          'type' => 'string',
                          'example' => 'vpc-wz9pcq3jofczwpujq****',
                        ),
                        'VpcName' => 
                        array (
                          'description' => 'VPC名称',
                          'type' => 'string',
                          'example' => 'edas-default-vpc4',
                        ),
                        'Expired' => 
                        array (
                          'description' => 'VPC的状态是否可用
- true：可用
- false：不可用',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'UserId' => 
                        array (
                          'description' => '用户ID',
                          'type' => 'string',
                          'example' => 'edas_****_test@aliyun-****.com',
                        ),
                        'EcsNum' => 
                        array (
                          'description' => '关联的ECS实例数量',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在地域',
                          'type' => 'string',
                          'example' => 'cn-shenzhen',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-7ca7\\",\\n  \\"VpcList\\": {\\n    \\"VpcEntity\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-wz9pcq3jofczwpujq****\\",\\n        \\"VpcName\\": \\"edas-default-vpc4\\",\\n        \\"Expired\\": false,\\n        \\"UserId\\": \\"edas_****_test@aliyun-****.com\\",\\n        \\"EcsNum\\": 0,\\n        \\"RegionId\\": \\"cn-shenzhen\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<VpcList>\\n    <VpcEntity>\\n        <VpcName>public_auto_test_vpc_</VpcName>\\n        <Expired>false</Expired>\\n        <RegionId>cn-shenzhen</RegionId>\\n        <UserId>edas_****_test@aliyun-****.com</UserId>\\n        <EcsNum>2</EcsNum>\\n        <VpcId>vpc-wz90fbqjyyvxznxpy****</VpcId>\\n    </VpcEntity>\\n    <VpcEntity>\\n        <VpcName>edas-default-vpc2</VpcName>\\n        <Expired>false</Expired>\\n        <RegionId>cn-shenzhen</RegionId>\\n        <UserId>edas_****_test@aliyun-****.com</UserId>\\n        <EcsNum>8</EcsNum>\\n        <VpcId>vpc-wz90iikh8t4kdlwlj****</VpcId>\\n    </VpcEntity>\\n</VpcList>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取 VPC 列表',
      'summary' => '获取VPC列表，该接口适用于ECS集群和K8s集群。',
      'requestParamsDescription' => '无请求参数。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
      'parameters' => 
      array (
      ),
    ),
    'QueryRegionConfig' => 
    array (
      'path' => '/pop/v5/region_config',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'b197-40ab-9155-7ca7',
              ),
              'RegionConfig' => 
              array (
                'description' => '地域配置信息',
                'type' => 'object',
                'properties' => 
                array (
                  'No' => 
                  array (
                    'description' => '地域序号，该参数已废弃。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'AddressServerHost' => 
                  array (
                    'description' => '地址服务器域名',
                    'type' => 'string',
                    'example' => '****.edas.aliyun.com',
                  ),
                  'Tag' => 
                  array (
                    'description' => '地域标识。固定值，即`ALIYUN_SHARE`。',
                    'type' => 'string',
                    'example' => 'ALIYUN_SHARE',
                  ),
                  'AgentInstallScript' => 
                  array (
                    'description' => 'Agent脚本安装路径',
                    'type' => 'string',
                    'example' => 'http://edas-qd.oss-cn-****-internal.aliyuncs.com/****sh',
                  ),
                  'FileServerType' => 
                  array (
                    'description' => '文件服务器类型',
                    'type' => 'string',
                    'example' => 'oss',
                  ),
                  'Name' => 
                  array (
                    'description' => '地域配置名称',
                    'type' => 'string',
                    'example' => '华北2',
                  ),
                  'ImageId' => 
                  array (
                    'description' => '官方镜像ID',
                    'type' => 'string',
                    'example' => 'm-2zea4hx8f9zxqah2****',
                  ),
                  'Id' => 
                  array (
                    'description' => '地域配置ID',
                    'type' => 'string',
                    'example' => 'cn-beijing',
                  ),
                  'FileServerConfig' => 
                  array (
                    'description' => '文件服务信息',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'InternalUrl' => 
                      array (
                        'description' => '文件服务器内部URL',
                        'type' => 'string',
                        'example' => 'oss-cn-beijing-****.aliyuncs.com',
                      ),
                      'PublicUrl' => 
                      array (
                        'description' => '文件服务器公网URL',
                        'type' => 'string',
                        'example' => 'oss-cn-beijing.aliyuncs.com',
                      ),
                      'VpcUrl' => 
                      array (
                        'description' => '文件服务器VPC URL',
                        'type' => 'string',
                        'example' => 'v*****-oss-cn-beijing.aliyuncs.com',
                      ),
                      'Bucket' => 
                      array (
                        'description' => '文件服务器OSS Bucket',
                        'type' => 'string',
                        'example' => 'edas-bj',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-7ca7\\",\\n  \\"RegionConfig\\": {\\n    \\"No\\": 1,\\n    \\"AddressServerHost\\": \\"****.edas.aliyun.com\\",\\n    \\"Tag\\": \\"ALIYUN_SHARE\\",\\n    \\"AgentInstallScript\\": \\"http://edas-qd.oss-cn-****-internal.aliyuncs.com/****sh\\",\\n    \\"FileServerType\\": \\"oss\\",\\n    \\"Name\\": \\"华北2\\",\\n    \\"ImageId\\": \\"m-2zea4hx8f9zxqah2****\\",\\n    \\"Id\\": \\"cn-beijing\\",\\n    \\"FileServerConfig\\": {\\n      \\"InternalUrl\\": \\"oss-cn-beijing-****.aliyuncs.com\\",\\n      \\"PublicUrl\\": \\"oss-cn-beijing.aliyuncs.com\\",\\n      \\"VpcUrl\\": \\"v*****-oss-cn-beijing.aliyuncs.com\\",\\n      \\"Bucket\\": \\"edas-bj\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RegionConfig>\\n    <Name>华北2</Name>\\n    <ImageId>m-2zea****qah2as71</ImageId>\\n    <FileServerType>oss</FileServerType>\\n    <FileServerConfig>\\n        <InternalUrl>oss-cn-****-internal.aliyuncs.com</InternalUrl>\\n        <PublicUrl>oss-cn-****.aliyuncs.com</PublicUrl>\\n        <Bucket>edas-bj</Bucket>\\n        <VpcUrl>****-oss-cn-beijing.aliyuncs.com</VpcUrl>\\n    </FileServerConfig>\\n    <Tag>ALIYUN_SHARE</Tag>\\n    <AddressServerHost>addr-bj-****.edas.aliy*un.com</AddressServerHost>\\n    <Id>cn-beijing</Id>\\n    <No>0</No>\\n    <AgentInstallScript>http://edas-****-cn-qingdao-***.aliyuncs.com/****.sh</AgentInstallScript>\\n</RegionConfig>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取不同地域的配置内容',
      'summary' => '获取不同地域的配置内容。',
      'requestParamsDescription' => ' 无请求参数。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
      'parameters' => 
      array (
      ),
    ),
    'ListApplicationEcu' => 
    array (
      'path' => '/pop/v5/resource/ecu_list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。获取AppId，请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'e809****-43d7-4c6b-8e01-b0d9d1db****',
          ),
        ),
        1 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '微服务空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou:***wei',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-7ca7',
              ),
              'EcuInfoList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EcuEntity' => 
                  array (
                    'description' => 'ECU信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => 'VPC ID。',
                          'type' => 'string',
                          'example' => 'vpc-2zef6ob8**********',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '更新时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1599803995894',
                        ),
                        'IpAddr' => 
                        array (
                          'description' => 'ECU的内网IP。',
                          'type' => 'string',
                          'example' => '192.168.XXX.XXX',
                        ),
                        'AvailableCpu' => 
                        array (
                          'description' => '可用CPU数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1542692376066',
                        ),
                        'UserId' => 
                        array (
                          'description' => '关联用户的UID。',
                          'type' => 'string',
                          'example' => '****_common_****@aliyun.com',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'i-2zej4i2jdf*********',
                        ),
                        'Mem' => 
                        array (
                          'description' => '总内存，单位MB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '500',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在地域。',
                          'type' => 'string',
                          'example' => 'cn-beijing',
                        ),
                        'EcuId' => 
                        array (
                          'description' => '这台ECU的唯一标示ID，可以通过在ECS上执行`dmidecode`命令获取。',
                          'type' => 'string',
                          'example' => '0de2ebdb-9490-4fc4-be41***************',
                        ),
                        'Cpu' => 
                        array (
                          'description' => 'CPU总核数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => 'e809****-43d7-4c6b-8e01-b0d9d1db****',
                        ),
                        'DockerEnv' => 
                        array (
                          'description' => '是否安装了Docker：

- true：已安装。
- false：未安装。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Online' => 
                        array (
                          'description' => '是否在线：

- true：在线。
- false：不在线。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'AvailableMem' => 
                        array (
                          'description' => '可用内存，单位MB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '200',
                        ),
                        'ZoneId' => 
                        array (
                          'description' => '所在可用区ID。',
                          'type' => 'string',
                          'example' => 'cn-beijing-h',
                        ),
                        'Name' => 
                        array (
                          'description' => '名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'HeartbeatTime' => 
                        array (
                          'description' => '上一次心跳检测的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1573281040819',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-7ca7\\",\\n  \\"EcuInfoList\\": {\\n    \\"EcuEntity\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-2zef6ob8**********\\",\\n        \\"UpdateTime\\": 1599803995894,\\n        \\"IpAddr\\": \\"192.168.XXX.XXX\\",\\n        \\"AvailableCpu\\": 1,\\n        \\"CreateTime\\": 1542692376066,\\n        \\"UserId\\": \\"****_common_****@aliyun.com\\",\\n        \\"InstanceId\\": \\"i-2zej4i2jdf*********\\",\\n        \\"Mem\\": 500,\\n        \\"RegionId\\": \\"cn-beijing\\",\\n        \\"EcuId\\": \\"0de2ebdb-9490-4fc4-be41***************\\",\\n        \\"Cpu\\": 1,\\n        \\"AppId\\": \\"e809****-43d7-4c6b-8e01-b0d9d1db****\\",\\n        \\"DockerEnv\\": true,\\n        \\"Online\\": true,\\n        \\"AvailableMem\\": 200,\\n        \\"ZoneId\\": \\"cn-beijing-h\\",\\n        \\"Name\\": \\"test\\",\\n        \\"HeartbeatTime\\": 1573281040819\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListApplicationEcuResponse>\\n    <Code>200</Code>\\n    <Message>success</Message>\\n    <RequestId>b197-40ab-9155-7ca7</RequestId>\\n    <EcuInfoList>\\n        <VpcId>vpc-2zef6ob8**********</VpcId>\\n        <UpdateTime>1599803995894</UpdateTime>\\n        <IpAddr>192.123.XX.XX</IpAddr>\\n        <AvailableCpu>1</AvailableCpu>\\n        <CreateTime>1542692376066</CreateTime>\\n        <UserId>****_common_****@aliyun.com</UserId>\\n        <InstanceId>i-2zej4i2jdf*********</InstanceId>\\n        <Mem>500</Mem>\\n        <RegionId>cn-beijing</RegionId>\\n        <EcuId>0de2ebdb-9490-4fc4-be41***************</EcuId>\\n        <Cpu>1</Cpu>\\n        <AppId>e809****-43d7-4c6b-8e01-b0d9d1db****</AppId>\\n        <DockerEnv>true</DockerEnv>\\n        <Online>true</Online>\\n        <AvailableMem>200</AvailableMem>\\n        <ZoneId>cn-beijing-h</ZoneId>\\n        <Name>test</Name>\\n        <HeartbeatTime>1573281040819</HeartbeatTime>\\n    </EcuInfoList>\\n</ListApplicationEcuResponse>","errorExample":""}]',
      'title' => '获取ECU列表',
      'summary' => '获取ECU列表。',
      'requestParamsDescription' => '- 如果设置了AppId，则查询指定应用中的ECU列表。
- 如果未设置AppId，则查询当前地域中的ECU列表。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListResourceGroup' => 
    array (
      'path' => '/pop/v5/resource/reg_group_list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-****',
              ),
              'ResourceGroupList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ResGroupEntity' => 
                  array (
                    'description' => '详见ResGroupEntity定义资源组列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '资源组对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'UpdateTime' => 
                        array (
                          'description' => '更新时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1573281040827',
                        ),
                        'Description' => 
                        array (
                          'description' => '资源组描述。',
                          'type' => 'string',
                          'example' => 'QqLZDA3pBZ',
                        ),
                        'AdminUserId' => 
                        array (
                          'description' => '用户UID。',
                          'type' => 'string',
                          'example' => '****@aliyun.com',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1557890594376',
                        ),
                        'Name' => 
                        array (
                          'description' => '资源组名称。',
                          'type' => 'string',
                          'example' => 'TIa2LGixyD',
                        ),
                        'Id' => 
                        array (
                          'description' => '资源组ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '8592',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所属地域ID。',
                          'type' => 'string',
                          'example' => 'cn-qingdao',
                        ),
                        'ecsList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EcsEntity' => 
                            array (
                              'description' => '实例列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '实例对象。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'VpcId' => 
                                  array (
                                    'description' => 'VPC唯一标识。',
                                    'type' => 'string',
                                    'example' => 'vpc-bp13evu4aayj2t1er****',
                                  ),
                                  'SgId' => 
                                  array (
                                    'description' => '安全组ID。',
                                    'type' => 'string',
                                    'example' => 'sg-m5eajgzn6b8sg9mv****',
                                  ),
                                  'Status' => 
                                  array (
                                    'description' => '实例状态，取值如下：

- Pending：创建中。
- Running：运行中。
- Starting：启动中。
- Stopping：停止中。
- Stopped：已停止。',
                                    'type' => 'string',
                                    'example' => 'Running',
                                  ),
                                  'PrivateIp' => 
                                  array (
                                    'description' => '私网IP。',
                                    'type' => 'string',
                                    'example' => '192.168.xx.xxx',
                                  ),
                                  'Expired' => 
                                  array (
                                    'description' => '是否过期：
- true：已过期。
- false：未过期。',
                                    'type' => 'boolean',
                                    'example' => 'true',
                                  ),
                                  'UserId' => 
                                  array (
                                    'description' => '用户账号。',
                                    'type' => 'string',
                                    'example' => '****_common_****@aliyun.com',
                                  ),
                                  'HostName' => 
                                  array (
                                    'description' => '主机名。',
                                    'type' => 'string',
                                    'example' => 'iZm5e853hvvrodnvqus****',
                                  ),
                                  'InstanceId' => 
                                  array (
                                    'description' => '实例ID。',
                                    'type' => 'string',
                                    'example' => 'i-m5e853hvvrodnvqu****',
                                  ),
                                  'Mem' => 
                                  array (
                                    'description' => '内存总量，单位为MB。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'RegionId' => 
                                  array (
                                    'description' => '地域ID。',
                                    'type' => 'string',
                                    'example' => 'ch-hangzhou',
                                  ),
                                  'Cpu' => 
                                  array (
                                    'description' => 'CPU总核数。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '2',
                                  ),
                                  'InnerIp' => 
                                  array (
                                    'description' => '内网IP。',
                                    'type' => 'string',
                                    'example' => '192.168.xx.xxx',
                                  ),
                                  'GroupId' => 
                                  array (
                                    'description' => 'EDAS资源组ID。',
                                    'type' => 'string',
                                    'example' => '64189****',
                                  ),
                                  'Eip' => 
                                  array (
                                    'description' => '弹性IP。',
                                    'type' => 'string',
                                    'example' => '192.168.xxx.xx',
                                  ),
                                  'Description' => 
                                  array (
                                    'description' => '描述。',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                  'InstanceName' => 
                                  array (
                                    'description' => '实例名称。',
                                    'type' => 'string',
                                    'example' => 'betabjmixcoud_01',
                                  ),
                                  'ZoneId' => 
                                  array (
                                    'description' => '所在地域ID。',
                                    'type' => 'string',
                                    'example' => 'cn-qingdao-h',
                                  ),
                                  'SerialNum' => 
                                  array (
                                    'description' => '序列号。',
                                    'type' => 'string',
                                    'example' => '98b480b8-458b-4ff3-84b9-cf7097c5****',
                                  ),
                                  'PublicIp' => 
                                  array (
                                    'description' => '公网IP。',
                                    'type' => 'string',
                                    'example' => '192.168.xx.xxx',
                                  ),
                                  'EcuEntity' => 
                                  array (
                                    'description' => 'ECU实体。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'VpcId' => 
                                      array (
                                        'description' => 'VPC网络ID。',
                                        'type' => 'string',
                                        'example' => 'vpc-2ze1ram356umxs598****',
                                      ),
                                      'UpdateTime' => 
                                      array (
                                        'description' => '更新时间的时间戳。',
                                        'type' => 'integer',
                                        'format' => 'int64',
                                        'example' => '1573281040827',
                                      ),
                                      'IpAddr' => 
                                      array (
                                        'description' => 'ECU的内网IP。',
                                        'type' => 'string',
                                        'example' => '192.168.xxx.xx',
                                      ),
                                      'AvailableCpu' => 
                                      array (
                                        'description' => '可用CPU。',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '1',
                                      ),
                                      'CreateTime' => 
                                      array (
                                        'description' => '创建时间的时间戳。',
                                        'type' => 'integer',
                                        'format' => 'int64',
                                        'example' => '1557890594376',
                                      ),
                                      'UserId' => 
                                      array (
                                        'description' => '关联用户ID。',
                                        'type' => 'string',
                                        'example' => 'edas_****_test@aliyun-****.com',
                                      ),
                                      'InstanceId' => 
                                      array (
                                        'description' => '实例ID。',
                                        'type' => 'string',
                                        'example' => 'i-2zej4i2jdf*********',
                                      ),
                                      'Mem' => 
                                      array (
                                        'description' => '内存总量，单位为MB。',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '200',
                                      ),
                                      'RegionId' => 
                                      array (
                                        'description' => '地域ID。',
                                        'type' => 'string',
                                        'example' => 'cn-beijing ',
                                      ),
                                      'EcuId' => 
                                      array (
                                        'description' => '这台ECU的唯一标示ID，可以通过在ECS上执行`dmidecode`获取。',
                                        'type' => 'string',
                                        'example' => '0de2ebdb-9490-4fc4-be41***************',
                                      ),
                                      'Cpu' => 
                                      array (
                                        'description' => 'CPU总核数。',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '2',
                                      ),
                                      'DockerEnv' => 
                                      array (
                                        'description' => '是否安装了Docker：
- true：安装了Docker。
- false：未安装Docker。',
                                        'type' => 'boolean',
                                        'example' => 'true',
                                      ),
                                      'Online' => 
                                      array (
                                        'description' => '是否在线：
- true：在线。
- false：不在线。',
                                        'type' => 'boolean',
                                        'example' => 'true',
                                      ),
                                      'AvailableMem' => 
                                      array (
                                        'description' => '可用内存。',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '200',
                                      ),
                                      'ZoneId' => 
                                      array (
                                        'description' => '所在地域ID。',
                                        'type' => 'string',
                                        'example' => 'cn-beijing-b',
                                      ),
                                      'Name' => 
                                      array (
                                        'description' => 'ECU名称。',
                                        'type' => 'string',
                                        'example' => 'test',
                                      ),
                                      'HeartbeatTime' => 
                                      array (
                                        'description' => '上一次心跳检测的时间戳。',
                                        'type' => 'integer',
                                        'format' => 'int64',
                                        'example' => '1573281040819',
                                      ),
                                    ),
                                  ),
                                  'VpcEntity' => 
                                  array (
                                    'description' => 'VPC实例。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Status' => 
                                      array (
                                        'description' => '实例状态。',
                                        'type' => 'string',
                                        'example' => 'Running',
                                      ),
                                      'VpcName' => 
                                      array (
                                        'description' => 'VPC名称。',
                                        'type' => 'string',
                                        'example' => 'test',
                                      ),
                                      'VpcId' => 
                                      array (
                                        'description' => 'VPC唯一标识。',
                                        'type' => 'string',
                                        'example' => 'vpc-bp13evu42t1er****',
                                      ),
                                      'Description' => 
                                      array (
                                        'description' => '描述。',
                                        'type' => 'string',
                                        'example' => '""',
                                      ),
                                      'Expired' => 
                                      array (
                                        'description' => '是否过期：

- true：已过期。
- false：未过期。',
                                        'type' => 'boolean',
                                        'example' => 'true',
                                      ),
                                      'Cidrblock' => 
                                      array (
                                        'description' => '交换机的IPv4网段。',
                                        'type' => 'string',
                                        'example' => '192.168.xx.xxx',
                                      ),
                                      'UserId' => 
                                      array (
                                        'description' => '用户ID。',
                                        'type' => 'string',
                                        'example' => '****_common_****@aliyun.com',
                                      ),
                                      'EcsNum' => 
                                      array (
                                        'description' => '实例数量。',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '1',
                                      ),
                                      'RegionId' => 
                                      array (
                                        'description' => '所在地域。',
                                        'type' => 'string',
                                        'example' => 'cn-qingdao',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'SlbList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SlbEntity' => 
                            array (
                              'description' => 'SLB列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'SLB对象。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'SlbId' => 
                                  array (
                                    'description' => 'SLB唯一标识。',
                                    'type' => 'string',
                                    'example' => 'lb-2zebf1fpbpkc7dnro****',
                                  ),
                                  'VpcId' => 
                                  array (
                                    'description' => 'VPC ID。',
                                    'type' => 'string',
                                    'example' => 'vpc-m5e666n89m2bx8jar****',
                                  ),
                                  'VswitchId' => 
                                  array (
                                    'description' => '交换机ID。',
                                    'type' => 'string',
                                    'example' => 'vsw-mktkxkhah14****',
                                  ),
                                  'Expired' => 
                                  array (
                                    'description' => '是否过期：

- true：已过期。
- false：未过期。',
                                    'type' => 'boolean',
                                    'example' => 'true',
                                  ),
                                  'UserId' => 
                                  array (
                                    'description' => '用户UID。',
                                    'type' => 'string',
                                    'example' => '****@aliyun.com',
                                  ),
                                  'AddressType' => 
                                  array (
                                    'description' => '地址类型：
- Internet：公网地址。
- Intranet：私网地址。',
                                    'type' => 'string',
                                    'example' => 'Intranet',
                                  ),
                                  'NetworkType' => 
                                  array (
                                    'description' => '网络类型：
- 经典网络。
- VPC。',
                                    'type' => 'string',
                                    'example' => 'vpc',
                                  ),
                                  'RegionId' => 
                                  array (
                                    'description' => '地域ID。',
                                    'type' => 'string',
                                    'example' => 'cn-beijing',
                                  ),
                                  'GroupId' => 
                                  array (
                                    'description' => '分组ID。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '64189****',
                                  ),
                                  'Address' => 
                                  array (
                                    'description' => 'IP地址。',
                                    'type' => 'string',
                                    'example' => '192.168.xxx.xx',
                                  ),
                                  'SlbName' => 
                                  array (
                                    'description' => 'SLB名称。',
                                    'type' => 'string',
                                    'example' => 'a9315af59b4cd11e9a18c00163e1****',
                                  ),
                                  'SlbStatus' => 
                                  array (
                                    'description' => 'SLB状态。',
                                    'type' => 'string',
                                    'example' => 'active',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-****\\",\\n  \\"ResourceGroupList\\": {\\n    \\"ResGroupEntity\\": [\\n      {\\n        \\"UpdateTime\\": 1573281040827,\\n        \\"Description\\": \\"QqLZDA3pBZ\\",\\n        \\"AdminUserId\\": \\"****@aliyun.com\\",\\n        \\"CreateTime\\": 1557890594376,\\n        \\"Name\\": \\"TIa2LGixyD\\",\\n        \\"Id\\": 8592,\\n        \\"RegionId\\": \\"cn-qingdao\\",\\n        \\"ecsList\\": {\\n          \\"EcsEntity\\": [\\n            {\\n              \\"VpcId\\": \\"vpc-bp13evu4aayj2t1er****\\",\\n              \\"SgId\\": \\"sg-m5eajgzn6b8sg9mv****\\",\\n              \\"Status\\": \\"Running\\",\\n              \\"PrivateIp\\": \\"192.168.xx.xxx\\",\\n              \\"Expired\\": true,\\n              \\"UserId\\": \\"****_common_****@aliyun.com\\",\\n              \\"HostName\\": \\"iZm5e853hvvrodnvqus****\\",\\n              \\"InstanceId\\": \\"i-m5e853hvvrodnvqu****\\",\\n              \\"Mem\\": 1,\\n              \\"RegionId\\": \\"ch-hangzhou\\",\\n              \\"Cpu\\": 2,\\n              \\"InnerIp\\": \\"192.168.xx.xxx\\",\\n              \\"GroupId\\": \\"64189****\\",\\n              \\"Eip\\": \\"192.168.xxx.xx\\",\\n              \\"Description\\": \\"test\\",\\n              \\"InstanceName\\": \\"betabjmixcoud_01\\",\\n              \\"ZoneId\\": \\"cn-qingdao-h\\",\\n              \\"SerialNum\\": \\"98b480b8-458b-4ff3-84b9-cf7097c5****\\",\\n              \\"PublicIp\\": \\"192.168.xx.xxx\\",\\n              \\"EcuEntity\\": {\\n                \\"VpcId\\": \\"vpc-2ze1ram356umxs598****\\",\\n                \\"UpdateTime\\": 1573281040827,\\n                \\"IpAddr\\": \\"192.168.xxx.xx\\",\\n                \\"AvailableCpu\\": 1,\\n                \\"CreateTime\\": 1557890594376,\\n                \\"UserId\\": \\"edas_****_test@aliyun-****.com\\",\\n                \\"InstanceId\\": \\"i-2zej4i2jdf*********\\",\\n                \\"Mem\\": 200,\\n                \\"RegionId\\": \\"cn-beijing \\",\\n                \\"EcuId\\": \\"0de2ebdb-9490-4fc4-be41***************\\",\\n                \\"Cpu\\": 2,\\n                \\"DockerEnv\\": true,\\n                \\"Online\\": true,\\n                \\"AvailableMem\\": 200,\\n                \\"ZoneId\\": \\"cn-beijing-b\\",\\n                \\"Name\\": \\"test\\",\\n                \\"HeartbeatTime\\": 1573281040819\\n              },\\n              \\"VpcEntity\\": {\\n                \\"Status\\": \\"Running\\",\\n                \\"VpcName\\": \\"test\\",\\n                \\"VpcId\\": \\"vpc-bp13evu42t1er****\\",\\n                \\"Description\\": \\"\\\\\\"\\\\\\"\\",\\n                \\"Expired\\": true,\\n                \\"Cidrblock\\": \\"192.168.xx.xxx\\",\\n                \\"UserId\\": \\"****_common_****@aliyun.com\\",\\n                \\"EcsNum\\": 1,\\n                \\"RegionId\\": \\"cn-qingdao\\"\\n              }\\n            }\\n          ]\\n        },\\n        \\"SlbList\\": {\\n          \\"SlbEntity\\": [\\n            {\\n              \\"SlbId\\": \\"lb-2zebf1fpbpkc7dnro****\\",\\n              \\"VpcId\\": \\"vpc-m5e666n89m2bx8jar****\\",\\n              \\"VswitchId\\": \\"vsw-mktkxkhah14****\\",\\n              \\"Expired\\": true,\\n              \\"UserId\\": \\"****@aliyun.com\\",\\n              \\"AddressType\\": \\"Intranet\\",\\n              \\"NetworkType\\": \\"vpc\\",\\n              \\"RegionId\\": \\"cn-beijing\\",\\n              \\"GroupId\\": 0,\\n              \\"Address\\": \\"192.168.xxx.xx\\",\\n              \\"SlbName\\": \\"a9315af59b4cd11e9a18c00163e1****\\",\\n              \\"SlbStatus\\": \\"active\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>b197-40ab-9155-7ca7</RequestId>\\n<Message>success</Message>\\n<ResourceGroupList>\\n    <ResGroupEntity>\\n        <Description>QqLZDA3pBZ</Description>\\n        <CreateTime>1557890594376</CreateTime>\\n        <UpdateTime>1573281040827</UpdateTime>\\n        <AdminUserId>117274586608****</AdminUserId>\\n        <RegionId>cn-qingdao</RegionId>\\n        <Id>8592</Id>\\n        <ecsList>\\n            <EcsEntity>\\n                <Status>Running</Status>\\n                <VpcEntity>\\n                    <Status>Running</Status>\\n                    <Description>\\"\\"</Description>\\n                    <VpcId>vpc-bp13evu4aayj2t1er****</VpcId>\\n                    <UserId>****_common_****@aliyun.com</UserId>\\n                    <EcsNum>1</EcsNum>\\n                    <Expired>true</Expired>\\n                    <Cidrblock>130.3</Cidrblock>\\n                    <VpcName>test</VpcName>\\n                    <RegionId>cn-qingdao</RegionId>\\n                </VpcEntity>\\n                <Description>\\"\\"</Description>\\n                <ZoneId>cn-qingdao-h</ZoneId>\\n                <InnerIp>192.168.xx.xxx</InnerIp>\\n                <PublicIp>130.30.xx.xxx</PublicIp>\\n                <InstanceId>i-m5e853hvvrodnvqu****</InstanceId>\\n                <SgId>sg-m5eajgzn6b8sg9mv****</SgId>\\n                <Cpu>2</Cpu>\\n                <Expired>true</Expired>\\n                <Eip>130.30.xx.xxx</Eip>\\n                <GroupId>0</GroupId>\\n                <InstanceName>betabjmixcoud_01</InstanceName>\\n                <SerialNum>98b480b8-458b-4ff3-84b9-cf7097c5****</SerialNum>\\n                <Mem>1</Mem>\\n                <VpcId>vpc-bp13evu4aayj2t1er****</VpcId>\\n                <PrivateIp>192.168.xx.xxx</PrivateIp>\\n                <UserId>****_common_****@aliyun.com</UserId>\\n                <EcuEntity>\\n                    <IpAddr>192.168.xxx.xx</IpAddr>\\n                    <ZoneId>cn-beijing-b</ZoneId>\\n                    <InstanceId>i-2zej4i2jdf*********</InstanceId>\\n                    <CreateTime>1557890594376</CreateTime>\\n                    <Cpu>2</Cpu>\\n                    <EcuId>0de2ebdb-9490-4fc4-be41***************</EcuId>\\n                    <AvailableMem>200</AvailableMem>\\n                    <HeartbeatTime>1573281040819</HeartbeatTime>\\n                    <Name>test</Name>\\n                    <Mem>200</Mem>\\n                    <VpcId>vpc-2ze1ram356umxs598****</VpcId>\\n                    <UserId>edas_****_test@aliyun-****.com</UserId>\\n                    <UpdateTime>1573281040827</UpdateTime>\\n                    <RegionId>cn-beijing</RegionId>\\n                    <Online>true</Online>\\n                    <AvailableCpu>1</AvailableCpu>\\n                    <DockerEnv>true</DockerEnv>\\n                </EcuEntity>\\n                <RegionId>ch-hangzhou</RegionId>\\n                <HostName>iZm5e853hvvrodnvqus****</HostName>\\n            </EcsEntity>\\n        </ecsList>\\n        <SlbList>\\n            <SlbEntity>\\n                <SlbId>lb-2zebf1fpbpkc7dnro****</SlbId>\\n                <VpcId>641897243</VpcId>\\n                <Address>192.168.xxx.xx</Address>\\n                <NetworkType>vpc</NetworkType>\\n                <UserId>641897243</UserId>\\n                <Expired>true</Expired>\\n                <RegionId>cn-beijing</RegionId>\\n                <AddressType>Intranet</AddressType>\\n                <VswitchId>641897243</VswitchId>\\n                <SlbName>a9315af59b4cd11e9a18c00163e1****</SlbName>\\n                <GroupId>641897243</GroupId>\\n                <SlbStatus>active</SlbStatus>\\n            </SlbEntity>\\n        </SlbList>\\n        <Name>TIa2LGixyD</Name>\\n    </ResGroupEntity>\\n</ResourceGroupList>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '查询资源组信息',
      'summary' => '获取资源组列表。',
      'requestParamsDescription' => ' 无请求参数。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
      'parameters' => 
      array (
      ),
    ),
    'ListTagResources' => 
    array (
      'path' => '/pop/v5/tag/tags',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型，取值：

- **application**：EDAS应用。

- **cluster**：EDAS集群。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'application',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源ID列表， 列表的长度范围为1~20，JSON数组格式。',
            'type' => 'string',
            'required' => false,
            'example' => '["000e5836-xxxx-xxxx-xxxx-0d6ab2ac4877"]',
          ),
        ),
        2 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签键值对。
- 单个资源最多贴20个标签。
- key不能以**aliyun**和**acs:**开头，不能包含**http://**或者**https://**。
- key和value最大不超过128字符，仅支持英文字母、数字和短划线（-）、半角逗号（,）、星号（*）、正斜线（/）、半角问号（?）和半角冒号（:）的组合。
- JSON数组格式。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"key":"key1","value":"v1"},{"key":"key2","value":"v2"}]',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID。',
                'type' => 'string',
                'example' => 'xxxxE654-xxxx-xxxx-xxxx-98F45996xxxx',
              ),
              'TagResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TagResource' => 
                  array (
                    'description' => '资源标签列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TagValue' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'value1',
                        ),
                        'ResourceType' => 
                        array (
                          'description' => '资源类型。',
                          'type' => 'string',
                          'example' => 'ALIYUN::EDAS::APPLICATION',
                        ),
                        'ResourceId' => 
                        array (
                          'description' => '资源ID。',
                          'type' => 'string',
                          'example' => '000e5836-xxxx-xxxx-xxxx-0d6ab2ac4877',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'key1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.InstanceNotExist.Instance.message',
            'errorMessage' => 'The instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"xxxxE654-xxxx-xxxx-xxxx-98F45996xxxx\\",\\n  \\"TagResources\\": {\\n    \\"TagResource\\": [\\n      {\\n        \\"TagValue\\": \\"value1\\",\\n        \\"ResourceType\\": \\"ALIYUN::EDAS::APPLICATION\\",\\n        \\"ResourceId\\": \\"000e5836-xxxx-xxxx-xxxx-0d6ab2ac4877\\",\\n        \\"TagKey\\": \\"key1\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>xxxxE654-xxxx-xxxx-xxxx-98F45996xxxx</RequestId>\\n<TagResources>\\n    <TagResource>\\n        <ResourceId>000e5836-xxxx-xxxx-xxxx-0d6ab2ac4877</ResourceId>\\n        <TagKey>key1</TagKey>\\n        <ResourceType>ALIYUN::EDAS::APPLICATION</ResourceType>\\n        <TagValue>value1</TagValue>\\n    </TagResource>\\n</TagResources>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '查询资源绑定的标签列表',
      'summary' => '查询云资源已经绑定的标签列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TagResources' => 
    array (
      'path' => '/pop/v5/tag/tags',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型，取值：
- **application：EDAS**应用。 
- **cluster**：EDAS集群。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'application',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源ID列表， 列表的长度范围为1~20，JSON数组格式。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '["000e5836-xxxx-xxxx-xxxx-0d6ab2ac4877"]',
          ),
        ),
        2 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签键值对。设置时，请注意以下限制：
- 单个资源最多贴20个标签。
- key不能以**aliyun**和**acs:**开头，不能包含**http://**或者**https://**。
- key和value最大不超过128字符，仅支持英文字母、数字和短划线（-）、半角逗号（,）、星号（*）、正斜线（/）、半角问号（?）和半角冒号（:）的组合。
- JSON格式字符串。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[{"key":"key1","value":"v1"},{"key":"key2","value":"v2"}]',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID。',
                'type' => 'string',
                'example' => '000e5836-xxxx-xxxx-xxxx-0d6ab2ac4877',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.InstanceNotExist.Instance.message',
            'errorMessage' => 'The instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"000e5836-xxxx-xxxx-xxxx-0d6ab2ac4877\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>000e5836-xxxx-xxxx-xxxx-0d6ab2ac4877</RequestId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '为资源绑定标签',
      'summary' => '调用TagResources为指定的资源统一创建并绑定标签。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UntagResources' => 
    array (
      'path' => '/pop/v5/tag/tags',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-beijing',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型，取值：
- **application**：EDAS应用。 
- **cluster**：EDAS集群。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'application',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源ID列表，列表范围为1~20。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '["f5ad6ff7-xxxx-xxxx-xxxx-2axxxx82xxxx"]',
          ),
        ),
        3 => 
        array (
          'name' => 'TagKeys',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑的标签键列表，列表的取值范围1~20，json数组格式。',
            'type' => 'string',
            'required' => false,
            'example' => '["tagKey1","tagKey2"]',
          ),
        ),
        4 => 
        array (
          'name' => 'DeleteAll',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否删除选定资源下所有的用户标签，默认为false。

- **true**：删除资源的标签。

- **false**：不删除资源的标签。

> 仅当**tagKeys**为空，**deleteAll=true**时，才可以删除所有的客户标签。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID。',
                'type' => 'string',
                'example' => '000e5836-xxxx-xxxx-xxxx-0d6ab2ac4877',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.InstanceNotExist.Instance.message',
            'errorMessage' => 'The instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"000e5836-xxxx-xxxx-xxxx-0d6ab2ac4877\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>000e5836-xxxx-xxxx-xxxx-0d6ab2ac4877</RequestId>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '删除资源标签',
      'summary' => '调用UntagResources接口为指定的资源列表统一解绑标签。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateIDCImportCommand' => 
    array (
      'path' => '/pop/v5/create_idc_import_command',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '目标集群ID，可调用ListCluster接口获取，详情请参见[ListCluster](~~154995~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '7246cxxx-53xx-xxxx-xxxx-xxxxxxxx',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '导入命令。',
                'type' => 'string',
                'example' => 'wget -q -O /tmp/install.sh http://edas-hz.oss-cn-hangzhou-internal.aliyuncs.com/install.sh && sh /tmp/install.sh -idcToken xxxx-xxxxx-xxxxx-xxxxxxx -edasId xxxxxxxxxxxxxx',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-7ca7',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnknownError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": \\"wget -q -O /tmp/install.sh http://edas-hz.oss-cn-hangzhou-internal.aliyuncs.com/install.sh && sh /tmp/install.sh -idcToken xxxx-xxxxx-xxxxx-xxxxxxx -edasId xxxxxxxxxxxxxx\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-7ca7\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>b197-40ab-9155-7ca7</RequestId>\\n<Data>wget -q -O /root/install.sh http://edas-hz.oss-cn-hangzhou-internal.aliyuncs.com/install.sh &amp;&amp; sh /root/install.sh -idcToken xxxx-xxxxx-xxxxx-xxxxxxx -edasId xxxxxxxxxxxxxx</Data>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '生成非阿里云ECS集群的导入命令',
      'summary' => '调用CreateIDCImportCommand接口生成非阿里云ECS集群的导入命令。',
      'description' => '## 导入非阿里云ECS至非阿里云ECS集群的步骤说明
您需先调用CreateIDCImportCommand接口生成非阿里云ECS集群的导入命令，然后在非阿里云的实例中执行该导入命令，即可将非阿里云的实例导入至非阿里云ECS集群中。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteClusterMember' => 
    array (
      'path' => '/pop/v5/resource/cluster_member',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID',
            'type' => 'string',
            'required' => true,
            'example' => '52984524-****-****-85f2-a34b0e5bb521',
            'docRequired' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterMemberId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群机器ID',
            'type' => 'string',
            'required' => true,
            'example' => 'i-2zej4i2jdf3****jigng',
            'docRequired' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'Code码 ',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息 ',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求唯一ID',
                'type' => 'string',
                'example' => 'b197-40ab-9155-7ca7',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": true,\\n  \\"RequestId\\": \\"b197-40ab-9155-7ca7\\"\\n}","errorExample":""},{"type":"xml","example":"<Data>ok</Data>\\n<Code>200</Code>\\n<Message>success</Message>","errorExample":""}]',
      'title' => '删除集群实例',
      'summary' => '调用DeleteClusterMember接口删除集群实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteEcu' => 
    array (
      'path' => '/pop/v5/resource/delete_ecu',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EcuId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECU唯一标识。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5c0b8c82-4ba9-****-****-130a34ffa534',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '成功返回`OK`。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'fb08fd29-b197-40ab-****-****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": \\"OK\\",\\n  \\"RequestId\\": \\"fb08fd29-b197-40ab-****-****\\"\\n}","errorExample":""},{"type":"xml","example":"<Data>OK</Data>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '删除指定的 ECU',
      'summary' => '删除指定的 ECU。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListClusterMembers' => 
    array (
      'path' => '/pop/v5/resource/cluster_member_list',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。可以调用ListCluster来获取，具体操作，请参见[ListCluster](~~154995~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '52984524-6d48-4bbd-85f2-a34b0e5b****',
          ),
        ),
        1 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时，当前显示的页面数，不设置的情况下默认显示第1页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时，若不设置，则显示该集群的所有ECS列表；若设置，则按照设置的pagesize来分页显示ECS列表。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '50',
          ),
        ),
        3 => 
        array (
          'name' => 'EcsList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS列表实例数。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-****',
              ),
              'ClusterMemberPage' => 
              array (
                'description' => '集群中包含的ECS实例页面。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '分页查询时，当前显示的页面数，不设置的情况下默认显示第1页。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '所有实例分页显示的页面数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalSize' => 
                  array (
                    'description' => '所有的ECS实例按照PageSize的大小进行分页显示时，总的显示页数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'ClusterMemberList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ClusterMember' => 
                      array (
                        'description' => '集群中包含的实例列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '集群实例对象。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '实例状态：

- 1：表示运行中。
- 0：表示转化中。
- -1：表示转化失败。
- -2：表示离线。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'UpdateTime' => 
                            array (
                              'description' => '更新时间的时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1573281041113',
                            ),
                            'EcuId' => 
                            array (
                              'description' => '这台ECU的唯一标示ID，可以通过在ECS上执行`dmidecode`获取。',
                              'type' => 'string',
                              'example' => '70ed3f59-b476-49aa-be09-9e6c375d****',
                            ),
                            'EcsId' => 
                            array (
                              'description' => 'ECS ID。',
                              'type' => 'string',
                              'example' => 'i-2zej4i2jdf3ntwhj****',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => '创建时间的时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1573281038175',
                            ),
                            'ClusterMemberId' => 
                            array (
                              'description' => '实例集群ID。',
                              'type' => 'string',
                              'example' => 'adb03eeb-3adf-4d7e-afe1-03d1ad45****',
                            ),
                            'ClusterId' => 
                            array (
                              'description' => '集群ID。',
                              'type' => 'string',
                              'example' => '52984524-6d48-4bbd-85f2-a34b0e5b****',
                            ),
                            'PrivateIp' => 
                            array (
                              'title' => 'ECS私网IP',
                              'description' => 'ECS私网IP',
                              'type' => 'string',
                              'example' => '172.16.XXX.XXX',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-****\\",\\n  \\"ClusterMemberPage\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalSize\\": 5,\\n    \\"ClusterMemberList\\": {\\n      \\"ClusterMember\\": [\\n        {\\n          \\"Status\\": 1,\\n          \\"UpdateTime\\": 1573281041113,\\n          \\"EcuId\\": \\"70ed3f59-b476-49aa-be09-9e6c375d****\\",\\n          \\"EcsId\\": \\"i-2zej4i2jdf3ntwhj****\\",\\n          \\"CreateTime\\": 1573281038175,\\n          \\"ClusterMemberId\\": \\"adb03eeb-3adf-4d7e-afe1-03d1ad45****\\",\\n          \\"ClusterId\\": \\"52984524-6d48-4bbd-85f2-a34b0e5b****\\",\\n          \\"PrivateIp\\": \\"172.16.XXX.XXX\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListClusterMembersResponse>\\n    <Message>success</Message>\\n    <RequestId>b197-40ab-9155-****</RequestId>\\n    <ClusterMemberPage>\\n        <ClusterMemberList>\\n            <ClusterMember>\\n                <Status>1</Status>\\n                <ClusterId>52984524-6d48-4bbd-85f2-a34b0e5b****</ClusterId>\\n                <CreateTime>1573281038175</CreateTime>\\n                <UpdateTime>1573281041113</UpdateTime>\\n                <EcuId>70ed3f59-b476-49aa-be09-9e6c375d****</EcuId>\\n                <ClusterMemberId>adb03eeb-3adf-4d7e-afe1-03d1ad45****</ClusterMemberId>\\n                <EcsId>i-2zej4i2jdf3ntwhj****</EcsId>\\n            </ClusterMember>\\n        </ClusterMemberList>\\n        <PageSize>10</PageSize>\\n        <CurrentPage>1</CurrentPage>\\n        <TotalSize>5</TotalSize>\\n    </ClusterMemberPage>\\n    <Code>200</Code>\\n</ListClusterMembersResponse>","errorExample":""}]',
      'title' => '获取ECS实例列表',
      'summary' => '获取ECS实例列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListEcuByRegion' => 
    array (
      'path' => '/pop/v5/resource/ecu_list',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID：
- 自定义命名空间ID格式为：`地域ID:命名空间标示符`，例如：cn-beijing:tdy218。
- 默认命名空间ID格式为：`地域ID`，例如：cn-beijing。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing 或 cn-beijing:tdy218',
          ),
        ),
        1 => 
        array (
          'name' => 'Act',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '固定值为`pop-query`。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pop-query',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息 。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '00000000-0000-0000-****',
              ),
              'EcuEntityList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EcuEntity' => 
                  array (
                    'description' => 'ECU列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'ECU列表对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => 'ECU所在的VPC ID。',
                          'type' => 'string',
                          'example' => 'vpc-2zew8mi6gqbo5wf****',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '最后变更时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1572867895575',
                        ),
                        'IpAddr' => 
                        array (
                          'description' => 'ECU的私网IP。',
                          'type' => 'string',
                          'example' => '192.168.xxx.xxx',
                        ),
                        'AvailableCpu' => 
                        array (
                          'description' => 'ECU的可用CPU核数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '4',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1572539283168',
                        ),
                        'UserId' => 
                        array (
                          'description' => '主账号ID。',
                          'type' => 'string',
                          'example' => 'edas@aliyun-****.com',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => 'ECU ID。',
                          'type' => 'string',
                          'example' => 'i-2ze82h8f4zcn449y****',
                        ),
                        'Mem' => 
                        array (
                          'description' => '总内存，单位MB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'ECU所在地域ID。',
                          'type' => 'string',
                          'example' => 'cn-beijing',
                        ),
                        'EcuId' => 
                        array (
                          'description' => '这台ECU的唯一标示ID，可以在ECS上执行`dmidecode`获取。',
                          'type' => 'string',
                          'example' => 'c96c494c-1b91-4456-bbb3-b5afcd16****',
                        ),
                        'Cpu' => 
                        array (
                          'description' => 'CPU总核数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'DockerEnv' => 
                        array (
                          'description' => '是否安装了Docker：
- true：已安装Docker。
- false：未安装Docker。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Online' => 
                        array (
                          'description' => '是否在线：
- true：在线。
- false：不在线。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'AvailableMem' => 
                        array (
                          'description' => 'ECU的可用内存数，单位MB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '8192',
                        ),
                        'ZoneId' => 
                        array (
                          'description' => 'ECU所在可用区ID。',
                          'type' => 'string',
                          'example' => 'cn-beijing-a',
                        ),
                        'Name' => 
                        array (
                          'description' => 'ECU名称。',
                          'type' => 'string',
                          'example' => 'worker-k8s-for',
                        ),
                        'HeartbeatTime' => 
                        array (
                          'description' => '上一次心跳检测的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1572867865221',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"00000000-0000-0000-****\\",\\n  \\"EcuEntityList\\": {\\n    \\"EcuEntity\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-2zew8mi6gqbo5wf****\\",\\n        \\"UpdateTime\\": 1572867895575,\\n        \\"IpAddr\\": \\"192.168.xxx.xxx\\",\\n        \\"AvailableCpu\\": 4,\\n        \\"CreateTime\\": 1572539283168,\\n        \\"UserId\\": \\"edas@aliyun-****.com\\",\\n        \\"InstanceId\\": \\"i-2ze82h8f4zcn449y****\\",\\n        \\"Mem\\": 0,\\n        \\"RegionId\\": \\"cn-beijing\\",\\n        \\"EcuId\\": \\"c96c494c-1b91-4456-bbb3-b5afcd16****\\",\\n        \\"Cpu\\": 0,\\n        \\"DockerEnv\\": true,\\n        \\"Online\\": false,\\n        \\"AvailableMem\\": 8192,\\n        \\"ZoneId\\": \\"cn-beijing-a\\",\\n        \\"Name\\": \\"worker-k8s-for\\",\\n        \\"HeartbeatTime\\": 1572867865221\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Code>200</Code>\\n<EcuEntityList>\\n    <EcuEntity>\\n        <AvailableMem>8192</AvailableMem>\\n        <Mem>0</Mem>\\n        <AvailableCpu>4</AvailableCpu>\\n        <InstanceId>i-2ze82h8f4zcn449y****</InstanceId>\\n        <Online>false</Online>\\n        <UpdateTime>1572867895575</UpdateTime>\\n        <UserId>edas_****_test@aliyun-****.com</UserId>\\n        <ZoneId>cn-beijing-a</ZoneId>\\n        <VpcId>vpc-2zew8mi6gqbo5wf3r****</VpcId>\\n        <IpAddr>192.168.0.115</IpAddr>\\n        <Name>worker-k8s-for-cs</Name>\\n        <Cpu>0</Cpu>\\n        <HeartbeatTime>1572867865221</HeartbeatTime>\\n        <CreateTime>1572539283168</CreateTime>\\n        <RegionId>cn-beijing</RegionId>\\n        <EcuId>c96c494c-1b91-4456-bbb3-b5afcd16****</EcuId>\\n        <DockerEnv>true</DockerEnv>\\n    </EcuEntity>\\n    <EcuEntity>\\n        <AvailableMem>2048</AvailableMem>\\n        <Mem>0</Mem>\\n        <AvailableCpu>2</AvailableCpu>\\n        <InstanceId>i-2zej4i2jdf3ntwh****</InstanceId>\\n        <Online>true</Online>\\n        <UpdateTime>1573281041150</UpdateTime>\\n        <UserId>edas_****_test@aliyun-****.com</UserId>\\n        <ZoneId>cn-beijing-h</ZoneId>\\n        <VpcId>vpc-2zef6ob8mrlzv8x3q****</VpcId>\\n        <IpAddr>192.168.0.154</IpAddr>\\n        <Name>product_test004</Name>\\n        <Cpu>0</Cpu>\\n        <HeartbeatTime>1573281041143</HeartbeatTime>\\n        <CreateTime>1573281041143</CreateTime>\\n        <RegionId>cn-beijing</RegionId>\\n        <EcuId>cfe7f474-3861-453e-b236-887d4932****</EcuId>\\n        <DockerEnv>false</DockerEnv>\\n    </EcuEntity>\\n</EcuEntityList>","errorExample":""}]',
      'title' => '获取指定命名空间下可用的ECU列表',
      'summary' => '获取指定命名空间下可用的ECU列表。',
      'description' => '## 基本概念

- **命名空间**：指的是EDAS中设计的用于隔离集群、ECS实例和应用等资源及在EDAS中发布的微服务的一个逻辑概念，包括默认命名空间和自定义命名空间，每个地域下面包括一个默认命名空间和若干个自定义命名空间，默认情况下只有默认命名空间，如果不想隔离资源及微服务，则不必创建自定义命名空间。
- **ECU**：ECS导入到集群中后即为ECU。
- **ECC**：集群中的ECU在应用中部署后即成为ECC。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListConvertableEcu' => 
    array (
      'path' => '/pop/v5/resource/convertable_ecu_list',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'clusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。获取集群ID，请参见[ListCluster](~~154995~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b3e3f77b-462e-****-****-bec8727a****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-7ca7',
              ),
              'InstanceList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Instance' => 
                  array (
                    'description' => '可导入该集群的ECS实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'ECS实例对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => 'VPC网络ID。',
                          'type' => 'string',
                          'example' => 'vpc-2zef6ob8m************',
                        ),
                        'Status' => 
                        array (
                          'description' => '实例状态：
- Pending：创建中。
- Running：运行中。
- Starting：启动中。
- Stopping：停止中。
- Stopped：已停止。',
                          'type' => 'string',
                          'example' => ' Running',
                        ),
                        'PrivateIp' => 
                        array (
                          'description' => 'ECS实例私网IP，当ECS网络类型为VPC专有网络类型时。 ',
                          'type' => 'string',
                          'example' => '192.XX.XX.123',
                        ),
                        'Expired' => 
                        array (
                          'description' => '是否过期。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => 'ECS实例ID。',
                          'type' => 'string',
                          'example' => 'i-2ze7s2v0b***********',
                        ),
                        'Mem' => 
                        array (
                          'description' => 'ECS实例MEM。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '4096',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在地域ID。',
                          'type' => 'string',
                          'example' => 'cn-beijing',
                        ),
                        'VpcName' => 
                        array (
                          'description' => 'VPC网络名称。',
                          'type' => 'string',
                          'example' => 'jianwei-test',
                        ),
                        'EcuId' => 
                        array (
                          'description' => 'ECU ID。',
                          'type' => 'string',
                          'example' => 'b197-40ab-9155-7ca7',
                        ),
                        'Cpu' => 
                        array (
                          'description' => 'ECS实例CPU。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'InnerIp' => 
                        array (
                          'description' => 'ECS实例内网IP，当ECS网络类型为专有网络类型时。',
                          'type' => 'string',
                          'example' => '192.168.13.xx',
                        ),
                        'Eip' => 
                        array (
                          'description' => 'ECS弹性公网IP，可更换绑定目标。',
                          'type' => 'string',
                          'example' => '13.xx.xxx.xx',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => 'ECS实例名称。',
                          'type' => 'string',
                          'example' => 'worker-k8s',
                        ),
                        'PublicIp' => 
                        array (
                          'description' => 'ECS实例公网IP，固定给该ECS实例使用。 ',
                          'type' => 'string',
                          'example' => '13.xx.xx.xxx',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-7ca7\\",\\n  \\"InstanceList\\": {\\n    \\"Instance\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-2zef6ob8m************\\",\\n        \\"Status\\": \\" Running\\",\\n        \\"PrivateIp\\": \\"192.XX.XX.123\\",\\n        \\"Expired\\": false,\\n        \\"InstanceId\\": \\"i-2ze7s2v0b***********\\",\\n        \\"Mem\\": 4096,\\n        \\"RegionId\\": \\"cn-beijing\\",\\n        \\"VpcName\\": \\"jianwei-test\\",\\n        \\"EcuId\\": \\"b197-40ab-9155-7ca7\\",\\n        \\"Cpu\\": 2,\\n        \\"InnerIp\\": \\"192.168.13.xx\\",\\n        \\"Eip\\": \\"13.xx.xxx.xx\\",\\n        \\"InstanceName\\": \\"worker-k8s\\",\\n        \\"PublicIp\\": \\"13.xx.xx.xxx\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Code>200</Code>\\n<InstanceList>\\n    <Instance>\\n        <Status> Running</Status>\\n        <VpcName>test</VpcName>\\n        <Cpu>2</Cpu>\\n        <InnerIp/>\\n        <Mem>4096</Mem>\\n        <RegionId>cn-beijing</RegionId>\\n        <Expired>false</Expired>\\n        <InstanceId>i-2ze7s2v0b789k60p****</InstanceId>\\n        <PrivateIp>192.168.0.86</PrivateIp>\\n        <Eip/>\\n        <VpcId>vpc-2zef6ob8mrlzv8x3q****</VpcId>\\n        <InstanceName>worker-k8s</InstanceName>\\n    </Instance>\\n</InstanceList>","errorExample":""}]',
      'title' => '列出可导入到指定集群的ECS实例列表',
      'summary' => '调用ListConvertableEcu接口列出可导入到指定集群的ECS实例列表。本API适用于ECS集群。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListEcsNotInCluster' => 
    array (
      'path' => '/pop/v5/resource/ecs_not_in_cluster',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络类型。
- 1：经典网络
- 2：VPC网络',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '2',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC ID，当NetworkMode为2时，该参数为必选。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-2zef6ob8****v8x3q46kp',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求唯一标识ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-****',
              ),
              'EcsEntityList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EcsEntity' => 
                  array (
                    'description' => 'ECS列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => 'VPC实例的ID。',
                          'type' => 'string',
                          'example' => 'vpc-2zef6ob8mrlzv8x3q****',
                        ),
                        'Status' => 
                        array (
                          'description' => '实例状态。
- **Pending**：创建中
- **Running**：运行中
- **Starting**：启动中
- **Stopping**：停止中
- **Stopped**：已停止',
                          'type' => 'string',
                          'example' => ' Running',
                        ),
                        'PrivateIp' => 
                        array (
                          'description' => 'ECS实例的私网IP。',
                          'type' => 'string',
                          'example' => '192.168.*.**',
                        ),
                        'Expired' => 
                        array (
                          'description' => 'ECS是否过期。

- **true**：已过期

- **false**：未过期',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => 'ECS实例的ID。',
                          'type' => 'string',
                          'example' => 'i-2ze7s2v0b***********',
                        ),
                        'Mem' => 
                        array (
                          'description' => '内存大小（B）。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '4096',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'ECS实例所在地域的ID。',
                          'type' => 'string',
                          'example' => 'cn-beijing',
                        ),
                        'VpcName' => 
                        array (
                          'description' => 'VPC实例名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'Cpu' => 
                        array (
                          'description' => 'CPU核数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'InnerIp' => 
                        array (
                          'description' => 'ECS实例内网IP。',
                          'type' => 'string',
                          'example' => '192.168.20.113',
                        ),
                        'Eip' => 
                        array (
                          'description' => 'ECS实例的弹性公网IP',
                          'type' => 'string',
                          'example' => '139.30.xxx.xx',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => 'ECS实例名称。',
                          'type' => 'string',
                          'example' => 'worker-k8s-for-cs-c9dfa009a5e7c4faab2010b87cae4****',
                        ),
                        'PublicIp' => 
                        array (
                          'description' => 'ECS实例的公网IP。',
                          'type' => 'string',
                          'example' => '131.30.xxx.xx',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-****\\",\\n  \\"EcsEntityList\\": {\\n    \\"EcsEntity\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-2zef6ob8mrlzv8x3q****\\",\\n        \\"Status\\": \\" Running\\",\\n        \\"PrivateIp\\": \\"192.168.*.**\\",\\n        \\"Expired\\": false,\\n        \\"InstanceId\\": \\"i-2ze7s2v0b***********\\",\\n        \\"Mem\\": 4096,\\n        \\"RegionId\\": \\"cn-beijing\\",\\n        \\"VpcName\\": \\"test\\",\\n        \\"Cpu\\": 2,\\n        \\"InnerIp\\": \\"192.168.20.113\\",\\n        \\"Eip\\": \\"139.30.xxx.xx\\",\\n        \\"InstanceName\\": \\"worker-k8s-for-cs-c9dfa009a5e7c4faab2010b87cae4****\\",\\n        \\"PublicIp\\": \\"131.30.xxx.xx\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>b197-40ab-9155-****</RequestId>\\n<Message>success</Message>\\n<Code>200</Code>\\n<EcsEntityList>\\n    <EcsEntity>\\n        <Status> Running</Status>\\n        <InstanceName>worker-k8s-for-cs-c9dfa009a5e7c4faab2010b87cae4****</InstanceName>\\n        <InnerIp>192.168.20.113</InnerIp>\\n        <Mem>4096</Mem>\\n        <VpcId>vpc-2zef6ob8mrlzv8x3q****</VpcId>\\n        <PrivateIp>192.168.*.**</PrivateIp>\\n        <PublicIp>131.30.xxx.xx</PublicIp>\\n        <InstanceId>i-2ze7s2v0b***********</InstanceId>\\n        <Cpu>2</Cpu>\\n        <Expired>false</Expired>\\n        <VpcName>test</VpcName>\\n        <RegionId>cn-beijing</RegionId>\\n        <Eip>139.30.xxx.xx</Eip>\\n    </EcsEntity>\\n</EcsEntityList>","errorExample":""}]',
      'title' => '获取所有未导入集群的 ECS',
      'summary' => '调用ListEcsNotInCluster接口获取所有未导入集群的ECS实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryMigrateEcuList' => 
    array (
      'path' => '/pop/v5/resource/migrate_ecu_list',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。
- 自定义命名空间ID格式为：`地域ID:命名空间标示符`，例如：`cn-beijing:test`。
- 默认命名空间ID格式为：`地域ID`，例如：`cn-beijing`。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou或cn-hangzhou:test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'b197-40ab-9155-7ca7',
              ),
              'EcuEntityList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EcuEntity' => 
                  array (
                    'description' => '可供迁移的实例列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => 'VPC ID',
                          'type' => 'string',
                          'example' => 'vpc-2zef6ob8m************',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '更新时间的时间戳',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1573281041109',
                        ),
                        'IpAddr' => 
                        array (
                          'description' => 'ECU的私网IP',
                          'type' => 'string',
                          'example' => '192.168.0.150',
                        ),
                        'AvailableCpu' => 
                        array (
                          'description' => '可用CPU，单位为核数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间的时间戳',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1573281041101',
                        ),
                        'UserId' => 
                        array (
                          'description' => '主账号ID',
                          'type' => 'string',
                          'example' => 'edas_com***_****@******-*****.***',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID',
                          'type' => 'string',
                          'example' => 'i-2zej4i2jd***********',
                        ),
                        'Mem' => 
                        array (
                          'description' => '总内存',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '所在地域ID',
                          'type' => 'string',
                          'example' => 'cn-beijing',
                        ),
                        'EcuId' => 
                        array (
                          'description' => '这台ECU的唯一标识ID，可以通过在ECS上执行`dmidecode`获取。',
                          'type' => 'string',
                          'example' => '70ed3f59-b476-49aa-****-************',
                        ),
                        'Cpu' => 
                        array (
                          'description' => 'CPU限制配额，单位为核数。0表示不限制。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'DockerEnv' => 
                        array (
                          'description' => '是否安装了Docker：
- true：已安装Docker
- false：未安装Docker',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Online' => 
                        array (
                          'description' => '是否在线。
- true：在线
- false：不在线',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'AvailableMem' => 
                        array (
                          'description' => '可用内存，单位为MB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2048',
                        ),
                        'ZoneId' => 
                        array (
                          'description' => '可用区ID',
                          'type' => 'string',
                          'example' => 'cn-bei****-*',
                        ),
                        'Name' => 
                        array (
                          'description' => '实例名称',
                          'type' => 'string',
                          'example' => 'product_test003',
                        ),
                        'HeartbeatTime' => 
                        array (
                          'description' => '心跳时间的时间戳',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1573281041101',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-7ca7\\",\\n  \\"EcuEntityList\\": {\\n    \\"EcuEntity\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-2zef6ob8m************\\",\\n        \\"UpdateTime\\": 1573281041109,\\n        \\"IpAddr\\": \\"192.168.0.150\\",\\n        \\"AvailableCpu\\": 2,\\n        \\"CreateTime\\": 1573281041101,\\n        \\"UserId\\": \\"edas_com***_****@******-*****.***\\",\\n        \\"InstanceId\\": \\"i-2zej4i2jd***********\\",\\n        \\"Mem\\": 0,\\n        \\"RegionId\\": \\"cn-beijing\\",\\n        \\"EcuId\\": \\"70ed3f59-b476-49aa-****-************\\",\\n        \\"Cpu\\": 0,\\n        \\"DockerEnv\\": false,\\n        \\"Online\\": true,\\n        \\"AvailableMem\\": 2048,\\n        \\"ZoneId\\": \\"cn-bei****-*\\",\\n        \\"Name\\": \\"product_test003\\",\\n        \\"HeartbeatTime\\": 1573281041101\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Code>200</Code>\\n<EcuEntityList>\\n    <EcuEntity>\\n        <AvailableMem>2048</AvailableMem>\\n        <Mem>0</Mem>\\n        <AvailableCpu>2</AvailableCpu>\\n        <InstanceId>i-2zej4i2jdf3ntw****</InstanceId>\\n        <Online>true</Online>\\n        <UpdateTime>1573281041109</UpdateTime>\\n        <UserId>edas_****_test@aliyun-****.com</UserId>\\n        <ZoneId>cn-beijing-h</ZoneId>\\n        <VpcId>vpc-2zef6ob8mrlzv8x3****</VpcId>\\n        <IpAddr>192.168.0.150</IpAddr>\\n        <Name>product_test003</Name>\\n        <Cpu>0</Cpu>\\n        <HeartbeatTime>1573281041101</HeartbeatTime>\\n        <CreateTime>1573281041101</CreateTime>\\n        <RegionId>test_region</RegionId>\\n        <EcuId>70ed3f59-b476-49aa-be09-9e6c37****</EcuId>\\n        <DockerEnv>false</DockerEnv>\\n    </EcuEntity>\\n</EcuEntityList>","errorExample":""}]',
      'title' => '查询可迁移的实例列表',
      'summary' => '调用QueryMigrateEcuList来查询可迁移的实例列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListScaleOutEcu' => 
    array (
      'path' => '/pop/v5/resource/scale_out_ecu_list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。
- 自定义命名空间ID格式为：`地域ID:命名空间标示符`，例如：cn-beijing:test。
- 默认命名空间ID格式为：`地域ID`，例如：cn-beijing。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing:test',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '以集群为查询条件，查询该集群内可用的ECU列表。

>  ClusterId与AppId需要至少填入一个作为查询参数。
',
            'type' => 'string',
            'required' => false,
            'example' => '52984524-6d48-4bbd-******************',
          ),
        ),
        2 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '以应用为查询条件，查询该应用所在集群内可用的ECU列表。

> ClusterId与AppId需要至少填入一个作为查询参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'b93024fd-8a9d-4ef7-99f1-5f0d65cc****',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询该应用分组所在集群内可用的ECU列表。',
            'type' => 'string',
            'required' => false,
            'example' => '8123db90-880f-486f-****-****',
          ),
        ),
        4 => 
        array (
          'name' => 'Cpu',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询满足CPU核数要求的ECU。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'Mem',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询满足剩余可用内存要求的ECU，单位为MB。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '200',
          ),
        ),
        6 => 
        array (
          'name' => 'InstanceNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询并列出指定数量的ECU，如果不设置则代表列出所有满足筛查结果的ECU列表。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AF860D6C-ACE3-4429-9D54-3BD15A******',
              ),
              'EcuInfoList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EcuInfo' => 
                  array (
                    'description' => 'ECU列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'ECU对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => 'ECU所在的VPC ID。',
                          'type' => 'string',
                          'example' => 'vpc-2zef6ob8**********',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '最后变更时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1573281040827',
                        ),
                        'IpAddr' => 
                        array (
                          'description' => 'ECU的私网IP。',
                          'type' => 'string',
                          'example' => '192.168.XX.XX',
                        ),
                        'AvailableCpu' => 
                        array (
                          'description' => 'ECU的可用CPU核数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1573281040819',
                        ),
                        'UserId' => 
                        array (
                          'description' => '主账号ID。',
                          'type' => 'string',
                          'example' => '1172****6608****',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => 'ECU实例ID。',
                          'type' => 'string',
                          'example' => 'i-2zej4i2jdf*********',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'ECU所在地域ID。',
                          'type' => 'string',
                          'example' => 'cn-beijing',
                        ),
                        'EcuId' => 
                        array (
                          'description' => '这台ECU的唯一标识ID，可以通过在ECS上执行`dmidecode`获取。',
                          'type' => 'string',
                          'example' => '0de2ebdb-9490-4fc4-be41***************',
                        ),
                        'Online' => 
                        array (
                          'description' => '是否在线，且实例当前是否受EDAS管控：
- true：在线。
- false：不在线。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'DockerEnv' => 
                        array (
                          'description' => '是否安装了Docker：
- true：已安装Docker。
- false：未安装Docker。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'AvailableMem' => 
                        array (
                          'description' => 'ECU的可用内存数，单位MB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '111',
                        ),
                        'ZoneId' => 
                        array (
                          'description' => 'ECU所在可用区。',
                          'type' => 'string',
                          'example' => 'cn-beijing-h',
                        ),
                        'Name' => 
                        array (
                          'description' => 'ECU名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'HeartbeatTime' => 
                        array (
                          'description' => '上一次心跳检测的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1573281040819',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"AF860D6C-ACE3-4429-9D54-3BD15A******\\",\\n  \\"EcuInfoList\\": {\\n    \\"EcuInfo\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-2zef6ob8**********\\",\\n        \\"UpdateTime\\": 1573281040827,\\n        \\"IpAddr\\": \\"192.168.XX.XX\\",\\n        \\"AvailableCpu\\": 2,\\n        \\"CreateTime\\": 1573281040819,\\n        \\"UserId\\": \\"1172****6608****\\",\\n        \\"InstanceId\\": \\"i-2zej4i2jdf*********\\",\\n        \\"RegionId\\": \\"cn-beijing\\",\\n        \\"EcuId\\": \\"0de2ebdb-9490-4fc4-be41***************\\",\\n        \\"Online\\": true,\\n        \\"DockerEnv\\": false,\\n        \\"AvailableMem\\": 111,\\n        \\"ZoneId\\": \\"cn-beijing-h\\",\\n        \\"Name\\": \\"test\\",\\n        \\"HeartbeatTime\\": 1573281040819\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<EcuInfoList>\\n    <EcuInfo>\\n        <AvailableMem>2048</AvailableMem>\\n        <InstanceId>i-2zej4i2jdf*********</InstanceId>\\n        <AvailableCpu>2</AvailableCpu>\\n        <Online>true</Online>\\n        <UpdateTime>1573281040827</UpdateTime>\\n        <ZoneId>cn-beijing-h</ZoneId>\\n        <VpcId>vpc-2zef6ob8**********</VpcId>\\n        <IpAddr>192.168.*.**</IpAddr>\\n        <HeartbeatTime>1573281040819</HeartbeatTime>\\n        <CreateTime>1573281040819</CreateTime>\\n        <RegionId>cn-beijing</RegionId>\\n        <EcuId>0de2ebdb-9490-4fc4-be41***************</EcuId>\\n        <DockerEnv>false</DockerEnv>\\n    </EcuInfo>\\n    <EcuInfo>\\n        <AvailableMem>2048</AvailableMem>\\n        <InstanceId>i-2zej4i2j*********</InstanceId>\\n        <AvailableCpu>2</AvailableCpu>\\n        <Online>true</Online>\\n        <UpdateTime>1573281041362</UpdateTime>\\n        <ZoneId>cn-beijing-h</ZoneId>\\n        <VpcId>vpc-2ze************</VpcId>\\n        <IpAddr>192.168.0.**</IpAddr>\\n        <HeartbeatTime>1573281041355</HeartbeatTime>\\n        <CreateTime>1573281041355</CreateTime>\\n        <RegionId>cn-beijing</RegionId>\\n        <EcuId>6f9cb7fd-bb*****************</EcuId>\\n        <DockerEnv>false</DockerEnv>\\n    </EcuInfo>\\n    <EcuInfo>\\n        <AvailableMem>2048</AvailableMem>\\n        <InstanceId>i-2*******e</InstanceId>\\n        <AvailableCpu>2</AvailableCpu>\\n        <Online>true</Online>\\n        <UpdateTime>1573281041109</UpdateTime>\\n        <ZoneId>cn-beijing-h</ZoneId>\\n        <VpcId>vpc-2zef6ob********p</VpcId>\\n        <IpAddr>192.168.0.***</IpAddr>\\n        <HeartbeatTime>1573281041101</HeartbeatTime>\\n        <CreateTime>1573281041101</CreateTime>\\n        <RegionId>cn-beijing</RegionId>\\n        <EcuId>70ed3f59-b476-49aa***********</EcuId>\\n        <DockerEnv>false</DockerEnv>\\n    </EcuInfo>\\n    <EcuInfo>\\n        <AvailableMem>2048</AvailableMem>\\n        <InstanceId>i-2z********</InstanceId>\\n        <AvailableCpu>2</AvailableCpu>\\n        <Online>true</Online>\\n        <UpdateTime>1573281041150</UpdateTime>\\n        <ZoneId>cn-beijing-h</ZoneId>\\n        <VpcId>vpc-2ze************</VpcId>\\n        <IpAddr>192.168.0.**</IpAddr>\\n        <HeartbeatTime>1573281041143</HeartbeatTime>\\n        <CreateTime>1573281041143</CreateTime>\\n        <RegionId>cn-beijing</RegionId>\\n        <EcuId>cfe7f474-386******************</EcuId>\\n        <DockerEnv>false</DockerEnv>\\n    </EcuInfo>\\n    <EcuInfo>\\n        <AvailableMem>2048</AvailableMem>\\n        <InstanceId>i-2zej4i*********</InstanceId>\\n        <AvailableCpu>2</AvailableCpu>\\n        <Online>true</Online>\\n        <UpdateTime>1573281041300</UpdateTime>\\n        <ZoneId>cn-beijing-h</ZoneId>\\n        <VpcId>vpc-2zef**********</VpcId>\\n        <IpAddr>192.168.0.***</IpAddr>\\n        <HeartbeatTime>1573281041292</HeartbeatTime>\\n        <CreateTime>1573281041292</CreateTime>\\n        <RegionId>cn-beijing</RegionId>\\n        <EcuId>f6917537-******************</EcuId>\\n        <DockerEnv>false</DockerEnv>\\n    </EcuInfo>\\n</EcuInfoList>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取用于应用扩容的ECU列表',
      'summary' => '从指定集群或应用关联集群获取可用于应用扩容的ECU列表。该接口仅适用于ECS集群。',
      'description' => '## 基本概念

- **命名空间**：指的是EDAS中用于隔离集群、ECS实例和应用等资源及在EDAS中发布的微服务的一个逻辑概念，包括默认命名空间和自定义命名空间，每个地域下面包括一个默认命名空间和若干个自定义命名空间，默认情况下只有默认命名空间，如果不想隔离资源及微服务，则不必创建自定义命名空间。
- **ECU**：ECS导入到集群中后即为ECU。
- **ECC**：集群中的ECU在应用中部署后即成为ECC。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListSlb' => 
    array (
      'path' => '/pop/v5/slb_list',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC网络ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp1f90rfybszjogyw****',
          ),
        ),
        1 => 
        array (
          'name' => 'AddressType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址类型：
- Internet：公网地址。
- Intranet：私网地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'internet',
          ),
        ),
        2 => 
        array (
          'name' => 'SlbType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB类型：
- clb：传统型负载均衡。
- alb：应用型负载均衡。',
            'type' => 'string',
            'required' => false,
            'example' => 'clb',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-7ca7',
              ),
              'SlbList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SlbEntity' => 
                  array (
                    'description' => 'SLB列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'SLB对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SlbId' => 
                        array (
                          'description' => 'SLB实例ID。',
                          'type' => 'string',
                          'example' => 'lb-2ze055t3xv7s8****',
                        ),
                        'VpcId' => 
                        array (
                          'description' => 'VPC网络ID。',
                          'type' => 'string',
                          'example' => 'vpc-bp1f90rfybszjogyw****',
                        ),
                        'VswitchId' => 
                        array (
                          'description' => 'VPC交换机ID。',
                          'type' => 'string',
                          'example' => 'vsw-bp156w1gpbv0o50hs****',
                        ),
                        'Expired' => 
                        array (
                          'description' => 'SLB是否过期：
- true：已过期。
- false：未过期。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'UserId' => 
                        array (
                          'description' => '用户ID。',
                          'type' => 'string',
                          'example' => 'edas_****_**st@aliyun-****.com',
                        ),
                        'AddressType' => 
                        array (
                          'description' => '地址类型：
- internet：公网地址。
- intranet：私网地址。',
                          'type' => 'string',
                          'example' => 'internet',
                        ),
                        'NetworkType' => 
                        array (
                          'description' => '网络类型。',
                          'type' => 'string',
                          'example' => 'classic',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地区ID。',
                          'type' => 'string',
                          'example' => 'cn-beijing',
                        ),
                        'GroupId' => 
                        array (
                          'description' => 'EDAS资源组ID。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'Address' => 
                        array (
                          'description' => 'IP地址。',
                          'type' => 'string',
                          'example' => '39.176.XX.XX',
                        ),
                        'SlbName' => 
                        array (
                          'description' => 'SLB名称。',
                          'type' => 'string',
                          'example' => 'adce',
                        ),
                        'SlbStatus' => 
                        array (
                          'description' => 'SLB状态。',
                          'type' => 'string',
                          'example' => 'active',
                        ),
                        'Tags' => 
                        array (
                          'description' => '标签。',
                          'type' => 'string',
                          'example' => '[{"tagKey":"tag","tagValue":"value"}]',
                        ),
                        'Reusable' => 
                        array (
                          'description' => '是否允许K8s应用复用：
- true: 允许复用。
- false: 不允许复用。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-7ca7\\",\\n  \\"SlbList\\": {\\n    \\"SlbEntity\\": [\\n      {\\n        \\"SlbId\\": \\"lb-2ze055t3xv7s8****\\",\\n        \\"VpcId\\": \\"vpc-bp1f90rfybszjogyw****\\",\\n        \\"VswitchId\\": \\"vsw-bp156w1gpbv0o50hs****\\",\\n        \\"Expired\\": false,\\n        \\"UserId\\": \\"edas_****_**st@aliyun-****.com\\",\\n        \\"AddressType\\": \\"internet\\",\\n        \\"NetworkType\\": \\"classic\\",\\n        \\"RegionId\\": \\"cn-beijing\\",\\n        \\"GroupId\\": 0,\\n        \\"Address\\": \\"39.176.XX.XX\\",\\n        \\"SlbName\\": \\"adce\\",\\n        \\"SlbStatus\\": \\"active\\",\\n        \\"Tags\\": \\"[{\\\\\\"tagKey\\\\\\":\\\\\\"tag\\\\\\",\\\\\\"tagValue\\\\\\":\\\\\\"value\\\\\\"}]\\",\\n        \\"Reusable\\": true\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>b197-40ab-9155-7ca7</RequestId>\\n<Message>success</Message>\\n<Code>200</Code>\\n<SlbList>\\n    <SlbEntity>\\n        <SlbId>lb-2ze055t3xv7s8****</SlbId>\\n        <VpcId>vpc-bp1f90rfybszjogyw****</VpcId>\\n        <Address>39.XX.XX.176</Address>\\n        <NetworkType>classic</NetworkType>\\n        <UserId>edas_****_**st@aliyun-****.com</UserId>\\n        <Expired>false</Expired>\\n        <RegionId>cn-beijing</RegionId>\\n        <AddressType>internet</AddressType>\\n        <VswitchId>vsw-bp156w1gpbv0o50hs****</VswitchId>\\n        <SlbName>adce</SlbName>\\n        <GroupId>0</GroupId>\\n        <SlbStatus>active</SlbStatus>\\n    </SlbEntity>\\n</SlbList>","errorExample":""}]',
      'title' => '获取SLB列表',
      'summary' => '获取SLB列表。',
      'requestParamsDescription' => '无请求参数。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BindSlb' => 
    array (
      'path' => '/pop/app/bind_slb_json',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EDAS应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-*********',
          ),
        ),
        1 => 
        array (
          'name' => 'SlbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'lb-wz96ph63r************',
          ),
        ),
        2 => 
        array (
          'name' => 'SlbIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.16*.*.*',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB网络类型，取值如下：
* internet：外网实例。
* intranet：内网实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'intranet',
          ),
        ),
        4 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监听端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '0',
            'example' => '80',
            'default' => '0',
          ),
        ),
        5 => 
        array (
          'name' => 'VServerGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '内网 SLB 虚拟服务器组 ID',
            'type' => 'string',
            'required' => false,
            'example' => 'rsp-cige6******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口响应码。 ',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'bind slb success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '23DR4FDXXXXXXXXXX',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'VServerGroupId' => 
                  array (
                    'description' => '私网虚拟服务组ID。',
                    'type' => 'string',
                    'example' => '“”',
                  ),
                  'SlbId' => 
                  array (
                    'description' => '私网SLB实例ID。',
                    'type' => 'string',
                    'example' => 'lb-wz96ph63r************',
                  ),
                  'ExtSlbIp' => 
                  array (
                    'description' => '公网SLB IP地址。',
                    'type' => 'string',
                    'example' => '“”',
                  ),
                  'SlbPort' => 
                  array (
                    'description' => 'SLB监听端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '80',
                  ),
                  'ExtSlbName' => 
                  array (
                    'description' => '公网SLB名称。',
                    'type' => 'string',
                    'example' => '“”',
                  ),
                  'ExtSlbId' => 
                  array (
                    'description' => '公网SLB实例ID。',
                    'type' => 'string',
                    'example' => '“”',
                  ),
                  'ExtVServerGroupId' => 
                  array (
                    'description' => '公网SLB虚拟服务器组ID。',
                    'type' => 'string',
                    'example' => '“”',
                  ),
                  'SlbName' => 
                  array (
                    'description' => '私网SLB名称。',
                    'type' => 'string',
                    'example' => 'test**********',
                  ),
                  'SlbIp' => 
                  array (
                    'description' => '私网SLB IP地址。',
                    'type' => 'string',
                    'example' => '192.16*.*.*',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"bind slb success\\",\\n  \\"RequestId\\": \\"23DR4FDXXXXXXXXXX\\",\\n  \\"Data\\": {\\n    \\"VServerGroupId\\": \\"“”\\",\\n    \\"SlbId\\": \\"lb-wz96ph63r************\\",\\n    \\"ExtSlbIp\\": \\"“”\\",\\n    \\"SlbPort\\": 80,\\n    \\"ExtSlbName\\": \\"“”\\",\\n    \\"ExtSlbId\\": \\"“”\\",\\n    \\"ExtVServerGroupId\\": \\"“”\\",\\n    \\"SlbName\\": \\"test**********\\",\\n    \\"SlbIp\\": \\"192.16*.*.*\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Data>\\n    <SlbPort>80</SlbPort>\\n    <SlbId>lb-wz96ph63r************</SlbId>\\n    <SlbIp>192.168.*.*</SlbIp>\\n    <SlbName>test*********</SlbName>\\n</Data>\\n<Message>bind slb success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '绑定SLB到指定应用',
      'summary' => '调用BindSlb接口绑定SLB到指定应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InsertCluster' => 
    array (
      'path' => '/pop/v5/resource/cluster',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义命名空间的RegionId。
格式为：`物理Region:自定义命名空间标识符`，例如`cn-hangzhou:test`。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing:td****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '****_product_test2',
          ),
        ),
        2 => 
        array (
          'name' => 'ClusterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群类型。

- 2：ECS集群
- 3：EDAS自带K8s集群
- 5：Kubernetes集群',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '2',
          ),
        ),
        3 => 
        array (
          'name' => 'NetworkMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络类型。

- 1：经典网络
- 2：VPC',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '2',
          ),
        ),
        4 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC网络ID。若选择VPC网络，此参数为必选。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-2zef6ob8mrlzv8x3q****',
          ),
        ),
        5 => 
        array (
          'name' => 'OversoldFactor',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '（**参数已不适用**）
Docker集群CPU超卖：
- 2：1:2比例
- 4：1:4比例
- 8：1:8比例',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        6 => 
        array (
          'name' => 'IaasProvider',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IaaS资源供应商。

<note>选择阿里云时，需要使用全大写的拼音，例如`ALIYUN`。</note>
',
            'type' => 'string',
            'required' => false,
            'example' => 'ALIYUN',
            'default' => 'ALIYUN',
            'enum' => 
            array (
              0 => 'ALIYUN',
              1 => 'IDC',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-****',
              ),
              'Cluster' => 
              array (
                'description' => '创建的集群实体。',
                'type' => 'object',
                'properties' => 
                array (
                  'VpcId' => 
                  array (
                    'description' => 'VPC网络ID。',
                    'type' => 'string',
                    'example' => 'vpc-2zef6ob8mrlzv8x3q****',
                  ),
                  'OversoldFactor' => 
                  array (
                    'description' => '（**参数已不适用**）
Docker集群CPU超卖。

- 2：1:2比例

- 4：1:4比例

- 8：1:8比例',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'NetworkMode' => 
                  array (
                    'description' => '网络类型。

- 1：经典网络

- 2：专有网络VPC',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'IaasProvider' => 
                  array (
                    'description' => '供应商。',
                    'type' => 'string',
                    'example' => 'ALIYUN',
                  ),
                  'ClusterType' => 
                  array (
                    'description' => '集群类型。

- 2：ECS集群。
- 3：EDAS自带K8s集群。
- 5：Kubernetes集群。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'ClusterName' => 
                  array (
                    'description' => '集群名称。',
                    'type' => 'string',
                    'example' => '****_product_test2',
                  ),
                  'ClusterId' => 
                  array (
                    'description' => '集群ID。',
                    'type' => 'string',
                    'example' => '8705ad13-5d86-47fc-b68f-257b59ed****',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '集群所属地域。',
                    'type' => 'string',
                    'example' => 'cn-beijing',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-****\\",\\n  \\"Cluster\\": {\\n    \\"VpcId\\": \\"vpc-2zef6ob8mrlzv8x3q****\\",\\n    \\"OversoldFactor\\": 1,\\n    \\"NetworkMode\\": 2,\\n    \\"IaasProvider\\": \\"ALIYUN\\",\\n    \\"ClusterType\\": 2,\\n    \\"ClusterName\\": \\"****_product_test2\\",\\n    \\"ClusterId\\": \\"8705ad13-5d86-47fc-b68f-257b59ed****\\",\\n    \\"RegionId\\": \\"cn-beijing\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<InsertClusterResponse>\\n<Message>success</Message>\\n<RequestId>b197-40ab-9155-****</RequestId>\\n<Cluster>\\n    <OversoldFactor>1</OversoldFactor>\\n    <VpcId>vpc-2zef6ob8mrlzv8x3q****</VpcId>\\n    <ClusterId>8705ad13-5d86-47fc-b68f-257b59ed****</ClusterId>\\n    <ClusterName>****_product_test2</ClusterName>\\n    <RegionId>cn-beijing</RegionId>\\n    <ClusterType>2</ClusterType>\\n    <NetworkMode>2</NetworkMode>\\n    <IaasProvider>ALIYUN</IaasProvider>\\n</Cluster>\\n<Code>200</Code>\\n</InsertClusterResponse>","errorExample":""}]',
      'title' => '创建集群',
      'summary' => '调用InsertCluster接口创建集群。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InsertClusterMember' => 
    array (
      'path' => '/pop/v5/resource/cluster_member',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'clusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需导入ECS实例的目标集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b3e3f77b-462e-****-****-bec8727a4dc8',
          ),
        ),
        1 => 
        array (
          'name' => 'instanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要导入集群的ECS实例ID，多个ECS实例请用英文逗号（,）分隔。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'i-2ze7s2v0b789k60p****',
          ),
        ),
        2 => 
        array (
          'name' => 'password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要导入集群的ECS实例的登录密码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'YourPassword',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '请求接口返回的数据。',
                'type' => 'string',
                'example' => 'Transform submit success!',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '01B49A88-B06F-423B-A5EF-E5C0A89******',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": \\"Transform submit success!\\",\\n  \\"RequestId\\": \\"01B49A88-B06F-423B-A5EF-E5C0A89******\\"\\n}","errorExample":""},{"type":"xml","example":"<InsertClusterMemberResponse>\\n    <RequestId>01B49A88-B06F-423B-A5EF-E5C0A892709D</RequestId>\\n    <Data>Transform submit success!</Data>\\n    <Message>success</Message>\\n    <Code>200</Code>\\n</InsertClusterMemberResponse>","errorExample":""}]',
      'title' => '向ECS集群中导入ECS实例',
      'summary' => '向ECS集群中导入ECS实例。',
      'description' => '## 限制说明

调用该接口导入ECS实例时，会重装ECS实例的操作系统，重装后，实例中所有数据都会被删除并且需要重新设置实例登录密码。请确保您要导入的ECS实例上没有重要的数据或数据已备份。

> 本接口已不推荐使用，建议使用InstallAgent接口代替，详情请参见[InstallAgent](~~127023~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InstallAgent' => 
    array (
      'path' => '/pop/v5/ecss/install_agent',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群 ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b3e3f77b-462e-****-****-bec8727a4dc8',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例 ID，如instanceId1,instanceId2',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2ze7s2v0b789k60pk1af',
          ),
        ),
        2 => 
        array (
          'name' => 'DoAsync',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '已不再使用',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'Code 码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID',
                'type' => 'string',
                'example' => 'b197-40ab-9155-7ca7',
              ),
              'ExecutionResultList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ExecutionResult' => 
                  array (
                    'description' => '执行结果',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '命令执行状态信息',
                          'type' => 'string',
                          'example' => 'OK',
                        ),
                        'FinishedTime' => 
                        array (
                          'description' => '安装结束时间',
                          'type' => 'string',
                          'example' => '20**-11-10T07:02:17Z',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例 ID',
                          'type' => 'string',
                          'example' => 'i-2ze7s2v0b789k*******',
                        ),
                        'InvokeRecordStatus' => 
                        array (
                          'description' => '安装状态',
                          'type' => 'string',
                          'example' => 'Finished',
                        ),
                        'Success' => 
                        array (
                          'description' => '是否安装成功',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-7ca7\\",\\n  \\"ExecutionResultList\\": {\\n    \\"ExecutionResult\\": [\\n      {\\n        \\"Status\\": \\"OK\\",\\n        \\"FinishedTime\\": \\"20**-11-10T07:02:17Z\\",\\n        \\"InstanceId\\": \\"i-2ze7s2v0b789k*******\\",\\n        \\"InvokeRecordStatus\\": \\"Finished\\",\\n        \\"Success\\": true\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ExecutionResultList>\\n    <ExecutionResult>\\n        <InvokeRecordStatus>Finished</InvokeRecordStatus>\\n        <Status>OK</Status>\\n        <FinishedTime>2019-11-10T07:02:17Z</FinishedTime>\\n        <InstanceId>i-2ze7s2v0b789k60pk1af</InstanceId>\\n        <Success>true</Success>\\n    </ExecutionResult>\\n</ExecutionResultList>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '安装 Agent',
      'summary' => '使用ECS自带的云助手安装EDAS Agent（将ECS导入EDAS）。',
      'description' => '使用该接口将ECS导入EDAS时，不会重装系统，推荐使用该接口将ECS导入EDAS。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => '## 注意事项
该接口在实际执行中，会遇到在 API 接口 Client 程序端在连接 API 网关超时（默认 10 秒）的情况，所以，用户在使用该接口时，须手工设置调用该接口时读取 POP API 网关返回的数据的超时时间（推荐设置为 30 秒，因 POP API 网关到接口 Server 端的服务处理时间最长即为 30 秒）：
- 使用 Java SDK 时，Client 端代码中使用该接口时设置读取超时时间方法：
```java
InstallAgentRequest request = new InstallAgentRequest();
request.setSysReadTimeout(30000);  //单位毫秒，客户端 API 接口程序等待 POP API网关返回数据的超时时间.
request.setClusterId(clusterId);
........
```
- 使用 Python SDK 时，Client 端代码中使用该接口时设置读取超时时间方法：
```python
request = InstallAgentRequest()
request.set_read_timeout(30000)
request.set_ClusterId(clusterId)
```',
    ),
    'TransformClusterMember' => 
    array (
      'path' => '/pop/v5/resource/transform_cluster_member',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID集合 ，用半角逗号（,）分割：
- 实例可以不属于任何集群，但一个实例最多只能归属于一个集群。
- ECS实例和目标集群需在同一个VPC内。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'i-2ze7s2v0b789k60p****',
          ),
        ),
        1 => 
        array (
          'name' => 'TargetClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b3e3f77b-462e-****-****-bec8727a****',
          ),
        ),
        2 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '加入目标集群的实例需要设置的登录密码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Hello****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '提交成功返回`Transform submit success!`。',
                'type' => 'string',
                'example' => 'Transform submit success!',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": \\"Transform submit success!\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-****\\"\\n}","errorExample":""},{"type":"xml","example":"<TransformClusterMemberResponse>\\n<Message>success</Message>\\n<RequestId>b197-40ab-9155-****</RequestId>\\n<Data>Transform submit success!</Data>\\n<Code>200</Code>\\n</TransformClusterMemberResponse>","errorExample":""}]',
      'title' => '导入或转移ECS实例',
      'summary' => '接口导入或转移ECS实例。',
      'description' => '## 限制说明
调用该接口导入ECS实例时，会重装ECS实例的操作系统，重装后，实例中所有数据都会被删除并且需要重新设置实例登录密码。请确保您要导入的ECS实例上没有重要的数据或数据已备份。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'MigrateEcu' => 
    array (
      'path' => '/pop/v5/resource/migrate_ecu',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，多个实例之间可用英文逗号（,）分隔。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'i-2zej4i2jdf3ntwhj****',
          ),
        ),
        1 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID：
- 自定义命名空间ID格式为：`地域ID:命名空间标示符`，例如：cn-beijing:tdy218。
- 默认命名空间ID格式为：`地域ID`，例如：cn-beijing。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou:test_region',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '返回数据：

- true：成功。
- false：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '04B0ABAF-95F2-42B6-A7B1****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": \\"true\\",\\n  \\"RequestId\\": \\"04B0ABAF-95F2-42B6-A7B1****\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>04B0ABAF-95F2-42B6-A7B1-8A832E863C92</RequestId>\\n<Data>true</Data>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '转移ECU到指定命名空间的默认集群',
      'summary' => '转移ECU到指定命名空间的默认集群。',
      'description' => '## 限制说明
该接口已不推荐使用，建议使用接口TransformClusterMember代替，详情请参见[TransformClusterMember](~~71514~~)。

调用该接口导入ECS实例时，会重装ECS实例的操作系统，重装后，实例中所有数据都会被删除并且需要重新设置实例登录密码。请确保您要导入的ECS实例上没有重要的数据或数据已备份。

## 基本概念
- **命名空间**：指的是EDAS中设计的用于隔离集群、ECS实例和应用等资源及在EDAS中发布的微服务的一个逻辑概念，包括默认命名空间和自定义命名空间，每个地域下面包括一个默认命名空间和若干个自定义命名空间，默认情况下只有默认命名空间，如果不想隔离资源及微服务，则不必创建自定义命名空间。
- **ECU**：ECS导入到集群中后即为ECU。
- **ECC**：集群中的ECU在应用中部署后即成为ECC。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SynchronizeResource' => 
    array (
      'path' => '/pop/v5/resource/pop_sync_resource',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '同步的资源类型，该参数可选的参数值为：`ecs、slb、vpc、all`其中的一个，不支持其他格式的参数值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ecs',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的资源ID，仅当Type为`ecs`时支持填写此参数，如有多个ID，需要以逗号分隔，一次最多同步50个资源。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-bp17c***5q8x,i-bp1**5q8x',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口请求返回的状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '接口请求返回的消息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '接口请求返回的数据。',
                'type' => 'string',
                'example' => 'PopSyncResource success',
              ),
              'RequestId' => 
              array (
                'description' => '接口请求唯一标识符。',
                'type' => 'string',
                'example' => 'F8DFGED-K98***************',
              ),
              'Success' => 
              array (
                'description' => '接口请求结果，取值如下：

- **true**：请求成功。

- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": \\"PopSyncResource success\\",\\n  \\"RequestId\\": \\"F8DFGED-K98***************\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Data>PopSyncResource success</Data>\\n<Code>200</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '同步阿里云基础资源到EDAS',
      'summary' => '同步用户下的阿里云基础资源到EDAS。适用于ECS集群。',
      'description' => '调用此接口同步ECS资源信息时，将从ECS同步全量的实例数据，当ECS实例数超过100时，不建议频繁调用此接口。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => '## 注意事项
该接口在实际执行中，会遇到在API接口Client程序端在连接API网关超时（默认10秒）的情况，所以，用户在使用该接口时，须手工设置调用该接口时读取POP API网关返回的数据的超时时间（推荐设置为30秒，因POP API网关到接口Server端的服务处理时间最长即为30秒）。

- 使用Java SDK时，Client端代码中使用该接口时设置读取超时时间方法：
```
SynchronizeResourceRequest request = new SynchronizeResourceRequest();
request.setSysReadTimeout(30000);  //单位毫秒，客户端API接口程序等待POP API网关返回数据的超时时间。
request.setType("ecs");
........
```

- 使用Python SDK时，Client端代码中使用该接口时设置读取超时时间方法：
```
request = SynchronizeResourceRequest()
request.set_read_timeout(30000)
request.set_Type(\'ecs\')
```',
    ),
    'UpdateK8sResource' => 
    array (
      'path' => '/pop/v5/oam/update_k8s_resource_config',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '2e7059e9-2d********5e8ecac64ff',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'K8s命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'app-namespace',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceContent',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'YAML格式的描述内容。',
            'type' => 'string',
            'required' => false,
            'example' => 'apiVersion: apps/v1 kind: Deployment metadata:   name: demo-app   namespace: app-namespace spec:   replicas: 3   selector:     matchLabels:       cluster: abc   template: # create pods using pod definition in this template     metadata:       labels:         cluster: abc     spec:       containers:       - image: registry-vpc.cn-hangzhou.aliyuncs.com/edas-demo-image/consumer:1.0         imagePullPolicy: Always         name: test-container         ports:         - containerPort: 80         env:         - name: foo           value: bar',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'Code码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID。',
                'type' => 'string',
                'example' => '7638276F-****-****-884F-54CC0BC84A8D',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"7638276F-****-****-884F-54CC0BC84A8D\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>7638276F-****-****-884F-54CC0BC84A8D</RequestId>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '更新容器服务K8s资源',
      'summary' => '更新K8s资源。',
      'description' => '> 当前仅支持Deployment资源的修改。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetK8sCluster' => 
    array (
      'path' => '/pop/v5/k8s_clusters',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionTag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时当前显示第几页，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '9999',
            'minimum' => '0',
            'example' => '1',
            'isFileTransferUrl' => false,
            'default' => '0',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示几条，默认值为1000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '9999',
            'minimum' => '1',
            'example' => '10',
            'isFileTransferUrl' => false,
            'default' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'ClusterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s集群类型：

- 5：容器服务K8s集群。
- 7：自建K8s集群。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '99',
            'minimum' => '0',
            'example' => '5',
            'default' => '5',
          ),
        ),
        4 => 
        array (
          'name' => 'SubClusterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群子类型：
* Ask：Serverless K8s 集群。
* ManagedKubernetes：容器服务 K8s 集群。',
            'type' => 'string',
            'required' => false,
            'example' => 'Ask',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C3CE915C-0C83-4AA5-8D66-E8BEED62939E',
              ),
              'ClusterPage' => 
              array (
                'description' => '集群分页显示列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '分页查询时当前显示第几页，默认值为1。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '分页查询时每页显示几条，默认值为1000。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalSize' => 
                  array (
                    'description' => '显示总页数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'ClusterList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Cluster' => 
                      array (
                        'description' => '集群列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '集群列表对象。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'VpcId' => 
                            array (
                              'description' => 'VPC ID。',
                              'type' => 'string',
                              'example' => 'vpc-**z1mlwpbjx3e9m**',
                            ),
                            'VswitchId' => 
                            array (
                              'description' => '交换机ID。',
                              'type' => 'string',
                              'example' => 'vsw-bp1uf97****xjxgip****',
                            ),
                            'SubNetCidr' => 
                            array (
                              'description' => '子网的网段。',
                              'type' => 'string',
                              'example' => '172.20.0.0/16',
                            ),
                            'Mem' => 
                            array (
                              'description' => '内存总量，单位：MB。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2048',
                            ),
                            'RegionId' => 
                            array (
                              'description' => '命名空间ID。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'CsClusterStatus' => 
                            array (
                              'description' => '容器集群运行状态：
- initial：初始化中。
- failed：创建失败。
- running：运行中。
- updating：更新中。
- scaling：扩容中。
- removing：移除节点中。
- upgrading：升级中。
- deleting：删除中。
- delete_failed：删除失败。
- deleted：已删除（该状态用户不可见）。',
                              'type' => 'string',
                              'example' => 'running',
                            ),
                            'Cpu' => 
                            array (
                              'description' => 'CPU总核数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '4',
                            ),
                            'NetworkMode' => 
                            array (
                              'description' => '网络类型：
- 1：经典网络。
- 2：VPC。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2',
                            ),
                            'CsClusterId' => 
                            array (
                              'description' => '容器服务集群ID。',
                              'type' => 'string',
                              'example' => '2ce62869f4d4466b920312315f05****',
                            ),
                            'Description' => 
                            array (
                              'description' => '集群描述。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'ClusterType' => 
                            array (
                              'description' => '集群类型：
- 2：ECS集群。
- 5：容器服务K8s集群或Serverless K8s集群。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5',
                            ),
                            'ClusterName' => 
                            array (
                              'description' => '集群名称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'NodeNum' => 
                            array (
                              'description' => '节点数量。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '4',
                            ),
                            'ClusterId' => 
                            array (
                              'description' => '集群ID。',
                              'type' => 'string',
                              'example' => '81453e4b-4df0-4592-****-b835a2ee****',
                            ),
                            'ClusterImportStatus' => 
                            array (
                              'title' => '',
                              'description' => '集群的导入状态：
- 0：没有导入。
- 1：导入成功。
- 2：导入失败。
- 3：正在导入。
- 4：集群已删除。
',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'SubClusterType' => 
                            array (
                              'description' => '集群子类型：
* Ask：Serverless K8s 集群。
* ManagedKubernetes：容器服务 K8s 集群。',
                              'type' => 'string',
                              'example' => 'Ask',
                            ),
                            'ClusterStatus' => 
                            array (
                              'description' => '集群运行状态：
- 1：正常。
- 2：异常。
- 3：离线。
',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"C3CE915C-0C83-4AA5-8D66-E8BEED62939E\\",\\n  \\"ClusterPage\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalSize\\": 5,\\n    \\"ClusterList\\": {\\n      \\"Cluster\\": [\\n        {\\n          \\"VpcId\\": \\"vpc-**z1mlwpbjx3e9m**\\",\\n          \\"VswitchId\\": \\"vsw-bp1uf97****xjxgip****\\",\\n          \\"SubNetCidr\\": \\"172.20.0.0/16\\",\\n          \\"Mem\\": 2048,\\n          \\"RegionId\\": \\"test\\",\\n          \\"CsClusterStatus\\": \\"running\\",\\n          \\"Cpu\\": 4,\\n          \\"NetworkMode\\": 2,\\n          \\"CsClusterId\\": \\"2ce62869f4d4466b920312315f05****\\",\\n          \\"Description\\": \\"test\\",\\n          \\"ClusterType\\": 5,\\n          \\"ClusterName\\": \\"test\\",\\n          \\"NodeNum\\": 4,\\n          \\"ClusterId\\": \\"81453e4b-4df0-4592-****-b835a2ee****\\",\\n          \\"ClusterImportStatus\\": 1,\\n          \\"SubClusterType\\": \\"Ask\\",\\n          \\"ClusterStatus\\": 1\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>C3CE915C-0C83-4AA5-8D66-E8BEED62939E</RequestId>\\n<Message>success</Message>\\n<ClusterPage>\\n    <ClusterList>\\n        <Cluster>\\n            <ClusterImportStatus>1</ClusterImportStatus>\\n            <NodeNum>3</NodeNum>\\n            <ClusterId>6cd7d5d3-2c7b-48be-a874-3e746708****</ClusterId>\\n            <Cpu>0</Cpu>\\n            <ClusterType>5</ClusterType>\\n            <NetworkMode>2</NetworkMode>\\n            <CsClusterId>c0b7a530b96d24b46bd02da2316c****</CsClusterId>\\n            <VswitchId>vsw-bp1y77ga5pz9lianh****</VswitchId>\\n            <VpcId>vpc-bp1jmhiplgziujhw0****</VpcId>\\n            <Mem>0</Mem>\\n            <ClusterName>gray</ClusterName>\\n            <SubNetCidr>172.20.0.0/16</SubNetCidr>\\n            <RegionId>cn-hangzhou:test</RegionId>\\n            <CsClusterStatus>running</CsClusterStatus>\\n            <ClusterStatus>0</ClusterStatus>\\n        </Cluster>\\n    </ClusterList>\\n    <PageSize>17</PageSize>\\n    <CurrentPage>0</CurrentPage>\\n    <TotalSize>17</TotalSize>\\n</ClusterPage>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取K8s集群列表',
      'summary' => '获取容器服务K8s集群或Serverless K8s集群列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListK8sNamespaces' => 
    array (
      'summary' => '调用ListK8sNamespaces接口获取K8s命名空间列表。',
      'path' => '/pop/v5/k8s/acs/k8s_namespace',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'EDAS集群ID',
            'type' => 'string',
            'required' => false,
            'example' => '5b2b4ab4-efbc-4a81-9c45-xxxxxxxxxxxxx',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '57F146F6-3C94-****-****-A66EF4B9*****',
              ),
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '接口请求返回的信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '接口响应数据。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Namespace' => 
                    array (
                      'description' => 'K8s命名空间。',
                      'type' => 'string',
                      'example' => 'development',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"57F146F6-3C94-****-****-A66EF4B9*****\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": [\\n    {\\n      \\"Namespace\\": \\"development\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取K8s命名空间列表',
    ),
    'ImportK8sCluster' => 
    array (
      'path' => '/pop/v5/import_k8s_cluster',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID，可通过调用GetK8sCluster接口获取，请参见[GetK8sCluster](~~181437~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '9c28bbb9-****-44b3-b953-54ef8a2d0be2',
          ),
        ),
        1 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。格式为“`地域ID:微服务空间标识符`”，例如：`cn-hangzhou:doc`。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing:doc',
          ),
        ),
        2 => 
        array (
          'name' => 'Mode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '此参数无需关注。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'EnableAsm',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启ASM：
- true：开启
- false：不开启',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => 'EDAS中的集群ID。',
                'type' => 'string',
                'example' => 'cf96d49a-6be2-4b6d-****-75c7fb86****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'a5281053-08e4-47a5-b2ab-5c0323de7b5a',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": \\"cf96d49a-6be2-4b6d-****-75c7fb86****\\",\\n  \\"RequestId\\": \\"a5281053-08e4-47a5-b2ab-5c0323de7b5a\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>a5281053-08e4-47a5-b2ab-5c0323de7b5a</RequestId>\\n<Message>success</Message>\\n<Data>cf96d49a-6be2-4b6d-****-75c7fb86****</Data>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '导入容器服务K8s集群',
      'summary' => '调用ImportK8sCluster接口导入容器服务K8s集群或Serverless K8s集群。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateHealthCheckUrl' => 
    array (
      'path' => '/pop/v5/app/modify_hc_url',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'c627c157-560d-43ff-***************',
          ),
        ),
        1 => 
        array (
          'name' => 'hcURL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查URL，需要以`http://`开头，最大长度不超过255字符，例如：`http://127.0.0.1:8080/_ehc.html`。不传该参数，可不修改应用检查URL。',
            'type' => 'string',
            'required' => false,
            'example' => 'http://127.0.0.1:8080/_ehc.html',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'code码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'D16979DC-4D42-*****************',
              ),
              'HealthCheckURL' => 
              array (
                'description' => '健康检查URL',
                'type' => 'string',
                'example' => 'http://127.0.0.1:8080/_ehc.html',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-*****************\\",\\n  \\"HealthCheckURL\\": \\"http://127.0.0.1:8080/_ehc.html\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>D16979DC-4D42-*****************</RequestId>\\n<Message>success</Message>\\n<HealthCheckURL>http://127.0.0.1:8080/_ehc.html</HealthCheckURL>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '设置健康检查 URL',
      'summary' => '调用UpdateHealthCheckUrl来设置健康检查URL。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetChangeOrderInfo' => 
    array (
      'path' => '/pop/v5/changeorder/change_order_info',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ChangeOrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变更流程ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1074f3e2-e974-4a0e-****-************',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '4JFR-FV9F***************',
              ),
              'changeOrderInfo' => 
              array (
                'description' => '变更流程详情',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '变更状态
- 0：准备 
- 1：执行中 
- 2：执行成功 
- 3：执行失败 
- 6：终止
- 7：部分成功
- 8：手动分批发布模式下，等待手工确认执行下一批
- 9：自动分批发布模式下，等待下一批执行中
- 10：系统异常执行失败',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'ChangeOrderId' => 
                  array (
                    'description' => '变更流程ID',
                    'type' => 'string',
                    'example' => '1074f3e2-e974-4a0e-****-************',
                  ),
                  'BatchType' => 
                  array (
                    'description' => '分批发布时，下一批变更的执行方式。
- Automatic：自动
- Manual：手动',
                    'type' => 'string',
                    'example' => 'Automatic',
                  ),
                  'CoType' => 
                  array (
                    'description' => '变更流程分类',
                    'type' => 'string',
                    'example' => 'Application Scale Out',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建时间',
                    'type' => 'string',
                    'example' => '2019-11-13 14:23:46',
                  ),
                  'ChangeOrderDescription' => 
                  array (
                    'description' => '变更流程描述',
                    'type' => 'string',
                    'example' => '应用扩容',
                  ),
                  'BatchCount' => 
                  array (
                    'description' => '变更分批数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'CreateUserId' => 
                  array (
                    'description' => '变更流程的负责人',
                    'type' => 'string',
                    'example' => 'edas_com***_****@******-*****.***',
                  ),
                  'SupportRollback' => 
                  array (
                    'description' => '是否支持回滚。
- true：支持回滚
- false：不支持回滚',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'Desc' => 
                  array (
                    'description' => '变更流程描述',
                    'type' => 'string',
                    'example' => 'IP of Scale-Out Instance: 47.107.XX.XX',
                  ),
                  'PipelineInfoList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PipelineInfo' => 
                      array (
                        'description' => '分批变更任务列表',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PipelineName' => 
                            array (
                              'description' => '批次名称',
                              'type' => 'string',
                              'example' => ' Batch: 1',
                            ),
                            'StartTime' => 
                            array (
                              'description' => '开始时间的时间戳',
                              'type' => 'string',
                              'example' => '1583911702158',
                            ),
                            'UpdateTime' => 
                            array (
                              'description' => '更新时间的时间戳',
                              'type' => 'string',
                              'example' => '1583911743633',
                            ),
                            'PipelineStatus' => 
                            array (
                              'description' => '任务状态：

- 0：准备 
- 1：执行中 
- 2：执行成功 
- 3：执行失败 
- 6：终止 
- 8：手动分批发布模式下，等待手工确认执行下一批
- 9：自动分批发布模式下，等待下一批执行中
- 10：系统异常执行失败',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2',
                            ),
                            'PipelineId' => 
                            array (
                              'description' => '分批变更时各批次流程的ID',
                              'type' => 'string',
                              'example' => '4c4ee320-5e47-4a48-****-************',
                            ),
                            'StageList' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'StageInfoDTO' => 
                                array (
                                  'description' => '变更流程的任务阶段列表',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'StageId' => 
                                      array (
                                        'description' => '阶段ID',
                                        'type' => 'string',
                                        'example' => '358a143f-09a0-45e0-****-************@**_*******_*****',
                                      ),
                                      'Status' => 
                                      array (
                                        'description' => '阶段状态
- 0：准备 
- 1：执行中 
- 2：执行成功 
- 3：执行失败 
- 6：终止 
- 8：手动分批发布模式下，等待手工确认执行下一批
- 9：自动分批发布模式下，等待下一批执行中
- 10：系统异常执行失败',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '2',
                                      ),
                                      'StageName' => 
                                      array (
                                        'description' => '阶段名称',
                                        'type' => 'string',
                                        'example' => 'Scale Out',
                                      ),
                                      'StageResultDTO' => 
                                      array (
                                        'description' => '阶段任务的执行结果',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'InstanceDTOList' => 
                                          array (
                                            'type' => 'object',
                                            'properties' => 
                                            array (
                                              'InstanceDTO' => 
                                              array (
                                                'description' => '运行在每台ECS实例上阶段执行结果',
                                                'type' => 'array',
                                                'items' => 
                                                array (
                                                  'type' => 'object',
                                                  'properties' => 
                                                  array (
                                                    'Status' => 
                                                    array (
                                                      'description' => '运行状态
- 0：准备 
- 1：执行中 
- 2：执行成功 
- 3：执行失败 
- 6：终止 
- 8：手动分批发布模式下，等待手工确认执行下一批
- 9：自动分批发布模式下，等待下一批执行中
- 10：系统异常执行失败',
                                                      'type' => 'integer',
                                                      'format' => 'int32',
                                                      'example' => '2',
                                                    ),
                                                    'InstanceIp' => 
                                                    array (
                                                      'description' => '实例IP',
                                                      'type' => 'string',
                                                      'example' => '47.XX.XX.12 (Public)<br>***.**.*.*** (*******)',
                                                    ),
                                                    'PodName' => 
                                                    array (
                                                      'description' => '节点名称',
                                                      'type' => 'string',
                                                      'example' => 'canary-test',
                                                    ),
                                                    'InstanceName' => 
                                                    array (
                                                      'description' => '实例名称',
                                                      'type' => 'string',
                                                      'example' => 'EDAS-scaled',
                                                    ),
                                                    'PodStatus' => 
                                                    array (
                                                      'description' => 'Pod状态',
                                                      'type' => 'string',
                                                      'example' => '执行中',
                                                    ),
                                                    'InstanceStageDTOList' => 
                                                    array (
                                                      'type' => 'object',
                                                      'properties' => 
                                                      array (
                                                        'InstanceStageDTO' => 
                                                        array (
                                                          'description' => '每个实例上阶段执行的结果列表',
                                                          'type' => 'array',
                                                          'items' => 
                                                          array (
                                                            'type' => 'object',
                                                            'properties' => 
                                                            array (
                                                              'StageId' => 
                                                              array (
                                                                'description' => '阶段ID',
                                                                'type' => 'string',
                                                                'example' => '5dd4c0f2-d81a-406f-****-************',
                                                              ),
                                                              'Status' => 
                                                              array (
                                                                'description' => '阶段状态
- 0：准备 
- 1：执行中 
- 2：执行成功 
- 3：执行失败 
- 6：终止 
- 8：手动分批发布模式下，等待手工确认执行下一批
- 9：自动分批发布模式下，等待下一批执行中
- 10：系统异常执行失败',
                                                                'type' => 'integer',
                                                                'format' => 'int32',
                                                                'example' => '2',
                                                              ),
                                                              'StartTime' => 
                                                              array (
                                                                'description' => '开始时间',
                                                                'type' => 'string',
                                                                'example' => '2020-03-11T07:28:49Z',
                                                              ),
                                                              'StageMessage' => 
                                                              array (
                                                                'description' => '阶段信息',
                                                                'type' => 'string',
                                                                'example' => 'Pulling image \\"registry-vpc.cn-hangzhou.aliyuncs.com****-user/1172745****_shared_repo:428084d6-265f-****-911a-7eb0d2c3****_15839117****\\',
                                                              ),
                                                              'FinishTime' => 
                                                              array (
                                                                'description' => '结束时间',
                                                                'type' => 'string',
                                                                'example' => '2020-03-11T07:28:52Z',
                                                              ),
                                                              'StageName' => 
                                                              array (
                                                                'description' => '阶段名称',
                                                                'type' => 'string',
                                                                'example' => ' scale out ',
                                                              ),
                                                            ),
                                                          ),
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ),
                                          ),
                                          'ServiceStage' => 
                                          array (
                                            'description' => '服务型阶段执行结果',
                                            'type' => 'object',
                                            'properties' => 
                                            array (
                                              'StageId' => 
                                              array (
                                                'description' => '阶段ID',
                                                'type' => 'string',
                                                'example' => '358a143f-09a0-45e0-****-************',
                                              ),
                                              'Status' => 
                                              array (
                                                'description' => '运行状态
- 0：准备 
- 1：执行中 
- 2：执行成功 
- 3：执行失败 
- 6：终止 
- 8：手动分批发布模式下，等待手工确认执行下一批
- 9：自动分批发布模式下，等待下一批执行中
- 10：系统异常执行失败',
                                                'type' => 'integer',
                                                'format' => 'int32',
                                                'example' => '2',
                                              ),
                                              'Message' => 
                                              array (
                                                'description' => '执行结果信息',
                                                'type' => 'string',
                                                'example' => 'Success',
                                              ),
                                              'StageName' => 
                                              array (
                                                'description' => '阶段名称',
                                                'type' => 'string',
                                                'example' => 'Enable Tengine',
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'StageDetailList' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'StageDetailDTO' => 
                                array (
                                  'description' => '阶段执行结果列表',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'StageId' => 
                                      array (
                                        'description' => '阶段ID',
                                        'type' => 'string',
                                        'example' => 'd7561440-10a6-452f-8a90-62f6e7ec****',
                                      ),
                                      'StageStatus' => 
                                      array (
                                        'description' => '阶段状态：
- 0：准备 
- 1：执行中 
- 2：执行成功 
- 3：执行失败 
- 6：终止 
- 8：手动分批发布模式下，等待手工确认执行下一批
- 9：自动分批发布模式下，等待下一批执行中
- 10：系统异常执行失败',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '2',
                                      ),
                                      'StageName' => 
                                      array (
                                        'description' => '阶段名称',
                                        'type' => 'string',
                                        'example' => 'Process Start',
                                      ),
                                      'TaskList' => 
                                      array (
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'TaskInfoDTO' => 
                                          array (
                                            'description' => '任务列表',
                                            'type' => 'array',
                                            'items' => 
                                            array (
                                              'type' => 'object',
                                              'properties' => 
                                              array (
                                                'TaskErrorIgnorance' => 
                                                array (
                                                  'description' => '表示任务本身是否能容忍错误，如果容忍，则发生错误时，变更流程将忽略错误来继续下一个任务。
- 0：不容忍错误
- 1：容忍错误',
                                                  'type' => 'integer',
                                                  'format' => 'int32',
                                                  'example' => '0',
                                                ),
                                                'ShowManualIgnorance' => 
                                                array (
                                                  'description' => '是否显示`忽略错误按钮`。
- true：忽略变更流程中出现的错误。目前只有执行URL健康检查时，该参数的取值可为true。
- false：不忽略变更流程中出现的错误。',
                                                  'type' => 'boolean',
                                                  'example' => 'false',
                                                ),
                                                'TaskStatus' => 
                                                array (
                                                  'description' => '任务状态
- 0：准备 
- 1：执行中 
- 2：执行成功 
- 3：执行失败 
- 6：终止 
- 8：手动分批发布模式下，等待手工确认执行下一批
- 9：自动分批发布模式下，等待下一批执行中
- 10：系统异常执行失败',
                                                  'type' => 'string',
                                                  'example' => '2',
                                                ),
                                                'TaskMessage' => 
                                                array (
                                                  'description' => '任务信息',
                                                  'type' => 'string',
                                                  'example' => '[CALLBACK] 2020-03-11 15:28:44.781  requestId: c952ab99-8c5b-4ff1-9412-ae3bf9b1****, message: success',
                                                ),
                                                'TaskName' => 
                                                array (
                                                  'description' => '任务名称',
                                                  'type' => 'string',
                                                  'example' => 'Build Image',
                                                ),
                                                'TaskErrorCode' => 
                                                array (
                                                  'description' => '错误码',
                                                  'type' => 'string',
                                                  'example' => '400',
                                                ),
                                                'RetryType' => 
                                                array (
                                                  'description' => '重试类型，0 表示不重试，1表示自动重试，2表示手动重试',
                                                  'type' => 'integer',
                                                  'format' => 'int32',
                                                  'example' => '0',
                                                ),
                                                'TaskId' => 
                                                array (
                                                  'description' => '任务ID',
                                                  'type' => 'string',
                                                  'example' => 'd6d3b934-90a1-4ae8-8cbd-2446003d****',
                                                ),
                                                'TaskErrorMessage' => 
                                                array (
                                                  'description' => '任务错误信息',
                                                  'type' => 'string',
                                                  'example' => '400',
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Targets' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Items' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '关联ECS的IP地址列表',
                          'type' => 'string',
                          'example' => '["123.250.XX.XX","234.123.XX.XX"]',
                        ),
                      ),
                    ),
                  ),
                  'TrafficControl' => 
                  array (
                    'description' => '流控规则',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Routes' => 
                      array (
                        'description' => '路由转发策略',
                        'type' => 'string',
                        'example' => '[{"app":"9c8247da-91b6-42bb-8f99-92a0b9c6f****","type":"GROUP"}]',
                      ),
                      'Rules' => 
                      array (
                        'description' => '流量的路由规则',
                        'type' => 'string',
                        'example' => '[{"conditionType":"content","conditions":[{"key":"name","operator":"EQ","strategy":"PARAM","values":["jim"]},{"key":"name","operator":"EQ","strategy":"COOKIE","values":["jim"]}],"percent":100,"protocol":"SPRINGCLOUD","triggerPolicy":"AND"}]',
                      ),
                      'Tips' => 
                      array (
                        'description' => '流量规则的提示说明文案',
                        'type' => 'string',
                        'example' => '灰度批次发布完毕，已确认继续下一批。',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'No permissions',
          ),
          1 => 
          array (
            'errorCode' => 'Edas.errorcode.ParameterMissing.ChangeOrderId.message',
            'errorMessage' => 'Change process ID is missing.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"4JFR-FV9F***************\\",\\n  \\"changeOrderInfo\\": {\\n    \\"Status\\": 2,\\n    \\"ChangeOrderId\\": \\"1074f3e2-e974-4a0e-****-************\\",\\n    \\"BatchType\\": \\"Automatic\\",\\n    \\"CoType\\": \\"Application Scale Out\\",\\n    \\"CreateTime\\": \\"2019-11-13 14:23:46\\",\\n    \\"ChangeOrderDescription\\": \\"应用扩容\\",\\n    \\"BatchCount\\": 1,\\n    \\"CreateUserId\\": \\"edas_com***_****@******-*****.***\\",\\n    \\"SupportRollback\\": false,\\n    \\"Desc\\": \\"IP of Scale-Out Instance: 47.107.XX.XX\\",\\n    \\"PipelineInfoList\\": {\\n      \\"PipelineInfo\\": [\\n        {\\n          \\"PipelineName\\": \\" Batch: 1\\",\\n          \\"StartTime\\": \\"1583911702158\\",\\n          \\"UpdateTime\\": \\"1583911743633\\",\\n          \\"PipelineStatus\\": 2,\\n          \\"PipelineId\\": \\"4c4ee320-5e47-4a48-****-************\\",\\n          \\"StageList\\": {\\n            \\"StageInfoDTO\\": [\\n              {\\n                \\"StageId\\": \\"358a143f-09a0-45e0-****-************@**_*******_*****\\",\\n                \\"Status\\": 2,\\n                \\"StageName\\": \\"Scale Out\\",\\n                \\"StageResultDTO\\": {\\n                  \\"InstanceDTOList\\": {\\n                    \\"InstanceDTO\\": [\\n                      {\\n                        \\"Status\\": 2,\\n                        \\"InstanceIp\\": \\"47.XX.XX.12 (Public)<br>***.**.*.*** (*******)\\",\\n                        \\"PodName\\": \\"canary-test\\",\\n                        \\"InstanceName\\": \\"EDAS-scaled\\",\\n                        \\"PodStatus\\": \\"执行中\\",\\n                        \\"InstanceStageDTOList\\": {\\n                          \\"InstanceStageDTO\\": [\\n                            {\\n                              \\"StageId\\": \\"5dd4c0f2-d81a-406f-****-************\\",\\n                              \\"Status\\": 2,\\n                              \\"StartTime\\": \\"2020-03-11T07:28:49Z\\",\\n                              \\"StageMessage\\": \\"Pulling image \\\\\\\\\\\\\\"registry-vpc.cn-hangzhou.aliyuncs.com****-user/1172745****_shared_repo:428084d6-265f-****-911a-7eb0d2c3****_15839117****\\\\\\\\\\",\\n                              \\"FinishTime\\": \\"2020-03-11T07:28:52Z\\",\\n                              \\"StageName\\": \\" scale out \\"\\n                            }\\n                          ]\\n                        }\\n                      }\\n                    ]\\n                  },\\n                  \\"ServiceStage\\": {\\n                    \\"StageId\\": \\"358a143f-09a0-45e0-****-************\\",\\n                    \\"Status\\": 2,\\n                    \\"Message\\": \\"Success\\",\\n                    \\"StageName\\": \\"Enable Tengine\\"\\n                  }\\n                }\\n              }\\n            ]\\n          },\\n          \\"StageDetailList\\": {\\n            \\"StageDetailDTO\\": [\\n              {\\n                \\"StageId\\": \\"d7561440-10a6-452f-8a90-62f6e7ec****\\",\\n                \\"StageStatus\\": 2,\\n                \\"StageName\\": \\"Process Start\\",\\n                \\"TaskList\\": {\\n                  \\"TaskInfoDTO\\": [\\n                    {\\n                      \\"TaskErrorIgnorance\\": 0,\\n                      \\"ShowManualIgnorance\\": false,\\n                      \\"TaskStatus\\": \\"2\\",\\n                      \\"TaskMessage\\": \\"[CALLBACK] 2020-03-11 15:28:44.781  requestId: c952ab99-8c5b-4ff1-9412-ae3bf9b1****, message: success\\",\\n                      \\"TaskName\\": \\"Build Image\\",\\n                      \\"TaskErrorCode\\": \\"400\\",\\n                      \\"RetryType\\": 0,\\n                      \\"TaskId\\": \\"d6d3b934-90a1-4ae8-8cbd-2446003d****\\",\\n                      \\"TaskErrorMessage\\": \\"400\\"\\n                    }\\n                  ]\\n                }\\n              }\\n            ]\\n          }\\n        }\\n      ]\\n    },\\n    \\"Targets\\": {\\n      \\"Items\\": [\\n        \\"[\\\\\\"123.250.XX.XX\\\\\\",\\\\\\"234.123.XX.XX\\\\\\"]\\"\\n      ]\\n    },\\n    \\"TrafficControl\\": {\\n      \\"Routes\\": \\"[{\\\\\\"app\\\\\\":\\\\\\"9c8247da-91b6-42bb-8f99-92a0b9c6f****\\\\\\",\\\\\\"type\\\\\\":\\\\\\"GROUP\\\\\\"}]\\",\\n      \\"Rules\\": \\"[{\\\\\\"conditionType\\\\\\":\\\\\\"content\\\\\\",\\\\\\"conditions\\\\\\":[{\\\\\\"key\\\\\\":\\\\\\"name\\\\\\",\\\\\\"operator\\\\\\":\\\\\\"EQ\\\\\\",\\\\\\"strategy\\\\\\":\\\\\\"PARAM\\\\\\",\\\\\\"values\\\\\\":[\\\\\\"jim\\\\\\"]},{\\\\\\"key\\\\\\":\\\\\\"name\\\\\\",\\\\\\"operator\\\\\\":\\\\\\"EQ\\\\\\",\\\\\\"strategy\\\\\\":\\\\\\"COOKIE\\\\\\",\\\\\\"values\\\\\\":[\\\\\\"jim\\\\\\"]}],\\\\\\"percent\\\\\\":100,\\\\\\"protocol\\\\\\":\\\\\\"SPRINGCLOUD\\\\\\",\\\\\\"triggerPolicy\\\\\\":\\\\\\"AND\\\\\\"}]\\",\\n      \\"Tips\\": \\"灰度批次发布完毕，已确认继续下一批。\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetChangeOrderInfoResponse>\\n    <Code>200</Code>\\n    <Message>success</Message>\\n    <RequestId>4JFR-FV9F***************</RequestId>\\n    <changeOrderInfo>\\n        <Status>2</Status>\\n        <ChangeOrderId>1074f3e2-e974-4a0e-****-************</ChangeOrderId>\\n        <BatchType>Automatic</BatchType>\\n        <CoType>Application Scale Out</CoType>\\n        <CreateTime>2019-11-13 14:23:46</CreateTime>\\n        <ChangeOrderDescription>应用扩容</ChangeOrderDescription>\\n        <BatchCount>1</BatchCount>\\n        <CreateUserId>edas_com***_****@******-*****.***</CreateUserId>\\n        <SupportRollback>false</SupportRollback>\\n        <Desc>IP of Scale-Out Instance: 47.107.XX.XX</Desc>\\n        <PipelineInfoList>\\n            <PipelineName> Batch: 1</PipelineName>\\n            <StartTime>1583911702158</StartTime>\\n            <UpdateTime>1583911743633</UpdateTime>\\n            <PipelineStatus>2</PipelineStatus>\\n            <PipelineId>4c4ee320-5e47-4a48-****-************</PipelineId>\\n            <StageList>\\n                <StageId>358a143f-09a0-45e0-****-************@**_*******_*****</StageId>\\n                <Status>2</Status>\\n                <StageName>Scale Out</StageName>\\n                <StageResultDTO>\\n                    <InstanceDTOList>\\n                        <Status>2</Status>\\n                        <InstanceIp>47.XX.XX.12 (Public)&lt;br&gt;***.**.*.*** (*******)</InstanceIp>\\n                        <PodName>canary-test</PodName>\\n                        <InstanceName>EDAS-scaled</InstanceName>\\n                        <PodStatus>执行中</PodStatus>\\n                        <InstanceStageDTOList>\\n                            <StageId>5dd4c0f2-d81a-406f-****-************</StageId>\\n                            <Status>2</Status>\\n                            <StartTime>2020-03-11T07:28:49Z</StartTime>\\n                            <StageMessage>Pulling image \\\\\\"registry-vpc.cn-hangzhou.aliyuncs.com****-user/1172745****_shared_repo:428084d6-265f-****-911a-7eb0d2c3****_15839117****\\\\</StageMessage>\\n                            <FinishTime>2020-03-11T07:28:52Z</FinishTime>\\n                            <StageName> scale out </StageName>\\n                        </InstanceStageDTOList>\\n                    </InstanceDTOList>\\n                    <ServiceStage>\\n                        <StageId>358a143f-09a0-45e0-****-************</StageId>\\n                        <Status>2</Status>\\n                        <Message>Success</Message>\\n                        <StageName>Enable Tengine</StageName>\\n                    </ServiceStage>\\n                </StageResultDTO>\\n            </StageList>\\n            <StageDetailList>\\n                <StageId>d7561440-10a6-452f-8a90-62f6e7ec****</StageId>\\n                <StageStatus>2</StageStatus>\\n                <StageName>Process Start</StageName>\\n                <TaskList>\\n                    <TaskErrorIgnorance>0</TaskErrorIgnorance>\\n                    <ShowManualIgnorance>false</ShowManualIgnorance>\\n                    <TaskStatus>2</TaskStatus>\\n                    <TaskMessage>[CALLBACK] 2020-03-11 15:28:44.781  requestId: c952ab99-8c5b-4ff1-9412-ae3bf9b1****, message: success</TaskMessage>\\n                    <TaskName>Build Image</TaskName>\\n                    <TaskErrorCode>400</TaskErrorCode>\\n                    <TaskId>d6d3b934-90a1-4ae8-8cbd-2446003d****</TaskId>\\n                    <TaskErrorMessage>400</TaskErrorMessage>\\n                </TaskList>\\n            </StageDetailList>\\n        </PipelineInfoList>\\n        <TrafficControl>\\n            <Routes>[{\\"app\\":\\"9c8247da-91b6-42bb-8f99-92a0b9c6f****\\",\\"type\\":\\"GROUP\\"}]</Routes>\\n            <Rules>[{\\"conditionType\\":\\"content\\",\\"conditions\\":[{\\"key\\":\\"name\\",\\"operator\\":\\"EQ\\",\\"strategy\\":\\"PARAM\\",\\"values\\":[\\"jim\\"]},{\\"key\\":\\"name\\",\\"operator\\":\\"EQ\\",\\"strategy\\":\\"COOKIE\\",\\"values\\":[\\"jim\\"]}],\\"percent\\":100,\\"protocol\\":\\"SPRINGCLOUD\\",\\"triggerPolicy\\":\\"AND\\"}]</Rules>\\n            <Tips>灰度批次发布完毕，已确认继续下一批。</Tips>\\n        </TrafficControl>\\n    </changeOrderInfo>\\n</GetChangeOrderInfoResponse>","errorExample":""}]',
      'title' => '查看变更流程详情',
      'summary' => '调用GetChangeOrderInfo接口查看变更流程详情。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetSecureToken' => 
    array (
      'summary' => '调用GetSecureToken获取指定命名空间的SecureToken信息，主要是用来获取指定命名空间的AccessKey ID、AccessKey Secret 、TenantId、地址服务器域名等信息。',
      'path' => '/pop/v5/secure_token',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID，例如：`cn-beijing`或者`cn-beijing:prod`。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shenzhen:x*****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口请求返回的状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '接口请求返回的信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '接口请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-*************',
              ),
              'SecureToken' => 
              array (
                'description' => '接口请求返回的接口SecureToken对象。',
                'type' => 'object',
                'properties' => 
                array (
                  'SecretKey' => 
                  array (
                    'description' => '该命名空间的AccessKey Secret（SK）。',
                    'type' => 'string',
                    'example' => 'gOSgbgR2R*************',
                  ),
                  'AccessKey' => 
                  array (
                    'description' => '该命名空间的AccessKey（AK）。',
                    'type' => 'string',
                    'example' => 'f676f1**************',
                  ),
                  'BelongRegion' => 
                  array (
                    'description' => '所属的RegionID。',
                    'type' => 'string',
                    'example' => 'cn-shenzhen',
                  ),
                  'Description' => 
                  array (
                    'description' => '该命名空间的描述信息。',
                    'type' => 'string',
                    'example' => '”“',
                  ),
                  'RegionName' => 
                  array (
                    'description' => '该命名空间所在地域的RegionName。',
                    'type' => 'string',
                    'example' => 'x******',
                  ),
                  'EdasId' => 
                  array (
                    'description' => '用户的EdasId，即阿里云UID。',
                    'type' => 'string',
                    'example' => '11727458********',
                  ),
                  'AddressServerHost' => 
                  array (
                    'description' => '该命名空间对应的地址服务器地址。',
                    'type' => 'string',
                    'example' => 'addr-****-****.edas.aliyun.com',
                  ),
                  'UserId' => 
                  array (
                    'description' => '用户的UID。',
                    'type' => 'string',
                    'example' => 'edas_com***_****@******-*****.***',
                  ),
                  'Id' => 
                  array (
                    'description' => 'SecureToken的ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '7279',
                  ),
                  'TenantId' => 
                  array (
                    'description' => '该命名空间的租户ID（Tenant ID）。',
                    'type' => 'string',
                    'example' => '401b7bc8-9441-4693-****-************',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '该命名空间所在地域的RegionID。',
                    'type' => 'string',
                    'example' => 'cn-shenzhen:x*******',
                  ),
                  'MseRegistryType' => 
                  array (
                    'description' => 'MSE注册中心类型：

* default：EDAS共享注册中心。
* exclusive_mse：MSE Nacos注册中心。
',
                    'type' => 'string',
                    'example' => 'exclusive_mse',
                  ),
                  'MseInstanceId' => 
                  array (
                    'description' => 'MSE注册中心实例ID。',
                    'type' => 'string',
                    'example' => 'mse_prepaid_public_cn-tl32p******',
                  ),
                  'MseInternetAddress' => 
                  array (
                    'description' => 'MSE注册中心公网地址。',
                    'type' => 'string',
                    'example' => 'mse-aa2******-p.nacos-ans.mse.aliyuncs.com',
                  ),
                  'MseIntranetAddress' => 
                  array (
                    'description' => 'MSE注册中心私网地址。',
                    'type' => 'string',
                    'example' => 'mse-72******-nacos-ans.mse.aliyuncs.com',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-*************\\",\\n  \\"SecureToken\\": {\\n    \\"SecretKey\\": \\"gOSgbgR2R*************\\",\\n    \\"AccessKey\\": \\"f676f1**************\\",\\n    \\"BelongRegion\\": \\"cn-shenzhen\\",\\n    \\"Description\\": \\"”“\\",\\n    \\"RegionName\\": \\"x******\\",\\n    \\"EdasId\\": \\"11727458********\\",\\n    \\"AddressServerHost\\": \\"addr-****-****.edas.aliyun.com\\",\\n    \\"UserId\\": \\"edas_com***_****@******-*****.***\\",\\n    \\"Id\\": 7279,\\n    \\"TenantId\\": \\"401b7bc8-9441-4693-****-************\\",\\n    \\"RegionId\\": \\"cn-shenzhen:x*******\\",\\n    \\"MseRegistryType\\": \\"exclusive_mse\\",\\n    \\"MseInstanceId\\": \\"mse_prepaid_public_cn-tl32p******\\",\\n    \\"MseInternetAddress\\": \\"mse-aa2******-p.nacos-ans.mse.aliyuncs.com\\",\\n    \\"MseIntranetAddress\\": \\"mse-72******-nacos-ans.mse.aliyuncs.com\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<SecureToken>\\n    <EdasId>11727458********</EdasId>\\n    <TenantId>401b7bc8-9441-4693-****-************</TenantId>\\n    <SecretKey>gOSgbgR2R*************</SecretKey>\\n    <Description>”“</Description>\\n    <RegionName>x******</RegionName>\\n    <UserId>edas_com***_****@******-*****.***</UserId>\\n    <AddressServerHost>addr-****-****.edas.aliyun.com</AddressServerHost>\\n    <AccessKey>f676f1**************</AccessKey>\\n    <RegionId>cn-shenzhen:x*******</RegionId>\\n    <Id>7279</Id>\\n    <BelongRegion>cn-shenzhen</BelongRegion>\\n</SecureToken>\\n<RequestId>D16979DC-4D42-*************</RequestId>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取命名空间SecureToken信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryEccInfo' => 
    array (
      'path' => '/pop/v5/ecc',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EccId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECC ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b197-40ab-9155-****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'b197-40ab-9155-****',
              ),
              'EccInfo' => 
              array (
                'description' => 'ECC信息',
                'type' => 'object',
                'properties' => 
                array (
                  'VpcId' => 
                  array (
                    'description' => 'VPC ID',
                    'type' => 'string',
                    'example' => 'vpc-23727****',
                  ),
                  'EccId' => 
                  array (
                    'description' => 'ECC ID',
                    'type' => 'string',
                    'example' => 'a5b9****-40b4-4d7b-9c2a-55d6c1c0****',
                  ),
                  'EcuId' => 
                  array (
                    'description' => 'ECU ID',
                    'type' => 'string',
                    'example' => '0d4e****-6d87-401f-ba81-13df9877****',
                  ),
                  'GroupId' => 
                  array (
                    'description' => '分组ID',
                    'type' => 'string',
                    'example' => '57cd****-2d3b-496f-bcce-646d0a4d****',
                  ),
                  'GroupName' => 
                  array (
                    'description' => '分组名',
                    'type' => 'string',
                    'example' => '_DEFAULT_GROUP',
                  ),
                  'PackageMd5' => 
                  array (
                    'description' => '包版本的MD5码',
                    'type' => 'string',
                    'example' => 'bab6****7a090e41ca9445c9b3cd****',
                  ),
                  'AppId' => 
                  array (
                    'description' => '应用ID',
                    'type' => 'string',
                    'example' => 'e809****-43d7-4c6b-8e01-b0d9d1db****',
                  ),
                  'PackageVersion' => 
                  array (
                    'description' => '包版本',
                    'type' => 'string',
                    'example' => '20210209.153400',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-****\\",\\n  \\"EccInfo\\": {\\n    \\"VpcId\\": \\"vpc-23727****\\",\\n    \\"EccId\\": \\"a5b9****-40b4-4d7b-9c2a-55d6c1c0****\\",\\n    \\"EcuId\\": \\"0d4e****-6d87-401f-ba81-13df9877****\\",\\n    \\"GroupId\\": \\"57cd****-2d3b-496f-bcce-646d0a4d****\\",\\n    \\"GroupName\\": \\"_DEFAULT_GROUP\\",\\n    \\"PackageMd5\\": \\"bab6****7a090e41ca9445c9b3cd****\\",\\n    \\"AppId\\": \\"e809****-43d7-4c6b-8e01-b0d9d1db****\\",\\n    \\"PackageVersion\\": \\"20210209.153400\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<EccInfo>\\n    <GroupName>_DEFAULT_GROUP</GroupName>\\n    <VpcId>vpc-23727****</VpcId>\\n    <AppId>e809****-43d7-4c6b-8e01-b0d9d1db****</AppId>\\n    <PackageMd5>bab6****7a090e41ca9445c9b3cd****</PackageMd5>\\n    <EcuId>0d4e****-6d87-401f-ba81-13df9877****</EcuId>\\n    <EccId>a5b9****-40b4-4d7b-9c2a-55d6c1c0****</EccId>\\n    <PackageVersion>20210209.153400</PackageVersion>\\n    <GroupId>57cd****-2d3b-496f-bcce-646d0a4d****</GroupId>\\n</EccInfo>\\n<RequestId>b197-40ab-9155-****</RequestId>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '查询ECC信息',
      'summary' => '适用于容器服务K8s集群。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetScalingRules' => 
    array (
      'path' => '/pop/v5/app/scalingRules',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '33e39be9-3e5f-*********',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署分组ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd8bb9d60-9**************',
          ),
        ),
        2 => 
        array (
          'name' => 'Mode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可不传或指定规则类型：
- SCALE\\_IN表示缩容。
- SCALE\\_OUT表示扩容。',
            'type' => 'string',
            'required' => false,
            'example' => ' SCALE_IN',
            'enum' => 
            array (
              0 => 'SCALE_IN',
              1 => 'SCALE_OUT',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'UpdateTime' => 
              array (
                'description' => '更新时间的时间戳。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1574251601785',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-***********',
              ),
              'Data' => 
              array (
                'description' => '数据详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'OversoldFactor' => 
                  array (
                    'description' => 'Docker集群支持超卖比例：
- 1：1:1比例，不超卖。
- 2：1:2比例超卖。
- 4：1:4比例超卖。
- 8：1:8比例超卖。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'VpcId' => 
                  array (
                    'description' => 'VPC ID。',
                    'type' => 'string',
                    'example' => 'vpc-wz9b246z******',
                  ),
                  'UpdateTime' => 
                  array (
                    'description' => '更新时间的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1574251601785',
                  ),
                  'ClusterType' => 
                  array (
                    'description' => '集群类型：

- 0：普通Docker集群。
- 1：Swarm集群（已废弃）。
- 2：ECS集群。
- 3：EDAS自建K8s集群。
- 4：Pandora自动注册应用集群类型。
- 5：容器服务K8s集群。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'RuleList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Rule' => 
                      array (
                        'description' => '规则列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '规则对象。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'VpcId' => 
                            array (
                              'description' => 'VPC ID。',
                              'type' => 'string',
                              'example' => 'vpc-wz9b246z******',
                            ),
                            'UpdateTime' => 
                            array (
                              'description' => '修改时间的时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1574251601785',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => '创建时间的时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1574251601801',
                            ),
                            'Rt' => 
                            array (
                              'description' => '触发指标：服务时延，单位为ms。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'SpecId' => 
                            array (
                              'description' => 'Spec ID。',
                              'type' => 'string',
                              'example' => '03f493c0-xxxx-xxxx-xxxx-12e85cadeb41',
                            ),
                            'MultiAzPolicy' => 
                            array (
                              'description' => '多可用区扩缩容策略：
- PRIORITY：优先级策略。
- BALANCE：均衡分布策略。',
                              'type' => 'string',
                              'example' => 'PRIORITY',
                            ),
                            'ResourceFrom' => 
                            array (
                              'description' => '实例来源：
- NEW：弹性资源。
- AVAILABLE：已有资源。
- AVAILABLE_FIRST：已有资源优先。',
                              'type' => 'string',
                              'example' => 'AVAILABLE',
                            ),
                            'Mode' => 
                            array (
                              'description' => '规则类型：
- SCALE_IN：缩容。
- SCALE_OUT：扩容。',
                              'type' => 'string',
                              'example' => 'SCALE_OUT',
                            ),
                            'LoadNum' => 
                            array (
                              'description' => '触发指标：系统负载，即指当前正在被CPU执行和等待被CPU执行的进程数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'TemplateVersion' => 
                            array (
                              'description' => '启动模版的版本号。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1143542',
                            ),
                            'Step' => 
                            array (
                              'description' => '每次扩容或缩容的实例数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'Cond' => 
                            array (
                              'description' => '触发条件：
- OR：满足任一条件即触发。
- AND：满足所有条件才触发。',
                              'type' => 'string',
                              'example' => 'OR',
                            ),
                            'Cpu' => 
                            array (
                              'description' => '触发指标CPU使用率。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'GroupId' => 
                            array (
                              'description' => '应用实例分组ID。',
                              'type' => 'string',
                              'example' => 'd8bb9d60-91b5-4cdf-****-************',
                            ),
                            'InstNum' => 
                            array (
                              'description' => '扩容时表示分组内的最大实例数，缩容时表示分组内最小实例数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2',
                            ),
                            'AppId' => 
                            array (
                              'description' => '应用ID。',
                              'type' => 'string',
                              'example' => '33e39be9-3e5f-*********',
                            ),
                            'Duration' => 
                            array (
                              'description' => '持续时间的时间戳。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1574251601',
                            ),
                            'VSwitchIds' => 
                            array (
                              'description' => 'vSwitch ID列表。如果设置了多个，以半角逗号（,）分割。',
                              'type' => 'string',
                              'example' => 'vsw-mxxxxkxxxx4xxxxwbionj',
                            ),
                            'MetricType' => 
                            array (
                              'description' => 'Metric类型。',
                              'type' => 'string',
                              'example' => 'HSF',
                            ),
                            'TemplateId' => 
                            array (
                              'description' => '启动模版ID。',
                              'type' => 'string',
                              'example' => 'lt-bp1xxxxn73pxxxxf83l',
                            ),
                            'Enable' => 
                            array (
                              'description' => '是否启用弹性扩容或缩容：

- true：启用。
- false：不启用。',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"UpdateTime\\": 1574251601785,\\n  \\"RequestId\\": \\"D16979DC-4D42-***********\\",\\n  \\"Data\\": {\\n    \\"OversoldFactor\\": 1,\\n    \\"VpcId\\": \\"vpc-wz9b246z******\\",\\n    \\"UpdateTime\\": 1574251601785,\\n    \\"ClusterType\\": 2,\\n    \\"RuleList\\": {\\n      \\"Rule\\": [\\n        {\\n          \\"VpcId\\": \\"vpc-wz9b246z******\\",\\n          \\"UpdateTime\\": 1574251601785,\\n          \\"CreateTime\\": 1574251601801,\\n          \\"Rt\\": 1,\\n          \\"SpecId\\": \\"03f493c0-xxxx-xxxx-xxxx-12e85cadeb41\\",\\n          \\"MultiAzPolicy\\": \\"PRIORITY\\",\\n          \\"ResourceFrom\\": \\"AVAILABLE\\",\\n          \\"Mode\\": \\"SCALE_OUT\\",\\n          \\"LoadNum\\": 1,\\n          \\"TemplateVersion\\": 1143542,\\n          \\"Step\\": 1,\\n          \\"Cond\\": \\"OR\\",\\n          \\"Cpu\\": 1,\\n          \\"GroupId\\": \\"d8bb9d60-91b5-4cdf-****-************\\",\\n          \\"InstNum\\": 2,\\n          \\"AppId\\": \\"33e39be9-3e5f-*********\\",\\n          \\"Duration\\": 1574251601,\\n          \\"VSwitchIds\\": \\"vsw-mxxxxkxxxx4xxxxwbionj\\",\\n          \\"MetricType\\": \\"HSF\\",\\n          \\"TemplateId\\": \\"lt-bp1xxxxn73pxxxxf83l\\",\\n          \\"Enable\\": true\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Data>\\n    <RuleList>\\n        <Rule>\\n            <Step>1</Step>\\n            <SpecId/>\\n            <AppId>33e39be9-3e5f-4028-****-************</AppId>\\n            <MultiAzPolicy/>\\n            <UpdateTime>1574251601785</UpdateTime>\\n            <MetricType>HSF</MetricType>\\n            <Mode>SCALE_OUT</Mode>\\n            <GroupId>d8bb9d60-91b5-4cdf-****-************</GroupId>\\n            <VpcId/>\\n            <TemplateId/>\\n            <Rt>1</Rt>\\n            <ResourceFrom>AVAILABLE</ResourceFrom>\\n            <Cpu>1</Cpu>\\n            <VSwitchIds/>\\n            <Cond>OR</Cond>\\n            <InstNum>2</InstNum>\\n            <Enable>true</Enable>\\n            <CreateTime>1574251601801</CreateTime>\\n            <Duration>1</Duration>\\n            <LoadNum>1</LoadNum>\\n        </Rule>\\n    </RuleList>\\n    <OversoldFactor>1</OversoldFactor>\\n    <ClusterType>2</ClusterType>\\n    <VpcId>vpc-wz9b246z******</VpcId>\\n</Data>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取扩缩容规则',
      'summary' => '调用GetScalingRules接口获取扩缩容规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListUserDefineRegion' => 
    array (
      'path' => '/pop/v5/user_region_defs',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DebugEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否允许远程调试。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-****',
              ),
              'UserDefineRegionList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'UserDefineRegionEntity' => 
                  array (
                    'description' => '命名空间列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '命名空间对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BelongRegion' => 
                        array (
                          'description' => '隶属的物理地域ID。',
                          'type' => 'string',
                          'example' => 'cn-shenzhen',
                        ),
                        'RegionName' => 
                        array (
                          'description' => '命名空间名称。',
                          'type' => 'string',
                          'example' => 'betaappManager',
                        ),
                        'Description' => 
                        array (
                          'description' => '命名空间描述信息。',
                          'type' => 'string',
                          'example' => 'betaappManager',
                        ),
                        'DebugEnable' => 
                        array (
                          'description' => '是否允许远程调试。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'UserId' => 
                        array (
                          'description' => '用户主账号ID。',
                          'type' => 'string',
                          'example' => 'edas_****_test@aliyun-****.com',
                        ),
                        'Id' => 
                        array (
                          'description' => '唯一标识。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1330',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '命名空间ID。

> 创建后不可变，格式为`物理地域ID：逻辑地域标识符`。',
                          'type' => 'string',
                          'example' => 'cn-shenzhen:betaappManager',
                        ),
                        'MseInstanceId' => 
                        array (
                          'description' => '注册中心类型：

* default：EDAS共享注册中心。
* exclusive_mse：MSE Nacos注册中心。',
                          'type' => 'string',
                          'example' => 'default：EDAS',
                        ),
                        'RegistryType' => 
                        array (
                          'description' => 'MSE注册中心实例ID。',
                          'type' => 'string',
                          'example' => 'mse_prepaid_public_cn-tl32n******',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-****\\",\\n  \\"UserDefineRegionList\\": {\\n    \\"UserDefineRegionEntity\\": [\\n      {\\n        \\"BelongRegion\\": \\"cn-shenzhen\\",\\n        \\"RegionName\\": \\"betaappManager\\",\\n        \\"Description\\": \\"betaappManager\\",\\n        \\"DebugEnable\\": false,\\n        \\"UserId\\": \\"edas_****_test@aliyun-****.com\\",\\n        \\"Id\\": 1330,\\n        \\"RegionId\\": \\"cn-shenzhen:betaappManager\\",\\n        \\"MseInstanceId\\": \\"default：EDAS\\",\\n        \\"RegistryType\\": \\"mse_prepaid_public_cn-tl32n******\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Code>200</Code>\\n<UserDefineRegionList>\\n    <UserDefineRegionEntity>\\n        <Description>betaappManager</Description>\\n        <RegionName>betaappManager</RegionName>\\n        <BelongRegion>cn-shenzhen</BelongRegion>\\n        <RegionId>cn-shenzhen:betaappManager</RegionId>\\n        <Id>1330</Id>\\n        <UserId>edas_****_test@aliyun-****.com</UserId>\\n        <DebugEnable>false</DebugEnable>\\n    </UserDefineRegionEntity>\\n</UserDefineRegionList>","errorExample":""}]',
      'title' => '获取用户自定义命名空间列表',
      'summary' => '获取用户自定义命名空间列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetContainerConfiguration' => 
    array (
      'path' => '/pop/v5/app/container_config',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => '3616cdca-4f92-**************',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID。
- 如果ID不为空，则获取应用分组的Tomcat配置。
- 如果ID为“”，则获取应用的Tomcat配置。',
            'type' => 'string',
            'required' => false,
            'example' => '8123db90-880f-**************',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口请求返回的状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '接口请求返回的信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => ' 请求ID。',
                'type' => 'string',
                'example' => '34F8-FDG9-*****************',
              ),
              'ContainerConfiguration' => 
              array (
                'description' => 'Tomcat配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'HttpPort' => 
                  array (
                    'description' => '应用端口。返回设置的值和应用配置。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '8080',
                  ),
                  'ContextPath' => 
                  array (
                    'description' => 'Tomcat的Context Path。',
                    'type' => 'string',
                    'example' => '/',
                  ),
                  'UseBodyEncoding' => 
                  array (
                    'description' => 'useBodyEncodingForURI是否启用，返回设置的值。
- 如果应用分组未设置，则返回应用的配置。
- 如果应用未设置，则返回默认值。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'MaxThreads' => 
                  array (
                    'description' => '最大线程数，返回设置的值。
- 如果应用分组未设置，则返回应用的配置。
- 如果应用未设置，则返回默认值。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '400',
                  ),
                  'URIEncoding' => 
                  array (
                    'description' => 'URI编码方式，包含ISO-8859-1、GBK、GB2312和UTF-8，返回设置的值。
- 如果应用分组未设置，则返回应用的配置。
- 如果应用未设置，则返回默认值。',
                    'type' => 'string',
                    'example' => 'ISO-8859-1',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"34F8-FDG9-*****************\\",\\n  \\"ContainerConfiguration\\": {\\n    \\"HttpPort\\": 8080,\\n    \\"ContextPath\\": \\"/\\",\\n    \\"UseBodyEncoding\\": true,\\n    \\"MaxThreads\\": 400,\\n    \\"URIEncoding\\": \\"ISO-8859-1\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetContainerConfigurationResponse>\\n    <Code>200</Code>\\n    <Message>success</Message>\\n    <RequestId>34F8-FDG9-*****************</RequestId>\\n    <ContainerConfiguration>\\n        <HttpPort>8080</HttpPort>\\n        <ContextPath>/</ContextPath>\\n        <UseBodyEncoding>true</UseBodyEncoding>\\n        <MaxThreads>400</MaxThreads>\\n        <URIEncoding>ISO-8859-1</URIEncoding>\\n    </ContainerConfiguration>\\n</GetContainerConfigurationResponse>","errorExample":""}]',
      'title' => '获取应用或分组的 Tomcat 设置',
      'summary' => '调用GetContainerConfiguration接口获取应用或应用分组的Tomcat配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListApplication' => 
    array (
      'path' => '/pop/v5/app/app_list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '以集群维度筛选应用列表。',
            'type' => 'string',
            'required' => false,
            'example' => 'c37aec2a-bcca-4ec1-****-************',
          ),
        ),
        1 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '以微服务空间维度匹配筛选应用列表。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing:test',
          ),
        ),
        2 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '以appName维度筛选应用列表。',
            'type' => 'string',
            'required' => false,
            'example' => 'testapp',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '以资源组维度筛选应用列表。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-aek24j4s4b*****',
          ),
        ),
        4 => 
        array (
          'name' => 'LogicalRegionIdFilter',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按精确匹配微服务空间的方式筛选应用。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing:test',
          ),
        ),
        5 => 
        array (
          'name' => 'AppIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID列表。',
            'type' => 'string',
            'required' => false,
            'example' => '[
      "5657d271-****-4f03-9bb2-431f942886bb",
      "5657d271-****-4f03-9bb2-431f942bbddd"
]',
          ),
        ),
        6 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询，当前第几页，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询，每页显示的条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5d6fa0bc-cc3**********',
              ),
              'ApplicationList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Application' => 
                  array (
                    'description' => '应用列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '应用列表对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => '00ee517d-dd7d-4d4e-****-************',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地域ID。',
                          'type' => 'string',
                          'example' => 'cn-beijing:docTes',
                        ),
                        'Name' => 
                        array (
                          'description' => '应用名称。',
                          'type' => 'string',
                          'example' => 'doc-test-consumer',
                        ),
                        'Instances' => 
                        array (
                          'description' => '应用实例数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5',
                        ),
                        'Port' => 
                        array (
                          'description' => '应用的服务端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '8080',
                        ),
                        'State' => 
                        array (
                          'description' => '应用状态：
* RUNNING：运行中。
* STOPPED：已停止。
* DEPLOYING：正在部署。
* DELETING：正在删除。',
                          'type' => 'string',
                          'example' => 'RUNNING',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '应用创建时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1664208000000',
                        ),
                        'SlbIp' => 
                        array (
                          'description' => '私网SLB IP地址。',
                          'type' => 'string',
                          'example' => '192.168.0.***',
                        ),
                        'SlbPort' => 
                        array (
                          'description' => '私网SLB端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '80',
                        ),
                        'SlbListenerPort' => 
                        array (
                          'description' => '私网SLB监听端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '8088',
                        ),
                        'ExtSlbListenerPort' => 
                        array (
                          'description' => '公网SLB监听端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '8080',
                        ),
                        'BuildPackageId' => 
                        array (
                          'description' => '容器版本ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '58',
                        ),
                        'ExtSlbIp' => 
                        array (
                          'description' => '公网SLB IP地址。',
                          'type' => 'string',
                          'example' => '100.100.70.***',
                        ),
                        'ApplicationType' => 
                        array (
                          'description' => '应用部署类型：
- War代表WAR包部署。
- FatJar代表JAR包部署。
- Image代表镜像部署。
- 为空代表未部署。',
                          'type' => 'string',
                          'example' => 'FatJar',
                        ),
                        'ClusterType' => 
                        array (
                          'description' => '应用集群环境类型：
- **2**：ECS集群。
- **3**：EDAS自带K8s集群。
- **5**：容器服务K8s集群。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'RunningInstanceCount' => 
                        array (
                          'description' => '正在运行的应用实例数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ClusterId' => 
                        array (
                          'description' => '集群ID。',
                          'type' => 'string',
                          'example' => 'c37aec2a-bcca-4ec1-****-************',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-aek24j4s4b*****',
                        ),
                        'K8sNamespace' => 
                        array (
                          'description' => 'K8s命名空间。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'NamespaceId' => 
                        array (
                          'description' => '微服务命名空间ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou:test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"5d6fa0bc-cc3**********\\",\\n  \\"ApplicationList\\": {\\n    \\"Application\\": [\\n      {\\n        \\"AppId\\": \\"00ee517d-dd7d-4d4e-****-************\\",\\n        \\"RegionId\\": \\"cn-beijing:docTes\\",\\n        \\"Name\\": \\"doc-test-consumer\\",\\n        \\"Instances\\": 5,\\n        \\"Port\\": 8080,\\n        \\"State\\": \\"RUNNING\\",\\n        \\"CreateTime\\": 1664208000000,\\n        \\"SlbIp\\": \\"192.168.0.***\\",\\n        \\"SlbPort\\": 80,\\n        \\"SlbListenerPort\\": 8088,\\n        \\"ExtSlbListenerPort\\": 8080,\\n        \\"BuildPackageId\\": 58,\\n        \\"ExtSlbIp\\": \\"100.100.70.***\\",\\n        \\"ApplicationType\\": \\"FatJar\\",\\n        \\"ClusterType\\": 2,\\n        \\"RunningInstanceCount\\": 0,\\n        \\"ClusterId\\": \\"c37aec2a-bcca-4ec1-****-************\\",\\n        \\"ResourceGroupId\\": \\"rg-aek24j4s4b*****\\",\\n        \\"K8sNamespace\\": \\"default\\",\\n        \\"NamespaceId\\": \\"cn-hangzhou:test\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>5d6fa0bc-cc3**********</RequestId>\\n<Message>success</Message>\\n<ApplicationList>\\n    <Application>\\n        <BuildPackageId>58</BuildPackageId>\\n        <ApplicationType>FatJar</ApplicationType>\\n        <ResourceGroupId>rg-aek24j4s4b*****</ResourceGroupId>\\n        <AppId>00ee517d-dd7d-4d4e-****-************</AppId>\\n        <ClusterId>c37aec2a-bcca-4ec1-****-************</ClusterId>\\n        <ClusterType>2</ClusterType>\\n        <RegionId>cn-beijing:docTes</RegionId>\\n        <RunningInstanceCount>0</RunningInstanceCount>\\n        <Name>doc-test-consumer</Name>\\n    </Application>\\n</ApplicationList>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取应用列表',
      'summary' => '获取应用列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDeployGroup' => 
    array (
      'path' => '/pop/v5/app/deploy_group_list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可通过调用ListApplication接口来获取，详情请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-4f92-4413-****-************',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3FDE-DS9R-*********************',
              ),
              'DeployGroupList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DeployGroup' => 
                  array (
                    'description' => '部署分组列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '部署分组对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VServerGroupId' => 
                        array (
                          'description' => '部署分组关联的私网SLB的虚拟服务器组ID。',
                          'type' => 'string',
                          'example' => 'rsp-cige6******',
                        ),
                        'Status' => 
                        array (
                          'description' => '分组状态：
- 0：准备。
-  1：执行中。
-  2：执行成功。
-  3：执行失败 。
- 6：终止 。
- 10：系统异常执行失败。',
                          'type' => 'string',
                          'example' => '2',
                        ),
                        'CpuRequest' => 
                        array (
                          'description' => '应用运行过程中，应用实例需要申请的CPU配额，单位：核数，设置为0表示不限制。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '更新时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1573627695779',
                        ),
                        'MemoryRequest' => 
                        array (
                          'description' => '应用运行过程中，应用实例的内存配额。单位：MB，设置为0表示不限制。',
                          'type' => 'string',
                          'example' => '512',
                        ),
                        'NameSpace' => 
                        array (
                          'description' => '命名空间。',
                          'type' => 'string',
                          'example' => 'ping****est',
                        ),
                        'AppVersionId' => 
                        array (
                          'description' => '分组部署记录ID。',
                          'type' => 'string',
                          'example' => 'changeorder_a**_*******_**',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1573627695779',
                        ),
                        'DeploymentName' => 
                        array (
                          'description' => '部署名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'PreStop' => 
                        array (
                          'description' => '停止前脚本。',
                          'type' => 'string',
                          'example' => '{\\"exec\\":{\\"command\\":[\\"ls\\",\\"/\\"]}}"',
                        ),
                        'PackageUrl' => 
                        array (
                          'description' => '部署包地址。',
                          'type' => 'string',
                          'example' => 'http://****.oss-cn-shanghai.aliyuncs.com/****/sc-****-consumer-E.jar',
                        ),
                        'PackageVersion' => 
                        array (
                          'description' => '部署包版本。',
                          'type' => 'string',
                          'example' => 'E',
                        ),
                        'BaseComponentMetaName' => 
                        array (
                          'description' => '基础组件名称。',
                          'type' => 'string',
                          'example' => 'k8s-sc-consumer-****',
                        ),
                        'CsClusterId' => 
                        array (
                          'description' => '容器集群ID。',
                          'type' => 'string',
                          'example' => 'c66e65950db****cba92f17434df1****',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => '3616cdca-4f92-4413-****-************',
                        ),
                        'LastUpdateTime' => 
                        array (
                          'description' => '最近更新时间的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1587888503825',
                        ),
                        'Env' => 
                        array (
                          'description' => '容器服务集群ID。',
                          'type' => 'string',
                          'example' => '497806cb-****-6a7',
                        ),
                        'CpuLimit' => 
                        array (
                          'description' => '应用运行过程中，应用实例的CPU限制，单位：核数。',
                          'type' => 'string',
                          'example' => '400',
                        ),
                        'GroupType' => 
                        array (
                          'description' => '分组类型：
- 0：默认分组。
- 1：流量管理没有启用灰度。
- 2：流量管理启用灰度。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'ClusterId' => 
                        array (
                          'description' => '集群ID。',
                          'type' => 'string',
                          'example' => '0d247b93-8d62-4e34-****-************',
                        ),
                        'PostStart' => 
                        array (
                          'description' => '启动后脚本。',
                          'type' => 'string',
                          'example' => '{\\"exec\\":{\\"command\\":[\\"ls\\",\\"/\\"]}}"',
                        ),
                        'Labels' => 
                        array (
                          'description' => '标签。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'MemoryLimit' => 
                        array (
                          'description' => '应用运行过程中，应用实例的内存限制。单位：MB，设置为0表示不限制。',
                          'type' => 'string',
                          'example' => '0',
                        ),
                        'Strategy' => 
                        array (
                          'description' => '限流策略（保留字段）。',
                          'type' => 'string',
                          'example' => 'RollingUpdate',
                        ),
                        'Selector' => 
                        array (
                          'description' => 'EDAS容器服务K8s集群中部署的应用的ID。',
                          'type' => 'string',
                          'example' => '53dd85cc-25b4-4d0e-****-6bf5465****4',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '分组ID。',
                          'type' => 'string',
                          'example' => '577f4c50-16ee-43d8-****-************',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '分组名称。',
                          'type' => 'string',
                          'example' => '_DEFAULT_GROUP',
                        ),
                        'ClusterName' => 
                        array (
                          'description' => '集群名称。',
                          'type' => 'string',
                          'example' => 'doc-test',
                        ),
                        'PackageVersionId' => 
                        array (
                          'description' => '该分组部署的版本ID。',
                          'type' => 'string',
                          'example' => 'a7d48fe8-ad8f-****-89bd-74cc1ee6****',
                        ),
                        'Reversion' => 
                        array (
                          'description' => '应用版本，取值在0~7之间逐次递增。',
                          'type' => 'string',
                          'example' => '2',
                        ),
                        'VExtServerGroupId' => 
                        array (
                          'description' => '部署分组关联的公网SLB的虚拟服务器组ID。',
                          'type' => 'string',
                          'example' => 'rsp-cige6******',
                        ),
                        'PackagePublicUrl' => 
                        array (
                          'description' => '部署包对外下载地址。',
                          'type' => 'string',
                          'example' => 'http://****.oss-cn-shanghai.aliyuncs.com/****/sc-****-consumer-E.jar',
                        ),
                        'EphemeralStorageRequest' => 
                        array (
                          'description' => '临时存储最小资源需求，单位：GB。值为0表示不限制。',
                          'type' => 'string',
                          'example' => '4',
                        ),
                        'EphemeralStorageLimit' => 
                        array (
                          'description' => '临时存储资源需求上限，单位：GB。值为0表示不限制。',
                          'type' => 'string',
                          'example' => '8',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"3FDE-DS9R-*********************\\",\\n  \\"DeployGroupList\\": {\\n    \\"DeployGroup\\": [\\n      {\\n        \\"VServerGroupId\\": \\"rsp-cige6******\\",\\n        \\"Status\\": \\"2\\",\\n        \\"CpuRequest\\": \\"1\\",\\n        \\"UpdateTime\\": 1573627695779,\\n        \\"MemoryRequest\\": \\"512\\",\\n        \\"NameSpace\\": \\"ping****est\\",\\n        \\"AppVersionId\\": \\"changeorder_a**_*******_**\\",\\n        \\"CreateTime\\": 1573627695779,\\n        \\"DeploymentName\\": \\"test\\",\\n        \\"PreStop\\": \\"{\\\\\\\\\\\\\\"exec\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"command\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\"ls\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\"]}}\\\\\\"\\",\\n        \\"PackageUrl\\": \\"http://****.oss-cn-shanghai.aliyuncs.com/****/sc-****-consumer-E.jar\\",\\n        \\"PackageVersion\\": \\"E\\",\\n        \\"BaseComponentMetaName\\": \\"k8s-sc-consumer-****\\",\\n        \\"CsClusterId\\": \\"c66e65950db****cba92f17434df1****\\",\\n        \\"AppId\\": \\"3616cdca-4f92-4413-****-************\\",\\n        \\"LastUpdateTime\\": 1587888503825,\\n        \\"Env\\": \\"497806cb-****-6a7\\",\\n        \\"CpuLimit\\": \\"400\\",\\n        \\"GroupType\\": 1,\\n        \\"ClusterId\\": \\"0d247b93-8d62-4e34-****-************\\",\\n        \\"PostStart\\": \\"{\\\\\\\\\\\\\\"exec\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"command\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\"ls\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\"]}}\\\\\\"\\",\\n        \\"Labels\\": \\"test\\",\\n        \\"MemoryLimit\\": \\"0\\",\\n        \\"Strategy\\": \\"RollingUpdate\\",\\n        \\"Selector\\": \\"53dd85cc-25b4-4d0e-****-6bf5465****4\\",\\n        \\"GroupId\\": \\"577f4c50-16ee-43d8-****-************\\",\\n        \\"GroupName\\": \\"_DEFAULT_GROUP\\",\\n        \\"ClusterName\\": \\"doc-test\\",\\n        \\"PackageVersionId\\": \\"a7d48fe8-ad8f-****-89bd-74cc1ee6****\\",\\n        \\"Reversion\\": \\"2\\",\\n        \\"VExtServerGroupId\\": \\"rsp-cige6******\\",\\n        \\"PackagePublicUrl\\": \\"http://****.oss-cn-shanghai.aliyuncs.com/****/sc-****-consumer-E.jar\\",\\n        \\"EphemeralStorageRequest\\": \\"4\\",\\n        \\"EphemeralStorageLimit\\": \\"8\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DeployGroupList>\\n    <DeployGroup>\\n        <GroupName>_DEFAULT_GROUP</GroupName>\\n        <MemoryRequest>512</MemoryRequest>\\n        <NameSpace>ping****est</NameSpace>\\n        <AppVersionId>“”</AppVersionId>\\n        <Env>497806cb-****-6a7</Env>\\n        <CsClusterId>c66e65950db****cba92f17434df1****</CsClusterId>\\n        <PackageVersion>E</PackageVersion>\\n        <Reversion>2</Reversion>\\n        <PreStop>\\"\\"</PreStop>\\n        <LastUpdateTime>1587888503825</LastUpdateTime>\\n        <ClusterName>doc-test</ClusterName>\\n        <Selector>53dd85cc-25b4-4d0e-****-6bf5465****4</Selector>\\n        <Status>2</Status>\\n        <DeploymentName>test</DeploymentName>\\n        <CpuLimit>400</CpuLimit>\\n        <ClusterId>0d247b93-8d62-4e34-****-************</ClusterId>\\n        <CreateTime>1573627695779</CreateTime>\\n        <PostStart>\\"\\"</PostStart>\\n        <Labels>test</Labels>\\n        <PackageVersionId>“”</PackageVersionId>\\n        <BaseComponentMetaName>k8s-sc-consumer-****</BaseComponentMetaName>\\n        <GroupId>577f4c50-16ee-43d8-****-************</GroupId>\\n        <MemoryLimit>0</MemoryLimit>\\n        <AppId>3616cdca-4f92-4413-****-************</AppId>\\n        <GroupType>1</GroupType>\\n        <UpdateTime>1573627695779</UpdateTime>\\n        <PackageUrl>http://****.oss-cn-shanghai.aliyuncs.com/****/sc-****-consumer-E.jar</PackageUrl>\\n        <Strategy>RollingUpdate</Strategy>\\n        <CpuRequest>1</CpuRequest>\\n        <PackagePublicUrl>http://****.oss-cn-shanghai.aliyuncs.com/****/sc-****-consumer-E.jar</PackagePublicUrl>\\n    </DeployGroup>\\n</DeployGroupList>\\n<Message>sucess</Message>\\n<RequestId>3FDE-DS9R-*********************</RequestId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取部署分组列表',
      'summary' => '调用ListDeployGroup接口获取部署分组列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListHistoryDeployVersion' => 
    array (
      'path' => '/pop/v5/app/deploy_history_version_list',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。获取应用ID，请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-4f92-4413-****-************',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息 ',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'D16979DC-4D42-************',
              ),
              'PackageVersionList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PackageVersion' => 
                  array (
                    'description' => '部署包版本列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '部署类型。
- url：通过JAR或WAR包部署
- image：通过镜像部署',
                          'type' => 'string',
                          'example' => 'url',
                        ),
                        'PublicUrl' => 
                        array (
                          'description' => '部署包的URL',
                          'type' => 'string',
                          'example' => 'http://edas-sz.oss-cn-shenzhen**********/SPRING_CLOUD_PROVIDER.jar',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '更新时间的时间戳',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1573627440892',
                        ),
                        'Description' => 
                        array (
                          'description' => '历史版本的描述信息',
                          'type' => 'string',
                          'example' => 'deploy',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间的时间戳',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1573627440892',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID',
                          'type' => 'string',
                          'example' => '3616cdca-4f92-4413-****-************',
                        ),
                        'WarUrl' => 
                        array (
                          'description' => '部署包的URL',
                          'type' => 'string',
                          'example' => 'http://edas-sz.oss-cn-shenzhen**********/SPRING_CLOUD_PROVIDER.jar',
                        ),
                        'Id' => 
                        array (
                          'description' => '历史版本的唯一标识',
                          'type' => 'string',
                          'example' => '441beb18-da42-44dc-****-************',
                        ),
                        'PackageVersion' => 
                        array (
                          'description' => '发布版本（提供给回滚接口使用）',
                          'type' => 'string',
                          'example' => '1.0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-************\\",\\n  \\"PackageVersionList\\": {\\n    \\"PackageVersion\\": [\\n      {\\n        \\"Type\\": \\"url\\",\\n        \\"PublicUrl\\": \\"http://edas-sz.oss-cn-shenzhen**********/SPRING_CLOUD_PROVIDER.jar\\",\\n        \\"UpdateTime\\": 1573627440892,\\n        \\"Description\\": \\"deploy\\",\\n        \\"CreateTime\\": 1573627440892,\\n        \\"AppId\\": \\"3616cdca-4f92-4413-****-************\\",\\n        \\"WarUrl\\": \\"http://edas-sz.oss-cn-shenzhen**********/SPRING_CLOUD_PROVIDER.jar\\",\\n        \\"Id\\": \\"441beb18-da42-44dc-****-************\\",\\n        \\"PackageVersion\\": \\"1.0\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<PackageVersionList>\\n    <PackageVersion>\\n        <Type>url</Type>\\n        <Description>deploy</Description>\\n        <AppId>3616cdca-4f92-4413-****-************</AppId>\\n        <PublicUrl>http://edas-sz.oss-cn-shenzhen**********/SPRING_CLOUD_PROVIDER.jar</PublicUrl>\\n        <WarUrl>http://edas-sz.oss-cn-shenzhen**********/SPRING_CLOUD_PROVIDER.jar</WarUrl>\\n        <CreateTime>1573627440892</CreateTime>\\n        <UpdateTime>1573627440892</UpdateTime>\\n        <Id>441beb18-da42-44dc-****-************</Id>\\n        <PackageVersion>1.0</PackageVersion>\\n    </PackageVersion>\\n</PackageVersionList>\\n<RequestId>D16979DC-4D42-************</RequestId>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '应用发布历史版本列表',
      'summary' => '调用ListHistoryDeployVersion接口，获取应用部署的历史版本列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListRecentChangeOrder' => 
    array (
      'path' => '/pop/v5/changeorder/change_order_list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-4f92-4413-****-************',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-************',
              ),
              'ChangeOrderList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ChangeOrder' => 
                  array (
                    'description' => '变更记录列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '变更流程状态。
- 0：准备开始执行
- 1：执行中
- 2：执行成功
- 3：执行失败
- 6：执行终止
- 8：等待手工确认（手工分批的时候能看到）
- 9：等待自动执行
- 10：由于系统错误而失败',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'FinishTime' => 
                        array (
                          'description' => '结束时间。',
                          'type' => 'string',
                          'example' => '2019-11-13 14:24:02',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2019-11-13 14:23:46',
                        ),
                        'UserId' => 
                        array (
                          'description' => '创建变更流程用户ID。',
                          'type' => 'string',
                          'example' => '1432536****',
                        ),
                        'ChangeOrderDescription' => 
                        array (
                          'description' => '变更流程描述信息。',
                          'type' => 'string',
                          'example' => '版本：2020-05-14 20:02:33 | 包名：hsf-pandora-boot-provider-1.0.jar | 部署目标：所有分组',
                        ),
                        'Source' => 
                        array (
                          'description' => '变更来源。
- console：EDAS控制台
- pop：POP API或工具',
                          'type' => 'string',
                          'example' => 'pop',
                        ),
                        'BatchCount' => 
                        array (
                          'description' => '分批次数。最少1批，最多5批。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'CreateUserId' => 
                        array (
                          'description' => '创建变更单的用户。',
                          'type' => 'string',
                          'example' => 'edas_test1@aliyun-test.com',
                        ),
                        'CoTypeCode' => 
                        array (
                          'description' => '变更流程类型：
- CoCreateApp：创建应用。
- CoStartApplication：启动应用。
- CoStopApplication：停止应用。
- CoRestartApplication：重启应用。
- CoDeleteApp：删除应用。
- CoStart：启动应用实例。
- CoStop：停止应用实例。
- CoRestart：重启实例。
- CoDeploy：部署应用。
- CoReset：重置应用实例。
- CoRollback：回滚应用。
- CoScaleIn：缩容应用实例。
- CoScaleOut：扩容应用实例。
- CoChangeGroup：更改应用实例分组。
- CoUpdateContainer：更新应用部署包版本。
- CoBindSlb：绑定SLB。
- CoBindECSSlb：绑定ECS SLB。
- CoUnbindECSSlb：解绑ECS SLB。
- CoUnbindSlb：解绑SLB。
- CoModifySlb：配置SLB。
- CoModifyConfig：修改应用配置。
- CoClusterScaleOut：集群扩容。
- CoRescaleApplicationVertically：垂直扩缩容。',
                          'type' => 'string',
                          'example' => 'CoDeploy',
                        ),
                        'ChangeOrderId' => 
                        array (
                          'description' => '变更流程唯一标识ID。',
                          'type' => 'string',
                          'example' => '1074f3e2-e974-4a0e-****-************',
                        ),
                        'BatchType' => 
                        array (
                          'description' => '分批发布时下一批变更的执行方式。

- Automatic：自动
- Manual：手动',
                          'type' => 'string',
                          'example' => 'Automatic',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '变更的应用分组ID。',
                          'type' => 'string',
                          'example' => '8123db90-880f-486f-****-************',
                        ),
                        'CoType' => 
                        array (
                          'description' => '变更流程类型。',
                          'type' => 'string',
                          'example' => 'Application Scale Out',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => '3616cdca-4f92-4413-****-************',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-************\\",\\n  \\"ChangeOrderList\\": {\\n    \\"ChangeOrder\\": [\\n      {\\n        \\"Status\\": 2,\\n        \\"FinishTime\\": \\"2019-11-13 14:24:02\\",\\n        \\"CreateTime\\": \\"2019-11-13 14:23:46\\",\\n        \\"UserId\\": \\"1432536****\\",\\n        \\"ChangeOrderDescription\\": \\"版本：2020-05-14 20:02:33 | 包名：hsf-pandora-boot-provider-1.0.jar | 部署目标：所有分组\\",\\n        \\"Source\\": \\"pop\\",\\n        \\"BatchCount\\": 1,\\n        \\"CreateUserId\\": \\"edas_test1@aliyun-test.com\\",\\n        \\"CoTypeCode\\": \\"CoDeploy\\",\\n        \\"ChangeOrderId\\": \\"1074f3e2-e974-4a0e-****-************\\",\\n        \\"BatchType\\": \\"Automatic\\",\\n        \\"GroupId\\": \\"8123db90-880f-486f-****-************\\",\\n        \\"CoType\\": \\"Application Scale Out\\",\\n        \\"AppId\\": \\"3616cdca-4f92-4413-****-************\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ChangeOrderList>\\n    <ChangeOrder>\\n        <Status>2</Status>\\n        <BatchCount>1</BatchCount>\\n        <FinishTime>2019-11-13 14:24:02</FinishTime>\\n        <CreateTime>2019-11-13 14:23:46</CreateTime>\\n        <BatchType>Automatic</BatchType>\\n        <CoType>Application Scale Out</CoType>\\n        <AppId>3616cdca-4f92-4413-****-************</AppId>\\n        <ChangeOrderId>1074f3e2-e974-4a0e-****-************</ChangeOrderId>\\n        <GroupId>8123db90-880f-486f-****-************</GroupId>\\n    </ChangeOrder>\\n</ChangeOrderList>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '列出应用历史变更单列表',
      'summary' => '调用ListRecentChangeOrder列出应用历史变更单列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListBuildPack' => 
    array (
      'path' => '/pop/v5/app/build_pack_list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'code ',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '4FD4-*************',
              ),
              'BuildPackList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'BuildPack' => 
                  array (
                    'description' => '容器版本列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'PandoraVersion' => 
                        array (
                          'description' => 'Pandora版本号',
                          'type' => 'string',
                          'example' => 'edas.public.sar.V3.5.6',
                        ),
                        'ConfigId' => 
                        array (
                          'description' => '容器版本ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '57',
                        ),
                        'Feature' => 
                        array (
                          'description' => '公测特性',
                          'type' => 'string',
                          'example' => '“”',
                        ),
                        'PandoraDesc' => 
                        array (
                          'description' => 'Pandora描述',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'PluginInfo' => 
                        array (
                          'description' => '插件描述',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'Disabled' => 
                        array (
                          'description' => '是否被禁用，禁用的不能够设置使用。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'TengineDownloadUrl' => 
                        array (
                          'description' => 'Tengine安装程序的下载地址',
                          'type' => 'string',
                          'example' => 'http://edas.oss-cn-hangzhou.aliyuncs.com/components/tengine/3.4.7/tengine.sh',
                        ),
                        'TomcatPath' => 
                        array (
                          'description' => 'Tomcat目录名称
',
                          'type' => 'string',
                          'example' => 'taobao-tomcat-production-7.0.59.3',
                        ),
                        'TomcatDesc' => 
                        array (
                          'description' => 'Tomcat描述',
                          'type' => 'string',
                          'example' => '1.更新config-client插件，修复多租户场景未读缓存的问题；2.更新hsf插件，修复pandora qos命令不能执行、hsf订阅服务数多的情况下可能会遇到服务地址找不到的问题；3.升级所有用到fastjson的插件到sec06安全版本。',
                        ),
                        'SupportFeatures' => 
                        array (
                          'description' => '支持的特性',
                          'type' => 'string',
                          'example' => 'tengine,fatjar,restful,eip_nodeport,dpath',
                        ),
                        'TomcatDownloadUrl' => 
                        array (
                          'description' => 'Tomcat安装程序的下载地址',
                          'type' => 'string',
                          'example' => 'http://edas.oss-cn-hangzhou.aliyuncs.com/edas-container/7.0.92/taobao-tomcat-production-7.0.92.tar.gz',
                        ),
                        'TomcatVersion' => 
                        array (
                          'description' => 'Tomcat版本号',
                          'type' => 'string',
                          'example' => '8.5.63',
                        ),
                        'PandoraDownloadUrl' => 
                        array (
                          'description' => 'Pandora下载地址',
                          'type' => 'string',
                          'example' => 'http://edas.oss-cn-hangzhou.aliyuncs.com/edas-plugins/edas.sar.V3.5.6/taobao-hsf.tgz',
                        ),
                        'PackVersion' => 
                        array (
                          'description' => '应用版本号',
                          'type' => 'string',
                          'example' => '3.5.6',
                        ),
                        'MultipleTenant' => 
                        array (
                          'description' => '是否支持多租户',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'TengineImageId' => 
                        array (
                          'description' => '容器对应的Tengine镜像ID',
                          'type' => 'string',
                          'example' => 'registry.aliyuncs.com/edas/****-*********-*****:*.*.*',
                        ),
                        'WithTengine' => 
                        array (
                          'description' => '是否支持流量管理',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'ImageId' => 
                        array (
                          'description' => '容器对应的基础镜像ID',
                          'type' => 'string',
                          'example' => 'registry.aliyuncs.com/ed**/****-*********:*.*.*',
                        ),
                        'ScriptName' => 
                        array (
                          'description' => 'Shell脚本名称',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'ScriptVersion' => 
                        array (
                          'description' => 'Shell脚本版本',
                          'type' => 'string',
                          'example' => '1.0.3',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"4FD4-*************\\",\\n  \\"BuildPackList\\": {\\n    \\"BuildPack\\": [\\n      {\\n        \\"PandoraVersion\\": \\"edas.public.sar.V3.5.6\\",\\n        \\"ConfigId\\": 57,\\n        \\"Feature\\": \\"“”\\",\\n        \\"PandoraDesc\\": \\"test\\",\\n        \\"PluginInfo\\": \\"1\\",\\n        \\"Disabled\\": false,\\n        \\"TengineDownloadUrl\\": \\"http://edas.oss-cn-hangzhou.aliyuncs.com/components/tengine/3.4.7/tengine.sh\\",\\n        \\"TomcatPath\\": \\"taobao-tomcat-production-7.0.59.3\\",\\n        \\"TomcatDesc\\": \\"1.更新config-client插件，修复多租户场景未读缓存的问题；2.更新hsf插件，修复pandora qos命令不能执行、hsf订阅服务数多的情况下可能会遇到服务地址找不到的问题；3.升级所有用到fastjson的插件到sec06安全版本。\\",\\n        \\"SupportFeatures\\": \\"tengine,fatjar,restful,eip_nodeport,dpath\\",\\n        \\"TomcatDownloadUrl\\": \\"http://edas.oss-cn-hangzhou.aliyuncs.com/edas-container/7.0.92/taobao-tomcat-production-7.0.92.tar.gz\\",\\n        \\"TomcatVersion\\": \\"8.5.63\\",\\n        \\"PandoraDownloadUrl\\": \\"http://edas.oss-cn-hangzhou.aliyuncs.com/edas-plugins/edas.sar.V3.5.6/taobao-hsf.tgz\\",\\n        \\"PackVersion\\": \\"3.5.6\\",\\n        \\"MultipleTenant\\": true,\\n        \\"TengineImageId\\": \\"registry.aliyuncs.com/edas/****-*********-*****:*.*.*\\",\\n        \\"WithTengine\\": true,\\n        \\"ImageId\\": \\"registry.aliyuncs.com/ed**/****-*********:*.*.*\\",\\n        \\"ScriptName\\": \\"default\\",\\n        \\"ScriptVersion\\": \\"1.0.3\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>4FD4-*************</RequestId>\\n<Message>success</Message>\\n<BuildPackList>\\n    <BuildPack>\\n        <TomcatDesc>1.更新config-client插件，修复多租户场景未读缓存的问题；2.更新hsf插件，修复pandora qos命令不能执行、hsf订阅服务数多的情况下可能会遇到服务地址找不到的问题；3.升级所有用到fastjson的插件到sec06安全版本。</TomcatDesc>\\n        <ScriptVersion>1.0.3</ScriptVersion>\\n        <WithTengine>true</WithTengine>\\n        <TomcatDownloadUrl>http://edas.oss-cn-hangzhou.aliyuncs.com/edas-container/7.0.92/taobao-tomcat-production-7.0.92.tar.gz</TomcatDownloadUrl>\\n        <Feature>“”</Feature>\\n        <PandoraVersion>edas.public.sar.V3.5.6</PandoraVersion>\\n        <PackVersion>3.5.6</PackVersion>\\n        <MultipleTenant>true</MultipleTenant>\\n        <PandoraDownloadUrl>http://edas.oss-cn-hangzhou.aliyuncs.com/edas-plugins/edas.sar.V3.5.6/taobao-hsf.tgz</PandoraDownloadUrl>\\n        <PandoraDesc>test</PandoraDesc>\\n        <TomcatPath>taobao-tomcat-production-7.0.59.3</TomcatPath>\\n        <ScriptName>default</ScriptName>\\n        <ImageId>registry.aliyuncs.com/ed**/****-*********:*.*.*</ImageId>\\n        <TengineDownloadUrl>http://edas.oss-cn-hangzhou.aliyuncs.com/components/tengine/3.4.7/tengine.sh</TengineDownloadUrl>\\n        <PluginInfo>1</PluginInfo>\\n        <TomcatVersion>8.5.63</TomcatVersion>\\n        <ConfigId>57</ConfigId>\\n        <Disabled>false</Disabled>\\n        <TengineImageId>registry.aliyuncs.com/edas/****-*********-*****:*.*.*</TengineImageId>\\n        <SupportFeatures>tengine,fatjar,restful,eip_nodeport,dpath</SupportFeatures>\\n    </BuildPack>\\n</BuildPackList>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取容器版本列表',
      'summary' => '调用ListBuildPack接口获取容器版本列表。',
      'requestParamsDescription' => ' 无请求参数。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
      'parameters' => 
      array (
      ),
    ),
    'InsertOrUpdateRegion' => 
    array (
      'summary' => '调用InsertOrUpdateRegion接口创建或编辑自定义命名空间。',
      'path' => '/pop/v5/user_region_def',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionTag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID：
- 自定义命名空间ID格式为：`地域ID:命名空间标示符`，例如：cn-beijing:tdy218。
- 默认命名空间ID格式为：`地域ID`，例如：cn-beijing。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-beijing:test',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间名称，长度不超过63个字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test_region',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间描述，长度不超过128个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '参数为空或ID为0时表示创建命名空间，其他情况表示编辑。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'DebugEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否允许进行远程调试：
- true：允许。
- false：不允许。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'RegistryType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '注册中心类型：
- default，EDAS共享注册中心
- exclusive_mse，MSE Nacos注册中心',
            'description' => '注册中心类型：
- default：EDAS共享注册中心。
- exclusive_mse：MSE Nacos注册中心。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
        6 => 
        array (
          'name' => 'MseInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'MSE注册中心实例ID',
            'description' => 'MSE注册中心实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_prepaid_public_cn-tl32n******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID。',
                'type' => 'string',
                'example' => '37793352-C568-4A5A-BF69-4DC853******',
              ),
              'UserDefineRegionEntity' => 
              array (
                'description' => '用户自定义命名空间。',
                'type' => 'object',
                'properties' => 
                array (
                  'BelongRegion' => 
                  array (
                    'description' => '所属地域。',
                    'type' => 'string',
                    'example' => 'cn-beijing',
                  ),
                  'RegionName' => 
                  array (
                    'description' => '命名空间名称。',
                    'type' => 'string',
                    'example' => 'test_region',
                  ),
                  'Description' => 
                  array (
                    'description' => '命名空间描述。',
                    'type' => 'string',
                    'example' => '逻辑Region',
                  ),
                  'DebugEnable' => 
                  array (
                    'description' => '是否允许进行远程调试：
- true：允许。
- false：不允许。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'UserId' => 
                  array (
                    'description' => '用户主账号ID。',
                    'type' => 'string',
                    'example' => 'edas_****_test@aliyun-****.com',
                  ),
                  'Id' => 
                  array (
                    'description' => '参数为空或ID为0时表示创建命名空间，其他情况表示编辑。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '15160',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '命名空间ID：
- 自定义命名空间ID格式为：`地域ID:命名空间标示符`，例如：cn-beijing:tdy218。
- 默认命名空间ID格式为：`地域ID`，例如：cn-beijing。',
                    'type' => 'string',
                    'example' => 'cn-beijing:test',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"37793352-C568-4A5A-BF69-4DC853******\\",\\n  \\"UserDefineRegionEntity\\": {\\n    \\"BelongRegion\\": \\"cn-beijing\\",\\n    \\"RegionName\\": \\"test_region\\",\\n    \\"Description\\": \\"逻辑Region\\",\\n    \\"DebugEnable\\": false,\\n    \\"UserId\\": \\"edas_****_test@aliyun-****.com\\",\\n    \\"Id\\": 15160,\\n    \\"RegionId\\": \\"cn-beijing:test\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>37793352-C568-4A5A-BF69-4DC8539D2E20</RequestId>\\n<UserDefineRegionEntity>\\n    <RegionName>doctest</RegionName>\\n    <UserId>edas_****_test@aliyun-****.com</UserId>\\n    <DebugEnable>false</DebugEnable>\\n    <Id>15160</Id>\\n    <RegionId>cn-beijing:doctest</RegionId>\\n    <BelongRegion>cn-beijing</BelongRegion>\\n</UserDefineRegionEntity>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '创建或编辑自定义命名空间',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SwitchAdvancedMonitoring' => 
    array (
      'path' => '/pop/v5/monitor/advancedMonitorInfo',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要查询或者修改应用高级监控功能的应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '9e224bc6-a646-4484-****-e617b7e7****',
          ),
        ),
        1 => 
        array (
          'name' => 'EnableAdvancedMonitoring',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用高级监控的开关，可选参数如下：

- true：打开。
- false：关闭。

在查询应用高级监控状态时，此参数不必填写。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'The advanced monitoring status is disabled already for application which app_id is 9e224bc6-a646-4484-ae31-e617b7e7****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '577AED12-32D8-40B6-991F-17D7A601****',
              ),
              'AdvancedMonitoringEnabled' => 
              array (
                'description' => '应用高级监控的开关状态：

- true：打开。
- false：关闭。',
                'type' => 'boolean',
                'example' => 'false',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        600 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.Errorcode.OperationFailed.CloseAdvancedMonitor.Message',
            'errorMessage' => 'Failed to disable advanced monitoring.',
          ),
          1 => 
          array (
            'errorCode' => 'Edas.Errorcode.OperationFailed.OpenAdvancedMonitor.Message',
            'errorMessage' => 'Failed to enable advanced monitoring.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The advanced monitoring status is disabled already for application which app_id is 9e224bc6-a646-4484-ae31-e617b7e7****\\",\\n  \\"RequestId\\": \\"577AED12-32D8-40B6-991F-17D7A601****\\",\\n  \\"AdvancedMonitoringEnabled\\": false\\n}","errorExample":""},{"type":"xml","example":"<AdvancedMonitoringEnabled>false</AdvancedMonitoringEnabled>\\n<Message>The advanced monitoring status is disabled already for application which app_id is 9e224bc6-a646-4484-ae31-e617b7e7****</Message>\\n<RequestId>577AED12-32D8-40B6-991F-17D7A601****</RequestId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '查询或启停高级监控',
      'summary' => '调用SwitchAdvancedMonitoring接口查询ECS和K8s集群中应用高级监控开关状态及控制接口。',
      'description' => '使用SwitchAdvancedMonitoring接口需要保证EDAS POP API Java or Python SDK为3.15.2及以上版本。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ContinuePipeline' => 
    array (
      'path' => '/pop/v5/changeorder/pipeline_batch_confirm',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PipelineId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流程ID。可通过GetChangeOrderInfo接口获取1次变更的相关批次的流程ID，请参见[GetChangeOrderInfo](~~62072~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5648dbd7-df13********************',
          ),
        ),
        1 => 
        array (
          'name' => 'Confirm',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否执行下一批发布。
- true：执行下一批发布。
- false：不执行下一批发布。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-****************',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-****************\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Code>200</Code>\\n<RequestId>D16979DC-4D42-****************</RequestId>","errorExample":""}]',
      'title' => '执行下一批发布',
      'summary' => '调用ContinuePipeline接口手动确认执行下一批发布。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AbortChangeOrder' => 
    array (
      'path' => '/pop/v5/changeorder/change_order_abort',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ChangeOrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变更流程ID，可调用GetChangeOrderInfo接口获取，详情请参见[GetChangeOrderInfo](~~62072~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '4f038ddf-b27b-****-****-88e44375****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '57F146F6-3C94-****-****-A66EF4B9*****',
              ),
              'TraceId' => 
              array (
                'description' => '调用链ID',
                'type' => 'string',
                'example' => '0b59000b15947****55688656d****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '变更流程',
                'type' => 'object',
                'properties' => 
                array (
                  'ChangeOrderId' => 
                  array (
                    'description' => '变更流程ID',
                    'type' => 'string',
                    'example' => '4f038ddf-b27b-****-****-88e44375****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"57F146F6-3C94-****-****-A66EF4B9*****\\",\\n  \\"TraceId\\": \\"0b59000b15947****55688656d****\\",\\n  \\"ErrorCode\\": \\"success\\",\\n  \\"Data\\": {\\n    \\"ChangeOrderId\\": \\"4f038ddf-b27b-****-****-88e44375****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<AbortChangeOrder>\\r\\n\\t  <Data>\\r\\n\\t\\t    <ChangeOrderId>4f038ddf-b27b-****-****-88e44375****</ChangeOrderId>\\r\\n\\t  </Data>\\r\\n\\t  <Message>success</Message>\\r\\n\\t  <TraceId>0b59000b15947****55688656d****</TraceId>\\r\\n      <RequestId>57F146F6-3C94-****-****-A66EF4B9*****</RequestId>\\r\\n\\t  <Success>true</Success>\\r\\n\\t  <ErrorCode>success</ErrorCode>\\r\\n\\t  <Code>200</Code>\\r\\n</AbortChangeOrder>","errorExample":""}]',
      'title' => '终止变更流程',
      'summary' => '调用AbortChangeOrder接口终止变更流程。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RollbackChangeOrder' => 
    array (
      'path' => '/pop/v5/oam/changeorder/rollback',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ChangeOrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变更记录ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dc5133d7-773f-4c81-****-e2103dce****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID',
                'type' => 'string',
                'example' => 'B909AB1F-3763-4963-B1CE-0BDFA192****',
              ),
              'TraceId' => 
              array (
                'description' => '调用链ID',
                'type' => 'string',
                'example' => '000000000000000000000000000000',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '变更单信息',
                'type' => 'object',
                'properties' => 
                array (
                  'ChangeOrderId' => 
                  array (
                    'description' => '变更单ID',
                    'type' => 'string',
                    'example' => '4f40e616-cdcd-4250-a018-efd4599c****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"B909AB1F-3763-4963-B1CE-0BDFA192****\\",\\n  \\"TraceId\\": \\"000000000000000000000000000000\\",\\n  \\"ErrorCode\\": \\"success\\",\\n  \\"Data\\": {\\n    \\"ChangeOrderId\\": \\"4f40e616-cdcd-4250-a018-efd4599c****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>B909AB1F-3763-4963-B1CE-0BDFA192****</RequestId>\\n<TraceId>000000000000000000000000000000</TraceId>\\n<Data>\\n    <ChangeOrderId>xxx-xxxx-xxx-xxxx</ChangeOrderId>\\n</Data>\\n<ErrorCode>success</ErrorCode>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '回滚变更单',
      'summary' => '调用RollbackChangeOrder终止应用的变更流程，并回滚应用。该接口适用于ECS集群中的应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateApplicationBaseInfo' => 
    array (
      'path' => '/pop/v5/app/update_app_info',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c627c157-560d-43ff-****-************',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用名称必须以字母开头，允许数字、字母、下划线（_）以及短划线（-）组合，最多支持36个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'hello-edas',
          ),
        ),
        2 => 
        array (
          'name' => 'Desc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述信息，最多支持256个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '测试应用',
          ),
        ),
        3 => 
        array (
          'name' => 'Owner',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用负责人，最大长度为127个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test@aliyun_xxx.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'code码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-**************',
              ),
              'Applcation' => 
              array (
                'description' => '应用列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'ExtSlbIp' => 
                  array (
                    'description' => '公网SLB实例的IP。',
                    'type' => 'string',
                    'example' => '39.97.XX.XX',
                  ),
                  'Owner' => 
                  array (
                    'description' => '应用负责人。',
                    'type' => 'string',
                    'example' => 'test@aliyun_XXX.com',
                  ),
                  'SlbPort' => 
                  array (
                    'description' => '私网SLB端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '80',
                  ),
                  'ExtSlbName' => 
                  array (
                    'description' => '公网SLB名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建时间的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1577259573911',
                  ),
                  'UserId' => 
                  array (
                    'description' => '云账号ID。',
                    'type' => 'string',
                    'example' => 'edas_com***@****.***',
                  ),
                  'Port' => 
                  array (
                    'description' => '应用所占用的端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '8080',
                  ),
                  'RunningInstanceCount' => 
                  array (
                    'description' => '正在运行的应用实例数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'SlbIp' => 
                  array (
                    'description' => '私网SLB IP。',
                    'type' => 'string',
                    'example' => '192.168.XX.XX',
                  ),
                  'Dockerize' => 
                  array (
                    'description' => '是否为Docker应用。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'Description' => 
                  array (
                    'description' => '应用描述。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'InstanceCount' => 
                  array (
                    'description' => '包含实例数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'AppId' => 
                  array (
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'c627c157-560d-43ff-****-************',
                  ),
                  'Memory' => 
                  array (
                    'description' => '配置的应用实例内存大小，单位为M。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Name' => 
                  array (
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'ClusterId' => 
                  array (
                    'description' => '集群ID。',
                    'type' => 'string',
                    'example' => 'd7730a49-629a-47bd-****-f45eb01f****',
                  ),
                  'SlbId' => 
                  array (
                    'description' => '私网SLB实例的ID。',
                    'type' => 'string',
                    'example' => 'a3d4*******',
                  ),
                  'HealthCheckUrl' => 
                  array (
                    'description' => '健康检查URL。',
                    'type' => 'string',
                    'example' => 'http://127.0.XX.XX:8080/_etc.html',
                  ),
                  'ApplicationType' => 
                  array (
                    'description' => '应用部署类型：
- War代表WAR包部署。
- FatJar代表JAR包部署。
- Image代表镜像部署。
- 空代表未部署。',
                    'type' => 'string',
                    'example' => 'FatJar',
                  ),
                  'ExtSlbId' => 
                  array (
                    'description' => '公网SLB实例的ID。',
                    'type' => 'string',
                    'example' => 'ace93*******',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '地域ID。',
                    'type' => 'string',
                    'example' => 'cn-beijing:****',
                  ),
                  'BuildPackageId' => 
                  array (
                    'description' => '容器版本ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '58',
                  ),
                  'Cpu' => 
                  array (
                    'description' => 'CPU核数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'ClusterType' => 
                  array (
                    'description' => '应用集群环境类型：
- 0：普通Docker集群。
- 1：Swarm集群。
- 2：ECS集群。
- 3：EDAS自带K8s集群。
- 4：Pandora自动注册应用集群类型。
- 5：容器服务K8s集群。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'SlbName' => 
                  array (
                    'description' => '私网SLB名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-**************\\",\\n  \\"Applcation\\": {\\n    \\"ExtSlbIp\\": \\"39.97.XX.XX\\",\\n    \\"Owner\\": \\"test@aliyun_XXX.com\\",\\n    \\"SlbPort\\": 80,\\n    \\"ExtSlbName\\": \\"test\\",\\n    \\"CreateTime\\": 1577259573911,\\n    \\"UserId\\": \\"edas_com***@****.***\\",\\n    \\"Port\\": 8080,\\n    \\"RunningInstanceCount\\": 1,\\n    \\"SlbIp\\": \\"192.168.XX.XX\\",\\n    \\"Dockerize\\": false,\\n    \\"Description\\": \\"test\\",\\n    \\"InstanceCount\\": 1,\\n    \\"AppId\\": \\"c627c157-560d-43ff-****-************\\",\\n    \\"Memory\\": 0,\\n    \\"Name\\": \\"test\\",\\n    \\"ClusterId\\": \\"d7730a49-629a-47bd-****-f45eb01f****\\",\\n    \\"SlbId\\": \\"a3d4*******\\",\\n    \\"HealthCheckUrl\\": \\"http://127.0.XX.XX:8080/_etc.html\\",\\n    \\"ApplicationType\\": \\"FatJar\\",\\n    \\"ExtSlbId\\": \\"ace93*******\\",\\n    \\"RegionId\\": \\"cn-beijing:****\\",\\n    \\"BuildPackageId\\": 58,\\n    \\"Cpu\\": 0,\\n    \\"ClusterType\\": 2,\\n    \\"SlbName\\": \\"test\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Applcation>\\n    <SlbPort>0</SlbPort>\\n    <BuildPackageId>0</BuildPackageId>\\n    <AppId>c627c157-560d-43ff-****-************</AppId>\\n    <Memory>0</Memory>\\n    <Cpu>0</Cpu>\\n    <Dockerize>false</Dockerize>\\n    <ApplicationType>FatJar</ApplicationType>\\n    <Owner>edas_com***_****@******-*****.***</Owner>\\n    <Description>Ol432236</Description>\\n    <RunningInstanceCount>0</RunningInstanceCount>\\n    <UserId>edas_com***_****@******-*****.***</UserId>\\n    <InstanceCount>1</InstanceCount>\\n    <Name>testpopapi1120</Name>\\n    <Port>8080</Port>\\n    <ClusterId>0d247b93-8d62-4e34-****-************</ClusterId>\\n    <RegionId>cn-shenzhen:****</RegionId>\\n    <CreateTime>1574249022930</CreateTime>\\n    <ClusterType>2</ClusterType>\\n</Applcation>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '修改应用名称',
      'summary' => '描述信息、Owner信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddLogPath' => 
    array (
      'path' => '/pop/v5/log/popListLogDirs',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '应用ID，可通过调用ListApplication接口获取，详情请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-4f92-4413**********',
          ),
        ),
        1 => 
        array (
          'name' => 'Path',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '待收藏的应用日志的绝对路径。应用日志路径必须以`/`开头和结尾，并且路径中必须包含`/log`或者`/logs`。EDAS默认目录如下：
- /home/admin/edas-container/logs/
- /home/admin/taobao-tomcat-7.0.59/logs/ 
- /home/admin/taobao-tomcat-production-7.0.59.3/logs/
- /home/admin/taobao-tomcat-production-7.0.70/logs/
- /home/admin/edas-agent/logs/
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '/temp/log/',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '3616cdca-4f92-4413**********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"3616cdca-4f92-4413**********\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>3616cdca-4f92-4413**********</RequestId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '添加日志目录',
      'summary' => '适用于在阿里云和非阿里云ECS集群中部署的应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteApplication' => 
    array (
      'path' => '/pop/v5/changeorder/co_delete_app',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。获取应用ID，请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-*********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。',
                'type' => 'string',
                'example' => '0b8e3c0b-5818-430*************',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '34DFE9FDV****************',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"ChangeOrderId\\": \\"0b8e3c0b-5818-430*************\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"34DFE9FDV****************\\"\\n}","type":"json"}]',
      'title' => '删除应用实例',
      'summary' => '调用DeleteApplication接口删除应用实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteLogPath' => 
    array (
      'path' => '/pop/v5/log/popListLogDirs',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可通过调用ListApplication接口获取，详情请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-4f92-4413**********',
          ),
        ),
        1 => 
        array (
          'name' => 'Path',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待取消收藏的应用日志的绝对路径。应用日志路径必须以`/`开头和结尾，并且路径中必须包含`/log`或者`/logs`。EDAS默认目录如下：
- /home/admin/edas-container/logs/
- /home/admin/taobao-tomcat-7.0.59/logs/
- /home/admin/taobao-tomcat-production-7.0.59.3/logs/
- /home/admin/taobao-tomcat-production-7.0.70/logs/
- /home/admin/edas-agent/logs/
',
            'type' => 'string',
            'required' => false,
            'example' => '/temp/log/',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '3616cdca-4f92-4413**********',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"3616cdca-4f92-4413**********\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>3616cdca-4f92-4413**********</RequestId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '删除日志目录',
      'summary' => '适用于在阿里云和非阿里云ECS集群中部署的应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDeployGroup' => 
    array (
      'path' => '/pop/v5/deploy_group',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-4f92-4413-b31*************',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'Code码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '数据',
                'type' => 'string',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '4D9F-DR94-FD****************',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": \\"1\\",\\n  \\"RequestId\\": \\"4D9F-DR94-FD****************\\"\\n}","errorExample":""},{"type":"xml","example":"<Data>1</Data>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '删除分组',
      'summary' => '调用DeleteDeployGroup来删除分组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateHookConfiguration' => 
    array (
      'path' => '/pop/app/config_app_hook_json',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'd498****-1dd8ec229862',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID',
            'type' => 'string',
            'required' => false,
            'example' => 'd498****-1dd8ec229862',
          ),
        ),
        2 => 
        array (
          'name' => 'Hooks',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '挂载脚本配置，为一段JSON格式文本，如：
`[{"ignoreFail":false,"name":"postprepareInstanceEnvironmentOnScaleOut","script":"ls"},{"ignoreFail":true,"name":"postdeleteInstanceDataOnScaleIn","script":""},{"ignoreFail":true,"name":"prestartInstance","script":""},{"ignoreFail":true,"name":"poststartInstance","script":""},{"ignoreFail":true,"name":"prestopInstance","script":""},{"ignoreFail":true,"name":"poststopInstance","script":""}]`',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[{"ignoreFail":false,"name":"postprepareInstanceEnvironmentOnScaleOut","script":"ls"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'd498****-1dd8ec229862',
              ),
              'HooksConfiguration' => 
              array (
                'description' => '挂载脚本配置',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'IgnoreFail' => 
                    array (
                      'description' => '是否忽略失败，取值如下：

- **true**：忽略失败

- **false**：不忽略失败',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'Name' => 
                    array (
                      'description' => '挂载脚本名',
                      'type' => 'string',
                      'example' => 'postprepareInstanceEnvironmentOnScaleOut',
                    ),
                    'Script' => 
                    array (
                      'description' => '挂载脚本内容',
                      'type' => 'string',
                      'example' => 'ls',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"d498****-1dd8ec229862\\",\\n  \\"HooksConfiguration\\": [\\n    {\\n      \\"IgnoreFail\\": true,\\n      \\"Name\\": \\"postprepareInstanceEnvironmentOnScaleOut\\",\\n      \\"Script\\": \\"ls\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<HooksConfiguration>\\n    <Script>ls</Script>\\n    <IgnoreFail>true</IgnoreFail>\\n    <Name>postprepareInstanceEnvironmentOnScaleOut</Name>\\n</HooksConfiguration>\\n<Message>success</Message>\\n<RequestId>d498****-1dd8ec229862</RequestId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '为应用或分组设置挂载脚本',
      'summary' => '调用UpdateHookConfiguration来为应用或分组设置挂载脚本。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyScalingRule' => 
    array (
      'path' => '/pop/v5/app/scaling_rules',
      'methods' => 
      array (
        0 => 'post',
        1 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '74ee****-db65-4322-a1f6-bcb60e5b****',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署分组ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8123db90-880f-486f-****-************',
          ),
        ),
        2 => 
        array (
          'name' => 'InCondition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发条件。

- OR：任一条件
- AND：所有条件',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '"OR"',
            'enum' => 
            array (
              0 => 'OR',
              1 => 'AND',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'InEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否包含缩容规则。

- true：包含
- false：不包含',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'InCpu',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发指标：CPU使用率。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '50',
          ),
        ),
        5 => 
        array (
          'name' => 'InDuration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '持续时间，单位为分钟。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '50',
          ),
        ),
        6 => 
        array (
          'name' => 'InInstanceNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组缩容时需要保留的最小实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '3',
          ),
        ),
        7 => 
        array (
          'name' => 'InLoad',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发指标：系统负载。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '50',
          ),
        ),
        8 => 
        array (
          'name' => 'InRT',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发指标：服务时延。单位为毫秒，最小值为0。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '50',
          ),
        ),
        9 => 
        array (
          'name' => 'InStep',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每次缩容的实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
          ),
        ),
        10 => 
        array (
          'name' => 'OutCondition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发条件。

- OR：任一条件
- AND：所有条件',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '"OR"',
            'enum' => 
            array (
              0 => 'OR',
              1 => 'AND',
            ),
          ),
        ),
        11 => 
        array (
          'name' => 'OutCPU',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发指标：CPU使用率。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '50',
          ),
        ),
        12 => 
        array (
          'name' => 'OutDuration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '持续时间，单位为分钟。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '50',
          ),
        ),
        13 => 
        array (
          'name' => 'OutEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否包含扩容规则。',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'true',
          ),
        ),
        14 => 
        array (
          'name' => 'OutInstanceNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组扩容时的最大实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '10',
          ),
        ),
        15 => 
        array (
          'name' => 'OutLoad',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发指标：系统负载。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '50',
          ),
        ),
        16 => 
        array (
          'name' => 'OutRT',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发指标：服务时延。单位为毫秒，最小值为0。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '0',
          ),
        ),
        17 => 
        array (
          'name' => 'OutStep',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每次扩容的实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '0',
          ),
        ),
        18 => 
        array (
          'name' => 'ResourceFrom',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩容实例来源。
- NEW：弹性资源。
- AVAILABLE：已有资源。已有资源优先为AVAILABLE_FIRST。

NEW或AVAILABLE_FIRST需指定弹性扩容参数，弹性扩容包括两种模式：启动模版和基于现有实例规则。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '"AVAILABLE"',
            'enum' => 
            array (
              0 => 'AVAILABLE',
              1 => 'NEW',
              2 => 'AVAILABLE_FIRST',
            ),
          ),
        ),
        19 => 
        array (
          'name' => 'MultiAzPolicy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性扩容的多可用区扩缩容策略。包含两种策略：
- PRIORITY：优先级策略。
- BALANCE：均衡分布策略。',
            'type' => 'string',
            'required' => false,
            'example' => '"PRIORITY"',
            'enum' => 
            array (
              0 => 'PRIORITY',
              1 => 'BALANCE',
            ),
          ),
        ),
        20 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性扩容的“启动模版”或“基于现有实例规则”所关联的VPC ID。',
            'type' => 'string',
            'required' => false,
            'example' => '"vpc-bp1j55oz3bg*****"',
          ),
        ),
        21 => 
        array (
          'name' => 'VSwitchIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC相关的vswitch ID列表，多个以半角逗号（,）分割。',
            'type' => 'string',
            'required' => false,
            'example' => '"vsw-bp1ldxs3d4fd*****"',
          ),
        ),
        22 => 
        array (
          'name' => 'ScalingPolicy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性缩容的回收模式。
- release：释放模式
- recycle：停机回收模式。',
            'type' => 'string',
            'required' => false,
            'example' => '"release"',
            'enum' => 
            array (
              0 => 'release',
              1 => 'recycle',
            ),
          ),
        ),
        23 => 
        array (
          'name' => 'TemplateInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性扩容“基于现有实例规则”的实例ID。OutEnable为true（真）才有效。',
            'type' => 'string',
            'required' => false,
            'example' => '"1"',
          ),
        ),
        24 => 
        array (
          'name' => 'TemplateInstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性扩容“基于现有实例规则”的实例名称。TemplateInstanceId存在才有效。',
            'type' => 'string',
            'required' => false,
            'example' => '"tpl-tdy218"',
          ),
        ),
        25 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例登录密码。当弹性扩容使用“基于现有实例规则”才有效。',
            'type' => 'string',
            'required' => false,
            'example' => '"Pwd*****"',
          ),
        ),
        26 => 
        array (
          'name' => 'KeyPairName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例登录密钥名称。当弹性扩容使用“基于现有实例规则”才有效。',
            'type' => 'string',
            'required' => false,
            'example' => '"tdy218"',
          ),
        ),
        27 => 
        array (
          'name' => 'AcceptEULA',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '若使用弹性扩容，则必须设置为true。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        28 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性扩容“启动模版”ID。OutEnable为true（真）才有效，优先级高于TemplateInstanceId。',
            'type' => 'string',
            'required' => false,
            'example' => '"lt-wz9hkhn8wp*****"',
          ),
        ),
        29 => 
        array (
          'name' => 'TemplateVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性扩容“启动模版”版本。OutEnable为true（真）才有效。若使用默认模版，则设置为`-1`，否则设置为相应的版本号。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'Code码 ',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'CB36E997-FE54-476C-8C0D-********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"CB36E997-FE54-476C-8C0D-********\\"\\n}","errorExample":""},{"type":"xml","example":"<Code>200</Code>\\n<Message>success</Message>","errorExample":""}]',
      'title' => '设置扩缩容规则',
      'summary' => '调用ModifyScalingRule接口修改弹性扩、缩容规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StartApplication' => 
    array (
      'path' => '/pop/v5/changeorder/co_start',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可通过[ListApplication](~~149390~~)获取。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-4f92-4413**********',
          ),
        ),
        1 => 
        array (
          'name' => 'EccInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用下需要重置机器的eccid，多个用“,”分开，可通过调用[QueryApplicationStatus](~~149394~~)接口获取eccid。',
            'type' => 'string',
            'required' => false,
            'example' => '""',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID，调用[GetChangeOrderInfo](~~62072~~)接口获取这次启动的执行进展。',
                'type' => 'string',
                'example' => '426d3328-11a***************',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-**************',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"ChangeOrderId\\": \\"426d3328-11a***************\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-**************\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<ChangeOrderId>426d3328-11a***************</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '启动应用',
      'summary' => '调用StartApplication来启动应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StopApplication' => 
    array (
      'path' => '/pop/v5/changeorder/co_stop',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。可以通过调用ListApplication接口获取，具体操作，请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c627c157-560d*******',
          ),
        ),
        1 => 
        array (
          'name' => 'EccInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用下需要停止的ECS实例的EccId。可以通过调用QueryApplicationStatus接口获取EccId，具体操作，请参见[QueryApplicationStatus](~~149394~~)。

- 如果包含多个ECS实例，用半角逗号（,）分开。
- 不设置该参数，表示停止该应用下所有实例。',
            'type' => 'string',
            'required' => false,
            'example' => '74ee9166-****1f6-bcb60e5b****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。可以通过调用GetChangeOrderInfo接口获取变更流程的详细信息，具体操作，请参见[GetChangeOrderInfo](~~62072~~)。',
                'type' => 'string',
                'example' => 'a9557bac-ddd7-*********************',
              ),
              'Code' => 
              array (
                'description' => 'Code码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-****************',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"a9557bac-ddd7-*********************\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-****************\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<ChangeOrderId>a9557bac-ddd7-*********************</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '停止应用',
      'summary' => '停止应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateContainer' => 
    array (
      'path' => '/pop/v5/changeorder/co_update_container',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'e83acea6-****-47e1-96ae-c0e953772cdc',
          ),
        ),
        1 => 
        array (
          'name' => 'BuildPackId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EDAS-Container的构建包ID。可以在容器版本说明文档的表格中获取对应版本的构建包ID，更多信息，请参见[容器版本说明](~~92614~~)。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '59',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。',
                'type' => 'string',
                'example' => 'eb1b9862-****-476f-9e78-d6aa0842835a',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'a5281053-08e4-47a5-b2ab-5c0323******',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"ChangeOrderId\\": \\"eb1b9862-****-476f-9e78-d6aa0842835a\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"a5281053-08e4-47a5-b2ab-5c0323******\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>a5281053-08e4-47a5-b2ab-5c0323de7b5a</RequestId>\\n<Message>success</Message>\\n<ChangeOrderId>eb1b9862-****-476f-9e78-d6aa0842835a</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '更新HSF应用的EDAS-Container版本',
      'summary' => '调用UpdateContainer接口更新HSF应用的EDAS-Container版本。EDAS-Container包含Ali-Tomcat和Pandora。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateContainerConfiguration' => 
    array (
      'path' => '/pop/v5/app/container_config',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'c627c157-560d-43ff-************',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID。
- 如果ID不为空，则设置指定应用分组的Tomcat。
- 如果ID为“”，则设置应用的Tomcat。',
            'type' => 'string',
            'required' => false,
            'example' => '8123db90-880f-**************',
          ),
        ),
        2 => 
        array (
          'name' => 'ContextPath',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Tomcat的ContextPath，支持空字符串、null-war包名称、ROOT-根目录或其他非空自定义字符串。
支持英文字母、数字、 短划线（-）和下划线（_）。
- 应用分组不设置该参数，则使用应用配置。
- 应用不设置该参数，则使用根目录`/`。',
            'type' => 'string',
            'required' => false,
            'example' => '/',
          ),
        ),
        3 => 
        array (
          'name' => 'HttpPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用端口。
- 应用分组不设置该参数，则使用应用配置。
- 应用不设置该参数，则使用默认值8080。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '8080',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxThreads',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最大线程数。
-  应用分组不设置该参数，则使用应用配置。
-  应用不设置该参数，使用默认值250。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'URIEncoding',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'URI编码方式，支持ISO-8859-1、GBK、GB2312和UTF-8。
- 应用分组不设置该参数，则使用应用配置。
- 应用不设置该参数，则使用Tomcat默认值。',
            'type' => 'string',
            'required' => false,
            'example' => 'ISO-8859-1',
          ),
        ),
        6 => 
        array (
          'name' => 'UseBodyEncoding',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'useBodyEncodingForURI是否启用。
- 应用分组不设置该参数，则使用应用配置。
- 应用不设置该参数，则使用默认值false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-***************',
              ),
              'ContainerConfiguration' => 
              array (
                'description' => '容器配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'HttpPort' => 
                  array (
                    'description' => '应用端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '8080',
                  ),
                  'ContextPath' => 
                  array (
                    'description' => 'Tomcat的ContextPath。',
                    'type' => 'string',
                    'example' => '/',
                  ),
                  'UseBodyEncoding' => 
                  array (
                    'description' => 'useBodyEncodingForURI是否启用。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'MaxThreads' => 
                  array (
                    'description' => '最大线程数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'URIEncoding' => 
                  array (
                    'description' => 'URI编码方式，支持ISO-8859-1、GBK、GB2312和UTF-8。',
                    'type' => 'string',
                    'example' => 'ISO-8859-1',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-***************\\",\\n  \\"ContainerConfiguration\\": {\\n    \\"HttpPort\\": 8080,\\n    \\"ContextPath\\": \\"/\\",\\n    \\"UseBodyEncoding\\": true,\\n    \\"MaxThreads\\": 20,\\n    \\"URIEncoding\\": \\"ISO-8859-1\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<ContainerConfiguration>\\n    <UseBodyEncoding>true</UseBodyEncoding>\\n    <MaxThreads>20</MaxThreads>\\n    <HttpPort>8080</HttpPort>\\n    <URIEncoding>ISO-8859-1</URIEncoding>\\n</ContainerConfiguration>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '设置应用下的分组设置',
      'summary' => '调用UpdateContainerConfiguration接口设置ECS集群中应用或应用分组的Tomcat。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ChangeDeployGroup' => 
    array (
      'path' => '/pop/v5/changeorder/co_change_group',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-4f92-**********',
          ),
        ),
        1 => 
        array (
          'name' => 'EccInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要切换应用实例分组的ECS实例的ECC ID。可以调用ListApplicationEcc来查询应用的ECC ID，具体操作，请参见[ListApplicationEcc](~~199277~~)。

> 一次仅支持切换一个ECS实例到其他应用实例分组。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '0cf49a6c-95a8-4aa8******',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组名称，例如：group_a、group_b。默认分组的GroupName为`_DEFAULT_GROUP`。长度不操作64个字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'ForceStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECC的部署包版本和应用分组的部署包版本不一致时是否强制更换。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。',
                'type' => 'string',
                'example' => '435f-regfr4********************',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F9E4-FDS4-****************',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"ChangeOrderId\\": \\"435f-regfr4********************\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"F9E4-FDS4-****************\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>F9E4-FDS4-****************</RequestId>\\n<Message>success</Message>\\n<ChangeOrderId>435f-regfr4********************</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '更换分组',
      'summary' => '调用ChangeDeployGroup更换ECS集群应用中的ECS实例的分组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateJvmConfiguration' => 
    array (
      'path' => '/pop/v5/app/app_jvm_config',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID',
            'type' => 'string',
            'required' => true,
            'example' => 'c627c157-560d-*************',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID，您可调用[ListDeployGroup](~~62077~~)来查询。

> - 如果ID不为空，设置分组信息。
- ID为空，则设置应用的配置信息。
',
            'type' => 'string',
            'required' => false,
            'example' => '0afc726e-077e-4357-98b2-db9f7145****',
          ),
        ),
        2 => 
        array (
          'name' => 'Options',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义参数：

> - 分组配置不设置该参数，使用应用配置。
- 应用配置不设置该参数，使用默认值。',
            'type' => 'string',
            'required' => false,
            'example' => '-Dproperty=value',
          ),
        ),
        3 => 
        array (
          'name' => 'MinHeapSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '初始化堆内存大小，单位MB：

> -  分组配置不设置该参数，使用应用配置。
- 应用配置不设置该参数，使用默认值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '500',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxPermSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '持久代内存大小，单位MB：
> -  分组配置不设置该参数，使用应用配置。
- 应用配置不设置该参数，使用默认值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1000',
          ),
        ),
        5 => 
        array (
          'name' => 'MaxHeapSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最大堆内存大小，单位MB：
> -  分组配置不设置该参数，使用应用配置。
- 应用配置不设置该参数，使用默认值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '500',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'D16979DC-4D42-********************',
              ),
              'JvmConfiguration' => 
              array (
                'description' => 'JVM参数',
                'type' => 'object',
                'properties' => 
                array (
                  'MaxPermSize' => 
                  array (
                    'description' => '持久代内存大小，单位MB。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1000',
                  ),
                  'Options' => 
                  array (
                    'description' => '可选参数',
                    'type' => 'string',
                    'example' => '”“',
                  ),
                  'MaxHeapSize' => 
                  array (
                    'description' => '最大堆内存大小，单位MB。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '500',
                  ),
                  'MinHeapSize' => 
                  array (
                    'description' => '初始化堆内存大小，单位MB。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '500',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-********************\\",\\n  \\"JvmConfiguration\\": {\\n    \\"MaxPermSize\\": 1000,\\n    \\"Options\\": \\"”“\\",\\n    \\"MaxHeapSize\\": 500,\\n    \\"MinHeapSize\\": 500\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<JvmConfiguration>\\n    <MaxPermSize>1000</MaxPermSize>\\n    <MaxHeapSize>500</MaxHeapSize>\\n    <MinHeapSize>500</MinHeapSize>\\n    <Options/>\\n</JvmConfiguration>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '来配置应用分组内的JVM设置',
      'summary' => '调用UpdateJvmConfiguration来配置应用或应用分组的JVM。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetJvmConfiguration' => 
    array (
      'path' => '/pop/v5/app/app_jvm_config',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-4f92-4***************',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。
- 如果ID不为空，则获取应用分组的JVM。
- 如果ID为“”，则获取应用的JVM。',
            'type' => 'string',
            'required' => false,
            'example' => '8123db90-880f-48**************',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3F43-F34V-0VCD***********',
              ),
              'JvmConfiguration' => 
              array (
                'description' => '应用或应用分组的JVM配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'MaxPermSize' => 
                  array (
                    'description' => '持久代内存大小，单位为M。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1000',
                  ),
                  'MaxHeapSize' => 
                  array (
                    'description' => '最大堆内存大小，单位为M。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1000',
                  ),
                  'Options' => 
                  array (
                    'description' => '自定义参数。',
                    'type' => 'string',
                    'example' => '-XX:+UseConcMarkSweepGC -XX:-UseParNewGC',
                  ),
                  'MinHeapSize' => 
                  array (
                    'description' => '初始化堆内存大小，单位为M。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '500',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"3F43-F34V-0VCD***********\\",\\n  \\"JvmConfiguration\\": {\\n    \\"MaxPermSize\\": 1000,\\n    \\"MaxHeapSize\\": 1000,\\n    \\"Options\\": \\"-XX:+UseConcMarkSweepGC -XX:-UseParNewGC\\",\\n    \\"MinHeapSize\\": 500\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<JvmConfiguration>\\n    <MaxHeapSize>1000</MaxHeapSize>\\n    <MinHeapSize>500</MinHeapSize>\\n    <Options> -XX:+UseConcMarkSweepGC -XX:-UseParNewGC</Options>\\n</JvmConfiguration>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取应用或分组的 JVM 设置',
      'summary' => '调用GetJvmConfiguration接口获取应用或应用分组的JVM设置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetApplication' => 
    array (
      'path' => '/pop/v5/app/app_info',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '29f0******************',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'code码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F8DFGED-K98***************',
              ),
              'Application' => 
              array (
                'description' => '应用信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'ExtSlbIp' => 
                  array (
                    'description' => '应用绑定的公网SLB的IP。',
                    'type' => 'string',
                    'example' => '47.114.xxx.xx',
                  ),
                  'Owner' => 
                  array (
                    'description' => '应用创建者。',
                    'type' => 'string',
                    'example' => 'ouou@117274586608****',
                  ),
                  'SlbPort' => 
                  array (
                    'description' => '应用绑定的私网SLB的端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '80',
                  ),
                  'NameSpace' => 
                  array (
                    'description' => '应用所属的命名空间。',
                    'type' => 'string',
                    'example' => 'doc-test',
                  ),
                  'ExtSlbName' => 
                  array (
                    'description' => '应用绑定的公网SLB的名称。',
                    'type' => 'string',
                    'example' => 'aa8eee383db084f42aebc4d9f52c****',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '应用创建时间的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1610550324226',
                  ),
                  'UserId' => 
                  array (
                    'description' => '云账号ID。',
                    'type' => 'string',
                    'example' => 'test@dd******',
                  ),
                  'Port' => 
                  array (
                    'description' => '应用的服务端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '8080',
                  ),
                  'RunningInstanceCount' => 
                  array (
                    'description' => '运行的应用实例数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'SlbIp' => 
                  array (
                    'description' => '应用绑定的私网SLB的IP。',
                    'type' => 'string',
                    'example' => '192.***.***.***',
                  ),
                  'Dockerize' => 
                  array (
                    'description' => '是否为Docker应用：
- false：非Docker应用。
- true：Docker应用。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'Description' => 
                  array (
                    'description' => '应用描述。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'InstanceCount' => 
                  array (
                    'description' => '应用包含的实例数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'AppId' => 
                  array (
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'cfac****-847e-4325-ad56-b5c2bc54****',
                  ),
                  'SlbInfo' => 
                  array (
                    'description' => '应用绑定的私网SLB的信息。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Memory' => 
                  array (
                    'description' => '应用实例内存配置大小，单位为MB。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Name' => 
                  array (
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'ClusterId' => 
                  array (
                    'description' => '应用部署的ECS集群ID。',
                    'type' => 'string',
                    'example' => '5ffc5895-****-b03a-c223c6c3****',
                  ),
                  'SlbId' => 
                  array (
                    'description' => '应用绑定的私网SLB的ID。',
                    'type' => 'string',
                    'example' => 'lb-bp****ck3s3b9xs6x****',
                  ),
                  'HealthCheckUrl' => 
                  array (
                    'description' => '应用的健康检查URL',
                    'type' => 'string',
                    'example' => 'http://127.0.0.1:8080/xyz.html',
                  ),
                  'ApplicationType' => 
                  array (
                    'description' => '应用部署类型：
- War：WAR包部署。
- FatJar：JAR包部署。
- 空：未部署。',
                    'type' => 'string',
                    'example' => 'FatJar',
                  ),
                  'ExtSlbId' => 
                  array (
                    'description' => '应用绑定的公网SLB的ID。',
                    'type' => 'string',
                    'example' => 'lb-bp1vceck3s3b9xs6x****',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '应用所属地域的ID。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'BuildPackageId' => 
                  array (
                    'description' => '容器版本ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '59',
                  ),
                  'Email' => 
                  array (
                    'description' => '电子邮箱地址。',
                    'type' => 'string',
                    'example' => '****@***.com',
                  ),
                  'Cpu' => 
                  array (
                    'description' => 'CPU核数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ClusterType' => 
                  array (
                    'description' => '应用集群环境类型：
- 0：普通Docker集群。
- 1：Swarm 集群。
- 2：ECS集群。
- 3：Kubernetes集群。
- 4：Pandora自动注册应用集群。',
                    'type' => 'string',
                    'example' => '2',
                  ),
                  'SlbName' => 
                  array (
                    'description' => '应用绑定的私网SLB的名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'EnableUrlCheck' => 
                  array (
                    'description' => '是否开启了URL健康检查：
- true：启用。
- false：不启用。

若启用，则在应用启动过程中，EDAS将尝试探测指定的URL，如果访问正常，则认为应用已经启动。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'EnablePortCheck' => 
                  array (
                    'description' => '是否开启了端口健康检查：
- true：启用。
- false：不启用。

若启用，在应用启动过程中，EDAS将检查端口是否存在，若存在，则认为应用已经启动。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'AppPhase' => 
                  array (
                    'description' => 'K8s应用当前所属状态，用于判断应用是否处于稳定状态，处于不稳定状态时，禁止相关的配置操作：

* ready：应用处于就绪状态，可以进行应用变更。
* progressing：应用变更中。
* pending：应用变更被阻塞。
* failed：应用变更失败。

其中ready为稳定状态，其它状态为不稳定状态。',
                    'type' => 'string',
                    'example' => 'ready',
                  ),
                  'HaveManageAccess' => 
                  array (
                    'description' => '当前用户是否有应用的管理权限(RAM鉴权模式)。',
                    'type' => 'string',
                    'example' => 'true',
                  ),
                  'WorkloadType' => 
                  array (
                    'description' => '创建应用时Workload的类型，目前支持Deployment和StatefulSet类型。对于ECS应用不生效。',
                    'type' => 'string',
                    'example' => 'StatefulSet',
                  ),
                  'ResourceGroupId' => 
                  array (
                    'description' => '资源组ID。',
                    'type' => 'string',
                    'example' => 'rg-aekz****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"F8DFGED-K98***************\\",\\n  \\"Application\\": {\\n    \\"ExtSlbIp\\": \\"47.114.xxx.xx\\",\\n    \\"Owner\\": \\"ouou@117274586608****\\",\\n    \\"SlbPort\\": 80,\\n    \\"NameSpace\\": \\"doc-test\\",\\n    \\"ExtSlbName\\": \\"aa8eee383db084f42aebc4d9f52c****\\",\\n    \\"CreateTime\\": 1610550324226,\\n    \\"UserId\\": \\"test@dd******\\",\\n    \\"Port\\": 8080,\\n    \\"RunningInstanceCount\\": 1,\\n    \\"SlbIp\\": \\"192.***.***.***\\",\\n    \\"Dockerize\\": false,\\n    \\"Description\\": \\"test\\",\\n    \\"InstanceCount\\": 1,\\n    \\"AppId\\": \\"cfac****-847e-4325-ad56-b5c2bc54****\\",\\n    \\"SlbInfo\\": \\"test\\",\\n    \\"Memory\\": 0,\\n    \\"Name\\": \\"test\\",\\n    \\"ClusterId\\": \\"5ffc5895-****-b03a-c223c6c3****\\",\\n    \\"SlbId\\": \\"lb-bp****ck3s3b9xs6x****\\",\\n    \\"HealthCheckUrl\\": \\"http://127.0.0.1:8080/xyz.html\\",\\n    \\"ApplicationType\\": \\"FatJar\\",\\n    \\"ExtSlbId\\": \\"lb-bp1vceck3s3b9xs6x****\\",\\n    \\"RegionId\\": \\"cn-hangzhou\\",\\n    \\"BuildPackageId\\": 59,\\n    \\"Email\\": \\"****@***.com\\",\\n    \\"Cpu\\": 1,\\n    \\"ClusterType\\": \\"2\\",\\n    \\"SlbName\\": \\"test\\",\\n    \\"EnableUrlCheck\\": false,\\n    \\"EnablePortCheck\\": false,\\n    \\"AppPhase\\": \\"ready\\",\\n    \\"HaveManageAccess\\": \\"true\\",\\n    \\"WorkloadType\\": \\"StatefulSet\\",\\n    \\"ResourceGroupId\\": \\"rg-aekz****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>F8DFGED-K98***************</RequestId>\\n<Message>success</Message>\\n<Code>200</Code>\\n<Application>\\n    <SlbId>lb-bp****ck3s3b9xs6x****</SlbId>\\n    <Owner>ouou@117274586608****</Owner>\\n    <Email>xxxx@gmail.com</Email>\\n    <Description>test</Description>\\n    <HealthCheckUrl>http://127.0.0.1:8080/xyz.html</HealthCheckUrl>\\n    <Memory>0</Memory>\\n    <Port>8080</Port>\\n    <NameSpace>doc-test</NameSpace>\\n    <Cpu>1</Cpu>\\n    <SlbName>test</SlbName>\\n    <Name>test</Name>\\n    <SlbPort>80</SlbPort>\\n    <SlbIp>192.168.0.100</SlbIp>\\n    <BuildPackageId>59</BuildPackageId>\\n    <Dockerize>false</Dockerize>\\n    <ClusterId>5ffc5895-****-b03a-c223c6c3****</ClusterId>\\n    <CreateTime>1610550324226</CreateTime>\\n    <ClusterType>2</ClusterType>\\n    <SlbInfo>test</SlbInfo>\\n    <ExtSlbId>lb-bp1vceck3s3b9xs6x****</ExtSlbId>\\n    <ApplicationType>FatJar</ApplicationType>\\n    <ExtSlbName>aa8eee383db084f42aebc4d9f52c****</ExtSlbName>\\n    <InstanceCount>1</InstanceCount>\\n    <AppId>cfac****-847e-4325-ad56-b5c2bc54****</AppId>\\n    <UserId>test@dd******</UserId>\\n    <RegionId>cn-hangzhou</RegionId>\\n    <ExtSlbIp>47.114.xxx.xx</ExtSlbIp>\\n    <RunningInstanceCount>1</RunningInstanceCount>\\n</Application>","errorExample":""}]',
      'title' => '获取应用信息',
      'summary' => '获取ECS集群中指定应用的信息。 。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => '
',
      'extraInfo' => ' ',
    ),
    'ListComponents' => 
    array (
      'path' => '/pop/v5/resource/components',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'ComponentList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Component' => 
                  array (
                    'description' => '组件列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '组件类型：
- JDK
- TOMCAT
- TENGINE',
                          'type' => 'string',
                          'example' => 'JDK',
                        ),
                        'ComponentKey' => 
                        array (
                          'description' => '组件Key。',
                          'type' => 'string',
                          'example' => 'JDK 7',
                        ),
                        'Version' => 
                        array (
                          'description' => '组件版本。',
                          'type' => 'string',
                          'example' => 'oraclejdk7',
                        ),
                        'Expired' => 
                        array (
                          'description' => '是否过期：
- false：未过期
- true：已过期',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'ComponentId' => 
                        array (
                          'description' => '组件ID。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'Desc' => 
                        array (
                          'description' => '组件描述。',
                          'type' => 'string',
                          'example' => 'JDK 7',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"ComponentList\\": {\\n    \\"Component\\": [\\n      {\\n        \\"Type\\": \\"JDK\\",\\n        \\"ComponentKey\\": \\"JDK 7\\",\\n        \\"Version\\": \\"oraclejdk7\\",\\n        \\"Expired\\": false,\\n        \\"ComponentId\\": \\"1\\",\\n        \\"Desc\\": \\"JDK 7\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<ComponentList>\\n    <Component>\\n        <Desc>JDK 7</Desc>\\n        <Type>JDK</Type>\\n        <Version>oraclejdk7</Version>\\n        <ComponentKey>JDK 7</ComponentKey>\\n        <Expired>false</Expired>\\n        <ComponentId>1</ComponentId>\\n    </Component>\\n</ComponentList>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '查询组件列表',
      'summary' => '调用ListComponents接口查询组件列表，本API适用于ECS集群中的应用。',
      'requestParamsDescription' => '无请求参数。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
      'parameters' => 
      array (
      ),
    ),
    'QueryApplicationStatus' => 
    array (
      'path' => '/pop/v5/app/app_status',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-4f92-441**************',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息 。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-********',
              ),
              'AppInfo' => 
              array (
                'description' => '应用信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'EcuList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Ecu' => 
                      array (
                        'description' => 'ECU信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => 'ECU信息对象。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'VpcId' => 
                            array (
                              'description' => 'VPC网络ID。',
                              'type' => 'string',
                              'example' => 'vpc-wz9b246zg************',
                            ),
                            'UpdateTime' => 
                            array (
                              'description' => '更新时间的时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1573635952012',
                            ),
                            'IpAddr' => 
                            array (
                              'description' => 'ECU的内网IP。',
                              'type' => 'string',
                              'example' => '172.16.*.**',
                            ),
                            'AvailableCpu' => 
                            array (
                              'description' => '可用CPU。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '0',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => '创建时间的时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1573626207270',
                            ),
                            'UserId' => 
                            array (
                              'description' => '关联用户ID。',
                              'type' => 'string',
                              'example' => 'edas_com***_****@******-*****.***',
                            ),
                            'InstanceId' => 
                            array (
                              'description' => '实例ID。',
                              'type' => 'string',
                              'example' => 'i-wz9fp1ljg***********',
                            ),
                            'RegionId' => 
                            array (
                              'description' => '所在RegionID。',
                              'type' => 'string',
                              'example' => 'cn-shen****-*',
                            ),
                            'EcuId' => 
                            array (
                              'description' => '这台ECU的唯一标示ID，可以通过在ECS实例上执行`dmidecode`获取。',
                              'type' => 'string',
                              'example' => '07bd417a-b863-477d-****-************',
                            ),
                            'GroupId' => 
                            array (
                              'description' => '分组ID。',
                              'type' => 'string',
                              'example' => '8123db90-880f-486f-****-************',
                            ),
                            'DockerEnv' => 
                            array (
                              'description' => '是否安装了Docker。',
                              'type' => 'boolean',
                              'example' => 'false',
                            ),
                            'Online' => 
                            array (
                              'description' => '是否在线。',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                            'AvailableMem' => 
                            array (
                              'description' => '可用内存。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '0',
                            ),
                            'ZoneId' => 
                            array (
                              'description' => '所在地域ID。',
                              'type' => 'string',
                              'example' => 'cn-shen****-*',
                            ),
                            'Name' => 
                            array (
                              'description' => '名称。',
                              'type' => 'string',
                              'example' => 'EDAS-scaled-cluster：默认集群',
                            ),
                            'HeartbeatTime' => 
                            array (
                              'description' => '心跳时间的时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1573635952012',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'EccList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Ecc' => 
                      array (
                        'description' => 'ECC信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => 'ECC信息对象。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'VpcId' => 
                            array (
                              'description' => 'VPC网络ID。',
                              'type' => 'string',
                              'example' => 'vpc-wz9b246zg************',
                            ),
                            'UpdateTime' => 
                            array (
                              'description' => '更新时间的时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1573635952012',
                            ),
                            'EcuId' => 
                            array (
                              'description' => 'ECU唯一标识。',
                              'type' => 'string',
                              'example' => '07bd417a-b863-477d-****-************',
                            ),
                            'EccId' => 
                            array (
                              'description' => 'ECC唯一标识。',
                              'type' => 'string',
                              'example' => '0cf49a6c-95a8-4aa8-****-************',
                            ),
                            'GroupId' => 
                            array (
                              'description' => '分组ID。',
                              'type' => 'string',
                              'example' => '8123db90-880f-486f-****-************',
                            ),
                            'AppState' => 
                            array (
                              'description' => '应用实例状态：
- 0：AGENT_OFF：Agent下线。
- 1：STOPPED：应用已停止。
- 3：RUNNING\\_BUT\\_URL\\_FAILED：健康检查失败。
- 7：RUNNING：应用运行中。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '7',
                            ),
                            'TaskState' => 
                            array (
                              'description' => '实例上最近的一次任务的任务状态：
- 0：UNKNOWN：未知状态。
- 1：PROCESSING：任务处理中。
- 2：SUCCESS：任务执行成功。
- 3：FAILED：任务执行失败。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '3',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => '创建时间的时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1573626226691',
                            ),
                            'AppId' => 
                            array (
                              'description' => '应用ID。',
                              'type' => 'string',
                              'example' => '3616cdca-4f92-4413-****-************',
                            ),
                            'ContainerStatus' => 
                            array (
                              'description' => '容器状态。',
                              'type' => 'string',
                              'example' => '“”',
                            ),
                            'Ip' => 
                            array (
                              'description' => 'ECU的内网IP。',
                              'type' => 'string',
                              'example' => '172.16.*.***',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'GroupList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Group' => 
                      array (
                        'description' => '分组信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '分组信息对象。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'UpdateTime' => 
                            array (
                              'description' => '更新时间的时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1573627441388',
                            ),
                            'GroupName' => 
                            array (
                              'description' => '分组名称。',
                              'type' => 'string',
                              'example' => '_DEFAULT_GROUP',
                            ),
                            'GroupId' => 
                            array (
                              'description' => '分组ID。',
                              'type' => 'string',
                              'example' => '8123db90-880f-486f-****-************',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => '创建时间的时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1573626155185',
                            ),
                            'AppVersionId' => 
                            array (
                              'description' => '分组部署记录ID。',
                              'type' => 'string',
                              'example' => 'changeorder_a**_*******_**',
                            ),
                            'AppId' => 
                            array (
                              'description' => '应用ID。',
                              'type' => 'string',
                              'example' => '3616cdca-4f92-4413-****-************',
                            ),
                            'PackageVersionId' => 
                            array (
                              'description' => '分组部署的包ID。',
                              'type' => 'string',
                              'example' => '441beb18-da42-44dc-****-************',
                            ),
                            'GroupType' => 
                            array (
                              'description' => '表示分组类型：

- 0：表示默认。
- 1：表示用户创建。
- 2：表示灰度分组。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '0',
                            ),
                            'ClusterId' => 
                            array (
                              'description' => '集群ID。',
                              'type' => 'string',
                              'example' => '0d247b93-8d62-4e34-****-************',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'DeployRecordList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'DeployRecord' => 
                      array (
                        'description' => 'DeployRecord信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => 'DeployRecord信息对象。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EccId' => 
                            array (
                              'description' => 'ECC唯一标识。',
                              'type' => 'string',
                              'example' => '0cf49a6c-95a8-4aa8-****-************',
                            ),
                            'EcuId' => 
                            array (
                              'description' => 'ECU唯一标识。',
                              'type' => 'string',
                              'example' => '07bd417a-b863-477d-****-************',
                            ),
                            'PackageMd5' => 
                            array (
                              'description' => '部署包MD5值。',
                              'type' => 'string',
                              'example' => 'd0db5bcb442e492104d0f00e10a03dd9',
                            ),
                            'CreateTime' => 
                            array (
                              'description' => '创建时间的时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1573626226691',
                            ),
                            'PackageVersionId' => 
                            array (
                              'description' => '分组部署的包ID。',
                              'type' => 'string',
                              'example' => '441beb18-da42-44dc-****-************',
                            ),
                            'DeployRecordId' => 
                            array (
                              'description' => '部署记录ID。',
                              'type' => 'string',
                              'example' => 'bbc6c0d5-d792-4907-****-************',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Application' => 
                  array (
                    'description' => '应用基础信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'HealthCheckUrl' => 
                      array (
                        'description' => '健康检查URL。',
                        'type' => 'string',
                        'example' => '“”',
                      ),
                      'Owner' => 
                      array (
                        'description' => '应用创建者。',
                        'type' => 'string',
                        'example' => 'edas_com***_****@******-*****.***',
                      ),
                      'CreateTime' => 
                      array (
                        'description' => '创建时间的时间戳。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1573626207270',
                      ),
                      'UserId' => 
                      array (
                        'description' => '云账号ID。',
                        'type' => 'string',
                        'example' => 'edas_com***_****@******-*****.***',
                      ),
                      'Port' => 
                      array (
                        'description' => '应用所占用的端口。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '8080',
                      ),
                      'RunningInstanceCount' => 
                      array (
                        'description' => '运行中的应用实例数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'Phone' => 
                      array (
                        'description' => '电话。',
                        'type' => 'string',
                        'example' => '1886666****',
                      ),
                      'RegionId' => 
                      array (
                        'description' => '命名空间ID。',
                        'type' => 'string',
                        'example' => 'cn-shenzhen:test',
                      ),
                      'BuildPackageId' => 
                      array (
                        'description' => '容器版本ID。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '0',
                      ),
                      'Dockerize' => 
                      array (
                        'description' => '是否为Docker应用。',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'Email' => 
                      array (
                        'description' => '电子邮箱地址。',
                        'type' => 'string',
                        'example' => '1234567@qq.com',
                      ),
                      'Cpu' => 
                      array (
                        'description' => 'CPU数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '0',
                      ),
                      'InstanceCount' => 
                      array (
                        'description' => '包含的应用实例数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'LaunchTime' => 
                      array (
                        'description' => '运行时间的时间戳。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '0',
                      ),
                      'Memory' => 
                      array (
                        'description' => '内存。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '0',
                      ),
                      'Name' => 
                      array (
                        'description' => '应用名称。',
                        'type' => 'string',
                        'example' => 'EDAS-scaled-cluster：默认集群',
                      ),
                      'ApplicationId' => 
                      array (
                        'description' => '应用ID。',
                        'type' => 'string',
                        'example' => '3616cdca-4f92-4413-****-************',
                      ),
                      'ClusterId' => 
                      array (
                        'description' => '集群ID。',
                        'type' => 'string',
                        'example' => '0d247b93-8d62-4e34-****-************',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-********\\",\\n  \\"AppInfo\\": {\\n    \\"EcuList\\": {\\n      \\"Ecu\\": [\\n        {\\n          \\"VpcId\\": \\"vpc-wz9b246zg************\\",\\n          \\"UpdateTime\\": 1573635952012,\\n          \\"IpAddr\\": \\"172.16.*.**\\",\\n          \\"AvailableCpu\\": 0,\\n          \\"CreateTime\\": 1573626207270,\\n          \\"UserId\\": \\"edas_com***_****@******-*****.***\\",\\n          \\"InstanceId\\": \\"i-wz9fp1ljg***********\\",\\n          \\"RegionId\\": \\"cn-shen****-*\\",\\n          \\"EcuId\\": \\"07bd417a-b863-477d-****-************\\",\\n          \\"GroupId\\": \\"8123db90-880f-486f-****-************\\",\\n          \\"DockerEnv\\": false,\\n          \\"Online\\": true,\\n          \\"AvailableMem\\": 0,\\n          \\"ZoneId\\": \\"cn-shen****-*\\",\\n          \\"Name\\": \\"EDAS-scaled-cluster：默认集群\\",\\n          \\"HeartbeatTime\\": 1573635952012\\n        }\\n      ]\\n    },\\n    \\"EccList\\": {\\n      \\"Ecc\\": [\\n        {\\n          \\"VpcId\\": \\"vpc-wz9b246zg************\\",\\n          \\"UpdateTime\\": 1573635952012,\\n          \\"EcuId\\": \\"07bd417a-b863-477d-****-************\\",\\n          \\"EccId\\": \\"0cf49a6c-95a8-4aa8-****-************\\",\\n          \\"GroupId\\": \\"8123db90-880f-486f-****-************\\",\\n          \\"AppState\\": 7,\\n          \\"TaskState\\": 3,\\n          \\"CreateTime\\": 1573626226691,\\n          \\"AppId\\": \\"3616cdca-4f92-4413-****-************\\",\\n          \\"ContainerStatus\\": \\"“”\\",\\n          \\"Ip\\": \\"172.16.*.***\\"\\n        }\\n      ]\\n    },\\n    \\"GroupList\\": {\\n      \\"Group\\": [\\n        {\\n          \\"UpdateTime\\": 1573627441388,\\n          \\"GroupName\\": \\"_DEFAULT_GROUP\\",\\n          \\"GroupId\\": \\"8123db90-880f-486f-****-************\\",\\n          \\"CreateTime\\": 1573626155185,\\n          \\"AppVersionId\\": \\"changeorder_a**_*******_**\\",\\n          \\"AppId\\": \\"3616cdca-4f92-4413-****-************\\",\\n          \\"PackageVersionId\\": \\"441beb18-da42-44dc-****-************\\",\\n          \\"GroupType\\": 0,\\n          \\"ClusterId\\": \\"0d247b93-8d62-4e34-****-************\\"\\n        }\\n      ]\\n    },\\n    \\"DeployRecordList\\": {\\n      \\"DeployRecord\\": [\\n        {\\n          \\"EccId\\": \\"0cf49a6c-95a8-4aa8-****-************\\",\\n          \\"EcuId\\": \\"07bd417a-b863-477d-****-************\\",\\n          \\"PackageMd5\\": \\"d0db5bcb442e492104d0f00e10a03dd9\\",\\n          \\"CreateTime\\": 1573626226691,\\n          \\"PackageVersionId\\": \\"441beb18-da42-44dc-****-************\\",\\n          \\"DeployRecordId\\": \\"bbc6c0d5-d792-4907-****-************\\"\\n        }\\n      ]\\n    },\\n    \\"Application\\": {\\n      \\"HealthCheckUrl\\": \\"“”\\",\\n      \\"Owner\\": \\"edas_com***_****@******-*****.***\\",\\n      \\"CreateTime\\": 1573626207270,\\n      \\"UserId\\": \\"edas_com***_****@******-*****.***\\",\\n      \\"Port\\": 8080,\\n      \\"RunningInstanceCount\\": 1,\\n      \\"Phone\\": \\"1886666****\\",\\n      \\"RegionId\\": \\"cn-shenzhen:test\\",\\n      \\"BuildPackageId\\": 0,\\n      \\"Dockerize\\": false,\\n      \\"Email\\": \\"1234567@qq.com\\",\\n      \\"Cpu\\": 0,\\n      \\"InstanceCount\\": 1,\\n      \\"LaunchTime\\": 0,\\n      \\"Memory\\": 0,\\n      \\"Name\\": \\"EDAS-scaled-cluster：默认集群\\",\\n      \\"ApplicationId\\": \\"3616cdca-4f92-4413-****-************\\",\\n      \\"ClusterId\\": \\"0d247b93-8d62-4e34-****-************\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<AppInfo>\\n    <EcuList>\\n        <Ecu>\\n            <AvailableMem>0</AvailableMem>\\n            <AvailableCpu>0</AvailableCpu>\\n            <InstanceId>i-wz9fp1ljg***********</InstanceId>\\n            <Online>true</Online>\\n            <UpdateTime>1573635952012</UpdateTime>\\n            <UserId>edas_com***_****@******-*****.***</UserId>\\n            <ZoneId>cn-shen****-*</ZoneId>\\n            <GroupId>8123db90-880f-486f-****-************</GroupId>\\n            <VpcId>vpc-wz9b246zg************</VpcId>\\n            <IpAddr>172.16.0.107</IpAddr>\\n            <Name>EDAS-scaled-cluster:默认集群</Name>\\n            <HeartbeatTime>1573635952012</HeartbeatTime>\\n            <CreateTime>1573626207270</CreateTime>\\n            <RegionId>cn-shenzhen:xuanye</RegionId>\\n            <EcuId>07bd417a-b863-477d-****-************</EcuId>\\n            <DockerEnv>false</DockerEnv>\\n        </Ecu>\\n    </EcuList>\\n    <EccList>\\n        <Ecc>\\n            <Ip>172.16.*.***</Ip>\\n            <AppState>7</AppState>\\n            <EccId>0cf49a6c-95a8-4aa8-****-************</EccId>\\n            <CreateTime>1573626226691</CreateTime>\\n            <AppId>3616cdca-4f92-4413-****-************</AppId>\\n            <UpdateTime>1573635952024</UpdateTime>\\n            <EcuId>07bd417a-b863-477d-****-************</EcuId>\\n            <TaskState>3</TaskState>\\n            <GroupId>8123db90-880f-486f-****-************</GroupId>\\n            <VpcId>vpc-wz9b246zg************</VpcId>\\n        </Ecc>\\n    </EccList>\\n    <Application>\\n        <HealthCheckUrl/>\\n        <Owner>edas_com***_****@******-*****.***</Owner>\\n        <Phone>1886666****</Phone>\\n        <RunningInstanceCount>1</RunningInstanceCount>\\n        <BuildPackageId>0</BuildPackageId>\\n        <UserId>edas_com***_****@******-*****.***</UserId>\\n        <ApplicationId>3616cdca-4f92-4413-****-************</ApplicationId>\\n        <Name>testPopApi</Name>\\n        <InstanceCount>1</InstanceCount>\\n        <Memory>0</Memory>\\n        <Cpu>0</Cpu>\\n        <Port>8080</Port>\\n        <Email>1234567@qq.com</Email>\\n        <ClusterId>0d247b93-8d62-4e34-****-************</ClusterId>\\n        <Dockerize>false</Dockerize>\\n        <RegionId>cn-*******</RegionId>\\n        <CreateTime>1573626155177</CreateTime>\\n        <LaunchTime>0</LaunchTime>\\n    </Application>\\n    <DeployRecordList>\\n        <DeployRecord>\\n            <EccId>0cf49a6c-95a8-4aa8-****-************</EccId>\\n            <PackageVersionId>441beb18-da42-44dc-****-************</PackageVersionId>\\n            <CreateTime>1573627453139</CreateTime>\\n            <DeployRecordId>bbc6c0d5-d792-4907-****-************</DeployRecordId>\\n            <EcuId>07bd417a-b863-477d-****-************</EcuId>\\n            <PackageMd5>d0db5bcb442e492104d0f00e10a03dd9</PackageMd5>\\n        </DeployRecord>\\n    </DeployRecordList>\\n    <GroupList>\\n        <Group>\\n            <GroupType>0</GroupType>\\n            <GroupName>_DEFAULT_GROUP</GroupName>\\n            <ClusterId>0d247b93-8d62-4e34-****-************</ClusterId>\\n            <PackageVersionId>441beb18-da42-44dc-****-************</PackageVersionId>\\n            <CreateTime>1573626155185</CreateTime>\\n            <AppId>3616cdca-4f92-4413-****-************</AppId>\\n            <UpdateTime>1573627441388</UpdateTime>\\n            <AppVersionId>changeorder_a**_*******_**</AppVersionId>\\n            <GroupId>8123db90-880f-486f-****-************</GroupId>\\n        </Group>\\n    </GroupList>\\n</AppInfo>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '查询应用状态',
      'summary' => '调用QueryApplicationStatus接口查询应用状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InsertDeployGroup' => 
    array (
      'path' => '/pop/v5/deploy_group',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-4f92-4413-***********',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组名称，支持的最大长度为64字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'InitPackageVersionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组关联的初始化部署包版本ID。可以调用接口ListHistoryDeployVersion获取，具体操作，请参见[ListHistoryDeployVersion](~~149392~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '441beb18-da42-44dc-****-****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '3RD9-D3FRE****************',
              ),
              'DeployGroupEntity' => 
              array (
                'description' => '创建的分组信息',
                'type' => 'object',
                'properties' => 
                array (
                  'UpdateTime' => 
                  array (
                    'description' => '更新时间的时间戳',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1573627695779',
                  ),
                  'GroupName' => 
                  array (
                    'description' => '分组名称',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建时间的时间戳',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1573627695779',
                  ),
                  'AppVersionId' => 
                  array (
                    'description' => '应用部署版本ID。
- 如果应用部署过，则返回一串随机数。
- 如果应用未部署，则返回值为空。',
                    'type' => 'string',
                    'example' => '****f4c50-16ee-a02b-667*****',
                  ),
                  'AppId' => 
                  array (
                    'description' => '应用ID',
                    'type' => 'string',
                    'example' => '3616cdca-4f92-4413-***********',
                  ),
                  'PackageVersionId' => 
                  array (
                    'description' => '该分组部署包的版本ID。
- 如果该应用分组部署过应用，则返回一串随机数。
- 如果该应用分组未部署过应用，则返回值为空。',
                    'type' => 'string',
                    'example' => '****7b93-8d62-4e34***********',
                  ),
                  'GroupType' => 
                  array (
                    'description' => '分组类型。
- 0：默认分组
- 1：未启用灰度流量管理的分组
- 2：已启用灰度流程管理的分组',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Id' => 
                  array (
                    'description' => '分组ID',
                    'type' => 'string',
                    'example' => '577f4c50-16ee-43d8-a02b-667*********',
                  ),
                  'ClusterId' => 
                  array (
                    'description' => '集群ID',
                    'type' => 'string',
                    'example' => '0d247b93-8d62-4e34***********',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"3RD9-D3FRE****************\\",\\n  \\"DeployGroupEntity\\": {\\n    \\"UpdateTime\\": 1573627695779,\\n    \\"GroupName\\": \\"test\\",\\n    \\"CreateTime\\": 1573627695779,\\n    \\"AppVersionId\\": \\"****f4c50-16ee-a02b-667*****\\",\\n    \\"AppId\\": \\"3616cdca-4f92-4413-***********\\",\\n    \\"PackageVersionId\\": \\"****7b93-8d62-4e34***********\\",\\n    \\"GroupType\\": 1,\\n    \\"Id\\": \\"577f4c50-16ee-43d8-a02b-667*********\\",\\n    \\"ClusterId\\": \\"0d247b93-8d62-4e34***********\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<DeployGroupEntity>\\n    <GroupType>1</GroupType>\\n    <GroupName>test</GroupName>\\n    <ClusterId>0d247b93-8d62-4e34***************</ClusterId>\\n    <PackageVersionId/>\\n    <CreateTime>1573627695779</CreateTime>\\n    <AppId>3616cdca-4f92-4413-***********</AppId>\\n    <UpdateTime>1573627695779</UpdateTime>\\n    <Id>577f4c50-16ee-43d8-a02b-667*********</Id>\\n    <AppVersionId/>\\n</DeployGroupEntity>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '创建应用部署分组',
      'summary' => '调用InsertDeployGroup接口创建应用分组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BindEcsSlb' => 
    array (
      'path' => '/pop/v5/app/slb/bind_slb',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可通过调用ListApplication接口来获取，详情请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '93fdd228-*****-ed2ae98de18d',
          ),
        ),
        1 => 
        array (
          'name' => 'SlbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB实例ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'lb-uf6j54m3a****cj01jx8',
          ),
        ),
        2 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB监听端口',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '80',
          ),
        ),
        3 => 
        array (
          'name' => 'VServerGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB虚拟服务器组ID',
            'type' => 'string',
            'required' => false,
            'example' => 'rsp-2ze****6l*****',
          ),
        ),
        4 => 
        array (
          'name' => 'ListenerProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB监听协议',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tcp',
          ),
        ),
        5 => 
        array (
          'name' => 'DeployGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的部署分组ID，可通过调用ListDeployGroup接口来获取，详情请参见[ListDeployGroup](~~62077~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '577f4c50-16ee-43d8-****-****',
          ),
        ),
        6 => 
        array (
          'name' => 'VServerGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '虚拟服务器组名',
            'type' => 'string',
            'required' => false,
            'example' => '****/31405/internet-test-ack-test****/default/clusterid',
          ),
        ),
        7 => 
        array (
          'name' => 'ListenerHealthCheckUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查路径',
            'type' => 'string',
            'required' => false,
            'example' => '/_ehc.html',
          ),
        ),
        8 => 
        array (
          'name' => 'VForwardingUrlRule',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB转发规则',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com/forwarding',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '此次变更对应的变更记录ID',
                'type' => 'string',
                'example' => 'cd65b247-****-475b-ad4b-7039040d625c',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '03FD1520-0FD6-436A-****-265318D7****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"cd65b247-****-475b-ad4b-7039040d625c\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"03FD1520-0FD6-436A-****-265318D7****\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>03FD1520-0FD6-436A-****-265318D7****</RequestId>\\n<Message>success</Message>\\n<ChangeOrderId>cd65b247-****-475b-ad4b-7039040d625c</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '来给部署在ECS集群中的应用绑定SLB',
      'summary' => '调用BindEcsSlb接口来给部署在ECS集群中的应用绑定SLB。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnbindSlb' => 
    array (
      'path' => '/pop/app/unbind_slb_json',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c627c157-560d-********************',
          ),
        ),
        1 => 
        array (
          'name' => 'SlbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'lb-wz9vo49****************',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB网络类型：

- **internet**：外网实例。

- **intranet**：内网实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'internet',
          ),
        ),
        3 => 
        array (
          'name' => 'DeleteListener',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否删除监听：
* true： 删除。
* false：不删除。',
            'type' => 'string',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '请求状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'Unbind slb success',
              ),
              'Data' => 
              array (
                'description' => '空值，无实际含义。',
                'type' => 'string',
                'example' => '{}',
              ),
              'RequestId' => 
              array (
                'description' => '请求唯一ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-************',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"Unbind slb success\\",\\n  \\"Data\\": \\"{}\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-************\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>D16979DC-4D42-************</RequestId>\\n<Message>Unbind slb success</Message>\\n<Data>{}</Data>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '解除绑定SLB',
      'summary' => '调用UnbindSlb接口解除绑定SLB。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RollbackApplication' => 
    array (
      'path' => '/pop/v5/changeorder/co_rollback',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。可以通过调用ListApplication接口获取，具体操作，请参见[ListApplication](~~423162~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '3616cdca-4f92-4413-************',
          ),
        ),
        1 => 
        array (
          'name' => 'HistoryVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置应用要回滚到的历史版本。请根据调用ListHistoryDeployVersion接口返回的`PackageVersion`填写，具体操作，请参见[ListHistoryDeployVersion](~~423163~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '2019-11-13 14:22:22',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用分组ID。可以调用ListDeployGroup接口获取，具体操作，请参见[ListDeployGroup](~~423184~~)。

<note>如果需要回滚全部分组的应用，请设置为`all`。</note>
',
            'type' => 'string',
            'required' => true,
            'example' => '8123db90-880f-48***************',
          ),
        ),
        3 => 
        array (
          'name' => 'Batch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次数。默认1批，最多5批。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'BatchWaitTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批间等待时间，默认0表示不等待，最多等待5分钟。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。可以调用GetChangeOrderInfo接口获取此次回滚变更的详细执行进展，具体操作，请参见[GetChangeOrderInfo](~~423155~~)。',
                'type' => 'string',
                'example' => '921026b8-d1be-************',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-*********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"921026b8-d1be-************\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-*********\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>D16979DC-4D42-*********</RequestId>\\n<Message>success</Message>\\n<ChangeOrderId>921026b8-d1be-************</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '回滚应用',
      'summary' => '调用RollbackApplication接口回滚应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InsertApplication' => 
    array (
      'path' => '/pop/v5/changeorder/co_create_app',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS集群ID。ECS集群ID不为空，则为指定的ECS集群创建应用，为空则为默认集群创建应用（推荐指定）。',
            'type' => 'string',
            'required' => false,
            'example' => '13136119-f384-4f50-b76e-xxxxxxxxxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'BuildPackId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EDAS-Container构建包号，当创建HSF应用时，该参数必须指定。有以下两种获取方式：

- 通过容器版本列表接口ListBuildPack获取，请参见[ListBuildPack](~~149391~~)。

- 在参见[容器版本](~~92614~~)表格中的**构建包序号**列获取。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '59',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'create by edas pop api',
          ),
        ),
        3 => 
        array (
          'name' => 'ApplicationName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用名称。仅允许使用数字、英文字母、短划线（-）和下划线（_） ，而且必须以英文字母开头，最长36个字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hello-edas-test-1',
          ),
        ),
        4 => 
        array (
          'name' => 'ReservedPortStr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '**（废弃参数）**应用预留端口号。',
            'type' => 'string',
            'required' => false,
            'example' => '8090',
          ),
        ),
        5 => 
        array (
          'name' => 'EcuInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要扩容的ECS实例的`ecu_id`（导入EDAS的ECS实例在EDAS中的唯一身份），多个`ecu_id`用英文逗号（,）分开。`ecu_id`可通过查询ListScaleOutEcu接口获取，请参见[ListScaleOutEcu](~~149371~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '07bd417a-b863-477d-****-************',
          ),
        ),
        6 => 
        array (
          'name' => 'Cpu',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '**（废弃参数）**Swarm集群应用容器CPU核数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '2',
          ),
        ),
        7 => 
        array (
          'name' => 'Mem',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '**（废弃参数）**Swarm集群应用容器Memory大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '2048',
          ),
        ),
        8 => 
        array (
          'name' => 'HealthCheckURL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用健康检查URL。',
            'type' => 'string',
            'required' => false,
            'example' => 'http://127.0.0.1:8080/_ehc.html',
          ),
        ),
        9 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '微服务空间ID，您可在EDAS控制台左侧菜单栏选择**资源管理** > **微服务空间**，找到目标微服务空间对应的微服务空间ID，也可通过ListUserDefineRegion接口获取到微服务空间ID，请参见[ListUserDefineRegion](~~149377~~)。
 
- 如果指定的集群不在默认微服务空间下，则需要指定该参数，否则会遇到`application regionId is different with cluster regionId!`的错误提示。
- 如果在默认微服务空间下，则不需要指定。该参数需要与指定的集群ID所在的微服务空间保持一致。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing:prod',
          ),
        ),
        10 => 
        array (
          'name' => 'Jdk',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '**（废弃参数）**  用来指定应用使用的JDK版本。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '8',
          ),
        ),
        11 => 
        array (
          'name' => 'WebContainer',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '**（废弃参数）** 用于指定Apache Tomcat版本。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '4',
          ),
        ),
        12 => 
        array (
          'name' => 'PackageType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用部署包格式，可设置为war或者jar。',
            'type' => 'string',
            'required' => false,
            'example' => 'war',
          ),
        ),
        13 => 
        array (
          'name' => 'ComponentIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用组件ID。可通过查询组件列表接口ListComponents接口获取，请参见[ListComponents](~~97502~~)。

当创建的应用运行环境使用Apache Tomcat（适用于WAR包部署的Dubbo应用）或者标准Java应用运行环境（适用于JAR包部署的Spring Boot或Spring Cloud应用）时需要指定。

常用的应用组件ID及含义：

- 4：Apache Tomcat 7.0.91
- 7：Apache Tomcat 8.5.42
- 5：表示OpenJDK 1.8.x
- 6：表示 OpenJDK 1.7.x

该参数需要更新Java或者Python SDK版本到2.57.3或以上版本才可以设置，未使用EDAS提供的SDK的（例如在使用aliyun-python-sdk-core、aliyun-java-sdk-core、aliyun cli等）用户可直接设置该参数。
',
            'type' => 'string',
            'required' => false,
            'example' => '7',
          ),
        ),
        14 => 
        array (
          'name' => 'Hooks',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '挂载脚本配置，为一段JSON格式文本，如：
`[{"ignoreFail":false,"name":"postprepareInstanceEnvironmentOnScaleOut","script":"ls"},{"ignoreFail":true,"name":"postdeleteInstanceDataOnScaleIn","script":""},{"ignoreFail":true,"name":"prestartInstance","script":""},{"ignoreFail":true,"name":"poststartInstance","script":""},{"ignoreFail":true,"name":"prestopInstance","script":""},{"ignoreFail":true,"name":"poststopInstance","script":""}]`',
            'type' => 'string',
            'required' => false,
            'example' => '[{"ignoreFail":false,"name":"postprepareInstanceEnvironmentOnScaleOut","script":"ls"}]',
          ),
        ),
        15 => 
        array (
          'name' => 'JvmOptions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义参数。',
            'type' => 'string',
            'required' => false,
            'example' => '-Dproperty=value',
          ),
        ),
        16 => 
        array (
          'name' => 'MinHeapSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '初始化堆内存大小，单位M。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '0',
            'example' => '500',
          ),
        ),
        17 => 
        array (
          'name' => 'MaxPermSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '持久代内存大小，单位M。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '0',
            'example' => '200',
          ),
        ),
        18 => 
        array (
          'name' => 'MaxHeapSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最大堆内存大小，单位M。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '0',
            'example' => '1000',
          ),
        ),
        19 => 
        array (
          'name' => 'EnableUrlCheck',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用健康检查URL，取值如下：

- **true**：启用

- **false**：不启用',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        20 => 
        array (
          'name' => 'EnablePortCheck',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用端口健康检查，取值如下：

- **true**：启用

- **false**：不启用',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        21 => 
        array (
          'name' => 'HealthCheckUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用健康检查URL（等价于HealthCheckURL参数）。',
            'type' => 'string',
            'required' => false,
            'example' => 'http://127.0.0.1:8080/_ehc.html',
          ),
        ),
        22 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-aek24j4s4b*****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'The application name test-hsy-C5039-paas-6 had been created successfully.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4264F69C-686C-4107-B493-0599C8xxxxxx',
              ),
              'ApplicationInfo' => 
              array (
                'description' => '应用创建成功后返回的应用对象。',
                'type' => 'object',
                'properties' => 
                array (
                  'ChangeOrderId' => 
                  array (
                    'description' => '变更流程ID。',
                    'type' => 'string',
                    'example' => 'd0cf569e-dce3-4efb-****-08b70021****',
                  ),
                  'AppName' => 
                  array (
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'hello-edas-test-1',
                  ),
                  'Owner' => 
                  array (
                    'description' => '该应用拥有者，即应用创建者。',
                    'type' => 'string',
                    'example' => '249763358688********',
                  ),
                  'Dockerize' => 
                  array (
                    'description' => '是否为Docker应用，取值如下：

- **true**：是

- **false**：否',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'RegionName' => 
                  array (
                    'description' => '地域名称。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'AppId' => 
                  array (
                    'description' => '应用ID，EDAS应用的唯一标识。',
                    'type' => 'string',
                    'example' => '6c733bcd-6efb-47a1-8226-cf722c******',
                  ),
                  'UserId' => 
                  array (
                    'description' => '应用拥有者的USER_ID。',
                    'type' => 'string',
                    'example' => 'tdy218@1362469756xxxxxx',
                  ),
                  'Port' => 
                  array (
                    'description' => '创建成功的应用默认端口号8080。可以使用UpdateContainerConfiguration接口修改，请参见[UpdateContainerConfiguration](~~149403~~)。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '8080',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"The application name test-hsy-C5039-paas-6 had been created successfully.\\",\\n  \\"RequestId\\": \\"4264F69C-686C-4107-B493-0599C8xxxxxx\\",\\n  \\"ApplicationInfo\\": {\\n    \\"ChangeOrderId\\": \\"d0cf569e-dce3-4efb-****-08b70021****\\",\\n    \\"AppName\\": \\"hello-edas-test-1\\",\\n    \\"Owner\\": \\"249763358688********\\",\\n    \\"Dockerize\\": false,\\n    \\"RegionName\\": \\"cn-hangzhou\\",\\n    \\"AppId\\": \\"6c733bcd-6efb-47a1-8226-cf722c******\\",\\n    \\"UserId\\": \\"tdy218@1362469756xxxxxx\\",\\n    \\"Port\\": 8080\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>4264F69C-686C-4107-B493-0599C8xxxxxx</RequestId>\\n<Message>The application name test-hsy-C5039-paas-6 had been created successfully.</Message>\\n<ApplicationInfo>\\n    <Dockerize>false</Dockerize>\\n    <Owner>249763358688********</Owner>\\n    <AppId>6c733bcd-6efb-47a1-8226-cf722c******</AppId>\\n    <RegionName>cn-hangzhou</RegionName>\\n    <UserId>tdy218@1362469756xxxxxx</UserId>\\n    <Port>8080</Port>\\n    <ChangeOrderId>d0cf569e-dce3-4efb-****-08b70021****</ChangeOrderId>\\n    <AppName>hello-edas-test-1</AppName>\\n</ApplicationInfo>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '创建 ECS 集群的应用',
      'summary' => '调用InsertApplication接口在ECS集群中创建应用。',
      'description' => '>  如需要创建K8s集群应用，则需要使用EDAS提供的InsertK8sApplication接口。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => '## 常见应用的主要参数说明

1. 使用EDAS Java SDK创建Apache Tomcat作为应用运行环境的原生Dubbo、 Java Web等类型应用主要参数：
    ```
    InsertApplicationRequest request = new InsertApplicationRequest();
    request.setApplicationName("hello-edas-test-1"); //应用名称。
    request.setPackageType("war"); // 应用包类型，也可以不指定。
    request.setComponentIds("7");  // 7或者4。7表示Apache Tomcat 8.5.42，4表示 Apache Tomcat 7.0.91。
    request.setLogicalRegionId("cn-hangzhou:prod");  // 命名空间ID，注意不是命名空间的名称，当指定的集群不在默认命名空间下时，该参数必填。
    request.setClusterId("ebc364ca-1875-4266-ae1f-ad0e7c179417"); // 在指定Cluster ID的ECS集群下创建应用。
    ```


2. 使用EDAS Java SDK创建标准Java应用运行时环境的原生Spring Boot/Spring Cloud等FatJar类型应用主要参数：
    ```
    InsertApplicationRequest request = new InsertApplicationRequest();
    request.setApplicationName("hello-edas-test-2"); //应用名称。
    request.setPackageType("jar"); // 应用包类型，也可以不指定。
    request.setComponentIds("5");  // 5或者6。5表示OpenJDK 1.8.0；6 表示OpenJDK 1.8.0；也可以不指定该参数，默认将使用OpenJDK 1.8.0。
    request.setLogicalRegionId("cn-hangzhou:prod");  // 命名空间ID，注意不是命名空间的名称，当指定的集群不在默认命名空间下时，该参数必填。
   request.setClusterId("ebc364ca-1875-4266-ae1f-ad0e7c179417"); // 在指定Cluster ID的ECS集群下创建应用。
    ```


3. 使用EDAS Java SDK创建EDAS-Container作为应用运行时环境的HSF应用主要参数：
    ```
    InsertApplicationRequest request = new InsertApplicationRequest();
    request.setBuildPackId(59); // EDAS-Container构建包版本号，59表示使用 edas-container 3.5.8。
    request.setApplicationName("hello-edas-test-3"); //应用名称。
    request.setPackageType("war"); // 应用包类型，war或者jar，也可以不填写。
    request.setLogicalRegionId("cn-hangzhou:prod");  // 命名空间ID，注意不是命名空间的名称，当指定的集群不在默认命名空间下时，该参数必填。
    request.setClusterId("ebc364ca-1875-4266-ae1f-ad0e7c179417"); // 在指定Cluster ID的ECS集群下创建应用。
    ```',
    ),
    'DeployApplication' => 
    array (
      'path' => '/pop/v5/changeorder/co_deploy',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。可通过查询ListApplication接口获取，请参见[ListApplication](~~423162~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-********************',
          ),
        ),
        1 => 
        array (
          'name' => 'PackageVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署的应用部署包版本，最长64个字符，建议使用时间戳。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1.0',
          ),
        ),
        2 => 
        array (
          'name' => 'Desc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用部署描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'Deploy by edas pop api',
          ),
        ),
        3 => 
        array (
          'name' => 'DeployType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署类型。包含`URL`和`image`（废弃参数值），其中只有Swarm集群应用支持镜像（`image`）部署。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'URL',
          ),
        ),
        4 => 
        array (
          'name' => 'WarUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用部署包（WAR或JAR）的URL地址。**DeployType**为`url`时必填，建议使用OSS存储的应用部署包路径。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://edas.oss-cn-hangzhou.aliyuncs.com/demo/hello-edas.war',
          ),
        ),
        5 => 
        array (
          'name' => 'ImageUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '**（废弃参数）**Swarm集群应用部署时可指定的应用镜像URL，推荐使用阿里云镜像仓库地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'registry.cn-hangzhou.aliyuncs.com/mw/testapp:latest',
          ),
        ),
        6 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署分组ID。可通过查询ListDeployGroup接口获取，请参见[ListDeployGroup](~~423184~~)。

<note>如果要部署到所有分组，参数设置为`all`。</note>
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'all',
          ),
        ),
        7 => 
        array (
          'name' => 'Batch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每组批次。

- 当指定了应用分组的GroupId为具体的某个应用分组ID时，表示向指定应用分组部署。此时可指定的最小批次数为1，最大批次数为该应用分组下正常状态的ECS实例数最大值，实际分批数结果范围：\\[1，指定的分批数\\] （指定的分批数=指定的分组下面ECS总数）。
- 当指定了应用分组的GroupId为all时，表示向所有应用分组部署，此时可指定的最小批次数为1，最大批次数为正常状态的ECS数量最多的分组下的ECS实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'BatchWaitTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批等待时间，单位：分钟。
- 默认为0，表示不等待。
- 最大为5。

当实际批次数较多时，需要设置一个合理值，否则会导致本次应用部署的变更持续时间比较长。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        9 => 
        array (
          'name' => 'AppEnv',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署环境变量，格式必须符合`{"name":"x","value":"y"},{"name":"x2","value":"y2"} `，`key`固定为`name`和`value`。',
            'type' => 'string',
            'required' => false,
            'example' => '[{\\"name\\":\\"env_name_1\\", \\"value\\":\\"env_value_1\\"}, {\\"name\\":\\"env_name_2\\",\\"value\\":\\"env_value_2\\"}]',
          ),
        ),
        10 => 
        array (
          'name' => 'BuildPackId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EDAS-Container构建包号。

- 如果部署时不需要更改EDAS-Container版本，则该参数可不设置。
- 如果需要在本次部署时，更新目标应用的EDAS-Container版本，则需要设置。

有以下两种获取方式：

- 可通过查询容器版本列表接口ListBuildPack获取，请参见[ListBuildPack](~~149391~~)。
- 在[容器版本说明](~~92614~~)表格中的**构建包序号**列获取。例如`59`表示`EDAS-Container 3.5.8 版本`。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '59',
          ),
        ),
        11 => 
        array (
          'name' => 'ComponentIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用组件ID，参数不适用于HSF应用。可通过查询组件列表接口ListComponents接口获取，请参见[ListComponents](~~423223~~)。

- 当创建应用时已经设置，则本次部署不需要再设置。
- 如果在本次部署时需要更新目标应用的应用组件版本则需要设置。

常用的应用组件ID及含义如下：

- 4：表示Apache Tomcat 7.0.91
- 7：表示Apache Tomcat 8.5.42
- 5：表示OpenJDK 1.8.x
- 6：表示OpenJDK 1.7.x 

更多信息，请参见[InsertApplication](~~423185~~)接口的常见应用的主要参数说明。',
            'type' => 'string',
            'required' => false,
            'example' => '7',
          ),
        ),
        12 => 
        array (
          'name' => 'ReleaseType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批方式。
- 0为自动。
- 1为各批次间需要手动确认。可在控制台目标应用的变更流程详情中单击**继续下一批**，也可通过调用ContinuePipeline继续下一批（由于使用API部署，建议使用自动分批），请参见[ContinuePipeline](~~126990~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '0',
          ),
        ),
        13 => 
        array (
          'name' => 'Gray',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为金丝雀发布。

- true：金丝雀发布。

    - 灰度发布时，必须指定灰度发布的分组ID，即GroupId。

    - 灰度发布作为一个批次发布。

    - 灰度结束后，正常发布，分组批次由Batch控制。

- false：非金丝雀发布（单批或分批发布）。

',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        14 => 
        array (
          'name' => 'TrafficControlStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '灰度发布策略内容，请参见[DeployK8sApplication](~~423212~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '{"http":{"rules":[{"conditionType":"percent","percent":10}]}}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口请求的状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ChangeOrderId' => 
              array (
                'description' => '应用部署的变更流程ID。',
                'type' => 'string',
                'example' => 'adf86823-055b-48a4-a59f-fa5582******',
              ),
              'Message' => 
              array (
                'description' => '接口请求返回的信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '接口请求唯一标识符。',
                'type' => 'string',
                'example' => 'd6834ee9-5045-*************',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"ChangeOrderId\\": \\"adf86823-055b-48a4-a59f-fa5582******\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"d6834ee9-5045-*************\\"\\n}","errorExample":""},{"type":"xml","example":"<DeployApplicationResponse>\\n    <Code>200</Code>\\n    <ChangeOrderId>adf86823-055b-48a4-a59f-fa5582******</ChangeOrderId>\\n    <Message>success</Message>\\n    <RequestId>d6834ee9-5045-*************</RequestId>\\n</DeployApplicationResponse>","errorExample":""}]',
      'title' => '用于向 ECS 集群部署应用',
      'summary' => '调用DeployApplication接口在ECS集群中部署应用。',
      'description' => '>  如果需要在导入EDAS的容器服务K8s集群部署应用，请使用EDAS提供的DeployK8sApplication接口，更多信息，请参见[DeployK8sApplication](~~149420~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ScaleoutApplicationWithNewInstances' => 
    array (
      'path' => '/pop/v5/scaling/scale_out',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩容的目标应用ID，可通过调用ListApplication接口来获取，详情请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'e370c17f-*****-3df0721a327',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩容应用的目标分组ID，可通过调用ListDeployGroup接口来获取，详情请参见[ListDeployGroup](~~62077~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'e37**********-33df0721a327',
          ),
        ),
        2 => 
        array (
          'name' => 'ScalingNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '此次扩容的实例数量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '2',
          ),
        ),
        3 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS启动模板ID，可通过调用DescribeLaunchTemplates接口获取，详情请参见[DescribeLaunchTemplates](~~73759~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'lt-****hy9s2	',
          ),
        ),
        4 => 
        array (
          'name' => 'TemplateVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS启动模板版本，可通过调用DescribeLaunchTemplateVersions接口获取，详情请参见[DescribeLaunchTemplateVersions](~~73761~~)。

>  设置为`-1`代表使用默认的启动模板版本。',
            'type' => 'string',
            'required' => false,
            'example' => '-1',
          ),
        ),
        5 => 
        array (
          'name' => 'ScalingPolicy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定伸缩组的回收模式，取值范围：

- recycle：伸缩组的回收模式为停机回收模式。
- release：伸缩组的回收模式为释放模式。

从一个伸缩组删除实例，详情请参见[RemoveInstances](~~25955~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'release',
          ),
        ),
        6 => 
        array (
          'name' => 'TemplateInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩容时使用的现有ECS实例ID，若填写此项，将以指定的ECS实例的规格和配置为模板来购买新的ECS实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-28wt4****',
          ),
        ),
        7 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩容的集群ID，若指定了应用和分组进行扩容，此参数将被忽略。',
            'type' => 'string',
            'required' => false,
            'example' => 'e37**********-33df0721a327',
          ),
        ),
        8 => 
        array (
          'name' => 'InstanceChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的付费方式。取值范围：
- PrePaid：包年包月。
- PostPaid（默认）：按量付费。
',
            'type' => 'string',
            'required' => false,
            'example' => 'PrePaid',
          ),
        ),
        9 => 
        array (
          'name' => 'InstanceChargePeriodUnit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '包年包月计费方式的时长单位。取值范围：

- Week：按周计费。
- Month（默认）：按月计费。',
            'type' => 'string',
            'required' => false,
            'example' => 'Month',
          ),
        ),
        10 => 
        array (
          'name' => 'InstanceChargePeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '购买资源的时长，单位由InstanceChargePeriodUnit指定。当参数InstanceChargeType取值为PrePaid时才生效。

- InstanceChargePeriodUnit=Week时，Period取值：{“1”, “2”, “3”, “4”}。
- InstanceChargePeriodUnit=Month时，Period取值：{“1”, “2”, “3”, “4”, “5”, “6”, “7”, “8”, “9”, “10”, “11”, “12”, “24”, “36”, ”48”, ”60”}。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        11 => 
        array (
          'name' => 'AutoRenew',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否要自动续费。当参数InstanceChargeType取值PrePaid时才生效。取值范围：

- true：自动续费。
- false（默认）：不自动续费。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        12 => 
        array (
          'name' => 'AutoRenewPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '单次自动续费的续费时长。取值范围：

- InstanceChargePeriodUnit=Week时：{“1”, “2”, “3”}。
- InstanceChargePeriodUnit=Month时：{“1”, “2”, “3”, “6”, “12”, "24", "36", "48", "60"}。

默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '应用扩容的变更记录ID。',
                'type' => 'string',
                'example' => 'e370c17f-*****-3df0721a327',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加消息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'e370c17f-*****-3df0721a327',
              ),
              'InstanceIds' => 
              array (
                'description' => 'ECS实例ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '代购产生的ECS实例列表。',
                  'type' => 'string',
                  'example' => '["i-28wt4****","i-28wt4****"]',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"e370c17f-*****-3df0721a327\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"e370c17f-*****-3df0721a327\\",\\n  \\"InstanceIds\\": [\\n    \\"[\\\\\\"i-28wt4****\\\\\\",\\\\\\"i-28wt4****\\\\\\"]\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>e370c17f-*****-3df0721a327</RequestId>\\n<ChangeOrderId>e370c17f-*****-3df0721a327</ChangeOrderId>\\n<InstanceIds>i-28wt4****</InstanceIds>\\n<InstanceIds>i-28wt4****</InstanceIds>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '代购实例并扩容到指定分组',
      'summary' => '在EDAS中代购ECS实例，并将代购的实例扩容到指定的应用分组。',
      'description' => '## 限制说明

若应用配置并开启了弹性伸缩规则，在触发自动缩容时将优先移除此接口代购的实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ScaleOutApplication' => 
    array (
      'path' => '/pop/v5/changeorder/co_scale_out',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。获取应用ID，请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3616cdca-4f92-4413*****************',
          ),
        ),
        1 => 
        array (
          'name' => 'EcuInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定ECU进行扩容。获取ecuid，请参见[ListScaleOutEcu](~~149371~~)。多个ECU，用半角逗号（,）分开。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '8123db90-880f-486f-b***************',
          ),
        ),
        2 => 
        array (
          'name' => 'DeployGroup',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要扩容的应用实例分组。获取应用实例分组，请参见[QueryApplicationStatus](~~149394~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '4f1fb6f5-6769-4bd6******************',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。可以调用GetChangeOrderInfo接口获取这次扩容具体执行进展，更多信息，请参见[GetChangeOrderInfo](~~62072~~)。',
                'type' => 'string',
                'example' => 'f4208118-7171-4e20-92************',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-***********************',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"f4208118-7171-4e20-92************\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-***********************\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<ChangeOrderId>f4208118-7171-4e20-92************</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '扩容应用实例',
      'summary' => '调用ScaleOutApplication接口扩容应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ScaleInApplication' => 
    array (
      'path' => '/pop/v5/changeorder/co_scale_in',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，您可通过查询[ListApplication](~~149390~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '3616cdca-4f92-44***********************',
          ),
        ),
        1 => 
        array (
          'name' => 'EccInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用下需要缩容的机器的eccid，多个用“,”分开，您可以通过调用[QueryApplicationStatus](~~149394~~)接口获取eccid。',
            'type' => 'string',
            'required' => true,
            'example' => '7040f221-42df-48e8-9*******************',
          ),
        ),
        2 => 
        array (
          'name' => 'ForceStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否要强制下线，一般只有ECS过期了才会设为true，正常情况不用填写。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID，调用[GetChangeOrderInfo](~~62072~~)接口获取这次下线具体执行进展。如果forceStatus置为true则不产生ID，根据code判断是否成功。',
                'type' => 'string',
                'example' => 'ddf5a4c7-a507-4a6e****************',
              ),
              'Code' => 
              array (
                'description' => 'code码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => 'success',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"ddf5a4c7-a507-4a6e****************\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<ChangeOrderId>ddf5a4c7-a507-4a6e****************</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '缩容应用实例',
      'summary' => '使用ScaleInApplication缩容应用实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ResetApplication' => 
    array (
      'path' => '/pop/v5/changeorder/co_reset',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可通过[ListApplication](~~149390~~)获取。',
            'type' => 'string',
            'required' => true,
            'example' => '3616cdca-4f92*********',
          ),
        ),
        1 => 
        array (
          'name' => 'EccInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用下需要重置机器的eccid，多个用半角逗号（,）分隔，可通过调用[QueryApplicationStatus](~~149394~~)接口获取eccid。',
            'type' => 'string',
            'required' => true,
            'example' => '0cf49a6c-***********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID，调用[GetChangeOrderInfo](~~62072~~)接口获取这次重置具体执行进展。',
                'type' => 'string',
                'example' => '1c66548e-a082-40************',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-*********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"1c66548e-a082-40************\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-*********\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<ChangeOrderId>1c66548e-a082-40************</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '重置应用',
      'summary' => '重置一个应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RestartApplication' => 
    array (
      'path' => '/pop/v5/changeorder/co_restart',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。可以通过调用ListApplication接口获取，具体操作，请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c627c157-560d*******',
          ),
        ),
        1 => 
        array (
          'name' => 'EccInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用中需要重启的ECS实例的EccId。可以通过调用QueryApplicationStatus接口获取EccId，具体操作，请参见[QueryApplicationStatus](~~149394~~)。
- 如果包含多个EccId，用半角逗号（,）分隔。
- 不设置该参数，表示重启该应用中的所有实例。',
            'type' => 'string',
            'required' => false,
            'example' => '006c0ea5-5f8d-4398-af1e-**********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。

可以调用GetChangeOrderInfo接口查询此次重启的详细执行进展，具体操作，请参见[GetChangeOrderInfo](~~62072~~)。',
                'type' => 'string',
                'example' => 'a9557bac-ddd7-*********************',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-****************',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"a9557bac-ddd7-*********************\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-****************\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<ChangeOrderId>a9557bac-ddd7-*********************</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '重启应用',
      'summary' => '适用于ECS应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateK8sService' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_service',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5a166fbd-****-****-a286-781659d9f54c',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s Service名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'service-http',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s服务类型，当前只支持ClusterIP类型。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ClusterIP',
          ),
        ),
        3 => 
        array (
          'name' => 'ServicePorts',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s Service端口映射表，需要符合JsonArray格式，支持的参数如下：

- **protocol**：必填，服务协议，支持TCP和UDP。
- **port**：必填，前端服务端口，取值范围1~65535。
- **targetPort**：必填，后端容器端口，取值范围1~65535。

参考示例：
`[{"protocol": "TCP", "port": 80, "targetPort": 8080},{"protocol": "TCP", "port": 81, "targetPort": 8081}]`',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[{"protocol":"TCP","port":80,"targetPort":8080}]',
          ),
        ),
        4 => 
        array (
          'name' => 'ExternalTrafficPolicy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置外部流量管理策略：
- Local：Local模式。
- Cluster：Cluster模式。

默认为Local模式。',
            'type' => 'string',
            'required' => false,
            'example' => 'Local',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。',
                'type' => 'string',
                'example' => 'b4b37bde-a125-****-****-741f7f4a9ae3',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4823-bhjf-23u4-eiufh',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"b4b37bde-a125-****-****-741f7f4a9ae3\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"4823-bhjf-23u4-eiufh\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>4823-bhjf-23u4-eiufh</RequestId>\\n<Message>success</Message>\\n<ChangeOrderId>b4b37bde-a125-****-****-741f7f4a9ae3</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '创建K8s服务',
      'summary' => '为K8s集群中的应用创建K8s服务Service。',
      'requestParamsDescription' => '> - 在同一个集群中不能存在相同的nodePort。
> - 在同一个K8s Service中，不能存在protocol和port都相同的端口映射。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteK8sApplication' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_apps',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID（查询ListApplication接口获取）。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dbac7e3c-****-49bc-b6de-ffc550018b45',
          ),
        ),
        1 => 
        array (
          'name' => 'Force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制删除应用，跳过应用删除保护。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '如果被删除应用有机器没有下线，或者SLB未解绑，此时会生成变更流程ID，并进行删除。调用GetChangeOrderInfo接口获取这次删除具体执行进展。根据Code判断是否删除成功。',
                'type' => 'string',
                'example' => '0a34531a-****-49dc-8e7f-0cbbbfa12cf0',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'a5281053-08e4-47a5-b2ab-5c0323******',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"0a34531a-****-49dc-8e7f-0cbbbfa12cf0\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"a5281053-08e4-47a5-b2ab-5c0323******\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<ChangeOrderId>0a34531a-****-49dc-8e7f-0cbbbfa12cf0</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '删除容器服务K8s应用',
      'summary' => '调用DeleteK8sApplication接口删除容器服务K8s应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteK8sService' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_service',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5a166fbd***a286-781659d9f54c',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'service-http',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。',
                'type' => 'string',
                'example' => 'b4b37bde-a125-43fc-****-741f7f4a9ae3',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9041389c-*****-459c-8253-724bca7f51f0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"b4b37bde-a125-43fc-****-741f7f4a9ae3\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"9041389c-*****-459c-8253-724bca7f51f0\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>9041389c-*****-459c-8253-724bca7f51f0</RequestId>\\n<Message>success</Message>\\n<ChangeOrderId>b4b37bde-a125-43fc-****-741f7f4a9ae3</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '删除K8s服务',
      'summary' => '删除K8s集群中应用的K8s服务Service。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateK8sApplicationBaseInfo' => 
    array (
      'path' => '/pop/v5/oam/update_app_basic_info',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待修改的应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '4f038ddf-b27b-****-****-88e44375****',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用描述，不超过256个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'app for pre-production',
          ),
        ),
        2 => 
        array (
          'name' => 'Owner',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用负责人，不超过128个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '张三',
          ),
        ),
        3 => 
        array (
          'name' => 'PhoneNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用负责人电话号码。',
            'type' => 'string',
            'required' => false,
            'example' => '1361234xxxx',
          ),
        ),
        4 => 
        array (
          'name' => 'Email',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用负责人电子邮箱。',
            'type' => 'string',
            'required' => false,
            'example' => 'mymail@example.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '57F146F6-3C94-****-****-A66EF4B9*****',
              ),
              'Result' => 
              array (
                'description' => '修改结果。',
                'type' => 'string',
                'example' => 'success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"57F146F6-3C94-****-****-A66EF4B9*****\\",\\n  \\"Result\\": \\"success\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>57F146F6-3C94-****-****-A66EF4B9*****</RequestId>\\n<Code>200</Code>\\n<Result>success</Result>","errorExample":""}]',
      'title' => '更新K8s应用基本信息',
      'summary' => '调用UpdateK8sApplicationBaseInfo接口修改K8s应用基本信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateK8sApplicationConfig' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_app_configuration',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可以调用ListApplication接口获取，详情请参见[ListApplication](~~423162~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '23bf94d9-****-4994-9917-616a827aa777',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID，可以调用ListCluster接口获取，详情请参见[ListCluster](~~411844~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '9c28bbb9-****-44b3-b953-54ef8a2d0be2',
          ),
        ),
        2 => 
        array (
          'name' => 'CpuLimit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用运行过程中，应用实例的CPU限额，单位：核。设置为0表示不做限制。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'MemoryLimit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用运行过程中，应用实例的内存限额，单位：MB。设置为0表示不做限制。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '4',
          ),
        ),
        4 => 
        array (
          'name' => 'McpuLimit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'CPU能使用的最大值，单位：核数。设置为0表示不做限制。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'CpuRequest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用运行过程中，应用实例需要申请的CPU配额，推荐设置。单位：核数，设置为0表示不限制。

> 设置该参数时，还需要设置CpuLimit参数，且需要小于等于CpuLimit的参数值。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'McpuRequest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'CPU最小资源需求，单位：核数。设置为0表示不限制。

> 设置该参数时，还需要设置CpuLimit参数，且需要小于等于CpuLimit的参数值。',
            'type' => 'string',
            'required' => false,
            'example' => '1000',
          ),
        ),
        7 => 
        array (
          'name' => 'MemoryRequest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用运行过程中，应用实例需要申请的内存配额，推荐设置。单位：MB。设置为0表示不申请。

> 设置该参数时，还需要设置MemoryLimit参数，且需要小于等于MemoryLimit的参数值。',
            'type' => 'string',
            'required' => false,
            'example' => '400',
          ),
        ),
        8 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变更流程超时时间，单位：秒。取值范围1~1800秒，默认值为600秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
        9 => 
        array (
          'name' => 'EphemeralStorageRequest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '临时存储最小资源需求，单位：GB。设置0表示不限制。

> 设置该参数时，还需要设置EphemeralStorageLimit参数，且需要小于等于EphemeralStorageLimit的参数值。',
            'type' => 'string',
            'required' => false,
            'example' => '2',
          ),
        ),
        10 => 
        array (
          'name' => 'EphemeralStorageLimit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '临时存储资源需求上限，单位：GB。设置0表示不限制。',
            'type' => 'string',
            'required' => false,
            'example' => '4',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。',
                'type' => 'string',
                'example' => '8806d1c6-****-48eb-9373-6bdef3007466',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4823-bhjf-23u4-****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.K8SAppConfiguration.UpdateFail',
            'errorMessage' => 'Failed to set app configuration.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"8806d1c6-****-48eb-9373-6bdef3007466\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"4823-bhjf-23u4-****\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<ChangeOrderId>8806d1c6-87ab-48eb-9373-6bdef3007466</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '修改K8s集群中应用配置',
      'summary' => '调用UpdateK8sApplicationConfig接口修改容器服务K8s或Serverless K8s集群中应用的配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StartK8sApplication' => 
    array (
      'path' => '/pop/v5/k8s/acs/start_k8s_app',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Replicas',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '启动的应用实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        1 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变更流程超时时间，单位秒，取值范围1~1800秒，不填默认值为600秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
        2 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可通过调用ListApplication接口来获取，详情请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '93fdd228-*******-ed2ae98de18d',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '此次操作的变更流程ID。',
                'type' => 'string',
                'example' => '*********d237-4827-a4f4-ed2ae98de18d',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '03FD1520-0FD6-436A-****-265318D7****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"*********d237-4827-a4f4-ed2ae98de18d\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"03FD1520-0FD6-436A-****-265318D7****\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>03FD1520-0FD6-436A-****-265318D7****</RequestId>\\n<Message>success</Message>\\n<ChangeOrderId>*********d237-4827-a4f4-ed2ae98de18d</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '启动K8s应用',
      'summary' => '启动容器服务K8s或Serverless K8s集群中的应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StopK8sApplication' => 
    array (
      'path' => '/pop/v5/k8s/acs/stop_k8s_app',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可通过调用ListApplication接口来获取，详情请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '93fdd228-d237-*******8de18d',
          ),
        ),
        1 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变更流程超时时间，单位：秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '此次变更的变更流程ID。',
                'type' => 'string',
                'example' => '*******27-a4f4-ed2ae98de18d',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '03FD1520-0FD6-436A-****-265318D7****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"*******27-a4f4-ed2ae98de18d\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"03FD1520-0FD6-436A-****-265318D7****\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>03FD1520-0FD6-436A-****-265318D7****</RequestId>\\n<Message>success</Message>\\n<ChangeOrderId>*******27-a4f4-ed2ae98de18d</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '停止K8s应用',
      'summary' => '停止部署在容器服务K8s集群或Serverless K8s集群中的应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateK8sSlb' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_slb_binding',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可以通过调用[ListApplication](~~149390~~)获取。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5a166fbd-****-****-a286-781659d9f54c',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID，可以通过调用[GetK8sCluster](~~181437~~)获取。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '712082c3-****-****-9217-a947b5cde6ee',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置SLB的类型：

* Internet：公网。
* Intranet：私网。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Internet',
          ),
        ),
        3 => 
        array (
          'name' => 'SlbProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB协议，目前仅支持TCP。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'TCP',
          ),
        ),
        4 => 
        array (
          'name' => 'TargetPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端端口，即应用的服务端口，范围1~65535。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '8082',
          ),
        ),
        5 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前端端口，范围1~65535。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '80',
          ),
        ),
        6 => 
        array (
          'name' => 'ServicePortInfos',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '多个端口需求以及非TCP协议需求填写字段。必须符合JsonArray格式，参考示例：
[{"targetPort":8080,"port":82,"loadBalancerProtocol":"TCP"},{"port":81,"certId":"1362469756373809_16c185d6fa2_1914500329_-xxxxxxx","targetPort":8181,"lo
adBalancerProtocol":"HTTPS"}]
- port：必填，前端端口，范围1~65535。不能重复。
- targetPort：必填，后端端口，范围1~65535。
- loadBalancerProtocol：必填，只支持TCP和HTTPS，对于HTTP类型的填写TCP即可。
- certId：如果是HTTPS，则该参数必填证书ID，可以在slb控制台进行购买。
- 注意该参数用来支持多端口支持，需要配合appId、clusterId、type、slbId进行使用。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '{"targetPort":8080,"port":82,"loadBalancerProtocol":"TCP"},{"port":81,"certId":"136246975637380916c185d6fa21914500329_-xxxxxxx","targetPort":8181,"lo adBalancerProtocol":"HTTPS"}',
          ),
        ),
        7 => 
        array (
          'name' => 'Specification',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB规格，目前支持以下SLB实例的规格：
* slb.s1.small
* slb.s2.small
* slb.s2.medium
* slb.s3.small
* slb.s3.medium
* slb.s3.large

不填默认为slb.s1.small。

',
            'type' => 'string',
            'required' => false,
            'example' => 'slb.s1.small',
          ),
        ),
        8 => 
        array (
          'name' => 'Scheduler',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB调度算法。不填写则默认值为rr。支持负载均衡支持轮询 (rr)、加权轮询 (wr) 两种调度算法。

- 加权轮询 (wrr)：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- 轮询 (rr)：按照访问顺序依次将外部请求分发到后端服务器。',
            'type' => 'string',
            'required' => false,
            'example' => 'wrr',
          ),
        ),
        9 => 
        array (
          'name' => 'SlbName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'SLB_doctest',
          ),
        ),
        10 => 
        array (
          'name' => 'DisableForceOverride',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '禁止覆盖SLB监听配置：
* true：禁止覆盖。
* false：允许覆盖。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。',
                'type' => 'string',
                'example' => '9a1dcdee-****-****-ad37-cbf9dc91fba9',
              ),
              'Code' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4823-bhjf-23u4-eiufh',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"9a1dcdee-****-****-ad37-cbf9dc91fba9\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"4823-bhjf-23u4-eiufh\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>4823-bhjf-23u4-eiufh</RequestId>\\n<Message>success</Message>\\n<ChangeOrderId>9a1dcdee-****-****-ad37-cbf9dc91fba9</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '更新K8s负载均衡SLB',
      'summary' => '调用UpdateK8sSlb更新容器服务K8s应用绑定的负载均衡SLB。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateK8sService' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_service',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5a166fbd-****-****-a286-781659d9f54c',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s Service名称，需要遵循以下规范：

- 仅支持小写字母、数字和短划线（-）。
- 只能以字母开头，并且以字母或数字结尾。
- 长度范围为2~32字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'service-http',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s服务类型，当前只支持ClusterIP类型。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ClusterIP',
          ),
        ),
        3 => 
        array (
          'name' => 'ServicePorts',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s Service端口映射表，需要符合JsonArray格式，支持的参数如下：
- **protocol**：必填，服务协议，支持TCP和UDP。
- **port**：必填，前端服务端口，取值范围1~65535。
- **targetPort**：必填，后端容器端口，取值范围1~65535。

参考示例：
`[{"protocol": "TCP", "port": 80, "targetPort": 8080},{"protocol": "TCP", "port": 81, "targetPort": 8081}]`',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '[{"protocol":"TCP","port":80,"targetPort":8080}]',
          ),
        ),
        4 => 
        array (
          'name' => 'ExternalTrafficPolicy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置外部流量管理策略：
- Local：Local模式。
- Cluster：Cluster模式。

默认为Local模式。',
            'type' => 'string',
            'required' => false,
            'example' => 'Local',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。',
                'type' => 'string',
                'example' => 'b4b37bde-a125-****-****-741f7f4a9ae3',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4823-bhjf-23u4-eiufh',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"b4b37bde-a125-****-****-741f7f4a9ae3\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"4823-bhjf-23u4-eiufh\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>4823-bhjf-23u4-eiufh</RequestId>\\n<Message>success</Message>\\n<ChangeOrderId>b4b37bde-a125-****-****-741f7f4a9ae3</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '更新K8s服务',
      'summary' => '更新K8s集群中应用的K8s服务Service。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateSlsLogStore' => 
    array (
      'path' => '/pop/v5/k8s/sls/update_sls_log_store',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '应用ID，可通过调用ListApplication接口获取，详情请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af58edcf-f7eb-****-****-db4e425f****',
          ),
        ),
        1 => 
        array (
          'name' => 'Configs',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'Logstore配置：
- **Configs**：
    - **type**：采集类型，文件类型为file，标准输出类型为stdout。
    - **Logstore**：Logstore名称。请确保Logstore名称在同一个集群中不重复，其命名应符合规则：
        - 日志库名称仅支持小写字母、数字、短划线（-）和下划线（_）。
        -  必须以小写字母和数字开头和结尾。
        -  名称长度为3~63个字符。
        
        > 若为空，则由系统自动生成。
      
    - **LogDir**：若为标准输出类型，则采集路径为stdout.log，若为文件类型，则为采集的文件路径，支持通配符，采集路径应符合正则：`^/(.+)/(.*)[^/]$`。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[{"logstore":"thisisanotherfilelog","type":"file","logDir":"/var/log/*"},{"logstore":"","type":"stdout","logDir":"stdout.log"},{"logstore":"thisisafilelog","type":"file","logDir":"/tmp/log/*"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'D16979DC-4D42-**************',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-**************\\"\\n}","errorExample":""},{"type":"xml","example":"<code>200</code>\\n<message>success</message>\\n<requestId>D16979DC-4D42-**************</requestId>","errorExample":""}]',
      'title' => '配置应用的日志服务',
      'summary' => '调用UpdateSlsLogStore接口配置应用的日志服务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StartK8sAppPrecheck' => 
    array (
      'summary' => '调用StartK8sAppPrecheck接口开始K8s应用变更预检。',
      'path' => '/pop/v5/k8s/app_precheck',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'c37aec2a-bcca-4ec1-****-****',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s集群的命名空间，它将决定您的应用部署在哪个K8s命名空间。默认为default。',
            'type' => 'string',
            'required' => true,
            'example' => 'default',
          ),
        ),
        2 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'af58edcf-f7eb-****-****-db4e425f****',
          ),
        ),
        3 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用名称。必须以字母开头，支持数字、字母和短划线（-），最多支持36个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'testapp',
          ),
        ),
        4 => 
        array (
          'name' => 'Replicas',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        5 => 
        array (
          'name' => 'LimitmCpu',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用运行过程中，应用实例的CPU限额。 单位：毫核数，设置为0表示不限制。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1000',
          ),
        ),
        6 => 
        array (
          'name' => 'RequestsmCpu',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用创建时，应用实例的CPU限额，单位：毫核数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '500',
          ),
        ),
        7 => 
        array (
          'name' => 'LimitMem',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用运行过程中，应用实例的内存限额，单位：MB。LimitMem取值要不小于RequestsMem。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '4096',
          ),
        ),
        8 => 
        array (
          'name' => 'RequestsMem',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用创建时，应用实例的内存限额，单位：MB。设置为0时表示不限制。RequestsMem的取值不能大于LimitMem的取值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1024',
          ),
        ),
        9 => 
        array (
          'name' => 'LimitEphemeralStorage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '临时存储资源需求上限，单位：GB。设置0表示不限制。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '4',
          ),
        ),
        10 => 
        array (
          'name' => 'RequestsEphemeralStorage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '临时存储最小资源需求，单位：GB。设置0表示不限制。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        11 => 
        array (
          'name' => 'Envs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署环境变量，格式需要符合JSON对象数组。支持三种类型的环境变量，分别是普通环境变量，K8s ConfigMap环境变量，K8s Secret环境变量。普通环境变量格式如下所示：

`{"name":"x", "value": "y"}`

ConfigMap环境变量配置可以将指定的ConfigMap中对应的key的值注入到容器的环境变量中，配置的格式如下所示：

`{
  "name": "x2",
  "valueFrom": {
    "configMapKeyRef": {
      "name": "my-config",
      "key": "y2"
    }
  }
}`

Secret环境变量配置可以将指定的Secret中对应的key的值注入到容器的环境变量中，配置的格式如下所示：

`{
  "name": "x3",
  "valueFrom": {
    "secretKeyRef": {
      "name": "my-secret",
      "key": "y3"
    }
  }
}`

> 如果要取消该配置，需设置一个空JSON数组“[]”来表示不做配置。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"name":"x1","value":"y1"},{"name":"x2","valueFrom":{"configMapKeyRef":{"name":"my-config","key":"y2"}}},{"name":"x3","valueFrom":{"secretKeyRef":{"name":"my-secret","key":"y3"}}}]',
          ),
        ),
        12 => 
        array (
          'name' => 'EnvFroms',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置K8s EnvFrom类型的环境变量，将指定的ConfigMap或Secret挂载到指定目录，每个key对应目录下的一个文件，文件的内容为该key对应的value。

EnvFroms的配置参数说明如下：
 - configMapRef：ConfigMap引用，该字段包括以下参数：

    name：ConfigMap名称。

- secretRef：Secret引用，该字段包括以下参数：

   name：Secret名称。',
            'type' => 'string',
            'required' => false,
            'example' => '[
      {
            "name": "appname",
            "valueFrom": {
                  "configMapKeyRef": {
                        "name": "appconf"
                  }
            }
      }
]',
          ),
        ),
        13 => 
        array (
          'name' => 'EmptyDirs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置K8s emptyDir挂载，支持将emptyDir卷挂载到指定的容器目录。EmptyDirs的配置参数说明如下：

- mountPath：容器挂载路径，必填。
- readOnly：是否只读，可选，true为只读，false为读写，默认为false。
- subPathExpr：子目录表达式，可选。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"mountPath":"/app-log","subPathExpr":"$(POD_IP)"},{"readOnly":true,"mountPath":"/etc/nginx"}]',
          ),
        ),
        14 => 
        array (
          'name' => 'JavaStartUpConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Java启动参数用于在Java应用启动时配置启动参数。可配置：内存配置、应用、GC策略、工具、服务注册和发现配置和自定义等配置，正确配置这些参数有助于降低垃圾回收（GC）开销，从而缩短服务器响应时间并提高吞吐量。参数格式为JSON字符串：original为配置值，startup为启动参数，系统将自动拼接所有的startup作为应用程序的Java启动参数。设置为`""`或`"{}"`表示删除配置。JSON中key取值如下：

- InitialHeapSize：代表初始化堆大小。
- MaxHeapSize：代表最大堆大小。
- CustomParams：代表用户自定义内容，如JVM -D参数等。
- 其它情况：可自行查看前端提交的JSON结构。',
            'type' => 'string',
            'required' => false,
            'example' => '{"InitialHeapSize":{"original":512,"startup":"-Xms512m"},"MaxHeapSize":{"original":1024,"startup":"-Xmx1024m"}}',
          ),
        ),
        15 => 
        array (
          'name' => 'ConfigMountDescs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置K8s ConfigMap和Secret挂载，支持将ConfigMap和Secret挂载到指定的容器目录。ConfigMountDescs的配置参数说明如下：
- name：ConfigMap或Secret的名称。
- type：配置类型，支持ConfigMap和Secret两种类型。
- mountPath：挂载路径，以正斜线（/）开头的容器绝对路径。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"name":"nginx-config","type":"ConfigMap","mountPath":"/etc/nginx"},{"name":"tls-secret","type":"secret","mountPath":"/etc/ssh"}]',
          ),
        ),
        16 => 
        array (
          'name' => 'PvcMountDescs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置K8s PVC（PersistentVolumeClaim）挂载，支持将K8s PVC卷挂载到指定的容器目录。PvcMountDescs的配置参数说明如下：

- pvcName：PVC卷名称，PVC卷必须已经存在，且处于Bound状态。
-  mountPaths：挂载目录列表，支持配置多个挂载目录。每个挂载目录支持两个配置参数。
    * mountPath：挂载路径，以正斜线（/）开头的容器绝对路径。
    * readOnly：挂载模式，true为只读，false为可读写，默认为false。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"pvcName":"nas-pvc-1","mountPaths":[{"mountPath":"/usr/share/nginx/data"},{"mountPath":"/usr/share/nginx/html","readOnly":true}]}]',
          ),
        ),
        17 => 
        array (
          'name' => 'Annotations',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用Pod注解。',
            'type' => 'string',
            'required' => false,
            'example' => '{"annotation-name-1":"annotation-value-1","annotation-name-2":"annotation-value-2"}',
          ),
        ),
        18 => 
        array (
          'name' => 'Labels',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用Pod标签。',
            'type' => 'string',
            'required' => false,
            'example' => '{"label-name-1":"label-value-1","label-name-2":"label-value-2"}',
          ),
        ),
        19 => 
        array (
          'name' => 'ImageUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像URL。',
            'type' => 'string',
            'required' => false,
            'example' => 'registry.cn-hangzhou.aliyuncs.com/mw/testapp:latest',
          ),
        ),
        20 => 
        array (
          'name' => 'PackageUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署包地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://e***.oss-cn-beijing.aliyuncs.com/s***-1.0-SNAPSHOT-spring-boot.jar',
          ),
        ),
        21 => 
        array (
          'name' => 'LocalVolume',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '宿主机文件挂载到容器内的配置。例如：`\\[{"type":"","nodePath":"/localfiles","mountPath":"/app/files"},{"type":"Directory","nodePath":"/mnt","mountPath":"/app/storage"}\\]`。其中：

- `nodePath`为宿主机路径。

- `mountPath`为容器内的路径。

- `type`为挂载类型。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"type":"","nodePath":"/localfiles","mountPath":"/app/files"},{"type":"Directory","nodePath":"/mnt","mountPath":"/app/storage"}]',
          ),
        ),
        22 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阿里云地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        23 => 
        array (
          'name' => 'ComponentIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用组件ID。可通过查询组件列表接口ListComponents接口获取。当创建的应用运行环境使用Apache Tomcat（适用于WAR包部署的Dubbo应用）或者标准Java应用运行环境（适用于JAR包部署的Spring Boot或Spring Cloud应用）时需要指定。

常用的应用组件ID及含义：
* 4：Apache Tomcat 7.0.91。
* 5：表示OpenJDK 1.8.x。
* 6：表示 OpenJDK 1.7.x。
* 7：Apache Tomcat 8.5.42。

该参数需要更新Java或者Python SDK版本到2.57.3或以上版本才可以设置，未使用EDAS提供的SDK的（例如在使用aliyun-python-sdk-core、aliyun-java-sdk-core、aliyun cli等）用户可直接设置该参数。',
            'type' => 'string',
            'required' => false,
            'example' => '7',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7638276F-****-****-884F-54CC0BC84A8D',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息 。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '接口返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Jobs' => 
                  array (
                    'description' => '任务列表及任务详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '任务名称。',
                      'type' => 'string',
                      'example' => '集群健康检查。',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"7638276F-****-****-884F-54CC0BC84A8D\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": {\\n    \\"Jobs\\": [\\n      \\"集群健康检查。\\"\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '开始K8s应用变更预检',
    ),
    'GetK8sApplication' => 
    array (
      'path' => '/pop/v5/changeorder/co_application',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可通过调用ListApplication接口获取，详情请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5a166fbd-****-4f98-a286-781659d9****',
          ),
        ),
        1 => 
        array (
          'name' => 'From',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询来源：
- 为空表示普通查询。
- deploy表示从部署页面进入查询。',
            'type' => 'string',
            'required' => false,
            'example' => 'deploy',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1053-08e4-47a5-b2ab-5c0323de7b5a',
              ),
              'Applcation' => 
              array (
                'description' => '应用信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'AppId' => 
                  array (
                    'description' => '应用ID，可通过调用ListApplication接口来获取，详情请参见[ListApplication](~~149390~~)。',
                    'type' => 'string',
                    'example' => 'a5281053-****-47a5-b2ab-5c0323de****',
                  ),
                  'DeployGroups' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'DeployGroup' => 
                      array (
                        'description' => '部署分组列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '部署分组对象。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Components' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Components' => 
                                array (
                                  'description' => '组件信息。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '组件对象。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Type' => 
                                      array (
                                        'description' => '组件类型。',
                                        'type' => 'string',
                                        'example' => 'JDK',
                                      ),
                                      'ComponentKey' => 
                                      array (
                                        'description' => '组件关键字。',
                                        'type' => 'string',
                                        'example' => 'Open JDK 8',
                                      ),
                                      'ComponentId' => 
                                      array (
                                        'description' => '组件ID。',
                                        'type' => 'string',
                                        'example' => '5',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'Env' => 
                            array (
                              'description' => '环境变量，相对于EnvList字段，本字段透出对ConfigMap/Secret引用的相关配置信息。',
                              'type' => 'string',
                              'example' => '"["{\\"name\\":\\"test1\\",\\"valueFrom\\":{\\"configMapKeyRef\\":{\\"name\\":\\"edas-demo-configmap\\",\\"key\\":\\"key1\\"}}}","{\\"name\\":\\"k2\\",\\"value\\":\\"v2\\"}","{\\"name\\":\\"s1\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"name\\":\\"edas-demo-secret\\",\\"key\\":\\"k1\\"}}}"]"',
                            ),
                            'EnvFrom' => 
                            array (
                              'description' => '环境变量来源。',
                              'type' => 'string',
                              'example' => '[{"configMapRef":{"name":"test-cm"}}]',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'ImageInfo' => 
                  array (
                    'description' => '镜像信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'RepoId' => 
                      array (
                        'description' => '镜像仓库ID。',
                        'type' => 'string',
                        'example' => 'cn-hangzhou',
                      ),
                      'ImageUrl' => 
                      array (
                        'description' => '镜像URL。',
                        'type' => 'string',
                        'example' => 'registry.cn-beijing.aliyuncs.com/edas-serverless-****/1314839****06888_shared_repo:5a166fbd-9d76-4f98-****-78165****c_1572***282',
                      ),
                      'RepoOriginType' => 
                      array (
                        'description' => '镜像仓库来源类型。',
                        'type' => 'string',
                        'example' => 'ALI_HUB',
                      ),
                      'Tag' => 
                      array (
                        'description' => '镜像Tag。',
                        'type' => 'string',
                        'example' => '5a166fbd-9d76-4f98-****-781659d9f54c_1572485443282',
                      ),
                      'RepoName' => 
                      array (
                        'description' => '镜像仓库名称。',
                        'type' => 'string',
                        'example' => '131****067006888_shared_repo',
                      ),
                      'RepoNamespace' => 
                      array (
                        'description' => '镜像仓库命名空间。',
                        'type' => 'string',
                        'example' => 'edas-server****-user',
                      ),
                      'RegionId' => 
                      array (
                        'description' => '镜像地域ID。',
                        'type' => 'string',
                        'example' => 'cn-beijing',
                      ),
                    ),
                  ),
                  'App' => 
                  array (
                    'description' => '应用基础信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'RequestMem' => 
                      array (
                        'description' => '内存资源预留，单位MiB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1024',
                      ),
                      'InstancesBeforeScaling' => 
                      array (
                        'description' => '上次伸缩前的应用实例数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '10',
                      ),
                      'DeployType' => 
                      array (
                        'description' => '部署类型，可选值为：Image。',
                        'type' => 'string',
                        'example' => 'Image',
                      ),
                      'ApplicationName' => 
                      array (
                        'description' => '应用名称。',
                        'type' => 'string',
                        'example' => 'test',
                      ),
                      'ApplicationType' => 
                      array (
                        'description' => '应用类型。',
                        'type' => 'string',
                        'example' => 'War',
                      ),
                      'Instances' => 
                      array (
                        'description' => '应用实例数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '4',
                      ),
                      'LimitMem' => 
                      array (
                        'description' => '内存资源限制，单位MiB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1024',
                      ),
                      'Cmd' => 
                      array (
                        'description' => '启动命令。',
                        'type' => 'string',
                        'example' => 'ls',
                      ),
                      'RegionId' => 
                      array (
                        'description' => '地域ID。',
                        'type' => 'string',
                        'example' => 'cn-hangzhou',
                      ),
                      'BuildpackId' => 
                      array (
                        'description' => '应用构建类型ID。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '57',
                      ),
                      'TomcatVersion' => 
                      array (
                        'description' => 'Apache Tomcat版本。',
                        'type' => 'string',
                        'example' => '8.5.55',
                      ),
                      'CsClusterId' => 
                      array (
                        'description' => '容器集群ID。',
                        'type' => 'string',
                        'example' => 'c383bc813c1974e****451b50c0c8****',
                      ),
                      'RequestCpuM' => 
                      array (
                        'description' => 'CPU资源请求，单位为毫核，1000为1核CPU。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1000',
                      ),
                      'AppId' => 
                      array (
                        'description' => '应用ID，可通过调用ListApplication接口获取，详情请参见[ListApplication](~~149390~~)。',
                        'type' => 'string',
                        'example' => '00ee517d-dd7d-4d4e-****-****',
                      ),
                      'K8sNamespace' => 
                      array (
                        'description' => 'K8s命名空间。',
                        'type' => 'string',
                        'example' => 'default',
                      ),
                      'EdasContainerVersion' => 
                      array (
                        'description' => 'EDAS容器版本。',
                        'type' => 'string',
                        'example' => '3.60.0',
                      ),
                      'LimitCpuM' => 
                      array (
                        'description' => 'CPU资源限制，单位为毫核，1000为1核CPU。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1000',
                      ),
                      'ClusterId' => 
                      array (
                        'description' => '集群ID。',
                        'type' => 'string',
                        'example' => 'c37aec2a-bcca-4ec1-****-****',
                      ),
                      'EnvList' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Env' => 
                          array (
                            'description' => '环境变量列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '环境变量对象。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Name' => 
                                array (
                                  'description' => '环境变量名称。',
                                  'type' => 'string',
                                  'example' => 'CATALINA_OPTS',
                                ),
                                'Value' => 
                                array (
                                  'description' => '环境变量值。',
                                  'type' => 'string',
                                  'example' => '-Xmx 1024m -Dhsf.default.tid=false $(EDAS_CATALINA_OPTS)',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                      'CmdArgs' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'CmdArg' => 
                          array (
                            'description' => '命令列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '命令参数。',
                              'type' => 'string',
                              'example' => '-lh',
                            ),
                          ),
                        ),
                      ),
                      'DevelopType' => 
                      array (
                        'description' => '应用类型：
* General: 原生Java应用。
* Pandora: Pandora应用。
* Multilingual: 多语言应用。',
                        'type' => 'string',
                        'example' => 'General',
                      ),
                      'SlbInfo' => 
                      array (
                        'description' => 'SLB配置信息。',
                        'type' => 'string',
                        'example' => '[
  {
    "addressType": "intranet",
    "externalTrafficPolicy": "Local",
    "ip": "192.168.254.***",
    "name": "intranet-testapp",
    "portMappings": [
      {
        "loadBalancerProtocol": "TCP",
        "servicePort": {
          "port": 8080,
          "protocol": "TCP",
          "targetPort": 18081,
          "vServerGroupName": "k8s/31414/intranet-testapp/default/cc90e0c9508a44667bdae2e83d3******"
        }
      }
    ],
    "scheduler": "rr",
    "serviceType": "LoadBalancer",
    "slbId": "lb-bp1ikoh3nrpgqsm******",
    "source": "create",
    "specification": "slb.s3.large"
  }
]',
                      ),
                      'Annotations' => 
                      array (
                        'description' => '应用Pod注解。',
                        'type' => 'string',
                        'example' => '{"test-annokey":"test-annovalue"}',
                      ),
                      'Labels' => 
                      array (
                        'description' => '应用Pod标签。',
                        'type' => 'string',
                        'example' => '{"test-labelkey":"test-labelvalue"}',
                      ),
                      'LimitEphemeralStorage' => 
                      array (
                        'description' => '临时存储资源需求上限，单位：GB。设置0表示不限制。
',
                        'type' => 'string',
                        'example' => '4',
                      ),
                      'RequestEphemeralStorage' => 
                      array (
                        'description' => '临时存储资源需求预留，单位：GB。设置0表示不限制。',
                        'type' => 'string',
                        'example' => '2',
                      ),
                      'EnableEmptyPushReject' => 
                      array (
                        'description' => '应用是否开启了推空保护。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'EnableLosslessRule' => 
                      array (
                        'description' => '应用是否开启了无损上线。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'LosslessRuleAligned' => 
                      array (
                        'description' => '应用是否启用了无损滚动发布模式配置通过就绪检查前完成服务注册。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'LosslessRuleDelayTime' => 
                      array (
                        'description' => '应用配置的服务延迟注册时长，单位：秒。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '120',
                      ),
                      'LosslessRuleFuncType' => 
                      array (
                        'description' => '应用设置的服务预热曲线。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'LosslessRuleRelated' => 
                      array (
                        'description' => '应用是否启用了无损滚动发布模式配置通过就绪检查前完成服务预热。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'LosslessRuleWarmupTime' => 
                      array (
                        'description' => '应用设置的服务预热时长，单位：秒。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '120',
                      ),
                      'FeatureAnnotations' => 
                      array (
                        'description' => '当前应用的高级配置标签，展示启用了哪些特性功能。可能的枚举值如下：
- base.combination.edas: EDAS一体化管控方案。
- base.combination.arms: 启用ARMS监控。
- base.combination.mse: 启用MSE微服务之力。
- base.combination.none: 仅启用生命周期管理。',
                        'type' => 'string',
                        'example' => 'base.combination.edas',
                      ),
                      'WorkloadType' => 
                      array (
                        'description' => '创建应用时Workload的类型，目前支持Deployment和StatefulSet类型。留空时默认Deployment。',
                        'type' => 'string',
                        'example' => 'Deployment',
                      ),
                    ),
                  ),
                  'Conf' => 
                  array (
                    'description' => '配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PostStart' => 
                      array (
                        'description' => 'K8s容器启动后执行信息。',
                        'type' => 'string',
                        'example' => '{\\"exec\\":{\\"command\\":[\\"ls\\",\\"/\\"]}}"',
                      ),
                      'Readiness' => 
                      array (
                        'description' => 'K8s容器业务状态检查信息。',
                        'type' => 'string',
                        'example' => '{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"httpGet": {"path": "/consumer","port": 8080,"scheme": "HTTP","httpHeaders": \\[{"name": "test","value": "testvalue"}\\]}}',
                      ),
                      'AhasEnabled' => 
                      array (
                        'description' => '应用是否已接入AHAS。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'K8sCmdArgs' => 
                      array (
                        'description' => '启动命令参数。',
                        'type' => 'string',
                        'example' => '-lh',
                      ),
                      'Liveness' => 
                      array (
                        'description' => 'K8s容器存活状态监测信息。',
                        'type' => 'string',
                        'example' => '{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"tcpSocket":{"host":"", "port":8080}}',
                      ),
                      'DeployAcrossNodes' => 
                      array (
                        'description' => '是否将应用实例分布到多节点：
- `true`代表是。
- 其他值代表否。',
                        'type' => 'string',
                        'example' => 'true',
                      ),
                      'K8sCmd' => 
                      array (
                        'description' => '启动命令。',
                        'type' => 'string',
                        'example' => 'ls',
                      ),
                      'PreStop' => 
                      array (
                        'description' => 'K8s容器停止前执行信息。',
                        'type' => 'string',
                        'example' => '{\\"exec\\":{\\"command\\":[\\"ls\\",\\"/\\"]}}"',
                      ),
                      'DeployAcrossZones' => 
                      array (
                        'description' => '是否将应用实例分布到多可用区：
- `true`代表是。
- 其他值代表否。',
                        'type' => 'string',
                        'example' => 'true',
                      ),
                      'JarStartArgs' => 
                      array (
                        'description' => 'JAR启动参数，已废弃。',
                        'type' => 'string',
                        'example' => '-lh',
                      ),
                      'K8sNasInfo' => 
                      array (
                        'description' => 'NAS存储信息。',
                        'type' => 'string',
                        'example' => '[{"nasPath":"/mnt/","mountPath":"/mnt/"}]',
                      ),
                      'JarStartOptions' => 
                      array (
                        'description' => 'JAR启动选项，已废弃。',
                        'type' => 'string',
                        'example' => '-h',
                      ),
                      'RuntimeClassName' => 
                      array (
                        'description' => '容器运行时类型，仅适用于使用安全沙箱容器的集群。',
                        'type' => 'string',
                        'example' => 'runc',
                      ),
                      'K8sLocalvolumeInfo' => 
                      array (
                        'description' => '本地存储信息。',
                        'type' => 'string',
                        'example' => '[{"type":"","nodePath":"/mnt/","mountPath":"/mnt/"}]',
                      ),
                      'K8sVolumeInfo' => 
                      array (
                        'description' => '存储信息。',
                        'type' => 'string',
                        'example' => '"{\\"hostPaths\\":\\"[]\\",\\"emptyDirs\\":\\"[]\\"}"',
                      ),
                      'Affinity' => 
                      array (
                        'description' => 'Pod亲和性配置。',
                        'type' => 'string',
                        'example' => '"{\\"nodeAffinity\\":{\\"requiredDuringSchedulingIgnoredDuringExecution\\":{\\"nodeSelectorTerms\\":[{\\"matchExpressions\\":[{\\"key\\":\\"beta.kubernetes.io/arch\\",\\"operator\\":\\"NotIn\\",\\"values\\":[\\"arm64\\",\\"arm32\\"]}]}]},\\"preferredDuringSchedulingIgnoredDuringExecution\\":[{\\"weight\\":5,\\"preference\\":{\\"matchExpressions\\":[{\\"key\\":\\"kubernetes.io/os\\",\\"operator\\":\\"In\\",\\"values\\":[\\"linux\\"]}]}}]},\\"podAffinity\\":{\\"requiredDuringSchedulingIgnoredDuringExecution\\":[{\\"labelSelector\\":{\\"matchExpressions\\":[{\\"key\\":\\"edas.oam.acname\\",\\"operator\\":\\"NotIn\\",\\"values\\":[\\"edas-test-app\\"]}]},\\"namespaces\\":[\\"default\\"],\\"topologyKey\\":\\"kubernetes.io/hostname\\"}]},\\"podAntiAffinity\\":{\\"preferredDuringSchedulingIgnoredDuringExecution\\":[{\\"weight\\":15,\\"podAffinityTerm\\":{\\"labelSelector\\":{\\"matchExpressions\\":[{\\"key\\":\\"edas.oam.acname\\",\\"operator\\":\\"In\\",\\"values\\":[\\"edas-test-app-2\\"]}]},\\"namespaces\\":[\\"default\\"],\\"topologyKey\\":\\"failure-domain.beta.kubernetes.io/zone\\"}}]}}"',
                      ),
                      'Tolerations' => 
                      array (
                        'description' => 'Pod调度容忍配置。',
                        'type' => 'string',
                        'example' => '"[{\\"key\\":\\"edas-taint-key2\\",\\"operator\\":\\"Exists\\",\\"effect\\":\\"NoExecute\\",\\"tolerationSeconds\\":50},{\\"key\\":\\"edas-taint-key\\",\\"operator\\":\\"Equal\\",\\"value\\":\\"edas-taint-value\\",\\"effect\\":\\"PreferNoSchedule\\"}]"',
                      ),
                      'UserBaseImageUrl' => 
                      array (
                        'description' => '使用自定义OpenJDK运行时，配置的基础镜像地址。',
                        'type' => 'string',
                        'example' => 'openjdk:8u302',
                      ),
                    ),
                  ),
                  'LatestVersion' => 
                  array (
                    'description' => '最新版本信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Url' => 
                      array (
                        'description' => '部署包地址。通过FatJar或WAR包部署的应用需要配置部署包地址。',
                        'type' => 'string',
                        'example' => 'https://e***.oss-cn-beijing.aliyuncs.com/s***-1.0-SNAPSHOT-spring-boot.jar',
                      ),
                      'WarUrl' => 
                      array (
                        'description' => '部署包地址。通过FatJar或WAR包部署的应用需要配置部署包地址。',
                        'type' => 'string',
                        'example' => 'https://e***.oss-cn-beijing.aliyuncs.com/s***-1.0-SNAPSHOT-spring-boot.jar',
                      ),
                      'PackageVersion' => 
                      array (
                        'description' => '部署包的版本号。',
                        'type' => 'string',
                        'example' => '20200720',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"1053-08e4-47a5-b2ab-5c0323de7b5a\\",\\n  \\"Applcation\\": {\\n    \\"AppId\\": \\"a5281053-****-47a5-b2ab-5c0323de****\\",\\n    \\"DeployGroups\\": {\\n      \\"DeployGroup\\": [\\n        {\\n          \\"Components\\": {\\n            \\"Components\\": [\\n              {\\n                \\"Type\\": \\"JDK\\",\\n                \\"ComponentKey\\": \\"Open JDK 8\\",\\n                \\"ComponentId\\": \\"5\\"\\n              }\\n            ]\\n          },\\n          \\"Env\\": \\"\\\\\\"[\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"test1\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"valueFrom\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"configMapKeyRef\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"edas-demo-configmap\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"key1\\\\\\\\\\\\\\"}}}\\\\\\",\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"k2\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"v2\\\\\\\\\\\\\\"}\\\\\\",\\\\\\"{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"s1\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"valueFrom\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"secretKeyRef\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"edas-demo-secret\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"k1\\\\\\\\\\\\\\"}}}\\\\\\"]\\\\\\"\\",\\n          \\"EnvFrom\\": \\"[{\\\\\\"configMapRef\\\\\\":{\\\\\\"name\\\\\\":\\\\\\"test-cm\\\\\\"}}]\\"\\n        }\\n      ]\\n    },\\n    \\"ImageInfo\\": {\\n      \\"RepoId\\": \\"cn-hangzhou\\",\\n      \\"ImageUrl\\": \\"registry.cn-beijing.aliyuncs.com/edas-serverless-****/1314839****06888_shared_repo:5a166fbd-9d76-4f98-****-78165****c_1572***282\\",\\n      \\"RepoOriginType\\": \\"ALI_HUB\\",\\n      \\"Tag\\": \\"5a166fbd-9d76-4f98-****-781659d9f54c_1572485443282\\",\\n      \\"RepoName\\": \\"131****067006888_shared_repo\\",\\n      \\"RepoNamespace\\": \\"edas-server****-user\\",\\n      \\"RegionId\\": \\"cn-beijing\\"\\n    },\\n    \\"App\\": {\\n      \\"RequestMem\\": 1024,\\n      \\"InstancesBeforeScaling\\": 10,\\n      \\"DeployType\\": \\"Image\\",\\n      \\"ApplicationName\\": \\"test\\",\\n      \\"ApplicationType\\": \\"War\\",\\n      \\"Instances\\": 4,\\n      \\"LimitMem\\": 1024,\\n      \\"Cmd\\": \\"ls\\",\\n      \\"RegionId\\": \\"cn-hangzhou\\",\\n      \\"BuildpackId\\": 57,\\n      \\"TomcatVersion\\": \\"8.5.55\\",\\n      \\"CsClusterId\\": \\"c383bc813c1974e****451b50c0c8****\\",\\n      \\"RequestCpuM\\": 1000,\\n      \\"AppId\\": \\"00ee517d-dd7d-4d4e-****-****\\",\\n      \\"K8sNamespace\\": \\"default\\",\\n      \\"EdasContainerVersion\\": \\"3.60.0\\",\\n      \\"LimitCpuM\\": 1000,\\n      \\"ClusterId\\": \\"c37aec2a-bcca-4ec1-****-****\\",\\n      \\"EnvList\\": {\\n        \\"Env\\": [\\n          {\\n            \\"Name\\": \\"CATALINA_OPTS\\",\\n            \\"Value\\": \\"-Xmx 1024m -Dhsf.default.tid=false $(EDAS_CATALINA_OPTS)\\"\\n          }\\n        ]\\n      },\\n      \\"CmdArgs\\": {\\n        \\"CmdArg\\": [\\n          \\"-lh\\"\\n        ]\\n      },\\n      \\"DevelopType\\": \\"General\\",\\n      \\"SlbInfo\\": \\"[\\\\n  {\\\\n    \\\\\\"addressType\\\\\\": \\\\\\"intranet\\\\\\",\\\\n    \\\\\\"externalTrafficPolicy\\\\\\": \\\\\\"Local\\\\\\",\\\\n    \\\\\\"ip\\\\\\": \\\\\\"192.168.254.***\\\\\\",\\\\n    \\\\\\"name\\\\\\": \\\\\\"intranet-testapp\\\\\\",\\\\n    \\\\\\"portMappings\\\\\\": [\\\\n      {\\\\n        \\\\\\"loadBalancerProtocol\\\\\\": \\\\\\"TCP\\\\\\",\\\\n        \\\\\\"servicePort\\\\\\": {\\\\n          \\\\\\"port\\\\\\": 8080,\\\\n          \\\\\\"protocol\\\\\\": \\\\\\"TCP\\\\\\",\\\\n          \\\\\\"targetPort\\\\\\": 18081,\\\\n          \\\\\\"vServerGroupName\\\\\\": \\\\\\"k8s/31414/intranet-testapp/default/cc90e0c9508a44667bdae2e83d3******\\\\\\"\\\\n        }\\\\n      }\\\\n    ],\\\\n    \\\\\\"scheduler\\\\\\": \\\\\\"rr\\\\\\",\\\\n    \\\\\\"serviceType\\\\\\": \\\\\\"LoadBalancer\\\\\\",\\\\n    \\\\\\"slbId\\\\\\": \\\\\\"lb-bp1ikoh3nrpgqsm******\\\\\\",\\\\n    \\\\\\"source\\\\\\": \\\\\\"create\\\\\\",\\\\n    \\\\\\"specification\\\\\\": \\\\\\"slb.s3.large\\\\\\"\\\\n  }\\\\n]\\",\\n      \\"Annotations\\": \\"{\\\\\\"test-annokey\\\\\\":\\\\\\"test-annovalue\\\\\\"}\\",\\n      \\"Labels\\": \\"{\\\\\\"test-labelkey\\\\\\":\\\\\\"test-labelvalue\\\\\\"}\\",\\n      \\"LimitEphemeralStorage\\": \\"4\\",\\n      \\"RequestEphemeralStorage\\": \\"2\\",\\n      \\"EnableEmptyPushReject\\": true,\\n      \\"EnableLosslessRule\\": true,\\n      \\"LosslessRuleAligned\\": true,\\n      \\"LosslessRuleDelayTime\\": 120,\\n      \\"LosslessRuleFuncType\\": 2,\\n      \\"LosslessRuleRelated\\": true,\\n      \\"LosslessRuleWarmupTime\\": 120,\\n      \\"FeatureAnnotations\\": \\"base.combination.edas\\",\\n      \\"WorkloadType\\": \\"Deployment\\"\\n    },\\n    \\"Conf\\": {\\n      \\"PostStart\\": \\"{\\\\\\\\\\\\\\"exec\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"command\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\"ls\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\"]}}\\\\\\"\\",\\n      \\"Readiness\\": \\"{\\\\\\"failureThreshold\\\\\\": 3,\\\\\\"initialDelaySeconds\\\\\\": 5,\\\\\\"successThreshold\\\\\\": 1,\\\\\\"timeoutSeconds\\\\\\": 1,\\\\\\"httpGet\\\\\\": {\\\\\\"path\\\\\\": \\\\\\"/consumer\\\\\\",\\\\\\"port\\\\\\": 8080,\\\\\\"scheme\\\\\\": \\\\\\"HTTP\\\\\\",\\\\\\"httpHeaders\\\\\\": \\\\\\\\[{\\\\\\"name\\\\\\": \\\\\\"test\\\\\\",\\\\\\"value\\\\\\": \\\\\\"testvalue\\\\\\"}\\\\\\\\]}}\\",\\n      \\"AhasEnabled\\": true,\\n      \\"K8sCmdArgs\\": \\"-lh\\",\\n      \\"Liveness\\": \\"{\\\\\\"failureThreshold\\\\\\": 3,\\\\\\"initialDelaySeconds\\\\\\": 5,\\\\\\"successThreshold\\\\\\": 1,\\\\\\"timeoutSeconds\\\\\\": 1,\\\\\\"tcpSocket\\\\\\":{\\\\\\"host\\\\\\":\\\\\\"\\\\\\", \\\\\\"port\\\\\\":8080}}\\",\\n      \\"DeployAcrossNodes\\": \\"true\\",\\n      \\"K8sCmd\\": \\"ls\\",\\n      \\"PreStop\\": \\"{\\\\\\\\\\\\\\"exec\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"command\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\"ls\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\"]}}\\\\\\"\\",\\n      \\"DeployAcrossZones\\": \\"true\\",\\n      \\"JarStartArgs\\": \\"-lh\\",\\n      \\"K8sNasInfo\\": \\"[{\\\\\\"nasPath\\\\\\":\\\\\\"/mnt/\\\\\\",\\\\\\"mountPath\\\\\\":\\\\\\"/mnt/\\\\\\"}]\\",\\n      \\"JarStartOptions\\": \\"-h\\",\\n      \\"RuntimeClassName\\": \\"runc\\",\\n      \\"K8sLocalvolumeInfo\\": \\"[{\\\\\\"type\\\\\\":\\\\\\"\\\\\\",\\\\\\"nodePath\\\\\\":\\\\\\"/mnt/\\\\\\",\\\\\\"mountPath\\\\\\":\\\\\\"/mnt/\\\\\\"}]\\",\\n      \\"K8sVolumeInfo\\": \\"\\\\\\"{\\\\\\\\\\\\\\"hostPaths\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"[]\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"emptyDirs\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"[]\\\\\\\\\\\\\\"}\\\\\\"\\",\\n      \\"Affinity\\": \\"\\\\\\"{\\\\\\\\\\\\\\"nodeAffinity\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"requiredDuringSchedulingIgnoredDuringExecution\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"nodeSelectorTerms\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"matchExpressions\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"beta.kubernetes.io/arch\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"operator\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"NotIn\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"values\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\"arm64\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"arm32\\\\\\\\\\\\\\"]}]}]},\\\\\\\\\\\\\\"preferredDuringSchedulingIgnoredDuringExecution\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"weight\\\\\\\\\\\\\\":5,\\\\\\\\\\\\\\"preference\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"matchExpressions\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"kubernetes.io/os\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"operator\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"In\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"values\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\"linux\\\\\\\\\\\\\\"]}]}}]},\\\\\\\\\\\\\\"podAffinity\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"requiredDuringSchedulingIgnoredDuringExecution\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"labelSelector\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"matchExpressions\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"edas.oam.acname\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"operator\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"NotIn\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"values\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\"edas-test-app\\\\\\\\\\\\\\"]}]},\\\\\\\\\\\\\\"namespaces\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\"topologyKey\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"kubernetes.io/hostname\\\\\\\\\\\\\\"}]},\\\\\\\\\\\\\\"podAntiAffinity\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"preferredDuringSchedulingIgnoredDuringExecution\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"weight\\\\\\\\\\\\\\":15,\\\\\\\\\\\\\\"podAffinityTerm\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"labelSelector\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"matchExpressions\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"edas.oam.acname\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"operator\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"In\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"values\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\"edas-test-app-2\\\\\\\\\\\\\\"]}]},\\\\\\\\\\\\\\"namespaces\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\"topologyKey\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"failure-domain.beta.kubernetes.io/zone\\\\\\\\\\\\\\"}}]}}\\\\\\"\\",\\n      \\"Tolerations\\": \\"\\\\\\"[{\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"edas-taint-key2\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"operator\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Exists\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"effect\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"NoExecute\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"tolerationSeconds\\\\\\\\\\\\\\":50},{\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"edas-taint-key\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"operator\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Equal\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"edas-taint-value\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"effect\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"PreferNoSchedule\\\\\\\\\\\\\\"}]\\\\\\"\\",\\n      \\"UserBaseImageUrl\\": \\"openjdk:8u302\\"\\n    },\\n    \\"LatestVersion\\": {\\n      \\"Url\\": \\"https://e***.oss-cn-beijing.aliyuncs.com/s***-1.0-SNAPSHOT-spring-boot.jar\\",\\n      \\"WarUrl\\": \\"https://e***.oss-cn-beijing.aliyuncs.com/s***-1.0-SNAPSHOT-spring-boot.jar\\",\\n      \\"PackageVersion\\": \\"20200720\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetK8sApplicationResponse>\\n    <Code>200</Code>\\n    <Message>success</Message>\\n    <RequestId>1053-08e4-47a5-b2ab-5c0323de7b5a</RequestId>\\n    <Applcation>\\n        <AppId>a5281053-****-47a5-b2ab-5c0323de****</AppId>\\n        <DeployGroups>\\n            <Components>\\n                <Type>JDK</Type>\\n                <ComponentKey>Open JDK 8</ComponentKey>\\n                <ComponentId>5</ComponentId>\\n            </Components>\\n        </DeployGroups>\\n        <ImageInfo>\\n            <RepoId>cn-hangzhou</RepoId>\\n            <ImageUrl>registry.cn-beijing.aliyuncs.com/edas-serverless-****/1314839****06888_shared_repo:5a166fbd-9d76-4f98-****-78165****c_1572***282</ImageUrl>\\n            <RepoOriginType>ALI_HUB</RepoOriginType>\\n            <Tag>5a166fbd-9d76-4f98-****-781659d9f54c_1572485443282</Tag>\\n            <RepoName>131****067006888_shared_repo</RepoName>\\n            <RepoNamespace>edas-server****-user</RepoNamespace>\\n            <RegionId>cn-beijing</RegionId>\\n        </ImageInfo>\\n        <App>\\n            <RequestMem>1024</RequestMem>\\n            <InstancesBeforeScaling>10</InstancesBeforeScaling>\\n            <DeployType>Image</DeployType>\\n            <ApplicationName>test</ApplicationName>\\n            <ApplicationType>War</ApplicationType>\\n            <Instances>4</Instances>\\n            <LimitMem>1024</LimitMem>\\n            <Cmd>ls</Cmd>\\n            <RegionId>cn-hangzhou</RegionId>\\n            <BuildpackId>57</BuildpackId>\\n            <TomcatVersion>8.5.55</TomcatVersion>\\n            <CsClusterId>c383bc813c1974e****451b50c0c8****</CsClusterId>\\n            <RequestCpuM>1000</RequestCpuM>\\n            <AppId>00ee517d-dd7d-4d4e-****-****</AppId>\\n            <K8sNamespace>default</K8sNamespace>\\n            <EdasContainerVersion>3.60.0</EdasContainerVersion>\\n            <ClusterId>c37aec2a-bcca-4ec1-****-****</ClusterId>\\n            <EnvList>\\n                <Name>CATALINA_OPTS</Name>\\n                <Value>-Xmx 1024m -Dhsf.default.tid=false $(EDAS_CATALINA_OPTS)</Value>\\n            </EnvList>\\n            <CmdArgs>-lh</CmdArgs>\\n        </App>\\n        <Conf>\\n            <PostStart>{\\\\\\"exec\\\\\\":{\\\\\\"command\\\\\\":[\\\\\\"ls\\\\\\",\\\\\\"/\\\\\\"]}}\\"</PostStart>\\n            <Readiness>{\\"failureThreshold\\": 3,\\"initialDelaySeconds\\": 5,\\"successThreshold\\": 1,\\"timeoutSeconds\\": 1,\\"httpGet\\": {\\"path\\": \\"/consumer\\",\\"port\\": 8080,\\"scheme\\": \\"HTTP\\",\\"httpHeaders\\": \\\\[{\\"name\\": \\"test\\",\\"value\\": \\"testvalue\\"}\\\\]}}</Readiness>\\n            <AhasEnabled>true</AhasEnabled>\\n            <K8sCmdArgs>-lh</K8sCmdArgs>\\n            <Liveness>{\\"failureThreshold\\": 3,\\"initialDelaySeconds\\": 5,\\"successThreshold\\": 1,\\"timeoutSeconds\\": 1,\\"tcpSocket\\":{\\"host\\":\\"\\", \\"port\\":8080}}</Liveness>\\n            <DeployAcrossNodes>true</DeployAcrossNodes>\\n            <K8sCmd>ls</K8sCmd>\\n            <PreStop>{\\\\\\"exec\\\\\\":{\\\\\\"command\\\\\\":[\\\\\\"ls\\\\\\",\\\\\\"/\\\\\\"]}}\\"</PreStop>\\n            <DeployAcrossZones>true</DeployAcrossZones>\\n            <JarStartArgs>-lh</JarStartArgs>\\n            <K8sNasInfo>[{\\"nasPath\\":\\"/mnt/\\",\\"mountPath\\":\\"/mnt/\\"}]</K8sNasInfo>\\n            <JarStartOptions>-h</JarStartOptions>\\n            <RuntimeClassName>runc</RuntimeClassName>\\n            <K8sLocalvolumeInfo>[{\\"type\\":\\"\\",\\"nodePath\\":\\"/mnt/\\",\\"mountPath\\":\\"/mnt/\\"}]</K8sLocalvolumeInfo>\\n            <K8sVolumeInfo>\\"{\\\\\\"hostPaths\\\\\\":\\\\\\"[]\\\\\\",\\\\\\"emptyDirs\\\\\\":\\\\\\"[]\\\\\\"}\\"</K8sVolumeInfo>\\n            <ApmBinderLogFileConfigs>[{\\"filePattern\\":\\"test\\",\\"name\\":\\"auto-logstash\\",\\"path\\":\\"/home/admin\\",\\"type\\":\\"file\\"}]</ApmBinderLogFileConfigs>\\n        </Conf>\\n        <LatestVersion>\\n            <Url>https://e***.oss-cn-beijing.aliyuncs.com/s***-1.0-SNAPSHOT-spring-boot.jar</Url>\\n            <WarUrl>https://e***.oss-cn-beijing.aliyuncs.com/s***-1.0-SNAPSHOT-spring-boot.jar</WarUrl>\\n            <PackageVersion>20200720</PackageVersion>\\n        </LatestVersion>\\n    </Applcation>\\n</GetK8sApplicationResponse>","errorExample":""}]',
      'title' => '获取K8s应用信息',
      'summary' => '获取容器服务K8s集群或Serverless K8s集群中部署的应用信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetK8sServices' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_service',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5a166fbd-****-****-a286-781659d9f54c',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '变更流程ID。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4823-bhjf-23u4-eiufh',
              ),
              'Services' => 
              array (
                'description' => 'K8s服务Service列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'K8s服务Service对象。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Type' => 
                    array (
                      'description' => '服务类型。',
                      'type' => 'string',
                      'example' => 'ClusterIP',
                    ),
                    'Name' => 
                    array (
                      'description' => '服务名。',
                      'type' => 'string',
                      'example' => 'service-http',
                    ),
                    'ClusterIP' => 
                    array (
                      'description' => 'K8s服务Service IP地址。',
                      'type' => 'string',
                      'example' => '104.23.xx.xx',
                    ),
                    'ServicePorts' => 
                    array (
                      'description' => '端口映射列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '端口映射对象。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'TargetPort' => 
                          array (
                            'description' => '后端容器端口。',
                            'type' => 'string',
                            'example' => '8080',
                          ),
                          'NodePort' => 
                          array (
                            'description' => '节点端口。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '0',
                          ),
                          'Port' => 
                          array (
                            'description' => '前端服务端口。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '80',
                          ),
                          'Protocol' => 
                          array (
                            'description' => '服务协议。',
                            'type' => 'string',
                            'example' => 'TCP',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"4823-bhjf-23u4-eiufh\\",\\n  \\"Services\\": [\\n    {\\n      \\"Type\\": \\"ClusterIP\\",\\n      \\"Name\\": \\"service-http\\",\\n      \\"ClusterIP\\": \\"104.23.xx.xx\\",\\n      \\"ServicePorts\\": [\\n        {\\n          \\"TargetPort\\": \\"8080\\",\\n          \\"NodePort\\": 0,\\n          \\"Port\\": 80,\\n          \\"Protocol\\": \\"TCP\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<Services>\\n    <ClusterIP>104.23.xx.xx</ClusterIP>\\n    <Type>ClusterIP</Type>\\n    <Name>service-http</Name>\\n</Services>\\n<Services>\\n    <ServicePorts>\\n        <NodePort>0</NodePort>\\n        <TargetPort>8080</TargetPort>\\n        <Protocol>TCP</Protocol>\\n        <Port>80</Port>\\n    </ServicePorts>\\n</Services>\\n<RequestId>4823-bhjf-23u4-eiufh</RequestId>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取K8s服务Service列表',
      'summary' => '调用GetK8sServices接口获取K8s集群中应用的服务Service列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySlsLogStoreList' => 
    array (
      'path' => '/pop/v5/k8s/sls/query_sls_log_store_list',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'af58edcf-f7eb-****-****-db4e425f****',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务采集类型：

- file: 文件类型。
- stdout: 标准输出类型。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'file',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页面大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1000',
          ),
        ),
        3 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码，从1开始编号。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回消息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'd6834ee9-5045-*************',
              ),
              'TotalSize' => 
              array (
                'description' => '日志服务配置数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Result' => 
              array (
                'description' => '日志服务配置结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Link' => 
                    array (
                      'description' => '日志服务链接。',
                      'type' => 'string',
                      'example' => 'https://sls.console.aliyun.com/lognext/project/k8s-log-c846f28edbd1d4c6aa9d78c0e********/logsearch/thisisiss',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2020-05-18 22:08:46',
                    ),
                    'Logstore' => 
                    array (
                      'description' => 'logstore名称。',
                      'type' => 'string',
                      'example' => 'thisisatestlogstore',
                    ),
                    'ConsumerSide' => 
                    array (
                      'description' => '日志服务类型。',
                      'type' => 'string',
                      'example' => 'SLS日志服务',
                    ),
                    'Project' => 
                    array (
                      'description' => 'project名称。',
                      'type' => 'string',
                      'example' => 'k8s-log-c846f28edbd1d4c6aa9d78c0e********',
                    ),
                    'Source' => 
                    array (
                      'description' => '日志来源：

- 标准输出：stdout.log。
- 文件日志：采集路径。',
                      'type' => 'string',
                      'example' => '/var/log/*',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"d6834ee9-5045-*************\\",\\n  \\"TotalSize\\": 1,\\n  \\"Result\\": [\\n    {\\n      \\"Link\\": \\"https://sls.console.aliyun.com/lognext/project/k8s-log-c846f28edbd1d4c6aa9d78c0e********/logsearch/thisisiss\\",\\n      \\"CreateTime\\": \\"2020-05-18 22:08:46\\",\\n      \\"Logstore\\": \\"thisisatestlogstore\\",\\n      \\"ConsumerSide\\": \\"SLS日志服务\\",\\n      \\"Project\\": \\"k8s-log-c846f28edbd1d4c6aa9d78c0e********\\",\\n      \\"Source\\": \\"/var/log/*\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<code>200</code>\\n<message>success</message>\\n<result>\\n    <consumerSide>SLS日志服务</consumerSide>\\n    <createTime>2020-05-18 22:08:46</createTime>\\n    <link>https://sls.console.aliyun.com/lognext/project/k8s-log-c846f28edbd1d4c6aa9d78c0e********/logsearch/thisisiss</link>\\n    <logstore>thisisatestlogstore</logstore>\\n    <project>k8s-log-c846f28edbd1d4c6aa9d78c0e********</project>\\n    <source>/var/log/*</source>\\n</result>\\n<totalSize>1</totalSize>","errorExample":""}]',
      'title' => '查询应用的日志服务配置详情',
      'summary' => '调用 QuerySlsLogStoreList 接口查询应用的日志服务配置详情。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetAppDeployment' => 
    array (
      'path' => '/pop/v5/oam/app_deployment',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可通过调用ListApplication接口获取。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '93fdd228-*****-ed2ae98de18d',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '应用Deployment信息，格式为JSON格式字符串。',
                'type' => 'string',
                'example' => ' {"metadata":{"name":"oambuild-group*","namespace":"default","selfLink":"/apis/apps/v1/namespaces/default/deployments/oambuil*","uid":"*-afc0-436e-9949-fb01994a9b63","resourceVersion":"969614832","generation":2,"creationTimestamp":"2021-04-06T11:38:46Z","labels":{"edas-domain":"edas-admin","edas.aliyun.oam.com/rollout-name":"oambuild-group-1","edas.aliyun.oam.com/rollout-namespace":"default","edas.aliyun.oam.com/rollout-revision":"3","edas.appid":"fc5e0f54-*-4cab-91a0-b7becb1f6174","edas.controlplane":"edas-oam","edas.oam.acname":"oambuild"...',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '03FD1520-0FD6-436A-****-265318D7****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.InstanceNotExist.Cluster.message',
            'errorMessage' => 'The cluster instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": \\" {\\\\\\"metadata\\\\\\":{\\\\\\"name\\\\\\":\\\\\\"oambuild-group*\\\\\\",\\\\\\"namespace\\\\\\":\\\\\\"default\\\\\\",\\\\\\"selfLink\\\\\\":\\\\\\"/apis/apps/v1/namespaces/default/deployments/oambuil*\\\\\\",\\\\\\"uid\\\\\\":\\\\\\"*-afc0-436e-9949-fb01994a9b63\\\\\\",\\\\\\"resourceVersion\\\\\\":\\\\\\"969614832\\\\\\",\\\\\\"generation\\\\\\":2,\\\\\\"creationTimestamp\\\\\\":\\\\\\"2021-04-06T11:38:46Z\\\\\\",\\\\\\"labels\\\\\\":{\\\\\\"edas-domain\\\\\\":\\\\\\"edas-admin\\\\\\",\\\\\\"edas.aliyun.oam.com/rollout-name\\\\\\":\\\\\\"oambuild-group-1\\\\\\",\\\\\\"edas.aliyun.oam.com/rollout-namespace\\\\\\":\\\\\\"default\\\\\\",\\\\\\"edas.aliyun.oam.com/rollout-revision\\\\\\":\\\\\\"3\\\\\\",\\\\\\"edas.appid\\\\\\":\\\\\\"fc5e0f54-*-4cab-91a0-b7becb1f6174\\\\\\",\\\\\\"edas.controlplane\\\\\\":\\\\\\"edas-oam\\\\\\",\\\\\\"edas.oam.acname\\\\\\":\\\\\\"oambuild\\\\\\"...\\",\\n  \\"RequestId\\": \\"03FD1520-0FD6-436A-****-265318D7****\\"\\n}","errorExample":""},{"type":"xml","example":"<GetAppDeploymentResponse>\\n<Message>success</Message>\\n<RequestId>03FD1520-0FD6-436A-****-265318D7****</RequestId>\\n<Data> {\\"metadata\\":{\\"name\\":\\"oambuild-group*\\",\\"namespace\\":\\"default\\",\\"selfLink\\":\\"/apis/apps/v1/namespaces/default/deployments/oambuil*\\",\\"uid\\":\\"*-afc0-436e-9949-fb01994a9b63\\",\\"resourceVersion\\":\\"969614832\\",\\"generation\\":2,\\"creationTimestamp\\":\\"2021-04-06T11:38:46Z\\",\\"labels\\":{\\"edas-domain\\":\\"edas-admin\\",\\"edas.aliyun.oam.com/rollout-name\\":\\"oambuild-group-1\\",\\"edas.aliyun.oam.com/rollout-namespace\\":\\"default\\",\\"edas.aliyun.oam.com/rollout-revision\\":\\"3\\",\\"edas.appid\\":\\"fc5e0f54-*-4cab-91a0-b7becb1f6174\\",\\"edas.controlplane\\":\\"edas-oam\\",\\"edas.oam.acname\\":\\"oambuild\\"...</Data>\\n<Code>200</Code>\\n</GetAppDeploymentResponse>","errorExample":""}]',
      'title' => '获取K8s应用的Deployment信息',
      'summary' => '调用GetAppDeployment接口获取K8s应用的Deployment信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeAppInstanceList' => 
    array (
      'path' => '/pop/v5/oam/app_instance_list',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可通过调用ListApplication接口获取。更多信息，请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '93fdd228-*****-ed2ae98de18d',
          ),
        ),
        1 => 
        array (
          'name' => 'WithNodeInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否返回Pod所在的节点信息。

- `true`：是
- `false`：否',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '03FD1520-0FD6-436A-****-265318D7****',
              ),
              'InstanceList' => 
              array (
                'description' => '应用实例列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'NodeLabels' => 
                    array (
                      'description' => '节点标签，内容为JSON格式字符串。',
                      'type' => 'string',
                      'example' => '{"alibabacloud.com/nodepool-id":"np0*5b9377fa907","beta.kubernetes.io/arch":"amd64","beta.kubernetes.io/instance-type":"ecs.*","beta.kubernetes.io/os":"linux","failure-domain.beta.kubernetes.io/region":"cn-hangzhou","failure-domain.beta.kubernetes.io/zone":"cn-hangzhou-b","kubernetes.io/arch":"amd64","kubernetes.io/hostname":"cn-hangzhou*","kubernetes.io/os":"linux","node.kubernetes.io/instance-type":"ecs.*","topology.diskplugin.csi.alibabacloud.com/zone":"cn-hangzhou-b","topology.kubernetes.io/region":"cn-hangzhou","topology.kubernetes.io/zone":"cn-hangzhou-b"}',
                    ),
                    'GroupId' => 
                    array (
                      'description' => '部署分组ID。',
                      'type' => 'string',
                      'example' => '93fdd228-*****-ed2ae98de18d',
                    ),
                    'GroupName' => 
                    array (
                      'description' => '部署分组名。',
                      'type' => 'string',
                      'example' => '_DEFAULT_GROUP',
                    ),
                    'Canary' => 
                    array (
                      'description' => '是否是金丝雀发布实例。
- `true`：是
- `false`：否',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'NodeName' => 
                    array (
                      'description' => '节点名称。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou.192.168.0.*',
                    ),
                    'PodRaw' => 
                    array (
                      'description' => 'Pod信息，内容为JSON格式字符串。',
                      'type' => 'string',
                      'example' => '{"metadata":{"name":"oambuild-group-1-*4xthz","generateName":"oambuild-group-*96-","namespace":"default","selfLink":"/api/v1/namespaces/default/pods/oambuild-grou*96-4xthz","uid":"7a23399c-*fe7ff4018","resourceVersion":"969614830","creationTimestamp":"2021-04-06T11:38:46Z","labels":{"ARMSApmAppId":"*","ARMSApmLicenseKey":"*"...',
                    ),
                    'Version' => 
                    array (
                      'description' => '节点部署的包版本。',
                      'type' => 'string',
                      'example' => '2021-04-06 19:37:42',
                    ),
                    'AppId' => 
                    array (
                      'description' => '应用ID。',
                      'type' => 'string',
                      'example' => '93fdd228-*****-ed2ae98de18d',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'No permissions',
          ),
          1 => 
          array (
            'errorCode' => 'Edas.errorcode.ParameterMissing.AppId.message',
            'errorMessage' => 'Application ID is missing.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"03FD1520-0FD6-436A-****-265318D7****\\",\\n  \\"InstanceList\\": [\\n    {\\n      \\"NodeLabels\\": \\"{\\\\\\"alibabacloud.com/nodepool-id\\\\\\":\\\\\\"np0*5b9377fa907\\\\\\",\\\\\\"beta.kubernetes.io/arch\\\\\\":\\\\\\"amd64\\\\\\",\\\\\\"beta.kubernetes.io/instance-type\\\\\\":\\\\\\"ecs.*\\\\\\",\\\\\\"beta.kubernetes.io/os\\\\\\":\\\\\\"linux\\\\\\",\\\\\\"failure-domain.beta.kubernetes.io/region\\\\\\":\\\\\\"cn-hangzhou\\\\\\",\\\\\\"failure-domain.beta.kubernetes.io/zone\\\\\\":\\\\\\"cn-hangzhou-b\\\\\\",\\\\\\"kubernetes.io/arch\\\\\\":\\\\\\"amd64\\\\\\",\\\\\\"kubernetes.io/hostname\\\\\\":\\\\\\"cn-hangzhou*\\\\\\",\\\\\\"kubernetes.io/os\\\\\\":\\\\\\"linux\\\\\\",\\\\\\"node.kubernetes.io/instance-type\\\\\\":\\\\\\"ecs.*\\\\\\",\\\\\\"topology.diskplugin.csi.alibabacloud.com/zone\\\\\\":\\\\\\"cn-hangzhou-b\\\\\\",\\\\\\"topology.kubernetes.io/region\\\\\\":\\\\\\"cn-hangzhou\\\\\\",\\\\\\"topology.kubernetes.io/zone\\\\\\":\\\\\\"cn-hangzhou-b\\\\\\"}\\",\\n      \\"GroupId\\": \\"93fdd228-*****-ed2ae98de18d\\",\\n      \\"GroupName\\": \\"_DEFAULT_GROUP\\",\\n      \\"Canary\\": false,\\n      \\"NodeName\\": \\"cn-hangzhou.192.168.0.*\\",\\n      \\"PodRaw\\": \\"{\\\\\\"metadata\\\\\\":{\\\\\\"name\\\\\\":\\\\\\"oambuild-group-1-*4xthz\\\\\\",\\\\\\"generateName\\\\\\":\\\\\\"oambuild-group-*96-\\\\\\",\\\\\\"namespace\\\\\\":\\\\\\"default\\\\\\",\\\\\\"selfLink\\\\\\":\\\\\\"/api/v1/namespaces/default/pods/oambuild-grou*96-4xthz\\\\\\",\\\\\\"uid\\\\\\":\\\\\\"7a23399c-*fe7ff4018\\\\\\",\\\\\\"resourceVersion\\\\\\":\\\\\\"969614830\\\\\\",\\\\\\"creationTimestamp\\\\\\":\\\\\\"2021-04-06T11:38:46Z\\\\\\",\\\\\\"labels\\\\\\":{\\\\\\"ARMSApmAppId\\\\\\":\\\\\\"*\\\\\\",\\\\\\"ARMSApmLicenseKey\\\\\\":\\\\\\"*\\\\\\"...\\",\\n      \\"Version\\": \\"2021-04-06 19:37:42\\",\\n      \\"AppId\\": \\"93fdd228-*****-ed2ae98de18d\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeAppInstanceListResponse>\\n<Message>success</Message>\\n<RequestId>03FD1520-0FD6-436A-****-265318D7****</RequestId>\\n<InstanceList>\\n    <GroupName>_DEFAULT_GROUP</GroupName>\\n    <AppId>93fdd228-*****-ed2ae98de18d</AppId>\\n    <NodeName>cn-hangzhou.192.168.0.*</NodeName>\\n    <Version>2021-04-06 19:37:42</Version>\\n    <Canary>false</Canary>\\n    <NodeLabels>{\\"alibabacloud.com/nodepool-id\\":\\"np0*5b9377fa907\\",\\"beta.kubernetes.io/arch\\":\\"amd64\\",\\"beta.kubernetes.io/instance-type\\":\\"ecs.*\\",\\"beta.kubernetes.io/os\\":\\"linux\\",\\"failure-domain.beta.kubernetes.io/region\\":\\"cn-hangzhou\\",\\"failure-domain.beta.kubernetes.io/zone\\":\\"cn-hangzhou-b\\",\\"kubernetes.io/arch\\":\\"amd64\\",\\"kubernetes.io/hostname\\":\\"cn-hangzhou*\\",\\"kubernetes.io/os\\":\\"linux\\",\\"node.kubernetes.io/instance-type\\":\\"ecs.*\\",\\"topology.diskplugin.csi.alibabacloud.com/zone\\":\\"cn-hangzhou-b\\",\\"topology.kubernetes.io/region\\":\\"cn-hangzhou\\",\\"topology.kubernetes.io/zone\\":\\"cn-hangzhou-b\\"}</NodeLabels>\\n    <PodRaw>{\\"metadata\\":{\\"name\\":\\"oambuild-group-1-*4xthz\\",\\"generateName\\":\\"oambuild-group-*96-\\",\\"namespace\\":\\"default\\",\\"selfLink\\":\\"/api/v1/namespaces/default/pods/oambuild-grou*96-4xthz\\",\\"uid\\":\\"7a23399c-*fe7ff4018\\",\\"resourceVersion\\":\\"969614830\\",\\"creationTimestamp\\":\\"2021-04-06T11:38:46Z\\",\\"labels\\":{\\"ARMSApmAppId\\":\\"*\\",\\"ARMSApmLicenseKey\\":\\"*\\"...</PodRaw>\\n    <GroupId>93fdd228-*****-ed2ae98de18d</GroupId>\\n</InstanceList>\\n<Code>200</Code>\\n</DescribeAppInstanceListResponse>","errorExample":""}]',
      'title' => '查询K8s应用实例列表',
      'summary' => '调用DescribeAppInstanceList接口查询K8s应用实例列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetK8sAppPrecheckResult' => 
    array (
      'summary' => '调用GetK8sAppPrecheckResult接口获取K8s应用预检结果。',
      'path' => '/pop/v5/k8s/app_precheck',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'EDAS集群ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'c37aec2a-bcca-4ec1-****-************',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s集群命名空间。',
            'type' => 'string',
            'required' => true,
            'example' => 'default',
          ),
        ),
        2 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'testapp',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '应用变更预检响应。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B909AB1F-3763-4963-B1CE-0BDFA192****',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '接口响应数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '应用变更预检状态：
- checking：检查中。
- pass：通过检查。
- failed：未通过检查。',
                    'type' => 'string',
                    'example' => 'checking',
                  ),
                  'Reason' => 
                  array (
                    'description' => '应用变更预检未通过的原因说明。预检通过时该字段为空。',
                    'type' => 'string',
                    'example' => 'K8s集群失联。',
                  ),
                  'JobResults' => 
                  array (
                    'description' => '应用变更预检结果。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '应用变更预检结果对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Name' => 
                        array (
                          'description' => '预检任务项名称。',
                          'type' => 'string',
                          'example' => 'Cluster Health Check',
                        ),
                        'Pass' => 
                        array (
                          'description' => '预检任务项是否通过预检：

- true：通过预检。
- false：未通过预检。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Interrupted' => 
                        array (
                          'description' => '预检任务项是否被中断：

- true：任务被中断。
- false：任务未被中断。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Reason' => 
                        array (
                          'description' => '应用变更预检项未通过或被中断的原因说明。预检通过时该字段为空。',
                          'type' => 'string',
                          'example' => 'K8s集群失联。',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B909AB1F-3763-4963-B1CE-0BDFA192****\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": {\\n    \\"Status\\": \\"checking\\",\\n    \\"Reason\\": \\"K8s集群失联。\\",\\n    \\"JobResults\\": [\\n      {\\n        \\"Name\\": \\"Cluster Health Check\\",\\n        \\"Pass\\": true,\\n        \\"Interrupted\\": false,\\n        \\"Reason\\": \\"K8s集群失联。\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取K8s应用预检结果',
    ),
    'BindK8sSlb' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_slb_binding',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5a166fbd-****-****-a286-781659d9f54c',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '712082c3-f554-****-****-a947b5cde6ee',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置SLB的类型：
* internet：公网SLB。
* intranet：私网SLB。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'internet',
          ),
        ),
        3 => 
        array (
          'name' => 'SlbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB ID。不配置时，EDAS会自动为用户新购SLB。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'lb-2ze1quax9t****iz82bjt',
          ),
        ),
        4 => 
        array (
          'name' => 'SlbProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB协议，目前支持TCP、HTTP和HTTPS协议。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'TCP',
          ),
        ),
        5 => 
        array (
          'name' => 'TargetPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端端口，也是应用的服务端口，范围1~65535。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '8080',
          ),
        ),
        6 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前端端口，范围1~65535。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '80',
          ),
        ),
        7 => 
        array (
          'name' => 'ServicePortInfos',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '多个端口需求以及非TCP协议需求填写字段。
必须符合JsonArray格式，参考示例：
[{"targetPort":8080,"port":82,"loadBalancerProtocol":"TCP"},{"port":81,"certId":"1362469756373809_16c185d6fa2_1914500329_-xxxxxxx","targetPort":8181,"lo
adBalancerProtocol":"HTTPS"}]
- port：必填，前端端口，范围 1~65535。不能重复。
- targetPort: 必填，后端端口，范围 1~65535。
- loadBalancerProtocol：必填，只支持TCP和HTTPS，对于HTTP类型的填写TCP即可。
- certId：如果是HTTPS，则该参数必填证书ID，可以在SLB控制台进行购买。
> 该参数用来支持多端口支持，需要配合appId、clusterId、type、slbId进行使用。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '[{"targetPort":8080,"port":82,"loadBalancerProtocol":"TCP"},{"port":81,"certId":"136246975637380916c185d6fa21914500329_-988as","targetPort":8181,"lo adBalancerProtocol":"HTTPS"}]',
          ),
        ),
        8 => 
        array (
          'name' => 'Specification',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的规格：

* slb.s1.small
* slb.s2.small
* slb.s2.medium
* slb.s3.small
* slb.s3.medium
* slb.s3.large',
            'type' => 'string',
            'required' => false,
            'example' => 'slb.s1.small',
          ),
        ),
        9 => 
        array (
          'name' => 'Scheduler',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB调度算法。不填写则默认值为rr。支持负载均衡支持轮询 (rr)、加权轮询 (wr) 两种调度算法。

- 加权轮询 (wrr)：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- 轮询 (rr)：按照访问顺序依次将外部请求分发到后端服务器。',
            'type' => 'string',
            'required' => false,
            'example' => 'wrr',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。',
                'type' => 'string',
                'example' => 'b4b37bde-a125-****-****-741f7f4a9ae3',
              ),
              'Code' => 
              array (
                'description' => '接口响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4823-bhjf-23u4-****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"b4b37bde-a125-****-****-741f7f4a9ae3\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"4823-bhjf-23u4-****\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<ChangeOrderId>b4b37bde-a125-43fc-9f8e-741f7f4a9ae3</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '绑定SLB到集群中的应用',
      'summary' => '绑定SLB到容器服务K8s集群中的应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnbindK8sSlb' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_slb_binding',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可以通过调用[ListApplication](~~149390~~)获取。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5a166fbd-****-****-a286-781659d9f54c',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID，可以通过调用[GetK8sCluster](~~181437~~)获取。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '712082c3-****-****-9217-a947b5cde6ee',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置SLB的类型：

- **internet**：公网

- **intranet**：私网',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'internet',
          ),
        ),
        3 => 
        array (
          'name' => 'SlbName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡SLB实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'a2d4ab12666544a479cdd0711a97****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '请求状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。',
                'type' => 'string',
                'example' => 'b0a8441e-****-4e8e-9874-b56dea02952f',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1234-1sda-321d-1234',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"ChangeOrderId\\": \\"b0a8441e-****-4e8e-9874-b56dea02952f\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"1234-1sda-321d-1234\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>1234-1sda-321d-1234</RequestId>\\n<Message>success</Message>\\n<ChangeOrderId>b0a8441e-****-4e8e-9874-b56dea02952f</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '解绑容器服务 k8s 应用的 SLB',
      'summary' => '调用UnbindK8sSlb解绑容器服务k8s应用的SLB。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InsertK8sApplication' => 
    array (
      'path' => '/pop/v5/k8s/acs/create_k8s_app',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IntranetTargetPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '内网SLB后端端口，也是应用的服务端口，范围为1~65535。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '80',
          ),
        ),
        1 => 
        array (
          'name' => 'IntranetSlbPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '内网SLB前端端口，范围为1~65535。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '80',
          ),
        ),
        2 => 
        array (
          'name' => 'ImageUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像地址，当设置`PackageType`为`Image`时，此参数项为必填。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'registry.cn-beijing.aliyuncs.com/****_test/****-cons****:1.0',
          ),
        ),
        3 => 
        array (
          'name' => 'ApplicationDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => '生产环境应用',
          ),
        ),
        4 => 
        array (
          'name' => 'RepoId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像的仓库ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ced********',
          ),
        ),
        5 => 
        array (
          'name' => 'Replicas',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '4',
          ),
        ),
        6 => 
        array (
          'name' => 'LimitCpu',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用运行过程中，应用实例的CPU限额，单位：核数。如果LimitmCpu不为空，则忽略该参数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '4',
          ),
        ),
        7 => 
        array (
          'name' => 'LimitMem',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用运行过程中，应用实例的内存限额，单位：MB。LimitMem取值要不小于RequestsMem。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        8 => 
        array (
          'name' => 'RequestsCpu',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用创建时，应用实例的CPU限额，单位：核数。设置为0时表示不限制。如果RequestsmCpu，则使用RequestsmCpu，忽略该参数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        9 => 
        array (
          'name' => 'RequestsMem',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用创建时，应用实例的内存限额，单位：MB。设置为0时表示不限制。RequestsMem的取值不能大于LimitMem的取值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        10 => 
        array (
          'name' => 'Command',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用启动命令。如果设置该参数，镜像在启动时，会替代镜像中的原有的启动命令。',
            'type' => 'string',
            'required' => false,
            'example' => 'ls',
          ),
        ),
        11 => 
        array (
          'name' => 'CommandArgs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '与命令组合使用，命令的参数是JsonArray字符串，格式如：`[{"argument":"-c"},{"argument":"test"}]`。其中`-c`、`test`为需要设置的两个参数。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"argument":"-lh"}]',
          ),
        ),
        12 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用名称。必须以字母开头，支持数字、字母和短划线（-），最多支持36个字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'doc-test',
          ),
        ),
        13 => 
        array (
          'name' => 'IntranetSlbProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '私网SLB协议，支持TCP、HTTP和HTTPS协议。',
            'type' => 'string',
            'required' => false,
            'example' => 'TCP',
          ),
        ),
        14 => 
        array (
          'name' => 'IntranetSlbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '私网SLB ID，不配置时，EDAS会自动为用户新购SLB。',
            'type' => 'string',
            'required' => false,
            'example' => 'ae93********',
          ),
        ),
        15 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID，可调用ListCluster接口获取，详情请参见[ListCluster](~~154995~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c9cd****',
          ),
        ),
        16 => 
        array (
          'name' => 'InternetSlbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '公网SLB ID，不配置时，EDAS会自动为用户新购SLB。',
            'type' => 'string',
            'required' => false,
            'example' => 'a3d4********',
          ),
        ),
        17 => 
        array (
          'name' => 'InternetSlbProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '公网SLB协议，支持TCP、HTTP和HTTPS协议。',
            'type' => 'string',
            'required' => false,
            'example' => 'TCP',
          ),
        ),
        18 => 
        array (
          'name' => 'InternetSlbPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '公网SLB前端端口，范围为1~65535。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '80',
          ),
        ),
        19 => 
        array (
          'name' => 'InternetTargetPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '私网SLB后端端口，也是应用的服务端口，范围为1~65535。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '8080',
          ),
        ),
        20 => 
        array (
          'name' => 'Envs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署环境变量，格式需要符合JSON对象数组。支持三种类型的环境变量，分别是普通环境变量，K8s ConfigMap环境变量，K8s Secret环境变量。普通环境变量格式如下所示：

`{"name":"x", "value": "y"}`

ConfigMap环境变量配置可以将指定的ConfigMap中对应的key的值注入到容器的环境变量中，配置的格式如下所示：

`{
  "name": "x2",
  "valueFrom": {
    "configMapKeyRef": {
      "name": "my-config",
      "key": "y2"
    }
  }
}`

Secret环境变量配置可以将指定的Secret中对应的key的值注入到容器的环境变量中，配置的格式如下所示：

`{
  "name": "x3",
  "valueFrom": {
    "secretKeyRef": {
      "name": "my-secret",
      "key": "y3"
    }
  }
}`

> 如果要取消该配置，需设置一个空JSON数组“[]”来表示不做配置。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"name":"x1","value":"y1"},{"name":"x2","valueFrom":{"configMapKeyRef":{"name":"my-config","key":"y2"}}},{"name":"x3","valueFrom":{"secretKeyRef":{"name":"my-secret","key":"y3"}}}]',
          ),
        ),
        21 => 
        array (
          'name' => 'PreStop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '停止前执行脚本，示例格式：`{"tcpSocket":{"host":"", "port":8080}}`。

如果设置为`""`或者`{}`表示删除，不设置表示忽略。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"exec\\":{\\"command\\":[\\"ls\\",\\"/\\"]}}"',
          ),
        ),
        22 => 
        array (
          'name' => 'PostStart',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '启动后执行脚本，格式如：`{"exec":{"command":\\["cat","/etc/group"\\]}}`。

如果设置为`""`或者`{}`表示删除，不设置表示忽略。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"exec\\":{\\"command\\":[\\"ls\\",\\"/\\"]}}"',
          ),
        ),
        23 => 
        array (
          'name' => 'Liveness',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容器存活状态监测 ，格式如`{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"tcpSocket":{"host":"", "port":8080}}`。

如果设置为`""`或者`{}`表示删除，不设置表示忽略。',
            'type' => 'string',
            'required' => false,
            'example' => '{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"tcpSocket":{"host":"", "port":8080}}',
          ),
        ),
        24 => 
        array (
          'name' => 'Readiness',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容器业务状态检查，如果检查失败，经过K8s Service的流量将不转入到该容器，格式如：`{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"httpGet": {"path": "/consumer","port": 8080,"scheme": "HTTP","httpHeaders": \\[{"name": "test","value": "testvalue"}\\]}}`。

如果设置为`""`或者`{}`表示删除，不设置表示忽略。',
            'type' => 'string',
            'required' => false,
            'example' => '{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"httpGet": {"path": "/consumer","port": 8080,"scheme": "HTTP","httpHeaders": [{"name": "test","value": "testvalue"}]}}',
          ),
        ),
        25 => 
        array (
          'name' => 'NasId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '挂载的NAS的ID。如果不填，且存在mountDescs字段，则默认将自动购买一个NAS并挂载到VPC内的交换机上。',
            'type' => 'string',
            'required' => false,
            'example' => 'dfs23****',
          ),
        ),
        26 => 
        array (
          'name' => 'MountDescs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '挂载配置描述，为一个序列化的JSON。例如：`\\[{"nasPath": "/k8s","mountPath": "/mnt"},{"nasPath": "/files","mountPath": "/app/files"}\\]`。其中，`nasPath`是指文件储存路径；`mountPath`是指挂载到容器内的路径。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"nasPath": "/k8s","mountPath": "/mnt"},{"nasPath": "/files","mountPath": "/app/files"}]',
          ),
        ),
        27 => 
        array (
          'name' => 'StorageType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAS存储类型，包括：

* 通用型NAS：Capacity（容量型）、Performance（性能型）
* 极速型NAS：Standard（标准型）、Advance（高级型）

目前只支持Performance类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'Performance',
          ),
        ),
        28 => 
        array (
          'name' => 'LocalVolume',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '宿主机文件挂载到容器内的配置。例如：`\\[{"type":"","nodePath":"/localfiles","mountPath":"/app/files"},{"type":"Directory","nodePath":"/mnt","mountPath":"/app/storage"}\\]`。其中：

- `nodePath`为宿主机路径。

- `mountPath`为容器内的路径。

- `type`为挂载类型。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"type":"","nodePath":"/localfiles","mountPath":"/app/files"},{"type":"Directory","nodePath":"/mnt","mountPath":"/app/storage"}]',
          ),
        ),
        29 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s集群的命名空间，它将决定您的应用部署在哪个K8s命名空间。默认为default。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
        30 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EDAS命名空间对应ID，非默认命名空间须填写。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-shenzhen:beta****',
          ),
        ),
        31 => 
        array (
          'name' => 'PackageType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用包类型。可选参数值包含：FatJar、WAR和Image。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'WAR',
          ),
        ),
        32 => 
        array (
          'name' => 'PackageUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署包地址。通过FatJar或WAR包部署的应用需要配置部署包地址。

> EDAS POP API的Java或者Python SDK需要2.44.0或以上版本。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://e***.oss-cn-beijing.aliyuncs.com/s***-1.0-SNAPSHOT-spring-boot.jar',
          ),
        ),
        33 => 
        array (
          'name' => 'PackageVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署包的版本号，WAR和FatJar类型必填。请自定义它的含义。

> EDAS POP API的Java或者Python SDK需要2.44.0或以上版本。',
            'type' => 'string',
            'required' => false,
            'example' => '20200720',
          ),
        ),
        34 => 
        array (
          'name' => 'JDK',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署的包依赖的JDK版本。可选的参数值为Open JDK 7、Open JDK 8或Custom OpenJDK。镜像部署方式不支持此参数。当使用Custom OpenJDK时，还需配置UserBaseImageUrl字段。',
            'type' => 'string',
            'required' => false,
            'example' => 'Open JDK 8',
          ),
        ),
        35 => 
        array (
          'name' => 'WebContainer',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署包依赖的Tomcat版本。适用于通过WAR包部署的Spring Cloud和Dubbo应用，镜像不支持此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'apache-tomcat-7.0.91',
          ),
        ),
        36 => 
        array (
          'name' => 'EdasContainerVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署的包依赖的` EDAS-Container `版本。

> 使用镜像部署时不支持此参数。',
            'type' => 'string',
            'required' => false,
            'example' => '3.5.9',
          ),
        ),
        37 => 
        array (
          'name' => 'UriEncoding',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'URI编码方式，支持ISO-8859-1、GBK、GB2312和UTF-8。

> 应用配置不设置该参数，使用Tomcat默认值。',
            'type' => 'string',
            'required' => false,
            'example' => 'GBK',
          ),
        ),
        38 => 
        array (
          'name' => 'UseBodyEncoding',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'useBodyEncodingForURI是否启用。

> 应用配置不设置该参数，使用默认值false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        39 => 
        array (
          'name' => 'RequestsmCpu',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用创建时，应用实例的CPU限额，单位：毫核数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '500',
          ),
        ),
        40 => 
        array (
          'name' => 'LimitmCpu',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用运行过程中，应用实例的CPU限额。 单位：毫核数，设置为0表示不限制。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1000',
          ),
        ),
        41 => 
        array (
          'name' => 'RuntimeClassName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容器运行时类型，仅适用于使用安全沙箱容器的集群。',
            'type' => 'string',
            'required' => false,
            'example' => 'runc',
          ),
        ),
        42 => 
        array (
          'name' => 'DeployAcrossZones',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否将应用实例分布到多可用区。`true`代表是，其他值为否。',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
          ),
        ),
        43 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变更流程超时时间，单位：秒。取值范围为1~1800秒，不填默认为1800秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
        44 => 
        array (
          'name' => 'EnableAhas',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否接入AHAS：
 
- true：接入AHAS。
- false：不接入AHAS。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        45 => 
        array (
          'name' => 'WebContainerConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Tomcat容器配置，设置为""或"{}"表示删除配置：
- useDefaultConfig：是否使用自定义配置，若为true，则表示不使用自定义配置，若为false，则表示使用自定义配置。若不使用自定义配置，则下面的参数配置将不会生效。
- contextInputType：选择应用的访问路径。
    - war：无需填写自定义路径，应用的访问路径是WAR包名称。
    - root：无需填写自定义路径，应用的访问路径是`/`。
    - custom：需要在下面的自定义路径中填写自定义的路径。
- contextPath：自定义路径，当contextInputType类型为custom时，才需要配置此参数。
- httpPort：端口范围为1024~65535，小于1024的端口需要Root权限才能操作。因为容器配置的是Admin权限，所以请填写大于1024的端口。如果不配置，则默认为8080。
- maxThreads：配置连接池的连接数大小，默认大小是400。
   > 此项配置对应用性能有很大影响，请由专业人士配置。

- uriEncoding：Tomcat的编码格式，包括UTF-8、ISO-8859-1、GBK和GB2312。如果不设置则默认为ISO-8859-1。
- useBodyEncoding：是否使用BodyEncoding for URL。
- useAdvancedServerXml：是否使用高级配置自定义设置server.xml文件，当上述参数类型和具体参数无法满足您的需求时，可以选中使用高级设置，直接对Tomcat的Server.xml文件进行编辑。
- serverXml：高级配置中自定义设置的server.xml文本文件内容，当useAdvancedServerXml为true时生效。
',
            'type' => 'string',
            'required' => false,
            'example' => '{"useDefaultConfig":false,"contextInputType":"custom","contextPath":"hello","httpPort":8088,"maxThreads":400,"uriEncoding":"UTF-8","useBodyEncoding":true,"useAdvancedServerXml":false}',
          ),
        ),
        46 => 
        array (
          'name' => 'JavaStartUpConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Java启动参数用于在Java应用启动时配置启动参数。可配置：内存配置、应用、GC策略、工具、服务注册和发现配置和自定义等配置，正确配置这些参数有助于降低垃圾回收（GC）开销，从而缩短服务器响应时间并提高吞吐量。参数格式为JSON字符串：original为配置值，startup为启动参数，系统将自动拼接所有的startup作为应用程序的Java启动参数。设置为`""`或`"{}"`表示删除配置。JSON中key取值如下：

- InitialHeapSize：代表初始化堆大小。
- MaxHeapSize：代表最大堆大小。
- CustomParams：代表用户自定义内容，如JVM -D参数等。
- 其它情况：可自行查看前端提交的JSON结构。',
            'type' => 'string',
            'required' => false,
            'example' => '{"InitialHeapSize":{"original":512,"startup":"-Xms512m"},"MaxHeapSize":{"original":1024,"startup":"-Xmx1024m"},"CustomParams":{"original":"-Dcustom.property.sample=false","startup":"-Dcustom.property.sample=false"}}',
          ),
        ),
        47 => 
        array (
          'name' => 'SlsConfigs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Logstore配置，设置为`""`或`"{}"`表示删除配置：

- Configs：

    - type：采集类型，文件类型为file，标准输出类型为stdout。

    - Logstore：Logstore名称。请确保Logstore名称在同一个集群中不重复，其命名应符合规则。
        - 日志库名称仅支持小写字母、数字、短划线（-）和下划线（_）。
        - 必须以小写字母和数字开头和结尾。
        - 名称长度为3~63个字符。若为空，则由系统自动生成。
    - LogDir：若为标准输出类型，则采集路径为stdout.log，若为文件类型，则为采集的文件路径，支持通配，采集路径应符合正则：`^/(.+)/(.*)^/$`。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"logstore":"thisisanotherfilelog","type":"file","logDir":"/var/log/*"},{"logstore":"","type":"stdout","logDir":"stdout.log"},{"logstore":"thisisafilelog","type":"file","logDir":"/tmp/log/*"}]',
          ),
        ),
        48 => 
        array (
          'name' => 'IsMultilingualApp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为多语言应用。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        49 => 
        array (
          'name' => 'DeployAcrossNodes',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否将应用实例分布到多个节点。`true`代表是，其他值为否。',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
          ),
        ),
        50 => 
        array (
          'name' => 'PvcMountDescs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置K8s PVC（PersistentVolumeClaim）挂载，支持将K8s PVC卷挂载到指定的容器目录。PvcMountDescs的配置参数说明如下：

- pvcName：PVC卷名称，PVC卷必须已经存在，且处于Bound状态。
-  mountPaths：挂载目录列表，支持配置多个挂载目录。每个挂载目录支持两个配置参数。
    * mountPath：挂载路径，以正斜线（/）开头的容器绝对路径。
    * readOnly：挂载模式，true为只读，false为可读写，默认为false。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"pvcName":"nas-pvc-1","mountPaths":[{"mountPath":"/usr/share/nginx/data"},{"mountPath":"/usr/share/nginx/html","readOnly":true}]}]',
          ),
        ),
        51 => 
        array (
          'name' => 'ConfigMountDescs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置K8s ConfigMap和Secret挂载，支持将ConfigMap和Secret挂载到指定的容器目录。ConfigMountDescs的配置参数说明如下：
- name：ConfigMap或Secret的名称。
- type：配置类型，支持ConfigMap和Secret两种类型。
- mountPath：挂载路径，以正斜线（/）开头的容器绝对路径。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"name":"nginx-config","type":"ConfigMap","mountPath":"/etc/nginx"},{"name":"tls-secret","type":"secret","mountPath":"/etc/ssh"}]',
          ),
        ),
        52 => 
        array (
          'name' => 'CsClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '只有在用户使用一个从未导入的集群来创建应用时，才需要指定csClusterId。',
            'type' => 'string',
            'required' => false,
            'example' => 'abcdefg',
          ),
        ),
        53 => 
        array (
          'name' => 'EnableAsm',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '只有在用户使用一个从未导入的集群来创建应用，同时开启ASM时，才需要设置这个值为true。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        54 => 
        array (
          'name' => 'EnvFroms',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置K8s EnvFrom类型的环境变量，将指定的ConfigMap或Secret挂载到指定目录，每个key对应目录下的一个文件，文件的内容为该key对应的value。

EnvFroms的配置参数说明如下：
 - configMapRef：ConfigMap引用，该字段包括以下参数：
    - name：ConfigMap名称。
- secretRef：Secret引用，该字段包括以下参数：
    - name：Secret名称。
',
            'type' => 'string',
            'required' => false,
            'example' => '[{"name":"appname","valueFrom":{"configMapKeyRef":{"name":"appconf","key":"name"}}}]',
          ),
        ),
        55 => 
        array (
          'name' => 'EmptyDirs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置K8s emptyDir挂载，支持将emptyDir卷挂载到指定的容器目录。EmptyDirs的配置参数说明如下：

- mountPath：容器挂载路径，必填。
- readOnly：是否只读，可选，true为只读，false为读写，默认为false。
- subPathExpr：子目录表达式，可选。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"mountPath":"/app-log","subPathExpr":"$(POD_IP)"},{"readOnly":true,"mountPath":"/etc/nginx"}]',
          ),
        ),
        56 => 
        array (
          'name' => 'BuildPackId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置`edas container`版本，与`edasContainerVersion`字段冲突。建议使用`edasContainerVersion`字段。',
            'type' => 'string',
            'required' => false,
            'example' => '-1',
          ),
        ),
        57 => 
        array (
          'name' => 'CustomAffinity',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义关联。',
            'type' => 'string',
            'required' => false,
            'example' => 'demo',
          ),
        ),
        58 => 
        array (
          'name' => 'CustomTolerations',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义公差。',
            'type' => 'string',
            'required' => false,
            'example' => 'demo',
          ),
        ),
        59 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '',
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '461',
          ),
        ),
        60 => 
        array (
          'name' => 'Annotations',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用Pod注解。',
            'type' => 'string',
            'required' => false,
            'example' => '{"annotation-name-1":"annotation-value-1","annotation-name-2":"annotation-value-2"}',
          ),
        ),
        61 => 
        array (
          'name' => 'Labels',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用Pod标签。',
            'type' => 'string',
            'required' => false,
            'example' => '{"label-name-1":"label-value-1","label-name-2":"label-value-2"}',
          ),
        ),
        62 => 
        array (
          'name' => 'EnableEmptyPushReject',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启推空保护',
            'description' => '是否开启推空保护：

- true：开启推空保护。
- false：不开启推空保护。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        63 => 
        array (
          'name' => 'EnableLosslessRule',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否启用无损上线规则',
            'description' => '是否启用无损上线规则：

- true：启用无损上线规则。
- false：不启用无损上线规则。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        64 => 
        array (
          'name' => 'LosslessRuleWarmupTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '无损上线服务预热时长',
            'description' => '服务预热时长，单位：秒。取值范围为0~86400秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '120',
          ),
        ),
        65 => 
        array (
          'name' => 'LosslessRuleDelayTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '无损上线延迟注册时长',
            'description' => '服务延迟注册时长，单位：秒。取值范围为0~86400秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        66 => 
        array (
          'name' => 'LosslessRuleFuncType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '无损上线服务预热曲线',
            'description' => '服务预热曲线。取值范围0~20。默认为2（适合于一般预热场景），表示在预热周期内服务提供者的流量接收曲线形状呈2次曲线形状。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        67 => 
        array (
          'name' => 'LosslessRuleAligned',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否启用无损滚动发布模式配置通过就绪检查前完成服务注册',
            'description' => '是否启用无损滚动发布模式配置通过就绪检查前完成服务注册：

- true：打开开关会为应用无侵入提供55199端口和/health路径的健康检查方式，当完成服务注册后，该接口返回200，否则返回500。
    > 若同时配置`LosslessRuleRelated`为`true`，则该接口检查是否完成服务预热。

- false：不为应用提供检查是否完成服务注册的接口。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        68 => 
        array (
          'name' => 'LosslessRuleRelated',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否启用无损滚动发布模式配置通过就绪检查前完成服务预热',
            'description' => '是否启用无损滚动发布模式配置通过就绪检查前完成服务预热：

- true：打开开关会为应用无侵入提供55199端口和/health路径的健康检查方式，当完成服务预热后，该接口返回200，否则返回500。
- false：不为应用提供检查是否完成服务预热的接口。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        69 => 
        array (
          'name' => 'ServiceConfigs',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用K8s服务信息',
            'description' => 'K8s服务Service配置。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"name": "test-svc-create","serviceType":"ClusterIP","portMappings":[{"servicePort": {"targetPort":8080,"port":80,"protocol":"TCP"}}]}]',
          ),
        ),
        70 => 
        array (
          'name' => 'AppTemplateName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '创建应用使用的应用模版名称，若创建应用时指定应用模版，则将优先使用应用模版和AppConfig参数确定应用配置，忽略其他配置',
            'description' => '创建应用使用的应用模版名称，若创建应用时指定应用模版，则将优先使用应用模版和AppConfig参数确定应用配置，忽略其他配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'app-template001',
          ),
        ),
        71 => 
        array (
          'name' => 'AppConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '使用应用模版时的应用配置，JSON格式字符串',
            'description' => '使用应用模版时的应用配置，JSON格式字符串。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        72 => 
        array (
          'name' => 'LimitEphemeralStorage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '临时存储资源需求上限，单位：GB。设置0表示不限制。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '4',
          ),
        ),
        73 => 
        array (
          'name' => 'RequestsEphemeralStorage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '临时存储最小资源需求，单位：GB。设置0表示不限制。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        74 => 
        array (
          'name' => 'SecretName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户指定的镜像拉取凭证名，需要自行创建相关Secret配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'edas-app-01-image-secret',
          ),
        ),
        75 => 
        array (
          'name' => 'ContainerRegistryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '构建镜像仓库使用的仓库ID，留空表示使用EDAS提供的默认仓库。当前只支持EDAS提供的默认仓库。',
            'type' => 'string',
            'required' => false,
            'example' => '留空',
          ),
        ),
        76 => 
        array (
          'name' => 'WorkloadType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建应用时Workload的类型，目前仅支持Deployment类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'Deployment',
          ),
        ),
        77 => 
        array (
          'name' => 'Sidecars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '为应用Pod设置Sidecar容器。支持设置容器配置的格式YAML，其值为Sidecar容器YAML配置base64编码后的值。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"yamlEncoded":"Y29tbWFuZDoKICAtIHRhaWwKICAtICctZicKICAtIC9kZXYvbnVsbAppbWFnZTogJ2J1c3lib3g6bGF0ZXN0JwpuYW1lOiBidXN5Ym94Cg=="}]',
          ),
        ),
        78 => 
        array (
          'name' => 'InitContainers',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '为应用Pod设置初始化容器。支持设置容器配置的格式YAML，其值为Init容器YAML配置base64编码后的值。',
            'type' => 'string',
            'required' => false,
            'example' => '[
      {
            "yamlEncoded": "Y29tbWFuZDoKICAtIHNsZWVwCiAgLSAnNjAnCmltYWdlOiAnYnVzeWJveDpsYXRlc3QnCm5hbWU6IGluaXQtYnVzeWJveAo="
      }
]',
          ),
        ),
        79 => 
        array (
          'name' => 'UserBaseImageUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '使用自定义JDK运行时，需要配置基础镜像地址。该地址需要可公开访问，EDAS服务端会拉取该镜像，用于构建应用镜像。',
            'type' => 'string',
            'required' => false,
            'example' => 'openjdk:8u302',
          ),
        ),
        80 => 
        array (
          'name' => 'TerminateGracePeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置应用优雅停止超时时间。单位：秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '120',
          ),
        ),
        81 => 
        array (
          'name' => 'ImagePlatforms',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '镜像目标平台架构，当使用war、jar部署时有效，输入样例：1.指定x86 64架构：linux/amd64
2.指定arm 64架构：linux/arm64
3.指定构建双架构镜像：linux/amd64,linux/arm64
4.不输入：默认架构',
            'description' => '镜像目标平台架构，当使用war、jar部署时有效，输入样例：

- 指定x86 64架构：linux/amd64

- 指定arm 64架构：linux/arm64

- 指定构建双架构镜像：linux/amd64,linux/arm64

- 不输入：默认架构',
            'type' => 'string',
            'required' => false,
          ),
        ),
        82 => 
        array (
          'name' => 'Startup',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '启动探针可以用于对慢启动容器进行存活性检测，避免它们在启动运行之前就被杀掉，格式如：{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"httpGet": {"path": "/consumer","port": 8080,"scheme": "HTTP","httpHeaders": \\[{"name": "test","value": "testvalue"}\\]}}。

如果设置为""或者{}表示删除，不设置表示忽略。',
            'type' => 'string',
            'required' => false,
            'example' => '{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"tcpSocket":{"host":"", "port":8080}}',
          ),
        ),
        83 => 
        array (
          'name' => 'FeatureConfig',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        84 => 
        array (
          'name' => 'CustomAgentVersion',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-****',
              ),
              'ApplicationInfo' => 
              array (
                'description' => '应用详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'ChangeOrderId' => 
                  array (
                    'description' => '变更流程ID，可调用GetChangeOrderInfo接口获取，详情请参见[GetChangeOrderInfo](~~62072~~)。',
                    'type' => 'string',
                    'example' => 'cd65b247-****-475b-ad4b-7039040d625c',
                  ),
                  'AppName' => 
                  array (
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Dockerize' => 
                  array (
                    'description' => '是否为Docker应用。
- true：是。
- false：否。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Owner' => 
                  array (
                    'description' => '负责人。',
                    'type' => 'string',
                    'example' => 'zp',
                  ),
                  'EdasId' => 
                  array (
                    'description' => '用户账号ID。',
                    'type' => 'string',
                    'example' => '1172****6608****',
                  ),
                  'ClusterType' => 
                  array (
                    'description' => '应用集群环境类型如下：
- 0：普通Docker集群。
- 1：Swarm集群（已下线）。
- 2：ECS集群。
- 3：EDAS自建K8s集群（已下线）。
- 4：Pandora自动注册应用集群类型。
- 5：容器服务K8s集群和Serverless K8s集群。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'AppId' => 
                  array (
                    'description' => '应用ID，可通过调用ListApplication接口获取，详情请参见[ListApplication](~~149390~~)。',
                    'type' => 'string',
                    'example' => 'e83acea6-****-47e1-96ae-c0e95377****',
                  ),
                  'UserId' => 
                  array (
                    'description' => '用户主账号。',
                    'type' => 'string',
                    'example' => 'edas_test****@aliyun****.com',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '地域ID。',
                    'type' => 'string',
                    'example' => 'cn-beijing',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-****\\",\\n  \\"ApplicationInfo\\": {\\n    \\"ChangeOrderId\\": \\"cd65b247-****-475b-ad4b-7039040d625c\\",\\n    \\"AppName\\": \\"test\\",\\n    \\"Dockerize\\": true,\\n    \\"Owner\\": \\"zp\\",\\n    \\"EdasId\\": \\"1172****6608****\\",\\n    \\"ClusterType\\": 5,\\n    \\"AppId\\": \\"e83acea6-****-47e1-96ae-c0e95377****\\",\\n    \\"UserId\\": \\"edas_test****@aliyun****.com\\",\\n    \\"RegionId\\": \\"cn-beijing\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<InsertK8sApplicationResponse>\\n<RequestId>b197-40ab-9155-****</RequestId>\\n<Message>success</Message>\\n<ApplicationInfo>\\n    <Dockerize>true</Dockerize>\\n    <EdasId>1172****6608****</EdasId>\\n    <Owner>zp</Owner>\\n    <AppId>e83acea6-****-47e1-96ae-c0e95377****</AppId>\\n    <UserId>edas_test****@aliyun****.com</UserId>\\n    <ChangeOrderId>cd65b247-****-475b-ad4b-7039040d625c</ChangeOrderId>\\n    <RegionId>cn-beijing</RegionId>\\n    <ClusterType>5</ClusterType>\\n    <AppName>test</AppName>\\n</ApplicationInfo>\\n<Code>200</Code>\\n</InsertK8sApplicationResponse>","errorExample":""}]',
      'title' => '创建K8s应用',
      'summary' => '在容器服务K8s集群或Serverless K8s集群中创建应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeployK8sApplication' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_apps',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PreStop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '停止前执行脚本，示例格式：`{"tcpSocket":{"host":"", "port":8080}}`。
如果设置为`{}`代表删除，不设置表示忽略。',
            'type' => 'string',
            'required' => false,
            'example' => '{
    "exec":{
        "command":[
            "ls",
            "/"
        ]
    }
}',
          ),
        ),
        1 => 
        array (
          'name' => 'Envs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署环境变量，格式需要符合JSON对象数组。支持三种类型的环境变量，分别是普通环境变量，K8s ConfigMap环境变量，K8s Secret环境变量。普通环境变量格式如下所示：

`{"name":"x", "value": "y"}`

ConfigMap环境变量配置可以将指定的ConfigMap中对应的key的值注入到容器的环境变量中，配置的格式如下所示：

`{
  "name": "x2",
  "valueFrom": {
    "configMapKeyRef": {
      "name": "my-config",
      "key": "y2"
    }
  }
}`

Secret环境变量配置可以将指定的Secret中对应的key的值注入到容器的环境变量中，配置的格式如下所示：

`{
  "name": "x3",
  "valueFrom": {
    "secretKeyRef": {
      "name": "my-secret",
      "key": "y3"
    }
  }
}`

> 如果要取消该配置，需设置一个空JSON数组“[]”来表示不做配置。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"name":"x1","value":"y1"},{"name":"x2","valueFrom":{"configMapKeyRef":{"name":"my-config","key":"y2"}}},{"name":"x3","valueFrom":{"secretKeyRef":{"name":"my-secret","key":"y3"}}}]',
          ),
        ),
        2 => 
        array (
          'name' => 'ImageTag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像Tag。',
            'type' => 'string',
            'required' => false,
            'example' => 'latest',
          ),
        ),
        3 => 
        array (
          'name' => 'BatchWaitTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Pod分批发布的最小间隔时间，详细信息请参见[minReadySeconds](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#min-ready-seconds)。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'Command',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容器启动命令。

> 如果要取消该配置，需设置一个空字符串`""`来表示不做配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'ls',
          ),
        ),
        5 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可通过调用ListApplication接口获取，详情请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'e83acea6-****-47e1-96ae-c0e953772cdc',
          ),
        ),
        6 => 
        array (
          'name' => 'PostStart',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '启动后执行脚本，格式如：`{"exec":{"command":\\["cat","/etc/group"\\]}}`。如果设置为`{}`表示删除，不设置表示忽略。',
            'type' => 'string',
            'required' => false,
            'example' => '{
    "exec":{
        "command":[
            "ls",
            "/"
        ]
    }
}',
          ),
        ),
        7 => 
        array (
          'name' => 'Readiness',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容器业务状态检查，如果检查失败，经过K8s service的流量将不转入到该容器，格式如：`{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"httpGet": {"path": "/consumer","port": 8080,"scheme": "HTTP","httpHeaders": \\[{"name": "test","value": "testvalue"}\\]}}`。如果设置为`""`或者`{}`表示删除，不设置表示忽略。',
            'type' => 'string',
            'required' => false,
            'example' => '{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"httpGet": {"path": "/consumer","port": 8080,"scheme": "HTTP","httpHeaders": [{"name": "test","value": "testvalue"}]}}',
          ),
        ),
        8 => 
        array (
          'name' => 'Liveness',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容器存活状态监测，格式如`{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"tcpSocket":{"host":"", "port":8080}}`。如果设置为`""`或者`{}`表示删除，不设置表示忽略。',
            'type' => 'string',
            'required' => false,
            'example' => '{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"tcpSocket":{"host":"", "port":8080}}',
          ),
        ),
        9 => 
        array (
          'name' => 'Args',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容器启动Args命令参数，格式必须符合JSON数组`\\["参数1","参数2"\\]`，其中key固定为字符串，清空需设置为空JSON数组`"\\[\\]"`。',
            'type' => 'string',
            'required' => false,
            'example' => '["args1","args2"]',
          ),
        ),
        10 => 
        array (
          'name' => 'Replicas',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用实例数，最小为0。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        11 => 
        array (
          'name' => 'Image',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像完整URL，覆盖镜像Tag参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'registry-vpc.cn-beijing.aliyuncs.com/t****/app:v1',
          ),
        ),
        12 => 
        array (
          'name' => 'CpuLimit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用运行过程中，应用实例的CPU限制。 单位：核数，设置为0表示不限制。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        13 => 
        array (
          'name' => 'MemoryLimit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用运行过程中，应用实例的内存限制。单位：MB，设置为0表示不限制。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        14 => 
        array (
          'name' => 'CpuRequest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用运行过程中，应用实例需要申请的CPU配额，推荐设置。
单位：核数，设置为0表示不限制。

> 设置该参数时，还需要设置CpuLimit参数，且需要小于等于CpuLimit的参数值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        15 => 
        array (
          'name' => 'MemoryRequest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用运行过程中，应用实例需要申请的内存配额，推荐设置。单位：MB。设置为0表示不申请。

> 设置该参数时，还需要设置MemoryLimit参数，且需要小于等于MemoryLimit的参数值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        16 => 
        array (
          'name' => 'NasId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '挂载的NAS的ID，必须与集群在同一个地域。它必须有可用的挂载点创建额度，或者它的挂载点已经在VPC内的交换机上。如果不填，且存在mountDescs字段，则默认将自动购买一个NAS并挂载到VPC内的交换机上。',
            'type' => 'string',
            'required' => false,
            'example' => 'dfs23****',
          ),
        ),
        17 => 
        array (
          'name' => 'MountDescs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '挂载配置描述，为一个序列化的JSON。例如：`\\[{"nasPath": "/k8s","mountPath": "/mnt"},{"nasPath": "/files","mountPath": "/app/files"}\\]`。其中，nasPath是指文件储存路径；mountPath是指挂载到容器内的路径。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"nasPath": "/k8s","mountPath": "/mnt"},{"nasPath": "/files","mountPath": "/app/files"}]',
          ),
        ),
        18 => 
        array (
          'name' => 'StorageType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAS存储类型，包括：
* 通用型NAS：Capacity（容量型）、Performance（性能型）
* 极速型NAS：standard（标准型）、advance（高级型）

目前只支持Performance类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'Performance',
          ),
        ),
        19 => 
        array (
          'name' => 'LocalVolume',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '宿主机文件挂载到容器内的配置。例如：`\\[{"type":"","nodePath":"/localfiles","mountPath":"/app/files"},{"type":"Directory","nodePath":"/mnt","mountPath":"/app/storage"}\\]`。其中，nodePath为宿主机路径；mountPath为容器内的路径；type为挂载类型。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"type":"","nodePath":"/localfiles","mountPath":"/app/files"},{"type":"Directory","nodePath":"/mnt","mountPath":"/app/storage"}]',
          ),
        ),
        20 => 
        array (
          'name' => 'PackageUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署包地址。通过FatJar或WAR包部署的应用需要配置部署包地址。

> EDAS POP API的Java或者Python SDK需要2.44.0或以上版本。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://e***.oss-cn-beijing.aliyuncs.com/s***-1.0-SNAPSHOT-spring-boot.jar',
          ),
        ),
        21 => 
        array (
          'name' => 'PackageVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署包的版本号，WAR和FatJar类型必填。请自定义它的含义。

> EDAS POP API的Java或者Python SDK需要2.44.0或以上版本。',
            'type' => 'string',
            'required' => false,
            'example' => '20200720',
          ),
        ),
        22 => 
        array (
          'name' => 'JDK',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署的包依赖的JDK版本。可选的参数值为Open JDK 7、Open JDK 8或Custom OpenJDK。镜像部署方式不支持此参数。当使用Custom OpenJDK时，还需配置UserBaseImageUrl字段。',
            'type' => 'string',
            'required' => false,
            'example' => 'Open JDK 8',
          ),
        ),
        23 => 
        array (
          'name' => 'WebContainer',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署包依赖的Tomcat版本。适用于通过WAR包部署的Spring Cloud和Dubbo应用，镜像不支持此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'apache-tomcat-7.0.91',
          ),
        ),
        24 => 
        array (
          'name' => 'EdasContainerVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署包依赖的EDAS Container版本。适用于通过WAR包部署的HSF应用，镜像不支持此参数。',
            'type' => 'string',
            'required' => false,
            'example' => '3.5.9',
          ),
        ),
        25 => 
        array (
          'name' => 'UriEncoding',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'URI编码方式，支持ISO-8859-1、GBK、GB2312和UTF-8。

> 应用配置不设置该参数，使用Tomcat默认值。',
            'type' => 'string',
            'required' => false,
            'example' => 'GBK',
          ),
        ),
        26 => 
        array (
          'name' => 'UseBodyEncoding',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'useBodyEncodingForURI是否启用。

> 应用配置不设置该参数，使用默认值false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        27 => 
        array (
          'name' => 'UpdateStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批发布策略

- 例1：灰度1台+后续分2批+自动分批+分批间隔1分钟。
`{"type":"GrayBatchUpdate","batchUpdate":{"batch":2,"releaseType":"auto","batchWaitTime":1},"grayUpdate":{"gray":1}}`

- 例2：灰度1台+后续分2批+手动分批。
`{"type":"GrayBatchUpdate","batchUpdate":{"batch":2,"releaseType":"manual"},"grayUpdate":{"gray":1}}`

- 例3：分2批+自动分批+分批间隔0分钟。
`{"type":"BatchUpdate","batchUpdate":{"batch":2,"releaseType":"auto","batchWaitTime":0}}`',
            'type' => 'string',
            'required' => false,
            'example' => '{"type":"GrayBatchUpdate","batchUpdate":{"batch":2,"releaseType":"auto","batchWaitTime":1},"grayUpdate":{"gray":1}}',
          ),
        ),
        28 => 
        array (
          'name' => 'McpuRequest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'CPU最小资源需求，单位：核数。设置为0表示不限制。

> 设置该参数时，还需要设置CpuLimit参数，且需要小于等于CpuLimit的参数值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '4',
          ),
        ),
        29 => 
        array (
          'name' => 'McpuLimit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'CPU能使用的最大值，单位：核数。设置为0表示不做限制。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        30 => 
        array (
          'name' => 'VolumesStr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据卷。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        31 => 
        array (
          'name' => 'PackageVersionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署包版本ID。',
            'type' => 'string',
            'required' => false,
            'example' => '2bcc********',
          ),
        ),
        32 => 
        array (
          'name' => 'ChangeOrderDesc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变更记录描述。',
            'type' => 'string',
            'required' => false,
            'example' => '升级',
          ),
        ),
        33 => 
        array (
          'name' => 'RuntimeClassName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容器运行时类型：

* runc：普通容器运行时。
* runv：安全沙箱容器。

该参数仅适用于使用安全沙箱容器的集群。',
            'type' => 'string',
            'required' => false,
            'example' => 'runc',
          ),
        ),
        34 => 
        array (
          'name' => 'DeployAcrossZones',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否将应用实例分布到多可用区。true为是，其他值为否。',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
          ),
        ),
        35 => 
        array (
          'name' => 'BatchTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '单批发布超时时间，单位：秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
        36 => 
        array (
          'name' => 'EnableAhas',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否接入AHAS。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        37 => 
        array (
          'name' => 'WebContainerConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Tomcat容器配置，设置为`""`或`"{}"`表示删除配置：
- useDefaultConfig：是否使用自定义配置，若为true，则表示不使用自定义配置，若为false，则表示使用自定义配置。若不使用自定义配置，则下面的参数配置将不会生效。
- contextInputType：选择应用的访问路径。
    - war：无需填写自定义路径，应用的访问路径是WAR包名称。
    - root：无需填写自定义路径，应用的访问路径是/。
    - custom：需要在下面的自定义路径中填写自定义的路径。
- contextPath：自定义路径，当contextInputType类型为custom时，才需要配置此参数。
- httpPort：端口范围为1024~65535，小于1024的端口需要Root权限才能操作。因为容器配置的是Admin权限，所以请填写大于1024的端口。如果不配置，则默认为8080。
- maxThreads：配置连接池的连接数大小，默认大小是400。
  
  > 此项配置对应用性能有很大影响，请由专业人士配置。

- uriEncoding：Tomcat的编码格式，包括UTF-8、ISO-8859-1、GBK和GB2312。如果不设置则默认为ISO-8859-1。
- useBodyEncoding：是否使用BodyEncoding for URL。
- useAdvancedServerXml：是否使用高级配置自定义设置`server.xml`文件，当上述参数类型和具体参数无法满足您的需求时，可以选中使用高级设置，直接编辑Tomcat的`Server.xml`文件。
- serverXml：高级配置中自定义设置的`server.xml`文本文件内容，当useAdvancedServerXml为true时生效。
',
            'type' => 'string',
            'required' => false,
            'example' => '{"useDefaultConfig":false,"contextInputType":"custom","contextPath":"hello","httpPort":8088,"maxThreads":400,"uriEncoding":"UTF-8","useBodyEncoding":true,"useAdvancedServerXml":false}',
          ),
        ),
        38 => 
        array (
          'name' => 'JavaStartUpConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Java启动参数用于在Java应用启动时配置启动参数。可配置：内存配置、应用、GC策略、工具、服务注册和发现配置和自定义等配置，正确配置这些参数有助于降低垃圾回收（GC）开销，从而缩短服务器响应时间并提高吞吐量。参数格式为JSON字符串：original为配置值，startup为启动参数，系统将自动拼接所有的startup作为应用程序的Java启动参数。设置为`""`或`"{}"`表示删除配置。',
            'type' => 'string',
            'required' => false,
            'example' => '{"InitialHeapSize":{"original":512,"startup":"-Xms512m"},"MaxHeapSize":{"original":1024,"startup":"-Xmx1024m"}}',
          ),
        ),
        39 => 
        array (
          'name' => 'SlsConfigs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Logstore配置，设置为`""`或`"{}"`表示删除配置：

- Configs：

    - type：采集类型，文件类型为file，标准输出类型为stdout。

    - Logstore：logstore名称。请确保Logstore名称在同一个集群中不重复，其命名应符合规则：
        - Logstore名称仅支持小写字母、数字、短划线（-）和下划线（_）。
        - 必须以小写字母和数字开头和结尾。
        - 名称长度为3~63个字符。若为空，则由系统自动生成。
    - LogDir：若为标准输出类型，则采集路径为stdout.log，若为文件类型，则为采集的文件路径，支持通配，采集路径应符合正则：`^/(.+)/(.*)^/$`。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"logstore":"thisisanotherfilelog","type":"file","logDir":"/var/log/*"},{"logstore":"","type":"stdout","logDir":"stdout.log"},{"logstore":"thisisafilelog","type":"file","logDir":"/tmp/log/*"}]',
          ),
        ),
        40 => 
        array (
          'name' => 'DeployAcrossNodes',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否将应用实例分布到多个节点。true为是，其他值为否。',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
          ),
        ),
        41 => 
        array (
          'name' => 'TrafficControlStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '灰度发布流量控制策略。',
            'type' => 'string',
            'required' => false,
            'example' => '{"http":{"rules":[{"conditionType":"percent","percent":10}]}}',
          ),
        ),
        42 => 
        array (
          'name' => 'PvcMountDescs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置K8s PVC（PersistentVolumeClaim）挂载，支持将K8s PVC卷挂载到指定的容器目录。PvcMountDescs的配置参数说明如下：

- pvcName：PVC卷名称，PVC卷必须已经存在，且处于Bound状态。
-  mountPaths：挂载目录列表，支持配置多个挂载目录。每个挂载目录支持以下两个配置参数：
    * mountPath：挂载路径，以正斜线（/）开头的容器绝对路径。
    * readOnly：挂载模式，true为只读，false为可读写，默认为false。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"pvcName":"nas-pvc-1","mountPaths":[{"mountPath":"/usr/share/nginx/data"},{"mountPath":"/usr/share/nginx/html","readOnly":true}]}]',
          ),
        ),
        43 => 
        array (
          'name' => 'ConfigMountDescs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置K8s ConfigMap和Secret挂载，支持将ConfigMap和Secret挂载到指定的容器目录。ConfigMountDescs的配置参数说明如下：
- name：ConfigMap或Secret的名称。
- type：配置类型，支持ConfigMap和Secret两种类型。
- mountPath：挂载路径，以正斜线（/）开头的容器绝对路径。',
            'type' => 'string',
            'required' => false,
            'example' => '[
      {
            "name": "nginx-config",
            "type": "ConfigMap",
            "mountPath": "/etc/nginx"
      },
      {
            "name": "tls-secret",
            "type": "Secret",
            "mountPath": "/etc/ssh"
      }
]',
          ),
        ),
        44 => 
        array (
          'name' => 'EnvFroms',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置K8s EnvFrom类型的环境变量，将指定的ConfigMap或Secret挂载到指定目录，每个key对应目录下的一个文件，文件的内容为该key对应的value。

EnvFroms的配置参数说明如下。
 - configMapRef：ConfigMap引用，该字段包括以下参数：
    - name：ConfigMap名称。
- secretRef：Secret引用，该字段包括以下参数：
    - name：Secret名称。
',
            'type' => 'string',
            'required' => false,
            'example' => '[{"name":"appname","valueFrom":{"configMapKeyRef":{"name":"appconf","key":"name"}}}]',
          ),
        ),
        45 => 
        array (
          'name' => 'EmptyDirs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置K8s emptyDir挂载，支持将emptyDir卷挂载到指定的容器目录。EmptyDirs的配置参数说明如下：

- mountPath：容器挂载路径，必填。
- readOnly：是否只读，可选，true为只读，false为读写，默认为false。
- subPathExpr：子目录表达式，可选。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"mountPath":"/app-log","subPathExpr":"$(POD_IP)"},{"readOnly":true,"mountPath":"/etc/nginx"}]',
          ),
        ),
        46 => 
        array (
          'name' => 'CustomAffinity',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Pod亲和性配置，当且仅当DeployAcrossNodes与DeployAcrossZones都为false时生效。',
            'type' => 'string',
            'required' => false,
            'example' => '{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"NotIn","values":["arm64","arm32"]}]}]},"preferredDuringSchedulingIgnoredDuringExecution":[{"weight":5,"preference":{"matchExpressions":[{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}}]},"podAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":[{"namespaces":["default"],"topologyKey":"kubernetes.io/hostname","labelSelector":{"matchExpressions":[{"key":"edas.oam.acname","operator":"NotIn","values":["edas-test-app"]}]}}]},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"namespaces":["default"],"topologyKey":"failure-domain.beta.kubernetes.io/zone","labelSelector":{"matchExpressions":[{"key":"edas.oam.acname","operator":"In","values":["edas-test-app-2"]}]}},"weight":15}]}}',
          ),
        ),
        47 => 
        array (
          'name' => 'CustomTolerations',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Pod调度容忍配置，当且仅当DeployAcrossNodes与DeployAcrossZones都为false时生效。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"key":"edas-taint-key2","operator":"Exists","effect":"NoExecute","tolerationSeconds":50},{"key":"edas-taint-key","operator":"Equal","value":"edas-taint-value","effect":"PreferNoSchedule"}]',
          ),
        ),
        48 => 
        array (
          'name' => 'BuildPackId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EDAS-Container构建包号：

- 如果部署时不需要更改EDAS-Container版本，则该参数可不设置。
- 如果需要在本次部署时，更新目标应用的EDAS-Container版本，则需要设置。

有以下两种获取方式：

- 可通过查询容器版本列表接口ListBuildPack获取，请参见[ListBuildPack](~~423222~~)。
- 在[容器版本说明](~~92614~~)表格中的**构建包序号**列获取。例如`59`表示`EDAS-Container 3.5.8 版本`。',
            'type' => 'string',
            'required' => false,
            'example' => '59',
          ),
        ),
        49 => 
        array (
          'name' => 'Annotations',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用Pod注解。',
            'type' => 'string',
            'required' => false,
            'example' => '{"annotation-name-1":"annotation-value-1","annotation-name-2":"annotation-value-2"}',
          ),
        ),
        50 => 
        array (
          'name' => 'Labels',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用Pod标签。',
            'type' => 'string',
            'required' => false,
            'example' => '{"label-name-1":"label-value-1","label-name-2":"label-value-2"}',
          ),
        ),
        51 => 
        array (
          'name' => 'EnableEmptyPushReject',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启推空保护',
            'description' => '是否开启推空保护：

- true：开启推空保护。
- false：不开启推空保护。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        52 => 
        array (
          'name' => 'EnableLosslessRule',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否启用无损上线规则',
            'description' => '是否启用无损上线规则：

- true：启用无损上线规则。
- false：不启用无损上线规则。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        53 => 
        array (
          'name' => 'LosslessRuleWarmupTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '无损上线服务预热时长',
            'description' => '服务预热时长，单位：秒。取值范围为0~86400秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '120',
          ),
        ),
        54 => 
        array (
          'name' => 'LosslessRuleDelayTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '无损上线延迟注册时长',
            'description' => '服务延迟注册时长，单位：秒。取值范围为0~86400秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        55 => 
        array (
          'name' => 'LosslessRuleFuncType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '无损上线服务预热曲线',
            'description' => '服务预热曲线。取值范围0~20。默认为2（适合于一般预热场景），表示在预热周期内服务提供者的流量接收曲线形状呈2次曲线形状。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        56 => 
        array (
          'name' => 'LosslessRuleAligned',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否启用无损滚动发布模式配置通过就绪检查前完成服务注册',
            'description' => '是否启用无损滚动发布模式配置通过就绪检查前完成服务注册：

- true：打开开关会为应用无侵入提供55199端口和/health路径的健康检查方式，当完成服务注册后，该接口返回200，否则返回500。
> 若同时配置`LosslessRuleRelated`为true，则该接口检查是否完成服务预热。

- false：不为应用提供检查是否完成服务注册的接口。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        57 => 
        array (
          'name' => 'LosslessRuleRelated',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否启用无损滚动发布模式配置通过就绪检查前完成服务预热',
            'description' => '是否启用无损滚动发布模式配置通过就绪检查前完成服务预热：

- true：打开开关会为应用无侵入提供55199端口和/health路径的健康检查方式，当完成服务预热后，该接口返回200，否则返回500。
- false：不为应用提供检查是否完成服务预热的接口。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        58 => 
        array (
          'name' => 'LimitEphemeralStorage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '临时存储资源需求上限，单位：GB。设置0表示不限制。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '4',
          ),
        ),
        59 => 
        array (
          'name' => 'RequestsEphemeralStorage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '临时存储最小资源需求，单位：GB。设置0表示不限制。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        60 => 
        array (
          'name' => 'Sidecars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '为应用Pod设置Sidecar容器。支持设置容器配置的格式YAML，其值为Sidecar容器YAML配置base64编码后的值。',
            'type' => 'string',
            'required' => false,
            'example' => '[
      {
            "yamlEncoded": "Y29tbWFuZDoKICAtIHRhaWwKICAtICctZicKICAtIC9kZXYvbnVsbAppbWFnZTogJ2J1c3lib3g6bGF0ZXN0JwpuYW1lOiBidXN5Ym94Cg=="
      }
]',
          ),
        ),
        61 => 
        array (
          'name' => 'InitContainers',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '为应用Pod设置初始化容器。支持设置容器配置的格式YAML，其值为Init容器YAML配置base64编码后的值。',
            'type' => 'string',
            'required' => false,
            'example' => '[
      {
            "yamlEncoded": "Y29tbWFuZDoKICAtIHNsZWVwCiAgLSAnNjAnCmltYWdlOiAnYnVzeWJveDpsYXRlc3QnCm5hbWU6IGluaXQtYnVzeWJveAo="
      }
]',
          ),
        ),
        62 => 
        array (
          'name' => 'UserBaseImageUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '使用自定义JDK运行时，需要配置基础镜像地址。该地址需要可公开访问，EDAS服务端会拉取该镜像，用于构建应用镜像。',
            'type' => 'string',
            'required' => false,
            'example' => 'openjdk:8u302',
          ),
        ),
        63 => 
        array (
          'name' => 'CanaryRuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '金丝雀规则策略ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'a8daf22e-****-968c7ff2ea34',
          ),
        ),
        64 => 
        array (
          'name' => 'TerminateGracePeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置应用优雅停止超时时间。单位：秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '120',
          ),
        ),
        65 => 
        array (
          'name' => 'ImagePlatforms',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '镜像目标平台架构，当使用war、jar部署时有效，输入样例：
1.指定x86 64架构：linux/amd64
2.指定arm 64架构：linux/arm64
3.指定构建双架构镜像：linux/amd64,linux/arm64
4.不输入：默认架构',
            'description' => '镜像目标平台架构，当使用war、jar部署时有效，输入样例：

- 指定x86 64架构：linux/amd64

- 指定arm 64架构：linux/arm64

- 指定构建双架构镜像：linux/amd64,linux/arm64

- 不输入：默认架构',
            'type' => 'string',
            'required' => false,
          ),
        ),
        66 => 
        array (
          'name' => 'Startup',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '启动探针可以用于对慢启动容器进行存活性检测，避免它们在启动运行之前就被杀掉，格式如：{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"httpGet": {"path": "/consumer","port": 8080,"scheme": "HTTP","httpHeaders": [{"name": "test","value": "testvalue"}]}}。

如果设置为""或者{}表示删除，不设置表示忽略。',
            'type' => 'string',
            'required' => false,
            'example' => '{"failureThreshold": 3,"initialDelaySeconds": 5,"successThreshold": 1,"timeoutSeconds": 1,"tcpSocket":{"host":"", "port":8080}}',
          ),
        ),
        67 => 
        array (
          'name' => 'CustomAgentVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置应用挂载的自定义ArmsAgent探针版本。

> 该功能为白名单开放。如有需求，请提交工单申请加入白名单。',
            'type' => 'string',
            'required' => false,
            'example' => '3.1.4',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID，可调用GetChangeOrderInfo接口获取，详情请参见[GetChangeOrderInfo](~~62072~~)。',
                'type' => 'string',
                'example' => 'cd65b247-****-475b-ad4b-7039040d625c',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息 。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'a5281053-08e4-47a5-b2ab-5c0323de*****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"cd65b247-****-475b-ad4b-7039040d625c\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"a5281053-08e4-47a5-b2ab-5c0323de*****\\"\\n}","errorExample":""},{"type":"xml","example":"<DeployK8sApplicationResponse>\\n    <ChangeOrderId>cd65b247-****-475b-ad4b-7039040d625c</ChangeOrderId>\\n    <Code>200</Code>\\n    <Message>success</Message>\\n    <RequestId>a5281053-08e4-47a5-b2ab-5c0323de*****</RequestId>\\n</DeployK8sApplicationResponse>","errorExample":""}]',
      'title' => '部署K8s应用',
      'summary' => '在容器服务K8s集群或Serverless K8s集群中部署应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ScaleK8sApplication' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_apps',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可调用[ListApplication](~~149390~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '23bf94d9-****-4994-****-616a827aa777',
          ),
        ),
        1 => 
        array (
          'name' => 'Replicas',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要扩容或保留的应用实例数量，最小为 0。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'minimum' => '0',
            'example' => '2',
          ),
        ),
        2 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变更流程超时时间，单位：秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '变更流程ID。可调用[GetChangeOrderInfo](~~62072~~)接口获取这次扩容或下线的具体执行进展。',
                'type' => 'string',
                'example' => '9d7232b2-****-****-b9d9-7e17695779ab',
              ),
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求唯一标识ID。',
                'type' => 'string',
                'example' => 'a5281053-08e4-47a5-b2ab-5c0323de7b5a',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"9d7232b2-****-****-b9d9-7e17695779ab\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"a5281053-08e4-47a5-b2ab-5c0323de7b5a\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>a5281053-08e4-47a5-b2ab-5c0323de7b5a</RequestId>\\n<Message>success</Message>\\n<ChangeOrderId>9d7232b2-****-****-b9d9-7e17695779ab</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '扩容或下线容器服务K8s集群应用实例',
      'summary' => '扩容或下线容器服务K8s集群的应用实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RestartK8sApplication' => 
    array (
      'path' => '/pop/v5/k8s/acs/restart_k8s_app',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可通过调用ListApplication接口来获取，详情请参见[ListApplication](~~149390~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '93fdd228-********ed2ae98de18d',
          ),
        ),
        1 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变更记录超时时间，单位：秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'ChangeOrderId' => 
              array (
                'description' => '此次操作的变更记录ID。',
                'type' => 'string',
                'example' => '*********-ed2ae98de18d',
              ),
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '03FD1520-0FD6-436A-****-265318D7****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ChangeOrderId\\": \\"*********-ed2ae98de18d\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"03FD1520-0FD6-436A-****-265318D7****\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>03FD1520-0FD6-436A-****-265318D7****</RequestId>\\n<Message>success</Message>\\n<ChangeOrderId>*********-ed2ae98de18d</ChangeOrderId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '重启K8s应用',
      'summary' => '调用RestartK8sApplication接口来重启部署在容器服务K8s集群或Serverless K8s集群中的应用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ConvertK8sResource' => 
    array (
      'path' => '/pop/v5/oam/k8s_resource_convert',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型，仅支持设置为deployment。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'deployment',
            'default' => '',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'deployment-to-convert',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'default',
            'default' => '',
          ),
        ),
        3 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID，参数详情的获取请参见[ListCluster](~~154995~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'b07c8192-****-adf4f7447720',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'convert success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BA938591-*********-9690-BFD3F4DD7A93',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"convert success\\",\\n  \\"RequestId\\": \\"BA938591-*********-9690-BFD3F4DD7A93\\"\\n}","type":"json"}]',
      'title' => '将资源转化为应用',
      'summary' => '将一个Deployment资源转化为应用。',
    ),
    'AbortAndRollbackChangeOrder' => 
    array (
      'path' => '/pop/v5/changeorder/change_order_abort_and_rollback',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ChangeOrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '变更单ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '6b55106c-c7f2-40f7-a1d4-092870*****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或 POP 错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '81E0B333-2871-****-****-B8F5FF43****',
              ),
              'TraceId' => 
              array (
                'description' => '调用链ID。',
                'type' => 'string',
                'example' => '210f07bf1640239405712621******',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '变更单信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'ChangeOrderId' => 
                  array (
                    'description' => '变更单ID。',
                    'type' => 'string',
                    'example' => '4f40e616-cdcd-4250-a018-efd459******',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"81E0B333-2871-****-****-B8F5FF43****\\",\\n  \\"TraceId\\": \\"210f07bf1640239405712621******\\",\\n  \\"ErrorCode\\": \\"success\\",\\n  \\"Data\\": {\\n    \\"ChangeOrderId\\": \\"4f40e616-cdcd-4250-a018-efd459******\\"\\n  }\\n}","type":"json"}]',
      'title' => '终止并回滚变更单',
      'summary' => '调用AbortAndRollbackChangeOrder接口终止并回滚变更单，适用于容器服务K8s集群中的应用。',
    ),
    'DeleteServiceGroup' => 
    array (
      'path' => '/pop/v5/service/serviceGroups',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务分组 ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '789d9cda-74b1-****-****-05e21a0a7661',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'Code码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID',
                'type' => 'string',
                'example' => 'ECD1D6FC-4307-4583-BA6F-215F38****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"ECD1D6FC-4307-4583-BA6F-215F38****\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '删除服务分组',
      'summary' => '调用DeleteServiceGroup删除服务分组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetServiceConsumersPage' => 
    array (
      'path' => '/pop/sp/api/mseForOam/getServiceConsumersPage',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou:doc-test',
          ),
        ),
        2 => 
        array (
          'name' => 'origin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据来源，取值如下：

- agent：新版服务查询需要传递。
- registry：旧版服务查询传递。',
            'type' => 'string',
            'required' => false,
            'example' => 'agent',
          ),
        ),
        3 => 
        array (
          'name' => 'serviceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'dubbo',
          ),
        ),
        4 => 
        array (
          'name' => 'appId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'efbda488-7b33-432f-a40d-****0047****',
          ),
        ),
        5 => 
        array (
          'name' => 'source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '来源，固定值：edas。',
            'type' => 'string',
            'required' => false,
            'example' => 'edas',
          ),
        ),
        6 => 
        array (
          'name' => 'serviceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务ID。已废弃，无需设置。',
            'type' => 'string',
            'required' => false,
            'example' => 'com.alibabacloud.hipstershop.CartService',
          ),
        ),
        7 => 
        array (
          'name' => 'serviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名。',
            'type' => 'string',
            'required' => false,
            'example' => 'com.alibabacloud.hipstershop.CartService',
          ),
        ),
        8 => 
        array (
          'name' => 'serviceVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务版本。',
            'type' => 'string',
            'required' => false,
            'example' => '1.0.0',
          ),
        ),
        9 => 
        array (
          'name' => 'group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组。',
            'type' => 'string',
            'required' => false,
            'example' => 'DUBBO',
          ),
        ),
        10 => 
        array (
          'name' => 'ip',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务提供者IP，支持模糊查询。',
            'type' => 'string',
            'required' => false,
            'example' => '10.20.x.xx',
          ),
        ),
        11 => 
        array (
          'name' => 'registryType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '注册类型。已废弃，无需设置。',
            'type' => 'string',
            'required' => false,
            'example' => 'nacos',
          ),
        ),
        12 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        13 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口请求的状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '接口请求返回的信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Success' => 
              array (
                'description' => '调用是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据结构体。',
                'type' => 'object',
                'properties' => 
                array (
                  'TotalPages' => 
                  array (
                    'description' => '总页数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TotalElements' => 
                  array (
                    'description' => '总数据量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'Size' => 
                  array (
                    'description' => '页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'Content' => 
                  array (
                    'description' => '组数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '组数据对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Ip' => 
                        array (
                          'description' => '服务消费者IP。',
                          'type' => 'string',
                          'example' => '10.20.x.xx',
                        ),
                        'EdasAppName' => 
                        array (
                          'description' => '服务消费者名称。',
                          'type' => 'string',
                          'example' => 'k8s-lq-cartservice',
                        ),
                        'EdassAppId' => 
                        array (
                          'description' => '服务消费者ID。',
                          'type' => 'string',
                          'example' => 'efbda488-7b33-432f-a40d-****0047****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TotalPages\\": 1,\\n    \\"TotalElements\\": 3,\\n    \\"Size\\": 5,\\n    \\"Content\\": [\\n      {\\n        \\"Ip\\": \\"10.20.x.xx\\",\\n        \\"EdasAppName\\": \\"k8s-lq-cartservice\\",\\n        \\"EdassAppId\\": \\"efbda488-7b33-432f-a40d-****0047****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetServiceConsumersPage>\\n<Message>success</Message>\\n<Data>\\n    <Size>5</Size>\\n    <Content>\\n        <EdassAppId>efbda488-7b33-432f-a40d-****0047****</EdassAppId>\\n        <EdasAppName>k8s-lq-cartservice</EdasAppName>\\n        <Ip>10.20.x.xx</Ip>\\n    </Content>\\n    <TotalElements>3</TotalElements>\\n    <TotalPages>1</TotalPages>\\n</Data>\\n<Code>200</Code>\\n<Success>true</Success>\\n</GetServiceConsumersPage>","errorExample":""}]',
      'title' => '查询微服务消费者列表',
      'summary' => '获取服务消费者列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetServiceListPage' => 
    array (
      'path' => '/pop/sp/api/mseForOam/getServiceListPage',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'cn-hangzhou:doc-test',
          ),
        ),
        2 => 
        array (
          'name' => 'origin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据来源，取值如下：

- `agent`：新版服务查询需要传递。
- `registry`：旧版服务查询传递。',
            'type' => 'string',
            'required' => false,
            'example' => 'Agent',
          ),
        ),
        3 => 
        array (
          'name' => 'serviceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务类型，取值如下：

- `dubbo`
- `springCloud`
- `hsf`
- `istio`',
            'type' => 'string',
            'required' => false,
            'example' => 'SpringCloud',
          ),
        ),
        4 => 
        array (
          'name' => 'searchType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '	
服务类型，取值如下：

- `app`：应用维度查询。
- `service`：服务维度查询。
- `providerIp`：IP维度查询。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'App',
          ),
        ),
        5 => 
        array (
          'name' => 'searchValue',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键字：

- 如果searchType=app，searchValue填写`appId`。
- 如果serachType=service，searchValue填写`serviceName`。
- 如果searchType=providerIp，searchValue填写应用IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'com.alibaba.edas.HelloService',
          ),
        ),
        6 => 
        array (
          'name' => 'side',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '提供者侧或者消费者侧，取值如下：

- provider
- consumer',
            'type' => 'string',
            'required' => false,
            'example' => 'provider',
          ),
        ),
        7 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，从0开始。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        8 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '接口请求返回的信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Success' => 
              array (
                'description' => '调用是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '	
数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'TotalPages' => 
                  array (
                    'description' => '总页数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TotalElements' => 
                  array (
                    'description' => '总数据量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '6',
                  ),
                  'Size' => 
                  array (
                    'description' => '页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '8',
                  ),
                  'Content' => 
                  array (
                    'description' => '组数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EdasAppName' => 
                        array (
                          'description' => '应用名。',
                          'type' => 'string',
                          'example' => 'k8s-lq-cartservice',
                        ),
                        'InstanceNum' => 
                        array (
                          'description' => '实例数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Version' => 
                        array (
                          'description' => '版本号。',
                          'type' => 'string',
                          'example' => '1.0.0',
                        ),
                        'ServiceId' => 
                        array (
                          'description' => '服务ID。',
                          'type' => 'string',
                          'example' => 'xx',
                        ),
                        'EdasAppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => 'efbda488-7b33-432f-****-36530047****',
                        ),
                        'ServiceName' => 
                        array (
                          'description' => '服务名。',
                          'type' => 'string',
                          'example' => 'com.alibabacloud.hipstershop.CartService',
                        ),
                        'RegisterType' => 
                        array (
                          'description' => '注册类型。',
                          'type' => 'string',
                          'example' => 'xx',
                        ),
                        'Group' => 
                        array (
                          'description' => '分组。',
                          'type' => 'string',
                          'example' => 'DUBBO',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TotalPages\\": 1,\\n    \\"TotalElements\\": 6,\\n    \\"Size\\": 8,\\n    \\"Content\\": [\\n      {\\n        \\"EdasAppName\\": \\"k8s-lq-cartservice\\",\\n        \\"InstanceNum\\": 1,\\n        \\"Version\\": \\"1.0.0\\",\\n        \\"ServiceId\\": \\"xx\\",\\n        \\"EdasAppId\\": \\"efbda488-7b33-432f-****-36530047****\\",\\n        \\"ServiceName\\": \\"com.alibabacloud.hipstershop.CartService\\",\\n        \\"RegisterType\\": \\"xx\\",\\n        \\"Group\\": \\"DUBBO\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetServiceListPageResponse>\\n    <Code>200</Code>\\n    <Message>success</Message>\\n    <Success>true</Success>\\n    <Data>\\n        <TotalPages>1</TotalPages>\\n        <TotalElements>6</TotalElements>\\n        <Size>8</Size>\\n        <Content>\\n            <EdasAppName>k8s-lq-cartservice</EdasAppName>\\n            <InstanceNum>1</InstanceNum>\\n            <Version>1.0.0</Version>\\n            <ServiceId>xx</ServiceId>\\n            <EdasAppId>efbda488-7b33-432f-****-36530047****</EdasAppId>\\n            <ServiceName>com.alibabacloud.hipstershop.CartService</ServiceName>\\n            <RegisterType>xx</RegisterType>\\n            <Group>DUBBO</Group>\\n        </Content>\\n    </Data>\\n</GetServiceListPageResponse>","errorExample":""}]',
      'title' => '查询微服务列表',
      'summary' => '调用GetServiceListPage接口获取服务列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetServiceMethodPage' => 
    array (
      'path' => '/pop/sp/api/mseForOam/getServiceMethodPage',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou:doc-test',
          ),
        ),
        2 => 
        array (
          'name' => 'origin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据来源。取值如下：
- agent：新版服务查询需要传递。
- registry：旧版服务查询传递。',
            'type' => 'string',
            'required' => false,
            'example' => 'agent',
          ),
        ),
        3 => 
        array (
          'name' => 'serviceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务类型，支持以下类型：
- dubbo：Dubbo服务。
- springCloud：SpringCloud服务。
- hsf：HSF服务。',
            'type' => 'string',
            'required' => false,
            'example' => 'springCloud',
          ),
        ),
        4 => 
        array (
          'name' => 'appId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => '310b18c3-1dbe-4807-****-18d7d637****',
          ),
        ),
        5 => 
        array (
          'name' => 'source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '来源，固定值：edas。',
            'type' => 'string',
            'required' => false,
            'example' => 'edas',
          ),
        ),
        6 => 
        array (
          'name' => 'serviceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'edas.service.consumer',
          ),
        ),
        7 => 
        array (
          'name' => 'serviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'edas.service.consumer',
          ),
        ),
        8 => 
        array (
          'name' => 'serviceVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务版本。',
            'type' => 'string',
            'required' => false,
            'example' => '1.0.0',
          ),
        ),
        9 => 
        array (
          'name' => 'group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组。',
            'type' => 'string',
            'required' => false,
            'example' => 'DUBBO',
          ),
        ),
        10 => 
        array (
          'name' => 'ip',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '127.0.0.1',
          ),
        ),
        11 => 
        array (
          'name' => 'registryType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '注册中心类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'nacos',
          ),
        ),
        12 => 
        array (
          'name' => 'pageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页号。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        13 => 
        array (
          'name' => 'pageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        14 => 
        array (
          'name' => 'methodController',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'controller方法。',
            'type' => 'string',
            'required' => false,
            'example' => 'com.aliware.edas.DemoController',
          ),
        ),
        15 => 
        array (
          'name' => 'path',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '请求路径。',
            'type' => 'string',
            'required' => false,
            'example' => '/echo/{str}',
          ),
        ),
        16 => 
        array (
          'name' => 'name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '方法名。',
            'type' => 'string',
            'required' => false,
            'example' => 'echo',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'HttpCode' => 
              array (
                'description' => 'HTTP响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BDC0C0FE-D63B-4FC8-****-4081C57E****',
              ),
              'Success' => 
              array (
                'description' => '调用是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据结构体。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '页号。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '分页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalSize' => 
                  array (
                    'description' => '总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '6',
                  ),
                  'Result' => 
                  array (
                    'description' => '方法结构体。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ParameterDetails' => 
                        array (
                          'description' => '参数详情。',
                          'type' => 'string',
                          'example' => '{}',
                        ),
                        'NameDetail' => 
                        array (
                          'description' => '方法详情。',
                          'type' => 'string',
                          'example' => 'name',
                        ),
                        'ParameterNames' => 
                        array (
                          'description' => '参数名称。',
                          'type' => 'string',
                          'example' => 'echo',
                        ),
                        'ParameterDefinitions' => 
                        array (
                          'description' => '参数定义。',
                          'type' => 'string',
                          'example' => '[{"description":"","name":"arg0","type":"java.lang.String"}]',
                        ),
                        'Paths' => 
                        array (
                          'description' => '方法路径。',
                          'type' => 'string',
                          'example' => '/consumer/alive',
                        ),
                        'ParameterTypes' => 
                        array (
                          'description' => '参数类型。',
                          'type' => 'string',
                          'example' => 'java.lang.String',
                        ),
                        'RequestMethods' => 
                        array (
                          'description' => '请求方法。',
                          'type' => 'string',
                          'example' => 'GET',
                        ),
                        'ReturnDetails' => 
                        array (
                          'description' => '返回详情。',
                          'type' => 'string',
                          'example' => 'java.lang.String',
                        ),
                        'Name' => 
                        array (
                          'description' => '方法名。',
                          'type' => 'string',
                          'example' => 'echo',
                        ),
                        'MethodController' => 
                        array (
                          'description' => '方法。',
                          'type' => 'string',
                          'example' => 'com.aliware.edas.EchoController',
                        ),
                        'ReturnType' => 
                        array (
                          'description' => '返回类型。',
                          'type' => 'string',
                          'example' => 'java.lang.String',
                        ),
                        'ReturnDefinition' => 
                        array (
                          'description' => '返回值。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'description' => '返回类型。',
                              'type' => 'string',
                              'example' => 'java.lang.String',
                            ),
                            'Id' => 
                            array (
                              'description' => '返回值ID。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"HttpCode\\": \\"200\\",\\n  \\"RequestId\\": \\"BDC0C0FE-D63B-4FC8-****-4081C57E****\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalSize\\": 6,\\n    \\"Result\\": [\\n      {\\n        \\"ParameterDetails\\": \\"{}\\",\\n        \\"NameDetail\\": \\"name\\",\\n        \\"ParameterNames\\": \\"echo\\",\\n        \\"ParameterDefinitions\\": \\"[{\\\\\\"description\\\\\\":\\\\\\"\\\\\\",\\\\\\"name\\\\\\":\\\\\\"arg0\\\\\\",\\\\\\"type\\\\\\":\\\\\\"java.lang.String\\\\\\"}]\\",\\n        \\"Paths\\": \\"/consumer/alive\\",\\n        \\"ParameterTypes\\": \\"java.lang.String\\",\\n        \\"RequestMethods\\": \\"GET\\",\\n        \\"ReturnDetails\\": \\"java.lang.String\\",\\n        \\"Name\\": \\"echo\\",\\n        \\"MethodController\\": \\"com.aliware.edas.EchoController\\",\\n        \\"ReturnType\\": \\"java.lang.String\\",\\n        \\"ReturnDefinition\\": {\\n          \\"Type\\": \\"java.lang.String\\",\\n          \\"Id\\": \\"1\\"\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetServiceMethodPage>\\n<HttpCode>200</HttpCode>\\n<RequestId>BDC0C0FE-D63B-4FC8-****-4081C57E****</RequestId>\\n<Message>success</Message>\\n<Data>\\n    <PageSize>10</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <TotalSize>6</TotalSize>\\n    <Result>\\n        <ParameterDefinitions>[{\\"description\\":\\"\\",\\"name\\":\\"arg0\\",\\"type\\":\\"java.lang.String\\"}]</ParameterDefinitions>\\n        <ParameterNames>echo</ParameterNames>\\n        <ParameterDetails>{}</ParameterDetails>\\n        <MethodController>com.aliware.edas.EchoController</MethodController>\\n        <Paths>/consumer/alive</Paths>\\n        <RequestMethods>GET</RequestMethods>\\n        <ParameterTypes>java.lang.String</ParameterTypes>\\n        <ReturnType>java.lang.String</ReturnType>\\n        <ReturnDetails>java.lang.String</ReturnDetails>\\n        <NameDetail>name</NameDetail>\\n        <Name>echo</Name>\\n    </Result>\\n    <Result>\\n        <ReturnDefinition>\\n            <Type>java.lang.String</Type>\\n            <Id>1</Id>\\n        </ReturnDefinition>\\n    </Result>\\n</Data>\\n<Code>200</Code>\\n<Success>true</Success>\\n</GetServiceMethodPage>","errorExample":""}]',
      'title' => '查询微服务方法列表',
      'summary' => '调用GetServiceMethodPage接口获取服务接口元数据列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetServiceProvidersPage' => 
    array (
      'path' => '/pop/sp/api/mseForOam/getServiceProvidersPage',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou:doc-test',
          ),
        ),
        2 => 
        array (
          'name' => 'origin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据来源。取值如下：
- agent：新版服务查询需要传递。
- registry：旧版服务查询传递。',
            'type' => 'string',
            'required' => false,
            'example' => 'agent',
          ),
        ),
        3 => 
        array (
          'name' => 'serviceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务类型。取值如下：
- dubbo：Dubbo类型。
- springCloud：Spring Cloud类型。
- hsf：HSF类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'dubbo',
          ),
        ),
        4 => 
        array (
          'name' => 'appId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'efbda488-7b33-432f-a40d-****0047****',
          ),
        ),
        5 => 
        array (
          'name' => 'source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '来源，固定值：edas。',
            'type' => 'string',
            'required' => false,
            'example' => 'edas',
          ),
        ),
        6 => 
        array (
          'name' => 'serviceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务ID。已废弃，无需传值。',
            'type' => 'string',
            'required' => false,
            'example' => 'com.alibabacloud.hipstershop.CartService',
          ),
        ),
        7 => 
        array (
          'name' => 'serviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名。',
            'type' => 'string',
            'required' => false,
            'example' => 'com.alibabacloud.hipstershop.CartService',
          ),
        ),
        8 => 
        array (
          'name' => 'serviceVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务版本。',
            'type' => 'string',
            'required' => false,
            'example' => '1.0.0',
          ),
        ),
        9 => 
        array (
          'name' => 'group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组。',
            'type' => 'string',
            'required' => false,
            'example' => 'DUBBO',
          ),
        ),
        10 => 
        array (
          'name' => 'ip',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务提供者IP，支持模糊查询。',
            'type' => 'string',
            'required' => false,
            'example' => '10.20.x.xx',
          ),
        ),
        11 => 
        array (
          'name' => 'registryType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '注册类型。已废弃，无需传值。',
            'type' => 'string',
            'required' => false,
            'example' => 'nacos',
          ),
        ),
        12 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，从0开始。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        13 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口请求的状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '接口请求返回的信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Success' => 
              array (
                'description' => '调用是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据结构体。',
                'type' => 'object',
                'properties' => 
                array (
                  'TotalPages' => 
                  array (
                    'description' => '总页数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TotalElements' => 
                  array (
                    'description' => '总数据量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Size' => 
                  array (
                    'description' => '页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'Content' => 
                  array (
                    'description' => '组数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '组数据对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Timeout' => 
                        array (
                          'description' => '服务超时时间。',
                          'type' => 'string',
                          'example' => '1000',
                        ),
                        'Ip' => 
                        array (
                          'description' => '服务提供者的IP地址。',
                          'type' => 'string',
                          'example' => '10.20.XX.XX',
                        ),
                        'Port' => 
                        array (
                          'description' => '服务提供者的端口号。',
                          'type' => 'string',
                          'example' => '12345',
                        ),
                        'Iannotations' => 
                        array (
                          'description' => '服务提供者的备注信息。',
                          'type' => 'string',
                          'example' => '172.178.XX.XX',
                        ),
                        'SerializeType' => 
                        array (
                          'description' => '序列化类型。',
                          'type' => 'string',
                          'example' => 'hessian2',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TotalPages\\": 1,\\n    \\"TotalElements\\": 1,\\n    \\"Size\\": 5,\\n    \\"Content\\": [\\n      {\\n        \\"Timeout\\": \\"1000\\",\\n        \\"Ip\\": \\"10.20.XX.XX\\",\\n        \\"Port\\": \\"12345\\",\\n        \\"Iannotations\\": \\"172.178.XX.XX\\",\\n        \\"SerializeType\\": \\"hessian2\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetServiceProvidersPage>\\n<Message>success</Message>\\n<Data>\\n    <Size>5</Size>\\n    <Content>\\n        <SerializeType>hessian2</SerializeType>\\n        <Timeout>1000</Timeout>\\n        <Port>12345</Port>\\n        <Ip>10.20.x.xx</Ip>\\n    </Content>\\n    <TotalElements>1</TotalElements>\\n    <TotalPages>1</TotalPages>\\n</Data>\\n<Code>200</Code>\\n<Success>true</Success>\\n</GetServiceProvidersPage>","errorExample":""}]',
      'title' => '查询微服务提供者列表',
      'summary' => '调用GetServiceProvidersPage接口获取服务提供者列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListConsumedServices' => 
    array (
      'path' => '/pop/v5/service/listConsumedServices',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a66c5d1f-****-****-8c2b-6925f781b203',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'Code码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID。',
                'type' => 'string',
                'example' => 'a5281053-08e4-47a5-b2ab-5c0323de7b5a',
              ),
              'ConsumedServicesList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ListConsumedServices' => 
                  array (
                    'description' => '消费的服务列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DockerApplication' => 
                        array (
                          'description' => '是否是Docker应用：
- true： 是。
- false：否。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Type' => 
                        array (
                          'description' => '消费的服务类型。',
                          'type' => 'string',
                          'example' => 'HSF',
                        ),
                        'Version' => 
                        array (
                          'description' => '消费的服务版本。',
                          'type' => 'string',
                          'example' => '1.0',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => 'a5281053-08e4-47a5-b2ab-5c0323de7b5a',
                        ),
                        'Group2Ip' => 
                        array (
                          'description' => '保留字段。',
                          'type' => 'string',
                          'example' => '""',
                        ),
                        'Name' => 
                        array (
                          'description' => '消费的服务名称。',
                          'type' => 'string',
                          'example' => 'service',
                        ),
                        'Ips' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ip' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '服务订阅地址。',
                                'type' => 'string',
                                'example' => '102.XX.XX.23',
                              ),
                            ),
                          ),
                        ),
                        'Groups' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'group' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '消费的服务对应的组别。',
                                'type' => 'string',
                                'example' => '”group“',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"a5281053-08e4-47a5-b2ab-5c0323de7b5a\\",\\n  \\"ConsumedServicesList\\": {\\n    \\"ListConsumedServices\\": [\\n      {\\n        \\"DockerApplication\\": true,\\n        \\"Type\\": \\"HSF\\",\\n        \\"Version\\": \\"1.0\\",\\n        \\"AppId\\": \\"a5281053-08e4-47a5-b2ab-5c0323de7b5a\\",\\n        \\"Group2Ip\\": \\"\\\\\\"\\\\\\"\\",\\n        \\"Name\\": \\"service\\",\\n        \\"Ips\\": {\\n          \\"ip\\": [\\n            \\"102.XX.XX.23\\"\\n          ]\\n        },\\n        \\"Groups\\": {\\n          \\"group\\": [\\n            \\"”group“\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ConsumedServicesList>\\n</ConsumedServicesList>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '查询消费的服务',
      'summary' => '调用ListConsumedServices查询消费的服务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListPublishedServices' => 
    array (
      'path' => '/pop/v5/service/listPublishedServices',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1fbd8b72-****-****-bdfe-478dbc914121',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'Code码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID。',
                'type' => 'string',
                'example' => '1D6FC-4307-4583-BA6F-215F3857E****',
              ),
              'PublishedServicesList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ListPublishedServices' => 
                  array (
                    'description' => '发布的服务列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DockerApplication' => 
                        array (
                          'description' => '是否是Docker应用：
- true：是。
- false：否。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Type' => 
                        array (
                          'description' => '发布的服务类型。',
                          'type' => 'string',
                          'example' => 'RESTful',
                        ),
                        'Version' => 
                        array (
                          'description' => '发布的服务版本。',
                          'type' => 'string',
                          'example' => '--',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => 'ECD1D6FC-4307-4583-BA6F-215F3857E****',
                        ),
                        'Group2Ip' => 
                        array (
                          'description' => '保留字段。',
                          'type' => 'string',
                          'example' => '""',
                        ),
                        'Name' => 
                        array (
                          'description' => '发布的服务名称。',
                          'type' => 'string',
                          'example' => 'providers:com.****',
                        ),
                        'Ips' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ip' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '服务订阅地址。',
                                'type' => 'string',
                                'example' => '112.XX.XX.24',
                              ),
                            ),
                          ),
                        ),
                        'Groups' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'group' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '发布的服务对应的组别。',
                                'type' => 'string',
                                'example' => 'DEFAULT_GROUP',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"1D6FC-4307-4583-BA6F-215F3857E****\\",\\n  \\"PublishedServicesList\\": {\\n    \\"ListPublishedServices\\": [\\n      {\\n        \\"DockerApplication\\": false,\\n        \\"Type\\": \\"RESTful\\",\\n        \\"Version\\": \\"--\\",\\n        \\"AppId\\": \\"ECD1D6FC-4307-4583-BA6F-215F3857E****\\",\\n        \\"Group2Ip\\": \\"\\\\\\"\\\\\\"\\",\\n        \\"Name\\": \\"providers:com.****\\",\\n        \\"Ips\\": {\\n          \\"ip\\": [\\n            \\"112.XX.XX.24\\"\\n          ]\\n        },\\n        \\"Groups\\": {\\n          \\"group\\": [\\n            \\"DEFAULT_GROUP\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Code>200</Code>\\n<PublishedServicesList>\\n    <ListPublishedServices>\\n        <Groups>\\n            <group>DEFAULT_GROUP</group>\\n        </Groups>\\n        <Name>providers:com.****</Name>\\n        <DockerApplication>false</DockerApplication>\\n        <Type>RESTful</Type>\\n        <Group2Ip/>\\n        <Version>--</Version>\\n        <Ips>\\n        </Ips>\\n    </ListPublishedServices>\\n</PublishedServicesList>","errorExample":""}]',
      'title' => '查询发布的服务',
      'summary' => '调用ListPublishedServices查询发布的服务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetServiceDetail' => 
    array (
      'path' => '/pop/sp/api/mseForOam/getServiceDetail',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou:doc-test',
          ),
        ),
        2 => 
        array (
          'name' => 'origin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据来源，取值如下：
- agent：新版服务查询需要传递。
- registry：旧版服务查询传递。',
            'type' => 'string',
            'required' => false,
            'example' => 'agent',
          ),
        ),
        3 => 
        array (
          'name' => 'serviceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务类型，取值如下：
- dubbo
- springCloud
- hsf
- istio',
            'type' => 'string',
            'required' => false,
            'example' => 'springCloud',
          ),
        ),
        4 => 
        array (
          'name' => 'appId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'efbda488-7b33-432f-a40d-****0047****',
          ),
        ),
        5 => 
        array (
          'name' => 'source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '来源，固定值：edas。',
            'type' => 'string',
            'required' => false,
            'example' => 'edas',
          ),
        ),
        6 => 
        array (
          'name' => 'serviceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务ID。已废弃，无需设置。',
            'type' => 'string',
            'required' => false,
            'example' => 'com.alibabacloud.hipstershop.CartService',
          ),
        ),
        7 => 
        array (
          'name' => 'serviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'com.alibabacloud.hipstershop.CartService',
          ),
        ),
        8 => 
        array (
          'name' => 'serviceVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务版本。',
            'type' => 'string',
            'required' => false,
            'example' => '1.0.0',
          ),
        ),
        9 => 
        array (
          'name' => 'group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务分组。',
            'type' => 'string',
            'required' => false,
            'example' => 'DUBBO',
          ),
        ),
        10 => 
        array (
          'name' => 'ip',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务提供者IP，支持模糊查询。',
            'type' => 'string',
            'required' => false,
            'example' => '10.20.x.xx',
          ),
        ),
        11 => 
        array (
          'name' => 'registryType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '注册类型。已废弃，无需设置。',
            'type' => 'string',
            'required' => false,
            'example' => 'nacos',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口请求的状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '接口请求返回的信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Success' => 
              array (
                'description' => '调用是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据结构体。',
                'type' => 'object',
                'properties' => 
                array (
                  'EdasAppName' => 
                  array (
                    'description' => 'EDAS应用名称。',
                    'type' => 'string',
                    'example' => 'test123',
                  ),
                  'DubboApplicationName' => 
                  array (
                    'description' => 'Dubbo应用名称。',
                    'type' => 'string',
                    'example' => 'cartservice',
                  ),
                  'Version' => 
                  array (
                    'description' => '版本号。',
                    'type' => 'string',
                    'example' => '1.0.0',
                  ),
                  'RegistryType' => 
                  array (
                    'description' => '注册类型。',
                    'type' => 'string',
                    'example' => 'agent',
                  ),
                  'SpringApplicationName' => 
                  array (
                    'description' => 'Spring应用名。',
                    'type' => 'string',
                    'example' => 'edas.service.consumer',
                  ),
                  'ServiceType' => 
                  array (
                    'description' => '服务类型。',
                    'type' => 'string',
                    'example' => 'springCloud',
                  ),
                  'ServiceName' => 
                  array (
                    'description' => '服务名。',
                    'type' => 'string',
                    'example' => 'edas.service.consumer',
                  ),
                  'Metadata' => 
                  array (
                    'description' => '元数据。',
                    'type' => 'string',
                    'example' => '{}',
                  ),
                  'Group' => 
                  array (
                    'description' => '分组。',
                    'type' => 'string',
                    'example' => 'dubbo',
                  ),
                  'Methods' => 
                  array (
                    'description' => '方法列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '方法对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ParameterDetails' => 
                        array (
                          'description' => '参数详情。',
                          'type' => 'string',
                          'example' => '{}',
                        ),
                        'NameDetail' => 
                        array (
                          'description' => '具体名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ParameterNames' => 
                        array (
                          'description' => '参数名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ParameterDefinitions' => 
                        array (
                          'description' => '参数定义。',
                          'type' => 'string',
                          'example' => '[{"description":"","name":"arg0","type":"java.lang.String"}]',
                        ),
                        'Paths' => 
                        array (
                          'description' => '方法路径。',
                          'type' => 'string',
                          'example' => '["/consumer-echo/feign/{str}"]',
                        ),
                        'ParameterTypes' => 
                        array (
                          'description' => '参数类型。',
                          'type' => 'string',
                          'example' => '["java.lang.String"]',
                        ),
                        'RequestMethods' => 
                        array (
                          'description' => '请求方法。',
                          'type' => 'string',
                          'example' => 'GET',
                        ),
                        'ReturnDetails' => 
                        array (
                          'description' => '返回详情。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'Name' => 
                        array (
                          'description' => '名称。',
                          'type' => 'string',
                          'example' => 'feign2',
                        ),
                        'MethodController' => 
                        array (
                          'description' => 'controller列表。',
                          'type' => 'string',
                          'example' => 'com.aliware.edas.DemoController',
                        ),
                        'ReturnType' => 
                        array (
                          'description' => '返回类型。',
                          'type' => 'string',
                          'example' => 'java.lang.String',
                        ),
                        'ReturnDefinition' => 
                        array (
                          'description' => '返回定义。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'description' => '类型。',
                              'type' => 'string',
                              'example' => 'foo',
                            ),
                            'Id' => 
                            array (
                              'description' => '返回值ID。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"EdasAppName\\": \\"test123\\",\\n    \\"DubboApplicationName\\": \\"cartservice\\",\\n    \\"Version\\": \\"1.0.0\\",\\n    \\"RegistryType\\": \\"agent\\",\\n    \\"SpringApplicationName\\": \\"edas.service.consumer\\",\\n    \\"ServiceType\\": \\"springCloud\\",\\n    \\"ServiceName\\": \\"edas.service.consumer\\",\\n    \\"Metadata\\": \\"{}\\",\\n    \\"Group\\": \\"dubbo\\",\\n    \\"Methods\\": [\\n      {\\n        \\"ParameterDetails\\": \\"{}\\",\\n        \\"NameDetail\\": \\"test\\",\\n        \\"ParameterNames\\": \\"test\\",\\n        \\"ParameterDefinitions\\": \\"[{\\\\\\"description\\\\\\":\\\\\\"\\\\\\",\\\\\\"name\\\\\\":\\\\\\"arg0\\\\\\",\\\\\\"type\\\\\\":\\\\\\"java.lang.String\\\\\\"}]\\",\\n        \\"Paths\\": \\"[\\\\\\"/consumer-echo/feign/{str}\\\\\\"]\\",\\n        \\"ParameterTypes\\": \\"[\\\\\\"java.lang.String\\\\\\"]\\",\\n        \\"RequestMethods\\": \\"GET\\",\\n        \\"ReturnDetails\\": \\"test\\",\\n        \\"Name\\": \\"feign2\\",\\n        \\"MethodController\\": \\"com.aliware.edas.DemoController\\",\\n        \\"ReturnType\\": \\"java.lang.String\\",\\n        \\"ReturnDefinition\\": {\\n          \\"Type\\": \\"foo\\",\\n          \\"Id\\": \\"1\\"\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetServiceDetail>\\n<Message>success</Message>\\n<Data>\\n    <Group>dubbo</Group>\\n    <RegistryType>agent</RegistryType>\\n    <Version>1.0.0</Version>\\n    <ServiceName>edas.service.consumer</ServiceName>\\n    <ServiceType>springCloud</ServiceType>\\n    <EdasAppName>test123</EdasAppName>\\n    <Metadata>{}</Metadata>\\n    <SpringApplicationName>edas.service.consumer</SpringApplicationName>\\n    <Methods>\\n        <ParameterDefinitions>[{\\"description\\":\\"\\",\\"name\\":\\"arg0\\",\\"type\\":\\"java.lang.String\\"}]</ParameterDefinitions>\\n        <ParameterNames>test</ParameterNames>\\n        <ParameterDetails>{}</ParameterDetails>\\n        <MethodController>com.aliware.edas.DemoController</MethodController>\\n        <Paths>[\\"/consumer-echo/feign/{str}\\"]</Paths>\\n        <RequestMethods>GET</RequestMethods>\\n        <ParameterTypes>[\\"java.lang.String\\"]</ParameterTypes>\\n        <ReturnType>java.lang.String</ReturnType>\\n        <ReturnDetails>test</ReturnDetails>\\n        <NameDetail>test</NameDetail>\\n        <Name>feign2</Name>\\n    </Methods>\\n    <Methods>\\n        <ReturnDefinition>\\n            <Type>foo</Type>\\n            <Id>1</Id>\\n        </ReturnDefinition>\\n    </Methods>\\n    <DubboApplicationName>cartservice</DubboApplicationName>\\n</Data>\\n<Code>200</Code>\\n<Success>true</Success>\\n</GetServiceDetail>","errorExample":""}]',
      'title' => '获取服务详情',
      'summary' => '获取服务详情。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListMethods' => 
    array (
      'path' => '/pop/v5/service/list_methods',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'be213a4a-c7e4-473b-ab0****',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Method',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '69AD2AA7-DB47-449B-941B-B14409DF****',
              ),
              'ServiceMethodList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ServiceMethod' => 
                  array (
                    'description' => '返回的服务方法列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MethodName' => 
                        array (
                          'description' => '方法名称。',
                          'type' => 'string',
                          'example' => 'echo',
                        ),
                        'AppName' => 
                        array (
                          'description' => '应用名称。',
                          'type' => 'string',
                          'example' => 'App',
                        ),
                        'Output' => 
                        array (
                          'description' => '方法返回类型。',
                          'type' => 'string',
                          'example' => 'java.lang.string',
                        ),
                        'ServiceName' => 
                        array (
                          'description' => '服务名称。',
                          'type' => 'string',
                          'example' => 'com.alibaba.edas.demo.EchoService',
                        ),
                        'ParamTypes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ParamType' => 
                            array (
                              'description' => '方法入参类型列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'string',
                                'example' => 'string',
                              ),
                            ),
                          ),
                        ),
                        'InputParams' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'InputParam' => 
                            array (
                              'description' => '方法入参列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'string',
                                'example' => 'test',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"69AD2AA7-DB47-449B-941B-B14409DF****\\",\\n  \\"ServiceMethodList\\": {\\n    \\"ServiceMethod\\": [\\n      {\\n        \\"MethodName\\": \\"echo\\",\\n        \\"AppName\\": \\"App\\",\\n        \\"Output\\": \\"java.lang.string\\",\\n        \\"ServiceName\\": \\"com.alibaba.edas.demo.EchoService\\",\\n        \\"ParamTypes\\": {\\n          \\"ParamType\\": [\\n            \\"string\\"\\n          ]\\n        },\\n        \\"InputParams\\": {\\n          \\"InputParam\\": [\\n            \\"test\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查询服务方法列表',
      'summary' => '调用ListMethods接口查询服务方法列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListServiceGroups' => 
    array (
      'path' => '/pop/v5/service/serviceGroups',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'Code码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'a5281053-08e4-47a5-b2ab-5c0323de7b5a',
              ),
              'ServiceGroupsList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ListServiceGroups' => 
                  array (
                    'description' => '服务分组列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GroupId' => 
                        array (
                          'description' => '服务分组ID',
                          'type' => 'string',
                          'example' => '789d9cda-74b1-****-****-05e21a0a7661',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '服务分组名称',
                          'type' => 'string',
                          'example' => 'edas-test-group',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间的时间戳',
                          'type' => 'string',
                          'example' => '1575357165770',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"a5281053-08e4-47a5-b2ab-5c0323de7b5a\\",\\n  \\"ServiceGroupsList\\": {\\n    \\"ListServiceGroups\\": [\\n      {\\n        \\"GroupId\\": \\"789d9cda-74b1-****-****-05e21a0a7661\\",\\n        \\"GroupName\\": \\"edas-test-group\\",\\n        \\"CreateTime\\": \\"1575357165770\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ServiceGroupsList>\\n    <ListServiceGroups>\\n        <GroupName>edas-test-group</GroupName>\\n        <CreateTime>1575357165770</CreateTime>\\n        <GroupId>789d9cda-74b1-****-****-05e21a0a7661</GroupId>\\n    </ListServiceGroups>\\n</ServiceGroupsList>\\n<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '查询服务分组列表',
      'summary' => '调用ListServiceGroups查询HSF应用的服务分组列表。',
      'requestParamsDescription' => ' 无请求参数。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
      'parameters' => 
      array (
      ),
    ),
    'InsertServiceGroup' => 
    array (
      'path' => '/pop/v5/service/serviceGroups',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建服务分组',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'edas-test-group',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'Code码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求ID',
                'type' => 'string',
                'example' => 'ECD1D6FC-4307-4583-BA6F-215F3857EAF4',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"ECD1D6FC-4307-4583-BA6F-215F3857EAF4\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '创建服务分组',
      'summary' => '调用InsertServiceGroup创建服务分组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateK8sIngressRule' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_ingress',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5b2b4ab4-efbc-4a81-9c45-xxxxxxxxxxxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s集群命名空间。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由规则名称。只能为小写字母、数字和短划线（-），必须以小写字母开头，不以短划线（-）结尾，长度不超过63个字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'my-ingress-rule',
          ),
        ),
        3 => 
        array (
          'name' => 'IngressConf',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JSON对象字符串表示的应用路由规则，格式如下所示：
```
{
  "rules": [
    {
      "host": "abc.com",
      "secretName": "tls-secret",
      "paths": [
        {
          "path": "/path",
          "backend": {
            "servicePort": 80,
            "serviceName": "xxx"
          }
        }
      ]
    }
  ]
}
```
代码字段解释如下：

- rules：路由规则列表。

- host：路由规则域名。

- secretName：TLS证书类型的Secret，当需要支持HTTPS协议时需要配置该证书。

- paths：匹配路径列表。

- path：匹配路径。

- backend：后端服务，支持配置由EDAS控制台创建的Service。

- serviceName：后端服务名称。

- servicePort：后端服务端口。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '{"rules":[{"host":"abc.com","secretName":"tls-secret","paths":[{"path":"/path","backend":{"servicePort":80,"serviceName":"xxx"}}]}]}',
          ),
        ),
        4 => 
        array (
          'name' => 'Annotations',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '注解。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"alb.ingress.kubernetes.io/rewrite-target\\":\\"/consumer-echo/test\\"}',
          ),
        ),
        5 => 
        array (
          'name' => 'Labels',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"test-labels\\":\\"test-value\\"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回对象。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '创建应用路由规则',
      'summary' => '调用CreateK8sIngressRule接口创建应用路由规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteK8sIngressRule' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_ingress',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '5b2b4ab4-efbc-4a81-9c45-xxxxxxxxxxxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s集群命名空间。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由规则名称。只能为小写字母、数字和短划线（-）必须以小写字母开头，不以短划线（-）结尾，长度不超过63个字符。
',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'my-ingress-rule',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '删除应用路由规则',
      'summary' => '调用DeleteK8sIngressRule接口删除应用路由规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateK8sIngressRule' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_ingress',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'example' => '5b2b4ab4-efbc-4a81-9c45-xxxxxxxxxxxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s集群命名空间。
',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由规则名称。只能为小写字母、数字和短划线（-），必须以小写字母开头，不以短划线（-）结尾，长度不超过63个字符。
',
            'type' => 'string',
            'required' => false,
            'example' => 'my-ingress-rule',
          ),
        ),
        3 => 
        array (
          'name' => 'IngressConf',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JSON对象字符串表示的应用路由规则，格式如下所示：
```
{
  "rules": [
    {
      "host": "abc.com",
      "secretName": "tls-secret",
      "paths": [
        {
          "path": "/path",
          "backend": {
            "servicePort": 80,
            "serviceName": "xxx"
          }
        }
      ]
    }
  ]
}
```
代码字段解释如下：
- rules：路由规则列表。
- host：路由规则域名。
- secretName：TLS证书类型的Secret，当需要支持HTTPS协议时需要配置该证书。
- paths：匹配路径列表。
- path：匹配路径。
- backend：后端服务，支持配置由EDAS控制台创建的Service。
- serviceName：后端服务名称。
- servicePort：后端服务端口。',
            'type' => 'string',
            'required' => false,
            'example' => '{"rules":[{"host":"abc.com","secretName":"tls-secret","paths":[{"path":"/path","backend":{"servicePort":80,"serviceName":"xxx"}}]}]}',
          ),
        ),
        4 => 
        array (
          'name' => 'Annotations',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '注解。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"nginx.ingress.kubernetes.io/ssl-redirect\\":\\"true\\",\\"nginx.ingress.kubernetes.io/configuration-snippet\\":\\"set $test value\\"}',
          ),
        ),
        5 => 
        array (
          'name' => 'Labels',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"test-label\\":\\"test-label-value\\"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回对象。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\"\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '更新应用路由规则',
      'summary' => '更新应用路由规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListK8sIngressRules' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_ingress',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阿里云地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '5b2b4ab4-efbc-4a81-9c45-xxxxxxxxxxxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s集群命名空间。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
        3 => 
        array (
          'name' => 'Condition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，JSON类型，格式为{"field":"Name", "pattern":"my-"}，其中：

- field：需要匹配的字段，支持Name和ClusterName。

- pattern：匹配内容。

以{"field":"Name", "pattern":"my-"}这条过滤条件为例，该条过滤规则会匹配名称为“my-”开头的路由规则。
',
            'type' => 'string',
            'required' => false,
            'example' => '{"field":"Name", "pattern":"my-"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5C1C9DE7-88FF-4B56-A47B-3DBBCEB******',
              ),
              'Data' => 
              array (
                'description' => '接口响应数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '接口响应数据对象。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ClusterName' => 
                    array (
                      'description' => '集群名称。',
                      'type' => 'string',
                      'example' => 'my-dev-cluster',
                    ),
                    'ClusterId' => 
                    array (
                      'description' => '集群ID。',
                      'type' => 'string',
                      'example' => '5b2b4ab4-efbc-4a81-9c45-a5942881****',
                    ),
                    'RegionId' => 
                    array (
                      'description' => '阿里云地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'IngressConfs' => 
                    array (
                      'description' => '应用路由列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '应用路由列表对象。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'CreationTime' => 
                          array (
                            'description' => '应用路由创建时间。',
                            'type' => 'string',
                            'example' => '2021-04-27 20:16:52',
                          ),
                          'SslRedirect' => 
                          array (
                            'description' => '是否启用SSL重定向：
- true：启用。
- false：关闭。',
                            'type' => 'boolean',
                            'example' => 'true',
                          ),
                          'Endpoint' => 
                          array (
                            'description' => '应用路由入口IP地址。',
                            'type' => 'string',
                            'example' => '47.11x.xx.xx',
                          ),
                          'Namespace' => 
                          array (
                            'description' => '应用路由所属K8s命名空间。',
                            'type' => 'string',
                            'example' => 'default',
                          ),
                          'Name' => 
                          array (
                            'description' => '应用路由名称。',
                            'type' => 'string',
                            'example' => 'my-ingress',
                          ),
                          'DashboardUrl' => 
                          array (
                            'description' => '应用路由监控URL。',
                            'type' => 'string',
                            'example' => 'http://grafana.console.aliyun.com/d/10xxxx/ingress',
                          ),
                          'Rules' => 
                          array (
                            'description' => '应用路由规则列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '应用路由规则对象。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'SecretName' => 
                                array (
                                  'description' => '保存TLS证书的Secret名称。',
                                  'type' => 'string',
                                  'example' => 'my-secret',
                                ),
                                'Host' => 
                                array (
                                  'description' => '应用路由域名。',
                                  'type' => 'string',
                                  'example' => 'example.com',
                                ),
                                'Paths' => 
                                array (
                                  'description' => '应用路由匹配路径列表。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '应用路由匹配路径对象。',
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Status' => 
                                      array (
                                        'description' => '应用路由状态，支持以下状态：

- **Normal**：状态正常。

- **ServiceNotFound**：后端Service不存在。

- **InvalidServicePort**：无效服务端口。

- **NotManagedService**：非EDAS管控Service。

- **Unknown**：未知错误。',
                                        'type' => 'string',
                                        'example' => 'Normal',
                                      ),
                                      'Path' => 
                                      array (
                                        'description' => '匹配路径。',
                                        'type' => 'string',
                                        'example' => '/foo/bar',
                                      ),
                                      'AppName' => 
                                      array (
                                        'description' => 'EDAS应用名称。',
                                        'type' => 'string',
                                        'example' => 'my-app',
                                      ),
                                      'AppId' => 
                                      array (
                                        'description' => 'EDAS应用ID。',
                                        'type' => 'string',
                                        'example' => '43d30ba5-c568-460c-8080-d447ed1a****',
                                      ),
                                      'Backend' => 
                                      array (
                                        'description' => '后端服务配置。',
                                        'type' => 'object',
                                        'properties' => 
                                        array (
                                          'ServiceName' => 
                                          array (
                                            'description' => '后端服务名称。',
                                            'type' => 'string',
                                            'example' => 'http-service',
                                          ),
                                          'ServicePort' => 
                                          array (
                                            'description' => '后端服务端口。',
                                            'type' => 'string',
                                            'example' => '8080',
                                          ),
                                        ),
                                      ),
                                      'CollectRate' => 
                                      array (
                                        'description' => '基于EDAS为网关注入TraceId支持调用链路查询能力，设置匹配该条规则流量的采样率。',
                                        'type' => 'integer',
                                        'format' => 'int32',
                                        'example' => '100',
                                      ),
                                      'PathType' => 
                                      array (
                                        'description' => '路径匹配类型：
- ImplementationSpecific：默认。
- Exact：完整匹配。
- Prefix：前缀匹配。',
                                        'type' => 'string',
                                        'example' => 'ImplementationSpecific',
                                      ),
                                    ),
                                  ),
                                ),
                                'EnableTls' => 
                                array (
                                  'description' => '是否启用TLS：
- true：启用。
- false：不启用。',
                                  'type' => 'boolean',
                                  'example' => 'false',
                                ),
                              ),
                            ),
                          ),
                          'AlbId' => 
                          array (
                            'description' => '应用型负载均衡ALB实例ID。',
                            'type' => 'string',
                            'example' => 'alb-5sde0tq62r********',
                          ),
                          'IngressType' => 
                          array (
                            'description' => '应用路由类型：
- **NginxIngress**：使用nginx应用路由控制器。
- **AlbIngress**：使用ALB应用路由控制器。

默认使用NginxIngress。',
                            'type' => 'string',
                            'example' => 'NginxIngress',
                          ),
                          'OfficalBasicUrl' => 
                          array (
                            'description' => '社区版本基础监控地址。',
                            'type' => 'string',
                            'example' => 'https://g.console.aliyun.com/d/xxxxxx/nginx-ingress-dashboard-official',
                          ),
                          'OfficalRequestUrl' => 
                          array (
                            'description' => '社区版本请求性能监控地址。',
                            'type' => 'string',
                            'example' => 'https://g.console.aliyun.com/d/xxxxxx/request-handling-performance-official',
                          ),
                          'MseGatewayId' => 
                          array (
                            'description' => 'MSE网关实例ID。',
                            'type' => 'string',
                            'example' => 'gw-xxxxxxxx',
                          ),
                          'MseGatewayName' => 
                          array (
                            'description' => 'MSE网关实例名称。',
                            'type' => 'string',
                            'example' => 'gw-test-name',
                          ),
                          'Annotations' => 
                          array (
                            'description' => '注解。',
                            'type' => 'string',
                            'example' => '{"test-annotation":"test-annotation-value"}',
                          ),
                          'Labels' => 
                          array (
                            'description' => '标签。',
                            'type' => 'string',
                            'example' => '{"test-label": "test-labels"}',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"5C1C9DE7-88FF-4B56-A47B-3DBBCEB******\\",\\n  \\"Data\\": [\\n    {\\n      \\"ClusterName\\": \\"my-dev-cluster\\",\\n      \\"ClusterId\\": \\"5b2b4ab4-efbc-4a81-9c45-a5942881****\\",\\n      \\"RegionId\\": \\"cn-hangzhou\\",\\n      \\"IngressConfs\\": [\\n        {\\n          \\"CreationTime\\": \\"2021-04-27 20:16:52\\",\\n          \\"SslRedirect\\": true,\\n          \\"Endpoint\\": \\"47.11x.xx.xx\\",\\n          \\"Namespace\\": \\"default\\",\\n          \\"Name\\": \\"my-ingress\\",\\n          \\"DashboardUrl\\": \\"http://grafana.console.aliyun.com/d/10xxxx/ingress\\",\\n          \\"Rules\\": [\\n            {\\n              \\"SecretName\\": \\"my-secret\\",\\n              \\"Host\\": \\"example.com\\",\\n              \\"Paths\\": [\\n                {\\n                  \\"Status\\": \\"Normal\\",\\n                  \\"Path\\": \\"/foo/bar\\",\\n                  \\"AppName\\": \\"my-app\\",\\n                  \\"AppId\\": \\"43d30ba5-c568-460c-8080-d447ed1a****\\",\\n                  \\"Backend\\": {\\n                    \\"ServiceName\\": \\"http-service\\",\\n                    \\"ServicePort\\": \\"8080\\"\\n                  },\\n                  \\"CollectRate\\": 100,\\n                  \\"PathType\\": \\"ImplementationSpecific\\"\\n                }\\n              ],\\n              \\"EnableTls\\": false\\n            }\\n          ],\\n          \\"AlbId\\": \\"alb-5sde0tq62r********\\",\\n          \\"IngressType\\": \\"NginxIngress\\",\\n          \\"OfficalBasicUrl\\": \\"https://g.console.aliyun.com/d/xxxxxx/nginx-ingress-dashboard-official\\",\\n          \\"OfficalRequestUrl\\": \\"https://g.console.aliyun.com/d/xxxxxx/request-handling-performance-official\\",\\n          \\"MseGatewayId\\": \\"gw-xxxxxxxx\\",\\n          \\"MseGatewayName\\": \\"gw-test-name\\",\\n          \\"Annotations\\": \\"{\\\\\\"test-annotation\\\\\\":\\\\\\"test-annotation-value\\\\\\"}\\",\\n          \\"Labels\\": \\"{\\\\\\"test-label\\\\\\": \\\\\\"test-labels\\\\\\"}\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<RequestId>5C1C9DE7-88FF-4B56-A47B-3DBBCEB23256</RequestId>\\n<Message>success</Message>\\n<Data>\\n    <ClusterId>5b2b4ab4-efbc-4a81-9c45-a5942881****</ClusterId>\\n    <ClusterName>my-dev-cluster</ClusterName>\\n    <RegionId>cn-hangzhou</RegionId>\\n    <IngressConfs>\\n        <SslRedirect/>\\n        <Endpoint>47.11x.xx.xx</Endpoint>\\n        <CreationTime>2021-04-27 20:16:52</CreationTime>\\n        <Namespace>default</Namespace>\\n        <DashboardUrl>http://grafana.console.aliyun.com/d/10xxxx/ingress</DashboardUrl>\\n        <Name>my-ingress</Name>\\n        <Rules>\\n            <SecretName>my-secret</SecretName>\\n            <Host>abc.com</Host>\\n            <Paths>\\n                <Path>/foo/bar</Path>\\n                <Status>Normal</Status>\\n                <AppId>43d30ba5-c568-460c-8080-d447ed1a****</AppId>\\n                <AppName>my-app</AppName>\\n                <Backend>\\n                    <ServicePort>8080</ServicePort>\\n                    <ServiceName>http-service</ServiceName>\\n                </Backend>\\n            </Paths>\\n        </Rules>\\n    </IngressConfs>\\n</Data>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取应用路由列表',
      'summary' => '获取应用路由列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateConfigTemplate' => 
    array (
      'summary' => '调用CreateConfigTemplate接口创建配置模板。
。',
      'path' => '/pop/v5/config_template',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '配置模板名称',
            'description' => '配置模板名称，不限字符类型，最长不超过64个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'my-template',
          ),
        ),
        1 => 
        array (
          'name' => 'Format',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '模板数据格式',
            'description' => '模板数据格式，支持以下格式：

- JSON：JSON格式；
- XML：XML格式；
- YAML：YAML格式；
- Properties：Properties格式；
- KeyValue：键值对；
- Custom：自定义格式。',
            'type' => 'string',
            'required' => false,
            'example' => 'JSON',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '模板描述',
            'description' => '模板描述，不限字符类型，最长不超过255个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '我的配置模板',
          ),
        ),
        3 => 
        array (
          'name' => 'Content',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '模板内容',
            'description' => '模板内容，需要与Format标注的格式相匹配。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"Key":"name","Value":"william"},{"Key":"age","Value":"12"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-****************',
              ),
              'Code' => 
              array (
                'title' => '响应码',
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'title' => '响应码文本描述',
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'title' => '响应数据',
                'description' => '响应数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'title' => '模板ID',
                    'description' => '模板ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '125122',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message	',
            'errorMessage' => 'You are not authorized to perform the operation.	',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"D16979DC-4D42-****************\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": {\\n    \\"Id\\": 125122\\n  }\\n}","type":"json"}]',
      'title' => '创建配置模板',
    ),
    'CreateK8sConfigMap' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_config_map',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'b07c8192-****-adf4f7447720',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'K8s集群命名空间。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '配置项名称，必须以字母开头，支持数字、字母和短划线（-），最多支持63个字符。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'my-configmap',
          ),
        ),
        3 => 
        array (
          'name' => 'Data',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '配置项数据， 为JSON数组字符串。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '[{"Key":"name","Value":"william"},{"Key":"age","Value":"12"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-**************',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-**************\\"\\n}","type":"json"}]',
      'title' => '创建K8s配置项',
      'summary' => '调用CreateK8sConfigMap接口创建K8s配置项。',
    ),
    'CreateK8sSecret' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_secret',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '集群ID',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '712082c3-****-****-9217-a947b5cde6ee',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '保密配置名称，必须以字母开头，支持数字、字母和短划线（-），最多支持63个字符。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'my-secret',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'K8s集群命名空间。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '保密配置类型，支持以下两种类型：

- Opaque：用户自定义数据类型

- kubernetes.io/tls：TLS证书类型',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'Opaque',
          ),
        ),
        4 => 
        array (
          'name' => 'Data',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '保密配置数据，使用JSON数组表示，数组对象包括以下内容：
- Key：保密配置键
- Value：保密配置值',
            'type' => 'string',
            'required' => false,
            'example' => '[{"Key":"name","Value":"william"},{"Key":"age","Value":"12"}]',
          ),
        ),
        5 => 
        array (
          'name' => 'CertId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '阿里云证书服务的证书ID。',
            'type' => 'string',
            'required' => false,
            'example' => '6651483',
          ),
        ),
        6 => 
        array (
          'name' => 'CertRegionId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '证书所属的区域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        7 => 
        array (
          'name' => 'Base64Encoded',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '数据是否进过base64编码，true - 已编码， false - 未编码。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4D9F-DR94-FD****************',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"4D9F-DR94-FD****************\\"\\n}","type":"json"}]',
      'title' => '创建K8s保密配置',
      'summary' => '调用CreateK8sSecret接口创建K8s保密配置。',
    ),
    'DeleteConfigTemplate' => 
    array (
      'summary' => '调用DeleteConfigTemplate接口删除配置模板。',
      'path' => '/pop/v5/config_template',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '配置模板ID',
            'description' => '配置模板ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'example' => '555',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-************',
              ),
              'Code' => 
              array (
                'title' => '响应码',
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'title' => '响应码文本描述',
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message	',
            'errorMessage' => 'You are not authorized to perform the operation.	',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"D16979DC-4D42-************\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\"\\n}","type":"json"}]',
      'title' => '删除配置模板',
    ),
    'DeleteK8sConfigMap' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_config_map',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '51e37e91-6403-423a-9913-f236aa7a6a50',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s集群命名空间。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置项名称，必须以字母开头，支持数字、字母和短划线（-），最多支持63个字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'my-configmap',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-************',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-************\\"\\n}","type":"json"}]',
      'title' => '删除K8s配置项',
      'summary' => '调用DeleteK8sConfigMap接口删除K8s配置项。',
    ),
    'DeleteK8sSecret' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_secret',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2b3a1013-31c7-433b-8fe7-3895d838b824',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保密配置名称，必须以字母开头，支持数字、字母和短划线（-），最多支持63个字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'my-secret',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s集群命名空间。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-*************',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-*************\\"\\n}","type":"json"}]',
      'title' => '删除K8s保密配置',
      'summary' => '调用DeleteK8sSecret接口删除K8s保密配置。',
    ),
    'UpdateConfigTemplate' => 
    array (
      'summary' => '调用UpdateConfigTemplate接口更新配置模板。
。',
      'path' => '/pop/v5/config_template',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '配置模板ID',
            'description' => '配置模板ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '123',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '配置模板名称',
            'description' => '配置模板名称，不限字符类型，最长不超过64个字符。

',
            'type' => 'string',
            'required' => false,
            'example' => 'configtmpl1',
          ),
        ),
        2 => 
        array (
          'name' => 'Format',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '模板数据格式',
            'description' => '模板数据格式，支持以下格式：

- JSON：JSON格式；
- XML：XML格式；
- YAML：YAML格式；
- Properties：Properties格式；
- KeyValue：键值对；
- Custom：自定义格式。',
            'type' => 'string',
            'required' => false,
            'example' => 'JSON',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '模板描述',
            'description' => '模板描述，不限字符类型，最长不超过255个字符。

',
            'type' => 'string',
            'required' => false,
            'example' => '测试配置模板',
          ),
        ),
        4 => 
        array (
          'name' => 'Content',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '模板内容',
            'description' => '模板内容，需要与Format标注的格式相匹配。

',
            'type' => 'string',
            'required' => false,
            'example' => '{"name":"william","age":18}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-*************',
              ),
              'Code' => 
              array (
                'title' => '响应码',
                'description' => '接口状态或POP错误码。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'title' => '响应码文本描述',
                'description' => '附加信息。

',
                'type' => 'string',
                'example' => 'success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.	',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"D16979DC-4D42-*************\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\"\\n}","type":"json"}]',
      'title' => '更新配置模板',
    ),
    'UpdateK8sConfigMap' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_config_map',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '7246cxxx-53xx-xxxx-xxxx-xxxxxxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'K8s命名空间。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '配置项名称，必须以字母开头，支持数字、字母和短划线（-），最多支持63个字符。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'my-configmap',
          ),
        ),
        3 => 
        array (
          'name' => 'Data',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '配置项数据，JSON数组字符串。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '[{"Key":"name","Value":"william"},{"Key":"age","Value":"12"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-****\\"\\n}","type":"json"}]',
      'title' => '更新K8s配置项',
      'summary' => '调用UpdateK8sConfigMap接口更新K8s配置项。',
    ),
    'UpdateK8sSecret' => 
    array (
      'path' => '/pop/v5/k8s/acs/k8s_secret',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '集群ID。
',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '9c28bbb9-****-44b3-b953-54ef8a2d0be2',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '保密配置名称，必须以字母开头，支持数字、字母和短划线（-），最多支持63个字符。
',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'my-secret',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'K8s集群命名空间。
',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '保密配置类型，支持以下两种类型：

- Opaque：用户自定义数据类型

- kubernetes.io/tls：TLS证书类型',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'Opaque',
          ),
        ),
        4 => 
        array (
          'name' => 'Data',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '保密配置数据，使用JSON数组表示，数组对象包括以下内容：
- Key：保密配置键
- Value：保密配置值',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '[{"Key":"name","Value":"william"},{"Key":"age","Value":"12"}]',
          ),
        ),
        5 => 
        array (
          'name' => 'CertId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '证书ID。',
            'type' => 'string',
            'required' => false,
            'example' => '6650277',
          ),
        ),
        6 => 
        array (
          'name' => 'CertRegionId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '证书所在地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        7 => 
        array (
          'name' => 'Base64Encoded',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '数据部分是否已经经过Base64编码。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-****************',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-****************\\"\\n}","type":"json"}]',
      'title' => '更新K8s保密配置',
      'summary' => '调用UpdateK8sSecret接口更新K8s保密配置。',
    ),
    'ListConfigTemplates' => 
    array (
      'summary' => '调用ListConfigTemplates接口获取配置模板列表。',
      'path' => '/pop/v5/config_template',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '页码',
            'description' => '页码，从1开始计数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '页大小',
            'description' => '页大小。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '配置模板ID',
            'description' => '配置模板ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3d84efaf-37d9-49fb-a3a8-b38d5c******',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '配置模板名称',
            'description' => '配置模板名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'config-tmpl-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4D9F-DR94-FD****************',
              ),
              'Code' => 
              array (
                'title' => '响应码',
                'description' => '接口状态或POP错误码。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'title' => '响应码文本描述',
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'title' => '查询结果',
                'description' => '查询结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'title' => '当前分页',
                    'description' => '当前分页号。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'title' => '页大小',
                    'description' => '分页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalSize' => 
                  array (
                    'title' => '配置模板总数',
                    'description' => '配置模板总数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '100',
                  ),
                  'Result' => 
                  array (
                    'title' => '配置模板列表',
                    'description' => '配置模板列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'title' => '配置模板ID',
                          'description' => '配置模板ID。',
                          'type' => 'string',
                          'example' => '3d84efaf-37d9-49fb-a3a8-b38d5c2b460c',
                        ),
                        'Name' => 
                        array (
                          'title' => '配置模板名称',
                          'description' => '配置模板名称。',
                          'type' => 'string',
                          'example' => 'config-tmpl-1',
                        ),
                        'Format' => 
                        array (
                          'title' => '模板数据格式',
                          'description' => '模板数据格式。',
                          'type' => 'string',
                          'example' => 'JSON',
                        ),
                        'Description' => 
                        array (
                          'title' => '模板描述',
                          'description' => '模板描述。',
                          'type' => 'string',
                          'example' => '测试配置模板',
                        ),
                        'Content' => 
                        array (
                          'title' => '模板内容',
                          'description' => '模板内容。',
                          'type' => 'string',
                          'example' => '{"name":"William"}',
                        ),
                        'GmtCreate' => 
                        array (
                          'title' => '创建时间',
                          'description' => '创建时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1638171689626',
                        ),
                        'GmtModified' => 
                        array (
                          'title' => '更新时间',
                          'description' => '更新时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1638171689626',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message	',
            'errorMessage' => 'You are not authorized to perform the operation.	',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4D9F-DR94-FD****************\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalSize\\": 100,\\n    \\"Result\\": [\\n      {\\n        \\"Id\\": \\"3d84efaf-37d9-49fb-a3a8-b38d5c2b460c\\",\\n        \\"Name\\": \\"config-tmpl-1\\",\\n        \\"Format\\": \\"JSON\\",\\n        \\"Description\\": \\"测试配置模板\\",\\n        \\"Content\\": \\"{\\\\\\"name\\\\\\":\\\\\\"William\\\\\\"}\\",\\n        \\"GmtCreate\\": 1638171689626,\\n        \\"GmtModified\\": 1638171689626\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取配置模板列表',
    ),
    'GetJavaStartUpConfig' => 
    array (
      'path' => '/pop/v5/oam/java_start_up_config',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5fdf50e8-*',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4823-bhjf-23u4-eiufh',
              ),
              'JavaStartUpConfig' => 
              array (
                'description' => 'Java启动参数配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'StartUpArgs' => 
                  array (
                    'description' => '生效的启动参数配置。',
                    'type' => 'string',
                    'example' => '-Xms512m',
                  ),
                  'OriginalConfigs' => 
                  array (
                    'description' => '显示的启动参数配置。',
                    'type' => 'string',
                    'example' => '-Xms512m',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnknownError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"4823-bhjf-23u4-eiufh\\",\\n  \\"JavaStartUpConfig\\": {\\n    \\"StartUpArgs\\": \\"-Xms512m\\",\\n    \\"OriginalConfigs\\": \\"-Xms512m\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetJavaStartUpConfigResponse>\\n<RequestId>4823-bhjf-23u4-eiufh</RequestId>\\n<Message>success</Message>\\n<JavaStartUpConfig>\\n    <StartUpArgs>-Xms512m</StartUpArgs>\\n    <OriginalConfigs>-Xms512m</OriginalConfigs>\\n</JavaStartUpConfig>\\n<Code>200</Code>\\n</GetJavaStartUpConfigResponse>","errorExample":""}]',
      'title' => '获取应用的Java启动参数配置',
      'summary' => '调用GetJavaStartUpConfig接口获取应用的Java启动参数配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetWebContainerConfig' => 
    array (
      'path' => '/pop/v5/oam/web_container_config',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5a166fbd-****-****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4823-bhjf-23u4-eiufh',
              ),
              'WebContainerConfig' => 
              array (
                'description' => 'Tomcat配置内容。',
                'type' => 'object',
                'properties' => 
                array (
                  'ContextPath' => 
                  array (
                    'description' => '上下文路径。',
                    'type' => 'string',
                    'example' => 'ROOT',
                  ),
                  'UseAdvancedServerXml' => 
                  array (
                    'description' => '是否使用高级配置。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'UseDefaultConfig' => 
                  array (
                    'description' => '是否使用默认配置。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'HttpPort' => 
                  array (
                    'description' => 'HTTP服务端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '8080',
                  ),
                  'ContextInputType' => 
                  array (
                    'description' => '上下文路径类型。',
                    'type' => 'string',
                    'example' => 'root',
                  ),
                  'UseBodyEncoding' => 
                  array (
                    'description' => '是否使用Body字符编码。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'UriEncoding' => 
                  array (
                    'description' => 'URI编码类型。',
                    'type' => 'string',
                    'example' => 'ISO-8859-1',
                  ),
                  'MaxThreads' => 
                  array (
                    'description' => '最大线程数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '500',
                  ),
                  'ServerXml' => 
                  array (
                    'description' => 'Server XML高级配置内容。',
                    'type' => 'string',
                    'example' => '<Server port=*****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnknownError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"4823-bhjf-23u4-eiufh\\",\\n  \\"WebContainerConfig\\": {\\n    \\"ContextPath\\": \\"ROOT\\",\\n    \\"UseAdvancedServerXml\\": true,\\n    \\"UseDefaultConfig\\": true,\\n    \\"HttpPort\\": 8080,\\n    \\"ContextInputType\\": \\"root\\",\\n    \\"UseBodyEncoding\\": true,\\n    \\"UriEncoding\\": \\"ISO-8859-1\\",\\n    \\"MaxThreads\\": 500,\\n    \\"ServerXml\\": \\"<Server port=*****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetWebContainerConfigResponse>\\n<Message>success</Message>\\n<RequestId>4823-bhjf-23u4-eiufh</RequestId>\\n<Code>200</Code>\\n<WebContainerConfig>\\n    <HttpPort>8080</HttpPort>\\n    <UriEncoding>ISO-8859-1</UriEncoding>\\n    <ContextPath>ROOT</ContextPath>\\n    <ContextInputType>root</ContextInputType>\\n    <UseBodyEncoding>true</UseBodyEncoding>\\n    <ServerXml>&lt;Server port=*****</ServerXml>\\n    <MaxThreads>500</MaxThreads>\\n    <UseDefaultConfig>true</UseDefaultConfig>\\n    <UseAdvancedServerXml>true</UseAdvancedServerXml>\\n</WebContainerConfig>\\n</GetWebContainerConfigResponse>","errorExample":""}]',
      'title' => '获取应用的Tomcat配置',
      'summary' => '调用GetWebContainerConfig接口获取应用的Tomcat配置。',
      'description' => '****',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListK8sConfigMaps' => 
    array (
      'summary' => '调用ListK8sConfigMaps接口获取K8s配置项列表。',
      'path' => '/pop/v5/k8s/acs/k8s_config_map',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阿里云地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'c0830281-366c-41b6-80fb-542e76******',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s集群命名空间。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页面，从0开始计数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询，每页显示的条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '50',
          ),
        ),
        5 => 
        array (
          'name' => 'Condition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，JSON对象字符串，示例：{"field":"Name", "pattern":"configmap-"}。
',
            'type' => 'string',
            'required' => false,
            'example' => '{"field":"Name", "pattern":"configmap-"}',
          ),
        ),
        6 => 
        array (
          'name' => 'ShowRelatedApps',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否返回使用该配置项的应用列表，true表示返回，false表示不返回。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或pop错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D16979DC-4D42-****************',
              ),
              'Result' => 
              array (
                'description' => '检索结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'Total' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '6',
                  ),
                  'ConfigMaps' => 
                  array (
                    'description' => '配置项列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => '创建时间。格式为：yyyy-MM-ddTHH:mm:ssZ（UTC时间）。',
                          'type' => 'string',
                          'example' => '2022-01-31T02:46:14Z',
                        ),
                        'ClusterName' => 
                        array (
                          'description' => '集群名称。',
                          'type' => 'string',
                          'example' => 'my-cluster',
                        ),
                        'Namespace' => 
                        array (
                          'description' => 'K8s命名空间。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'Name' => 
                        array (
                          'description' => '配置项名称。',
                          'type' => 'string',
                          'example' => 'my-config',
                        ),
                        'ClusterId' => 
                        array (
                          'description' => '集群ID，可通过调用GetK8sCluster接口获取，请参见[GetK8sCluster](~~181437~~)。',
                          'type' => 'string',
                          'example' => 'd73918f4-3b08-4c17-bb07-eaf8********',
                        ),
                        'Data' => 
                        array (
                          'description' => '配置项数据列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Key' => 
                              array (
                                'description' => '用户自定义ConfigMap键。',
                                'type' => 'string',
                                'example' => 'name',
                              ),
                              'Value' => 
                              array (
                                'description' => '用户自定义ConfigMap值。',
                                'type' => 'string',
                                'example' => 'william',
                              ),
                            ),
                          ),
                        ),
                        'RelatedApps' => 
                        array (
                          'description' => '关联的应用列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'AppName' => 
                              array (
                                'description' => '应用名称。',
                                'type' => 'string',
                                'example' => 'my-app',
                              ),
                              'AppId' => 
                              array (
                                'description' => '应用ID。',
                                'type' => 'string',
                                'example' => '728cbdf2-da10-49b8-b69c-9168a********',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D16979DC-4D42-****************\\",\\n  \\"Result\\": {\\n    \\"Total\\": 6,\\n    \\"ConfigMaps\\": [\\n      {\\n        \\"CreationTime\\": \\"2022-01-31T02:46:14Z\\",\\n        \\"ClusterName\\": \\"my-cluster\\",\\n        \\"Namespace\\": \\"default\\",\\n        \\"Name\\": \\"my-config\\",\\n        \\"ClusterId\\": \\"d73918f4-3b08-4c17-bb07-eaf8********\\",\\n        \\"Data\\": [\\n          {\\n            \\"Key\\": \\"name\\",\\n            \\"Value\\": \\"william\\"\\n          }\\n        ],\\n        \\"RelatedApps\\": [\\n          {\\n            \\"AppName\\": \\"my-app\\",\\n            \\"AppId\\": \\"728cbdf2-da10-49b8-b69c-9168a********\\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取K8s配置项列表',
    ),
    'ListK8sSecrets' => 
    array (
      'summary' => '调用ListK8sSecrets接口获取K8s保密配置列表。',
      'path' => '/pop/v5/k8s/acs/k8s_secret',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '7a953f9a-2946-4c7a-9d82-9939db******',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'K8s集群命名空间。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'default',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阿里云地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页码，从0开始计数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询，每页显示的条数。值为0时不进行分页，返回所有内容。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'Condition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，JSON对象字符串，示例：{"field":"Name", "pattern":"configmap-"}。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"field\\":\\"Name\\",\\"pattern\\":\\"product\\"}',
          ),
        ),
        6 => 
        array (
          'name' => 'ShowRelatedApps',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回使用该保密配置的应用列表。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'b197-40ab-9155-****',
              ),
              'Result' => 
              array (
                'description' => 'K8s保密配置查询结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'Total' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '6',
                  ),
                  'Secrets' => 
                  array (
                    'description' => '保密配置列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '保密配置类型，支持以下两种类型：

- Opaque：用户自定义数据类型。

- kubernetes.io/tls：TLS证书类型。',
                          'type' => 'string',
                          'example' => 'Opaque',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '创建时间。格式为：<i>yyyy-MM-dd</i>T<i>HH:mm:ss</i>Z（UTC时间）。
',
                          'type' => 'string',
                          'example' => '2022-05-26T02:57:02Z',
                        ),
                        'ClusterName' => 
                        array (
                          'description' => '集群名称。',
                          'type' => 'string',
                          'example' => 'test-cluster',
                        ),
                        'Namespace' => 
                        array (
                          'description' => 'K8s集群命名空间。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'Base64Encoded' => 
                        array (
                          'description' => '数据是否进过base64编码：
- true：已编码。
- false：未编码。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'CertRegionId' => 
                        array (
                          'description' => '证书所属的区域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'CertId' => 
                        array (
                          'description' => '阿里云证书服务的证书ID。',
                          'type' => 'string',
                          'example' => '123456',
                        ),
                        'Name' => 
                        array (
                          'description' => '保密配置名称，必须以字母开头，支持数字、字母和短划线（-），最多支持63个字符。
',
                          'type' => 'string',
                          'example' => 'my-secret',
                        ),
                        'ClusterId' => 
                        array (
                          'description' => 'EDAS集群ID。',
                          'type' => 'string',
                          'example' => '4472a6d3-f01d-4087-85a7-3dc52********',
                        ),
                        'RelatedIngressRules' => 
                        array (
                          'description' => '关联的应用路由规则列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Name' => 
                              array (
                                'description' => '应用路由规则名称。',
                                'type' => 'string',
                                'example' => 'testrulename',
                              ),
                              'Namespace' => 
                              array (
                                'description' => 'K8s命名空间。',
                                'type' => 'string',
                                'example' => 'default',
                              ),
                              'RelatedApps' => 
                              array (
                                'description' => '应用路由关联应用列表。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'AppName' => 
                                    array (
                                      'description' => 'EDAS应用名称。',
                                      'type' => 'string',
                                      'example' => 'app-test',
                                    ),
                                    'AppId' => 
                                    array (
                                      'description' => '应用ID。',
                                      'type' => 'string',
                                      'example' => '6dc74432-5a35-4e68-8aaa-3700********',
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Data' => 
                        array (
                          'description' => '保密配置数据。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Key' => 
                              array (
                                'description' => '用户自定义的secret键。',
                                'type' => 'string',
                                'example' => 'name',
                              ),
                              'Value' => 
                              array (
                                'description' => '用户自定义的secret值。',
                                'type' => 'string',
                                'example' => 'william',
                              ),
                            ),
                          ),
                        ),
                        'RelatedApps' => 
                        array (
                          'description' => '使用了该保密配置的应用列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'AppName' => 
                              array (
                                'description' => '应用名称。',
                                'type' => 'string',
                                'example' => 'my-app',
                              ),
                              'AppId' => 
                              array (
                                'description' => '应用ID。',
                                'type' => 'string',
                                'example' => 'b08eeb18-8946-410c-a1ea-dbbc********',
                              ),
                            ),
                          ),
                        ),
                        'CertDetail' => 
                        array (
                          'description' => 'SSL证书详情。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EndTime' => 
                            array (
                              'description' => '证书结束时间。',
                              'type' => 'string',
                              'example' => '2022-02-22T02:32:41Z',
                            ),
                            'Status' => 
                            array (
                              'description' => '证书状态：
- normal：有效证书。
- invalid：无效证书。
- expired：证书已过期。
- not\\_yet\\_valid：尚未到生效时间。
- about\\_to\\_expire：证书即将过期。
',
                              'type' => 'string',
                              'example' => 'normal',
                            ),
                            'StartTime' => 
                            array (
                              'description' => '证书生效时间。',
                              'type' => 'string',
                              'example' => '2022-01-02T22:40:00Z',
                            ),
                            'Issuer' => 
                            array (
                              'description' => '证书颁发机构。',
                              'type' => 'string',
                              'example' => 'CN=GlobalSign Root CA, OU=Root CA, O=GlobalSign nv-sa, C=BE',
                            ),
                            'DomainNames' => 
                            array (
                              'description' => 'SSL证书关联的域名列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '域名。',
                                'type' => 'string',
                                'example' => 'example.com',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.PermissionDenied.message',
            'errorMessage' => 'You are not authorized to perform the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"b197-40ab-9155-****\\",\\n  \\"Result\\": {\\n    \\"Total\\": 6,\\n    \\"Secrets\\": [\\n      {\\n        \\"Type\\": \\"Opaque\\",\\n        \\"CreationTime\\": \\"2022-05-26T02:57:02Z\\",\\n        \\"ClusterName\\": \\"test-cluster\\",\\n        \\"Namespace\\": \\"default\\",\\n        \\"Base64Encoded\\": false,\\n        \\"CertRegionId\\": \\"cn-hangzhou\\",\\n        \\"CertId\\": \\"123456\\",\\n        \\"Name\\": \\"my-secret\\",\\n        \\"ClusterId\\": \\"4472a6d3-f01d-4087-85a7-3dc52********\\",\\n        \\"RelatedIngressRules\\": [\\n          {\\n            \\"Name\\": \\"testrulename\\",\\n            \\"Namespace\\": \\"default\\",\\n            \\"RelatedApps\\": [\\n              {\\n                \\"AppName\\": \\"app-test\\",\\n                \\"AppId\\": \\"6dc74432-5a35-4e68-8aaa-3700********\\"\\n              }\\n            ]\\n          }\\n        ],\\n        \\"Data\\": [\\n          {\\n            \\"Key\\": \\"name\\",\\n            \\"Value\\": \\"william\\"\\n          }\\n        ],\\n        \\"RelatedApps\\": [\\n          {\\n            \\"AppName\\": \\"my-app\\",\\n            \\"AppId\\": \\"b08eeb18-8946-410c-a1ea-dbbc********\\"\\n          }\\n        ],\\n        \\"CertDetail\\": {\\n          \\"EndTime\\": \\"2022-02-22T02:32:41Z\\",\\n          \\"Status\\": \\"normal\\",\\n          \\"StartTime\\": \\"2022-01-02T22:40:00Z\\",\\n          \\"Issuer\\": \\"CN=GlobalSign Root CA, OU=Root CA, O=GlobalSign nv-sa, C=BE\\",\\n          \\"DomainNames\\": [\\n            \\"example.com\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取K8s保密配置列表',
    ),
    'RetryChangeOrderTask' => 
    array (
      'path' => '/pop/v5/changeorder/task_retry',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '发布单任务ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '823-bhjf-23u4-eiuf*',
          ),
        ),
        1 => 
        array (
          'name' => 'RetryStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '重试状态。',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态或POP错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '重试信息。',
                'type' => 'string',
                'example' => 'success retry task',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4823-bhjf-23u4-eiufh',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": \\"success retry task\\",\\n  \\"RequestId\\": \\"4823-bhjf-23u4-eiufh\\"\\n}","errorExample":""},{"type":"xml","example":"<RetryChangeOrderTaskResponse>\\n<RequestId>4823-bhjf-23u4-eiufh</RequestId>\\n<Message>success</Message>\\n<Data>success retry task</Data>\\n<Code>200</Code>\\n</RetryChangeOrderTaskResponse>","errorExample":""}]',
      'title' => '重试失败的发布单任务',
      'summary' => '调用RetryChangeOrderTask接口重试失败的发布单任务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateApplicationScalingRule' => 
    array (
      'path' => '/pop/v1/eam/scale/application_scaling_rule',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可调用[ListApplication](~~149390~~)接口获取。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '78194c76-3dca-418e-a263-cccd1ab4****',
          ),
        ),
        1 => 
        array (
          'name' => 'ScalingRuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性伸缩策略的名称。支持以小写字母开头，允许小写字母、数字、中划线（-）组成，长度为1~32字符的字符串。',
            'type' => 'string',
            'required' => false,
            'example' => 'cpu-trigger',
          ),
        ),
        2 => 
        array (
          'name' => 'ScalingRuleType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性伸缩策略类型，仅支持**trigger**类型。
',
            'type' => 'string',
            'required' => false,
            'example' => 'trigger',
          ),
        ),
        3 => 
        array (
          'name' => 'ScalingRuleEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用弹性伸缩策略。

- **true**：启用规则。

- **false**：禁用规则。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'ScalingRuleMetric',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '此参数已废弃。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'ScalingRuleTimer',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '此参数已废弃。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'ScalingRuleTrigger',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发器策略。设置为ScalingRuleTriggerDTO的JSON格式，具体样式，请参见请求参数补充说明。',
            'type' => 'string',
            'required' => false,
            'example' => 'ScalingRuleTriggerDTO{......}',
          ),
        ),
        7 => 
        array (
          'name' => 'ScalingBehaviour',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置自定义弹性行为，具体数据结构参考样例。',
            'type' => 'string',
            'required' => false,
            'example' => '{
      "scaleUp": {
            "stabilizationWindowSeconds": "0",
            "selectPolicy": "Max",
            "policies": [
                  {
                        "type": "Pods",
                        "value": 5,
                        "periodSeconds": 15
                  }
            ]
      },
      "scaleDown": {
            "stabilizationWindowSeconds": "300",
            "selectPolicy": "Max",
            "policies": [
                  {
                        "type": "Percent",
                        "value": 200,
                        "periodSeconds": 15
                  }
            ]
      }
}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求唯一标识ID。',
                'type' => 'string',
                'example' => 'a5281053-08e4-47a5-b2ab-5c0323de7b5a',
              ),
              'AppScalingRule' => 
              array (
                'description' => '弹性伸缩策略。',
                'type' => 'object',
                'properties' => 
                array (
                  'UpdateTime' => 
                  array (
                    'description' => '更新弹性伸缩策略的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '23212323123',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建弹性伸缩策略的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '23212323123',
                  ),
                  'AppId' => 
                  array (
                    'description' => '弹性伸缩策略所属应用的应用ID。',
                    'type' => 'string',
                    'example' => '78194c76-3dca-418e-a263-cccd1ab4****',
                  ),
                  'LastDisableTime' => 
                  array (
                    'description' => '弹性伸缩策略最近一次被禁用的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '23212323123',
                  ),
                  'MaxReplicas' => 
                  array (
                    'description' => '此参数已废弃。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ScaleRuleEnabled' => 
                  array (
                    'description' => '弹性伸缩策略的启用状态。

- **true**：启用

- **false**：禁用',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ScaleRuleType' => 
                  array (
                    'description' => '规则类型，只支持trigger。',
                    'type' => 'string',
                    'example' => 'trigger',
                  ),
                  'MinReplicas' => 
                  array (
                    'description' => '此参数已废弃。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ScaleRuleName' => 
                  array (
                    'description' => '弹性伸缩的策略名称。',
                    'type' => 'string',
                    'example' => 'cpu',
                  ),
                  'Metric' => 
                  array (
                    'description' => '此参数已废弃。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MinReplicas' => 
                      array (
                        'description' => '此参数已废弃。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'MaxReplicas' => 
                      array (
                        'description' => '此参数已废弃。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'Metrics' => 
                      array (
                        'description' => '此参数已废弃。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'MetricTargetAverageUtilization' => 
                            array (
                              'description' => '此参数已废弃。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'MetricType' => 
                            array (
                              'description' => '此参数已废弃。',
                              'type' => 'string',
                              'example' => 'cpu',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Trigger' => 
                  array (
                    'description' => '触发器配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MinReplicas' => 
                      array (
                        'description' => '最小副本数，不能低于0。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'MaxReplicas' => 
                      array (
                        'description' => '最大副本数，不能超过1000。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '122',
                      ),
                      'Triggers' => 
                      array (
                        'description' => '触发器列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '触发器列表。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'description' => '触发器类型，只支持cron和app_metric。',
                              'type' => 'string',
                              'example' => 'cron',
                            ),
                            'MetaData' => 
                            array (
                              'description' => '触发器元信息。',
                              'type' => 'string',
                              'example' => '{"dryRun":true}',
                            ),
                            'Name' => 
                            array (
                              'description' => '触发器名称。',
                              'type' => 'string',
                              'example' => 'cpu',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Behaviour' => 
                  array (
                    'description' => '弹性行为。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ScaleUp' => 
                      array (
                        'description' => '弹性扩容行为配置。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'StabilizationWindowSeconds' => 
                          array (
                            'description' => '扩容冷却时间。取值范围[0, 3600]，单位为秒。默认为0秒。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '0',
                          ),
                          'SelectPolicy' => 
                          array (
                            'description' => '弹性扩容步长策略，可选值Max、Min、Disable。',
                            'type' => 'string',
                            'example' => 'Max',
                          ),
                          'Policies' => 
                          array (
                            'description' => '策略配置。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '策略配置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'PeriodSeconds' => 
                                array (
                                  'description' => '检查执行的周期，取值范围[0, 1800]，单位为秒。',
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'example' => '15',
                                ),
                                'Type' => 
                                array (
                                  'description' => '策略类型，可为Pods或Percent。',
                                  'type' => 'string',
                                  'example' => 'Pods',
                                ),
                                'Value' => 
                                array (
                                  'description' => '弹性行为的策略值，大于零的整数。若策略类型为Pods，则该值表示Pods数量；若策略类型为Percent，则该值表示百分比，允许超过100%。',
                                  'type' => 'string',
                                  'example' => '10',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                      'ScaleDown' => 
                      array (
                        'description' => '弹性缩容行为配置。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'StabilizationWindowSeconds' => 
                          array (
                            'description' => '缩容冷却时间。取值范围[0, 3600]，单位为秒。默认为300秒。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '300',
                          ),
                          'SelectPolicy' => 
                          array (
                            'description' => '弹性缩容步长策略，可选值Max、Min、Disable。',
                            'type' => 'string',
                            'example' => 'Max',
                          ),
                          'Policies' => 
                          array (
                            'description' => '策略配置。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '策略配置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'PeriodSeconds' => 
                                array (
                                  'description' => '检查执行的周期，取值范围[0, 1800]，单位为秒。',
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'example' => '15',
                                ),
                                'Type' => 
                                array (
                                  'description' => '策略类型，可为Pods或Percent。',
                                  'type' => 'string',
                                  'example' => 'Pods',
                                ),
                                'Value' => 
                                array (
                                  'description' => '弹性行为的策略值，大于零的整数。若策略类型为Pods，则该值表示Pods数量；若策略类型为Percent，则该值表示百分比，允许超过100%。',
                                  'type' => 'string',
                                  'example' => '10',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"a5281053-08e4-47a5-b2ab-5c0323de7b5a\\",\\n  \\"AppScalingRule\\": {\\n    \\"UpdateTime\\": 23212323123,\\n    \\"CreateTime\\": 23212323123,\\n    \\"AppId\\": \\"78194c76-3dca-418e-a263-cccd1ab4****\\",\\n    \\"LastDisableTime\\": 23212323123,\\n    \\"MaxReplicas\\": 1,\\n    \\"ScaleRuleEnabled\\": true,\\n    \\"ScaleRuleType\\": \\"trigger\\",\\n    \\"MinReplicas\\": 1,\\n    \\"ScaleRuleName\\": \\"cpu\\",\\n    \\"Metric\\": {\\n      \\"MinReplicas\\": 1,\\n      \\"MaxReplicas\\": 1,\\n      \\"Metrics\\": [\\n        {\\n          \\"MetricTargetAverageUtilization\\": 1,\\n          \\"MetricType\\": \\"cpu\\"\\n        }\\n      ]\\n    },\\n    \\"Trigger\\": {\\n      \\"MinReplicas\\": 2,\\n      \\"MaxReplicas\\": 122,\\n      \\"Triggers\\": [\\n        {\\n          \\"Type\\": \\"cron\\",\\n          \\"MetaData\\": \\"{\\\\\\"dryRun\\\\\\":true}\\",\\n          \\"Name\\": \\"cpu\\"\\n        }\\n      ]\\n    },\\n    \\"Behaviour\\": {\\n      \\"ScaleUp\\": {\\n        \\"StabilizationWindowSeconds\\": 0,\\n        \\"SelectPolicy\\": \\"Max\\",\\n        \\"Policies\\": [\\n          {\\n            \\"PeriodSeconds\\": 15,\\n            \\"Type\\": \\"Pods\\",\\n            \\"Value\\": \\"10\\"\\n          }\\n        ]\\n      },\\n      \\"ScaleDown\\": {\\n        \\"StabilizationWindowSeconds\\": 300,\\n        \\"SelectPolicy\\": \\"Max\\",\\n        \\"Policies\\": [\\n          {\\n            \\"PeriodSeconds\\": 15,\\n            \\"Type\\": \\"Pods\\",\\n            \\"Value\\": \\"10\\"\\n          }\\n        ]\\n      }\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>a5281053-08e4-47a5-b2ab-5c0323de7b5a</RequestId>\\n<AppScalingRule>\\n    <ScaleRuleEnabled>true</ScaleRuleEnabled>\\n    <LastDisableTime>23212323123</LastDisableTime>\\n    <AppId>78194c76-3dca-418e-a263-cccd1ab4****</AppId>\\n    <MinReplicas>1</MinReplicas>\\n    <MaxReplicas>1</MaxReplicas>\\n    <CreateTime>23212323123</CreateTime>\\n    <UpdateTime>23212323123</UpdateTime>\\n    <ScaleRuleName>cpu</ScaleRuleName>\\n    <ScaleRuleType>trigger</ScaleRuleType>\\n    <Metric>\\n        <MinReplicas>1</MinReplicas>\\n        <MaxReplicas>1</MaxReplicas>\\n        <Metrics>\\n            <MetricType>cpu</MetricType>\\n            <MetricTargetAverageUtilization>1</MetricTargetAverageUtilization>\\n        </Metrics>\\n    </Metric>\\n    <Trigger>\\n        <MinReplicas>2</MinReplicas>\\n        <MaxReplicas>122</MaxReplicas>\\n        <Triggers>\\n            <Type>cron</Type>\\n            <MetaData>{\\"dryRun\\":true}</MetaData>\\n            <Name>cpu</Name>\\n        </Triggers>\\n    </Trigger>\\n</AppScalingRule>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '创建应用弹性伸缩规则',
      'summary' => '调用CreateApplicationScalingRule接口创建应用的弹性伸缩规则。',
      'requestParamsDescription' => '## 请求参数补充说明
```
public class ScalingRuleTriggerDTO {
    /**
     * 最大实例数，上限1000。
     */
    Integer maxReplicas;
    /**
     * 最小实例数，下限0。
     */
    Integer minReplicas;

    /**
     * 触发器列表，支持多个触发器。
     */
    List<Trigger> triggers;

    @Data
    @ToString
    @Builder
    @AllArgsConstructor
    @NoArgsConstructor
    public static class Trigger {
        /**
         * 触发器类型，支持cron（定时）, app_metric（应用监控）。
         */
        String type;

        /**
         * 触发器名称，必须以字母开头，允许数字、字母、短划线（-）或下划线（_）组成。最大长度30个字符。
         */
        String name;

        /**
          触发器元数据，string->string的map Json，不同类型的触发器支持的元数据不同。
          1. cron
           {"period":"weekly","dryRun":"false","timerInDay":[{"atTime":"08:00","targetReplicas":2},{"atTime":"20:00","targetReplicas":1}],"timerInWeek":["Sat","Thu"]}
          * period周期：daily, weekly, monthly。
          * dryRun: false是观测并扩缩，true是仅观测。
          * timerInDay：描述每天的扩缩周期，指在什么时候开始维持多少副本数。
         * timerInWeek：cron表达式的周，比如Fri。

         2. app_metric
         {\\"metricName\\":\\"arms_appstat.incall_QPS\\",\\"dryRun\\":\\"false\\",\\"targetValAvg\\":\\"true\\",\\"targetAverageValue\\":\\"100\\"}
         
         * metricName：
              * arms_appstat.incall_QPS（qps）
              * arms_appstat.incall_rt（rt）
              * arms_appstat.system_CPU（cpu使用率）
              * arms_appstat.system_MEM（内存使用率）
         * dryRun同cron。
        * targetValAvg：true为需要进行平均，false为不需要平均, 除了qps为true，其他均为false。
        * targetAverageValue/targetValue： targetValAvg为true则为targetAverageValue，targetValAvg为false则为targetValue。
        */
        String metadata;
    }
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteApplicationScalingRule' => 
    array (
      'path' => '/pop/v1/eam/scale/application_scaling_rule',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可调用[ListApplication](~~149390~~)接口获取。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '78194c76-3dca-418e-a263-cccd1ab4****',
          ),
        ),
        1 => 
        array (
          'name' => 'ScalingRuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性伸缩策略的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'cpu-trigger',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求唯一标识ID。',
                'type' => 'string',
                'example' => '5d6fa0bc-cc3**********',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5d6fa0bc-cc3**********\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>5d6fa0bc-cc3**********</RequestId>","errorExample":""}]',
      'title' => '删除应用弹性伸缩规则',
      'summary' => '调用DeleteApplicationScalingRule接口删除应用的弹性伸缩规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableApplicationScalingRule' => 
    array (
      'path' => '/pop/v1/eam/scale/disable_application_scaling_rule',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可调用[ListApplication](~~149390~~)接口获取。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '78194c76-3dca-418e-a263-cccd1ab4****',
          ),
        ),
        1 => 
        array (
          'name' => 'ScalingRuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性伸缩策略的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'cron-trigger',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求唯一标识ID。',
                'type' => 'string',
                'example' => '5d6fa0bc-cc3**********',
              ),
              'AppScalingRule' => 
              array (
                'description' => '弹性伸缩策略。',
                'type' => 'object',
                'properties' => 
                array (
                  'UpdateTime' => 
                  array (
                    'description' => '更新弹性伸缩策略的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '23212323123',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建弹性伸缩策略的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '23212323123',
                  ),
                  'AppId' => 
                  array (
                    'description' => '弹性伸缩策略所属应用的应用ID。',
                    'type' => 'string',
                    'example' => '78194c76-3dca-418e-a263-cccd1ab4****',
                  ),
                  'LastDisableTime' => 
                  array (
                    'description' => '弹性伸缩策略最近一次被禁用的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '23212323123',
                  ),
                  'MaxReplicas' => 
                  array (
                    'description' => '此参数已废弃。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ScaleRuleEnabled' => 
                  array (
                    'description' => '弹性伸缩策略的启用状态。

- **true**：启用

- **false**：禁用',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ScaleRuleType' => 
                  array (
                    'description' => '弹性伸缩策略类型，只支持trigger。',
                    'type' => 'string',
                    'example' => 'trigger',
                  ),
                  'MinReplicas' => 
                  array (
                    'description' => '此参数已废弃。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ScaleRuleName' => 
                  array (
                    'description' => '弹性伸缩策略的名称。',
                    'type' => 'string',
                    'example' => 'cron-trigger',
                  ),
                  'Metric' => 
                  array (
                    'description' => '此参数已废弃。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MinReplicas' => 
                      array (
                        'description' => '此参数已废弃。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'MaxReplicas' => 
                      array (
                        'description' => '此参数已废弃。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '12',
                      ),
                      'Metrics' => 
                      array (
                        'description' => '此参数已废弃。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'MetricTargetAverageUtilization' => 
                            array (
                              'description' => '此参数已废弃。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'MetricType' => 
                            array (
                              'description' => '此参数已废弃。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Trigger' => 
                  array (
                    'description' => '触发器配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MinReplicas' => 
                      array (
                        'description' => '最小副本数，不能低于0。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'MaxReplicas' => 
                      array (
                        'description' => '最大副本数，不能超过1000。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '12',
                      ),
                      'Triggers' => 
                      array (
                        'description' => '触发器。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'description' => '触发器类型，只支持cron和app_metric。',
                              'type' => 'string',
                              'example' => 'cron',
                            ),
                            'MetaData' => 
                            array (
                              'description' => '触发器元信息。',
                              'type' => 'string',
                              'example' => '{"dryRun":true}',
                            ),
                            'Name' => 
                            array (
                              'description' => '触发器名称。',
                              'type' => 'string',
                              'example' => 'cron-trigger',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"5d6fa0bc-cc3**********\\",\\n  \\"AppScalingRule\\": {\\n    \\"UpdateTime\\": 23212323123,\\n    \\"CreateTime\\": 23212323123,\\n    \\"AppId\\": \\"78194c76-3dca-418e-a263-cccd1ab4****\\",\\n    \\"LastDisableTime\\": 23212323123,\\n    \\"MaxReplicas\\": 1,\\n    \\"ScaleRuleEnabled\\": true,\\n    \\"ScaleRuleType\\": \\"trigger\\",\\n    \\"MinReplicas\\": 1,\\n    \\"ScaleRuleName\\": \\"cron-trigger\\",\\n    \\"Metric\\": {\\n      \\"MinReplicas\\": 1,\\n      \\"MaxReplicas\\": 12,\\n      \\"Metrics\\": [\\n        {\\n          \\"MetricTargetAverageUtilization\\": 1,\\n          \\"MetricType\\": \\"1\\"\\n        }\\n      ]\\n    },\\n    \\"Trigger\\": {\\n      \\"MinReplicas\\": 1,\\n      \\"MaxReplicas\\": 12,\\n      \\"Triggers\\": [\\n        {\\n          \\"Type\\": \\"cron\\",\\n          \\"MetaData\\": \\"{\\\\\\"dryRun\\\\\\":true}\\",\\n          \\"Name\\": \\"cron-trigger\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>5d6fa0bc-cc3**********</RequestId>\\n<AppScalingRule>\\n    <ScaleRuleEnabled>true</ScaleRuleEnabled>\\n    <LastDisableTime>23212323123</LastDisableTime>\\n    <AppId>78194c76-3dca-418e-a263-cccd1ab4****</AppId>\\n    <MinReplicas>1</MinReplicas>\\n    <MaxReplicas>1</MaxReplicas>\\n    <CreateTime>23212323123</CreateTime>\\n    <UpdateTime>23212323123</UpdateTime>\\n    <ScaleRuleName>cron-trigger</ScaleRuleName>\\n    <ScaleRuleType>trigger</ScaleRuleType>\\n    <Metric>\\n        <MinReplicas>1</MinReplicas>\\n        <MaxReplicas>12</MaxReplicas>\\n        <Metrics>\\n            <MetricType>1</MetricType>\\n            <MetricTargetAverageUtilization>1</MetricTargetAverageUtilization>\\n        </Metrics>\\n    </Metric>\\n    <Trigger>\\n        <MinReplicas>1</MinReplicas>\\n        <MaxReplicas>12</MaxReplicas>\\n        <Triggers>\\n            <Type>cron</Type>\\n            <MetaData>{\\"dryRun\\":true}</MetaData>\\n            <Name>cron-trigger</Name>\\n        </Triggers>\\n    </Trigger>\\n</AppScalingRule>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '禁用应用弹性伸缩规则',
      'summary' => '调用DisableApplicationScalingRule接口禁用应用弹性伸缩规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableApplicationScalingRule' => 
    array (
      'path' => '/pop/v1/eam/scale/enable_application_scaling_rule',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可调用[ListApplication](~~149390~~)接口获取。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '78194c76-3dca-418e-a263-cccd1ab4****',
          ),
        ),
        1 => 
        array (
          'name' => 'ScalingRuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性伸缩策略的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'cpu-trigger',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求唯一标识ID。',
                'type' => 'string',
                'example' => 'a5281053-08e4-47a5-b2ab-5c0323de7b5a',
              ),
              'AppScalingRule' => 
              array (
                'description' => '弹性伸缩策略。',
                'type' => 'object',
                'properties' => 
                array (
                  'UpdateTime' => 
                  array (
                    'description' => '更新弹性伸缩策略的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '23212323123',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建弹性伸缩策略的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '23212323123',
                  ),
                  'AppId' => 
                  array (
                    'description' => '弹性伸缩策略所属应用的应用ID。',
                    'type' => 'string',
                    'example' => '78194c76-3dca-418e-a263-cccd1ab4****',
                  ),
                  'LastDisableTime' => 
                  array (
                    'description' => '弹性伸缩策略最近一次被禁用的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '23212323123',
                  ),
                  'MaxReplicas' => 
                  array (
                    'description' => '此参数已废弃。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ScaleRuleEnabled' => 
                  array (
                    'description' => '弹性伸缩策略的启用状态。

- **true**：启用

- **false**：禁用',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ScaleRuleType' => 
                  array (
                    'description' => '弹性伸缩策略类型，仅支持trigger类型。',
                    'type' => 'string',
                    'example' => 'trigger',
                  ),
                  'MinReplicas' => 
                  array (
                    'description' => '此参数已废弃。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ScaleRuleName' => 
                  array (
                    'description' => '弹性伸缩的策略名称。',
                    'type' => 'string',
                    'example' => 'cpu-trigger',
                  ),
                  'Metric' => 
                  array (
                    'description' => '此参数已废弃。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MinReplicas' => 
                      array (
                        'description' => '此参数已废弃。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'MaxReplicas' => 
                      array (
                        'description' => '此参数已废弃。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'Metrics' => 
                      array (
                        'description' => '此参数已废弃。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'MetricTargetAverageUtilization' => 
                            array (
                              'description' => '此参数已废弃。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '12',
                            ),
                            'MetricType' => 
                            array (
                              'description' => '此参数已废弃。',
                              'type' => 'string',
                              'example' => 'cpu',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Trigger' => 
                  array (
                    'description' => '触发器配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MinReplicas' => 
                      array (
                        'description' => '最小副本数，下限0。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'MaxReplicas' => 
                      array (
                        'description' => '最大副本数，上限1000。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '122',
                      ),
                      'Triggers' => 
                      array (
                        'description' => '触发器列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'description' => '触发器类型，仅支持cron和app_metric。',
                              'type' => 'string',
                              'example' => 'cron',
                            ),
                            'MetaData' => 
                            array (
                              'description' => '触发器元信息。',
                              'type' => 'string',
                              'example' => '{"dryRun":true}',
                            ),
                            'Name' => 
                            array (
                              'description' => '触发器名称。',
                              'type' => 'string',
                              'example' => 'cpu',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"a5281053-08e4-47a5-b2ab-5c0323de7b5a\\",\\n  \\"AppScalingRule\\": {\\n    \\"UpdateTime\\": 23212323123,\\n    \\"CreateTime\\": 23212323123,\\n    \\"AppId\\": \\"78194c76-3dca-418e-a263-cccd1ab4****\\",\\n    \\"LastDisableTime\\": 23212323123,\\n    \\"MaxReplicas\\": 1,\\n    \\"ScaleRuleEnabled\\": true,\\n    \\"ScaleRuleType\\": \\"trigger\\",\\n    \\"MinReplicas\\": 1,\\n    \\"ScaleRuleName\\": \\"cpu-trigger\\",\\n    \\"Metric\\": {\\n      \\"MinReplicas\\": 1,\\n      \\"MaxReplicas\\": 1,\\n      \\"Metrics\\": [\\n        {\\n          \\"MetricTargetAverageUtilization\\": 12,\\n          \\"MetricType\\": \\"cpu\\"\\n        }\\n      ]\\n    },\\n    \\"Trigger\\": {\\n      \\"MinReplicas\\": 1,\\n      \\"MaxReplicas\\": 122,\\n      \\"Triggers\\": [\\n        {\\n          \\"Type\\": \\"cron\\",\\n          \\"MetaData\\": \\"{\\\\\\"dryRun\\\\\\":true}\\",\\n          \\"Name\\": \\"cpu\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>a5281053-08e4-47a5-b2ab-5c0323de7b5a</RequestId>\\n<AppScalingRule>\\n    <ScaleRuleEnabled>true</ScaleRuleEnabled>\\n    <LastDisableTime>23212323123</LastDisableTime>\\n    <AppId>78194c76-3dca-418e-a263-cccd1ab4****</AppId>\\n    <MinReplicas>1</MinReplicas>\\n    <MaxReplicas>1</MaxReplicas>\\n    <CreateTime>23212323123</CreateTime>\\n    <UpdateTime>23212323123</UpdateTime>\\n    <ScaleRuleName>cpu-trigger</ScaleRuleName>\\n    <ScaleRuleType>trigger</ScaleRuleType>\\n    <Metric>\\n        <MinReplicas>1</MinReplicas>\\n        <MaxReplicas>1</MaxReplicas>\\n        <Metrics>\\n            <MetricType>cpu</MetricType>\\n            <MetricTargetAverageUtilization>12</MetricTargetAverageUtilization>\\n        </Metrics>\\n    </Metric>\\n    <Trigger>\\n        <MinReplicas>1</MinReplicas>\\n        <MaxReplicas>122</MaxReplicas>\\n        <Triggers>\\n            <Type>cron</Type>\\n            <MetaData>{\\"dryRun\\":true}</MetaData>\\n            <Name>cpu</Name>\\n        </Triggers>\\n    </Trigger>\\n</AppScalingRule>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '启用应用弹性伸缩规则',
      'summary' => '调用EnableApplicationScalingRule接口启用应用弹性伸缩规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateApplicationScalingRule' => 
    array (
      'path' => '/pop/v1/eam/scale/application_scaling_rule',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可调用[ListApplication](~~149390~~)接口获取。',
            'type' => 'string',
            'required' => false,
            'example' => '78194c76-3dca-418e-a263-cccd1ab4****',
          ),
        ),
        1 => 
        array (
          'name' => 'ScalingRuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性伸缩策略的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'cpu-trigger',
          ),
        ),
        2 => 
        array (
          'name' => 'ScalingRuleType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性策略类型，当前仅支持以下类型：
* trigger：触发器类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'trigger',
          ),
        ),
        3 => 
        array (
          'name' => 'ScalingRuleEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性策略的启用状态。

- **true**：启用

- **false**：禁用',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'ScalingRuleMetric',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '此参数已废弃。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'ScalingRuleTimer',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '此参数已废弃。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'ScalingRuleTrigger',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发器策略，为ScalingRuleTriggerDTO的JSON格式，具体样式，请参见请求参数补充说明。',
            'type' => 'string',
            'required' => false,
            'example' => 'ScalingRuleTriggerDTO{......}',
          ),
        ),
        7 => 
        array (
          'name' => 'ScalingBehaviour',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置自定义弹性行为，具体数据结构参考样例。',
            'type' => 'string',
            'required' => false,
            'example' => '{"scaleUp":{"stabilizationWindowSeconds":"0","selectPolicy":"Max","policies":[{"type":"Pods","value":5,"periodSeconds":15}]},"scaleDown":{"stabilizationWindowSeconds":"300","selectPolicy":"Max","policies":[{"type":"Percent","value":200,"periodSeconds":15}]}}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求唯一表示ID。',
                'type' => 'string',
                'example' => 'a5281053-08e4-47a5-b2ab-5c0323de7b5a',
              ),
              'AppScalingRule' => 
              array (
                'description' => '弹性伸缩策略。',
                'type' => 'object',
                'properties' => 
                array (
                  'UpdateTime' => 
                  array (
                    'description' => '更新弹性伸缩策略的时间戳，单位毫秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1574251601785',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建弹性伸缩策略的时间戳，单位毫秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1574251601785',
                  ),
                  'AppId' => 
                  array (
                    'description' => '弹性伸缩策略所属应用的应用ID。',
                    'type' => 'string',
                    'example' => '78194c76-3dca-418e-a263-cccd1ab4****',
                  ),
                  'LastDisableTime' => 
                  array (
                    'description' => '弹性伸缩策略最近一次被禁用的时间戳，单位毫秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1574251601785',
                  ),
                  'MaxReplicas' => 
                  array (
                    'description' => '此参数已废弃。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ScaleRuleEnabled' => 
                  array (
                    'description' => '弹性伸缩策略的启用状态。

- **true**：启用

- **false**：禁用',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ScaleRuleType' => 
                  array (
                    'description' => '弹性伸缩策略类型，仅支持trigger类型。',
                    'type' => 'string',
                    'example' => 'trigger',
                  ),
                  'MinReplicas' => 
                  array (
                    'description' => '此参数已废弃。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ScaleRuleName' => 
                  array (
                    'description' => '弹性伸缩的策略名称。',
                    'type' => 'string',
                    'example' => 'cpu-trigger',
                  ),
                  'Metric' => 
                  array (
                    'description' => '此参数已废弃。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MinReplicas' => 
                      array (
                        'description' => '此参数已废弃。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'MaxReplicas' => 
                      array (
                        'description' => '此参数已废弃。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'Metrics' => 
                      array (
                        'description' => '此参数已废弃。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'MetricTargetAverageUtilization' => 
                            array (
                              'description' => '此参数已废弃。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'MetricType' => 
                            array (
                              'description' => '此参数已废弃。',
                              'type' => 'string',
                              'example' => 'cpu',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Trigger' => 
                  array (
                    'description' => '触发器配置列表。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MinReplicas' => 
                      array (
                        'description' => '最小副本数，不能低于0。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'MaxReplicas' => 
                      array (
                        'description' => '最大副本数，不能超过1000。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '122',
                      ),
                      'Triggers' => 
                      array (
                        'description' => '触发器配置列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'description' => '触发器类型，只支持cron和app_metric。',
                              'type' => 'string',
                              'example' => 'cron',
                            ),
                            'MetaData' => 
                            array (
                              'description' => '触发器元信息。',
                              'type' => 'string',
                              'example' => '{"dryRun":true}',
                            ),
                            'Name' => 
                            array (
                              'description' => '触发器名称。',
                              'type' => 'string',
                              'example' => 'cpu',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Behaviour' => 
                  array (
                    'description' => '弹性行为配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ScaleUp' => 
                      array (
                        'description' => '弹性扩容行为配置。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'StabilizationWindowSeconds' => 
                          array (
                            'description' => '扩容冷却时间。取值范围\\[0, 3600\\]，单位为秒。默认为0秒。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '0',
                          ),
                          'SelectPolicy' => 
                          array (
                            'description' => '弹性扩容步长策略，可选值Max、Min、Disable。',
                            'type' => 'string',
                            'example' => 'Max',
                          ),
                          'Policies' => 
                          array (
                            'description' => '策略配置。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'PeriodSeconds' => 
                                array (
                                  'description' => '检查执行的周期，取值范围[0, 1800]，单位为秒。',
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'example' => '15',
                                ),
                                'Type' => 
                                array (
                                  'description' => '策略类型，可为Pods或Percent。',
                                  'type' => 'string',
                                  'example' => 'Pods',
                                ),
                                'Value' => 
                                array (
                                  'description' => '弹性行为的策略值，大于零的整数。若策略类型为Pods，则该值表示Pods数量；若策略类型为Percent，则该值表示百分比，允许超过100%。',
                                  'type' => 'string',
                                  'example' => '10',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                      'ScaleDown' => 
                      array (
                        'description' => '弹性缩容行为配置。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'StabilizationWindowSeconds' => 
                          array (
                            'description' => '缩容冷却时间。取值范围\\[0, 3600\\]，单位为秒。默认为300秒。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '300',
                          ),
                          'SelectPolicy' => 
                          array (
                            'description' => '弹性缩容步长策略，可选值Max、Min、Disable。',
                            'type' => 'string',
                            'example' => 'Max',
                          ),
                          'Policies' => 
                          array (
                            'description' => '策略配置。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'PeriodSeconds' => 
                                array (
                                  'description' => '检查执行的周期，取值范围[0, 1800]，单位为秒。',
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'example' => '15',
                                ),
                                'Type' => 
                                array (
                                  'description' => '策略类型，可为Pods或Percent。',
                                  'type' => 'string',
                                  'example' => 'Pods',
                                ),
                                'Value' => 
                                array (
                                  'description' => '弹性行为的策略值，大于零的整数。若策略类型为Pods，则该值表示Pods数量；若策略类型为Percent，则该值表示百分比，允许超过100%。',
                                  'type' => 'string',
                                  'example' => '10',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"a5281053-08e4-47a5-b2ab-5c0323de7b5a\\",\\n  \\"AppScalingRule\\": {\\n    \\"UpdateTime\\": 1574251601785,\\n    \\"CreateTime\\": 1574251601785,\\n    \\"AppId\\": \\"78194c76-3dca-418e-a263-cccd1ab4****\\",\\n    \\"LastDisableTime\\": 1574251601785,\\n    \\"MaxReplicas\\": 1,\\n    \\"ScaleRuleEnabled\\": true,\\n    \\"ScaleRuleType\\": \\"trigger\\",\\n    \\"MinReplicas\\": 1,\\n    \\"ScaleRuleName\\": \\"cpu-trigger\\",\\n    \\"Metric\\": {\\n      \\"MinReplicas\\": 1,\\n      \\"MaxReplicas\\": 1,\\n      \\"Metrics\\": [\\n        {\\n          \\"MetricTargetAverageUtilization\\": 1,\\n          \\"MetricType\\": \\"cpu\\"\\n        }\\n      ]\\n    },\\n    \\"Trigger\\": {\\n      \\"MinReplicas\\": 1,\\n      \\"MaxReplicas\\": 122,\\n      \\"Triggers\\": [\\n        {\\n          \\"Type\\": \\"cron\\",\\n          \\"MetaData\\": \\"{\\\\\\"dryRun\\\\\\":true}\\",\\n          \\"Name\\": \\"cpu\\"\\n        }\\n      ]\\n    },\\n    \\"Behaviour\\": {\\n      \\"ScaleUp\\": {\\n        \\"StabilizationWindowSeconds\\": 0,\\n        \\"SelectPolicy\\": \\"Max\\",\\n        \\"Policies\\": [\\n          {\\n            \\"PeriodSeconds\\": 15,\\n            \\"Type\\": \\"Pods\\",\\n            \\"Value\\": \\"10\\"\\n          }\\n        ]\\n      },\\n      \\"ScaleDown\\": {\\n        \\"StabilizationWindowSeconds\\": 300,\\n        \\"SelectPolicy\\": \\"Max\\",\\n        \\"Policies\\": [\\n          {\\n            \\"PeriodSeconds\\": 15,\\n            \\"Type\\": \\"Pods\\",\\n            \\"Value\\": \\"10\\"\\n          }\\n        ]\\n      }\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Message>success</Message>\\n<RequestId>a5281053-08e4-47a5-b2ab-5c0323de7b5a</RequestId>\\n<AppScalingRule>\\n    <ScaleRuleEnabled>true</ScaleRuleEnabled>\\n    <LastDisableTime>23212323123</LastDisableTime>\\n    <AppId>78194c76-3dca-418e-a263-cccd1ab4****</AppId>\\n    <MinReplicas>1</MinReplicas>\\n    <MaxReplicas>1</MaxReplicas>\\n    <CreateTime>23212323123</CreateTime>\\n    <UpdateTime>23212323123</UpdateTime>\\n    <ScaleRuleName>cpu-trigger</ScaleRuleName>\\n    <ScaleRuleType>trigger</ScaleRuleType>\\n    <Metric>\\n        <MinReplicas>1</MinReplicas>\\n        <MaxReplicas>1</MaxReplicas>\\n        <Metrics>\\n            <MetricType>cpu</MetricType>\\n            <MetricTargetAverageUtilization>1</MetricTargetAverageUtilization>\\n        </Metrics>\\n    </Metric>\\n    <Trigger>\\n        <MinReplicas>1</MinReplicas>\\n        <MaxReplicas>122</MaxReplicas>\\n        <Triggers>\\n            <Type>cron</Type>\\n            <MetaData>{\\"dryRun\\":true}</MetaData>\\n            <Name>cpu</Name>\\n        </Triggers>\\n    </Trigger>\\n</AppScalingRule>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '更新应用的弹性伸缩规则',
      'summary' => '调用UpdateApplicationScalingRule接口更新应用的弹性伸缩规则。',
      'requestParamsDescription' => '## 请求参数补充说明
```
public class ScalingRuleTriggerDTO {
    /**
     * 最大实例数，上限1000。
     */
    Integer maxReplicas;
    /**
     * 最小实例数，下限0。
     */
    Integer minReplicas;

    /**
     * 触发器列表，支持多个触发器。
     */
    List<Trigger> triggers;

    @Data
    @ToString
    @Builder
    @AllArgsConstructor
    @NoArgsConstructor
    public static class Trigger {
        /**
         * 触发器类型，支持cron（定时）, app_metric（应用监控）。
         */
        String type;

        /**
         * 触发器名称，必须以字母开头，允许数字、字母、短划线（-）或下划线（_）组成。最大长度30个字符。
         */
        String name;

        /**
          触发器元数据，string->string的map Json，不同类型的触发器支持的元数据不同。
          1. cron
           {"period":"weekly","dryRun":"false","timerInDay":[{"atTime":"08:00","targetReplicas":2},{"atTime":"20:00","targetReplicas":1}],"timerInWeek":["Sat","Thu"]}
          * period周期：daily, weekly, monthly。
          * dryRun: false是观测并扩缩，true是仅观测。
          * timerInDay：描述每天的扩缩周期，指在什么时候开始维持多少副本数。
         * timerInWeek：cron表达式的周，比如Fri。

         2. app_metric
         {\\"metricName\\":\\"arms_appstat.incall_QPS\\",\\"dryRun\\":\\"false\\",\\"targetValAvg\\":\\"true\\",\\"targetAverageValue\\":\\"100\\"}
         
         * metricName：
              * arms_appstat.incall_QPS（qps）
              * arms_appstat.incall_rt（rt）
              * arms_appstat.system_CPU（cpu使用率）
              * arms_appstat.system_MEM（内存使用率）
         * dryRun同cron。
        * targetValAvg：true为需要进行平均，false为不需要平均, 除了qps为true，其他均为false。
        * targetAverageValue/targetValue： targetValAvg为true则为targetAverageValue，targetValAvg为false则为targetValue。
        */
        String metadata;
    }
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeApplicationScalingRules' => 
    array (
      'path' => '/pop/v1/eam/scale/application_scaling_rules',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可调用[ListApplication](~~149390~~)接口获取。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '78194c76-3dca-418e-a263-cccd1ab4****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求唯一ID。',
                'type' => 'string',
                'example' => 'a5281053-08e4-47a5-b2ab-5c0323de7b5a',
              ),
              'AppScalingRules' => 
              array (
                'description' => '应用的弹性伸缩策略。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页展示的弹性策略数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalSize' => 
                  array (
                    'description' => '弹性策略总的数量。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '20',
                  ),
                  'Result' => 
                  array (
                    'description' => '应用的弹性策略查询结果。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'UpdateTime' => 
                        array (
                          'description' => '更新弹性伸缩策略的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '23212323123',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建弹性伸缩策略的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '23212323123',
                        ),
                        'AppId' => 
                        array (
                          'description' => '弹性伸缩策略所属应用的应用ID。',
                          'type' => 'string',
                          'example' => '78194c76-3dca-418e-a263-cccd1ab4****',
                        ),
                        'LastDisableTime' => 
                        array (
                          'description' => '弹性伸缩策略最近一次被禁用的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '23212323123',
                        ),
                        'MaxReplicas' => 
                        array (
                          'description' => '此参数已废弃。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'ScaleRuleEnabled' => 
                        array (
                          'description' => '弹性策略的启用状态。

- **true**：启用

- **false**：禁用',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'ScaleRuleType' => 
                        array (
                          'description' => '弹性策略类型，仅支持trigger类型。',
                          'type' => 'string',
                          'example' => 'trigger',
                        ),
                        'MinReplicas' => 
                        array (
                          'description' => '此参数已废弃。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'ScaleRuleName' => 
                        array (
                          'description' => '弹性策略的名称。',
                          'type' => 'string',
                          'example' => 'cpu-trigger',
                        ),
                        'Metric' => 
                        array (
                          'description' => '此参数已废弃。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'MinReplicas' => 
                            array (
                              'description' => '此参数已废弃。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'MaxReplicas' => 
                            array (
                              'description' => '此参数已废弃。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'Metrics' => 
                            array (
                              'description' => '此参数已废弃。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'MetricTargetAverageUtilization' => 
                                  array (
                                    'description' => '此参数已废弃。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'MetricType' => 
                                  array (
                                    'description' => '此参数已废弃。',
                                    'type' => 'string',
                                    'example' => 'asd',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Trigger' => 
                        array (
                          'description' => '触发器配置列表。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'MinReplicas' => 
                            array (
                              'description' => '最小副本数，不能低于0。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'MaxReplicas' => 
                            array (
                              'description' => '最大副本数，不能超过1000。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '122',
                            ),
                            'Triggers' => 
                            array (
                              'description' => '触发器配置列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Type' => 
                                  array (
                                    'description' => '触发器类型，只支持cron和app_metric。',
                                    'type' => 'string',
                                    'example' => 'cron',
                                  ),
                                  'MetaData' => 
                                  array (
                                    'description' => '触发器元信息。',
                                    'type' => 'string',
                                    'example' => '{"dryRun":true}',
                                  ),
                                  'Name' => 
                                  array (
                                    'description' => '触发器名称。',
                                    'type' => 'string',
                                    'example' => 'cron-trigger',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Behaviour' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ScaleUp' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'StabilizationWindowSeconds' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int32',
                                ),
                                'SelectPolicy' => 
                                array (
                                  'type' => 'string',
                                ),
                                'Policies' => 
                                array (
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'PeriodSeconds' => 
                                      array (
                                        'type' => 'integer',
                                        'format' => 'int32',
                                      ),
                                      'Type' => 
                                      array (
                                        'type' => 'string',
                                      ),
                                      'Value' => 
                                      array (
                                        'type' => 'string',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'ScaleDown' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'StabilizationWindowSeconds' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int32',
                                ),
                                'SelectPolicy' => 
                                array (
                                  'type' => 'string',
                                ),
                                'Policies' => 
                                array (
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'PeriodSeconds' => 
                                      array (
                                        'type' => 'integer',
                                        'format' => 'int32',
                                      ),
                                      'Type' => 
                                      array (
                                        'type' => 'string',
                                      ),
                                      'Value' => 
                                      array (
                                        'type' => 'string',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"a5281053-08e4-47a5-b2ab-5c0323de7b5a\\",\\n  \\"AppScalingRules\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalSize\\": 20,\\n    \\"Result\\": [\\n      {\\n        \\"UpdateTime\\": 23212323123,\\n        \\"CreateTime\\": 23212323123,\\n        \\"AppId\\": \\"78194c76-3dca-418e-a263-cccd1ab4****\\",\\n        \\"LastDisableTime\\": 23212323123,\\n        \\"MaxReplicas\\": 1,\\n        \\"ScaleRuleEnabled\\": true,\\n        \\"ScaleRuleType\\": \\"trigger\\",\\n        \\"MinReplicas\\": 1,\\n        \\"ScaleRuleName\\": \\"cpu-trigger\\",\\n        \\"Metric\\": {\\n          \\"MinReplicas\\": 1,\\n          \\"MaxReplicas\\": 1,\\n          \\"Metrics\\": [\\n            {\\n              \\"MetricTargetAverageUtilization\\": 1,\\n              \\"MetricType\\": \\"asd\\"\\n            }\\n          ]\\n        },\\n        \\"Trigger\\": {\\n          \\"MinReplicas\\": 1,\\n          \\"MaxReplicas\\": 122,\\n          \\"Triggers\\": [\\n            {\\n              \\"Type\\": \\"cron\\",\\n              \\"MetaData\\": \\"{\\\\\\"dryRun\\\\\\":true}\\",\\n              \\"Name\\": \\"cron-trigger\\"\\n            }\\n          ]\\n        },\\n        \\"Behaviour\\": {\\n          \\"ScaleUp\\": {\\n            \\"StabilizationWindowSeconds\\": 0,\\n            \\"SelectPolicy\\": \\"\\",\\n            \\"Policies\\": [\\n              {\\n                \\"PeriodSeconds\\": 0,\\n                \\"Type\\": \\"\\",\\n                \\"Value\\": \\"\\"\\n              }\\n            ]\\n          },\\n          \\"ScaleDown\\": {\\n            \\"StabilizationWindowSeconds\\": 0,\\n            \\"SelectPolicy\\": \\"\\",\\n            \\"Policies\\": [\\n              {\\n                \\"PeriodSeconds\\": 0,\\n                \\"Type\\": \\"\\",\\n                \\"Value\\": \\"\\"\\n              }\\n            ]\\n          }\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<AppScalingRules>\\n    <PageSize>10</PageSize>\\n    <CurrentPage>1</CurrentPage>\\n    <TotalSize>20</TotalSize>\\n    <Result>\\n        <ScaleRuleEnabled>true</ScaleRuleEnabled>\\n        <LastDisableTime>23212323123</LastDisableTime>\\n        <AppId>78194c76-3dca-418e-a263-cccd1ab4****</AppId>\\n        <MinReplicas>1</MinReplicas>\\n        <MaxReplicas>1</MaxReplicas>\\n        <CreateTime>23212323123</CreateTime>\\n        <UpdateTime>23212323123</UpdateTime>\\n        <ScaleRuleName>cpu-trigger</ScaleRuleName>\\n        <ScaleRuleType>trigger</ScaleRuleType>\\n        <Metric>\\n            <MinReplicas>1</MinReplicas>\\n            <MaxReplicas>1</MaxReplicas>\\n            <Metrics>\\n                <MetricType>asd</MetricType>\\n                <MetricTargetAverageUtilization>1</MetricTargetAverageUtilization>\\n            </Metrics>\\n        </Metric>\\n        <Trigger>\\n            <MinReplicas>1</MinReplicas>\\n            <MaxReplicas>122</MaxReplicas>\\n            <Triggers>\\n                <Type>cron</Type>\\n                <MetaData>{\\"dryRun\\":true}</MetaData>\\n                <Name>cron-trigger</Name>\\n            </Triggers>\\n        </Trigger>\\n    </Result>\\n</AppScalingRules>\\n<Message>success</Message>\\n<RequestId>a5281053-08e4-47a5-b2ab-5c0323de7b5a</RequestId>\\n<Code>200</Code>","errorExample":""}]',
      'title' => '获取应用弹性伸缩规则',
      'summary' => '调用DescribeApplicationScalingRules接口获取应用的弹性伸缩规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InsertSwimmingLaneGroup' => 
    array (
      'path' => '/pop/v5/trafficmgnt/swimming_lane_groups',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道组名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'EntryApp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '入口应用。格式为：EDAS:{应用ID}。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'EDAS:5cc89013-9232-4b36-b3eb-ff89b3d2****',
          ),
        ),
        2 => 
        array (
          'name' => 'AppIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道组涉及所有应用ID列表，多个应用之间使用半角逗号（,）分隔。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'bdb251cc-02a6-48dd-891b-2ab21b25****,ee33ed0c-fddc-47b5-9f63-e1ccc4be****',
          ),
        ),
        3 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义命名空间的RegionId。格式为：`物理Region:自定义命名空间标识符`，例如`cn-hangzhou:test`。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou:test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D5268CAC-D356-5C8D-BC7C-FBE0D13B****',
              ),
              'Data' => 
              array (
                'description' => '接口返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'NamespaceId' => 
                  array (
                    'description' => '命名空间ID。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou:test',
                  ),
                  'Name' => 
                  array (
                    'description' => '泳道组名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Id' => 
                  array (
                    'description' => '泳道组ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '64',
                  ),
                  'ApplicationList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Application' => 
                      array (
                        'description' => '泳道组所有设计应用列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '应用列表对象。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AppName' => 
                            array (
                              'description' => '应用名称。',
                              'type' => 'string',
                              'example' => 'test-app',
                            ),
                            'AppId' => 
                            array (
                              'description' => '应用ID。',
                              'type' => 'string',
                              'example' => 'bdb251cc-02a6-48dd-891b-2ab21b25****',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'EntryApplication' => 
                  array (
                    'description' => 'EDAS入口/网关信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AppName' => 
                      array (
                        'description' => '应用名称。',
                        'type' => 'string',
                        'example' => 'test-app',
                      ),
                      'AppId' => 
                      array (
                        'description' => '应用ID。',
                        'type' => 'string',
                        'example' => 'bdb251cc-02a6-48dd-891b-2ab21b25c****',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        605 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.ParameterInvalid.PointedParameter.message',
            'errorMessage' => 'The value of parameter {0} is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"D5268CAC-D356-5C8D-BC7C-FBE0D13B****\\",\\n  \\"Data\\": {\\n    \\"NamespaceId\\": \\"cn-hangzhou:test\\",\\n    \\"Name\\": \\"test\\",\\n    \\"Id\\": 64,\\n    \\"ApplicationList\\": {\\n      \\"Application\\": [\\n        {\\n          \\"AppName\\": \\"test-app\\",\\n          \\"AppId\\": \\"bdb251cc-02a6-48dd-891b-2ab21b25****\\"\\n        }\\n      ]\\n    },\\n    \\"EntryApplication\\": {\\n      \\"AppName\\": \\"test-app\\",\\n      \\"AppId\\": \\"bdb251cc-02a6-48dd-891b-2ab21b25c****\\"\\n    }\\n  }\\n}","type":"json"}]',
      'title' => '新建泳道组',
      'summary' => '新建泳道组。',
    ),
    'InsertSwimmingLane' => 
    array (
      'path' => '/pop/v5/trafficmgnt/swimming_lanes',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义命名空间的RegionId。
格式为：`物理Region:自定义命名空间标识符`，例如`cn-hangzhou:test`。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-beijing:test',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test1',
          ),
        ),
        2 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tag',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '95',
          ),
        ),
        4 => 
        array (
          'name' => 'EntryRules',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控条件。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[{"priority":1,"path":"/traffic","condition":"AND","restItems":[{"type":"header","name":"testheader","value":"testvalue","cond":"==","operator":"rawvalue"}]}]',
          ),
        ),
        5 => 
        array (
          'name' => 'EnableRules',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用流控规则。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'AppInfos',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道涉及应用信息。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"appId":"f72deaac-26ba-429a-948d-5fa47c4a****"},{"appId":"5049d2c8-f997-4fc9-92a2-153506a6****"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回对象。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '75972A87-5682-5277-ADA7-DA2A01BE****',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'NamespaceId' => 
                  array (
                    'description' => '命名空间ID。',
                    'type' => 'string',
                    'example' => 'cn-beijing:test',
                  ),
                  'GroupId' => 
                  array (
                    'description' => '泳道组ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '95',
                  ),
                  'EntryRule' => 
                  array (
                    'description' => '泳道流控规则。

priority：泳道规则优先级，取值范围：1～100。

path：泳道规则匹配的路径。

restItems：条件匹配规则列表。

condition：条件匹配类型。
 - AND：同时满足条件。
 - OR：满足任一条件。

restItems.type：规则类型。
可选值范围：
- header：按请求Header进行匹配。
- cookie：按请求cookie进行匹配。
- param：按请求参数进行匹配。

restItems.name：规则匹配的键。

restItems.value：规则匹配的值。

restItems.cond：规则匹配的条件。
可取值范围：
- "=="：等于。
- "!="：不等于。
- ">"：大于。
- "<"：小于。
- ">="：大于等于。
- "<="：小于等于。
- "in"：在可选值内。

restItems.operator：值的类型。
可取值范围：
- rawvalue：取原值。
- mod：取模。
- list：列表取值。',
                    'type' => 'string',
                    'example' => '[{\\"condition\\":\\"AND\\",\\"enable\\":false,\\"path\\":\\"/traffic\\",\\"priority\\":1,\\"restItems\\":[{\\"cond\\":\\"==\\",\\"datum\\":\\"testvalue\\",\\"name\\":\\"testheader\\",\\"operator\\":\\"rawvalue\\",\\"type\\":\\"header\\",\\"value\\":\\"testvalue\\"}]}]',
                  ),
                  'AppInfos' => 
                  array (
                    'description' => '泳道关联应用列表。',
                    'type' => 'string',
                    'example' => '[{"appId":"9dcba109-ee9f-4e67-8916-41
*******"}]',
                  ),
                  'Tag' => 
                  array (
                    'description' => '流控泳道标签。',
                    'type' => 'string',
                    'example' => '8202e09',
                  ),
                  'Name' => 
                  array (
                    'description' => '泳道名称。',
                    'type' => 'string',
                    'example' => 'test1',
                  ),
                  'Id' => 
                  array (
                    'description' => '泳道ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '88',
                  ),
                  'SwimmingLaneAppRelationShipList' => 
                  array (
                    'description' => '泳道涉及应用关联关系列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '泳道涉及应用关联关系。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AppName' => 
                        array (
                          'description' => '应用名称。',
                          'type' => 'string',
                          'example' => 'test-app',
                        ),
                        'Rules' => 
                        array (
                          'description' => '关联规则。',
                          'type' => 'string',
                          'example' => 'dubbo',
                        ),
                        'LaneId' => 
                        array (
                          'description' => '泳道ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '88',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => 'bd170895-096c-4944-9007-d4582c77****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        605 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.ParameterInvalid.PointedParameter.message',
            'errorMessage' => 'The value of parameter {0} is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"75972A87-5682-5277-ADA7-DA2A01BE****\\",\\n  \\"Data\\": {\\n    \\"NamespaceId\\": \\"cn-beijing:test\\",\\n    \\"GroupId\\": 95,\\n    \\"EntryRule\\": \\"[{\\\\\\\\\\\\\\"condition\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"AND\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"enable\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"/traffic\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"priority\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\"restItems\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"cond\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"==\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"datum\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"testvalue\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"testheader\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"operator\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"rawvalue\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"header\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"testvalue\\\\\\\\\\\\\\"}]}]\\",\\n    \\"AppInfos\\": \\"[{\\\\\\"appId\\\\\\":\\\\\\"9dcba109-ee9f-4e67-8916-41\\\\n*******\\\\\\"}]\\",\\n    \\"Tag\\": \\"8202e09\\",\\n    \\"Name\\": \\"test1\\",\\n    \\"Id\\": 88,\\n    \\"SwimmingLaneAppRelationShipList\\": [\\n      {\\n        \\"AppName\\": \\"test-app\\",\\n        \\"Rules\\": \\"dubbo\\",\\n        \\"LaneId\\": 88,\\n        \\"AppId\\": \\"bd170895-096c-4944-9007-d4582c77****\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '新建泳道',
      'summary' => '新建泳道。',
    ),
    'DeleteSwimmingLane' => 
    array (
      'path' => '/pop/v5/trafficmgnt/swimming_lanes',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LaneId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '241',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息 。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '是否成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4264F69C-686C-4107-B493-0599C8d1****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": 1,\\n  \\"RequestId\\": \\"4264F69C-686C-4107-B493-0599C8d1****\\"\\n}","type":"json"}]',
      'title' => '删除泳道',
      'summary' => '删除全链路流量控制流控泳道。',
    ),
    'UpdateSwimmingLaneGroup' => 
    array (
      'path' => '/pop/v5/trafficmgnt/swimming_lane_groups',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '98',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道组名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'test-swimlanegroup',
          ),
        ),
        2 => 
        array (
          'name' => 'EntryApp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '入口应用。格式为：EDAS:{应用ID}。',
            'type' => 'string',
            'required' => false,
            'example' => 'EDAS:dd2690a7-3fe4-4975-9a4c-5a60ffd6****',
          ),
        ),
        3 => 
        array (
          'name' => 'AppIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道组涉及应用ID列表。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '8e7689af-6ddd-4676-8ee6-5fbecdf2****,f72deaac-26ba-429a-948d-5fa47c4a****,5049d2c8-f997-4fc9-92a2-153506a6****,99a2d4b5-99a5-4e25-a964-1bd03a17****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '接口响应。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7580ED24-A2F0-5ECC-9F2B-B92E2509****',
              ),
              'Data' => 
              array (
                'description' => '响应数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'NamespaceId' => 
                  array (
                    'description' => '命名空间ID。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou:test',
                  ),
                  'Name' => 
                  array (
                    'description' => '泳道组名称。',
                    'type' => 'string',
                    'example' => 'name',
                  ),
                  'Id' => 
                  array (
                    'description' => '泳道组ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '98',
                  ),
                  'ApplicationList' => 
                  array (
                    'description' => '泳道组涉及应用列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '应用列表对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AppName' => 
                        array (
                          'description' => '应用名称。',
                          'type' => 'string',
                          'example' => 'test-app',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => '476d26d9-b54c-40b8-8af9-d898cdc2****',
                        ),
                      ),
                    ),
                  ),
                  'EntryApplication' => 
                  array (
                    'description' => 'EDAS入口/网关信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AppName' => 
                      array (
                        'description' => '应用名称。',
                        'type' => 'string',
                        'example' => 'test-gateway',
                      ),
                      'AppId' => 
                      array (
                        'description' => '应用ID。',
                        'type' => 'string',
                        'example' => 'd52c9de9-53d0-4191-aa72-88974a6f****',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.AuthExchange',
            'errorMessage' => 'Error transforming authentication data into whitelist rules.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"7580ED24-A2F0-5ECC-9F2B-B92E2509****\\",\\n  \\"Data\\": {\\n    \\"NamespaceId\\": \\"cn-hangzhou:test\\",\\n    \\"Name\\": \\"name\\",\\n    \\"Id\\": 98,\\n    \\"ApplicationList\\": [\\n      {\\n        \\"AppName\\": \\"test-app\\",\\n        \\"AppId\\": \\"476d26d9-b54c-40b8-8af9-d898cdc2****\\"\\n      }\\n    ],\\n    \\"EntryApplication\\": {\\n      \\"AppName\\": \\"test-gateway\\",\\n      \\"AppId\\": \\"d52c9de9-53d0-4191-aa72-88974a6f****\\"\\n    }\\n  }\\n}","type":"json"}]',
      'title' => '更新泳道组',
      'summary' => '更新泳道组。',
    ),
    'UpdateSwimmingLane' => 
    array (
      'path' => '/pop/v5/trafficmgnt/swimming_lanes',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LaneId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '224',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'test-swimlane',
          ),
        ),
        2 => 
        array (
          'name' => 'EnableRules',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控规则是否开启。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'AppInfos',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控泳道涉及应用列表。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"appId":"8e7689af-6ddd-4676-8ee6-5fbecdf2****"},{"appId":"f72deaac-26ba-429a-948d-5fa47c4a****"},{"appId":"99a2d4b5-99a5-4e25-a964-1bd03a17****"}]',
          ),
        ),
        4 => 
        array (
          'name' => 'EntryRules',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控规则配置。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"priority":1,"path":"/traffictest","condition":"AND","restItems":[{"type":"header","name":"testheader","value":"testheadervalue","cond":"==","operator":"rawvalue"}]}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回对象。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => ' 请求ID。',
                'type' => 'string',
                'example' => '6CB46AEA-309C-5041-9EC7-FCF4478F****',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'NamespaceId' => 
                  array (
                    'description' => '命名空间ID。',
                    'type' => 'string',
                    'example' => 'cn-beijing:qa',
                  ),
                  'GroupId' => 
                  array (
                    'description' => '泳道组ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '171',
                  ),
                  'EntryRule' => 
                  array (
                    'description' => '泳道规则。',
                    'type' => 'string',
                    'example' => '[{\\"condition\\":\\"AND\\",\\"enable\\":true,\\"path\\":\\"/traffictest\\",\\"priority\\":1,\\"restItems\\":[{\\"cond\\":\\"==\\",\\"datum\\":\\"testheadervalue\\",\\"name\\":\\"testheader\\",\\"operator\\":\\"rawvalue\\",\\"type\\":\\"header\\",\\"value\\":\\"testheadervalue\\"}]}]"',
                  ),
                  'Tag' => 
                  array (
                    'description' => '泳道标签。',
                    'type' => 'string',
                    'example' => '2cb6b8a',
                  ),
                  'Name' => 
                  array (
                    'description' => '泳道名称。',
                    'type' => 'string',
                    'example' => 'test-swimlane',
                  ),
                  'Id' => 
                  array (
                    'description' => '泳道ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '321',
                  ),
                  'SwimmingLaneAppRelationShipList' => 
                  array (
                    'description' => '流控泳道涉及应用关联关系列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '流控泳道涉及应用关联关系。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AppName' => 
                        array (
                          'description' => '应用名称。',
                          'type' => 'string',
                          'example' => 'test-app',
                        ),
                        'Rules' => 
                        array (
                          'description' => '关联规则。',
                          'type' => 'string',
                          'example' => 'dubbo',
                        ),
                        'LaneId' => 
                        array (
                          'description' => '泳道ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '321',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => '476d26d9-b54c-40b8-8af9-d898cdc2****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"6CB46AEA-309C-5041-9EC7-FCF4478F****\\",\\n  \\"Data\\": {\\n    \\"NamespaceId\\": \\"cn-beijing:qa\\",\\n    \\"GroupId\\": 171,\\n    \\"EntryRule\\": \\"[{\\\\\\\\\\\\\\"condition\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"AND\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"enable\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"/traffictest\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"priority\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\"restItems\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"cond\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"==\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"datum\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"testheadervalue\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"testheader\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"operator\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"rawvalue\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"header\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"testheadervalue\\\\\\\\\\\\\\"}]}]\\\\\\"\\",\\n    \\"Tag\\": \\"2cb6b8a\\",\\n    \\"Name\\": \\"test-swimlane\\",\\n    \\"Id\\": 321,\\n    \\"SwimmingLaneAppRelationShipList\\": [\\n      {\\n        \\"AppName\\": \\"test-app\\",\\n        \\"Rules\\": \\"dubbo\\",\\n        \\"LaneId\\": 321,\\n        \\"AppId\\": \\"476d26d9-b54c-40b8-8af9-d898cdc2****\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '更新泳道',
    ),
    'ListSwimmingLaneGroup' => 
    array (
      'path' => '/pop/v5/trafficmgnt/swimming_lane_groups',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogicalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。

自定义命名空间ID格式为：`地域ID:命名空间标示符`，例如：`cn-beijing:test`。                                 
默认命名空间ID格式为：地域ID，例如：cn-beijing。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shenzhen:publish',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回对象。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BF238E37-671A-5045-B49A-0B29C166****',
              ),
              'Data' => 
              array (
                'description' => '泳道组列表数据。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'NamespaceId' => 
                    array (
                      'description' => '微服务空间ID。',
                      'type' => 'string',
                      'example' => 'cn-shanghai:daily',
                    ),
                    'Name' => 
                    array (
                      'description' => '泳道组名称。',
                      'type' => 'string',
                      'example' => 'name',
                    ),
                    'Id' => 
                    array (
                      'description' => '泳道组ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '257',
                    ),
                    'ApplicationList' => 
                    array (
                      'description' => '泳道组涉及应用列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'AppName' => 
                          array (
                            'description' => '应用名称。',
                            'type' => 'string',
                            'example' => 'java-app',
                          ),
                          'AppId' => 
                          array (
                            'description' => '应用ID。',
                            'type' => 'string',
                            'example' => '406073bf-afc2-4142-b3d7-629a0308****',
                          ),
                        ),
                      ),
                    ),
                    'EntryApplication' => 
                    array (
                      'description' => 'EDAS入口/网关信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AppName' => 
                        array (
                          'description' => '应用名称。',
                          'type' => 'string',
                          'example' => 'java-app',
                        ),
                        'Source' => 
                        array (
                          'description' => '数据来源，需配置为EDAS。',
                          'type' => 'string',
                          'example' => 'EDAS',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => '406073bf-afc2-4142-b3d7-629a0308****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        601 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.ParameterInvalid.PointedParameter.message',
            'errorMessage' => 'The value of parameter {0} is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"BF238E37-671A-5045-B49A-0B29C166****\\",\\n  \\"Data\\": [\\n    {\\n      \\"NamespaceId\\": \\"cn-shanghai:daily\\",\\n      \\"Name\\": \\"name\\",\\n      \\"Id\\": 257,\\n      \\"ApplicationList\\": [\\n        {\\n          \\"AppName\\": \\"java-app\\",\\n          \\"AppId\\": \\"406073bf-afc2-4142-b3d7-629a0308****\\"\\n        }\\n      ],\\n      \\"EntryApplication\\": {\\n        \\"AppName\\": \\"java-app\\",\\n        \\"Source\\": \\"EDAS\\",\\n        \\"AppId\\": \\"406073bf-afc2-4142-b3d7-629a0308****\\"\\n      }\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取泳道组列表',
      'summary' => '获取泳道组列表。',
    ),
    'ListSwimmingLane' => 
    array (
      'path' => '/pop/v5/trafficmgnt/swimming_lanes',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '79',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回对象。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '附加信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C2CDBBF9-9C9A-5AA1-9F39-094ADEB3****',
              ),
              'Data' => 
              array (
                'description' => '响应数据。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'NamespaceId' => 
                    array (
                      'description' => '微服务空间。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou:pre2',
                    ),
                    'GroupId' => 
                    array (
                      'description' => '泳道组ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '156',
                    ),
                    'ScenarioSign' => 
                    array (
                      'description' => '预期标签。',
                      'type' => 'string',
                      'example' => 'd0ad1052',
                    ),
                    'EntryRule' => 
                    array (
                      'description' => '条件列表。',
                      'type' => 'string',
                      'example' => '[{\\"condition\\":\\"AND\\",\\"enable\\":true,\\"path\\":\\"/\\",\\"priority\\":1,\\"restItems\\":[{\\"cond\\":\\"==\\",\\"datum\\":\\"value\\",\\"name\\":\\"tags\\",\\"operator\\":\\"rawvalue\\",\\"type\\":\\"header\\",\\"value\\":\\"value\\"}]}]',
                    ),
                    'Tag' => 
                    array (
                      'description' => '标签。',
                      'type' => 'string',
                      'example' => '2cb6b8a',
                    ),
                    'EnableRules' => 
                    array (
                      'description' => '流控规则是否开启。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'Name' => 
                    array (
                      'description' => '泳道名称。',
                      'type' => 'string',
                      'example' => 'name',
                    ),
                    'Id' => 
                    array (
                      'description' => '流控泳道ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '348',
                    ),
                    'SwimmingLaneAppRelationShipList' => 
                    array (
                      'description' => '流控泳道涉及应用列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'AppName' => 
                          array (
                            'description' => '应用名称。',
                            'type' => 'string',
                            'example' => 'prod-app-58846',
                          ),
                          'Rules' => 
                          array (
                            'description' => '关联规则。',
                            'type' => 'string',
                            'example' => '""',
                          ),
                          'LaneId' => 
                          array (
                            'description' => '泳道ID。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '348',
                          ),
                          'AppId' => 
                          array (
                            'description' => '应用ID。',
                            'type' => 'string',
                            'example' => '3b615783-01f1-4569-baa3-cb71bdb6****',
                          ),
                          'Extra' => 
                          array (
                            'description' => '补充信息。',
                            'type' => 'string',
                            'example' => 'edas-canary',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        601 => 
        array (
          0 => 
          array (
            'errorCode' => 'Edas.errorcode.ParameterInvalid.PointedParameter.message',
            'errorMessage' => 'The value of parameter {0} is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"C2CDBBF9-9C9A-5AA1-9F39-094ADEB3****\\",\\n  \\"Data\\": [\\n    {\\n      \\"NamespaceId\\": \\"cn-hangzhou:pre2\\",\\n      \\"GroupId\\": 156,\\n      \\"ScenarioSign\\": \\"d0ad1052\\",\\n      \\"EntryRule\\": \\"[{\\\\\\\\\\\\\\"condition\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"AND\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"enable\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"priority\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\"restItems\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"cond\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"==\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"datum\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"tags\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"operator\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"rawvalue\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"header\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\"}]}]\\",\\n      \\"Tag\\": \\"2cb6b8a\\",\\n      \\"EnableRules\\": true,\\n      \\"Name\\": \\"name\\",\\n      \\"Id\\": 348,\\n      \\"SwimmingLaneAppRelationShipList\\": [\\n        {\\n          \\"AppName\\": \\"prod-app-58846\\",\\n          \\"Rules\\": \\"\\\\\\"\\\\\\"\\",\\n          \\"LaneId\\": 348,\\n          \\"AppId\\": \\"3b615783-01f1-4569-baa3-cb71bdb6****\\",\\n          \\"Extra\\": \\"edas-canary\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取泳道列表',
      'summary' => '获取泳道组下的泳道列表。',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'ap-northeast-2-pop',
      'endpoint' => 'edas.ap-northeast-1.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'ap-south-1',
      'endpoint' => 'edas.ap-northeast-1.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'ap-southeast-3',
      'endpoint' => 'edas.ap-northeast-1.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'ap-southeast-5',
      'endpoint' => 'edas.ap-northeast-1.aliyuncs.com',
    ),
    4 => 
    array (
      'regionId' => 'cn-beijing-finance-1',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    5 => 
    array (
      'regionId' => 'cn-beijing-finance-pop',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    6 => 
    array (
      'regionId' => 'cn-beijing-gov-1',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    7 => 
    array (
      'regionId' => 'cn-beijing-nu16-b01',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    8 => 
    array (
      'regionId' => 'cn-chengdu',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    9 => 
    array (
      'regionId' => 'cn-edge-1',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    10 => 
    array (
      'regionId' => 'cn-fujian',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    11 => 
    array (
      'regionId' => 'cn-haidian-cm12-c01',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    12 => 
    array (
      'regionId' => 'cn-hangzhou-bj-b01',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    13 => 
    array (
      'regionId' => 'cn-hangzhou-finance',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    14 => 
    array (
      'regionId' => 'cn-hangzhou-internal-prod-1',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    15 => 
    array (
      'regionId' => 'cn-hangzhou-internal-test-1',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    16 => 
    array (
      'regionId' => 'cn-hangzhou-internal-test-2',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    17 => 
    array (
      'regionId' => 'cn-hangzhou-internal-test-3',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    18 => 
    array (
      'regionId' => 'cn-hangzhou-test-306',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    19 => 
    array (
      'regionId' => 'cn-hongkong-finance-pop',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    20 => 
    array (
      'regionId' => 'cn-huhehaote',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    21 => 
    array (
      'regionId' => 'cn-qingdao-nebula',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    22 => 
    array (
      'regionId' => 'cn-shanghai-et15-b01',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    23 => 
    array (
      'regionId' => 'cn-shanghai-et2-b01',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    24 => 
    array (
      'regionId' => 'cn-shanghai-finance-1',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    25 => 
    array (
      'regionId' => 'cn-shanghai-inner',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    26 => 
    array (
      'regionId' => 'cn-shanghai-internal-test-1',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    27 => 
    array (
      'regionId' => 'cn-shenzhen-finance-1',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    28 => 
    array (
      'regionId' => 'cn-shenzhen-inner',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    29 => 
    array (
      'regionId' => 'cn-shenzhen-st4-d01',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    30 => 
    array (
      'regionId' => 'cn-shenzhen-su18-b01',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    31 => 
    array (
      'regionId' => 'cn-wuhan',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    32 => 
    array (
      'regionId' => 'cn-yushanfang',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    33 => 
    array (
      'regionId' => 'cn-zhangbei-na61-b01',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    34 => 
    array (
      'regionId' => 'cn-zhangjiakou-na62-a01',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    35 => 
    array (
      'regionId' => 'cn-zhengzhou-nebula-1',
      'endpoint' => 'edas.aliyuncs.com',
    ),
    36 => 
    array (
      'regionId' => 'eu-west-1',
      'endpoint' => 'edas.ap-northeast-1.aliyuncs.com',
    ),
    37 => 
    array (
      'regionId' => 'eu-west-1-oxs',
      'endpoint' => 'edas.ap-northeast-1.aliyuncs.com',
    ),
    38 => 
    array (
      'regionId' => 'me-east-1',
      'endpoint' => 'edas.ap-northeast-1.aliyuncs.com',
    ),
    39 => 
    array (
      'regionId' => 'rus-west-1-pop',
      'endpoint' => 'edas.ap-northeast-1.aliyuncs.com',
    ),
    40 => 
    array (
      'regionId' => 'us-west-1',
      'endpoint' => 'edas.ap-northeast-1.aliyuncs.com',
    ),
    41 => 
    array (
      'regionId' => 'ap-northeast-1',
      'endpoint' => 'edas.ap-northeast-1.aliyuncs.com',
    ),
    42 => 
    array (
      'regionId' => 'ap-southeast-1',
      'endpoint' => 'edas.ap-southeast-1.aliyuncs.com',
    ),
    43 => 
    array (
      'regionId' => 'ap-southeast-2',
      'endpoint' => 'edas.ap-southeast-2.aliyuncs.com',
    ),
    44 => 
    array (
      'regionId' => 'cn-beijing',
      'endpoint' => 'edas.cn-beijing.aliyuncs.com',
    ),
    45 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'edas.cn-hangzhou.aliyuncs.com',
    ),
    46 => 
    array (
      'regionId' => 'cn-hongkong',
      'endpoint' => 'edas.cn-hongkong.aliyuncs.com',
    ),
    47 => 
    array (
      'regionId' => 'cn-north-2-gov-1',
      'endpoint' => 'edas.cn-north-2-gov-1.aliyuncs.com',
    ),
    48 => 
    array (
      'regionId' => 'cn-qingdao',
      'endpoint' => 'edas.cn-qingdao.aliyuncs.com',
    ),
    49 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'edas.cn-shanghai.aliyuncs.com',
    ),
    50 => 
    array (
      'regionId' => 'cn-shenzhen',
      'endpoint' => 'edas.cn-shenzhen.aliyuncs.com',
    ),
    51 => 
    array (
      'regionId' => 'cn-zhangjiakou',
      'endpoint' => 'edas.cn-zhangjiakou.aliyuncs.com',
    ),
    52 => 
    array (
      'regionId' => 'eu-central-1',
      'endpoint' => 'edas.eu-central-1.aliyuncs.com',
    ),
    53 => 
    array (
      'regionId' => 'us-east-1',
      'endpoint' => 'edas.us-east-1.aliyuncs.com',
    ),
  ),
);