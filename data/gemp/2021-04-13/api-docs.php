<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'ROA',
    'product' => 'GEMP',
    'version' => '2021-04-13',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 177155,
      'title' => '业务监控',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'PushMonitor',
      ),
    ),
    1 => 
    array (
      'id' => 167181,
      'title' => '升级计划',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateEscalationPlan',
        1 => 'DeleteEscalationPlan',
        2 => 'DisableEscalationPlan',
        3 => 'EnableEscalationPlan',
        4 => 'GetEscalationPlan',
        5 => 'ListEscalationPlans',
        6 => 'UpdateEscalationPlan',
      ),
    ),
    2 => 
    array (
      'id' => 167189,
      'title' => '事件',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'GetIncidentListByIdList',
        1 => 'DeleteIncident',
        2 => 'CreateIncident',
        3 => 'DeliverIncident',
        4 => 'GetIncident',
        5 => 'GetIncidentStatistics',
        6 => 'FinishIncident',
        7 => 'UpdateIncident',
        8 => 'RespondIncident',
        9 => 'ListIncidents',
        10 => 'ListIncidentDetailTimelines',
        11 => 'ListIncidentTimelines',
      ),
    ),
    3 => 
    array (
      'id' => 167201,
      'title' => '用户',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateUser',
        1 => 'DeleteUser',
        2 => 'GetUser',
        3 => 'ListUsers',
        4 => 'UpdateUser',
      ),
    ),
    4 => 
    array (
      'id' => 167129,
      'title' => '服务',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateService',
        1 => 'DeleteService',
        2 => 'GetService',
        3 => 'ListServices',
        4 => 'UpdateService',
      ),
    ),
    5 => 
    array (
      'id' => 167134,
      'title' => '服务组',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateServiceGroup',
        1 => 'CreateServiceGroupScheduling',
        2 => 'DeleteServiceGroup',
        3 => 'DeleteServiceGroupUser',
        4 => 'GetServiceGroup',
        5 => 'GetServiceGroupPersonScheduling',
        6 => 'GetServiceGroupScheduling',
        7 => 'GetServiceGroupSchedulingPreview',
        8 => 'GetServiceGroupSpecialPersonScheduling',
        9 => 'ListServiceGroups',
        10 => 'UpdateServiceGroup',
      ),
    ),
    6 => 
    array (
      'id' => 167145,
      'title' => '流转规则',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateRouteRule',
        1 => 'DeleteRouteRule',
        2 => 'DisableRouteRule',
        3 => 'EnableRouteRule',
        4 => 'GetRouteRule',
        5 => 'ListRouteRules',
        6 => 'UpdateRouteRule',
        7 => 'VerifyRouteRule',
      ),
    ),
    7 => 
    array (
      'id' => 167147,
      'title' => '富文本',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateRichText',
        1 => 'GetRichText',
        2 => 'UpdateRichText',
      ),
    ),
    8 => 
    array (
      'id' => 167149,
      'title' => '通知订阅',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateSubscription',
        1 => 'DeleteSubscription',
        2 => 'EnableSubscription',
        3 => 'UpdateSubscription',
        4 => 'GetSubscription',
        5 => 'DisableSubscription',
        6 => 'ListSubscriptions',
      ),
    ),
    9 => 
    array (
      'id' => 167154,
      'title' => '集成配置',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateIntegrationConfig',
        1 => 'DisableIntegrationConfig',
        2 => 'EnableIntegrationConfig',
        3 => 'GetIntegrationConfig',
        4 => 'ListIntegrationConfigs',
        5 => 'ListIntegrationConfigTimelines',
        6 => 'ConfirmIntegrationConfig',
        7 => 'DeleteIntegrationConfig',
        8 => 'UpdateIntegrationConfig',
        9 => 'RefreshIntegrationConfigKey',
      ),
    ),
    10 => 
    array (
      'id' => 167162,
      'title' => '故障',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateProblem',
        1 => 'CreateProblemMeasure',
        2 => 'CreateProblemSubtotal',
        3 => 'CreateProblemTimeline',
        4 => 'CreateProblemTimelines',
        5 => 'AddProblemServiceGroup',
        6 => 'UpdateProblem',
        7 => 'UpdateProblemNotice',
        8 => 'UpdateProblemTimeline',
        9 => 'ListProblemDetailOperations',
        10 => 'ListProblemOperations',
        11 => 'ListProblems',
        12 => 'ListProblemSubtotals',
        13 => 'CancelProblem',
        14 => 'FinishProblem',
        15 => 'RecoverProblem',
        16 => 'ReplayProblem',
        17 => 'RevokeProblemRecovery',
        18 => 'DeleteProblem',
        19 => 'GetProblem',
        20 => 'GetProblemImprovement',
        21 => 'DeleteProblemMeasure',
        22 => 'DeleteProblemTimeline',
        23 => 'ListProblemTimeLines',
        24 => 'GetProblemEffectionService',
        25 => 'GetProblemPreview',
      ),
    ),
    11 => 
    array (
      'id' => 177100,
      'title' => '其他',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'GenerateProblemPictureUploadSign',
        1 => 'UpdateProblemMeasure',
        2 => 'UpdateProblemEffectionService',
        3 => 'GenerateProblemPictureLink',
        4 => 'DeleteProblemEffectionService',
        5 => 'DisableServiceGroupWebhook',
        6 => 'RemoveProblemServiceGroup',
        7 => 'CreateProblemEffectionService',
        8 => 'ListMonitorSources',
        9 => 'ListIncidentSubtotals',
        10 => 'EnableServiceGroupWebhook',
        11 => 'ListAlerts',
        12 => 'ListSubscriptionServiceGroups',
        13 => 'UpdateProblemImprovement',
        14 => 'ListDictionaries',
        15 => 'ListSourceEvents',
        16 => 'ListUserSerivceGroups',
        17 => 'CreateIncidentSubtotal',
        18 => 'ListConfigs',
        19 => 'GetEvent',
        20 => 'UpdateUserGuideStatus',
        21 => 'ListEscalationPlanServices',
        22 => 'CheckWebhook',
        23 => 'GetUserGuideStatus',
        24 => 'GetResourceStatistics',
        25 => 'ListIncidentDetailEscalationPlans',
        26 => 'UpdateServiceGroupScheduling',
        27 => 'UpdateServiceGroupSpecialDayScheduling',
        28 => 'GetTenantApplication',
        29 => 'GetSimilarIncidentStatistics',
        30 => 'GetIncidentSubtotalCount',
        31 => 'CreateTenantApplication',
        32 => 'GetHomePageGuidance',
        33 => 'ListDataReportForServiceGroup',
        34 => 'ListChartDataForServiceGroup',
        35 => 'ListSourceEventsForMonitorSource',
        36 => 'ListDataReportForUser',
        37 => 'ListChartDataForUser',
        38 => 'ListTrendForSourceEvent',
        39 => 'GeneratePictureLink',
        40 => 'GeneratePictureUploadSign',
        41 => 'ListServiceGroupMonitorSourceTemplates',
        42 => 'RemoveIntegrationConfig',
        43 => 'ListByMonitorSourceId',
        44 => 'ListRouteRulesByService',
        45 => 'GetTenantStatus',
        46 => 'BillingStatistics',
        47 => 'DeleteServiceGroupScheduling',
        48 => 'ListEscalationPlansByNoticeObject',
        49 => 'UnbindUser',
        50 => 'ListRouteRulesByAssignWhoId',
        51 => 'ListServiceGroupsByUserId',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
    ),
  ),
  'apis' => 
  array (
    'PushMonitor' => 
    array (
      'summary' => '业务监控数据推送,业务监控数据保存。',
      'path' => '/api/monitor/push/{apiKey}',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'Anonymous' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'apiKey',
          'in' => 'path',
          'schema' => 
          array (
            'title' => '集成接入的apiKey',
            'description' => '集成接入的apiKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'dfb2e51a58e64152a0eef7a232308006',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'title' => '推送的数据内容',
            'description' => '推送的数据内容。',
            'type' => 'string',
            'required' => false,
            'example' => '2020-03-15 21:46:34.164 ConsumeMessageThread_13 INFO  LOGGER_SPM 订单创建|Y|10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '{@link Result}',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'data' => 
              array (
                'description' => '返回结果 正常返回null。',
                'type' => 'any',
                'example' => 'null',
              ),
              'requestId' => 
              array (
                'description' => '每个请求的唯一id。',
                'type' => 'string',
                'example' => '5A30D240-1821-0246-B580-AB1468657AD2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTag.Mismatch',
            'errorMessage' => 'The specified Tag.n.Key and Tag.n.Value are not match.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagCount',
            'errorMessage' => 'The specified tags are beyond the permitted range.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceChargeType.NotFound',
            'errorMessage' => 'The InstanceChargeType does not exist in our records',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidInternetChargeType.ValueNotSupported',
            'errorMessage' => 'The specified InternetChargeType is not valid',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"data\\": \\"null\\",\\n  \\"requestId\\": \\"5A30D240-1821-0246-B580-AB1468657AD2\\"\\n}","errorExample":""},{"type":"xml","example":"<PushMonitorResponse>\\n    <data>null</data>\\n    <requestId>5A30D240-1821-0246-B580-AB1468657AD2</requestId>\\n</PushMonitorResponse>","errorExample":""}]',
      'title' => 'API集成',
      'requestParamsDescription' => 'body参数支持接收普通文本和JSON两种格式
文本：
```
2020-03-15 21:46:34.164 ConsumeMessageThread_13 INFO  LOGGER_SPM 订单创建|Y|10
```
JSON: 
```
{
    "message": "FAILURE for production/HTTP on machine 192.168.0.253",
    "entityName": "host-192.168.0.253",
    "entityId": "host-192.168.0.253",
    "priority": 1,
    "alarmContent": {
        "ping time": "2500ms",
        "load avg": 0.75
    },
    "details": {
        "details": "haha"
    },
    "contexts": [
        {
            "type": "link",
            "text": "generatorURL",
            "href": "http://www.baidu.com"
        },
        {
            "type": "link",
            "href": "http://www.sina.com",
            "text": "CPU Alerting"
        },
        {
            "type": "image",
            "src": "http://www.baidu.com/a.png"
        }
    ]
}
```',
    ),
    'CreateEscalationPlan' => 
    array (
      'summary' => '创建升级计划。',
      'path' => '/escalationPlan/create',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'escalationPlanName' => 
              array (
                'title' => '升级计划名称',
                'description' => '升级计划名称',
                'type' => 'string',
                'required' => true,
                'example' => 'name123',
              ),
              'escalationPlanDescription' => 
              array (
                'title' => '升级计划描述',
                'description' => '升级计划描述',
                'type' => 'string',
                'required' => true,
                'example' => 'desc2322424',
              ),
              'escalationPlanScopeObjects' => 
              array (
                'title' => '升级计划范围对象列表',
                'description' => '升级计划范围对象列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'scopeObjectId' => 
                    array (
                      'title' => '范围对象id',
                      'description' => '范围对象id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '23433',
                    ),
                    'scope' => 
                    array (
                      'title' => '范围对象类型',
                      'description' => '范围对象类型',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'SERVICE',
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
              ),
              'escalationPlanRules' => 
              array (
                'title' => '升级计划规则列表',
                'description' => '升级计划规则列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'escalationPlanConditions' => 
                    array (
                      'title' => '升级条件',
                      'description' => '升级条件',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'object',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'level' => 
                          array (
                            'title' => '事件等级',
                            'description' => '事件等级',
                            'type' => 'string',
                            'required' => true,
                            'example' => 'P1',
                          ),
                          'effection' => 
                          array (
                            'title' => '影响等级',
                            'description' => '影响等级',
                            'type' => 'string',
                            'required' => true,
                            'example' => 'LOW',
                          ),
                        ),
                        'required' => true,
                      ),
                      'required' => true,
                    ),
                    'escalationPlanStrategies' => 
                    array (
                      'title' => '升级策略',
                      'description' => '升级策略',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'object',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'noticeTime' => 
                          array (
                            'title' => '通知时间',
                            'description' => '通知时间',
                            'type' => 'string',
                            'required' => true,
                            'example' => '40',
                          ),
                          'noticeObjects' => 
                          array (
                            'title' => '升级通知对象id列表',
                            'description' => '升级通知对象id列表',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '通知对象',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => '23',
                            ),
                            'required' => true,
                          ),
                          'noticeChannels' => 
                          array (
                            'title' => '升级通知策略',
                            'description' => '升级通知策略',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '通知渠道列表',
                              'type' => 'string',
                              'required' => true,
                              'example' => '["SMS","PHONE"]',
                            ),
                            'required' => true,
                          ),
                          'enableWebhook' => 
                          array (
                            'title' => '是否支持群通知',
                            'description' => '是否webhook',
                            'type' => 'boolean',
                            'required' => true,
                            'example' => 'true',
                          ),
                          'serviceGroupIds' => 
                          array (
                            'title' => '服务组id',
                            'description' => '服务组id',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '服务组id',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => '434',
                            ),
                            'required' => false,
                          ),
                          'escalationPlanType' => 
                          array (
                            'title' => '升级类型',
                            'type' => 'string',
                            'required' => false,
                          ),
                          'noticeRoleList' => 
                          array (
                            'title' => '通知角色列表',
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                            ),
                            'required' => false,
                          ),
                        ),
                        'required' => true,
                      ),
                      'required' => true,
                    ),
                    'escalationPlanType' => 
                    array (
                      'title' => '升级类型（废弃）',
                      'description' => '升级类型',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'UN_FINISH',
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => 'clientToken',
                'type' => 'string',
                'required' => false,
                'example' => '6b404f14-77d1-4b53-a1a1-30a58bREQUEST',
              ),
              'isGlobal' => 
              array (
                'title' => '是否是全局策略',
                'type' => 'boolean',
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC21925D',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'escalationPlanId' => 
                  array (
                    'title' => '升级计划id',
                    'description' => '升级计划id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '234532',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'EscalationPlanRuleNull',
            'errorMessage' => 'Escalation plan rule can not be null.',
          ),
          1 => 
          array (
            'errorCode' => 'EscalationPlanServiceNull',
            'errorMessage' => 'Escalation plan service can not be nulll',
          ),
          2 => 
          array (
            'errorCode' => 'EscalationPlanAlreadyExisted',
            'errorMessage' => 'The escalation plan already exists.',
          ),
          3 => 
          array (
            'errorCode' => 'EscalationPlanServiceAleardyRelated',
            'errorMessage' => 'The specified service is already related.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"A5A1FEAE-9C47-011C-9C73-A376BC21925D\\",\\n  \\"data\\": {\\n    \\"escalationPlanId\\": 234532\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateEscalationPlanResponse>\\n    <requestId>A5A1FEAE-9C47-011C-9C73-A376BC21925D</requestId>\\n    <data>\\n        <escalationPlanId>234532</escalationPlanId>\\n    </data>\\n</CreateEscalationPlanResponse>","errorExample":""}]',
      'title' => '创建升级计划',
    ),
    'DeleteEscalationPlan' => 
    array (
      'summary' => '删除升级计划。',
      'path' => '/escalationPlan/delete',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'escalationPlanId' => 
              array (
                'title' => '升级计划ID',
                'description' => '升级计划ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '234534',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC21925D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'EscalationPlanNotExists',
            'errorMessage' => 'The specified escalation plan does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"A5A1FEAE-9C47-011C-9C73-A376BC21925D\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteEscalationPlanResponse>\\n    <requestId>A5A1FEAE-9C47-011C-9C73-A376BC21925D</requestId>\\n</DeleteEscalationPlanResponse>","errorExample":""}]',
      'title' => '删除升级计划',
    ),
    'DisableEscalationPlan' => 
    array (
      'summary' => '禁用升级计划。',
      'path' => '/escalationPlan/disable',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'escalationPlanId' => 
              array (
                'title' => '升级计划ID',
                'description' => '升级计划ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '234534',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC21925D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'EscalationPlanAlreadyDisable',
            'errorMessage' => 'The escalation plan is already disabled.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'EscalationPlanNotExists',
            'errorMessage' => 'The specified escalation plan does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"A5A1FEAE-9C47-011C-9C73-A376BC21925D\\"\\n}","errorExample":""},{"type":"xml","example":"<DisableEscalationPlanResponse>\\n    <requestId>A5A1FEAE-9C47-011C-9C73-A376BC21925D</requestId>\\n</DisableEscalationPlanResponse>","errorExample":""}]',
      'title' => '禁用升级计划',
    ),
    'EnableEscalationPlan' => 
    array (
      'summary' => '启用升级计划。',
      'path' => '/escalationPlan/enable',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'escalationPlanId' => 
              array (
                'title' => '升级计划ID',
                'description' => '升级计划ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '234534',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC21925D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'EscalationPlanAlreadyEnable',
            'errorMessage' => 'The escalation plan is already enabled.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'EscalationPlanNotExists',
            'errorMessage' => 'The specified escalation plan does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"A5A1FEAE-9C47-011C-9C73-A376BC21925D\\"\\n}","errorExample":""},{"type":"xml","example":"<EnableEscalationPlanResponse>\\n    <requestId>A5A1FEAE-9C47-011C-9C73-A376BC21925D</requestId>\\n</EnableEscalationPlanResponse>","errorExample":""}]',
      'title' => '启用升级计划',
    ),
    'GetEscalationPlan' => 
    array (
      'summary' => '获取指定动态码表的详细信息。',
      'path' => '/escalationPlan/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'escalationPlanId' => 
              array (
                'title' => '升级计划id',
                'description' => '升级计划id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '345',
              ),
              'clientToken' => 
              array (
                'title' => '幂等标识',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'escalationPlanId' => 
                  array (
                    'title' => '升级计划id',
                    'description' => '升级计划id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2345',
                  ),
                  'escalationPlanName' => 
                  array (
                    'title' => '升级计划名称',
                    'description' => '升级计划名称',
                    'type' => 'string',
                    'example' => '升级计划234',
                  ),
                  'escalationPlanDescription' => 
                  array (
                    'title' => '升级计划描述',
                    'description' => '升级计划描述',
                    'type' => 'string',
                    'example' => '描述1234',
                  ),
                  'escalationPlanScopeObjects' => 
                  array (
                    'title' => '升级计划范围对象列表',
                    'description' => '升级计划范围对象列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'scopeObjectId' => 
                        array (
                          'title' => '范围对象id',
                          'description' => '范围对象id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '234',
                        ),
                        'scope' => 
                        array (
                          'title' => '范围对象类型',
                          'description' => '范围对象类型',
                          'type' => 'string',
                          'example' => 'SERVICE',
                        ),
                        'scopeObjectName' => 
                        array (
                          'title' => '范围对象名称',
                          'description' => '范围对象名称',
                          'type' => 'string',
                          'example' => 'xx服务',
                        ),
                        'escalationPlanScopeObjects' => 
                        array (
                          'title' => '服务删除字段 1正常 0删除',
                          'description' => '服务删除字段 1正常 0删除',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'scopeObjectDeletedType' => 
                        array (
                          'title' => '服务删除字段 1正常 0删除',
                          'description' => '服务删除字段 1正常 0删除',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                  'escalationPlanRules' => 
                  array (
                    'title' => '升级计划规则列表',
                    'description' => '升级计划规则列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'escalationPlanRuleId' => 
                        array (
                          'title' => '升级计划id',
                          'description' => '升级计划id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '345',
                        ),
                        'escalationPlanConditions' => 
                        array (
                          'title' => '升级计划条件',
                          'description' => '升级计划条件',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'object',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'level' => 
                              array (
                                'title' => '事件等级',
                                'description' => '事件等级',
                                'type' => 'string',
                                'example' => 'P1',
                              ),
                              'effection' => 
                              array (
                                'title' => '影响等级',
                                'description' => '影响等级',
                                'type' => 'string',
                                'example' => 'LOW',
                              ),
                            ),
                          ),
                        ),
                        'escalationPlanStrategies' => 
                        array (
                          'title' => '升级计划策略',
                          'description' => '升级计划策略',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'object',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'noticeTime' => 
                              array (
                                'title' => '通知时间',
                                'description' => '通知时间',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '40',
                              ),
                              'escalationPlanType' => 
                              array (
                                'title' => '升级计划类型',
                                'description' => '升级计划类型',
                                'type' => 'string',
                                'example' => 'UN_ACKNOWLEDGE',
                              ),
                              'noticeObjectList' => 
                              array (
                                'title' => '通知对象列表',
                                'description' => '通知对象列表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => 'object',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'noticeObjectId' => 
                                    array (
                                      'title' => '通知对象id',
                                      'description' => '通知对象id',
                                      'type' => 'integer',
                                      'format' => 'int64',
                                      'example' => '234',
                                    ),
                                    'noticeObjectName' => 
                                    array (
                                      'title' => '通知对象名称',
                                      'description' => '通知对象名称',
                                      'type' => 'string',
                                      'example' => '张老三',
                                    ),
                                  ),
                                ),
                              ),
                              'noticeChannels' => 
                              array (
                                'title' => '通知对象渠道',
                                'description' => '通知对象渠道',
                                'type' => 'string',
                                'example' => 'SMS',
                              ),
                              'enableWebhook' => 
                              array (
                                'title' => '是否支持群通知',
                                'description' => '是否支持群通知',
                                'type' => 'boolean',
                                'example' => 'true',
                              ),
                              'serviceGroups' => 
                              array (
                                'title' => '服务组列表',
                                'description' => '服务组列表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '服务组内容',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'id' => 
                                    array (
                                      'title' => '服务组id',
                                      'description' => '服务组id',
                                      'type' => 'integer',
                                      'format' => 'int64',
                                      'example' => '343',
                                    ),
                                    'serviceGroupName' => 
                                    array (
                                      'title' => '服务组名称',
                                      'description' => '服务组名称',
                                      'type' => 'string',
                                      'example' => 'VCD是',
                                    ),
                                  ),
                                ),
                              ),
                              'noticeObjects' => 
                              array (
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int64',
                                ),
                              ),
                              'noticeRoleList' => 
                              array (
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int64',
                                ),
                              ),
                              'noticeRoleObjectList' => 
                              array (
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'id' => 
                                    array (
                                      'type' => 'integer',
                                      'format' => 'int64',
                                    ),
                                    'name' => 
                                    array (
                                      'type' => 'string',
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'createTime' => 
                  array (
                    'title' => '创建时间',
                    'description' => '创建时间',
                    'type' => 'string',
                    'example' => '2021-09-09 09:09:09',
                  ),
                  'isGlobal' => 
                  array (
                    'title' => '是否是全局策略',
                    'description' => '是否是全局策略',
                    'type' => 'boolean',
                    'default' => 'false',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'EscalationPlanNotExists',
            'errorMessage' => 'The specified escalation plan does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST\\",\\n  \\"data\\": {\\n    \\"escalationPlanId\\": 2345,\\n    \\"escalationPlanName\\": \\"升级计划234\\",\\n    \\"escalationPlanDescription\\": \\"描述1234\\",\\n    \\"escalationPlanScopeObjects\\": [\\n      {\\n        \\"scopeObjectId\\": 234,\\n        \\"scope\\": \\"SERVICE\\",\\n        \\"scopeObjectName\\": \\"xx服务\\",\\n        \\"escalationPlanScopeObjects\\": 1,\\n        \\"scopeObjectDeletedType\\": 1\\n      }\\n    ],\\n    \\"escalationPlanRules\\": [\\n      {\\n        \\"escalationPlanRuleId\\": 345,\\n        \\"escalationPlanConditions\\": [\\n          {\\n            \\"level\\": \\"P1\\",\\n            \\"effection\\": \\"LOW\\"\\n          }\\n        ],\\n        \\"escalationPlanStrategies\\": [\\n          {\\n            \\"noticeTime\\": 40,\\n            \\"escalationPlanType\\": \\"UN_ACKNOWLEDGE\\",\\n            \\"noticeObjectList\\": [\\n              {\\n                \\"noticeObjectId\\": 234,\\n                \\"noticeObjectName\\": \\"张老三\\"\\n              }\\n            ],\\n            \\"noticeChannels\\": \\"SMS\\",\\n            \\"enableWebhook\\": true,\\n            \\"serviceGroups\\": [\\n              {\\n                \\"id\\": 343,\\n                \\"serviceGroupName\\": \\"VCD是\\"\\n              }\\n            ],\\n            \\"noticeObjects\\": [\\n              0\\n            ],\\n            \\"noticeRoleList\\": [\\n              0\\n            ],\\n            \\"noticeRoleObjectList\\": [\\n              {\\n                \\"id\\": 0,\\n                \\"name\\": \\"\\"\\n              }\\n            ]\\n          }\\n        ]\\n      }\\n    ],\\n    \\"createTime\\": \\"2021-09-09 09:09:09\\",\\n    \\"isGlobal\\": true\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetEscalationPlanResponse>\\n    <requestId>A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST</requestId>\\n    <data>\\n        <escalationPlanId>2345</escalationPlanId>\\n        <escalationPlanName>升级计划234</escalationPlanName>\\n        <escalationPlanDescription>描述1234</escalationPlanDescription>\\n        <escalationPlanScopeObjects>\\n            <scopeObjectId>234</scopeObjectId>\\n            <scope>SERVICE</scope>\\n            <scopeObjectName>xx服务</scopeObjectName>\\n        </escalationPlanScopeObjects>\\n        <escalationPlanRules>\\n            <escalationPlanRuleId>345</escalationPlanRuleId>\\n            <escalationPlanType>UN_ACKNOWLEDGE</escalationPlanType>\\n            <escalationPlanConditions>\\n                <level>P1</level>\\n                <effection>LOW</effection>\\n            </escalationPlanConditions>\\n            <escalationPlanStrategies>\\n                <noticeTime>40</noticeTime>\\n                <noticeObjects>43</noticeObjects>\\n                <noticeChannels>SMS</noticeChannels>\\n            </escalationPlanStrategies>\\n        </escalationPlanRules>\\n        <createTime>2021-09-09 09:09:09</createTime>\\n    </data>\\n</GetEscalationPlanResponse>","errorExample":""}]',
      'title' => '升级计划详情',
    ),
    'ListEscalationPlans' => 
    array (
      'summary' => '升级计划列表。',
      'path' => '/escalationPlan/list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'escalationPlanName' => 
              array (
                'title' => '升级计划名',
                'description' => '升级计划名',
                'type' => 'string',
                'required' => false,
                'example' => 'xxx',
              ),
              'serviceName' => 
              array (
                'title' => '服务名称',
                'description' => '服务名称',
                'type' => 'string',
                'required' => false,
                'example' => 'ssxx',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST',
              ),
              'pageNumber' => 
              array (
                'title' => 'pageNumber',
                'description' => '分页参数',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => 'pageSize',
                'description' => '分页参数',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10',
              ),
              'isGlobal' => 
              array (
                'type' => 'boolean',
              ),
              'status' => 
              array (
                'type' => 'string',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'escalationPlanId' => 
                    array (
                      'title' => '升级计划id',
                      'description' => '升级计划id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '43',
                    ),
                    'escalationPlanName' => 
                    array (
                      'title' => '升级计划名称',
                      'description' => '升级计划名称',
                      'type' => 'string',
                      'example' => '升级计划2345',
                    ),
                    'escalationPlanScopeObjects' => 
                    array (
                      'title' => '升级计划范围对象',
                      'description' => '升级计划范围对象',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'object',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'scopeObjectId' => 
                          array (
                            'title' => '范围对象id（服务id）',
                            'description' => '范围对象id（服务id）',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '23',
                          ),
                          'scopeObjectName' => 
                          array (
                            'title' => '范围对象名称',
                            'description' => '范围对象名称',
                            'type' => 'string',
                            'example' => '某服务1',
                          ),
                          'scope' => 
                          array (
                            'title' => '范围对象类型',
                            'description' => '范围对象类型',
                            'type' => 'string',
                            'example' => 'SERVICE',
                          ),
                          'scopeObjectDeletedType' => 
                          array (
                            'title' => '服务是否删除 1正常 0删除',
                            'type' => 'integer',
                            'format' => 'int32',
                          ),
                        ),
                      ),
                    ),
                    'status' => 
                    array (
                      'title' => '启用ENABLE 禁用DISABLE',
                      'description' => '启用ENABLE 禁用DISABLE',
                      'type' => 'string',
                      'example' => 'ENABLE',
                    ),
                    'modifyTime' => 
                    array (
                      'title' => '修改时间',
                      'description' => '修改时间',
                      'type' => 'string',
                      'example' => '2021-09-09 09:09:09',
                    ),
                    'isGlobal' => 
                    array (
                      'title' => '是否是全局策略',
                      'type' => 'boolean',
                      'default' => 'false',
                    ),
                  ),
                ),
              ),
              'totalCount' => 
              array (
                'title' => '总条数',
                'description' => '总条数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '878',
              ),
              'pageNumber' => 
              array (
                'title' => '分页参数',
                'description' => '分页参数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '分页参数',
                'description' => '分页参数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST\\",\\n  \\"data\\": [\\n    {\\n      \\"escalationPlanId\\": 43,\\n      \\"escalationPlanName\\": \\"升级计划2345\\",\\n      \\"escalationPlanScopeObjects\\": [\\n        {\\n          \\"scopeObjectId\\": 23,\\n          \\"scopeObjectName\\": \\"某服务1\\",\\n          \\"scope\\": \\"SERVICE\\"\\n        }\\n      ],\\n      \\"status\\": \\"ENABLE\\",\\n      \\"modifyTime\\": \\"2021-09-09 09:09:09\\"\\n    }\\n  ],\\n  \\"totalCount\\": 878,\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10\\n}","errorExample":""},{"type":"xml","example":"<ListEscalationPlansResponse>\\n    <requestId>A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST</requestId>\\n    <data>\\n        <escalationPlanId>43</escalationPlanId>\\n        <escalationPlanName>升级计划2345</escalationPlanName>\\n        <escalationPlanScopeObjects>\\n            <scopeObjectId>23</scopeObjectId>\\n            <scopeObjectName>某服务1</scopeObjectName>\\n        </escalationPlanScopeObjects>\\n        <status>ENABLE</status>\\n        <modifyTime>2021-09-09 09:09:09</modifyTime>\\n    </data>\\n    <totalCount>878</totalCount>\\n    <pageNumber>1</pageNumber>\\n    <pageSize>10</pageSize>\\n</ListEscalationPlansResponse>","errorExample":""}]',
      'title' => '升级计划列表',
    ),
    'UpdateEscalationPlan' => 
    array (
      'summary' => '更新升级计划。',
      'path' => '/escalationPlan/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'escalationPlanId' => 
              array (
                'title' => '升级计划id',
                'description' => '升级计划id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '433',
              ),
              'escalationPlanName' => 
              array (
                'title' => '升级计划名称',
                'description' => '升级计划名称',
                'type' => 'string',
                'required' => false,
                'example' => 'xxx',
              ),
              'escalationPlanDescription' => 
              array (
                'title' => '升级计划描述',
                'description' => '升级计划描述',
                'type' => 'string',
                'required' => false,
                'example' => 'xxxx',
              ),
              'escalationPlanScopeObjects' => 
              array (
                'title' => '关联范围列表（服务）',
                'description' => '关联范围列表（服务）',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'id' => 
                    array (
                      'title' => '主键',
                      'description' => '主键',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '87',
                    ),
                    'scopeObjectId' => 
                    array (
                      'title' => '范围对象id',
                      'description' => '范围对象id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '234',
                    ),
                    'scope' => 
                    array (
                      'title' => '范围对象类型',
                      'description' => '范围对象类型',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'SERVICE',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'escalationPlanRules' => 
              array (
                'title' => '升级计划规则',
                'description' => '升级计划规则',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'id' => 
                    array (
                      'title' => '主键',
                      'description' => '主键',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '872',
                    ),
                    'escalationPlanType' => 
                    array (
                      'title' => 'UN_ACKNOWLEDGE 未响应 UN_FINISH 未完结（废弃）',
                      'description' => 'UN_ACKNOWLEDGE 未响应 UN_FINISH 未完结',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'UN_ACKNOWLEDGE',
                    ),
                    'escalationPlanConditions' => 
                    array (
                      'title' => '升级计划条件列表',
                      'description' => '升级计划条件列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'object',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'level' => 
                          array (
                            'title' => 'P1 P2 P3 P4',
                            'description' => 'P1 P2 P3 P4',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'P1',
                          ),
                          'effection' => 
                          array (
                            'title' => 'LOW HIGH',
                            'description' => 'LOW HIGH',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'LOW',
                          ),
                        ),
                        'required' => false,
                      ),
                      'required' => false,
                    ),
                    'escalationPlanStrategies' => 
                    array (
                      'title' => '升级策略列表',
                      'description' => '升级策略列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'object',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'noticeTime' => 
                          array (
                            'title' => '通知时间',
                            'description' => '通知时间',
                            'type' => 'integer',
                            'format' => 'int64',
                            'required' => false,
                            'example' => '30',
                          ),
                          'noticeObjects' => 
                          array (
                            'title' => '通知对象id',
                            'description' => '通知对象id',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '通知对象id',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => '678',
                            ),
                            'required' => false,
                          ),
                          'noticeChannels' => 
                          array (
                            'title' => '通知渠道',
                            'description' => '通知渠道',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '通知渠道列表',
                              'type' => 'string',
                              'required' => false,
                              'example' => 'SMS',
                            ),
                            'required' => false,
                          ),
                          'serviceGroupIds' => 
                          array (
                            'title' => '服务组id',
                            'description' => '服务组ID',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '服务组id',
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                              'example' => '232',
                            ),
                            'required' => false,
                          ),
                          'enableWebhook' => 
                          array (
                            'title' => '是否支持群通知',
                            'description' => '是否是webhook',
                            'type' => 'boolean',
                            'required' => false,
                            'example' => 'true',
                          ),
                          'escalationPlanType' => 
                          array (
                            'title' => 'UN_ACKNOWLEDGE 未响应 UN_FINISH 未完结',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'UN_ACKNOWLEDGE',
                          ),
                          'noticeRoleList' => 
                          array (
                            'title' => '通知角色列表',
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'integer',
                              'format' => 'int64',
                              'required' => false,
                            ),
                            'required' => false,
                          ),
                        ),
                        'required' => false,
                      ),
                      'required' => false,
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => 'clientToken',
                'type' => 'string',
                'required' => false,
                'example' => '6b404f14-77d1-4b53-a1a1-30a58bbcfc57',
              ),
              'isGlobal' => 
              array (
                'title' => '是否是全局策略',
                'type' => 'boolean',
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'EscalationPlanRuleNull',
            'errorMessage' => 'Escalation plan rule can not be null.',
          ),
          1 => 
          array (
            'errorCode' => 'EscalationPlanServiceNull',
            'errorMessage' => 'Escalation plan service can not be nulll',
          ),
          2 => 
          array (
            'errorCode' => 'EscalationPlanAlreadyExisted',
            'errorMessage' => 'The escalation plan already exists.',
          ),
          3 => 
          array (
            'errorCode' => 'EscalationPlanServiceAleardyRelated',
            'errorMessage' => 'The specified service is already related.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'EscalationPlanNotExists',
            'errorMessage' => 'The specified escalation plan does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateEscalationPlanResponse>\\n    <requestId>A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST</requestId>\\n</UpdateEscalationPlanResponse>","errorExample":""}]',
      'title' => '更新升级计划',
    ),
    'GetIncidentListByIdList' => 
    array (
      'summary' => '根据事件Id查询事件详情。',
      'path' => '/incident/getIncidentListByIdList',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'incidentIdList' => 
              array (
                'description' => '事件ID列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '1122',
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回结果',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'incidentId' => 
                    array (
                      'description' => '事件ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3213',
                    ),
                    'routeRuleId' => 
                    array (
                      'description' => '流转规则ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '10000',
                    ),
                    'routeRuleName' => 
                    array (
                      'description' => '流转规则名称',
                      'type' => 'string',
                      'example' => '规则A',
                    ),
                    'incidentStatus' => 
                    array (
                      'description' => '事件状态 0已分派 1已响应 2已完结',
                      'type' => 'string',
                      'example' => 'FINISHE',
                    ),
                    'relatedServiceId' => 
                    array (
                      'description' => '关联服务ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '213123',
                    ),
                    'relatedServiceName' => 
                    array (
                      'description' => '关联服务名称',
                      'type' => 'string',
                      'example' => '服务A',
                    ),
                    'effect' => 
                    array (
                      'description' => '影响等级 高：HIGH 低 LOW',
                      'type' => 'string',
                      'example' => 'LOW',
                    ),
                    'assignUserId' => 
                    array (
                      'description' => '分派的用户ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12312',
                    ),
                    'assignUserName' => 
                    array (
                      'description' => '分派的用户姓名 (用户表获取)',
                      'type' => 'string',
                      'example' => '小明',
                    ),
                    'assignUserPhone' => 
                    array (
                      'description' => '分派的用户手机号',
                      'type' => 'string',
                      'example' => '139****1111',
                    ),
                    'incidentTitle' => 
                    array (
                      'description' => '事件标题',
                      'type' => 'string',
                      'example' => '事件标题',
                    ),
                    'createTime' => 
                    array (
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2010-03-09 15:53:45',
                    ),
                    'isManual' => 
                    array (
                      'description' => '事件来源 是=手动 否=自动',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'isUpgrade' => 
                    array (
                      'description' => '是否升级 是 否',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'incidentDescription' => 
                    array (
                      'description' => '事件描述',
                      'type' => 'string',
                      'example' => '事件描述',
                    ),
                    'problemId' => 
                    array (
                      'description' => '故障ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12312',
                    ),
                    'durationTime' => 
                    array (
                      'description' => '持续时间',
                      'type' => 'string',
                      'example' => '3000000',
                    ),
                    'notifyChannels' => 
                    array (
                      'description' => '通知渠道',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '通知渠道',
                        'type' => 'string',
                        'example' => '[SMS,PHONE]',
                      ),
                    ),
                    'relatedServiceGroupName' => 
                    array (
                      'description' => '关联服务组名称',
                      'type' => 'string',
                      'example' => '服务组A',
                    ),
                    'relatedServiceGroupId' => 
                    array (
                      'description' => '关联服务id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '13000',
                    ),
                    'relServiceDeleteType' => 
                    array (
                      'description' => '服务删除字段',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'relRouteRuleDeleteType' => 
                    array (
                      'description' => '规则删除字段',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'assignToWhoIsValid' => 
                    array (
                      'description' => '分派的用户是否生效，1生效，0失效',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'relServiceGroupIsValid' => 
                    array (
                      'description' => '关联服务组是否生效，1生效，0失效',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'defaultAssignToWhoName' => 
                    array (
                      'description' => '默认分配人名称',
                      'type' => 'string',
                      'example' => '小明',
                    ),
                    'relatedServiceDescription' => 
                    array (
                      'description' => '关联服务描述',
                      'type' => 'string',
                      'example' => '关联服务描述',
                    ),
                    'incidentLevel' => 
                    array (
                      'description' => '事件级别 P1 P2 P3 P4',
                      'type' => 'string',
                      'example' => 'P4',
                    ),
                    'incidentNumber' => 
                    array (
                      'description' => '事件编号',
                      'type' => 'string',
                      'example' => 'I13002001',
                    ),
                    'problemNumber' => 
                    array (
                      'description' => '故障编号',
                      'type' => 'string',
                      'example' => 'P1231231',
                    ),
                    'defaultAssignToWho' => 
                    array (
                      'description' => '默认分配人id',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1212',
                    ),
                    'defaultAssignToWhoIsValid' => 
                    array (
                      'description' => '默认分配人删除状态',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentNotExtisted',
            'errorMessage' => 'The incident does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"data\\": [\\n    {\\n      \\"incidentId\\": 3213,\\n      \\"routeRuleId\\": 10000,\\n      \\"routeRuleName\\": \\"规则A\\",\\n      \\"incidentStatus\\": \\"FINISHE\\",\\n      \\"relatedServiceId\\": 213123,\\n      \\"relatedServiceName\\": \\"服务A\\",\\n      \\"effect\\": \\"LOW\\",\\n      \\"assignUserId\\": 12312,\\n      \\"assignUserName\\": \\"小明\\",\\n      \\"assignUserPhone\\": \\"139****1111\\",\\n      \\"incidentTitle\\": \\"事件标题\\",\\n      \\"createTime\\": \\"2010-03-09 15:53:45\\",\\n      \\"isManual\\": true,\\n      \\"isUpgrade\\": true,\\n      \\"incidentDescription\\": \\"事件描述\\",\\n      \\"problemId\\": 12312,\\n      \\"durationTime\\": \\"3000000\\",\\n      \\"notifyChannels\\": [\\n        \\"[SMS,PHONE]\\"\\n      ],\\n      \\"relatedServiceGroupName\\": \\"服务组A\\",\\n      \\"relatedServiceGroupId\\": 13000,\\n      \\"relServiceDeleteType\\": 1,\\n      \\"relRouteRuleDeleteType\\": 1,\\n      \\"assignToWhoIsValid\\": 1,\\n      \\"relServiceGroupIsValid\\": 1,\\n      \\"defaultAssignToWhoName\\": \\"小明\\",\\n      \\"relatedServiceDescription\\": \\"关联服务描述\\",\\n      \\"incidentLevel\\": \\"P4\\",\\n      \\"incidentNumber\\": \\"I13002001\\",\\n      \\"problemNumber\\": \\"P1231231\\",\\n      \\"defaultAssignToWho\\": 1212,\\n      \\"defaultAssignToWhoIsValid\\": 1\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '根据事件ID查询事件详情',
    ),
    'DeleteIncident' => 
    array (
      'summary' => '删除事件。',
      'path' => '/incident/delete',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => '幂等校验',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'incidentId' => 
              array (
                'title' => '事件Id',
                'description' => '事件Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '12321',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentStatusInvalid',
            'errorMessage' => 'The incident status is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IncidentUpdateInvalid',
            'errorMessage' => 'The incident update is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentNotExtisted',
            'errorMessage' => 'The incident does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteIncidentResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n</DeleteIncidentResponse>","errorExample":""}]',
      'title' => '删除事件',
    ),
    'CreateIncident' => 
    array (
      'summary' => '手动新增事件。',
      'path' => '/incident/manualSave',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'incidentLevel' => 
              array (
                'title' => 'P1	事件级别 P1 P2 P3 P4',
                'description' => '事件级别：P1，P2，P3，P4',
                'type' => 'string',
                'required' => false,
                'example' => 'P1',
              ),
              'clientToken' => 
              array (
                'title' => '幂等UUID',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => '2b63cdef-7ac3-4892-a76d-0f3389ef729f',
              ),
              'relatedServiceId' => 
              array (
                'title' => '关联服务ID',
                'description' => '服务id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '12312',
              ),
              'effect' => 
              array (
                'title' => '影响等级 高：HIGH 低 LOW',
                'description' => '影响等级：HIGH，LOW',
                'type' => 'string',
                'required' => false,
                'example' => 'LOW',
              ),
              'incidentTitle' => 
              array (
                'title' => '事件标题',
                'description' => '事件标题',
                'type' => 'string',
                'required' => false,
                'example' => '事件标题A',
              ),
              'assignUserId' => 
              array (
                'title' => '分派的用户ID',
                'description' => '分配对象id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '12312',
              ),
              'incidentDescription' => 
              array (
                'title' => '事件描述',
                'description' => '事件描述',
                'type' => 'string',
                'required' => false,
                'example' => '事件描述B',
              ),
              'channels' => 
              array (
                'title' => '通知渠道     SMS 短信   EMAIL 邮件   PHONE  电话  WEIXIN_GROUP企微群 DING_GROUP 钉钉群',
                'description' => '通知渠道    
SMS（短信）EMAIL（邮件）  
PHONE（电话）WEIXIN_GROUP（企微群）DING_GROUP（钉钉群）WEBHOOK（群通知）',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '通知渠道',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'SMS',
                ),
                'required' => false,
              ),
              'serviceGroupId' => 
              array (
                'title' => '服务组Id',
                'description' => '12000',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '服务组id',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'data' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'object',
                'properties' => 
                array (
                  'incidentId' => 
                  array (
                    'title' => '事件主健Id',
                    'description' => '事件主健Id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '事件Id',
                  ),
                ),
              ),
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified Resource is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"data\\": {\\n    \\"incidentId\\": 0\\n  },\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateIncidentResponse>\\n    <data>\\n        <incidentId>218</incidentId>\\n    </data>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n</CreateIncidentResponse>","errorExample":""}]',
      'title' => '手动新增事件',
    ),
    'DeliverIncident' => 
    array (
      'summary' => '事件转交。',
      'path' => '/incident/deliver',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'incidentId' => 
              array (
                'title' => '事件ID',
                'description' => '事件ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1223212',
              ),
              'assignUserId' => 
              array (
                'title' => '转交用户ID',
                'description' => '转交用户ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '212321',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验id',
                'description' => '幂等校验id',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61CS9A221',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2FS',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentUpdateInvalid',
            'errorMessage' => 'The incident update is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IncidentStatusInvalid',
            'errorMessage' => 'The incident status is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentNotExtisted',
            'errorMessage' => 'The incident does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2FS\\"\\n}","errorExample":""},{"type":"xml","example":"<DeliverIncidentResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n</DeliverIncidentResponse>","errorExample":""}]',
      'title' => '事件转交',
    ),
    'GetIncident' => 
    array (
      'summary' => '事件详情。',
      'path' => '/incident/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'incidentId' => 
              array (
                'title' => '事件ID',
                'description' => '事件ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '32113',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => '2b63cdef-7ac3-4892-a76d-0f3389ef729f',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'requestId',
                'type' => 'string',
                'example' => '2b63cdef-7ac3-4892-a76d-0f3389ef7291',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'incidentId' => 
                  array (
                    'title' => '事件Id',
                    'description' => '事件Id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '3213',
                  ),
                  'routeRuleId' => 
                  array (
                    'title' => '流转规则ID',
                    'description' => '流转规则ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '3123',
                  ),
                  'routeRuleName' => 
                  array (
                    'title' => '流转规则名称',
                    'description' => '流转规则名称',
                    'type' => 'string',
                    'example' => '流转规则A',
                  ),
                  'relatedServiceId' => 
                  array (
                    'title' => '关联服务ID',
                    'description' => '关联服务ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '312312',
                  ),
                  'relatedServiceName' => 
                  array (
                    'title' => '关联服务名称',
                    'description' => '关联服务名称',
                    'type' => 'string',
                    'example' => '服务A',
                  ),
                  'relatedServiceDescription' => 
                  array (
                    'title' => '关联服务描述',
                    'description' => '关联服务描述',
                    'type' => 'string',
                    'example' => '关联服务描述',
                  ),
                  'incidentStatus' => 
                  array (
                    'title' => '事件状态 ASSIGNED已分派 RESPONDED已响应  FINISHED已完结',
                    'description' => '事件状态：ASSIGNED（已分派）、RESPONDED（已响应）、FINISHED（已完结）',
                    'type' => 'string',
                    'example' => 'FINISHE',
                  ),
                  'incidentLevel' => 
                  array (
                    'title' => '事件级别 P1 P2 P3 P4',
                    'description' => '事件级别：P1、P2、P3、P4',
                    'type' => 'string',
                    'example' => 'P4',
                  ),
                  'effect' => 
                  array (
                    'title' => 'HIGH	影响等级 高：HIGH 低 LOW',
                    'description' => '影响等级：HIGH 、LOW',
                    'type' => 'string',
                    'example' => 'LOW',
                  ),
                  'assignUserId' => 
                  array (
                    'title' => '分派的用户ID',
                    'description' => '分派的用户ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12312',
                  ),
                  'assignUserName' => 
                  array (
                    'title' => '分派的用户姓名 (用户表获取)',
                    'description' => '分派的用户姓名（用户表获取）',
                    'type' => 'string',
                    'example' => '小明',
                  ),
                  'assignUserPhone' => 
                  array (
                    'title' => '分派的用户手机号',
                    'description' => '分派的用户手机号',
                    'type' => 'string',
                    'example' => '1390000****',
                  ),
                  'incidentNumber' => 
                  array (
                    'title' => '事件编号',
                    'description' => '事件编号',
                    'type' => 'string',
                    'example' => 'I3443831000000016247759753663894',
                  ),
                  'incidentTitle' => 
                  array (
                    'title' => '事件标题',
                    'description' => '事件标题',
                    'type' => 'string',
                    'example' => '事件标题',
                  ),
                  'createTime' => 
                  array (
                    'title' => '创建时间',
                    'description' => '创建时间',
                    'type' => 'string',
                    'example' => '2020-01-10 00:00:00',
                  ),
                  'isManual' => 
                  array (
                    'title' => '事件来源 是：手动 否：自动',
                    'description' => '事件来源：是（手动）、 否（自动）',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'isUpgrade' => 
                  array (
                    'title' => '是否升级 是 否',
                    'description' => '是否升级',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'incidentDescription' => 
                  array (
                    'title' => '事件描述',
                    'description' => '事件描述',
                    'type' => 'string',
                    'example' => '事件描述',
                  ),
                  'problemId' => 
                  array (
                    'title' => '故障Id',
                    'description' => '故障Id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '232113',
                  ),
                  'problemNumber' => 
                  array (
                    'title' => '故障编号',
                    'description' => '故障编号',
                    'type' => 'string',
                    'example' => '3332113231453321',
                  ),
                  'durationTime' => 
                  array (
                    'title' => '持续时间',
                    'description' => '持续时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '3000000',
                  ),
                  'notifyChannels' => 
                  array (
                    'title' => '通知渠道',
                    'description' => '通知渠道',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '通知渠道',
                      'type' => 'string',
                      'example' => 'WEBHOOK',
                    ),
                    'example' => '1 短信  2  邮件  3  电话  4 企微群 5 钉钉群 6飞书 7 群通知 8 slack',
                  ),
                  'relatedServiceGroupName' => 
                  array (
                    'title' => '关联服务组名称',
                    'description' => '关联服务组名称',
                    'type' => 'string',
                    'example' => '服务组A',
                  ),
                  'relatedServiceGroupId' => 
                  array (
                    'title' => '关联服服务id',
                    'description' => '关联服务id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '13000',
                  ),
                  'relServiceDeleteType' => 
                  array (
                    'title' => '服务删除字段',
                    'description' => '服务删除字段',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'relRouteRuleDeleteType' => 
                  array (
                    'title' => '规则删除字段',
                    'description' => '规则删除字段',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'assignToWhoIsValid' => 
                  array (
                    'title' => '分派的用户是否生效，1生效，0失效',
                    'description' => '分派的用户是否生效：1（生效）、0（失效）',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'relServiceGroupIsValid' => 
                  array (
                    'title' => '关联服务组是否生效，1生效，0失效',
                    'description' => '关联服务组是否生效：1（生效）、0（失效）',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'defaultAssignToWhoName' => 
                  array (
                    'title' => '默认分配人名称',
                    'description' => '默认分配人名称',
                    'type' => 'string',
                    'example' => '小明',
                  ),
                  'defaultAssignToWho' => 
                  array (
                    'title' => '默认分配人id',
                    'description' => '默认分配人id',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1212',
                  ),
                  'defaultAssignToWhoIsValid' => 
                  array (
                    'title' => '默认分配人删除状态 1正常 0删除',
                    'description' => '默认分配人删除状态 1正常 0删除',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentNotExtisted',
            'errorMessage' => 'The incident does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"2b63cdef-7ac3-4892-a76d-0f3389ef7291\\",\\n  \\"data\\": {\\n    \\"incidentId\\": 3213,\\n    \\"routeRuleId\\": 3123,\\n    \\"routeRuleName\\": \\"流转规则A\\",\\n    \\"relatedServiceId\\": 312312,\\n    \\"relatedServiceName\\": \\"服务A\\",\\n    \\"relatedServiceDescription\\": \\"关联服务描述\\",\\n    \\"incidentStatus\\": \\"FINISHE\\",\\n    \\"incidentLevel\\": \\"P4\\",\\n    \\"effect\\": \\"LOW\\",\\n    \\"assignUserId\\": 12312,\\n    \\"assignUserName\\": \\"小明\\",\\n    \\"assignUserPhone\\": \\"1390000****\\",\\n    \\"incidentNumber\\": \\"I3443831000000016247759753663894\\",\\n    \\"incidentTitle\\": \\"事件标题\\",\\n    \\"createTime\\": \\"2020-01-10 00:00:00\\",\\n    \\"isManual\\": true,\\n    \\"isUpgrade\\": true,\\n    \\"incidentDescription\\": \\"事件描述\\",\\n    \\"problemId\\": 232113,\\n    \\"problemNumber\\": \\"3332113231453321\\",\\n    \\"durationTime\\": 3000000,\\n    \\"notifyChannels\\": [\\n      \\"WEBHOOK\\"\\n    ],\\n    \\"relatedServiceGroupName\\": \\"服务组A\\",\\n    \\"relatedServiceGroupId\\": 13000,\\n    \\"relServiceDeleteType\\": 1,\\n    \\"relRouteRuleDeleteType\\": 1,\\n    \\"assignToWhoIsValid\\": 1,\\n    \\"relServiceGroupIsValid\\": 1,\\n    \\"defaultAssignToWhoName\\": \\"小明\\",\\n    \\"defaultAssignToWho\\": 1212,\\n    \\"defaultAssignToWhoIsValid\\": 1\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetIncidentResponse>\\n    <requestId>2b63cdef-7ac3-4892-a76d-0f3389ef7291</requestId>\\n    <data>\\n        <incidentId>3213</incidentId>\\n        <routeRuleId>3123</routeRuleId>\\n        <routeRuleName>流转规则A</routeRuleName>\\n        <relatedServiceId>312312</relatedServiceId>\\n        <relatedServiceName>服务A</relatedServiceName>\\n        <relatedServiceDescription>关联服务描述</relatedServiceDescription>\\n        <incidentStatus>FINISHE</incidentStatus>\\n        <incidentLevel>P4</incidentLevel>\\n        <effect>LOW</effect>\\n        <assignUserId>12312</assignUserId>\\n        <assignUserName>小明</assignUserName>\\n        <assignUserPhone>1390000****</assignUserPhone>\\n        <incidentNumber>I3443831000000016247759753663894</incidentNumber>\\n        <incidentTitle>事件标题</incidentTitle>\\n        <createTime>2020-01-10 00:00:00</createTime>\\n        <isManual>true</isManual>\\n        <isUpgrade>true</isUpgrade>\\n        <incidentDescription>事件描述</incidentDescription>\\n        <problemId>232113</problemId>\\n        <problemNumber>3332113231453321</problemNumber>\\n        <durationTime>3000000</durationTime>\\n    </data>\\n</GetIncidentResponse>","errorExample":""}]',
      'title' => '事件详情',
    ),
    'GetIncidentStatistics' => 
    array (
      'summary' => '事件统计。',
      'path' => '/incident/count',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => '幂等校验Id',
                'description' => '幂等校验Id',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'object',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'myResponse' => 
                  array (
                    'title' => '我的 待响应',
                    'description' => '我的待响应',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'myFinish' => 
                  array (
                    'title' => '我的 完结',
                    'description' => '我的完结',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '11',
                  ),
                  'allResponse' => 
                  array (
                    'title' => '所有 待响应',
                    'description' => '所有待响应',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '12',
                  ),
                  'allFinish' => 
                  array (
                    'title' => '所有 完结',
                    'description' => '所有完结',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '113',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotAdded',
            'errorMessage' => 'The user is not added to the system.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentNotExtisted',
            'errorMessage' => 'The incident does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\",\\n  \\"data\\": {\\n    \\"myResponse\\": 1,\\n    \\"myFinish\\": 11,\\n    \\"allResponse\\": 12,\\n    \\"allFinish\\": 113\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetIncidentStatisticsResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n    <data>\\n        <myResponded>1</myResponded>\\n        <myFinish>11</myFinish>\\n        <allResponded>12</allResponded>\\n        <allFinish>113</allFinish>\\n    </data>\\n</GetIncidentStatisticsResponse>","errorExample":""}]',
      'title' => '事件统计',
    ),
    'FinishIncident' => 
    array (
      'summary' => '完成事件。',
      'path' => '/incident/finish',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Body',
          'in' => 'body',
          'style' => 'flat',
          'schema' => 
          array (
            'title' => 'body参数',
            'description' => 'body参数',
            'type' => 'object',
            'properties' => 
            array (
              'incidentIds' => 
              array (
                'title' => '事件ID数组',
                'description' => '事件Id，最大传10个',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '事件Id',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '12321',
                ),
                'required' => true,
              ),
              'incidentFinishReason' => 
              array (
                'title' => '完结原因',
                'description' => '事件完结原因',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '1',
              ),
              'incidentFinishReasonDescription' => 
              array (
                'title' => '原因描述',
                'description' => '事件完结原因描述',
                'type' => 'string',
                'required' => false,
                'example' => '原因',
              ),
              'incidentFinishSolution' => 
              array (
                'title' => '解决方案',
                'description' => '解决方案',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '3',
              ),
              'incidentFinishSolutionDescription' => 
              array (
                'title' => '解决方案描述',
                'description' => '解决方案描述',
                'type' => 'string',
                'required' => false,
                'example' => '原因',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验Id',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2DC',
              ),
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentUpdateInvalid',
            'errorMessage' => 'The incident update is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentNotExtisted',
            'errorMessage' => 'The incident does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\"\\n}","errorExample":""},{"type":"xml","example":"<FinishIncidentResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n    <data/>\\n</FinishIncidentResponse>","errorExample":""}]',
      'title' => '完成事件',
      'requestParamsDescription' => '{"incidentIds":[170003050],"incidentFinishReason":"1","incidentFinishReasonDescription":"222","incidentFinishSolution":"1","incidentFinishSolutionDescription":"22222222","clientToken":"155afb33-2300-4c7c-a114-4c8ab1ef4ba7"}',
    ),
    'UpdateIncident' => 
    array (
      'summary' => '更新事件。',
      'path' => '/incident/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'incidentId' => 
              array (
                'title' => '事件Id',
                'description' => '事件Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '12312',
              ),
              'incidentLevel' => 
              array (
                'title' => '级别',
                'description' => '事件级别 P1 P2 P3 P4',
                'type' => 'string',
                'required' => false,
                'example' => 'P1',
              ),
              'effect' => 
              array (
                'title' => '影响程度',
                'description' => '影响等级 高：HIGH 低 LOW',
                'type' => 'string',
                'required' => false,
                'example' => 'LOW',
              ),
              'incidentTitle' => 
              array (
                'title' => '事件标题',
                'description' => '事件标题',
                'type' => 'string',
                'required' => false,
                'example' => '事件标题',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验Id',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A123',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'incidentId' => 
                  array (
                    'title' => '事件id',
                    'description' => '事件id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2312',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentUpdateInvalid',
            'errorMessage' => 'The incident update is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IncidentStatusInvalid',
            'errorMessage' => 'The incident status is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentNotExtisted',
            'errorMessage' => 'The incident does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\",\\n  \\"data\\": {\\n    \\"incidentId\\": 2312\\n  }\\n}","errorExample":""},{"type":"xml","example":"<UpdateIncidentResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n    <data>\\n        <incidentId>2312</incidentId>\\n    </data>\\n</UpdateIncidentResponse>","errorExample":""}]',
      'title' => 'UpdateIncident - 更新事件',
    ),
    'RespondIncident' => 
    array (
      'summary' => '事件响应。',
      'path' => '/incident/response',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Body',
          'in' => 'body',
          'style' => 'flat',
          'schema' => 
          array (
            'title' => 'body参数',
            'description' => 'body参数',
            'type' => 'object',
            'properties' => 
            array (
              'incidentIds' => 
              array (
                'title' => '事件ID数组',
                'description' => '事件ID数组',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '事件Id',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '12312',
                ),
                'required' => false,
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验Id',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A221',
              ),
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => '062E6568-E505-49D6-8DD0-8F11283EB0AB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentStatusInvalid',
            'errorMessage' => 'The incident status is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IncidentUpdateInvalid',
            'errorMessage' => 'The incident update is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentNotExtisted',
            'errorMessage' => 'The incident does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"062E6568-E505-49D6-8DD0-8F11283EB0AB\\"\\n}","errorExample":""},{"type":"xml","example":"<RespondIncidentResponse>\\n    <requestId>062E6568-E505-49D6-8DD0-8F11283EB0AB</requestId>\\n    <data>\\n        <IncidentId>12312</IncidentId>\\n    </data>\\n</RespondIncidentResponse>","errorExample":""}]',
      'title' => '事件响应',
    ),
    'ListIncidents' => 
    array (
      'summary' => '事件列表。',
      'path' => '/incident/list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'incidentLevel' => 
              array (
                'title' => '事件级别 P1 P2 P3 P4',
                'description' => '事件级别：P1、P2、P3、P4',
                'type' => 'string',
                'required' => false,
                'example' => 'P1',
              ),
              'pageNumber' => 
              array (
                'title' => '页',
                'description' => '页',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '行',
                'description' => '行',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '10',
              ),
              'effect' => 
              array (
                'title' => '影响等级 高：HIGH 低 LOW',
                'description' => '影响等级：HIGH 、LOW',
                'type' => 'string',
                'required' => false,
                'example' => 'LOW',
              ),
              'relationServiceId' => 
              array (
                'title' => '关联服务ID',
                'description' => '关联服务ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '12312',
              ),
              'incidentStatus' => 
              array (
                'title' => '事件状态 ASSIGNED已分派 RESPONDED已响应  FINISHED已完结',
                'description' => '事件状态：ASSIGNED（已分派）、RESPONDED（已响应）、FINISHED（已完结）',
                'type' => 'string',
                'required' => false,
                'example' => 'ASSIGNED',
              ),
              'me' => 
              array (
                'title' => '是否自己 1是 0不是',
                'description' => '是否自己',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => 'true',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验id',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E1',
              ),
              'createStartTime' => 
              array (
                'title' => '创建开始时间',
                'description' => '创建开始时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-11-01 00:00:00',
              ),
              'createEndTime' => 
              array (
                'title' => '创建结束时间',
                'description' => '创建结束时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-11-10 00:00:00',
              ),
              'ruleName' => 
              array (
                'title' => '流转规则名字',
                'description' => '流转规则名称',
                'type' => 'string',
                'required' => false,
                'example' => 'sa',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'title' => 'IncidentItemType',
                  'description' => 'IncidentItemType',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'incidentId' => 
                    array (
                      'description' => '事件Id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12321',
                    ),
                    'routeRuleId' => 
                    array (
                      'title' => '流转规则ID',
                      'description' => '流转规则ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '123',
                    ),
                    'routeRuleName' => 
                    array (
                      'title' => '流转规则',
                      'description' => '流转规则名称',
                      'type' => 'string',
                      'example' => '规则A',
                    ),
                    'incidentStatus' => 
                    array (
                      'title' => '事件状态 0已分派 1已响应 2已完结',
                      'description' => '事件状态：0（已分派）、1（已响应）、2（已完结）',
                      'type' => 'string',
                      'example' => '0',
                    ),
                    'incidentLevel' => 
                    array (
                      'title' => '事件级别 P1 P2 P3 P4',
                      'description' => '事件级别：P1、P2、P3、P4',
                      'type' => 'string',
                      'example' => 'P4',
                    ),
                    'relatedServiceId' => 
                    array (
                      'title' => '关联服务ID',
                      'description' => '关联服务ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '213123',
                    ),
                    'relatedServiceName' => 
                    array (
                      'title' => '关联服务名称',
                      'description' => '关联服务名称',
                      'type' => 'string',
                      'example' => '服务A',
                    ),
                    'effect' => 
                    array (
                      'title' => '影响等级 高：HIGH 低 LOW',
                      'description' => '影响等级：HIGH 、LOW',
                      'type' => 'string',
                      'example' => 'HIGH',
                    ),
                    'assignUserId' => 
                    array (
                      'title' => '分派的用户ID',
                      'description' => '分派的用户ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '21312',
                    ),
                    'assignUserName' => 
                    array (
                      'title' => '分派的用户姓名',
                      'description' => '分派的用户姓名',
                      'type' => 'string',
                      'example' => '小明',
                      'readOnly' => true,
                    ),
                    'assignUserPhone' => 
                    array (
                      'title' => '分派人手机号',
                      'description' => '分派人手机号',
                      'type' => 'string',
                      'example' => '1390000****',
                    ),
                    'incidentTitle' => 
                    array (
                      'title' => '事件标题',
                      'description' => '事件标题',
                      'type' => 'string',
                      'example' => '事件A',
                    ),
                    'createTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2020-10-1 00:00:00',
                    ),
                    'isManual' => 
                    array (
                      'title' => '事件来源 是=手动 否=自动',
                      'description' => '事件来源：是（手动）、 否（自动）',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'incidentNumber' => 
                    array (
                      'title' => '事件编号',
                      'description' => '事件编号',
                      'type' => 'string',
                      'example' => 'I3000021',
                    ),
                    'relServiceDeleteType' => 
                    array (
                      'title' => '服务删除字段 1正常 0删除',
                      'description' => '服务删除字段：1（正常）、0（删除）',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'relRouteRuleDeleteType' => 
                    array (
                      'title' => '规则删除字段 1正常 0删除',
                      'description' => '规则删除字段：1（正常）、0（删除）',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'assignToWhoIsValid' => 
                    array (
                      'title' => '分派的用户是否生效，1生效，0失效',
                      'description' => '分派的用户是否生效：1（生效）、0（失效）',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '008',
                    ),
                  ),
                ),
              ),
              'totalCount' => 
              array (
                'title' => '总数',
                'description' => '总数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '60',
              ),
              'pageNumber' => 
              array (
                'title' => '页',
                'description' => '页',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '行',
                'description' => '行',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotAdded',
            'errorMessage' => 'The user is not added to the system.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\",\\n  \\"data\\": [\\n    {\\n      \\"incidentId\\": 12321,\\n      \\"routeRuleId\\": 123,\\n      \\"routeRuleName\\": \\"规则A\\",\\n      \\"incidentStatus\\": \\"0\\",\\n      \\"incidentLevel\\": \\"P4\\",\\n      \\"relatedServiceId\\": 213123,\\n      \\"relatedServiceName\\": \\"服务A\\",\\n      \\"effect\\": \\"HIGH\\",\\n      \\"assignUserId\\": 21312,\\n      \\"assignUserName\\": \\"小明\\",\\n      \\"assignUserPhone\\": \\"1390000****\\",\\n      \\"incidentTitle\\": \\"事件A\\",\\n      \\"createTime\\": \\"2020-10-1 00:00:00\\",\\n      \\"isManual\\": true,\\n      \\"incidentNumber\\": \\"I3000021\\",\\n      \\"relServiceDeleteType\\": 1,\\n      \\"relRouteRuleDeleteType\\": 1,\\n      \\"assignToWhoIsValid\\": 8\\n    }\\n  ],\\n  \\"totalCount\\": 60,\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10\\n}","errorExample":""},{"type":"xml","example":"<ListIncidentsResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n    <data>\\n        <incidentId>12321</incidentId>\\n        <routeRuleId>123</routeRuleId>\\n        <routeRuleName>规则A</routeRuleName>\\n        <incidentStatus>RESPONDED</incidentStatus>\\n        <incidentLevel>P4</incidentLevel>\\n        <relatedServiceId>213123</relatedServiceId>\\n        <relatedServiceName>服务A</relatedServiceName>\\n        <effect>HIGH</effect>\\n        <assignUserId>21312</assignUserId>\\n        <assignUserName>小明</assignUserName>\\n        <assignUserPhone>1390000****</assignUserPhone>\\n        <incidentTitle>事件A</incidentTitle>\\n        <createTime>2020-10-1 00:00:00</createTime>\\n        <isManual>true</isManual>\\n        <incidentNumber>I3000021</incidentNumber>\\n    </data>\\n    <totalCount>60</totalCount>\\n    <pageNumber>1</pageNumber>\\n    <pageSize>10</pageSize>\\n</ListIncidentsResponse>","errorExample":""}]',
      'title' => '事件列表',
    ),
    'ListIncidentDetailTimelines' => 
    array (
      'summary' => '事件详情动态。',
      'path' => '/incident/detail/timeline',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'incidentId' => 
              array (
                'title' => '事件ID',
                'description' => '事件ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'pageNumber' => 
              array (
                'title' => '页',
                'description' => '页',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '行',
                'description' => '行',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10',
              ),
              'idSort' => 
              array (
                'title' => 'id排序方式（desc 倒序，asc 正序）',
                'type' => 'string',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'title' => 
                    array (
                      'title' => '主题',
                      'description' => '主题',
                      'type' => 'string',
                      'example' => '标题',
                    ),
                    'description' => 
                    array (
                      'title' => '描述',
                      'description' => '描述',
                      'type' => 'string',
                      'example' => '描述',
                    ),
                    'remark' => 
                    array (
                      'title' => '备注',
                      'description' => '备注',
                      'type' => 'string',
                      'example' => '备注A',
                    ),
                    'relatedServiceName' => 
                    array (
                      'title' => '服务名称',
                      'description' => '服务名称',
                      'type' => 'string',
                      'example' => '服务A',
                    ),
                    'createTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '创建时间',
                    ),
                    'incidentId' => 
                    array (
                      'title' => '事件Id',
                      'description' => '事件Id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '事件Id',
                    ),
                    'action' => 
                    array (
                      'title' => '事件action',
                      'description' => '触发新增  INCIDENT_ADD
响应  INCIDENT_RESPONSE
转交 INCIDENT_DELIVER
变更 INCIDENT_UPDATE
添加小计 INCIDENT_ADD_SUBTOTAL
完结  INCIDENT_FINISH
分配 INCIDENT_ASSIGN
升级  INCIDENT_UPGRADE',
                      'type' => 'string',
                      'example' => 'INCIDENT_ADD',
                    ),
                    'snapshotData' => 
                    array (
                      'title' => '快照数据',
                      'description' => '快照数据',
                      'type' => 'string',
                      'example' => '{"userName":"小明"}',
                    ),
                    'relRouteRuleDeleteType' => 
                    array (
                      'title' => '规则删除字段 1正常 0删除或者无规则',
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                  ),
                ),
              ),
              'totalCount' => 
              array (
                'title' => '总数',
                'description' => '总数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '总数',
              ),
              'pageNumber' => 
              array (
                'description' => '页',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'description' => '行',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentNotExtisted',
            'errorMessage' => 'The incident does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\",\\n  \\"data\\": [\\n    {\\n      \\"title\\": \\"标题\\",\\n      \\"description\\": \\"描述\\",\\n      \\"remark\\": \\"备注A\\",\\n      \\"relatedServiceName\\": \\"服务A\\",\\n      \\"createTime\\": \\"创建时间\\",\\n      \\"incidentId\\": 0,\\n      \\"action\\": \\"INCIDENT_ADD\\",\\n      \\"snapshotData\\": \\"{\\\\\\"userName\\\\\\":\\\\\\"小明\\\\\\"}\\"\\n    }\\n  ],\\n  \\"totalCount\\": 0,\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10\\n}","errorExample":""},{"type":"xml","example":"<ListIncidentDetailTimelinesResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n    <data>\\n        <title>标题</title>\\n        <description>描述</description>\\n        <relatedServiceName>服务A</relatedServiceName>\\n        <createTime>创建时间</createTime>\\n    </data>\\n</ListIncidentDetailTimelinesResponse>","errorExample":""}]',
      'title' => 'ListIncidentDetailTimelines - 事件详情动态',
    ),
    'ListIncidentTimelines' => 
    array (
      'summary' => '事件动态。',
      'path' => '/incident/timeline',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => '幂等校验Id',
                'description' => '幂等校验Id',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'pageNumber' => 
              array (
                'title' => '页',
                'description' => '页',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '行',
                'description' => '行',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'title' => 
                    array (
                      'title' => '动态',
                      'description' => '动态',
                      'type' => 'string',
                      'example' => '标题',
                    ),
                    'description' => 
                    array (
                      'title' => '描述',
                      'description' => '描述',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '描述',
                    ),
                    'remark' => 
                    array (
                      'title' => '备注',
                      'description' => '备注',
                      'type' => 'string',
                      'example' => '备注A',
                    ),
                    'relatedServiceName' => 
                    array (
                      'title' => '服务名称',
                      'description' => '服务名称',
                      'type' => 'string',
                      'example' => '服务A',
                    ),
                    'createTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2021-06-23 00:00:00',
                    ),
                    'incidentTitle' => 
                    array (
                      'title' => '事件标题',
                      'description' => '事件标题',
                      'type' => 'string',
                      'example' => '事件标题',
                    ),
                    'action' => 
                    array (
                      'title' => '动态类型  触发新增 INCIDENT_ADD 响应 INCIDENT_RESPONSE 转交 INCIDENT_DELIVER 变更 INCIDENT_UPDATE 添加小计 INCIDENT_ADD_SUBTOTAL 完结 INCIDENT_FINISH 分配 INCIDENT_ASSIGN 升级 INCIDENT_UPGRAD',
                      'description' => '动态类型  触发新增 INCIDENT_ADD 响应 INCIDENT_RESPONSE 转交 INCIDENT_DELIVER 变更 INCIDENT_UPDATE 添加小计 INCIDENT_ADD_SUBTOTAL 完结 INCIDENT_FINISH 分配 INCIDENT_ASSIGN 升级 INCIDENT_UPGRAD',
                      'type' => 'string',
                      'example' => 'INCIDENT_ADD',
                    ),
                    'incidentId' => 
                    array (
                      'title' => '事件Id',
                      'description' => '事件Id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3321',
                    ),
                    'incidentNumber' => 
                    array (
                      'title' => '事件编号',
                      'description' => '事件编号',
                      'type' => 'string',
                      'example' => 'I13002001',
                    ),
                    'snapshotData' => 
                    array (
                      'title' => '动态快照数据',
                      'description' => '动态快照数据',
                      'type' => 'string',
                      'example' => '{"userName":"小明"}',
                    ),
                    'relRouteRuleDeleteType' => 
                    array (
                      'title' => '规则删除字段',
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                  ),
                ),
              ),
              'totalCount' => 
              array (
                'title' => '总数',
                'description' => '总数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '132',
              ),
              'pageNumber' => 
              array (
                'description' => '页',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'description' => '行',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentNotExtisted',
            'errorMessage' => 'The incident does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\",\\n  \\"data\\": [\\n    {\\n      \\"title\\": \\"标题\\",\\n      \\"description\\": 0,\\n      \\"remark\\": \\"备注A\\",\\n      \\"relatedServiceName\\": \\"服务A\\",\\n      \\"createTime\\": \\"2021-06-23 00:00:00\\",\\n      \\"incidentTitle\\": \\"事件标题\\",\\n      \\"action\\": \\"INCIDENT_ADD\\",\\n      \\"incidentId\\": 3321,\\n      \\"incidentNumber\\": \\"I13002001\\",\\n      \\"snapshotData\\": \\"{\\\\\\"userName\\\\\\":\\\\\\"小明\\\\\\"}\\"\\n    }\\n  ],\\n  \\"totalCount\\": 132,\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10\\n}","errorExample":""},{"type":"xml","example":"<ListIncidentTimelinesResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n    <data>\\n        <title>标题</title>\\n        <relatedServiceName>服务A</relatedServiceName>\\n        <createTime>2021-06-23 00:00:00</createTime>\\n        <incidentTitle>事件标题</incidentTitle>\\n        <aciton>INCIDENTRESPONSE</aciton>\\n    </data>\\n</ListIncidentTimelinesResponse>","errorExample":""}]',
      'title' => 'ListIncidentTimelines - 事件动态',
    ),
    'CreateUser' => 
    array (
      'summary' => '创建人员。',
      'path' => '/user/create',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'ramId' => 
              array (
                'description' => '用户ramId',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '4787654378343',
              ),
              'phone' => 
              array (
                'description' => '手机号',
                'type' => 'string',
                'required' => false,
                'example' => '188898989892',
              ),
              'username' => 
              array (
                'description' => '用户名称',
                'type' => 'string',
                'required' => false,
                'example' => '张珊1',
              ),
              'email' => 
              array (
                'description' => '邮箱',
                'type' => 'string',
                'required' => false,
                'example' => '5678@qq.com',
              ),
              'clientToken' => 
              array (
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
              'roleIdList' => 
              array (
                'title' => '角色ID列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'integer',
                  'format' => 'int64',
                ),
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'id of the request',
                'type' => 'string',
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'userId' => 
                  array (
                    'description' => '用户id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'PhoneAlreadyExists',
            'errorMessage' => 'The specified phone number already exists.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'IdentitySelectionError',
            'errorMessage' => 'Identity selection error',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserAlreadyExists',
            'errorMessage' => 'The specified user already exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"c26f36de-1ec8-496a-a828-880676c5ef81\\",\\n  \\"data\\": {\\n    \\"userId\\": 1\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateUserResponse>\\n    <requestId>c26f36de-1ec8-496a-a828-880676c5ef81</requestId>\\n    <data>\\n        <userId>1</userId>\\n    </data>\\n</CreateUserResponse>","errorExample":""}]',
      'title' => '创建人员',
    ),
    'DeleteUser' => 
    array (
      'summary' => '删除用户。',
      'path' => '/user/delete',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'userId' => 
              array (
                'title' => '用户ID',
                'description' => '用户ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'id of the request',
                'description' => 'id of the request',
                'type' => 'string',
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DeleteUserFail	',
            'errorMessage' => 'The user has been associated with route rule.',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'DeleteUserFail	',
            'errorMessage' => 'The user has been associated with escalationPlan.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'DeleteUserFail	',
            'errorMessage' => 'Users are scheduled.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotExists',
            'errorMessage' => 'The specified user does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"c26f36de-1ec8-496a-a828-880676c5ef81\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteUserResponse>\\n    <requestId>c26f36de-1ec8-496a-a828-880676c5ef81</requestId>\\n</DeleteUserResponse>","errorExample":""}]',
      'title' => '删除用户',
    ),
    'GetUser' => 
    array (
      'summary' => '查看用户详情。',
      'path' => '/user/getUser',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'userId' => 
              array (
                'title' => '用户ID',
                'description' => '用户ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '63',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
              'data' => 
              array (
                'title' => '用户',
                'description' => '用户',
                'type' => 'object',
                'properties' => 
                array (
                  'userId' => 
                  array (
                    'title' => '用户ID',
                    'description' => '用户ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '63',
                  ),
                  'ramId' => 
                  array (
                    'title' => 'ramId',
                    'description' => 'ramId',
                    'type' => 'string',
                    'example' => '1344383',
                  ),
                  'isEditableUser' => 
                  array (
                    'title' => '是否可编辑',
                    'description' => '是否当前用户',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'accountType' => 
                  array (
                    'title' => 'CUSTOMER:主账号，SUB:子账号',
                    'description' => 'ram 账号类型 0主账号 1子账号',
                    'type' => 'string',
                    'example' => 'SUB',
                  ),
                  'email' => 
                  array (
                    'title' => 'email',
                    'description' => 'email',
                    'type' => 'string',
                    'example' => '5678***@qq.com',
                  ),
                  'username' => 
                  array (
                    'title' => '用户昵称',
                    'description' => '用户昵称',
                    'type' => 'string',
                    'example' => '张珊',
                  ),
                  'phone' => 
                  array (
                    'title' => '用户手机号',
                    'description' => '用户手机号',
                    'type' => 'string',
                    'example' => '1390000****',
                  ),
                  'createTime' => 
                  array (
                    'title' => '创建时间',
                    'description' => '创建时间',
                    'type' => 'string',
                    'example' => '2021-09-09 09:09:09',
                  ),
                  'isRelated' => 
                  array (
                    'title' => '是否关联',
                    'description' => '是否关联',
                    'type' => 'string',
                    'example' => 'RELATE',
                  ),
                  'serviceGroups' => 
                  array (
                    'title' => '所属服务组',
                    'description' => '所属服务组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'name' => 
                        array (
                          'title' => '服务组名称',
                          'description' => '服务组名称',
                          'type' => 'string',
                          'example' => '山口组',
                        ),
                        'serviceGroupId' => 
                        array (
                          'title' => '服务组ID',
                          'description' => '服务组ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '10000',
                        ),
                      ),
                    ),
                  ),
                  'roleIdList' => 
                  array (
                    'title' => '角色ID列表',
                    'description' => '角色ID列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                  ),
                  'roleNameList' => 
                  array (
                    'title' => '角色名称列表',
                    'description' => '角色名称列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotExists',
            'errorMessage' => 'The specified user does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"c26f36de-1ec8-496a-a828-880676c5ef81\\",\\n  \\"data\\": {\\n    \\"userId\\": 63,\\n    \\"ramId\\": \\"1344383\\",\\n    \\"isEditableUser\\": true,\\n    \\"accountType\\": \\"SUB\\",\\n    \\"email\\": \\"5678***@qq.com\\",\\n    \\"username\\": \\"张珊\\",\\n    \\"phone\\": \\"1390000****\\",\\n    \\"createTime\\": \\"2021-09-09 09:09:09\\",\\n    \\"isRelated\\": \\"RELATE\\",\\n    \\"serviceGroups\\": [\\n      {\\n        \\"name\\": \\"山口组\\",\\n        \\"serviceGroupId\\": 10000\\n      }\\n    ],\\n    \\"roleIdList\\": [\\n      0\\n    ],\\n    \\"roleNameList\\": [\\n      \\"\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetUserResponse>\\n    <requestId>c26f36de-1ec8-496a-a828-880676c5ef81</requestId>\\n    <data>\\n        <userId>63</userId>\\n        <ramId>1344383</ramId>\\n        <isEditableUser>true</isEditableUser>\\n        <accountType>SUB</accountType>\\n        <email>5678***@qq.com</email>\\n        <username>张珊</username>\\n        <phone>1390000****</phone>\\n    </data>\\n</GetUserResponse>","errorExample":""}]',
      'title' => '查看用户详情',
    ),
    'ListUsers' => 
    array (
      'summary' => '用户列表。',
      'path' => '/user/list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'username' => 
              array (
                'title' => '人员名称',
                'description' => '人员名称',
                'type' => 'string',
                'required' => false,
                'example' => '张三',
              ),
              'phone' => 
              array (
                'title' => '人员手机号',
                'description' => '人员手机号',
                'type' => 'string',
                'required' => false,
                'example' => '1887879****',
              ),
              'ramId' => 
              array (
                'title' => 'ramID',
                'description' => 'Ram账号ID',
                'type' => 'string',
                'required' => false,
                'example' => '1344383',
              ),
              'scene' => 
              array (
                'title' => 'USER_LIST列表 ALL_USERS下拉',
                'description' => '下拉场景 ALL_USERS  用户列表场景USER_LIST',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => 'USER_LIST',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => 'clientToken',
                'type' => 'string',
                'required' => false,
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
              'pageNumber' => 
              array (
                'title' => '分页参数',
                'description' => '分页参数',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '分页参数',
                'description' => '分页参数',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10',
              ),
              'synergyChannel' => 
              array (
                'title' => '移动应用协同渠道',
                'description' => '移动应用渠道',
                'type' => 'string',
                'required' => false,
                'example' => 'DINGDING',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'id of the request',
                'description' => 'id of the request',
                'type' => 'string',
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '人员',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'userId' => 
                    array (
                      'title' => '用户id',
                      'description' => '用户id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1234',
                    ),
                    'ramId' => 
                    array (
                      'title' => '子账号ramId',
                      'description' => '子账号ramId',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '53624523',
                    ),
                    'username' => 
                    array (
                      'title' => '用户名',
                      'description' => '用户名',
                      'type' => 'string',
                      'example' => '张珊',
                    ),
                    'phone' => 
                    array (
                      'title' => '手机',
                      'description' => '手机',
                      'type' => 'string',
                      'example' => '1390000****',
                    ),
                    'email' => 
                    array (
                      'title' => '邮箱',
                      'description' => '邮箱',
                      'type' => 'string',
                      'example' => '2345****@qq.com',
                    ),
                    'isEditableUser' => 
                    array (
                      'title' => '是否可编辑',
                      'description' => '是否可编辑',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => 'true',
                    ),
                    'accountType' => 
                    array (
                      'title' => '账户类型',
                      'description' => '账户类型',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => 'SUB',
                    ),
                    'appAccount' => 
                    array (
                      'title' => '移动应用账户',
                      'description' => '移动应用账户',
                      'type' => 'string',
                      'example' => '23456tre',
                    ),
                    'synergyChannel' => 
                    array (
                      'title' => '移动应用协同渠道',
                      'description' => '移动应用协同渠道',
                      'type' => 'string',
                      'example' => 'DINGDING',
                    ),
                    'isRelated' => 
                    array (
                      'title' => '是否关联',
                      'description' => '是否关联',
                      'type' => 'string',
                      'example' => 'RELATED关联  NOT_RELATED 未关联',
                    ),
                    'isOperation' => 
                    array (
                      'title' => '是否可操作(删除,取消关联) 1可操作 0不可操作',
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                    'isRam' => 
                    array (
                      'title' => '是否是主账号 1是 0不是',
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                    'roleIdList' => 
                    array (
                      'title' => '角色ID列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'integer',
                        'format' => 'int64',
                      ),
                    ),
                    'roleNameList' => 
                    array (
                      'title' => '角色名称列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'string',
                      ),
                    ),
                  ),
                ),
              ),
              'totalCount' => 
              array (
                'title' => '总条数',
                'description' => '总条数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
              'pageNumber' => 
              array (
                'title' => '分页',
                'description' => '分页',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '分页',
                'description' => '分页',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"c26f36de-1ec8-496a-a828-880676c5ef81\\",\\n  \\"data\\": [\\n    {\\n      \\"userId\\": 1234,\\n      \\"ramId\\": 53624523,\\n      \\"username\\": \\"张珊\\",\\n      \\"phone\\": \\"1390000****\\",\\n      \\"email\\": \\"2345****@qq.com\\",\\n      \\"isEditableUser\\": 0,\\n      \\"accountType\\": 0,\\n      \\"appAccount\\": \\"23456tre\\",\\n      \\"synergyChannel\\": \\"DINGDING\\",\\n      \\"isRelated\\": \\"RELATED关联  NOT_RELATED 未关联\\"\\n    }\\n  ],\\n  \\"totalCount\\": 100,\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10\\n}","errorExample":""},{"type":"xml","example":"<ListUsersResponse>\\n    <requestId>c26f36de-1ec8-496a-a828-880676c5ef81</requestId>\\n    <data>\\n        <userId>1234</userId>\\n        <ramId>53624523</ramId>\\n        <username>张珊</username>\\n        <phone>1390000****</phone>\\n        <email>2345****@qq.com</email>\\n        <appAccount>23456tre</appAccount>\\n        <synergyChannel>DINGDING</synergyChannel>\\n        <isRelated>RELATED关联  NOT_RELATED 未关联</isRelated>\\n    </data>\\n    <totalCount>100</totalCount>\\n    <pageNumber>1</pageNumber>\\n    <pageSize>10</pageSize>\\n</ListUsersResponse>","errorExample":""}]',
      'title' => '用户列表',
    ),
    'UpdateUser' => 
    array (
      'summary' => '人员信息更新。',
      'path' => '/user/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'ramId' => 
              array (
                'title' => '用户ramId',
                'description' => '人员ramid',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '2243564',
              ),
              'phone' => 
              array (
                'title' => '手机号',
                'description' => '手机号',
                'type' => 'string',
                'required' => false,
                'example' => '18887878****',
              ),
              'username' => 
              array (
                'title' => '用户名',
                'description' => '用户名',
                'type' => 'string',
                'required' => false,
                'example' => '张珊',
              ),
              'email' => 
              array (
                'title' => '邮件',
                'description' => '邮箱',
                'type' => 'string',
                'required' => false,
                'example' => '78799****@qq.com',
              ),
              'userId' => 
              array (
                'title' => '用户ID',
                'description' => '用户ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '111',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
              'roleIdList' => 
              array (
                'title' => '用户角色',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'integer',
                  'format' => 'int64',
                ),
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'id of the request',
                'type' => 'string',
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'PhoneAlreadyExists',
            'errorMessage' => 'The specified phone number already exists.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotExists',
            'errorMessage' => 'The specified user does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"c26f36de-1ec8-496a-a828-880676c5ef81\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateUserResponse>\\n    <requestId>c26f36de-1ec8-496a-a828-880676c5ef81</requestId>\\n</UpdateUserResponse>","errorExample":""}]',
      'title' => '人员信息更新',
    ),
    'CreateService' => 
    array (
      'summary' => '创建服务。',
      'path' => '/services/save',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceDescription' => 
              array (
                'title' => '服务描述',
                'description' => '服务描述',
                'type' => 'string',
                'required' => false,
                'example' => '服务描述',
              ),
              'serviceName' => 
              array (
                'title' => '服务名称',
                'description' => '服务名字',
                'type' => 'string',
                'required' => true,
                'example' => '服务名字',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'escalationPlanId' => 
              array (
                'title' => '升级策略ID',
                'type' => 'integer',
                'format' => 'int64',
              ),
              'serviceGroupIdList' => 
              array (
                'title' => '服务组ID列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'integer',
                  'format' => 'int64',
                ),
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'title' => '服务ID',
                'description' => '服务ID',
                'type' => 'object',
                'properties' => 
                array (
                  'serviceId' => 
                  array (
                    'title' => '服务ID',
                    'description' => '服务ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                ),
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'AddServiceFail',
            'errorMessage' => 'Failed to add the service.',
          ),
          1 => 
          array (
            'errorCode' => 'ServiceNameAlreadyExisted',
            'errorMessage' => 'The service name is already in use.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"data\\": {\\n    \\"serviceId\\": 1\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateServiceResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n    <data>\\n        <serviceId>1</serviceId>\\n    </data>\\n</CreateServiceResponse>","errorExample":""}]',
      'title' => '创建服务',
    ),
    'DeleteService' => 
    array (
      'summary' => '删除服务。',
      'path' => '/services/delete',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceId' => 
              array (
                'title' => '服务ID',
                'description' => '服务ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10002000',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DeleteServiceFail',
            'errorMessage' => 'Failed to delete the service.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ServiceNotExisted',
            'errorMessage' => 'The service does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteServiceResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n</DeleteServiceResponse>","errorExample":""}]',
      'title' => '删除服务',
    ),
    'GetService' => 
    array (
      'summary' => '查询服务详情。',
      'path' => '/services/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceId' => 
              array (
                'title' => '服务ID',
                'description' => '服务ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'title' => '服务详情',
                'description' => '服务详情',
                'type' => 'object',
                'properties' => 
                array (
                  'serviceId' => 
                  array (
                    'title' => '服务ID',
                    'description' => '服务ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'serviceName' => 
                  array (
                    'title' => '服务名字',
                    'description' => '服务名字',
                    'type' => 'string',
                    'example' => '保洁服务',
                  ),
                  'serviceDescription' => 
                  array (
                    'title' => '服务描述',
                    'description' => '服务描述',
                    'type' => 'string',
                    'example' => '服务描述',
                  ),
                  'updateTime' => 
                  array (
                    'title' => '修改时间',
                    'description' => '修改时间',
                    'type' => 'string',
                    'example' => '2020-03-08 12:53:53',
                  ),
                  'serviceGroupIdList' => 
                  array (
                    'title' => '服务组ID列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'title' => '服务组ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                      'default' => '1',
                    ),
                    'minItems' => 0,
                  ),
                  'escalationPlanId' => 
                  array (
                    'title' => '升级策略ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => true,
                    'example' => '1',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ServiceNotExisted',
            'errorMessage' => 'The service does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"data\\": {\\n    \\"serviceId\\": 1,\\n    \\"serviceName\\": \\"保洁服务\\",\\n    \\"serviceDescription\\": \\"服务描述\\",\\n    \\"updateTime\\": \\"2020-03-08 12:53:53\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetServiceResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n    <data>\\n        <serviceId>1</serviceId>\\n        <serviceName>保洁服务</serviceName>\\n        <serviceDescription>服务描述</serviceDescription>\\n        <updateTime>2020-03-08 12:53:53</updateTime>\\n    </data>\\n</GetServiceResponse>","errorExample":""}]',
      'title' => '查询服务详情',
    ),
    'ListServices' => 
    array (
      'summary' => '查看服务列表。',
      'path' => '/services/list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceName' => 
              array (
                'title' => '服务名称',
                'description' => '服务名称',
                'type' => 'string',
                'required' => false,
                'example' => '购物车',
              ),
              'pageNumber' => 
              array (
                'title' => '当前页',
                'description' => '当前页',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '页大小',
                'description' => '页大小',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '10',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'description' => '服务列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'serviceId' => 
                    array (
                      'title' => '服务ID',
                      'description' => '服务ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'serviceName' => 
                    array (
                      'title' => '服务名字',
                      'description' => '服务名字',
                      'type' => 'string',
                      'example' => '购物车',
                    ),
                    'serviceDescription' => 
                    array (
                      'title' => '服务描述',
                      'description' => '服务描述',
                      'type' => 'string',
                      'example' => '服务描述',
                    ),
                    'updateTime' => 
                    array (
                      'title' => '修改时间',
                      'description' => '修改时间',
                      'type' => 'string',
                      'example' => '2020-09-08 14:30:30',
                    ),
                    'isValid' => 
                    array (
                      'description' => '是否合法',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'escalationPlanName' => 
                    array (
                      'title' => '升级策略名称',
                      'description' => '升级策略名称',
                      'type' => 'string',
                    ),
                    'escalationPlanId' => 
                    array (
                      'title' => '升级策略ID',
                      'description' => '升级策略ID',
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'serviceGroupIdList' => 
                    array (
                      'title' => '服务组ID列表',
                      'description' => '服务组ID列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'title' => '服务组ID',
                        'description' => '服务组ID',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1',
                        'default' => '1',
                      ),
                    ),
                  ),
                ),
              ),
              'pageNumber' => 
              array (
                'title' => '当前页',
                'description' => '当前页',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '页大小',
                'description' => '页大小',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'totalCount' => 
              array (
                'title' => '总条数',
                'description' => '总条数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"data\\": [\\n    {\\n      \\"serviceId\\": 1,\\n      \\"serviceName\\": \\"购物车\\",\\n      \\"serviceDescription\\": \\"服务描述\\",\\n      \\"updateTime\\": \\"2020-09-08 14:30:30\\",\\n      \\"isValid\\": 1,\\n      \\"escalationPlanName\\": \\"\\",\\n      \\"escalationPlanId\\": 0,\\n      \\"serviceGroupIdList\\": [\\n        1\\n      ]\\n    }\\n  ],\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10,\\n  \\"totalCount\\": 100\\n}","errorExample":""},{"type":"xml","example":"<ListServicesResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n    <data>\\n        <serviceId>1</serviceId>\\n        <serviceName>购物车</serviceName>\\n        <serviceDescription>服务描述</serviceDescription>\\n        <updateTime>2020-09-08 14:30:30</updateTime>\\n    </data>\\n    <pageNumber>1</pageNumber>\\n    <pageSIze>10</pageSIze>\\n    <totalCount>100</totalCount>\\n</ListServicesResponse>","errorExample":""}]',
      'title' => '查看服务列表',
    ),
    'UpdateService' => 
    array (
      'summary' => '更新服务。',
      'path' => '/services/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceDescription' => 
              array (
                'title' => '服务描述',
                'description' => '服务描述',
                'type' => 'string',
                'required' => false,
                'example' => '服务描述',
              ),
              'serviceName' => 
              array (
                'title' => '服务名字',
                'description' => '服务名称',
                'type' => 'string',
                'required' => false,
                'example' => '服务A',
              ),
              'serviceId' => 
              array (
                'title' => '服务ID',
                'description' => '服务ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10002000',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'escalationPlanId' => 
              array (
                'title' => '升级策略ID',
                'type' => 'integer',
                'format' => 'int64',
              ),
              'serviceGroupIdList' => 
              array (
                'title' => '服务组ID列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'integer',
                  'format' => 'int64',
                ),
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'description' => '返回结果',
                'type' => 'integer',
                'format' => 'int64',
                'example' => 'null',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'EditServiceFail',
            'errorMessage' => 'Failed to edit the service.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ServiceNotExisted',
            'errorMessage' => 'The service does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"data\\": 0\\n}","errorExample":""},{"type":"xml","example":"<UpdateServiceResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n</UpdateServiceResponse>","errorExample":""}]',
      'title' => '更新服务',
    ),
    'CreateServiceGroup' => 
    array (
      'summary' => '创建服务组。',
      'path' => '/services/group/insert',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceGroupName' => 
              array (
                'title' => '服务小组名称',
                'description' => '服务小组名称',
                'type' => 'string',
                'required' => true,
                'example' => '我的服务组',
              ),
              'userIds' => 
              array (
                'title' => '小组人员用户ID',
                'description' => '用户ID',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '用户id',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'example' => '65',
                ),
                'required' => true,
              ),
              'enableWebhook' => 
              array (
                'title' => 'ENABLE 启用 DISABLE 禁用',
                'description' => '是否开启webhook 

DISABLE关闭  
ENABLE开启',
                'type' => 'string',
                'required' => true,
                'example' => 'ENABLE',
              ),
              'webhookType' => 
              array (
                'title' => 'WEIXIN_GROUP微信 DING_GROUP钉钉 FEISHU_GROUP飞书',
                'description' => 'webhookType   WEIXIN_GROUP 微信   DING_GROUP 钉钉',
                'type' => 'string',
                'required' => true,
                'example' => 'WEIXIN_GROUP 微信群 DING_GROUP',
              ),
              'serviceGroupDescription' => 
              array (
                'title' => '服务描述',
                'description' => '服务描述',
                'type' => 'string',
                'required' => false,
                'example' => '这个是一个服务描述',
              ),
              'webhookLink' => 
              array (
                'title' => 'webhookLink',
                'description' => 'webhooklink',
                'type' => 'string',
                'required' => true,
                'example' => 'WWWWWWW',
              ),
              'monitorSourceTemplates' => 
              array (
                'title' => '监控源消息模版',
                'description' => '监控源消息模版',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '监控源消息模版',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'templateId' => 
                    array (
                      'title' => '消息模版ID',
                      'description' => '消息模版ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '111',
                    ),
                    'monitorSourceId' => 
                    array (
                      'title' => '监控源ID',
                      'description' => '监控源ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '111',
                    ),
                    'monitorSourceName' => 
                    array (
                      'title' => '监控源名字',
                      'description' => '监控源名字',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'zabbix',
                    ),
                    'templateContent' => 
                    array (
                      'title' => '模板内容',
                      'description' => '模版内容',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'xx',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'object',
                'properties' => 
                array (
                  'serviceGroupId' => 
                  array (
                    'title' => '服务组ID',
                    'description' => '服务组ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1000',
                  ),
                ),
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ServiceGroupWebHookLinkAlreadyExisted',
            'errorMessage' => 'The webhook link is already in use.',
          ),
          1 => 
          array (
            'errorCode' => 'ServiceGroupNameAlreadyExisted',
            'errorMessage' => 'The service group name is already in use.',
          ),
          2 => 
          array (
            'errorCode' => 'AddServiceGroupFail',
            'errorMessage' => 'Failed to add the service group.',
          ),
        ),
        405 => 
        array (
          0 => 
          array (
            'errorCode' => 'openFailed',
            'errorMessage' => 'open Failed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"data\\": {\\n    \\"serviceGroupId\\": 1000\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateServiceGroupResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n    <data>\\n        <serviceGroupId>1000</serviceGroupId>\\n    </data>\\n</CreateServiceGroupResponse>","errorExample":""}]',
      'title' => '创建服务组',
    ),
    'CreateServiceGroupScheduling' => 
    array (
      'summary' => '新增服务组排班。',
      'path' => '/services/group/scheduling/save',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1000',
              ),
              'schedulingWay' => 
              array (
                'title' => '排班方式 FAST 快速排班 FINE  精细排班',
                'description' => '排班方式 FAST 快速排班 FINE  精细排班',
                'type' => 'string',
                'required' => true,
                'example' => 'FAST',
              ),
              'fastScheduling' => 
              array (
                'title' => '快速排班',
                'description' => '快速排班',
                'type' => 'object',
                'properties' => 
                array (
                  'singleDuration' => 
                  array (
                    'title' => '每人排班时长',
                    'description' => '每人排班时长',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '12',
                  ),
                  'dutyPlan' => 
                  array (
                    'title' => '值班方案 dutyPlan FAST_CHOICE 快速选择   CUSTOM  自定义',
                    'description' => '值班方案 dutyPlan FAST_CHOICE 快速选择   CUSTOM  自定义',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'FAST_CHOICE',
                  ),
                  'singleDurationUnit' => 
                  array (
                    'title' => '每人排班时常单位 HOUR 小时 DAY  天',
                    'description' => '每人排班时长单位 HOUR 小时 DAY 天',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'DAY',
                  ),
                  'schedulingUsers' => 
                  array (
                    'title' => '快速轮班用户',
                    'description' => '快速轮班用户',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '快速轮班用户',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'schedulingUserId' => 
                        array (
                          'title' => '轮班用户ID',
                          'description' => '轮班用户ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'required' => false,
                          'example' => '6666',
                        ),
                        'schedulingOrder' => 
                        array (
                          'title' => '排班顺序',
                          'description' => '排班顺序',
                          'type' => 'integer',
                          'format' => 'int64',
                          'required' => false,
                          'example' => '1',
                        ),
                        'schedulingObjectType' => 
                        array (
                          'title' => '排班对象类型',
                          'type' => 'string',
                        ),
                        'schedulingUserIdList' => 
                        array (
                          'title' => '多人排班时，人员Id',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int64',
                          ),
                        ),
                      ),
                      'required' => false,
                    ),
                    'required' => false,
                  ),
                ),
                'required' => false,
                'example' => '12',
              ),
              'fineScheduling' => 
              array (
                'title' => '精细排班',
                'description' => '精细排班',
                'type' => 'object',
                'properties' => 
                array (
                  'period' => 
                  array (
                    'title' => '循环周期',
                    'description' => '循环周期',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '1',
                  ),
                  'periodUnit' => 
                  array (
                    'title' => '循环周期单位 HOUR 小时 DAY  天',
                    'description' => '循环周期单位 HOUR 小时 DAY 天 ',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'DAY',
                  ),
                  'shiftType' => 
                  array (
                    'title' => '班次类型 MORNING_NIGHT 早晚班 MORNING_NOON_NIGHT 早中晚班 CUSTOM 自定义',
                    'description' => '班次类型 MORNING_NIGHT 早晚班 MORNING_NOON_NIGHT 早中晚班 CUSTOM 自定义',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'MORNING_NIGHT',
                  ),
                  'schedulingFineShifts' => 
                  array (
                    'title' => '精细排班信息表',
                    'description' => '精细排班班次人员信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '班次信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'schedulingStartTime' => 
                        array (
                          'title' => '排班开始时间',
                          'description' => '排班开始时间',
                          'type' => 'string',
                          'required' => false,
                          'example' => '2020-08-13',
                        ),
                        'schedulingEndTime' => 
                        array (
                          'title' => '排班结束时间',
                          'description' => '排班结束时间',
                          'type' => 'string',
                          'required' => false,
                          'example' => '2020-10-13',
                        ),
                        'schedulingOrder' => 
                        array (
                          'title' => '排班顺序',
                          'description' => '排班顺序',
                          'type' => 'integer',
                          'format' => 'int32',
                          'required' => false,
                          'example' => '1',
                        ),
                        'skipOneDay' => 
                        array (
                          'title' => '是否跨天',
                          'description' => '是否跨天',
                          'type' => 'boolean',
                          'required' => false,
                          'example' => 'fasle',
                        ),
                        'cycleOrder' => 
                        array (
                          'title' => '循环次序',
                          'description' => '循环次序',
                          'type' => 'integer',
                          'format' => 'int32',
                          'required' => false,
                          'example' => '1',
                        ),
                        'shiftName' => 
                        array (
                          'title' => '班次名称',
                          'description' => '班次名称',
                          'type' => 'string',
                          'required' => false,
                          'example' => '早班',
                        ),
                        'schedulingUserId' => 
                        array (
                          'title' => '排班用户ID',
                          'description' => '排班用户ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'required' => false,
                          'example' => '11',
                        ),
                        'schedulingObjectType' => 
                        array (
                          'title' => '排班对象类型',
                          'type' => 'string',
                        ),
                        'schedulingUserIdList' => 
                        array (
                          'title' => '多人排班时，人员Id',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int64',
                          ),
                        ),
                      ),
                      'required' => false,
                    ),
                    'required' => false,
                  ),
                  'schedulingTemplateFineShifts' => 
                  array (
                    'title' => '精细排班模版',
                    'description' => '精细排班模版',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '精细排班模版',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'schedulingStartTime' => 
                        array (
                          'title' => '排班开始时间',
                          'description' => '排班开始时间',
                          'type' => 'string',
                          'required' => false,
                          'example' => '2021-09-01 08:00:00',
                        ),
                        'schedulingEndTime' => 
                        array (
                          'title' => '排班结束时间',
                          'description' => '排班结束时间',
                          'type' => 'string',
                          'required' => false,
                          'example' => '2021-10-01 08:00:00',
                        ),
                        'schedulingOrder' => 
                        array (
                          'title' => '排班顺序',
                          'description' => '排班顺序',
                          'type' => 'integer',
                          'format' => 'int64',
                          'required' => false,
                          'example' => '1',
                        ),
                        'schedulingUserId' => 
                        array (
                          'title' => '用户ID',
                          'description' => '排班用户ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'required' => false,
                          'example' => '1',
                        ),
                        'schedulingUserName' => 
                        array (
                          'title' => '用户名字',
                          'description' => '排班用户名字',
                          'type' => 'string',
                          'required' => false,
                          'example' => '刘德化',
                        ),
                        'skipOneDay' => 
                        array (
                          'title' => '是否跨天',
                          'description' => '是否跨天',
                          'type' => 'boolean',
                          'required' => false,
                          'example' => 'false',
                        ),
                        'schedulingObjectType' => 
                        array (
                          'title' => '排班对象类型',
                          'type' => 'string',
                        ),
                        'schedulingUserIdList' => 
                        array (
                          'title' => '多人排班时，人员Id',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int64',
                          ),
                        ),
                      ),
                      'required' => false,
                    ),
                    'required' => false,
                  ),
                ),
                'required' => false,
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxxxxxxx',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxxxxxxx\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateServiceGroupSchedulingResponse>\\n    <requestId>xxxxxxxxxx</requestId>\\n</CreateServiceGroupSchedulingResponse>","errorExample":""}]',
      'title' => '新增服务组排班',
    ),
    'DeleteServiceGroup' => 
    array (
      'summary' => '删除服务组。',
      'path' => '/services/group/delete',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1000',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DeleteServiceGroupFail',
            'errorMessage' => 'Failed to delete the service group.',
          ),
          1 => 
          array (
            'errorCode' => 'ServiceGroupNotExisted',
            'errorMessage' => 'The service group does not exist.',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'ServiceGroupNotExisted',
            'errorMessage' => 'The service group does not exist.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'DeleteServiceGroupFail',
            'errorMessage' => 'The service group has been associated with escalationPlan.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteServiceGroupResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n</DeleteServiceGroupResponse>","errorExample":""}]',
      'title' => '删除服务组',
    ),
    'DeleteServiceGroupUser' => 
    array (
      'summary' => '删除服务组人员。',
      'path' => '/services/group/deleteServiceGroupUser',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '66666',
              ),
              'oldUserId' => 
              array (
                'title' => '老的用户ID',
                'description' => '老的用户ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '777777',
              ),
              'newUserId' => 
              array (
                'title' => '新的用户',
                'description' => '新的用户',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '88888',
              ),
              'removeUser' => 
              array (
                'title' => '删除服务组成员',
                'description' => '删除服务组成员',
                'type' => 'boolean',
                'required' => false,
                'example' => 'true',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'xxxxxx',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxxx',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxxx\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteServiceGroupUserResponse>\\n    <requestId>xxxxxx</requestId>\\n</DeleteServiceGroupUserResponse>","errorExample":""}]',
      'title' => '删除服务组人员',
    ),
    'GetServiceGroup' => 
    array (
      'summary' => '查看服务组详情。',
      'path' => '/services/group/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '2323232',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'description' => '返回结果',
                'type' => 'object',
                'properties' => 
                array (
                  'updateTime' => 
                  array (
                    'title' => '修改时间',
                    'description' => '修改时间',
                    'type' => 'string',
                    'example' => '2020-05-03 15:39:39',
                  ),
                  'users' => 
                  array (
                    'title' => '用户ID',
                    'description' => '用户ID数组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '用户ID',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'userId' => 
                        array (
                          'title' => '用户ID',
                          'description' => '用户ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '10',
                        ),
                        'userName' => 
                        array (
                          'title' => '用户名字',
                          'description' => '用户名字',
                          'type' => 'string',
                          'example' => 'jack',
                        ),
                        'phone' => 
                        array (
                          'title' => '手机号',
                          'description' => '手机号',
                          'type' => 'string',
                          'example' => '1390000****',
                        ),
                        'serviceGroupId' => 
                        array (
                          'title' => '服务组ID',
                          'description' => '服务组ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'roleNameList' => 
                        array (
                          'title' => '角色列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'title' => '角色名称',
                            'type' => 'string',
                            'example' => '测试',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'serviceGroupDescription' => 
                  array (
                    'title' => '服务组描述',
                    'description' => '服务组描述',
                    'type' => 'string',
                    'example' => '服务描述',
                  ),
                  'webhookLink' => 
                  array (
                    'title' => 'webhook 跳转地址',
                    'description' => 'webhook 跳转地址',
                    'type' => 'string',
                    'example' => 'wwwwwww',
                  ),
                  'webhookType' => 
                  array (
                    'title' => 'WEIXIN_GROUP 微信 DING_GROUP 钉钉 FEISHU_GROUP飞书',
                    'description' => 'webhook类型 WEIXIN_GROUP 企微群  DING_GROUP钉钉群',
                    'type' => 'string',
                    'example' => 'WEIXIN_GROUP',
                  ),
                  'enableWebhook' => 
                  array (
                    'title' => 'ENABLE 启用 DISABLE 禁用',
                    'description' => 'ENABLE 启用 DISABLE 禁用',
                    'type' => 'string',
                    'example' => 'ENABLE',
                  ),
                  'serviceGroupName' => 
                  array (
                    'title' => '服务组名称',
                    'description' => '服务组名称',
                    'type' => 'string',
                    'example' => '冲上云霄',
                  ),
                  'serviceGroupId' => 
                  array (
                    'title' => '服务组ID',
                    'description' => '服务组ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1000',
                  ),
                  'createTime' => 
                  array (
                    'title' => '创建时间',
                    'description' => '创建时间',
                    'type' => 'string',
                    'example' => '2020-08-08 10:00:00',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ServiceGroupNotExisted',
            'errorMessage' => 'The service group does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"data\\": {\\n    \\"updateTime\\": \\"2020-05-03 15:39:39\\",\\n    \\"users\\": [\\n      {\\n        \\"userId\\": 10,\\n        \\"userName\\": \\"jack\\",\\n        \\"phone\\": \\"1390000****\\",\\n        \\"serviceGroupId\\": 1\\n      }\\n    ],\\n    \\"serviceGroupDescription\\": \\"服务描述\\",\\n    \\"webhookLink\\": \\"wwwwwww\\",\\n    \\"webhookType\\": \\"WEIXIN_GROUP\\",\\n    \\"enableWebhook\\": \\"ENABLE\\",\\n    \\"serviceGroupName\\": \\"冲上云霄\\",\\n    \\"serviceGroupId\\": 1000,\\n    \\"createTime\\": \\"2020-08-08 10:00:00\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetServiceGroupResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n    <data>\\n        <updateTime>2020-05-03 15:39:39</updateTime>\\n        <users>\\n            <userId>10</userId>\\n            <userName>jack</userName>\\n            <phone>1390000****</phone>\\n            <serviceGroupId>1</serviceGroupId>\\n        </users>\\n        <serviceGroupDescription>服务描述</serviceGroupDescription>\\n        <webhookLink>wwwwwww</webhookLink>\\n        <webhookType>WEIXIN_GROUP</webhookType>\\n        <enableWebhook>ENABLE</enableWebhook>\\n        <serviceGroupName>冲上云霄</serviceGroupName>\\n        <serviceGroupId>1000</serviceGroupId>\\n        <createTime>2020-08-08 10:00:00</createTime>\\n    </data>\\n</GetServiceGroupResponse>","errorExample":""}]',
      'title' => '查看服务组详情',
    ),
    'GetServiceGroupPersonScheduling' => 
    array (
      'summary' => '查询某用户服务组排班。',
      'path' => '/services/group/scheduling/user/getScheduling',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'userId' => 
              array (
                'title' => '用户ID',
                'description' => '用户ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '66666',
              ),
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '77777',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'startTime' => 
              array (
                'title' => '排班开始时间',
                'description' => '排班开始时间',
                'type' => 'string',
                'required' => false,
                'example' => '2020-09-01 00:00:00',
              ),
              'endTime' => 
              array (
                'title' => '排班结束时间',
                'description' => '排班结束时间',
                'type' => 'string',
                'required' => false,
                'example' => '2020-09-31 00:00:00',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxx',
              ),
              'data' => 
              array (
                'title' => '排班日历',
                'description' => '排班日历',
                'type' => 'object',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxx\\",\\n  \\"data\\": {\\n    \\"test\\": \\"test\\",\\n    \\"test2\\": 1\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetServiceGroupPersonSchedulingResponse>\\n    <requestId>xxxxx</requestId>\\n</GetServiceGroupPersonSchedulingResponse>","errorExample":""}]',
      'title' => '查询某用户服务组排班',
    ),
    'GetServiceGroupScheduling' => 
    array (
      'summary' => '查询服务组排班详情。',
      'path' => '/services/group/scheduling/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '9999',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxxxxxxxxx',
              ),
              'data' => 
              array (
                'title' => '排班详情',
                'description' => '排班详情',
                'type' => 'object',
                'properties' => 
                array (
                  'schedulingWay' => 
                  array (
                    'title' => '排班方式 FAST 快速排班 FINE 精细排班',
                    'description' => '排班方式 FAST 快速排班 FINE 精细排班',
                    'type' => 'string',
                    'example' => 'FINE',
                  ),
                  'serviceGroupId' => 
                  array (
                    'title' => '服务组ID',
                    'description' => '服务组ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '99999',
                  ),
                  'fastScheduling' => 
                  array (
                    'title' => '快速排班',
                    'description' => '快速排班',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'singleDuration' => 
                      array (
                        'title' => '每人排班时长',
                        'description' => '每人排班时长',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '12',
                      ),
                      'dutyPlan' => 
                      array (
                        'title' => '值班方案 dutyPlan FAST_CHOICE 快速选择   CUSTOM  自定义',
                        'description' => '值班方案 dutyPlan FAST_CHOICE 快速选择   CUSTOM  自定义',
                        'type' => 'string',
                        'example' => 'FAST_CHOICE',
                      ),
                      'singleDurationUnit' => 
                      array (
                        'title' => '每人排班时长单位 HOUR 小时 DAY 天',
                        'description' => '每人排班时长单位 HOUR 小时 DAY 天',
                        'type' => 'string',
                        'example' => 'DAY',
                      ),
                      'schedulingUsers' => 
                      array (
                        'title' => '快速轮班用户',
                        'description' => '快速轮班用户',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '快速排班用户',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'schedulingUserId' => 
                            array (
                              'title' => '轮班用户ID',
                              'description' => '轮班用户ID',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '66666',
                            ),
                            'schedulingOrder' => 
                            array (
                              'title' => '排班顺序',
                              'description' => '排班顺序',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'schedulingUserName' => 
                            array (
                              'title' => '轮班用户名字',
                              'description' => '轮班用户名字',
                              'type' => 'string',
                              'example' => '张杰',
                            ),
                            'schedulingUserIdList' => 
                            array (
                              'title' => '多人排班时，人员Id',
                              'description' => '多人排班时，人员Id',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '用户ID',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '66666',
                              ),
                            ),
                            'schedulingObjectType' => 
                            array (
                              'title' => '排班对象类型',
                              'description' => '排班对象类型',
                              'type' => 'string',
                              'example' => 'single',
                            ),
                          ),
                        ),
                      ),
                      'id' => 
                      array (
                        'title' => '快速排班ID',
                        'description' => '快速排班ID',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '2222',
                      ),
                    ),
                  ),
                  'fineScheduling' => 
                  array (
                    'title' => '精细排班',
                    'description' => '精细排班',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'period' => 
                      array (
                        'title' => '1',
                        'description' => '1',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '循环周期',
                      ),
                      'id' => 
                      array (
                        'title' => '1',
                        'description' => '1',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '精细排班ID',
                      ),
                      'periodUnit' => 
                      array (
                        'title' => '循环周期单位 HOUR 小时 DAY 天',
                        'description' => '循环周期单位 HOUR 小时 DAY 天',
                        'type' => 'string',
                        'example' => 'DAY',
                      ),
                      'shiftType' => 
                      array (
                        'title' => '班次类型 MORNING_NIGHT 早晚班 MORNING_NOON_NIGHT 早中晚班 CUSTOM 自定义',
                        'description' => '班次类型 MORNING_NIGHT 早晚班 MORNING_NOON_NIGHT 早中晚班 CUSTOM 自定义',
                        'type' => 'string',
                        'example' => 'MORNING_NIGHT',
                      ),
                      'schedulingFineShifts' => 
                      array (
                        'title' => '精细排班班次人员信息',
                        'description' => '精细排班班次人员信息',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '精细排班',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'schedulingStartTime' => 
                            array (
                              'title' => '排班开始时间',
                              'description' => '排班开始时间',
                              'type' => 'string',
                              'example' => '2020-08-13',
                            ),
                            'schedulingEndTime' => 
                            array (
                              'title' => '排班结束时间',
                              'description' => '排班结束时间',
                              'type' => 'string',
                              'example' => '2020-10-13',
                            ),
                            'schedulingOrder' => 
                            array (
                              'title' => '排班顺序',
                              'description' => '排班顺序',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'shiftName' => 
                            array (
                              'title' => '班次名称',
                              'description' => '班次名称',
                              'type' => 'string',
                              'example' => '早班',
                            ),
                            'cycleOrder' => 
                            array (
                              'title' => '循环次序',
                              'description' => '循环次序',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1',
                            ),
                            'schedulingUserId' => 
                            array (
                              'title' => '排班用户ID',
                              'description' => '排班用户ID',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1111',
                            ),
                            'skipOneDay' => 
                            array (
                              'title' => '是否跨天',
                              'description' => '是否跨天',
                              'type' => 'boolean',
                              'example' => 'false',
                            ),
                            'schedulingUserName' => 
                            array (
                              'title' => '排班用户名字',
                              'description' => '排班用户名字',
                              'type' => 'string',
                              'example' => '刘德华',
                            ),
                            'schedulingUserIdList' => 
                            array (
                              'title' => '多人排班时，人员Id',
                              'description' => '多人排班时，人员Id',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '用户ID',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '66666',
                              ),
                            ),
                            'schedulingObjectType' => 
                            array (
                              'description' => '任务调度类型',
                              'type' => 'string',
                              'example' => 'single',
                            ),
                          ),
                        ),
                      ),
                      'schedulingTemplateFineShifts' => 
                      array (
                        'title' => '精细排班模版',
                        'description' => '精细排班模版',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '精细排班模版',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'schedulingStartTime' => 
                            array (
                              'title' => '排班开始时间',
                              'description' => '排班开始时间',
                              'type' => 'string',
                              'example' => '2021-09-01 00:00:00',
                            ),
                            'schedulingEndTime' => 
                            array (
                              'title' => '排班结束时间',
                              'description' => '排班结束时间',
                              'type' => 'string',
                              'example' => '2021-10-01 00:00:00',
                            ),
                            'schedulingOrder' => 
                            array (
                              'title' => '排班顺序',
                              'description' => '排班顺序',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1',
                            ),
                            'schedulingUserId' => 
                            array (
                              'title' => '用户ID',
                              'description' => '用户ID',
                              'type' => 'string',
                              'example' => '1',
                            ),
                            'skipOneDay' => 
                            array (
                              'title' => '是否跨天',
                              'description' => '是否跨天',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                            'schedulingUserName' => 
                            array (
                              'title' => '排班用户名字',
                              'description' => '排班用户名字',
                              'type' => 'string',
                              'example' => '刘德华',
                            ),
                            'shiftName' => 
                            array (
                              'title' => '班次名称',
                              'description' => '班次名称',
                              'type' => 'string',
                              'example' => '早班',
                            ),
                            'schedulingUserIdList' => 
                            array (
                              'title' => '多人排班时，人员Id',
                              'description' => '多人排班时，人员Id',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '用户ID',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '66666',
                              ),
                            ),
                            'schedulingObjectType' => 
                            array (
                              'description' => '任务调度类型',
                              'type' => 'string',
                              'example' => 'single',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'users' => 
                  array (
                    'title' => '已经排班',
                    'description' => '已经排班',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '已经排班用户',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'userId' => 
                        array (
                          'title' => '用户ID',
                          'description' => '66666',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '用户ID',
                        ),
                        'userName' => 
                        array (
                          'title' => '用户名字',
                          'description' => '用户名字',
                          'type' => 'string',
                          'example' => '用户名字',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified Resource is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxxxxxxxxx\\",\\n  \\"data\\": {\\n    \\"schedulingWay\\": \\"FINE\\",\\n    \\"serviceGroupId\\": 99999,\\n    \\"fastScheduling\\": {\\n      \\"singleDuration\\": 12,\\n      \\"dutyPlan\\": \\"FAST_CHOICE\\",\\n      \\"singleDurationUnit\\": \\"DAY\\",\\n      \\"schedulingUsers\\": [\\n        {\\n          \\"schedulingUserId\\": 66666,\\n          \\"schedulingOrder\\": 1,\\n          \\"schedulingUserName\\": \\"张杰\\",\\n          \\"schedulingUserIdList\\": [\\n            66666\\n          ],\\n          \\"schedulingObjectType\\": \\"single\\"\\n        }\\n      ],\\n      \\"id\\": 2222\\n    },\\n    \\"fineScheduling\\": {\\n      \\"period\\": 0,\\n      \\"id\\": 0,\\n      \\"periodUnit\\": \\"DAY\\",\\n      \\"shiftType\\": \\"MORNING_NIGHT\\",\\n      \\"schedulingFineShifts\\": [\\n        {\\n          \\"schedulingStartTime\\": \\"2020-08-13\\",\\n          \\"schedulingEndTime\\": \\"2020-10-13\\",\\n          \\"schedulingOrder\\": 1,\\n          \\"shiftName\\": \\"早班\\",\\n          \\"cycleOrder\\": 1,\\n          \\"schedulingUserId\\": 1111,\\n          \\"skipOneDay\\": false,\\n          \\"schedulingUserName\\": \\"刘德华\\",\\n          \\"schedulingUserIdList\\": [\\n            66666\\n          ],\\n          \\"schedulingObjectType\\": \\"single\\"\\n        }\\n      ],\\n      \\"schedulingTemplateFineShifts\\": [\\n        {\\n          \\"schedulingStartTime\\": \\"2021-09-01 00:00:00\\",\\n          \\"schedulingEndTime\\": \\"2021-10-01 00:00:00\\",\\n          \\"schedulingOrder\\": 1,\\n          \\"schedulingUserId\\": \\"1\\",\\n          \\"skipOneDay\\": true,\\n          \\"schedulingUserName\\": \\"刘德华\\",\\n          \\"shiftName\\": \\"早班\\",\\n          \\"schedulingUserIdList\\": [\\n            66666\\n          ],\\n          \\"schedulingObjectType\\": \\"single\\"\\n        }\\n      ]\\n    },\\n    \\"users\\": [\\n      {\\n        \\"userId\\": 0,\\n        \\"userName\\": \\"用户名字\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetServiceGroupSchedulingResponse>\\n    <requestId>xxxxxxxxxxxx</requestId>\\n    <data>\\n        <schedulingWay>FINE</schedulingWay>\\n        <serviceGroupId>99999</serviceGroupId>\\n        <fastScheduling>\\n            <singleDuration>12</singleDuration>\\n            <dutyPlan>FAST_CHOICE</dutyPlan>\\n            <singleDurationUnit>DAY</singleDurationUnit>\\n            <schedulingUsers>\\n                <schedulingUserId>66666</schedulingUserId>\\n                <schedulingOrder>1</schedulingOrder>\\n                <schedulingUserName>张杰</schedulingUserName>\\n            </schedulingUsers>\\n            <id>2222</id>\\n        </fastScheduling>\\n        <fineScheduling>\\n            <periodUnit>DAY</periodUnit>\\n            <shiftType>MORNING_NIGHT</shiftType>\\n            <schedulingFineShifts>\\n                <schedulingStartTime>2020-08-13</schedulingStartTime>\\n                <schedulingEndTime>2020-10-13</schedulingEndTime>\\n                <schedulingOrder>1</schedulingOrder>\\n                <shiftName>早班</shiftName>\\n                <cycleOrder>1</cycleOrder>\\n                <schedulingUserId>1111</schedulingUserId>\\n                <skipOneDay>false</skipOneDay>\\n                <schedulingUserName>刘德华</schedulingUserName>\\n            </schedulingFineShifts>\\n            <schedulingTemplateFineShifts>\\n                <schedulingStartTime>2021-09-01 00:00:00</schedulingStartTime>\\n                <schedulingEndTime>2021-10-01 00:00:00</schedulingEndTime>\\n                <schedulingOrder>1</schedulingOrder>\\n                <schedulingUserId>1</schedulingUserId>\\n                <skipOneDay>true</skipOneDay>\\n                <schedulingUserName>刘德华</schedulingUserName>\\n                <shiftName>早班</shiftName>\\n            </schedulingTemplateFineShifts>\\n        </fineScheduling>\\n        <users>\\n            <userName>用户名字</userName>\\n        </users>\\n    </data>\\n</GetServiceGroupSchedulingResponse>","errorExample":""}]',
      'title' => '查询服务组排班详情',
    ),
    'GetServiceGroupSchedulingPreview' => 
    array (
      'summary' => '预览服务组排班。',
      'path' => '/services/group/scheduling/preview',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '55555',
              ),
              'schedulingWay' => 
              array (
                'title' => '排班方式 FAST 快速排班 FINE 精细排班',
                'description' => '排班方式 FAST 快速排班 FINE 精细排班',
                'type' => 'string',
                'required' => true,
                'example' => 'FAST',
              ),
              'fastScheduling' => 
              array (
                'title' => '快速排班',
                'description' => '快速排班',
                'type' => 'object',
                'properties' => 
                array (
                  'singleDuration' => 
                  array (
                    'title' => '每人排班时长',
                    'description' => '每人排班时长',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '12',
                  ),
                  'dutyPlan' => 
                  array (
                    'title' => '值班方案 dutyPlan FAST_CHOICE 快速选择 CUSTOM 自定义',
                    'description' => 'FAST_CHOICE',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'FAST_CHOICE',
                  ),
                  'singleDurationUnit' => 
                  array (
                    'title' => '每人排班时长单位 HOUR 小时 DAY 天',
                    'description' => 'DAY',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'DAY',
                  ),
                  'schedulingUsers' => 
                  array (
                    'title' => '快速轮班用户',
                    'description' => '快速轮班用户',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '快速轮班用户',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'schedulingUserId' => 
                        array (
                          'title' => '轮班用户ID',
                          'description' => '轮班用户ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'required' => false,
                          'example' => '122222',
                        ),
                        'schedulingOrder' => 
                        array (
                          'title' => '排班顺序',
                          'description' => '排班顺序',
                          'type' => 'integer',
                          'format' => 'int32',
                          'required' => false,
                          'example' => '1',
                        ),
                      ),
                      'required' => false,
                    ),
                    'required' => false,
                  ),
                ),
                'required' => false,
              ),
              'fineScheduling' => 
              array (
                'title' => '精细排',
                'description' => '精细排班',
                'type' => 'object',
                'properties' => 
                array (
                  'period' => 
                  array (
                    'title' => '循环周期',
                    'description' => '循环周期',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '2',
                  ),
                  'periodUnit' => 
                  array (
                    'title' => '循环周期单位 HOUR 小时 DAY 天',
                    'description' => '循环周期单位 HOUR 小时 DAY 天 ',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'DAY',
                  ),
                  'shiftType' => 
                  array (
                    'title' => '班次类型 MORNING_NIGHT 早晚班 MORNING_NOON_NIGHT 早中晚班 CUSTOM 自定义',
                    'description' => '班次类型 MORNING_NIGHT 早晚班 MORNING_NOON_NIGHT 早中晚班 CUSTOM 自定义',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'MORNING_NIGHT',
                  ),
                  'schedulingFineShifts' => 
                  array (
                    'title' => '精细排班班次人员信息',
                    'description' => '精细排班班次人员信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '精细排班班次人员信息',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'schedulingStartTime' => 
                        array (
                          'title' => '排班开始时间',
                          'description' => '排班开始时间',
                          'type' => 'string',
                          'required' => false,
                          'example' => '2020-08-13',
                        ),
                        'schedulingEndTime' => 
                        array (
                          'title' => '排班结束时间',
                          'description' => '排班结束时间',
                          'type' => 'string',
                          'required' => false,
                          'example' => '2020-10-13',
                        ),
                        'schedulingOrder' => 
                        array (
                          'title' => '排班顺序',
                          'description' => '排班顺序',
                          'type' => 'integer',
                          'format' => 'int64',
                          'required' => false,
                          'example' => '1',
                        ),
                        'shiftName' => 
                        array (
                          'title' => '班次名称',
                          'description' => '班次名称',
                          'type' => 'string',
                          'required' => false,
                          'example' => '早班',
                        ),
                      ),
                      'required' => false,
                    ),
                    'required' => false,
                  ),
                ),
                'required' => false,
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'endTime' => 
              array (
                'title' => '排班结束时间',
                'description' => '预览值班开始时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-09-01 00:00:00',
              ),
              'startTime' => 
              array (
                'title' => '排班开始时间',
                'description' => '预览值班结束时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-11-01 00:00:00',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxxxxxx',
              ),
              'data' => 
              array (
                'title' => '服务组排班信息',
                'description' => '服务组日期',
                'type' => 'object',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is not valid. %s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxxxxxx\\",\\n  \\"data\\": {\\n    \\"test\\": \\"test\\",\\n    \\"test2\\": 1\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetServiceGroupSchedulingPreviewResponse>\\n    <requestId>xxxxxxxxx</requestId>\\n</GetServiceGroupSchedulingPreviewResponse>","errorExample":""}]',
      'title' => '预览服务组排班',
    ),
    'GetServiceGroupSpecialPersonScheduling' => 
    array (
      'summary' => '查询指定人员的服务组排班。',
      'path' => '/services/group/scheduling/getUserScheduling',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'userId' => 
              array (
                'title' => '用户ID',
                'description' => '用户ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '66666',
              ),
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '77777',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxxx',
              ),
              'data' => 
              array (
                'title' => '人员排班信息',
                'description' => '人员排班信息',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '排班信息',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'schedulingStartTime' => 
                    array (
                      'title' => '排班开始时间',
                      'description' => '排班开始时间',
                      'type' => 'string',
                      'example' => '2021-08-17  00:00:00',
                    ),
                    'schedulingEndTime' => 
                    array (
                      'title' => '排班结束时间',
                      'description' => '排班结束时间',
                      'type' => 'string',
                      'example' => '2021-08-17  12:00:00',
                    ),
                    'schedulingDate' => 
                    array (
                      'title' => '排班日期',
                      'description' => '排班日期',
                      'type' => 'string',
                      'example' => '2021-08-17',
                    ),
                    'serviceGroupId' => 
                    array (
                      'title' => '服务组id',
                      'description' => '服务组id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '8888',
                    ),
                    'serviceGroupName' => 
                    array (
                      'title' => '服务组名字',
                      'description' => '服务组名字',
                      'type' => 'string',
                      'example' => '雪豹突击队',
                    ),
                    'schedulingUserId' => 
                    array (
                      'title' => '排班用户ID',
                      'description' => '排班用户ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '111111',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxxx\\",\\n  \\"data\\": [\\n    {\\n      \\"schedulingStartTime\\": \\"2021-08-17  00:00:00\\",\\n      \\"schedulingEndTime\\": \\"2021-08-17  12:00:00\\",\\n      \\"schedulingDate\\": \\"2021-08-17\\",\\n      \\"serviceGroupId\\": 8888,\\n      \\"serviceGroupName\\": \\"雪豹突击队\\",\\n      \\"schedulingUserId\\": 111111\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<GetServiceGroupSpecialPersonSchedulingResponse>\\n    <requestId>xxxxxx</requestId>\\n    <data>\\n        <schedulingStartTime>2021-08-17  00:00:00</schedulingStartTime>\\n        <schedulingEndTime>2021-08-17  12:00:00</schedulingEndTime>\\n        <schedulingDate>2021-08-17</schedulingDate>\\n        <serviceGroupId>8888</serviceGroupId>\\n        <serviceGroupName>雪豹突击队</serviceGroupName>\\n        <schedulingUserId>111111</schedulingUserId>\\n    </data>\\n</GetServiceGroupSpecialPersonSchedulingResponse>","errorExample":""}]',
      'title' => '查询指定人员的服务组排班',
      'requestParamsDescription' => '{
  "userId" : 66666,
  "serviceGroupId" : 77777,
  "clientToken" : "C4BE3837-1A13-413B-A225-2C88188E8A43",
  "startTime" : "2020-09-01 00:00:00",
  "endTime" : "2020-09-31 23:59:59"
}
',
      'responseParamsDescription' => '{
    "requestId": "xxxxxx",
    "data": [
        {
            "schedulingStartTime": "2021-08-17  00:00:00",
            "schedulingEndTime": "2021-08-17  12:00:00",
            "schedulingDate": "2021-08-17",
            "serviceGroupId": 8888,
            "serviceGroupName": "雪豹突击队",
            "schedulingUserId": 111111
        }
    ]
}',
    ),
    'ListServiceGroups' => 
    array (
      'summary' => '查询服务组列表。',
      'path' => '/services/group/list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'queryName' => 
              array (
                'title' => '搜索名称',
                'description' => '搜索名称',
                'type' => 'string',
                'required' => false,
                'example' => '王宇',
              ),
              'queryType' => 
              array (
                'title' => '搜索类型。USER用户 SERVICEGROUP服务组',
                'description' => '搜索类型 USER用户 SERVICEGROUP服务组',
                'type' => 'string',
                'required' => false,
                'example' => 'USER',
              ),
              'pageNumber' => 
              array (
                'title' => '当前页',
                'description' => '当前页',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '页大小',
                'description' => '页大小',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'isScheduled' => 
              array (
                'title' => '是否已经排班',
                'description' => '是否排过班',
                'type' => 'boolean',
                'required' => false,
                'example' => 'false',
              ),
              'orderByScheduleStatus' => 
              array (
                'title' => '是否根据排班状态排序',
                'description' => '订单状态',
                'type' => 'boolean',
                'required' => false,
                'example' => 'false',
              ),
              'userId' => 
              array (
                'title' => '用户ID',
                'description' => '用户ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '100000',
              ),
              'serviceId' => 
              array (
                'title' => '服务的查询',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'sssss',
              ),
              'data' => 
              array (
                'title' => '服务组列表',
                'description' => '服务组列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '服务组列表',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'serviceGroupId' => 
                    array (
                      'title' => '服务组ID',
                      'description' => '服务组ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'isScheduled' => 
                    array (
                      'title' => '是否已经排班',
                      'description' => '是否已经排班',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'serviceGroupName' => 
                    array (
                      'title' => '服务组名字',
                      'description' => '服务组名字',
                      'type' => 'string',
                      'example' => '我的服务组',
                    ),
                    'serviceGroupDescription' => 
                    array (
                      'title' => '服务组描述',
                      'description' => '服务组描述',
                      'type' => 'string',
                      'example' => '服务组描述',
                    ),
                    'updateTime' => 
                    array (
                      'title' => '修改时间',
                      'description' => '修改时间',
                      'type' => 'string',
                      'example' => '2020-08-09 15:50:30',
                    ),
                    'enableWebhook' => 
                    array (
                      'title' => 'ENABLE 启用 DISABLE 禁用',
                      'description' => 'ENABLE 启用 DISABLE 禁用',
                      'type' => 'string',
                      'example' => 'ENABLE',
                    ),
                    'webhookType' => 
                    array (
                      'title' => 'WEIXIN_GROUP微信DING_GROUP钉钉FEISHU_GROUP飞书',
                      'description' => 'WEIXIN_GROUP 微信 DING_GROUP 钉钉' . "\0" . '',
                      'type' => 'string',
                      'example' => 'WEIXIN_GROUP',
                    ),
                    'webhookLink' => 
                    array (
                      'title' => 'webhook 跳转地址',
                      'description' => 'webhook 跳转地址',
                      'type' => 'string',
                      'example' => 'wwwwwwwwww',
                    ),
                    'users' => 
                    array (
                      'title' => '服务组用户列表',
                      'description' => '服务组用户列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '用户',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'userId' => 
                          array (
                            'title' => '用户ID',
                            'description' => '用户ID',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '10',
                          ),
                          'userName' => 
                          array (
                            'title' => '用户名字',
                            'description' => '用户名字',
                            'type' => 'string',
                            'example' => 'jack',
                          ),
                          'serviceGroupId' => 
                          array (
                            'title' => '服务组ID',
                            'description' => '服务组ID',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '1',
                          ),
                          'phone' => 
                          array (
                            'title' => '手机号',
                            'description' => '手机号',
                            'type' => 'string',
                            'example' => '1390000****',
                          ),
                          'email' => 
                          array (
                            'title' => '邮箱',
                            'description' => '邮箱',
                            'type' => 'string',
                            'example' => 'wy930***@163.com',
                          ),
                          'isRelated' => 
                          array (
                            'description' => '用户是否关联了移动APP1:是 0:否',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '1',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'pageNumber' => 
              array (
                'title' => '当前页',
                'description' => '当前页',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '分页大小',
                'description' => '分页大小',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'totalCount' => 
              array (
                'title' => '总条数',
                'description' => '总条数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"sssss\\",\\n  \\"data\\": [\\n    {\\n      \\"serviceGroupId\\": 1,\\n      \\"isScheduled\\": true,\\n      \\"serviceGroupName\\": \\"我的服务组\\",\\n      \\"serviceGroupDescription\\": \\"服务组描述\\",\\n      \\"updateTime\\": \\"2020-08-09 15:50:30\\",\\n      \\"enableWebhook\\": \\"ENABLE\\",\\n      \\"webhookType\\": \\"WEIXIN_GROUP\\",\\n      \\"webhookLink\\": \\"wwwwwwwwww\\",\\n      \\"users\\": [\\n        {\\n          \\"userId\\": 10,\\n          \\"userName\\": \\"jack\\",\\n          \\"serviceGroupId\\": 1,\\n          \\"phone\\": \\"1390000****\\",\\n          \\"email\\": \\"wy930***@163.com\\",\\n          \\"isRelated\\": 1\\n        }\\n      ]\\n    }\\n  ],\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10,\\n  \\"totalCount\\": 100\\n}","errorExample":""},{"type":"xml","example":"<ListServiceGroupsResponse>\\n    <requestId>sssss</requestId>\\n    <data>\\n        <serviceGroupId>1</serviceGroupId>\\n        <isScheduled>true</isScheduled>\\n        <serviceGroupName>我的服务组</serviceGroupName>\\n        <serviceGroupDescription>服务组描述</serviceGroupDescription>\\n        <updateTime>2020-08-09 15:50:30</updateTime>\\n        <enableWebhook>ENABLE</enableWebhook>\\n        <webhookType>WEIXIN_GROUP</webhookType>\\n        <webhookLink>wwwwwwwwww</webhookLink>\\n        <users>\\n            <userId>10</userId>\\n            <userName>jack</userName>\\n            <serviceGroupId>1</serviceGroupId>\\n            <phone>1390000****</phone>\\n            <email>wy930***@163.com</email>\\n        </users>\\n    </data>\\n    <pageNumber>1</pageNumber>\\n    <pageSize>10</pageSize>\\n    <totalCount>100</totalCount>\\n</ListServiceGroupsResponse>","errorExample":""}]',
      'title' => '查询服务组列表',
    ),
    'UpdateServiceGroup' => 
    array (
      'summary' => '服务组编辑。',
      'path' => '/services/group/modify',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
              'enableWebhook' => 
              array (
                'title' => 'ENABLE 启用 DISABLE 禁用',
                'description' => '是否开启webhook 0关闭  1开启',
                'type' => 'string',
                'required' => true,
                'example' => 'ENABLE',
              ),
              'webhookType' => 
              array (
                'title' => 'WEIXIN_GROUP微信DING_GROUP钉钉FEISHU_GROUP飞书',
                'description' => 'WEIXIN_GROUP 微信群 DING_GROUP 钉群',
                'type' => 'string',
                'required' => true,
                'example' => 'WEIXINGROUP',
              ),
              'webhookLink' => 
              array (
                'title' => 'webhook跳转地址',
                'description' => 'webhook跳转地址',
                'type' => 'string',
                'required' => true,
                'example' => 'wwwwwww',
              ),
              'serviceGroupName' => 
              array (
                'title' => '服务组名字',
                'description' => '服务组名字',
                'type' => 'string',
                'required' => true,
                'example' => '我的服务组',
              ),
              'serviceGroupDescription' => 
              array (
                'title' => '服务描述',
                'description' => '服务组描述',
                'type' => 'string',
                'required' => false,
                'example' => '服务组描述',
              ),
              'userIds' => 
              array (
                'title' => '用户ID列表修改后的',
                'description' => '用户ID数组',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '用户ID',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'example' => '55',
                ),
                'required' => true,
              ),
              'monitorSourceTemplates' => 
              array (
                'title' => '监控源模版列表',
                'description' => '消息模版列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '消息模版列表',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'templateId' => 
                    array (
                      'title' => '消息模版ID',
                      'description' => '消息模版ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '1111',
                    ),
                    'monitorSourceId' => 
                    array (
                      'title' => '监控报警源Id',
                      'description' => '监控源ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '11111',
                    ),
                    'monitorSourceName' => 
                    array (
                      'title' => '监控报警源',
                      'description' => '监控源名字',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'zabbix',
                    ),
                    'templateContent' => 
                    array (
                      'title' => '消息模版内容',
                      'description' => '模版内容',
                      'type' => 'string',
                      'required' => false,
                      'example' => '内容',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ServiceGroupNotExisted',
            'errorMessage' => 'The service group does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'EditServiceGroupFail',
            'errorMessage' => 'Failed to edit the service group.',
          ),
          2 => 
          array (
            'errorCode' => 'ServiceGroupWebHookLinkAlreadyExisted',
            'errorMessage' => 'The webhook link is already in use.',
          ),
          3 => 
          array (
            'errorCode' => 'ServiceGroupNameAlreadyExisted',
            'errorMessage' => 'The service group name is already in use.',
          ),
        ),
        405 => 
        array (
          0 => 
          array (
            'errorCode' => 'openFailed',
            'errorMessage' => 'open Failed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateServiceGroupResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n</UpdateServiceGroupResponse>","errorExample":""}]',
      'title' => '服务组编辑',
    ),
    'CreateRouteRule' => 
    array (
      'summary' => '创建流转规则。',
      'path' => '/routeRule/save',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '创建规则参数',
            'description' => '创建流转规则参数',
            'type' => 'object',
            'properties' => 
            array (
              'ruleName' => 
              array (
                'title' => '规则名称',
                'description' => '流转规则名字',
                'type' => 'string',
                'required' => true,
                'example' => '规则名称',
              ),
              'enableStatus' => 
              array (
                'title' => '启用状态',
                'description' => '启用状态',
                'type' => 'string',
                'required' => false,
                'example' => '启用禁用状态',
              ),
              'relatedServiceId' => 
              array (
                'title' => '关联服务ID',
                'description' => '关联服务ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '100',
              ),
              'routeType' => 
              array (
                'title' => '路由类型：INCIDENT 触发事件 ALERT仅触发报警',
                'description' => '路由类型：INCIDENT 触发事件 ALERT 仅触发报警',
                'type' => 'string',
                'required' => true,
                'example' => 'INCIDENT',
              ),
              'incidentLevel' => 
              array (
                'title' => '事件级别 P1 P2 P3 P4',
                'description' => '事件级别 P1 P2 P3 P4',
                'type' => 'string',
                'required' => true,
                'example' => 'P1',
              ),
              'assignObjectId' => 
              array (
                'title' => '事件分派对象ID（服务组ID 或用户ID）',
                'description' => '事件分派对象ID（服务组ID 或用户ID）',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '65',
              ),
              'assignObjectType' => 
              array (
                'title' => '事件分派对象类型 SERVICEGROUP服务组 USER 单个用户',
                'description' => ' 事件分派对象类型 SERVICEGROUP 服务组  USER 单个用户',
                'type' => 'string',
                'required' => true,
                'example' => 'SERVICEGROUP',
              ),
              'effection' => 
              array (
                'title' => '影响程度 LOW-一般 HIGH-严重',
                'description' => '影响程度 LOW-一般 HIGH-严重',
                'type' => 'string',
                'required' => true,
                'example' => 'LOW',
              ),
              'timeWindow' => 
              array (
                'title' => '时间窗口',
                'description' => '时间窗口',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '2',
              ),
              'matchCount' => 
              array (
                'title' => '命中次数',
                'description' => '命中次数',
                'type' => 'integer',
                'format' => 'int32',
                'required' => true,
                'example' => '3',
              ),
              'timeWindowUnit' => 
              array (
                'title' => '时间窗口单位 MINUTE  分钟  SECOND 秒',
                'description' => '时间窗口单位
MINUTE 分钟
' . "\0" . 'SECOND  秒',
                'type' => 'string',
                'required' => true,
                'example' => 'MINUTE',
              ),
              'routeChildRules' => 
              array (
                'title' => '子规则',
                'description' => '子规则数组',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '子规则',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'monitorSourceId' => 
                    array (
                      'title' => '监控源ID',
                      'description' => '监控源ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '1',
                    ),
                    'conditions' => 
                    array (
                      'title' => '条件',
                      'description' => '匹配条件列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '条件',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'key' => 
                          array (
                            'title' => '字段名称',
                            'description' => '匹配key',
                            'type' => 'string',
                            'required' => true,
                            'example' => 'payload.summary',
                          ),
                          'value' => 
                          array (
                            'title' => '字段值',
                            'description' => '匹配value',
                            'type' => 'string',
                            'required' => true,
                            'example' => '123',
                          ),
                          'operationSymbol' => 
                          array (
                            'title' => '操作符号：notContain 不包含；contain 包含；equals 等于；notEquals 不等于；',
                            'description' => '操作符',
                            'type' => 'string',
                            'required' => true,
                            'example' => 'equals',
                          ),
                        ),
                        'required' => true,
                      ),
                      'required' => true,
                    ),
                    'childConditionRelation' => 
                    array (
                      'title' => '0-与，1-或',
                      'description' => '0-与，1-或',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '0',
                    ),
                    'problemLevel' => 
                    array (
                      'title' => '故障级别',
                      'description' => '故障级别 P1 P2 P3 P4',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'P1',
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
              ),
              'notifyChannels' => 
              array (
                'title' => '通知渠道。 SMS 短信  EMAIL 邮件  PHONE电话  WEIXIN_GROUP 企微群 DING_GROUP钉钉群',
                'description' => '通知渠道列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '通知渠道 SMS 短信 ，PHONE 语音，EMAIL 邮件，WEBHOOK 群通知',
                  'type' => 'string',
                  'required' => true,
                  'example' => '[SMS,PHONE]',
                ),
                'required' => true,
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'childRuleRelation' => 
              array (
                'title' => '子规则关系AND,OR',
                'description' => '子规则关系AND，OR
',
                'type' => 'string',
                'required' => true,
                'example' => 'AND',
              ),
              'problemLevelGroup' => 
              array (
                'description' => '故障等级组',
                'type' => 'object',
                'required' => false,
                'additionalProperties' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'childRuleRelation' => 
                    array (
                      'title' => '子规则关系，0与，1或',
                      'description' => '子规则关系，0与，1或',
                      'type' => 'integer',
                      'format' => 'int32',
                      'required' => false,
                      'example' => '1',
                    ),
                    'matchCount' => 
                    array (
                      'title' => '抑制：命中次数',
                      'description' => '抑制：命中次数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '1',
                    ),
                    'timeWindow' => 
                    array (
                      'title' => '抑制：时间窗口',
                      'description' => '抑制：时间窗口',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '5',
                    ),
                    'timeWindowUnit' => 
                    array (
                      'title' => '抑制：时间窗口单位',
                      'description' => '抑制：时间窗口单位',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'M',
                    ),
                    'enableUpgrade' => 
                    array (
                      'title' => '升级：是否升级',
                      'description' => '升级：是否升级',
                      'type' => 'boolean',
                      'required' => false,
                      'example' => 'false',
                    ),
                    'upgradeTimeWindow' => 
                    array (
                      'title' => '升级：时间窗口',
                      'description' => '升级：时间窗口',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '5',
                    ),
                    'upgradeTimeWindowUnit' => 
                    array (
                      'title' => '升级：时间窗口单位',
                      'description' => '升级：时间窗口单位',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'M',
                    ),
                  ),
                ),
              ),
              'coverageProblemLevels' => 
              array (
                'title' => '故障等级覆盖',
                'description' => '故障等级覆盖',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'coverage类型',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'P1',
                ),
                'required' => false,
              ),
              'problemEffectionServices' => 
              array (
                'title' => '故障影响服务',
                'description' => '故障影响服务',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '影响服务id',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '1',
                ),
                'required' => false,
              ),
              'convergenceFields' => 
              array (
                'title' => '收敛字段集合',
                'description' => '收敛字段集合',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '收敛字段集合',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'app',
                ),
                'required' => false,
              ),
              'convergenceType' => 
              array (
                'title' => '收敛类型（0：流转规则收敛，1：字段收敛）',
                'description' => '收敛类型（0：流转规则收敛，1：字段收敛）',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '0',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '响应参数',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => '请求',
                'description' => '请求',
                'type' => 'string',
                'example' => '请求ID',
              ),
              'data' => 
              array (
                'title' => '结果',
                'description' => '返回结果',
                'type' => 'object',
                'properties' => 
                array (
                  'routeRuleId' => 
                  array (
                    'title' => '规则ID',
                    'description' => '规则ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1000',
                  ),
                ),
                'example' => '65',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'AddRouteRuleFail',
            'errorMessage' => 'Failed to add the rule.',
          ),
          1 => 
          array (
            'errorCode' => 'RouteRuleNameAlreadyExisted',
            'errorMessage' => 'The rule name already exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"请求ID\\",\\n  \\"data\\": {\\n    \\"routeRuleId\\": 1000\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateRouteRuleResponse>\\n    <requestId>请求ID</requestId>\\n    <data>\\n        <routeRuleId>1000</routeRuleId>\\n    </data>\\n</CreateRouteRuleResponse>","errorExample":""}]',
      'title' => '创建流转规则',
    ),
    'DeleteRouteRule' => 
    array (
      'summary' => '删除流转规则。',
      'path' => '/routeRule/delete',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'routeRuleId' => 
              array (
                'title' => '规则ID',
                'description' => '规则ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '10000',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'integer',
                'format' => 'int64',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DeleteEnabledRuleFail',
            'errorMessage' => 'Failed to delete the rule with the enabled status.',
          ),
          1 => 
          array (
            'errorCode' => 'DeleteRuleFail',
            'errorMessage' => 'Failed to delete the rules.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'RouteRuleNotExisted',
            'errorMessage' => 'The rule does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": 0\\n}","errorExample":""},{"type":"xml","example":"<DeleteRouteRuleResponse/>","errorExample":""}]',
      'title' => 'DeleteRouteRule - 删除流转规则',
    ),
    'DisableRouteRule' => 
    array (
      'summary' => '禁用规则。',
      'path' => '/routeRule/disable',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'routeRuleId' => 
              array (
                'title' => '请求ID',
                'description' => '规则ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'required' => true,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'title' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
                'description' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
                'type' => 'integer',
                'format' => 'int64',
                'example' => 'null',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'RouteRuleNotExisted',
            'errorMessage' => 'The rule does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"data\\": 0\\n}","errorExample":""},{"type":"xml","example":"<DisableRouteRuleResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n</DisableRouteRuleResponse>","errorExample":""}]',
      'title' => '禁用规则',
      'requestParamsDescription' => '
',
    ),
    'EnableRouteRule' => 
    array (
      'summary' => '启用规则。',
      'path' => '/routeRule/enable',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'routeRuleId' => 
              array (
                'title' => '规则ID',
                'description' => '规则ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => true,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'description' => '返回结果',
                'type' => 'integer',
                'format' => 'int32',
                'example' => 'null',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'EnableRouteRuleFail',
            'errorMessage' => 'Failed to enable the rules.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'RouteRuleNotExisted',
            'errorMessage' => 'The rule does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"data\\": 0\\n}","errorExample":""},{"type":"xml","example":"<EnableRouteRuleResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n</EnableRouteRuleResponse>","errorExample":""}]',
      'title' => '启用规则',
    ),
    'GetRouteRule' => 
    array (
      'summary' => '查看规则详情。',
      'path' => '/routeRule/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'routeRuleId' => 
              array (
                'title' => '规则ID',
                'description' => '规则ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '6B9347ED-FD93-42B4-B9A4-7282962F5D6A',
              ),
              'data' => 
              array (
                'title' => '规则详情',
                'description' => '规则详情',
                'type' => 'object',
                'properties' => 
                array (
                  'routeRuleId' => 
                  array (
                    'title' => '规则ID',
                    'description' => '规则ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '180000000',
                  ),
                  'ruleName' => 
                  array (
                    'title' => '流转规则名字',
                    'description' => '流转规则名字',
                    'type' => 'string',
                    'example' => '规则1',
                  ),
                  'timeWindow' => 
                  array (
                    'title' => '时间窗口',
                    'description' => '时间窗口',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'relatedServiceName' => 
                  array (
                    'title' => '关联服务名称',
                    'description' => '关联服务名称',
                    'type' => 'string',
                    'example' => '冲上云霄',
                  ),
                  'enableStatus' => 
                  array (
                    'title' => '是否启用  DISABLE禁用 ENABLE 启用',
                    'description' => '是否启用  disable禁用 enable 启用',
                    'type' => 'string',
                    'example' => 'DISABLE',
                  ),
                  'relatedServiceId' => 
                  array (
                    'title' => '关联服务ID',
                    'description' => '关联服务ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1000',
                  ),
                  'routeType' => 
                  array (
                    'title' => '路由类型：INCIDENT 触发事件 ALERT 仅触发报警',
                    'description' => '路由类型：INCIDENT 触发事件 ALERT 仅触发报警',
                    'type' => 'string',
                    'example' => 'INCIDENT',
                  ),
                  'incidentLevel' => 
                  array (
                    'title' => '事件级别 P1 P2 P3 P4',
                    'description' => '事件级别 1-P1 2-P2 3-P3 4-P4',
                    'type' => 'string',
                    'example' => 'P1',
                  ),
                  'assignObjectId' => 
                  array (
                    'title' => '事件分派对象ID（服务组ID 或用户ID）',
                    'description' => '事件分派对象ID（服务组ID 或用户ID）',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1000',
                  ),
                  'assignObjectType' => 
                  array (
                    'title' => '事件分派对象类型 SERVICEGROUP 服务组  USER 单个用户',
                    'description' => '    事件分派对象类型 SERVICEGROUP 服务组  USER 单个用户',
                    'type' => 'string',
                    'example' => 'SERVICEGROUP',
                  ),
                  'effection' => 
                  array (
                    'title' => '影响程度  LOW一般  HIGH-严重',
                    'description' => '影响程度  LOW一般  HIGH-严重',
                    'type' => 'string',
                    'example' => 'LOW',
                  ),
                  'matchCount' => 
                  array (
                    'title' => '命中次数',
                    'description' => '命中次数',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '3',
                  ),
                  'childRuleRelation' => 
                  array (
                    'title' => '子规则关系，0与，1或',
                    'description' => '子规则关系，0与，1或',
                    'type' => 'string',
                    'example' => 'AND、OR',
                  ),
                  'eventRouteChildRules' => 
                  array (
                    'title' => '子规则',
                    'description' => '子规则',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '子规则',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'childRouteRuleId' => 
                        array (
                          'title' => '子规则ID',
                          'description' => '子规则ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1000',
                        ),
                        'isValidChildRule' => 
                        array (
                          'title' => '是否有效得规则true有效 false无效',
                          'description' => '是否有效得规则true有效 false无效',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'parentRuleId' => 
                        array (
                          'title' => '规则ID',
                          'description' => '规则ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1800',
                        ),
                        'monitorSourceId' => 
                        array (
                          'title' => '监控源ID',
                          'description' => '监控源ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'monitorIntegrationConfigId' => 
                        array (
                          'title' => '集成配置ID',
                          'description' => '集成配置ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'monitorSourceName' => 
                        array (
                          'title' => '监控源名称',
                          'description' => '监控源名称',
                          'type' => 'string',
                          'example' => 'zabbix',
                        ),
                        'childConditionRelation' => 
                        array (
                          'title' => '子条件计算关系，0-与，1-或',
                          'description' => '子条件计算关系，0-与，1-或',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'conditions' => 
                        array (
                          'title' => '条件',
                          'description' => '匹配条件',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '条件',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'key' => 
                              array (
                                'title' => '条件可以',
                                'description' => '条件可以',
                                'type' => 'string',
                                'example' => 'alarmName',
                              ),
                              'value' => 
                              array (
                                'title' => '匹配值',
                                'description' => '匹配值',
                                'type' => 'string',
                                'example' => 'Zabbix server',
                              ),
                              'operationSymbol' => 
                              array (
                                'title' => '操作符',
                                'description' => '操作符',
                                'type' => 'string',
                                'example' => 'contain',
                              ),
                            ),
                          ),
                        ),
                        'problemLevel' => 
                        array (
                          'description' => '故障等级',
                          'type' => 'string',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                  'createTime' => 
                  array (
                    'title' => '创建时间',
                    'description' => '创建时间',
                    'type' => 'string',
                    'example' => '2020-09-08 15:30:30',
                  ),
                  'updateTime' => 
                  array (
                    'title' => '修改时间',
                    'description' => '修改时间',
                    'type' => 'string',
                    'example' => '2020-09-08 15:30:30',
                  ),
                  'notifyChannels' => 
                  array (
                    'title' => '通知渠道',
                    'description' => '通知渠道',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '通知渠道',
                      'type' => 'string',
                      'example' => '[SMS,PHONE]',
                    ),
                  ),
                  'notifyChannelNames' => 
                  array (
                    'title' => '通知渠道名称',
                    'description' => '通知渠道名称',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '通知渠道名称',
                      'type' => 'string',
                      'example' => '[短信,电话]',
                    ),
                  ),
                  'assignObjectName' => 
                  array (
                    'title' => '通知对象名称',
                    'description' => '通知对象名称',
                    'type' => 'string',
                    'example' => '刘德华',
                  ),
                  'relServiceDeleteType' => 
                  array (
                    'title' => '服务删除字段',
                    'description' => '服务删除字段',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'problemLevelGroup' => 
                  array (
                    'description' => '故障等级组',
                    'type' => 'object',
                    'additionalProperties' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'childRuleRelation' => 
                        array (
                          'title' => '子规则关系，0与，1或',
                          'description' => '子规则',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '11',
                        ),
                        'matchCount' => 
                        array (
                          'title' => '抑制：命中次数',
                          'description' => '数量',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '11',
                        ),
                        'timeWindow' => 
                        array (
                          'title' => '抑制：时间窗口',
                          'description' => '时间窗口',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'timeWindowUnit' => 
                        array (
                          'title' => '抑制：时间窗口单位',
                          'description' => '时间单元',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'enableUpgrade' => 
                        array (
                          'title' => '升级：是否升级',
                          'description' => '是否开启',
                          'type' => 'boolean',
                          'example' => 'ture',
                        ),
                        'upgradeTimeWindow' => 
                        array (
                          'title' => '升级：时间窗口',
                          'description' => '时间窗口',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'upgradeTimeWindowUnit' => 
                        array (
                          'title' => '升级：时间窗口单位',
                          'description' => '服务单元',
                          'type' => 'string',
                          'example' => '1',
                        ),
                      ),
                      'description' => '服务组',
                    ),
                  ),
                  'coverageProblemLevels' => 
                  array (
                    'title' => '故障等级覆盖',
                    'description' => '故障等级覆盖',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '故障等级',
                      'type' => 'string',
                      'example' => '1',
                    ),
                  ),
                  'problemEffectionServices' => 
                  array (
                    'title' => '故障影响服务',
                    'description' => '故障影响服务',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '故障关联服务',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                  ),
                  'convergenceFields' => 
                  array (
                    'title' => '收敛字段集合',
                    'description' => '收敛字段集合',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                  'convergenceType' => 
                  array (
                    'title' => '收敛类型（0：流转规则收敛，1：字段收敛）',
                    'description' => '收敛类型（0：流转规则收敛，1：字段收敛）',
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'RouteRuleNotExisted',
            'errorMessage' => 'The rule does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"6B9347ED-FD93-42B4-B9A4-7282962F5D6A\\",\\n  \\"data\\": {\\n    \\"routeRuleId\\": 180000000,\\n    \\"ruleName\\": \\"规则1\\",\\n    \\"timeWindow\\": 3,\\n    \\"relatedServiceName\\": \\"冲上云霄\\",\\n    \\"enableStatus\\": \\"DISABLE\\",\\n    \\"relatedServiceId\\": 1000,\\n    \\"routeType\\": \\"INCIDENT\\",\\n    \\"incidentLevel\\": \\"P1\\",\\n    \\"assignObjectId\\": 1000,\\n    \\"assignObjectType\\": \\"SERVICEGROUP\\",\\n    \\"effection\\": \\"LOW\\",\\n    \\"matchCount\\": 3,\\n    \\"childRuleRelation\\": \\"AND、OR\\",\\n    \\"eventRouteChildRules\\": [\\n      {\\n        \\"childRouteRuleId\\": 1000,\\n        \\"isValidChildRule\\": false,\\n        \\"parentRuleId\\": 1800,\\n        \\"monitorSourceId\\": 1,\\n        \\"monitorIntegrationConfigId\\": 1,\\n        \\"monitorSourceName\\": \\"zabbix\\",\\n        \\"childConditionRelation\\": 1,\\n        \\"conditions\\": [\\n          {\\n            \\"key\\": \\"alarmName\\",\\n            \\"value\\": \\"Zabbix server\\",\\n            \\"operationSymbol\\": \\"contain\\"\\n          }\\n        ],\\n        \\"problemLevel\\": \\"1\\"\\n      }\\n    ],\\n    \\"createTime\\": \\"2020-09-08 15:30:30\\",\\n    \\"updateTime\\": \\"2020-09-08 15:30:30\\",\\n    \\"notifyChannels\\": [\\n      \\"[SMS,PHONE]\\"\\n    ],\\n    \\"notifyChannelNames\\": [\\n      \\"[短信,电话]\\"\\n    ],\\n    \\"assignObjectName\\": \\"刘德华\\",\\n    \\"relServiceDeleteType\\": 1,\\n    \\"problemLevelGroup\\": {\\n      \\"key\\": {\\n        \\"childRuleRelation\\": 11,\\n        \\"matchCount\\": 11,\\n        \\"timeWindow\\": 1,\\n        \\"timeWindowUnit\\": \\"1\\",\\n        \\"enableUpgrade\\": true,\\n        \\"upgradeTimeWindow\\": 1,\\n        \\"upgradeTimeWindowUnit\\": \\"1\\"\\n      }\\n    },\\n    \\"coverageProblemLevels\\": [\\n      \\"1\\"\\n    ],\\n    \\"problemEffectionServices\\": [\\n      1\\n    ],\\n    \\"convergenceFields\\": [\\n      \\"\\"\\n    ],\\n    \\"convergenceType\\": 0\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetRouteRuleResponse>\\n    <requestId>6B9347ED-FD93-42B4-B9A4-7282962F5D6A</requestId>\\n    <data>\\n        <routeRuleId>180000000</routeRuleId>\\n        <subscriptionName>我的订阅</subscriptionName>\\n        <ruleName>规则1</ruleName>\\n        <timeWindow>3</timeWindow>\\n        <relatedServiceName>冲上云霄</relatedServiceName>\\n        <enableStatus>DISABLE</enableStatus>\\n        <relatedServiceId>1000</relatedServiceId>\\n        <routeType>INCIDENT</routeType>\\n        <incidentLevel>P1</incidentLevel>\\n        <assignObjectId>1000</assignObjectId>\\n        <assignObjectType>SERVICEGROUP</assignObjectType>\\n        <effection>LOW</effection>\\n        <matchCount>3</matchCount>\\n        <eventRouteChildRules>\\n            <childRouteRuleId>1000</childRouteRuleId>\\n            <isValidChildRule>false</isValidChildRule>\\n            <parentRuleId>1800</parentRuleId>\\n            <monitorSourceId>1</monitorSourceId>\\n            <monitorIntegrationConfigId>1</monitorIntegrationConfigId>\\n            <monitorSourceName>zabbix</monitorSourceName>\\n            <conditions>\\n                <key>alarmName</key>\\n                <value>Zabbix server</value>\\n                <operationSymbol>contain</operationSymbol>\\n            </conditions>\\n        </eventRouteChildRules>\\n        <createTime>2020-09-08 15:30:30</createTime>\\n        <updateTime>2020-09-08 15:30:30</updateTime>\\n        <notifyChannels>[SMS,PHONE]</notifyChannels>\\n        <notifyChannelNames>[短信,电话]</notifyChannelNames>\\n        <assignObjectName>刘德华</assignObjectName>\\n    </data>\\n</GetRouteRuleResponse>","errorExample":""}]',
      'title' => '查看规则详情',
      'requestParamsDescription' => '{
  "routeRuleId" : 1,
  "}',
      'responseParamsDescription' => '{
    "requestId": "6B9347ED-FD93-42B4-B9A4-7282962F5D6A",
    "data": {
        "routeRuleId": 180000000,
        "subscriptionName": "我的订阅",
        "ruleName": "规则1",
        "timeWindow": 3,
        "relatedServiceName": "冲上云霄",
        "enableStatus": "DISABLE",
        "relatedServiceId": 1000,
        "routeType": "INCIDENT",
        "incidentLevel": "P1",
        "assignObjectId": 1000,
        "assignObjectType": "SERVICEGROUP",
        "effection": "LOW",
        "matchCount": 3,
        "eventRouteChildRules": [
            {
                "childRouteRuleId": 1000,
                "isValidChildRule": false,
                "parentRuleId": 1800,
                "monitorSourceId": 1,
                "monitorIntegrationConfigId": 1,
                "monitorSourceName": "zabbix",
                "conditions": [
                    {
                        "key": "alarmName",
                        "value": "Zabbix server",
                        "operationSymbol": "contain"
                    }
                ]
            }
        ],
        "createTime": "2020-09-08 15:30:30",
        "updateTime": "2020-09-08 15:30:30",
        "notifyChannels": [
            "[SMS,PHONE]"
        ],
        "notifyChannelNames": [
            "[短信,电话]"
        ],
        "assignObjectName": "刘德华"
    }
}',
    ),
    'ListRouteRules' => 
    array (
      'summary' => '查询规则列表。',
      'path' => '/routeRule/list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '规则列表查询入参数',
            'description' => '规则列表查询入参数',
            'type' => 'object',
            'properties' => 
            array (
              'ruleName' => 
              array (
                'title' => '规则名称',
                'description' => '规则名称',
                'type' => 'string',
                'format' => 'byte',
                'required' => false,
                'example' => '规则',
              ),
              'serviceName' => 
              array (
                'title' => '服务名称',
                'description' => '服务名称',
                'type' => 'string',
                'format' => 'byte',
                'required' => false,
                'example' => '服务',
              ),
              'pageNumber' => 
              array (
                'title' => '第几页',
                'description' => '当前页',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '页的大小',
                'description' => '页大小',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '10',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'routeType' => 
              array (
                'title' => '路由类型：0触发事件 1仅触发报警 r',
                'description' => '路由类型：0触发事件 1仅触发报警 routeType
',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '0',
              ),
              'notFilterRouteRuleDeleted' => 
              array (
                'title' => '不过滤已删除流转规则（为true时，已删除过滤对象也会查到）',
                'type' => 'boolean',
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'C4BE3837-1A13B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'title' => '规则列表',
                'description' => '规则列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'routeRuleId' => 
                    array (
                      'title' => '规则ID',
                      'description' => '规则ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '10000',
                    ),
                    'tenantRamId' => 
                    array (
                      'title' => '租户ID',
                      'description' => '租户ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1344383',
                    ),
                    'ruleName' => 
                    array (
                      'title' => '规则名称',
                      'description' => '规则名称',
                      'type' => 'string',
                      'example' => '规则名字',
                    ),
                    'relatedServiceName' => 
                    array (
                      'title' => '服务名称',
                      'description' => '服务名称',
                      'type' => 'string',
                      'example' => '关联服务名字',
                    ),
                    'timeWindow' => 
                    array (
                      'title' => '时间窗口',
                      'description' => '时间窗口',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '时间窗口',
                    ),
                    'matchCount' => 
                    array (
                      'title' => '命中次数',
                      'description' => '命中次数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '10',
                    ),
                    'timeWindowUnit' => 
                    array (
                      'title' => '时间窗口单位 MINUTE 分钟  SECOND 秒',
                      'description' => '时间单位
MINUTE 分钟
' . "\0" . 'SECOND  秒',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => 'MINUTE',
                    ),
                    'relatedServiceId' => 
                    array (
                      'title' => '关联服务ID',
                      'description' => '关联服务ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'routeType' => 
                    array (
                      'title' => '路由类型：INCIDENT 触发事件 ALERT 仅触发报警',
                      'description' => '路由类型：INCIDENT 触发事件 ALERT 仅触发报警',
                      'type' => 'string',
                      'example' => 'INCIDENT',
                    ),
                    'incidentLevel' => 
                    array (
                      'title' => '事件级别 P1 P2 P3 P4',
                      'description' => '事件级别 P1 P2 P3 P4',
                      'type' => 'string',
                      'example' => 'P1',
                    ),
                    'assignObjectId' => 
                    array (
                      'title' => '事件分派对象ID（服务组ID 或用户ID）',
                      'description' => '事件分派对象ID（服务组ID 或用户ID）',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '10',
                    ),
                    'assignObjectType' => 
                    array (
                      'title' => '事件分派对象类型 SERVICEGROUP 服务组  USER 单个用户',
                      'description' => '事件分派对象类型 SERVICEGROUP 服务组  USER 单个用户',
                      'type' => 'string',
                      'example' => 'SERVICEGROUP',
                    ),
                    'effection' => 
                    array (
                      'title' => '影响程度 LOW-一般 HIGH-严重',
                      'description' => '影响程度 LOW-一般 HIGH-严重',
                      'type' => 'string',
                      'example' => 'LOW',
                    ),
                    'createTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2020-03-05 15:53:55',
                    ),
                    'updateTime' => 
                    array (
                      'title' => '修改时间',
                      'description' => '修改时间',
                      'type' => 'string',
                      'example' => '2020-03-05 15:53:55',
                    ),
                    'enableStatus' => 
                    array (
                      'title' => '是否启用  DISABLE禁用. ENABLE 启用',
                      'description' => '是否启用  DISABLE禁用 ENABLE 启用',
                      'type' => 'string',
                      'example' => 'DISABLE',
                    ),
                    'monitorSourceNames' => 
                    array (
                      'title' => '监控源名称',
                      'description' => '监控源名称',
                      'type' => 'string',
                      'example' => 'zabbix',
                    ),
                    'relServiceDeleteType' => 
                    array (
                      'title' => '服务删除字段',
                      'description' => '服务删除字段',
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                    'isValid' => 
                    array (
                      'title' => '是否有效 0无效 1有效',
                      'description' => '是否有效 0无效 1有效',
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                  ),
                ),
              ),
              'totalCount' => 
              array (
                'title' => '总条数',
                'description' => '总条数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'pageNumber' => 
              array (
                'title' => '第几页',
                'description' => '第几页',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '分页大小',
                'description' => '分页大小',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13B-A225-2C88188E8A43\\",\\n  \\"data\\": [\\n    {\\n      \\"routeRuleId\\": 10000,\\n      \\"tenantRamId\\": 1344383,\\n      \\"ruleName\\": \\"规则名字\\",\\n      \\"relatedServiceName\\": \\"关联服务名字\\",\\n      \\"timeWindow\\": 0,\\n      \\"matchCount\\": 10,\\n      \\"timeWindowUnit\\": 0,\\n      \\"relatedServiceId\\": 1,\\n      \\"routeType\\": \\"INCIDENT\\",\\n      \\"incidentLevel\\": \\"P1\\",\\n      \\"assignObjectId\\": 10,\\n      \\"assignObjectType\\": \\"SERVICEGROUP\\",\\n      \\"effection\\": \\"LOW\\",\\n      \\"createTime\\": \\"2020-03-05 15:53:55\\",\\n      \\"updateTime\\": \\"2020-03-05 15:53:55\\",\\n      \\"enableStatus\\": \\"DISABLE\\",\\n      \\"monitorSourceNames\\": \\"zabbix\\",\\n      \\"relServiceDeleteType\\": 0,\\n      \\"isValid\\": 0\\n    }\\n  ],\\n  \\"totalCount\\": 10,\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10\\n}","errorExample":""},{"type":"xml","example":"<ListRouteRulesResponse>\\n    <requestId>C4BE3837-1A13B-A225-2C88188E8A43</requestId>\\n    <data>\\n        <routeRuleId>10000</routeRuleId>\\n        <tenantRamId>1344383</tenantRamId>\\n        <ruleName>规则名字</ruleName>\\n        <relatedServiceName>关联服务名字</relatedServiceName>\\n        <matchCount>10</matchCount>\\n        <relatedServiceId>1</relatedServiceId>\\n        <routeType>INCIDENT</routeType>\\n        <incidentLevel>P1</incidentLevel>\\n        <assignObjectId>10</assignObjectId>\\n        <assignObjectType>SERVICEGROUP</assignObjectType>\\n        <effection>LOW</effection>\\n        <createTime>2020-03-05 15:53:55</createTime>\\n        <updateTime>2020-03-05 15:53:55</updateTime>\\n        <enableStatus>DISABLE</enableStatus>\\n        <monitorSourceNames>zabbix</monitorSourceNames>\\n    </data>\\n    <totalCount>10</totalCount>\\n    <pageNumber>1</pageNumber>\\n    <pageSize>10</pageSize>\\n</ListRouteRulesResponse>","errorExample":""}]',
      'title' => 'ListRouteRules - 查询规则列表',
    ),
    'UpdateRouteRule' => 
    array (
      'summary' => '编辑流转规则。',
      'path' => '/routeRule/edit',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '编辑流转规则入参',
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'ruleName' => 
              array (
                'title' => '规则名称',
                'description' => '规则名称',
                'type' => 'string',
                'required' => true,
                'example' => '规则名称',
              ),
              'relatedServiceId' => 
              array (
                'title' => '关联服务ID',
                'description' => '关联服务ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '关联服务ID',
              ),
              'routeRuleId' => 
              array (
                'title' => '规则ID',
                'description' => '规则ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '规则ID',
              ),
              'routeType' => 
              array (
                'title' => '路由类型：INCIDENT 触发事件 ALERT 仅触发报警',
                'description' => '路由类型：INCIDENT 触发事件 ALERT 仅触发报警',
                'type' => 'string',
                'required' => true,
                'example' => 'ALERT',
              ),
              'incidentLevel' => 
              array (
                'title' => '事件级别 1-P1 2-P2 3-P3 4-P4',
                'description' => '事件级别 P1 P2 P3 P4',
                'type' => 'string',
                'required' => true,
                'example' => 'P1',
              ),
              'assignObjectId' => 
              array (
                'title' => '事件分派对象ID（服务组ID 或用户ID）',
                'description' => '事件分派对象ID（服务组ID 或用户ID）',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
              'assignObjectType' => 
              array (
                'title' => '事件分派对象类型 SERVICEGROUP服务组  USER 单个用户',
                'description' => ' 事件分派对象类型 SERVICEGROUP 服务组  USER 单个用户',
                'type' => 'string',
                'required' => true,
                'example' => 'SERVICEGROUP',
              ),
              'effection' => 
              array (
                'title' => '影响程度 LOW-一般 HIGH-严重',
                'description' => ' 影响程度 LOW-一般 HIGH-严重',
                'type' => 'string',
                'required' => true,
                'example' => 'LOW',
              ),
              'timeWindow' => 
              array (
                'title' => '时间窗口',
                'description' => '时间窗口',
                'type' => 'integer',
                'format' => 'int32',
                'required' => true,
                'example' => '10',
              ),
              'timeWindowUnit' => 
              array (
                'title' => '时间窗口单位 MINUTE 分钟  SECOND 秒',
                'description' => '时间窗口单位MINUTE 分钟
' . "\0" . 'SECOND  秒',
                'type' => 'string',
                'required' => true,
                'example' => 'MINUTE',
              ),
              'matchCount' => 
              array (
                'title' => '命中次数',
                'description' => '命中次数',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '10',
              ),
              'routeChildRules' => 
              array (
                'title' => '子规则',
                'description' => '子规则',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'childRouteRuleId' => 
                    array (
                      'title' => '子规则ID 不填表示新增',
                      'description' => '子规则ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '1',
                    ),
                    'conditions' => 
                    array (
                      'title' => '条件',
                      'description' => '条件',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'object',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'key' => 
                          array (
                            'title' => '字段',
                            'description' => '条件key',
                            'type' => 'string',
                            'required' => true,
                            'example' => 'payload.summary',
                          ),
                          'value' => 
                          array (
                            'title' => '字段取值',
                            'description' => '匹配值',
                            'type' => 'string',
                            'required' => true,
                            'example' => '123',
                          ),
                          'operationSymbol' => 
                          array (
                            'title' => '操作符',
                            'description' => '操作符contain',
                            'type' => 'string',
                            'required' => true,
                            'example' => 'equals',
                          ),
                        ),
                        'required' => true,
                      ),
                      'required' => true,
                    ),
                    'monitorSourceId' => 
                    array (
                      'title' => '监控源ID',
                      'description' => '监控源ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '1',
                    ),
                    'isValidChildRule' => 
                    array (
                      'title' => 'true  删除子规则  false编辑子规则',
                      'description' => '是否删除子规则',
                      'type' => 'boolean',
                      'required' => true,
                      'example' => 'false',
                    ),
                    'childConditionRelation' => 
                    array (
                      'title' => '子条件计算关系',
                      'description' => '子条件计算关系，0-与，1-或',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '1',
                    ),
                    'problemLevel' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
              ),
              'notifyChannels' => 
              array (
                'title' => '通知渠道    SMS 短信  EMAIL  邮件  PHONE  电话  WEIXIN_GROUP 企微群 DING_GROUP 钉钉群',
                'description' => '通知渠道',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '通知渠道',
                  'type' => 'string',
                  'required' => true,
                  'example' => '[SMS,PHONE]',
                ),
                'required' => true,
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'childRuleRelation' => 
              array (
                'title' => 'AND',
                'description' => '子规则关系 AND OR',
                'type' => 'string',
                'required' => false,
                'example' => 'AND',
              ),
              'problemLevelGroup' => 
              array (
                'type' => 'object',
                'additionalProperties' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'childRuleRelation' => 
                    array (
                      'title' => '子规则关系，0与，1或',
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                    'matchCount' => 
                    array (
                      'title' => '抑制：命中次数',
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'timeWindow' => 
                    array (
                      'title' => '抑制：时间窗口',
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'timeWindowUnit' => 
                    array (
                      'title' => '抑制：时间窗口单位',
                      'type' => 'string',
                    ),
                    'enableUpgrade' => 
                    array (
                      'title' => '升级：是否升级',
                      'type' => 'boolean',
                    ),
                    'upgradeTimeWindow' => 
                    array (
                      'title' => '升级：时间窗口',
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'upgradeTimeWindowUnit' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
              'coverageProblemLevels' => 
              array (
                'title' => '故障等级覆盖',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'string',
                ),
              ),
              'problemEffectionServices' => 
              array (
                'title' => '故障影响服务',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'integer',
                  'format' => 'int64',
                ),
              ),
              'convergenceFields' => 
              array (
                'title' => '收敛字段集合',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'string',
                ),
              ),
              'convergenceType' => 
              array (
                'title' => '收敛类型（0：流转规则收敛，1：字段收敛）',
                'type' => 'integer',
                'format' => 'int32',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '响应',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'description' => '返回结果',
                'type' => 'integer',
                'format' => 'int64',
                'example' => 'null',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'RouteRuleNameAlreadyExisted',
            'errorMessage' => 'The rule name already exists.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'RouteRuleNotExisted',
            'errorMessage' => 'The rule does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"data\\": 0\\n}","errorExample":""},{"type":"xml","example":"<UpdateRouteRuleResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n</UpdateRouteRuleResponse>","errorExample":""}]',
      'title' => '编辑流转规则',
    ),
    'VerifyRouteRule' => 
    array (
      'summary' => '验证流转规则。',
      'path' => '/routeRule/verify',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'routeRuleId' => 
              array (
                'title' => '规则id',
                'description' => '规则id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1111',
              ),
              'testSourceEvents' => 
              array (
                'title' => '测试告警',
                'description' => '测试告警内容',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '测试告警内容',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'monitorSourceId' => 
                    array (
                      'title' => '监控告警源ID',
                      'description' => '监控源源ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '1',
                    ),
                    'monitorSourceName' => 
                    array (
                      'title' => '监控告警源名称',
                      'description' => '监控源名称',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'zabbix',
                    ),
                    'eventTime' => 
                    array (
                      'title' => '告警上报时间',
                      'description' => '告警时间',
                      'type' => 'string',
                      'required' => false,
                      'example' => '2021-09-08 13:00:00',
                    ),
                    'eventJson' => 
                    array (
                      'title' => '告警内容',
                      'description' => '告警JSON',
                      'type' => 'string',
                      'required' => false,
                      'example' => '{}',
                    ),
                  ),
                  'required' => false,
                  'example' => '{}',
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxxx',
              ),
              'data' => 
              array (
                'title' => '验证结果',
                'description' => '验证结果',
                'type' => 'object',
                'properties' => 
                array (
                  'isValidRule' => 
                  array (
                    'title' => '验证是否成功',
                    'description' => '验证是否成功',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'routeType' => 
                  array (
                    'title' => '事件或者报警',
                    'description' => '事件或者报警',
                    'type' => 'string',
                    'example' => 'INCIDENT、ALERT',
                  ),
                  'notifySubscriptionNames' => 
                  array (
                    'title' => '订阅名称',
                    'description' => '订阅名称',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '通知订阅',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'subscriptionId' => 
                        array (
                          'title' => '订阅ID',
                          'description' => '订阅ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '111111',
                        ),
                        'title' => 
                        array (
                          'title' => '订阅名称',
                          'description' => '订阅名称',
                          'type' => 'string',
                          'example' => '订阅名称',
                        ),
                      ),
                      'example' => '我的订阅',
                    ),
                  ),
                  'escalationPlans' => 
                  array (
                    'title' => '升级策略名称',
                    'description' => '升级策略名称',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '升级计划',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'escalationPlanName' => 
                        array (
                          'title' => '升级计划名称',
                          'description' => '升级计划名称',
                          'type' => 'string',
                          'example' => '升级计划1',
                        ),
                        'escalationPlanId' => 
                        array (
                          'title' => '升级计划ID',
                          'description' => '升级计划ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '111111',
                        ),
                      ),
                    ),
                  ),
                  'routeRuleFailReason' => 
                  array (
                    'title' => '流转规则验证失败的原因',
                    'description' => '流转规则验证失败的原因',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '流转规则验证失败的原因',
                      'type' => 'string',
                      'example' => 'alertName不匹配',
                    ),
                  ),
                  'monitorSourceIds' => 
                  array (
                    'title' => '验证失败监控源ID',
                    'description' => '验证失败监控源ID',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '1000',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '验证失败监控源ID',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxxx\\",\\n  \\"data\\": {\\n    \\"isValidRule\\": true,\\n    \\"routeType\\": \\"INCIDENT、ALERT\\",\\n    \\"notifySubscriptionNames\\": [\\n      {\\n        \\"subscriptionId\\": 111111,\\n        \\"title\\": \\"订阅名称\\"\\n      }\\n    ],\\n    \\"escalationPlans\\": [\\n      {\\n        \\"escalationPlanName\\": \\"升级计划1\\",\\n        \\"escalationPlanId\\": 111111\\n      }\\n    ],\\n    \\"routeRuleFailReason\\": [\\n      \\"alertName不匹配\\"\\n    ],\\n    \\"monitorSourceIds\\": [\\n      0\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<VerifyRouteRuleResponse>\\n    <requestId>xxxxxx</requestId>\\n    <data>\\n        <isValidRule>true</isValidRule>\\n        <routeType>INCIDENT、ALERT</routeType>\\n        <notifySubscriptionNames>我的订阅</notifySubscriptionNames>\\n        <escalationPlanNames>升级策略1</escalationPlanNames>\\n        <routeRuleFailReason>alertName不匹配</routeRuleFailReason>\\n    </data>\\n</VerifyRouteRuleResponse>","errorExample":""}]',
      'title' => '验证流转规则',
      'requestParamsDescription' => '{
    "testSourceEvents": [
        {
            "eventJson": "{\\n\\t\\"summary\\": \\"Cpu_util at 85.16% on machine 112.11.123.11\\",\\n\\t\\"priority\\": \\"P1\\",\\n\\t\\"name\\": \\"Cpu 使用超额预警\\",\\n\\t\\"timestamp\\": \\"2021-07-17 T08:42:58.315+0000\\",\\n\\t\\"region\\": \\"shanghai\\",\\n\\t\\"source\\": \\"112.11.123.11\\",\\n\\t\\"application\\": \\"zheda/mozi\\",\\n\\t\\"group\\": \\"线上\\",\\n\\t\\"class\\": \\"Load\\",\\n\\t\\"details\\": {\\n\\t\\t\\"freeSpace\\": \\"1%\\",\\n\\t\\t\\"pingTime\\": \\"1500ms\\",\\n\\t\\t\\"loadAvg\\": \\"0.75\\"\\n\\t},\\n\\t\\"tags\\": \\"{}\\"\\n}",
            "eventTime": "2021-12-17 05:13:17",
            "monitorSourceId": 23463,
            "monitorSourceName": "标准集成"
        }
    ],
    "routeRuleId": "160034020",
    "clientToken": "7e070585-ee11-450e-8827-db353faa3419"
}',
      'responseParamsDescription' => '{
    "requestId": "gdgsdgsggsdg",
    "success": true,
    "errCode": 200,
    "errMessage": null,
    "data": {
        "routeRuleId": null,
        "isValidRule": false,
        "routeType": "INCIDENT",
        "routeRuleName": null,
        "assignToWhoName": null,
        "notifySubscriptions": [
            {
                "subscriptionId": 80002030,
                "title": "【测试，勿动】全部服务"
            },
            {
                "subscriptionId": 100000010,
                "title": "撒发色分"
            },
            {
                "subscriptionId": 100000030,
                "title": "ceshi2190830"
            },
            {
                "subscriptionId": 100000040,
                "title": "test121"
            },
            {
                "subscriptionId": 100000070,
                "title": "是"
            },
            {
                "subscriptionId": 110000000,
                "title": "全部服务-个人-优先级高"
            },
            {
                "subscriptionId": 110000010,
                "title": "111"
            },
            {
                "subscriptionId": 110000030,
                "title": "老数据兼容测试"
            },
            {
                "subscriptionId": 110000090,
                "title": "测试优化功能"
            },
            {
                "subscriptionId": 120000000,
                "title": "经1"
            },
            {
                "subscriptionId": 120000030,
                "title": "三级级联--全部服务"
            },
            {
                "subscriptionId": 120000070,
                "title": "341"
            },
            {
                "subscriptionId": 130000000,
                "title": "全部服务-服务组"
            },
            {
                "subscriptionId": 130000010,
                "title": "222"
            },
            {
                "subscriptionId": 130000030,
                "title": "ceshi0903"
            },
            {
                "subscriptionId": 130000060,
                "title": "niidfads"
            },
            {
                "subscriptionId": 130000070,
                "title": "e232"
            },
            {
                "subscriptionId": 130000080,
                "title": "test0001"
            },
            {
                "subscriptionId": 140000000,
                "title": "边界值测试"
            },
            {
                "subscriptionId": 140000010,
                "title": "通知订阅啊"
            },
            {
                "subscriptionId": 140000020,
                "title": "【不要乱动配置！！！】【新】通知订阅-全部"
            },
            {
                "subscriptionId": 140000070,
                "title": "ceshiyixzia"
            },
            {
                "subscriptionId": 150000000,
                "title": "24321"
            },
            {
                "subscriptionId": 150000030,
                "title": "dscs"
            },
            {
                "subscriptionId": 150000070,
                "title": "史蒂夫v"
            },
            {
                "subscriptionId": 150000090,
                "title": "121212"
            },
            {
                "subscriptionId": 160000010,
                "title": "3333"
            },
            {
                "subscriptionId": 160000030,
                "title": "wj测试订阅"
            },
            {
                "subscriptionId": 160000060,
                "title": "cdscds"
            },
            {
                "subscriptionId": 160000070,
                "title": "ceshisd"
            },
            {
                "subscriptionId": 170000000,
                "title": "服务--个人"
            },
            {
                "subscriptionId": 170000010,
                "title": "4444444"
            },
            {
                "subscriptionId": 170000020,
                "title": "测试11"
            },
            {
                "subscriptionId": 170000030,
                "title": "这是一个测试0927"
            },
            {
                "subscriptionId": 170000060,
                "title": "妖股仁东控股的背后操盘方景华，近日收到证监会的500万罚单。相关处罚决定书显示，这名昔日牛散在仁东控股上巨亏了近27亿，还向证监"
            },
            {
                "subscriptionId": 170000070,
                "title": "吃"
            },
            {
                "subscriptionId": 170000090,
                "title": "发发发"
            },
            {
                "subscriptionId": 180000000,
                "title": "aa1"
            },
            {
                "subscriptionId": 180000010,
                "title": "3"
            },
            {
                "subscriptionId": 180000030,
                "title": "sdds"
            },
            {
                "subscriptionId": 180000040,
                "title": "4fy"
            },
            {
                "subscriptionId": 180000050,
                "title": "cadscds"
            },
            {
                "subscriptionId": 180000060,
                "title": "sdc"
            },
            {
                "subscriptionId": 180000090,
                "title": "速度"
            },
            {
                "subscriptionId": 190000040,
                "title": "时间自定义配置测试"
            },
            {
                "subscriptionId": 190000080,
                "title": "老数据兼容"
            },
            {
                "subscriptionId": 190000090,
                "title": "当钉测试"
            }
        ],
        "escalationPlans": [],
        "routeRuleFailReason": [
            "无告警内容匹配 Zabbix这条规则"
        ],
        "monitorSourceIds": [
            23465
        ]
    }
}',
    ),
    'CreateRichText' => 
    array (
      'summary' => '创建富文本。',
      'path' => '/rich/create',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'body',
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'instanceId' => 
              array (
                'title' => '资源id',
                'description' => '资源id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '12221',
              ),
              'instanceType' => 
              array (
                'title' => '资源类型',
                'description' => '资源类型',
                'type' => 'string',
                'required' => false,
                'example' => 'INCIDENT 事件 ALERT告警 PROBLEM故障',
              ),
              'richText' => 
              array (
                'title' => '文本内容',
                'description' => '文本内容',
                'type' => 'string',
                'required' => false,
                'example' => '这是一个富文本',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'instanceId' => 
                  array (
                    'title' => '资源id',
                    'description' => '资源id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1231',
                  ),
                  'instanceType' => 
                  array (
                    'title' => '资源类型',
                    'description' => '资源类型',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '0 事件 1告警 2 故障',
                  ),
                  'richText' => 
                  array (
                    'title' => '富文本内容',
                    'description' => '富文本内容',
                    'type' => 'string',
                    'example' => '这是一个富文本',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"requestId\\": \\"10REQUES-AC5C-4B59-BE11-378F117A6A88\\",\\n  \\"data\\": {\\n    \\"instanceId\\": 1231,\\n    \\"instanceType\\": 0,\\n    \\"richText\\": \\"这是一个富文本\\"\\n  }\\n}","type":"json"}]',
      'title' => '创建富文本',
    ),
    'GetRichText' => 
    array (
      'summary' => '获取富文本信息。',
      'path' => '/rich/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'richTextId' => 
              array (
                'title' => '资源id',
                'description' => '资源id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '12221才',
              ),
              'instanceId' => 
              array (
                'title' => '资源类型',
                'description' => '资源类型',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => 'INCIDENT 事件 ALERT告警 PROBLEM故障',
              ),
              'instanceType' => 
              array (
                'description' => 'INCIDENT 事件、ALERT 报警、PROBLEM 故障',
                'type' => 'string',
                'required' => false,
                'example' => 'INCIDENT',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'instanceId' => 
                  array (
                    'title' => '资源id',
                    'description' => '资源id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '123123',
                  ),
                  'richText' => 
                  array (
                    'title' => '富文本内容',
                    'description' => '富文本内容',
                    'type' => 'string',
                    'example' => '这是一个富文本',
                  ),
                  'instanceType' => 
                  array (
                    'title' => '资源类型',
                    'description' => '资源类型',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '0 事件 1告警 2 故障',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"requestId\\": \\"4361a0e1-6747-4834-96ce-0c4840fd3812\\",\\n  \\"data\\": {\\n    \\"instanceId\\": 123123,\\n    \\"richText\\": \\"这是一个富文本\\",\\n    \\"instanceType\\": 0\\n  }\\n}","type":"json"}]',
      'title' => '获取富文本信息',
      'requestParamsDescription' => '{
  "richTextId" : 111111,
  "instanceId" : 111111111,
  "instanceType" : "INCIDENT"
}',
      'responseParamsDescription' => '{
    "requestId": "4361a0e1-6747-4834-96ce-0c4840fd3812",
    "data": {
        "instanceId": 123123,
        "richText": "这是一个富文本"
    }
}',
    ),
    'UpdateRichText' => 
    array (
      'summary' => '更新富文本。',
      'path' => '/rich/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'richTextId' => 
              array (
                'title' => '富文本id',
                'description' => '富文本id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123112313',
              ),
              'instanceId' => 
              array (
                'title' => '资源id',
                'description' => '资源id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123123',
              ),
              'instanceType' => 
              array (
                'title' => '资源类型',
                'description' => '资源类型',
                'type' => 'string',
                'required' => false,
                'example' => 'INCIDENT 事件 ALERT告警 PROBLEM故障',
              ),
              'richText' => 
              array (
                'title' => '文本内容',
                'description' => '文本内容',
                'type' => 'string',
                'required' => false,
                'example' => '这是一个富文本',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'id' => 
                  array (
                    'title' => '富文本id',
                    'description' => '富文本id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\",\\n  \\"data\\": {\\n    \\"id\\": 12\\n  }\\n}","type":"json"}]',
      'title' => '更新富文本',
    ),
    'CreateSubscription' => 
    array (
      'summary' => '创建通知订阅。',
      'path' => '/notify/subscription/create',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'subscriptionTitle' => 
              array (
                'title' => '通知订阅名称',
                'description' => '通知订阅名称',
                'type' => 'string',
                'required' => true,
                'example' => 'testSubscription',
              ),
              'scope' => 
              array (
                'title' => '订阅范围类型',
                'description' => '订阅范围类型',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => 'SERVICE',
              ),
              'notifyObjectType' => 
              array (
                'title' => '通知对象类型',
                'description' => '通知对象类型',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => 'USER',
              ),
              'expiredType' => 
              array (
                'title' => '订阅时效',
                'description' => '订阅时效',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => 'LONG_TERM',
              ),
              'period' => 
              array (
                'title' => '时间段',
                'description' => '短期时间段',
                'type' => 'string',
                'required' => false,
                'example' => '20天',
              ),
              'scopeObjectList' => 
              array (
                'title' => '订阅范围列表',
                'description' => '订阅范围列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'Object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'scopeObjectId' => 
                    array (
                      'title' => '订阅范围对象id',
                      'description' => '订阅范围对象id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '1',
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
              ),
              'notifyObjectList' => 
              array (
                'title' => '通知对象列表',
                'description' => '通知对象列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'Object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'notifyObjectId' => 
                    array (
                      'title' => '通知对象id',
                      'description' => '通知对象id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '2',
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
              ),
              'notifyStrategyList' => 
              array (
                'title' => '通知策略列表',
                'description' => '通知策略列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'Object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'instanceType' => 
                    array (
                      'title' => '订阅实例类型，事件、报警、故障',
                      'description' => '订阅实例类型，事件、报警、故障',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => 'INCIDENT',
                    ),
                    'strategies' => 
                    array (
                      'title' => '条件。json格式，包含多个条件，比如级别、影响程度 kv格式',
                      'description' => '条件。json格式，包含多个条件，比如级别、影响程度 kv格式',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'Object',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'conditions' => 
                          array (
                            'title' => '通知策略条件',
                            'description' => '通知策略条件',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => 'Object',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'effection' => 
                                array (
                                  'title' => '影响范围',
                                  'description' => '影响范围',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'HIGH',
                                ),
                                'problemNotifyType' => 
                                array (
                                  'title' => '故障通知类型',
                                  'description' => '故障通知类型',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'PROBLEM_UPDATE',
                                ),
                                'level' => 
                                array (
                                  'title' => '等级',
                                  'description' => '等级',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'P1',
                                ),
                                'action' => 
                                array (
                                  'title' => '时间动作',
                                  'description' => '动作',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'INCIDENT_TRIGGER',
                                ),
                              ),
                              'required' => false,
                            ),
                            'required' => false,
                          ),
                        ),
                        'required' => false,
                      ),
                      'required' => true,
                    ),
                    'channels' => 
                    array (
                      'title' => '渠道，多个逗号分隔',
                      'description' => '渠道，多个逗号分隔',
                      'type' => 'string',
                      'required' => true,
                      'example' => 'SMS,PHONE',
                    ),
                    'periodChannel' => 
                    array (
                      'title' => '分时段渠道',
                      'description' => '分时段通知订阅渠道',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'workday' => 
                        array (
                          'title' => '工作时段',
                          'description' => '工作日通知订阅渠道',
                          'type' => 'string',
                          'required' => false,
                          'example' => 'SMS,PHONE',
                        ),
                        'nonWorkday' => 
                        array (
                          'title' => '非工作时段',
                          'description' => '非工作日通知订阅渠道',
                          'type' => 'string',
                          'required' => false,
                          'example' => 'SMS,PHONE',
                        ),
                      ),
                      'required' => false,
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
              ),
              'clientToken' => 
              array (
                'title' => '幂等参数',
                'description' => '幂等参数',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378FTOKENA11',
              ),
              'startTime' => 
              array (
                'title' => '开始时间',
                'description' => '生效开始时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-02-03 10:10:10',
              ),
              'endTime' => 
              array (
                'title' => '结束时间',
                'description' => '失效时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-11-03 10:10:10',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'request id',
                'description' => 'request id',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'subscriptionId' => 
                  array (
                    'title' => '订阅id',
                    'description' => '订阅id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '101',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotifySubsAlreadyExists',
            'errorMessage' => 'The specified subscription already exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"10REQUES-AC5C-4B59-BE11-378F117A6A88\\",\\n  \\"data\\": {\\n    \\"subscriptionId\\": 101\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateSubscriptionResponse>\\n    <data>\\n        <subscriptionId>70002030</subscriptionId>\\n    </data>\\n    <requestId>366D5476-734A-4DA5-963E-9724F87470BC</requestId>\\n</CreateSubscriptionResponse>","errorExample":""}]',
      'title' => '创建通知订阅',
    ),
    'DeleteSubscription' => 
    array (
      'summary' => '删除通知订阅。',
      'path' => '/notify/subscription/delete',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'subscriptionId' => 
              array (
                'description' => '订阅id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"c26f36de-1ec8-496a-a828-880676c5ef81\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteSubscriptionResponse>\\n    <requestId>7C56D225-7C34-40BB-9624-C8BA449260E6</requestId>\\n</DeleteSubscriptionResponse>","errorExample":""}]',
      'title' => '删除通知订阅',
    ),
    'EnableSubscription' => 
    array (
      'summary' => '启用通知订阅	。',
      'path' => '/notify/subscription/enable',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'subscriptionId' => 
              array (
                'description' => '订阅id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotifySubsAlreadyEnable',
            'errorMessage' => 'The specified subscription is already enabled.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotifySubsNotExists',
            'errorMessage' => 'The specified subscription does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"c26f36de-1ec8-496a-a828-880676c5ef81\\"\\n}","errorExample":""},{"type":"xml","example":"<EnableSubscriptionResponse>\\n    <requestId>7C56D225-7C34-40BB-9624-C8BA449260E6</requestId>\\n</EnableSubscriptionResponse>","errorExample":""}]',
      'title' => '启用通知订阅',
    ),
    'UpdateSubscription' => 
    array (
      'summary' => '更新通知订阅。',
      'path' => '/notify/subscription/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'subscriptionId' => 
              array (
                'title' => '主键',
                'description' => '主键',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '80002020',
              ),
              'subscriptionTitle' => 
              array (
                'title' => '通知订阅名称',
                'description' => '通知订阅名称',
                'type' => 'string',
                'required' => true,
                'example' => 'newSubs244',
              ),
              'scope' => 
              array (
                'title' => '订阅范围类型',
                'description' => '订阅范围类型',
                'type' => 'string',
                'required' => true,
                'example' => 'SERVICE',
              ),
              'notifyObjectType' => 
              array (
                'title' => '通知对象类型',
                'description' => '通知对象类型',
                'type' => 'string',
                'required' => true,
                'example' => 'USER',
              ),
              'expiredType' => 
              array (
                'title' => '订阅时效',
                'description' => '订阅时效',
                'type' => 'string',
                'required' => true,
                'example' => 'LONG_TERM',
              ),
              'period' => 
              array (
                'title' => '时间段字符串',
                'description' => '订阅时效',
                'type' => 'string',
                'required' => false,
                'example' => '20天',
              ),
              'scopeObjectList' => 
              array (
                'title' => '订阅范围列表',
                'description' => '订阅范围列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'id' => 
                    array (
                      'title' => '主键id',
                      'description' => '主键id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '1',
                    ),
                    'scopeObjectId' => 
                    array (
                      'title' => '订阅范围对象id',
                      'description' => '订阅范围对象id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '1',
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
              ),
              'notifyObjectList' => 
              array (
                'title' => '通知对象列表',
                'description' => '通知对象列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'id' => 
                    array (
                      'title' => '主键id',
                      'description' => '主键id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '10',
                    ),
                    'notifyObjectId' => 
                    array (
                      'title' => '通知对象id',
                      'description' => '通知对象id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '19',
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
              ),
              'notifyStrategyList' => 
              array (
                'title' => '通知策略列表',
                'description' => '通知策略列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'instanceType' => 
                    array (
                      'title' => '订阅实例类型，事件、报警、故障',
                      'description' => '订阅实例类型，事件、报警、故障',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => 'INCIDENT',
                    ),
                    'strategies' => 
                    array (
                      'title' => '通知策略',
                      'description' => '通知策略',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'object',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'id' => 
                          array (
                            'title' => 'id',
                            'description' => '报警等级',
                            'type' => 'string',
                            'required' => false,
                            'example' => '10',
                          ),
                          'channels' => 
                          array (
                            'title' => '故障等级',
                            'description' => '故障等级',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'SMS,WEIXIN_GROUP',
                          ),
                          'conditions' => 
                          array (
                            'title' => '影响程度',
                            'description' => '影响程度',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => 'object',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'level' => 
                                array (
                                  'title' => '等级',
                                  'description' => '等级',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'P1',
                                ),
                                'effection' => 
                                array (
                                  'title' => '影响程度',
                                  'description' => '影响程度',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'HIGH',
                                ),
                                'problemNotifyType' => 
                                array (
                                  'title' => '故障通知类型',
                                  'description' => '故障通知类型',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'PROBLEM_NOTIFY',
                                ),
                                'action' => 
                                array (
                                  'title' => '事件动作',
                                  'description' => '事件动作',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'INCIDENT_TRIGGER',
                                ),
                              ),
                              'required' => false,
                            ),
                            'required' => false,
                          ),
                          'periodChannel' => 
                          array (
                            'title' => '分时段通知渠道',
                            'description' => '分时段通知订阅渠道',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'workday' => 
                              array (
                                'title' => '工作时间',
                                'description' => '工作日通知订阅渠道',
                                'type' => 'string',
                                'required' => false,
                                'example' => 'SMS,WEIXIN_GROUP',
                              ),
                              'nonWorkday' => 
                              array (
                                'title' => '非工作时间',
                                'description' => '非工作日通知订阅渠道',
                                'type' => 'string',
                                'required' => false,
                                'example' => 'SMS,WEIXIN_GROUP',
                              ),
                            ),
                            'required' => false,
                          ),
                        ),
                        'required' => false,
                      ),
                      'required' => true,
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
              ),
              'startTime' => 
              array (
                'title' => '开始时间',
                'description' => '生效开始时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-04-04 10:10:11',
              ),
              'endTime' => 
              array (
                'title' => '结束时间',
                'description' => '失效时间',
                'type' => 'string',
                'required' => false,
                'example' => '2022-05-09 10:10:23',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'id of the request',
                'type' => 'string',
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotifySubsAlreadyExists',
            'errorMessage' => 'The specified subscription already exists.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotifySubsNotExists',
            'errorMessage' => 'The specified subscription does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"c26f36de-1ec8-496a-a828-880676c5ef81\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateSubscriptionResponse>\\n    <requestId>7C56D225-7C34-40BB-9624-C8BA449260E6</requestId>\\n</UpdateSubscriptionResponse>","errorExample":""}]',
      'title' => '更新通知订阅',
    ),
    'GetSubscription' => 
    array (
      'summary' => '通知订阅详情。',
      'path' => '/notify/subscription/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'subscriptionId' => 
              array (
                'description' => '订阅id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10',
              ),
              'notFilterScopeObjectDeleted' => 
              array (
                'title' => '不过滤已删除订阅范围对象（为true时，已删除过滤对象也会查到）',
                'type' => 'boolean',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'requestId',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
              'data' => 
              array (
                'description' => 'Object',
                'type' => 'object',
                'properties' => 
                array (
                  'subscriptionId' => 
                  array (
                    'description' => '订阅id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '68',
                  ),
                  'subscriptionTitle' => 
                  array (
                    'title' => '通知订阅名称',
                    'description' => '通知订阅名称',
                    'type' => 'string',
                    'example' => 'newTitle',
                  ),
                  'scope' => 
                  array (
                    'title' => '0 全部 1服务 2 流转规则',
                    'description' => 'ALL全部 SERVICE服务 ROUTERULE 流转规则',
                    'type' => 'string',
                    'example' => 'SERVICE',
                  ),
                  'notifyObjectType' => 
                  array (
                    'title' => '0服务组 1个人',
                    'description' => 'SERVICEGROUP服务组 USER个人',
                    'type' => 'string',
                    'example' => 'USER',
                  ),
                  'expiredType' => 
                  array (
                    'title' => '有效期类型 0 长期 1短期',
                    'description' => '有效期类型 LONG_TERM长期 SHORT_TERM短期',
                    'type' => 'string',
                    'example' => 'LONG_TERM',
                  ),
                  'period' => 
                  array (
                    'title' => '时间段字符串',
                    'description' => '时间段字符串',
                    'type' => 'string',
                    'example' => '1个月',
                  ),
                  'startTime' => 
                  array (
                    'title' => '时效开始时间',
                    'description' => '时效开始时间',
                    'type' => 'string',
                    'example' => '2020-05-9 10:10:10',
                  ),
                  'endTime' => 
                  array (
                    'title' => '时效结束时间',
                    'description' => '时效结束时间',
                    'type' => 'string',
                    'example' => '2021-08-9 10:10:10',
                  ),
                  'status' => 
                  array (
                    'title' => '1 启用 0禁用',
                    'description' => 'ENABLE启用 DISABLE禁用',
                    'type' => 'string',
                    'example' => 'ENABLE',
                  ),
                  'scopeObjectList' => 
                  array (
                    'description' => 'Array',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'Object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'id' => 
                        array (
                          'title' => 'id主键',
                          'description' => 'id主键',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '10',
                        ),
                        'scope' => 
                        array (
                          'title' => '订阅范围类型 0 全部 1服务 2 流转规则',
                          'description' => '订阅范围类型ALL全部 SERVICE服务 ROUTERULE 流转规则',
                          'type' => 'string',
                          'example' => 'SERVICE',
                        ),
                        'scopeObjectId' => 
                        array (
                          'title' => '订阅范围对象关联表主键id',
                          'description' => '订阅范围对象关联表主键id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '10',
                        ),
                        'scopeObject' => 
                        array (
                          'title' => '订阅范围对象名称',
                          'description' => '订阅范围对象名称',
                          'type' => 'string',
                          'example' => '阿里云',
                        ),
                        'isValid' => 
                        array (
                          'title' => '是否有效 0无效 1有效',
                          'type' => 'integer',
                          'format' => 'int64',
                        ),
                      ),
                    ),
                  ),
                  'notifyObjectList' => 
                  array (
                    'title' => '通知对象列表',
                    'description' => '通知对象列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'Object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'id' => 
                        array (
                          'title' => 'id主键',
                          'description' => 'id主键',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '23',
                        ),
                        'notifyObjectType' => 
                        array (
                          'title' => '通知对象类型0服务组 1个人',
                          'description' => '通知对象类型SERVICEGROUP服务组 USER个人',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => 'USER',
                        ),
                        'notifyObjectId' => 
                        array (
                          'title' => '关联主键id',
                          'description' => '关联主键id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '19',
                        ),
                        'name' => 
                        array (
                          'title' => '通知对象名',
                          'description' => '通知对象名',
                          'type' => 'string',
                          'example' => 'TestName',
                        ),
                      ),
                    ),
                  ),
                  'notifyStrategyList' => 
                  array (
                    'title' => '通知策略列表',
                    'description' => '通知策略列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'Object
',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'instanceType' => 
                        array (
                          'title' => '订阅实例类型，0事件、1报警、2故障',
                          'description' => '订阅实例类型，INCIDENT事件、ALERT报警、PROBLEM故障',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => 'INCIDENT',
                        ),
                        'strategies' => 
                        array (
                          'title' => '策略',
                          'description' => '策略',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'Object',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'id' => 
                              array (
                                'title' => '策略主键',
                                'description' => '策略主键',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '12',
                              ),
                              'channels' => 
                              array (
                                'title' => '通知渠道',
                                'description' => '通知渠道',
                                'type' => 'string',
                                'example' => 'SMS',
                              ),
                              'conditions' => 
                              array (
                                'title' => '条件',
                                'description' => '条件',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => 'Object',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'effection' => 
                                    array (
                                      'title' => '影响范围',
                                      'description' => '影响范围',
                                      'type' => 'string',
                                      'example' => 'HIGH',
                                    ),
                                    'problemNotifyType' => 
                                    array (
                                      'title' => '故障通知类型',
                                      'description' => '故障通知类型',
                                      'type' => 'string',
                                      'example' => 'PROBLEM_NOTIFY',
                                    ),
                                    'level' => 
                                    array (
                                      'title' => '等级',
                                      'description' => '等级',
                                      'type' => 'string',
                                      'example' => 'P1',
                                    ),
                                    'action' => 
                                    array (
                                      'title' => '事件动作',
                                      'description' => '时间动作',
                                      'type' => 'string',
                                      'example' => 'INCIDENT_TRIGGER',
                                    ),
                                  ),
                                ),
                              ),
                              'periodChannel' => 
                              array (
                                'title' => '分时间段渠道',
                                'description' => '分时间段渠道',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'workday' => 
                                  array (
                                    'title' => '工作时间',
                                    'description' => '工作时间',
                                    'type' => 'string',
                                    'example' => 'DINGDING',
                                  ),
                                  'nonWorkday' => 
                                  array (
                                    'title' => '非工作时间',
                                    'description' => '非工作时间',
                                    'type' => 'string',
                                    'example' => 'DINGDING',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotifySubsNotExists',
            'errorMessage' => 'The specified subscription does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"10REQUES-AC5C-4B59-BE11-378F117A6A88\\",\\n  \\"data\\": {\\n    \\"subscriptionId\\": 68,\\n    \\"subscriptionTitle\\": \\"newTitle\\",\\n    \\"scope\\": \\"SERVICE\\",\\n    \\"notifyObjectType\\": \\"USER\\",\\n    \\"expiredType\\": \\"LONG_TERM\\",\\n    \\"period\\": \\"1个月\\",\\n    \\"startTime\\": \\"2020-05-9 10:10:10\\",\\n    \\"endTime\\": \\"2021-08-9 10:10:10\\",\\n    \\"status\\": \\"ENABLE\\",\\n    \\"scopeObjectList\\": [\\n      {\\n        \\"id\\": 10,\\n        \\"scope\\": \\"SERVICE\\",\\n        \\"scopeObjectId\\": 10,\\n        \\"scopeObject\\": \\"阿里云\\"\\n      }\\n    ],\\n    \\"notifyObjectList\\": [\\n      {\\n        \\"id\\": 23,\\n        \\"notifyObjectType\\": 0,\\n        \\"notifyObjectId\\": 19,\\n        \\"name\\": \\"TestName\\"\\n      }\\n    ],\\n    \\"notifyStrategyList\\": [\\n      {\\n        \\"instanceType\\": 0,\\n        \\"strategies\\": [\\n          {\\n            \\"id\\": 12,\\n            \\"channels\\": \\"SMS\\",\\n            \\"conditions\\": [\\n              {\\n                \\"effection\\": \\"HIGH\\",\\n                \\"problemNotifyType\\": \\"PROBLEM_NOTIFY\\",\\n                \\"level\\": \\"P1\\",\\n                \\"action\\": \\"INCIDENT_TRIGGER\\"\\n              }\\n            ],\\n            \\"periodChannel\\": {\\n              \\"workday\\": \\"DINGDING\\",\\n              \\"nonWorkday\\": \\"DINGDING\\"\\n            }\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetSubscriptionResponse>\\n    <requestId>10REQUES-AC5C-4B59-BE11-378F117A6A88</requestId>\\n    <data>\\n        <subscriptionId>68</subscriptionId>\\n        <subscriptionTitle>newTitle</subscriptionTitle>\\n        <scope>SERVICE</scope>\\n        <notifyObjectType>USER</notifyObjectType>\\n        <expiredType>LONG_TERM</expiredType>\\n        <period>1个月</period>\\n        <startTime>2020-05-9 10:10:10</startTime>\\n        <endTime>2021-08-9 10:10:10</endTime>\\n        <status>ENABLE</status>\\n        <scopeObjectList>\\n            <id>10</id>\\n            <scope>SERVICE</scope>\\n            <scopeObjectId>10</scopeObjectId>\\n            <scopeObject>阿里云</scopeObject>\\n        </scopeObjectList>\\n        <notifyObjectList>\\n            <id>23</id>\\n            <notifyObjectId>19</notifyObjectId>\\n            <name>TestName</name>\\n        </notifyObjectList>\\n        <notifyStrategyList>\\n            <strategies>\\n                <id>12</id>\\n                <channels>SMS</channels>\\n                <conditions>\\n                    <effection>HIGH</effection>\\n                    <problemNotifyType>PROBLEM_NOTIFY</problemNotifyType>\\n                    <level>P1</level>\\n                    <action>INCIDENT_TRIGGER</action>\\n                </conditions>\\n                <periodChannel>\\n                    <workday>DINGDING</workday>\\n                    <nonWorkday>DINGDING</nonWorkday>\\n                </periodChannel>\\n            </strategies>\\n        </notifyStrategyList>\\n    </data>\\n</GetSubscriptionResponse>","errorExample":""}]',
      'title' => '通知订阅详情',
    ),
    'DisableSubscription' => 
    array (
      'summary' => '禁用通知订阅。',
      'path' => '/notify/subscription/doDisable',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'subscriptionId' => 
              array (
                'description' => '订阅id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '89',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'requestId',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotifySubsAlreadyDisable',
            'errorMessage' => 'The specified subscription is already disabled.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotifySubsNotExists',
            'errorMessage' => 'The specified subscription does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"10REQUES-AC5C-4B59-BE11-378F117A6A88\\"\\n}","errorExample":""},{"type":"xml","example":"<DisableSubscriptionResponse>\\n    <requestId>7C56D225-7C34-40BB-9624-C8BA449260E6</requestId>\\n</DisableSubscriptionResponse>","errorExample":""}]',
      'title' => '禁用通知订阅',
    ),
    'ListSubscriptions' => 
    array (
      'summary' => '通知订阅列表。',
      'path' => '/notify/subscription/list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'pageNumber' => 
              array (
                'title' => '第几页',
                'description' => '第几页',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '一页几条',
                'description' => '一页几条',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '10',
              ),
              'subscriptionTitle' => 
              array (
                'title' => '通知订阅名',
                'description' => '通知订阅名',
                'type' => 'string',
                'required' => false,
                'example' => 'newTitle',
              ),
              'scope' => 
              array (
                'title' => '订阅范围类型 0全部1服务2流转规则',
                'description' => '订阅范围类型 ALL全部 SERVICE服务 ROUTERULE 流转规则',
                'type' => 'string',
                'required' => false,
                'example' => 'SERVICE',
              ),
              'scopeObject' => 
              array (
                'title' => '订阅范围对象名称',
                'description' => '订阅范围对象名称',
                'type' => 'string',
                'required' => false,
                'example' => 'TestName',
              ),
              'notifyObjectType' => 
              array (
                'title' => '通知对象类型notifyWhoType:0服务组 1个人',
                'description' => '通知对象类型：SERVICEGROUP服务组 USER个人',
                'type' => 'string',
                'required' => false,
                'example' => 'SERVICE',
              ),
              'notifyObject' => 
              array (
                'title' => '通知对象名',
                'description' => '通知对象名',
                'type' => 'string',
                'required' => false,
                'example' => 'test',
              ),
              'clientToken' => 
              array (
                'title' => '幂等参数',
                'description' => '幂等参数',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378FTOKENA11',
              ),
              'notFilterScopeObjectDeleted' => 
              array (
                'title' => '不过滤已删除订阅范围对象（为true时，已删除过滤对象也会查到）',
                'type' => 'boolean',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'id of the request',
                'description' => 'id of the request',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'subscriptionId' => 
                    array (
                      'title' => '订阅id',
                      'description' => '订阅id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '10',
                    ),
                    'subscriptionTitle' => 
                    array (
                      'title' => '通知订阅名称',
                      'description' => '通知订阅名称',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'scope' => 
                    array (
                      'title' => '0 全部 1服务 2 流转规则',
                      'description' => '0 全部 1服务 2 流转规则',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => 'SERVICE',
                    ),
                    'notifyObjectType' => 
                    array (
                      'title' => '0服务组 1个人',
                      'description' => '0服务组 1个人',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => 'USER',
                    ),
                    'expiredType' => 
                    array (
                      'title' => '有效期类型 0 长期 1短期',
                      'description' => '有效期类型 LONG_TERM 长期 SHORT_TERM短期',
                      'type' => 'string',
                      'example' => 'LONG_TERM',
                    ),
                    'startTime' => 
                    array (
                      'title' => '时效开始时间',
                      'description' => '时效开始时间',
                      'type' => 'string',
                      'example' => '2020-05-09 10:10:10',
                    ),
                    'endTime' => 
                    array (
                      'title' => '时效结束时间',
                      'description' => '时效结束时间',
                      'type' => 'string',
                      'example' => '2022-05-09 10:10:10',
                    ),
                    'status' => 
                    array (
                      'title' => 'ENABLE 启用 DISABLE禁用',
                      'description' => '1 启用 0禁用',
                      'type' => 'string',
                      'example' => 'ENABLE',
                    ),
                    'scopeObjectList' => 
                    array (
                      'title' => '订阅范围列表',
                      'description' => '订阅范围列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'id' => 
                          array (
                            'title' => 'id主键',
                            'description' => 'id主键',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '10',
                          ),
                          'scope' => 
                          array (
                            'title' => '订阅范围类型 ALL全部 SERVICE服务 ROUTETULE流转规则',
                            'description' => '订阅范围类型 ALL全部 SERVICE服务 ROUTERULE 流转规则',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => 'SERVICE',
                          ),
                          'scopeObjectId' => 
                          array (
                            'title' => '订阅范围对象关联表主键id',
                            'description' => '订阅范围对象关联表主键id',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '10',
                          ),
                          'scopeObject' => 
                          array (
                            'title' => '订阅范围对象名称',
                            'description' => '订阅范围对象名称',
                            'type' => 'string',
                            'example' => '阿里云服务',
                          ),
                          'isValid' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int64',
                          ),
                        ),
                      ),
                    ),
                    'notifyObjectList' => 
                    array (
                      'title' => '通知对象列表',
                      'description' => '通知对象列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'object',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'id' => 
                          array (
                            'title' => 'id主键',
                            'description' => 'id主键',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '10',
                          ),
                          'notifyObjectType' => 
                          array (
                            'title' => '通知对象类型0服务组 1个人',
                            'description' => '通知对象类型SERVICEGROUP服务组 USER个人',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => 'USER',
                          ),
                          'notifyObjectId' => 
                          array (
                            'title' => '关联主键id',
                            'description' => '关联主键id',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '10',
                          ),
                          'name' => 
                          array (
                            'title' => '通知对象名',
                            'description' => '通知对象名',
                            'type' => 'string',
                            'example' => '张珊',
                          ),
                          'isValid' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int64',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'totalCount' => 
              array (
                'title' => '分页参数',
                'description' => '分页参数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
              'pageNumber' => 
              array (
                'title' => '分页参数',
                'description' => '分页参数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '分页参数',
                'description' => '分页参数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"10REQUES-AC5C-4B59-BE11-378F117A6A88\\",\\n  \\"data\\": [\\n    {\\n      \\"subscriptionId\\": 10,\\n      \\"subscriptionTitle\\": \\"test\\",\\n      \\"scope\\": 0,\\n      \\"notifyObjectType\\": 0,\\n      \\"expiredType\\": \\"LONG_TERM\\",\\n      \\"startTime\\": \\"2020-05-09 10:10:10\\",\\n      \\"endTime\\": \\"2022-05-09 10:10:10\\",\\n      \\"status\\": \\"ENABLE\\",\\n      \\"scopeObjectList\\": [\\n        {\\n          \\"id\\": 10,\\n          \\"scope\\": 0,\\n          \\"scopeObjectId\\": 10,\\n          \\"scopeObject\\": \\"阿里云服务\\"\\n        }\\n      ],\\n      \\"notifyObjectList\\": [\\n        {\\n          \\"id\\": 10,\\n          \\"notifyObjectType\\": 0,\\n          \\"notifyObjectId\\": 10,\\n          \\"name\\": \\"张珊\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\"totalCount\\": 100,\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10\\n}","errorExample":""},{"type":"xml","example":"<ListSubscriptionsResponse>\\n    <requestId>10REQUES-AC5C-4B59-BE11-378F117A6A88</requestId>\\n    <data>\\n        <subscriptionId>10</subscriptionId>\\n        <subscriptionTitle>test</subscriptionTitle>\\n        <expiredType>LONG_TERM</expiredType>\\n        <startTime>2020-05-09 10:10:10</startTime>\\n        <endTime>2022-05-09 10:10:10</endTime>\\n        <status>ENABLE</status>\\n        <scopeObjectList>\\n            <id>10</id>\\n            <scopeObjectId>10</scopeObjectId>\\n            <scopeObject>阿里云服务</scopeObject>\\n        </scopeObjectList>\\n        <notifyObjectList>\\n            <id>10</id>\\n            <notifyObjectId>10</notifyObjectId>\\n            <name>张珊</name>\\n        </notifyObjectList>\\n    </data>\\n    <totalCount>100</totalCount>\\n    <pageNumber>1</pageNumber>\\n    <pageSize>10</pageSize>\\n</ListSubscriptionsResponse>","errorExample":""}]',
      'title' => '通知订阅列表',
    ),
    'CreateIntegrationConfig' => 
    array (
      'summary' => '创建集成配置。',
      'path' => '/integrationConfig/create',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'monitorSourceId' => 
              array (
                'description' => '监控源id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '监控源id',
              ),
              'clientToken' => 
              array (
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'id of the request',
                'type' => 'string',
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'integrationConfigId' => 
                  array (
                    'title' => '集成配置id',
                    'description' => '集成配置id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '101',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigAlreadyExists',
            'errorMessage' => 'The specified integration config already exists.',
          ),
          1 => 
          array (
            'errorCode' => 'CreateIntegrationConfigFail',
            'errorMessage' => 'Failed to create integration config.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'MonitorSourceNotExists',
            'errorMessage' => 'The specified monitor source does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"601FA6A2-AC5C-4B59-BE11-378F887A6A11\\",\\n  \\"data\\": {\\n    \\"integrationConfigId\\": 101\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateIntegrationConfigResponse>\\n    <data>\\n        <integrationConfigId>12345703</integrationConfigId>\\n    </data>\\n    <requestId>E0FACD07-6BC4-4384-819D-B1523BD5EB85</requestId>\\n</CreateIntegrationConfigResponse>","errorExample":""}]',
      'title' => '创建集成配置',
    ),
    'DisableIntegrationConfig' => 
    array (
      'summary' => '禁用集成配置。',
      'path' => '/integrationConfig/disable',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'integrationConfigId' => 
              array (
                'description' => '集成配置id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '12345703',
              ),
              'clientToken' => 
              array (
                'title' => '幂等id',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotIntegrated',
            'errorMessage' => 'The specified integration config is not integrated.',
          ),
          1 => 
          array (
            'errorCode' => 'IntegationConfigAlreadyDisable',
            'errorMessage' => 'The specified integration config is already disabled.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotExists',
            'errorMessage' => 'The specified integration config does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"601FA6A2-AC5C-4B59-BE11-378F887A6A11\\"\\n}","errorExample":""},{"type":"xml","example":"<DisableIntegrationConfigResponse>\\n    <requestId>9B77C7A5-DFBC-4CEF-A710-C802EA9EA8EE</requestId>\\n</DisableIntegrationConfigResponse>","errorExample":""}]',
      'title' => '禁用集成配置',
    ),
    'EnableIntegrationConfig' => 
    array (
      'summary' => '启用集成配置。',
      'path' => '/integrationConfig/enable',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'integrationConfigId' => 
              array (
                'description' => '集成配置id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '101',
              ),
              'clientToken' => 
              array (
                'title' => '幂等id',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'requestId',
                'type' => 'string',
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotIntegrated',
            'errorMessage' => 'The specified integration config is not integrated.',
          ),
          1 => 
          array (
            'errorCode' => 'IntegationConfigAlreadyEnable',
            'errorMessage' => 'The specified integration config is already enabled.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotExists',
            'errorMessage' => 'The specified integration config does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"601FA6A2-AC5C-4B59-BE11-378F887A6A11\\"\\n}","errorExample":""},{"type":"xml","example":"<EnableIntegrationConfigResponse>\\n    <requestId>953F7437-1A7E-41A5-BAD9-086E20E579F8</requestId>\\n</EnableIntegrationConfigResponse>","errorExample":""}]',
      'title' => '启用集成配置',
    ),
    'GetIntegrationConfig' => 
    array (
      'summary' => '集成配置详情	。',
      'path' => '/integrationConfig/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'integrationConfigId' => 
              array (
                'title' => '集成配置id',
                'description' => '集成配置id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '68',
              ),
              'clientToken' => 
              array (
                'title' => '幂等id',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'integrationConfigId' => 
                  array (
                    'title' => '集成配置id、',
                    'description' => '集成配置id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '101',
                  ),
                  'monitorSourceId' => 
                  array (
                    'title' => '监控源id',
                    'description' => '监控源id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '65',
                  ),
                  'monitorSourceName' => 
                  array (
                    'title' => '监控源名称',
                    'description' => '监控源名称',
                    'type' => 'string',
                    'example' => 'Zabbix',
                  ),
                  'monitorSourceShortName' => 
                  array (
                    'title' => '监控源简称',
                    'description' => '监控源简称',
                    'type' => 'string',
                    'example' => 'Zabbix',
                  ),
                  'accessKey' => 
                  array (
                    'title' => '集成秘钥',
                    'description' => '集成密钥',
                    'type' => 'string',
                    'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
                  ),
                  'isReceivedEvent' => 
                  array (
                    'title' => '是否接收报警',
                    'description' => '是否接收报警',
                    'type' => 'boolean',
                    'example' => 'True',
                  ),
                  'status' => 
                  array (
                    'title' => '集成配置状态，DISABLE 禁用，INTEGRATED 已集成，UNINTEGRATED未集成',
                    'description' => '集成配置状态，DISABLE 禁用，INTEGRATED 已集成，UNINTEGRATED未集成',
                    'type' => 'string',
                    'example' => 'INTEGRATED',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotExists',
            'errorMessage' => 'The specified integration config does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"601FA6A2-AC5C-4B59-BE11-378F887A6A11\\",\\n  \\"data\\": {\\n    \\"integrationConfigId\\": 101,\\n    \\"monitorSourceId\\": 65,\\n    \\"monitorSourceName\\": \\"Zabbix\\",\\n    \\"monitorSourceShortName\\": \\"Zabbix\\",\\n    \\"accessKey\\": \\"601FA6A2-AC5C-4B59-BE11-378F887A6A11\\",\\n    \\"isReceivedEvent\\": true,\\n    \\"status\\": \\"INTEGRATED\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetIntegrationConfigResponse>\\n    <requestId>601FA6A2-AC5C-4B59-BE11-378F887A6A11</requestId>\\n    <data>\\n        <integrationConfigId>101</integrationConfigId>\\n        <monitorSourceId>65</monitorSourceId>\\n        <monitorSourceName>Zabbix</monitorSourceName>\\n        <monitorSourceShortName>Zabbix</monitorSourceShortName>\\n        <accessKey>601FA6A2-AC5C-4B59-BE11-378F887A6A11</accessKey>\\n        <isReceivedEvent>true</isReceivedEvent>\\n        <status>INTEGRATED</status>\\n    </data>\\n</GetIntegrationConfigResponse>","errorExample":""}]',
      'title' => '集成配置详情',
    ),
    'ListIntegrationConfigs' => 
    array (
      'summary' => '集成配置列表。',
      'path' => '/integrationConfig/list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'monitorSourceName' => 
              array (
                'description' => '监控源名称',
                'type' => 'string',
                'required' => false,
                'example' => 'Zabbix',
              ),
              'clientToken' => 
              array (
                'title' => '幂等id',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'id of the request',
                'type' => 'string',
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '集成配置',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'integrationConfigId' => 
                    array (
                      'title' => '集成配置id',
                      'description' => '集成配置id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1023',
                    ),
                    'monitorSourceId' => 
                    array (
                      'title' => '监控源id',
                      'description' => '监控源id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '87',
                    ),
                    'monitorSourceName' => 
                    array (
                      'title' => '监控源名城',
                      'description' => '监控源名城',
                      'type' => 'string',
                      'example' => 'Zabbix',
                    ),
                    'monitorSourceShortName' => 
                    array (
                      'title' => '监控源简称',
                      'description' => '监控源简称',
                      'type' => 'string',
                      'example' => 'Zabbix',
                    ),
                    'isReceivedEvent' => 
                    array (
                      'title' => '是否已接受报警',
                      'description' => '是否已接受报警',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'status' => 
                    array (
                      'title' => '集成配置状态',
                      'description' => '集成配置状态',
                      'type' => 'string',
                      'example' => 'NOT_INTEGRATED',
                    ),
                    'monitorSourceType' => 
                    array (
                      'title' => '0:非自定义监控源  1:自定义监控源',
                      'description' => '0:非自定义监控源  1:自定义监控源',
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"601FA6A2-AC5C-4B59-BE11-378F887A6A11\\",\\n  \\"data\\": [\\n    {\\n      \\"integrationConfigId\\": 1023,\\n      \\"monitorSourceId\\": 87,\\n      \\"monitorSourceName\\": \\"Zabbix\\",\\n      \\"monitorSourceShortName\\": \\"Zabbix\\",\\n      \\"isReceivedEvent\\": false,\\n      \\"status\\": \\"NOT_INTEGRATED\\",\\n      \\"monitorSourceType\\": 0\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListIntegrationConfigsResponse>\\n    <requestId>601FA6A2-AC5C-4B59-BE11-378F887A6A11</requestId>\\n    <data>\\n        <integrationConfigId>1023</integrationConfigId>\\n        <monitorSourceId>87</monitorSourceId>\\n        <monitorSourceName>Zabbix</monitorSourceName>\\n        <monitorSourceShortName>Zabbix</monitorSourceShortName>\\n        <isReceivedEvent>false</isReceivedEvent>\\n        <status>NOT_INTEGRATED</status>\\n    </data>\\n</ListIntegrationConfigsResponse>","errorExample":""}]',
      'title' => '集成配置列表',
      'requestParamsDescription' => '{
  "monitorSourceName" : "Zabbix",
  "clientToken" : "601FA6A2-AC5C-4B59-BE11-378F887A6A11"
}',
      'responseParamsDescription' => '{
    "requestId": "601FA6A2-AC5C-4B59-BE11-378F887A6A11",
    "data": [
        {
            "integrationConfigId": 1023,
            "monitorSourceId": 87,
            "monitorSourceName": "Zabbix",
            "monitorSourceShortName": "Zabbix",
            "isReceivedEvent": false,
            "status": "NOT_INTEGRATED"
        }
    ]
}',
    ),
    'ListIntegrationConfigTimelines' => 
    array (
      'summary' => '集成配置操作日志。',
      'path' => '/integrationConfig/timeline',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'integrationConfigId' => 
              array (
                'title' => '集成配置id',
                'description' => '集成配置id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '101',
              ),
              'pageNumber' => 
              array (
                'title' => '分页参数',
                'description' => '分页参数',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '分页参数',
                'description' => '分页参数',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10',
              ),
              'clientToken' => 
              array (
                'title' => '幂等参数',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'data' => 
              array (
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '时间线节点',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'title' => 
                    array (
                      'title' => '主题',
                      'description' => '主题',
                      'type' => 'string',
                      'example' => '时间线标题',
                    ),
                    'description' => 
                    array (
                      'title' => '描述',
                      'description' => '描述',
                      'type' => 'string',
                      'example' => '描述xxxxx',
                    ),
                    'createTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2021-04-05 10:10:10',
                    ),
                  ),
                ),
              ),
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
              'totalCount' => 
              array (
                'title' => 'totalCount',
                'description' => 'totalCount',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '103',
              ),
              'pageNumber' => 
              array (
                'title' => 'pageNumber',
                'description' => 'pageNumber',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => 'pageSize',
                'description' => 'pageSize',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotExists',
            'errorMessage' => 'The specified integration config does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"data\\": [\\n    {\\n      \\"title\\": \\"时间线标题\\",\\n      \\"description\\": \\"描述xxxxx\\",\\n      \\"createTime\\": \\"2021-04-05 10:10:10\\"\\n    }\\n  ],\\n  \\"requestId\\": \\"601FA6A2-AC5C-4B59-BE11-378F887A6A11\\",\\n  \\"totalCount\\": 103,\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10\\n}","errorExample":""},{"type":"xml","example":"<ListIntegrationConfigTimelinesResponse>\\n    <data>\\n        <title>时间线标题</title>\\n        <description>描述xxxxx</description>\\n        <createTime>2021-04-05 10:10:10</createTime>\\n    </data>\\n    <requestId>601FA6A2-AC5C-4B59-BE11-378F887A6A11</requestId>\\n    <totalCount>103</totalCount>\\n    <pageNumber>1</pageNumber>\\n    <pageSize>10</pageSize>\\n</ListIntegrationConfigTimelinesResponse>","errorExample":""}]',
      'title' => '集成配置操作日志',
    ),
    'ConfirmIntegrationConfig' => 
    array (
      'summary' => '确认集成配置。',
      'path' => '/integrationConfig/confirm',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'integrationConfigId' => 
              array (
                'description' => '集成配置id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '101',
              ),
              'clientToken' => 
              array (
                'title' => '幂等id',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigAlreadyIntegrated',
            'errorMessage' => 'The specified integration config is already integrated.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotExists',
            'errorMessage' => 'The specified integration config does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"601FA6A2-AC5C-4B59-BE11-378F887A6A11\\"\\n}","errorExample":""},{"type":"xml","example":"<ConfirmIntegrationConfigResponse>\\n    <requestId>ADAB577F-5192-4301-B7C8-BE7B0FDB255E</requestId>\\n</ConfirmIntegrationConfigResponse>","errorExample":""}]',
      'title' => '确认集成配置',
    ),
    'DeleteIntegrationConfig' => 
    array (
      'summary' => '删除集成配置。',
      'path' => '/integrationConfig/delete',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'integrationConfigId' => 
              array (
                'title' => '集成配置id',
                'description' => '集成配置id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '100',
              ),
              'clientToken' => 
              array (
                'title' => '幂等id',
                'description' => '幂等id',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotExists',
            'errorMessage' => 'The specified integration config does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"601FA6A2-AC5C-4B59-BE11-378F887A6A11\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteIntegrationConfigResponse>\\n    <requestId>601FA6A2-AC5C-4B59-BE11-378F887A6A11</requestId>\\n</DeleteIntegrationConfigResponse>","errorExample":""}]',
      'title' => '删除集成配置',
    ),
    'UpdateIntegrationConfig' => 
    array (
      'summary' => '集成配置更新。',
      'path' => '/integrationConfig/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'integrationConfigId' => 
              array (
                'description' => '集成配置id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '103',
              ),
              'accessKey' => 
              array (
                'title' => '集成秘钥',
                'description' => 'accessKey',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
              'clientToken' => 
              array (
                'title' => '幂等id',
                'description' => '幂等id',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378F987A6A98',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotDisable',
            'errorMessage' => 'The specified integration config is not disabled.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotExists',
            'errorMessage' => 'The specified integration config does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"10REQUES-AC5C-4B59-BE11-378F117A6A88\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateIntegrationConfigResponse>\\n    <requestId>CE900955-A6DD-4923-9F53-6283B9D0D32A</requestId>\\n</UpdateIntegrationConfigResponse>","errorExample":""}]',
      'title' => '集成配置更新',
    ),
    'RefreshIntegrationConfigKey' => 
    array (
      'summary' => '刷新集成key。',
      'path' => '/integrationConfig/refreshKey',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'integrationConfigId' => 
              array (
                'description' => '集成配置id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '102',
              ),
              'clientToken' => 
              array (
                'title' => '幂等id',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'key' => 
                  array (
                    'title' => '集成秘钥',
                    'description' => '集成密钥',
                    'type' => 'string',
                    'example' => '859FA6A2-AC5C-4B09-BE23-986F887H6A232',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotDisable',
            'errorMessage' => 'The specified integration config is not disabled.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotExists',
            'errorMessage' => 'The specified integration config does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"601FA6A2-AC5C-4B59-BE11-378F887A6A11\\",\\n  \\"data\\": {\\n    \\"key\\": \\"859FA6A2-AC5C-4B09-BE23-986F887H6A232\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RefreshIntegrationConfigKeyResponse>\\n    <requestId>601FA6A2-AC5C-4B59-BE11-378F887A6A11</requestId>\\n    <data>\\n        <key>859FA6A2-AC5C-4B09-BE23-986F887H6A232</key>\\n    </data>\\n</RefreshIntegrationConfigKeyResponse>","errorExample":""}]',
      'title' => '刷新集成key',
    ),
    'CreateProblem' => 
    array (
      'summary' => '新增故障。',
      'path' => '/problem/upgrade',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'problemName' => 
              array (
                'title' => '故障名称',
                'description' => '故障名称',
                'type' => 'string',
                'required' => false,
                'example' => '故障A',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验Id',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => 'E789D869-DB13-4913-BAA8-A1F56F94B94D',
              ),
              'problemStatus' => 
              array (
                'title' => '故障状态  HANDLING 处理中 RECOVERED 已恢复  REPLAYING 复盘中  REPLAYED 已复盘 CANCEL 已取消',
                'description' => '	故障状态 HANDLING 处理中 RECOVERED 已恢复 REPLAYING 复盘中 REPLAYED 已复盘 CANCEL 已取消',
                'type' => 'string',
                'required' => false,
                'example' => 'HANDLING',
              ),
              'problemLevel' => 
              array (
                'title' => '故障等级 1=P1 2=P2 3=P3 4=P4',
                'description' => '	故障等级 1=P1 2=P2 3=P3 4=P4',
                'type' => 'string',
                'required' => false,
                'example' => 'P2',
              ),
              'progressSummary' => 
              array (
                'title' => '进展摘要',
                'description' => '进展摘要',
                'type' => 'string',
                'required' => false,
                'example' => '进展摘要',
              ),
              'relatedServiceId' => 
              array (
                'title' => '所属服务',
                'description' => '服务Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123122',
              ),
              'mainHandlerId' => 
              array (
                'title' => '主要处理人',
                'description' => '主要处理人',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '32121',
              ),
              'preliminaryReason' => 
              array (
                'title' => '初步原因',
                'description' => '初步原因',
                'type' => 'string',
                'required' => false,
                'example' => '初步原因',
              ),
              'discoverTime' => 
              array (
                'title' => '发现时间 (XXXX-XX-XX 00:00:00)',
                'description' => '发现时间 (XXXX-XX-XX 00:00:00)',
                'type' => 'string',
                'required' => false,
                'example' => '2020-10-02 00:00:00',
              ),
              'recoveryTime' => 
              array (
                'title' => '恢复时间',
                'description' => '恢复时间',
                'type' => 'string',
                'required' => false,
                'example' => '2020-10-02 00:00:00',
              ),
              'affectServiceIds' => 
              array (
                'title' => '影响服务列表',
                'description' => '影响服务列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '影响服务ID',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '1232231',
                ),
                'required' => false,
              ),
              'serviceGroupIds' => 
              array (
                'title' => '应急协同组',
                'description' => '应急协同组',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '服务组ID',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '213121',
                ),
                'required' => false,
              ),
              'incidentId' => 
              array (
                'title' => '事件id',
                'description' => '事件Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123221',
              ),
              'problemNotifyType' => 
              array (
                'title' => '通告类型',
                'description' => '通告类型',
                'type' => 'string',
                'required' => false,
                'example' => 'PROBLEM_NOTIFY',
              ),
              'progressSummaryRichTextId' => 
              array (
                'title' => '进展摘要富文本id',
                'description' => '进展描述富文本ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '343',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'E789D869-DB13-4933-BAA8-A1F56F94B94D',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'problemId' => 
                  array (
                    'title' => '故障Id',
                    'description' => '故障Id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '321331',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentNotExtisted',
            'errorMessage' => 'The incident does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"E789D869-DB13-4933-BAA8-A1F56F94B94D\\",\\n  \\"data\\": {\\n    \\"problemId\\": 321331\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateProblemResponse>\\n    <requestId>E789D869-DB13-4933-BAA8-A1F56F94B94D</requestId>\\n    <data>\\n        <problemId>321331</problemId>\\n    </data>\\n</CreateProblemResponse>","errorExample":""}]',
      'title' => '故障升级',
    ),
    'CreateProblemMeasure' => 
    array (
      'summary' => '创建故障改进措施。',
      'path' => '/problem/improvement/measure/save',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'type' => 
              array (
                'title' => '措施类型',
                'description' => '措施类型',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '1',
              ),
              'problemId' => 
              array (
                'title' => '故障Id',
                'description' => '故障Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '23',
              ),
              'content' => 
              array (
                'title' => '措施内容',
                'description' => '措施内容',
                'type' => 'string',
                'required' => false,
                'example' => '措施内容',
              ),
              'checkStandard' => 
              array (
                'title' => '验收标准',
                'description' => '验收标准',
                'type' => 'string',
                'required' => false,
                'example' => '标准',
              ),
              'checkUserId' => 
              array (
                'title' => '验收人id',
                'description' => '验收人id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123',
              ),
              'planFinishTime' => 
              array (
                'title' => '计划完成时间',
                'description' => '计划完成时间',
                'type' => 'string',
                'required' => false,
                'example' => '2020-01-23 00:00:00',
              ),
              'directorId' => 
              array (
                'title' => '负责人id',
                'description' => '负责人id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123',
              ),
              'stalkerId' => 
              array (
                'title' => '跟踪人id',
                'description' => '跟踪人id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123',
              ),
              'status' => 
              array (
                'title' => '状态 IMPROVED 改进 2 未改进UNIMPROVED',
                'description' => '状态 IMPROVED 改进 2 未改进UNIMPROVED',
                'type' => 'string',
                'required' => false,
                'example' => 'IMPROVED',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'measureId' => 
                  array (
                    'title' => '故障措施Id',
                    'description' => '故障措施Id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1231',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"4361a0e1-6747-4834-96ce-0c4840fd3812\\",\\n  \\"data\\": {\\n    \\"measureId\\": 1231\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateProblemMeasureResponse>\\n    <requestId>4361a0e1-6747-4834-96ce-0c4840fd3812</requestId>\\n    <data>\\n        <measureId>1231</measureId>\\n    </data>\\n</CreateProblemMeasureResponse>","errorExample":""}]',
      'title' => '创建故障改进措施',
    ),
    'CreateProblemSubtotal' => 
    array (
      'summary' => '故障新增备注小计。',
      'path' => '/problem/save/subtotal',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障Id',
                'description' => '故障Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1231',
              ),
              'description' => 
              array (
                'title' => '小计文本',
                'description' => '小计文本',
                'type' => 'string',
                'required' => false,
                'example' => '描述',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3814',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd381A',
              ),
              'data' => 
              array (
                'description' => 'object',
                'type' => 'object',
                'properties' => 
                array (
                  'subtotalId' => 
                  array (
                    'title' => '小计id',
                    'description' => '小计id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '123',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"4361a0e1-6747-4834-96ce-0c4840fd381A\\",\\n  \\"data\\": {\\n    \\"subtotalId\\": 123\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateProblemSubtotalResponse>\\n    <requestId>4361a0e1-6747-4834-96ce-0c4840fd381A</requestId>\\n    <data>\\n        <subtotalId>123</subtotalId>\\n    </data>\\n</CreateProblemSubtotalResponse>","errorExample":""}]',
      'title' => 'CreateProblemSubtotal - 故障新增备注小计',
    ),
    'CreateProblemTimeline' => 
    array (
      'summary' => '创建故障时间线节点。',
      'path' => '/problem/process/timeline/create',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '102',
              ),
              'keyNode' => 
              array (
                'title' => '关键节点 码表:PROBLEM_KEY_NODE (逗号分隔)',
                'description' => '关键节点码表：PROBLEM_KEY_NODE',
                'type' => 'string',
                'required' => false,
                'example' => 'PROBLEM_KEY_NODE',
              ),
              'content' => 
              array (
                'title' => '节点内容',
                'description' => '节点内容',
                'type' => 'string',
                'required' => false,
                'example' => '时间线内容XXXX',
              ),
              'time' => 
              array (
                'title' => '发生时间',
                'description' => '发生时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-06-06 12:11:22',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378FTOKENA11',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'id of the request',
                'description' => 'id of the request',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
              'data' => 
              array (
                'title' => 'Object',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'problemTimelineId' => 
                  array (
                    'title' => '故障事件线id',
                    'description' => '故障时间线id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '102',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"10REQUES-AC5C-4B59-BE11-378F117A6A88\\",\\n  \\"data\\": {\\n    \\"problemTimelineId\\": 102\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateProblemTimelineResponse>\\n    <requestId>10REQUES-AC5C-4B59-BE11-378F117A6A88</requestId>\\n    <data>\\n        <problemTimelineId>102</problemTimelineId>\\n    </data>\\n</CreateProblemTimelineResponse>","errorExample":""}]',
      'title' => '创建故障时间线节点',
    ),
    'CreateProblemTimelines' => 
    array (
      'summary' => '批量创建时间节点。',
      'path' => '/problem/process/timeline/batchCreate',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '423',
              ),
              'timelineNodes' => 
              array (
                'title' => '时间线节点',
                'description' => '时间线节点',
                'type' => 'string',
                'required' => false,
                'example' => '2018-01-01 18:01，谁做了什么事情\\n2018-01-01 18:01，谁做了什么事情\\n2018-01-01 18:01，谁做了什么事情',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => 'clientToken',
                'type' => 'string',
                'required' => false,
                'example' => 'e0b6735e-1a04-4d6b-a625-d2350612492c',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'id of the request',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'problemTimelineIds' => 
                  array (
                    'description' => '时间线id 列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '时间线id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '435',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'TimelineFormatException',
            'errorMessage' => 'The timeline format is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'TimeFormatException',
            'errorMessage' => 'The time format is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"10REQUES-AC5C-4B59-BE11-378F117A6A88\\",\\n  \\"data\\": {\\n    \\"problemTimelineIds\\": [\\n      435\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateProblemTimelinesResponse>\\n    <data>\\n        <problemTimelineIds>435</problemTimelineIds>\\n    </data>\\n</CreateProblemTimelinesResponse>","errorExample":""}]',
      'title' => '批量创建时间节点',
    ),
    'AddProblemServiceGroup' => 
    array (
      'summary' => '新增故障应急协同组。',
      'path' => '/problem/addServiceGroup',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障ID',
                'description' => '故障ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10',
              ),
              'serviceGroupIds' => 
              array (
                'title' => '应急协同组',
                'description' => '应急协同组',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '协同组id',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '应急协同组ID',
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '5AD6E6BC-2582-4E0E-832D-52CB1B922253',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"5AD6E6BC-2582-4E0E-832D-52CB1B922253\\"\\n}","errorExample":""},{"type":"xml","example":"<AddProblemServiceGroupResponse>\\n    <requestId>5AD6E6BC-2582-4E0E-832D-52CB1B922253</requestId>\\n</AddProblemServiceGroupResponse>","errorExample":""}]',
      'title' => '新增故障应急协同组',
    ),
    'UpdateProblem' => 
    array (
      'summary' => '更新故障详情。',
      'path' => '/problem/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障ID',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '213432',
              ),
              'problemName' => 
              array (
                'title' => '故障名',
                'description' => '故障名称',
                'type' => 'string',
                'required' => false,
                'example' => '故障2',
              ),
              'level' => 
              array (
                'title' => '故障等级',
                'description' => '故障等级',
                'type' => 'string',
                'required' => false,
                'example' => 'P1',
              ),
              'relatedServiceId' => 
              array (
                'title' => '所属服务',
                'description' => '关联服务',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123',
              ),
              'progressSummary' => 
              array (
                'title' => '进展摘要',
                'description' => '进展摘要',
                'type' => 'string',
                'required' => false,
                'example' => '进展摘要xxxx',
              ),
              'preliminaryReason' => 
              array (
                'title' => '初步原因',
                'description' => '初步原因',
                'type' => 'string',
                'required' => false,
                'example' => '原因是服务宕机',
              ),
              'mainHandlerId' => 
              array (
                'title' => '主要处理人',
                'description' => '主要处理人',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '678',
              ),
              'feedback' => 
              array (
                'title' => '舆情反馈',
                'description' => '舆情反馈',
                'type' => 'string',
                'required' => false,
                'example' => '影响恶劣',
              ),
              'serviceGroupIds' => 
              array (
                'title' => '应急协同组',
                'description' => '应急协同组',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '应急协同组ID',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '102',
                ),
                'required' => false,
              ),
              'progressSummaryRichTextId' => 
              array (
                'title' => '进展摘要富文本id',
                'description' => '富文本字段id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '23232',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"c26f36de-1ec8-496a-a828-880676c5ef81\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateProblemResponse>\\n    <requestId>c26f36de-1ec8-496a-a828-880676c5ef81</requestId>\\n</UpdateProblemResponse>","errorExample":""}]',
      'title' => '更新故障详情',
      'requestParamsDescription' => '{
  "problemId" : 213432,
  "problemName" : "故障2",
  "level" : "P1",
  "relatedServiceId" : 123,
  "progressSummary" : "进展摘要xxxx",
  "preliminaryReason" : "原因是服务宕机",
  "mainHandlerId" : 678,
  "feedback" : "影响恶劣",
  "serviceGroupIds" : [ 102 ]
}',
      'responseParamsDescription' => '{
    "requestId": "c26f36de-1ec8-496a-a828-880676c5ef81"
}',
    ),
    'UpdateProblemNotice' => 
    array (
      'summary' => '更新故障通告。',
      'path' => '/problem/notify',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'problemNotifyType' => 
              array (
                'title' => '通告类型 PROBLEM_NOTIFY：故障通告 PROBLEM_UPDATE：故障更新 PROBLEM_UPGRADE：故障升级 PROBLEM_DEGRADE：故障降级 PROBLEM_RECOVER：故障恢复 PROBLEM_REISSUE： 故障补发 PROBLEM_CANCEL：故障取消',
                'description' => '通告类型 PROBLEM_NOTIFY：故障通告 PROBLEM_UPDATE：故障更新 PROBLEM_UPGRADE：故障升级 PROBLEM_DEGRADE：故障降级 PROBLEM_RECOVER：故障恢复 PROBLEM_REISSUE： 故障补发 PROBLEM_CANCEL：故障取消',
                'type' => 'string',
                'required' => false,
                'example' => 'PROBLEM_NOTIFY',
              ),
              'problemId' => 
              array (
                'title' => '故障Id',
                'description' => '故障Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1312',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验Id',
                'description' => '幂等校验Id',
                'type' => 'string',
                'required' => false,
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"4361a0e1-6747-4834-96ce-0c4840fd3812\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateProblemNoticeResponse>\\n    <requestId>4361a0e1-6747-4834-96ce-0c4840fd3812</requestId>\\n</UpdateProblemNoticeResponse>","errorExample":""}]',
      'title' => '更新故障通告',
    ),
    'UpdateProblemTimeline' => 
    array (
      'summary' => '更新故障时间线。',
      'path' => '/problem/process/timeline/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemTimelineId' => 
              array (
                'title' => '时间节点id',
                'description' => '时间线id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '3940',
              ),
              'keyNode' => 
              array (
                'title' => '关键节点 码表:PROBLEM_KEY_NODE (逗号分隔)',
                'description' => '关键节点码表：PROBLEM_KEY_NODE (逗号分隔)',
                'type' => 'string',
                'required' => false,
                'example' => 'NodeTest',
              ),
              'content' => 
              array (
                'title' => '节点内容',
                'description' => '节点内容',
                'type' => 'string',
                'required' => false,
                'example' => '故障分析',
              ),
              'time' => 
              array (
                'title' => '发生时间',
                'description' => '发生时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-01-08 10:10:10',
              ),
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '234',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => ' id of the request',
                'type' => 'string',
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemTimelineNotExisted',
            'errorMessage' => 'The problem timeline does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"c26f36de-1ec8-496a-a828-880676c5ef81\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateProblemTimelineResponse>\\n    <requestId>c26f36de-1ec8-496a-a828-880676c5ef81</requestId>\\n</UpdateProblemTimelineResponse>","errorExample":""}]',
      'title' => '更新故障时间线',
    ),
    'ListProblemDetailOperations' => 
    array (
      'summary' => '故障详情动态。',
      'path' => '/problem/detail/operations',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => '幂等校验',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'pageNumber' => 
              array (
                'title' => '页',
                'description' => '页',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '行',
                'description' => '行',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '10',
              ),
              'createTimeSort' => 
              array (
                'title' => '时间排序',
                'description' => '时间排序',
                'type' => 'string',
                'required' => false,
                'example' => 'desc',
              ),
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'totalCount' => 
              array (
                'title' => '总数',
                'description' => '总数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '210',
              ),
              'pageNumber' => 
              array (
                'title' => '页',
                'description' => '页',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '行',
                'description' => '行',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'title' => 
                    array (
                      'title' => '动态标题',
                      'description' => '动态标题',
                      'type' => 'string',
                      'example' => '动态标题',
                    ),
                    'description' => 
                    array (
                      'title' => '描述',
                      'description' => '描述',
                      'type' => 'string',
                      'example' => '描述',
                    ),
                    'relatedServiceName' => 
                    array (
                      'title' => '服务',
                      'description' => '服务',
                      'type' => 'string',
                      'example' => '服务A',
                    ),
                    'createTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2021-01-23 00:00:00',
                    ),
                    'remark' => 
                    array (
                      'title' => '备注',
                      'description' => '备注',
                      'type' => 'string',
                      'example' => '备注',
                    ),
                    'action' => 
                    array (
                      'title' => '升级 PROBLEM_UPGRADE 撤销 PROBLEM_REVOKE 恢复 PROBLEM_RESTORE 复盘 PROBLEM_IN_REVIEW 完结 PROBLEM_REOPENED 取消 PROBLEM_CANCEL 更新故障通告 PROBLEM_UPDATE_NOTIFY 添加故障小计 PROBLEM_ADD_SUBTOTAL 更新故障 PROBLEM_UPDATE',
                      'description' => '升级 PROBLEM_UPGRADE 撤销 PROBLEM_REVOKE 恢复 PROBLEM_RESTORE 复盘 PROBLEM_IN_REVIEW 完结 PROBLEM_REOPENED 取消 PROBLEM_CANCEL 更新故障通告 PROBLEM_UPDATE_NOTIFY 添加故障小计 PROBLEM_ADD_SUBTOTAL 更新故障 PROBLEM_UPDATE',
                      'type' => 'string',
                      'example' => 'PROBLEM_CANCEL',
                    ),
                    'snapshotData' => 
                    array (
                      'title' => '快照数据',
                      'description' => '快照数据',
                      'type' => 'string',
                      'example' => '{“userName”:"小明"}',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\",\\n  \\"totalCount\\": 210,\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10,\\n  \\"data\\": [\\n    {\\n      \\"title\\": \\"动态标题\\",\\n      \\"description\\": \\"描述\\",\\n      \\"relatedServiceName\\": \\"服务A\\",\\n      \\"createTime\\": \\"2021-01-23 00:00:00\\",\\n      \\"remark\\": \\"备注\\",\\n      \\"action\\": \\"PROBLEM_CANCEL\\",\\n      \\"snapshotData\\": \\"{“userName”:\\\\\\"小明\\\\\\"}\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListProblemDetailOperationsResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n    <totalCount>210</totalCount>\\n    <pageNumber>1</pageNumber>\\n    <pageSize>10</pageSize>\\n    <data>\\n        <title>动态标题</title>\\n        <description>描述</description>\\n        <relatedServiceName>服务A</relatedServiceName>\\n        <createTime>2021-01-23 00:00:00</createTime>\\n        <remark>备注</remark>\\n        <action>PROBLEM_CANCEL</action>\\n        <snapshotData>{“userName”:\\"小明\\"}</snapshotData>\\n    </data>\\n</ListProblemDetailOperationsResponse>","errorExample":""}]',
      'title' => '故障详情动态',
      'requestParamsDescription' => '{
  "clientToken" : "FD200FAE-E98F-496E-BFE6-4CE61E59A2E9",
  "pageNumber" : 1,
  "pageSize" : 10,
  "createTimeSort" : "desc,asc",
  "problemId" : 1
}',
      'responseParamsDescription' => '{
    "requestId": "FD200FAE-E98F-496E-BFE6-4CE61E59A2E9",
    "totalCount": 210,
    "pageNumber": 1,
    "pageSize": 10,
    "data": [
        {
            "title": "动态标题",
            "description": "描述",
            "relatedServiceName": "服务A",
            "createTime": "2021-01-23 00:00:00",
            "remark": "备注",
            "action": "PROBLEM_CANCEL",
            "snapshotData": "{“userName”:\\"小明\\"}"
        }
    ]
}',
    ),
    'ListProblemOperations' => 
    array (
      'summary' => '故障动态列表。',
      'path' => '/problem/operations',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'pageNumber' => 
              array (
                'title' => '页',
                'description' => '页',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '行',
                'description' => '行',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '10',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'totalCount' => 
              array (
                'title' => '总数',
                'description' => '总数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '132',
              ),
              'pageNumber' => 
              array (
                'title' => '页',
                'description' => '页',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '行',
                'description' => '行',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'title' => 
                    array (
                      'title' => '动态标题',
                      'description' => '动态标题',
                      'type' => 'string',
                      'example' => '动态标题',
                    ),
                    'description' => 
                    array (
                      'title' => '描述',
                      'description' => '描述',
                      'type' => 'string',
                      'example' => '描述',
                    ),
                    'relatedServiceName' => 
                    array (
                      'title' => '服务名称',
                      'description' => '服务名称',
                      'type' => 'string',
                      'example' => '服务名称',
                    ),
                    'createTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2021-01-23 00:00:00',
                    ),
                    'action' => 
                    array (
                      'title' => '升级    PROBLEM_UPGRADE      撤销     PROBLEM_REVOKE      恢复     PROBLEM_RESTORE       复盘     PROBLEM_IN_REVIEW       完结     PROBLEM_REOPENED       取消     PROBLEM_CANCEL       更新故障通告     PROBLEM_UPDATE_NOTIFY       添加故障小计     PROBLEM_ADD_SUBTOTAL       更新故障     PROBLEM_UPDATE',
                      'description' => '升级    PROBLEM_UPGRADE      撤销     PROBLEM_REVOKE      恢复     PROBLEM_RESTORE       复盘     PROBLEM_IN_REVIEW       完结     PROBLEM_REOPENED       取消     PROBLEM_CANCEL       更新故障通告     PROBLEM_UPDATE_NOTIFY       添加故障小计     PROBLEM_ADD_SUBTOTAL       更新故障     PROBLEM_UPDATE',
                      'type' => 'string',
                      'example' => 'PROBLEM_CANCEL',
                    ),
                    'problemId' => 
                    array (
                      'title' => '故障Id',
                      'description' => '故障Id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12312',
                    ),
                    'problemName' => 
                    array (
                      'title' => '故障名称',
                      'description' => '故障名称',
                      'type' => 'string',
                      'example' => '这是一个故障',
                    ),
                    'problemNumber' => 
                    array (
                      'title' => '故障编号',
                      'description' => '故障编号',
                      'type' => 'string',
                      'example' => 'P1231231',
                    ),
                    'snapshotData' => 
                    array (
                      'title' => '快照数据',
                      'description' => '快照数据',
                      'type' => 'string',
                      'example' => '{“userName”:"小明"}',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\",\\n  \\"totalCount\\": 132,\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10,\\n  \\"data\\": [\\n    {\\n      \\"title\\": \\"动态标题\\",\\n      \\"description\\": \\"描述\\",\\n      \\"relatedServiceName\\": \\"服务名称\\",\\n      \\"createTime\\": \\"2021-01-23 00:00:00\\",\\n      \\"action\\": \\"PROBLEM_CANCEL\\",\\n      \\"problemId\\": 12312,\\n      \\"problemName\\": \\"这是一个故障\\",\\n      \\"problemNumber\\": \\"P1231231\\",\\n      \\"snapshotData\\": \\"{“userName”:\\\\\\"小明\\\\\\"}\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListProblemOperationsResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n    <totalCount>132</totalCount>\\n    <pageNumber>1</pageNumber>\\n    <pageSize>10</pageSize>\\n    <data>\\n        <title>动态标题</title>\\n        <description>描述</description>\\n        <relatedServiceName>服务名称</relatedServiceName>\\n        <createTime>2021-01-23 00:00:00</createTime>\\n        <action>PROBLEM_CANCEL</action>\\n        <problemId>12312</problemId>\\n        <problemName>这是一个故障</problemName>\\n    </data>\\n</ListProblemOperationsResponse>","errorExample":""}]',
      'title' => '故障动态',
    ),
    'ListProblems' => 
    array (
      'summary' => '查询故障列表。',
      'path' => '/problem/listProblems',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'queryType' => 
              array (
                'title' => 'RESPONSIBLE 我负责的       PARTICIPATED 我参与的  ALL 全部',
                'description' => 'RESPONSIBLE 我负责的       PARTICIPATED 我参与的  ALL 全部',
                'type' => 'string',
                'required' => false,
                'example' => 'RESPONSIBLE',
              ),
              'problemStatus' => 
              array (
                'title' => '故障状态  HANDLING   处理中 RECOVERED 已恢复  REPLAYING   复盘中  REPLAYED     已复盘 CANCEL        已取消',
                'description' => '故障状态  HANDLING   处理中 RECOVERED 已恢复  REPLAYING   复盘中  REPLAYED     已复盘 CANCEL        已取消',
                'type' => 'string',
                'required' => false,
                'example' => 'HANDLING',
              ),
              'problemLevel' => 
              array (
                'title' => '故障等级 1=P1 2=P2 3=P3 4=P4',
                'description' => '故障等级 1=P1 2=P2 3=P3 4=P4',
                'type' => 'string',
                'required' => false,
                'example' => 'P2',
              ),
              'affectServiceId' => 
              array (
                'title' => '影响服务ID',
                'description' => '影响服务ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'serviceGroupId' => 
              array (
                'title' => '应急协同组',
                'description' => '应急协同组',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'mainHandlerId' => 
              array (
                'title' => '主要处理人',
                'description' => '主要处理人',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'repeaterId' => 
              array (
                'title' => '复盘负责人',
                'description' => '复盘负责人',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'discoveryStartTime' => 
              array (
                'title' => '发现开始时间',
                'description' => '发现开始时间',
                'type' => 'string',
                'required' => false,
                'example' => '2020-03-05 15:50:59',
              ),
              'discoveryEndTime' => 
              array (
                'title' => '发现结束时间',
                'description' => '发现结束时间',
                'type' => 'string',
                'required' => false,
                'example' => '2020-03-05 15:50:59',
              ),
              'restoreEndTime' => 
              array (
                'title' => '恢复结束时间',
                'description' => '恢复结束时间',
                'type' => 'string',
                'required' => false,
                'example' => '2020-03-05 15:50:59',
              ),
              'restoreStartTime' => 
              array (
                'title' => '恢复开始时间',
                'description' => '恢复开始时间',
                'type' => 'string',
                'required' => false,
                'example' => '2020-03-05 15:50:59',
              ),
              'pageNumber' => 
              array (
                'title' => '当前页',
                'description' => '当前页',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '页大小',
                'description' => '页大小',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'description' => '故障列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'problemId' => 
                    array (
                      'title' => '故障id',
                      'description' => '故障id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'isManual' => 
                    array (
                      'title' => '是否手动',
                      'description' => '是否手动',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'isUpgrade' => 
                    array (
                      'title' => '是否升级',
                      'description' => '是否升级',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'incidentId' => 
                    array (
                      'title' => '事件ID',
                      'description' => '事件ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '10000',
                    ),
                    'createTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2020-09-08 15:59:59',
                    ),
                    'updateTime' => 
                    array (
                      'title' => '修改时间',
                      'description' => '修改时间',
                      'type' => 'string',
                      'example' => '2020-09-08 15:59:59',
                    ),
                    'problemNumber' => 
                    array (
                      'title' => '故障编号',
                      'description' => '故障编号',
                      'type' => 'string',
                      'example' => 'P34438300000001116258132229577472',
                    ),
                    'problemName' => 
                    array (
                      'title' => '故障名称',
                      'description' => '故障名称',
                      'type' => 'string',
                      'example' => '故障',
                    ),
                    'problemStatus' => 
                    array (
                      'title' => '故障状态  HANDLING    处理中 RECOVERED  已恢复  REPLAYING   复盘中  REPLAYED     已复盘 CANCEL        已取消',
                      'description' => '故障状态  HANDLING    处理中 RECOVERED  已恢复  REPLAYING   复盘中  REPLAYED     已复盘 CANCEL        已取消',
                      'type' => 'string',
                      'example' => 'HANDLING',
                    ),
                    'problemLevel' => 
                    array (
                      'title' => '故障等级 1=P1 2=P2 3=P3 4=P4',
                      'description' => '故障等级 1=P1 2=P2 3=P3 4=P4',
                      'type' => 'string',
                      'example' => 'P1',
                    ),
                    'discoverTime' => 
                    array (
                      'title' => '发现时间',
                      'description' => '发现时间',
                      'type' => 'string',
                      'example' => '2020-09-08 15:59:59',
                    ),
                    'recoveryTime' => 
                    array (
                      'title' => '恢复时间',
                      'description' => '恢复时间',
                      'type' => 'string',
                      'example' => '2020-09-08 15:59:59',
                    ),
                    'relatedServiceId' => 
                    array (
                      'title' => '关联服务ID',
                      'description' => '关联服务ID',
                      'type' => 'string',
                      'example' => '1',
                    ),
                    'serviceName' => 
                    array (
                      'title' => '关联服务名称',
                      'description' => '关联服务名称',
                      'type' => 'string',
                      'example' => '服务1',
                    ),
                    'affectServices' => 
                    array (
                      'description' => '影响服务',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'serviceId' => 
                          array (
                            'title' => '影响服务ID',
                            'description' => '影响服务ID',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '100',
                          ),
                          'serviceDescription' => 
                          array (
                            'title' => '服务描述',
                            'description' => '服务描述',
                            'type' => 'string',
                            'example' => '服务描述',
                          ),
                          'serviceName' => 
                          array (
                            'title' => '服务名字',
                            'description' => '服务名字',
                            'type' => 'string',
                            'example' => '冲上云霄',
                          ),
                          'updateTime' => 
                          array (
                            'title' => '修改时间',
                            'description' => '修改时间',
                            'type' => 'string',
                            'example' => '2020-09-08 15:59:59',
                          ),
                        ),
                      ),
                    ),
                    'mainHandlerId' => 
                    array (
                      'title' => '主要处理人ID',
                      'description' => '主要处理人ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '100',
                    ),
                    'mainHandlerName' => 
                    array (
                      'title' => '主要处理人名称',
                      'description' => '主要处理人名称',
                      'type' => 'string',
                      'example' => '王宇',
                    ),
                    'cancelTime' => 
                    array (
                      'title' => '取消时间',
                      'description' => '取消时间',
                      'type' => 'string',
                      'example' => '2020-09-08 15:59:59',
                    ),
                    'finishTime' => 
                    array (
                      'title' => '完结时间',
                      'description' => '完结时间',
                      'type' => 'string',
                      'example' => '2020-09-08 15:59:59',
                    ),
                    'replayTime' => 
                    array (
                      'title' => '复盘时间',
                      'description' => '复盘时间',
                      'type' => 'string',
                      'example' => '2020-09-08 15:59:59',
                    ),
                    'serviceDeletedType' => 
                    array (
                      'title' => '服务删除字段',
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                    'mainHandlerIsValid' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                  ),
                ),
              ),
              'pageNumber' => 
              array (
                'title' => '当前页',
                'description' => '当前页',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '页大小',
                'description' => '页大小',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'totalCount' => 
              array (
                'title' => '总条数',
                'description' => '总条数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"data\\": [\\n    {\\n      \\"problemId\\": 1,\\n      \\"isManual\\": true,\\n      \\"isUpgrade\\": true,\\n      \\"incidentId\\": 10000,\\n      \\"createTime\\": \\"2020-09-08 15:59:59\\",\\n      \\"updateTime\\": \\"2020-09-08 15:59:59\\",\\n      \\"problemNumber\\": \\"P34438300000001116258132229577472\\",\\n      \\"problemName\\": \\"故障\\",\\n      \\"problemStatus\\": \\"HANDLING\\",\\n      \\"problemLevel\\": \\"P1\\",\\n      \\"discoverTime\\": \\"2020-09-08 15:59:59\\",\\n      \\"recoveryTime\\": \\"2020-09-08 15:59:59\\",\\n      \\"relatedServiceId\\": \\"1\\",\\n      \\"serviceName\\": \\"服务1\\",\\n      \\"affectServices\\": [\\n        {\\n          \\"serviceId\\": 100,\\n          \\"serviceDescription\\": \\"服务描述\\",\\n          \\"serviceName\\": \\"冲上云霄\\",\\n          \\"updateTime\\": \\"2020-09-08 15:59:59\\"\\n        }\\n      ],\\n      \\"mainHandlerId\\": 100,\\n      \\"mainHandlerName\\": \\"王宇\\",\\n      \\"cancelTime\\": \\"2020-09-08 15:59:59\\",\\n      \\"finishTime\\": \\"2020-09-08 15:59:59\\",\\n      \\"replayTime\\": \\"2020-09-08 15:59:59\\"\\n    }\\n  ],\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10,\\n  \\"totalCount\\": 100\\n}","errorExample":""},{"type":"xml","example":"<ListProblemsResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n    <data>\\n        <problemId>1</problemId>\\n        <isManual>true</isManual>\\n        <isUpgrade>true</isUpgrade>\\n        <incidentId>10000</incidentId>\\n        <createTime>2020-09-08 15:59:59</createTime>\\n        <updateTime>2020-09-08 15:59:59</updateTime>\\n        <problemNumber>P34438300000001116258132229577472</problemNumber>\\n        <problemName>故障</problemName>\\n        <problemStatus>HANDLING</problemStatus>\\n        <problemLevel>P1</problemLevel>\\n        <discoverTime>2020-09-08 15:59:59</discoverTime>\\n        <recoveryTime>2020-09-08 15:59:59</recoveryTime>\\n        <relatedServiceId>1</relatedServiceId>\\n        <serviceName>服务1</serviceName>\\n        <affectServices>\\n            <serviceId>100</serviceId>\\n            <serviceDescription>服务描述</serviceDescription>\\n            <serviceName>冲上云霄</serviceName>\\n            <updateTime>2020-09-08 15:59:59</updateTime>\\n        </affectServices>\\n        <mainHandlerId>100</mainHandlerId>\\n        <mainHandlerName>王宇</mainHandlerName>\\n        <cancelTime>2020-09-08 15:59:59</cancelTime>\\n        <finishTime>2020-09-08 15:59:59</finishTime>\\n        <replayTime>2020-09-08 15:59:59</replayTime>\\n    </data>\\n    <pageNumber>1</pageNumber>\\n    <pageSize>10</pageSize>\\n    <totalCount>100</totalCount>\\n</ListProblemsResponse>","errorExample":""}]',
      'title' => '查询故障列表',
    ),
    'ListProblemSubtotals' => 
    array (
      'summary' => '故障小计列表。',
      'path' => '/problem/list/subtotal',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障Id',
                'description' => '故障Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1231',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => '4361a0e1-6747-4834-96ce-0c4840fdB812',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '4361a0e1-6747-4834-96ce-0S4840fd3812',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'description' => 
                    array (
                      'title' => '描述',
                      'description' => '描述',
                      'type' => 'string',
                      'example' => '小计内容',
                    ),
                    'createTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2020-10-02 00:00:00',
                    ),
                    'createRamName' => 
                    array (
                      'title' => '操作人',
                      'description' => '操作人',
                      'type' => 'string',
                      'example' => '小明',
                    ),
                    'createUserPhone' => 
                    array (
                      'title' => '操作人手机号',
                      'description' => '操作人手机号',
                      'type' => 'string',
                      'example' => '130****11111',
                    ),
                    'createUserId' => 
                    array (
                      'title' => '人员id',
                      'description' => '人员id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '123123',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"4361a0e1-6747-4834-96ce-0S4840fd3812\\",\\n  \\"data\\": [\\n    {\\n      \\"description\\": \\"小计内容\\",\\n      \\"createTime\\": \\"2020-10-02 00:00:00\\",\\n      \\"createRamName\\": \\"小明\\",\\n      \\"createUserPhone\\": \\"130****11111\\",\\n      \\"createUserId\\": 123123\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListProblemSubtotalsResponse>\\n    <requestId>4361a0e1-6747-4834-96ce-0S4840fd3812</requestId>\\n    <data>\\n        <description>小计内容</description>\\n        <createTime>2020-10-02 00:00:00</createTime>\\n        <createRamName>小明</createRamName>\\n        <createUserPhone>130****11111</createUserPhone>\\n    </data>\\n</ListProblemSubtotalsResponse>","errorExample":""}]',
      'title' => '故障小计列表',
    ),
    'CancelProblem' => 
    array (
      'summary' => '故障取消。',
      'path' => '/problem/cancel',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '312',
              ),
              'cancelReasonDescription' => 
              array (
                'title' => '取消原因描述',
                'description' => '取消原因描述',
                'type' => 'string',
                'required' => false,
                'example' => '原因描述',
              ),
              'cancelReason' => 
              array (
                'title' => '取消原因',
                'description' => '取消原因',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '取消原因',
              ),
              'problemNotifyType' => 
              array (
                'title' => 'PROBLEM_NOTIFY	通告类型 PROBLEM_NOTIFY：故障通告 PROBLEM_UPDATE：故障更新 PROBLEM_UPGRADE：故障升级 PROBLEM_DEGRADE：故障降级 PROBLEM_RECOVER：故障恢复 PROBLEM_REISSUE： 故障补发 PROBLEM_CANCEL：故障取消',
                'description' => 'PROBLEM_NOTIFY	通告类型 PROBLEM_NOTIFY：故障通告 PROBLEM_UPDATE：故障更新 PROBLEM_UPGRADE：故障升级 PROBLEM_DEGRADE：故障降级 PROBLEM_RECOVER：故障恢复 PROBLEM_REISSUE： 故障补发 PROBLEM_CANCEL：故障取消',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => 'PROBLEM_NOTIFY',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等Token',
                'type' => 'string',
                'required' => false,
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'B81E84B5-8FD1-45F3-969A-B5067AADCFFF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemStatusError',
            'errorMessage' => 'The problem status is abnormal.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"B81E84B5-8FD1-45F3-969A-B5067AADCFFF\\"\\n}","errorExample":""},{"type":"xml","example":"<CancelProblemResponse>\\n    <requestId>B81E84B5-8FD1-45F3-969A-B5067AADCFFF</requestId>\\n</CancelProblemResponse>","errorExample":""}]',
      'title' => 'CancelProblem - 故障取消',
    ),
    'FinishProblem' => 
    array (
      'summary' => '故障完结。',
      'path' => '/problem/finish',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障Id',
                'description' => '故障Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '3123',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => '6338F42D-ED0B-442C-932C-657300AFB4BB',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '6338F42D-ED0B-442C-932C-657300AFB4BB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemStatusError',
            'errorMessage' => 'The problem status is abnormal.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"6338F42D-ED0B-442C-932C-657300AFB4BB\\"\\n}","errorExample":""},{"type":"xml","example":"<FinishProblemResponse>\\n    <requestId>6338F42D-ED0B-442C-932C-657300AFB4BB</requestId>\\n</FinishProblemResponse>","errorExample":""}]',
      'title' => '故障完结',
    ),
    'RecoverProblem' => 
    array (
      'summary' => '故障恢复。',
      'path' => '/problem/recovery',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障ID',
                'description' => '故障ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123',
              ),
              'recoveryTime' => 
              array (
                'title' => '恢复时间',
                'description' => '恢复时间',
                'type' => 'string',
                'required' => false,
                'example' => '2020-02-01 00:00:00',
              ),
              'problemNotifyType' => 
              array (
                'title' => '通告类型 PROBLEM_NOTIFY：故障通告 PROBLEM_UPDATE：故障更新 PROBLEM_UPGRADE：故障升级 PROBLEM_DEGRADE：故障降级 PROBLEM_RECOVER：故障恢复 PROBLEM_REISSUE： 故障补发 PROBLEM_CANCEL：故障取消',
                'description' => '通告类型 PROBLEM_NOTIFY：故障通告 PROBLEM_UPDATE：故障更新 PROBLEM_UPGRADE：故障升级 PROBLEM_DEGRADE：故障降级 PROBLEM_RECOVER：故障恢复 PROBLEM_REISSUE： 故障补发 PROBLEM_CANCEL：故障取消',
                'type' => 'string',
                'required' => false,
                'example' => 'PROBLEM_UPDATE',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'EBC39DEF-C95B-46F8-9AE3-204F0B0A706D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemStatusError',
            'errorMessage' => 'The problem status is abnormal.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"EBC39DEF-C95B-46F8-9AE3-204F0B0A706D\\"\\n}","errorExample":""},{"type":"xml","example":"<RecoverProblemResponse>\\n    <requestId>EBC39DEF-C95B-46F8-9AE3-204F0B0A706D</requestId>\\n</RecoverProblemResponse>","errorExample":""}]',
      'title' => '故障恢复',
    ),
    'ReplayProblem' => 
    array (
      'summary' => '故障复盘。',
      'path' => '/problem/replay',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障ID',
                'description' => '故障ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123',
              ),
              'replayDutyUserId' => 
              array (
                'title' => '复盘负责人ID',
                'description' => '复盘负责人ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '3123',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等token',
                'type' => 'string',
                'required' => false,
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3212',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'B81E84B5-8FD1-45F3-969A-B5067AADCFFF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemStatusError',
            'errorMessage' => 'The problem status is abnormal.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"B81E84B5-8FD1-45F3-969A-B5067AADCFFF\\"\\n}","errorExample":""},{"type":"xml","example":"<ReplayProblemResponse>\\n    <requestId>B81E84B5-8FD1-45F3-969A-B5067AADCFFF</requestId>\\n</ReplayProblemResponse>","errorExample":""}]',
      'title' => '故障复盘',
    ),
    'RevokeProblemRecovery' => 
    array (
      'summary' => '故障撤销恢复	。',
      'path' => '/problem/revoke',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障ID',
                'description' => '故障ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1231',
              ),
              'problemNotifyType' => 
              array (
                'title' => '通告类型 PROBLEM_NOTIFY：故障通告 PROBLEM_UPDATE：故障更新 PROBLEM_UPGRADE：故障升级 PROBLEM_DEGRADE：故障降级 PROBLEM_RECOVER：故障恢复 PROBLEM_REISSUE： 故障补发 PROBLEM_CANCEL：故障取消',
                'description' => '通告类型 PROBLEM_NOTIFY：故障通告 PROBLEM_UPDATE：故障更新 PROBLEM_UPGRADE：故障升级 PROBLEM_DEGRADE：故障降级 PROBLEM_RECOVER：故障恢复 PROBLEM_REISSUE： 故障补发 PROBLEM_CANCEL：故障取消',
                'type' => 'string',
                'required' => false,
                'example' => 'PROBLEM_UPGRADE',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验Id',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2EF',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemStatusError',
            'errorMessage' => 'The problem status is abnormal.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\"\\n}","errorExample":""},{"type":"xml","example":"<RevokeProblemRecoveryResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n</RevokeProblemRecoveryResponse>","errorExample":""}]',
      'title' => '故障撤销恢复',
    ),
    'DeleteProblem' => 
    array (
      'summary' => '删除故障。',
      'path' => '/problem/delete',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障Id',
                'description' => '故障Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1231',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"4361a0e1-6747-4834-96ce-0c4840fd3812\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteProblemResponse>\\n    <requestId>4361a0e1-6747-4834-96ce-0c4840fd3812</requestId>\\n</DeleteProblemResponse>","errorExample":""}]',
      'title' => '删除故障',
    ),
    'GetProblem' => 
    array (
      'summary' => '故障详情。',
      'path' => '/problem/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障ID',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'data' => 
              array (
                'title' => '详情',
                'description' => '详情',
                'type' => 'object',
                'properties' => 
                array (
                  'problemId' => 
                  array (
                    'title' => 'ID',
                    'description' => 'ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => true,
                    'example' => '1',
                    'enum' => 
                    array (
                      0 => 'Success',
                      1 => 'Fail',
                      2 => 'Cancel',
                    ),
                  ),
                  'createTime' => 
                  array (
                    'title' => '创建时间',
                    'description' => '创建时间',
                    'type' => 'string',
                    'example' => '2010-03-09 15:53:45',
                  ),
                  'incidentNumber' => 
                  array (
                    'title' => '事件编号',
                    'description' => '事件编号',
                    'type' => 'string',
                    'example' => 'I3443835000012016260833157948165',
                  ),
                  'incidentId' => 
                  array (
                    'title' => '事件id',
                    'description' => '事件id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '130000032',
                  ),
                  'problemNumber' => 
                  array (
                    'title' => '故障编号',
                    'description' => '故障编号',
                    'type' => 'string',
                    'example' => 'P34438300010030116260833538987481',
                  ),
                  'problemName' => 
                  array (
                    'title' => '故障名称',
                    'description' => '故障名称',
                    'type' => 'string',
                    'example' => '故障',
                  ),
                  'problemStatus' => 
                  array (
                    'title' => '故障状态  HANDLING    处理中 RECOVERED  已恢复  REPLAYING   复盘中  REPLAYED     已复盘 CANCEL        已取消',
                    'description' => '故障状态 
HANDLING 处理中 
RECOVERED 已恢复 
REPLAYING 复盘中
REPLAYED 已复盘 
CANCEL 已取消',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => 'HANDLING',
                  ),
                  'problemLevel' => 
                  array (
                    'title' => '故障等级 P1 P2 P3 P4',
                    'description' => '故障等级 1=P1 2=P2 3=P3 4=P4',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => 'P1',
                  ),
                  'discoverTime' => 
                  array (
                    'title' => '发现时间',
                    'description' => '发现时间',
                    'type' => 'string',
                    'example' => '2010-03-09 15:53:45',
                  ),
                  'recoveryTime' => 
                  array (
                    'title' => '恢复时间',
                    'description' => '恢复时间',
                    'type' => 'string',
                    'example' => '2010-03-09 15:53:45',
                  ),
                  'relatedServiceId' => 
                  array (
                    'title' => '关联服务ID',
                    'description' => '关联服务ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'serviceName' => 
                  array (
                    'title' => '关联服务 名称',
                    'description' => '关联服务名称',
                    'type' => 'string',
                    'example' => '服务',
                  ),
                  'progressSummary' => 
                  array (
                    'title' => '进展摘要',
                    'description' => '进展摘要',
                    'type' => 'string',
                    'example' => '进展摘要',
                  ),
                  'preliminaryReason' => 
                  array (
                    'title' => '初步原因',
                    'description' => '初步原因',
                    'type' => 'string',
                    'example' => '初步原因',
                  ),
                  'mainHandler' => 
                  array (
                    'title' => '主要处理人',
                    'description' => '主要处理人',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '小王',
                  ),
                  'mainHandlerId' => 
                  array (
                    'title' => '主要处理人ID',
                    'description' => '主要处理人ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2000',
                  ),
                  'mainHandlerPhone' => 
                  array (
                    'title' => '主要处理人手机号',
                    'description' => '主要处理人手机号',
                    'type' => 'string',
                    'example' => '1308987****',
                  ),
                  'feedback' => 
                  array (
                    'title' => '舆情反馈',
                    'description' => '舆情反馈',
                    'type' => 'string',
                    'example' => 'feedback',
                  ),
                  'cancelReasonDescription' => 
                  array (
                    'title' => '取消原因描述',
                    'description' => '取消原因描述',
                    'type' => 'string',
                    'example' => '取消原因描述',
                  ),
                  'cancelReason' => 
                  array (
                    'title' => '取消原因',
                    'description' => '取消原因',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '取消原因',
                  ),
                  'durationTime' => 
                  array (
                    'title' => '持续时间',
                    'description' => '持续时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '300000',
                  ),
                  'progressSummaryRichTextId' => 
                  array (
                    'title' => '进展摘要富文本id',
                    'description' => '进展摘要富文本id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1231231',
                  ),
                  'handingProblemOperateLogs' => 
                  array (
                    'title' => '处理中故障操作日志',
                    'description' => '处理中故障操作日志',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'operator' => 
                        array (
                          'title' => '操作人',
                          'description' => '操作人',
                          'type' => 'string',
                          'example' => '小王',
                        ),
                        'userId' => 
                        array (
                          'title' => '用户id',
                          'description' => '用户id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '233',
                        ),
                        'actionName' => 
                        array (
                          'title' => '动作名称',
                          'description' => '动作名称',
                          'type' => 'string',
                          'example' => '取消故障',
                        ),
                        'actionTime' => 
                        array (
                          'title' => '操作时间',
                          'description' => '操作名称',
                          'type' => 'string',
                          'example' => '2010-03-09 15:53:45',
                        ),
                        'userIsValid' => 
                        array (
                          'description' => '用户是否合法',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                  'restoredProblemOperateLogs' => 
                  array (
                    'title' => '已恢复故障操作日志',
                    'description' => '已恢复故障操作日志',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'operator' => 
                        array (
                          'title' => '操作人',
                          'description' => '操作人',
                          'type' => 'string',
                          'example' => '小王',
                        ),
                        'userId' => 
                        array (
                          'title' => '用户id',
                          'description' => '用户id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3232',
                        ),
                        'actionName' => 
                        array (
                          'title' => '动作名称',
                          'description' => '动作名称',
                          'type' => 'string',
                          'example' => '恢复故障',
                        ),
                        'actionTime' => 
                        array (
                          'title' => '操作时间',
                          'description' => '操作名称',
                          'type' => 'string',
                          'example' => '2020-08-08 15:39:39',
                        ),
                        'userIsValid' => 
                        array (
                          'description' => '用户是否合法',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                  'replayingProblemOperateLogs' => 
                  array (
                    'title' => '复盘中故障操作日志',
                    'description' => '复盘中故障操作日志',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'operator' => 
                        array (
                          'title' => '操作人',
                          'description' => '操作人',
                          'type' => 'string',
                          'example' => '小杰',
                        ),
                        'userId' => 
                        array (
                          'title' => '用户id',
                          'description' => '用户id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '用户id',
                        ),
                        'actionName' => 
                        array (
                          'title' => '动作名称',
                          'description' => '动作名称',
                          'type' => 'string',
                          'example' => '复盘故障',
                        ),
                        'actionTime' => 
                        array (
                          'title' => '操作时间',
                          'description' => '操作名称',
                          'type' => 'string',
                          'example' => '2020-08-08 15:39:39',
                        ),
                        'userIsValid' => 
                        array (
                          'description' => '用户是否合法',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                  'replayProblemOperateLogs' => 
                  array (
                    'title' => '已复盘故障操作日志',
                    'description' => '已复盘故障操作日志',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'operator' => 
                        array (
                          'title' => '操作人',
                          'description' => '操作人',
                          'type' => 'string',
                          'example' => '小王',
                        ),
                        'userId' => 
                        array (
                          'title' => '用户id',
                          'description' => '用户id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2323',
                        ),
                        'actionName' => 
                        array (
                          'title' => '动作名称',
                          'description' => '动作名称',
                          'type' => 'string',
                          'example' => '复盘故障',
                        ),
                        'actionTime' => 
                        array (
                          'title' => '操作时间',
                          'description' => '操作名称',
                          'type' => 'string',
                          'example' => '2020-08-08 15:39:39',
                        ),
                        'userIsValid' => 
                        array (
                          'description' => '用户是否合法',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                  'effectionServices' => 
                  array (
                    'title' => '影响服务',
                    'description' => '影响服务',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'effectionServiceId' => 
                        array (
                          'title' => '服务ID',
                          'description' => '服务ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'effectionLevel' => 
                        array (
                          'title' => '影响等级 P1 . P2 P3 P4',
                          'description' => '影响等级 P1 . P2 P3 P4',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => 'P1',
                        ),
                        'effectionStatus' => 
                        array (
                          'title' => '影响服务状态  RECOVERED 已经恢复 ,UN_RECOVERED 未恢复',
                          'description' => '影响服务状态  RECOVERED 已经恢复 ,UN_RECOVERED 未恢复',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => 'RESTORED',
                        ),
                        'description' => 
                        array (
                          'title' => '影响描述',
                          'description' => '影响描述',
                          'type' => 'string',
                          'example' => '描述',
                        ),
                        'serviceName' => 
                        array (
                          'title' => '服务名称',
                          'description' => '服务名称',
                          'type' => 'string',
                          'example' => '购物车',
                        ),
                        'serviceDeleteType' => 
                        array (
                          'title' => '服务删除字段 1正常 0删除',
                          'description' => '服务删除字段 1正常 0删除',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                  'coordinationGroups' => 
                  array (
                    'title' => '应急协同组',
                    'description' => '应急协同组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'serviceGroupId' => 
                        array (
                          'title' => '服务组ID',
                          'description' => '服务组ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'serviceGroupName' => 
                        array (
                          'title' => '服务组名字',
                          'description' => '服务组名字',
                          'type' => 'string',
                          'example' => '冲上云霄',
                        ),
                        'isValid' => 
                        array (
                          'description' => '是否合法',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                  'timelines' => 
                  array (
                    'title' => '故障操作时间线',
                    'description' => '故障操作时间线',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'keyNode' => 
                        array (
                          'title' => '关键节点 码表:PROBLEM_KEY_NODE (逗号分隔)',
                          'description' => '关键节点码表：PROBLEM_KEY_NODE (逗号分隔)',
                          'type' => 'string',
                          'example' => '1,2,3,4,5,7,6,8,9,10',
                        ),
                      ),
                    ),
                  ),
                  'cancelProblemOperateLogs' => 
                  array (
                    'title' => '已取消故障操作日志',
                    'description' => '已取消故障操作日志',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'operator' => 
                        array (
                          'title' => '操作人',
                          'description' => '操作人',
                          'type' => 'string',
                          'example' => '小王',
                        ),
                        'actionName' => 
                        array (
                          'title' => '动作名称',
                          'description' => '动作名称',
                          'type' => 'string',
                          'example' => '取消故障',
                        ),
                        'actionTime' => 
                        array (
                          'title' => '操作时间',
                          'description' => '操作时间',
                          'type' => 'string',
                          'example' => '2020-09-08 15:38:38',
                        ),
                        'userId' => 
                        array (
                          'title' => '用户ID',
                          'description' => '用户ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '66666',
                        ),
                      ),
                    ),
                  ),
                  'serviceDeleteType' => 
                  array (
                    'title' => 'serviceDeleteType',
                    'description' => 'serviceDeleteType',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'mainHandlerIsValid' => 
                  array (
                    'title' => '主要处理人生效状态，1生效，0失效',
                    'description' => '主要处理人生效状态，1生效，0失效',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'isRuleTrigger' => 
                  array (
                    'title' => '是否规则触发 1 是 0不是',
                    'description' => '是否规则触发 1 是 0不是',
                    'type' => 'boolean',
                    'example' => '1',
                  ),
                ),
              ),
              'requestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-41VB-A225-2C88188E8A43',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"data\\": {\\n    \\"problemId\\": 1,\\n    \\"createTime\\": \\"2010-03-09 15:53:45\\",\\n    \\"incidentNumber\\": \\"I3443835000012016260833157948165\\",\\n    \\"incidentId\\": 130000032,\\n    \\"problemNumber\\": \\"P34438300010030116260833538987481\\",\\n    \\"problemName\\": \\"故障\\",\\n    \\"problemStatus\\": 0,\\n    \\"problemLevel\\": 0,\\n    \\"discoverTime\\": \\"2010-03-09 15:53:45\\",\\n    \\"recoveryTime\\": \\"2010-03-09 15:53:45\\",\\n    \\"relatedServiceId\\": 1,\\n    \\"serviceName\\": \\"服务\\",\\n    \\"progressSummary\\": \\"进展摘要\\",\\n    \\"preliminaryReason\\": \\"初步原因\\",\\n    \\"mainHandler\\": 0,\\n    \\"mainHandlerId\\": 2000,\\n    \\"mainHandlerPhone\\": \\"1308987****\\",\\n    \\"feedback\\": \\"feedback\\",\\n    \\"cancelReasonDescription\\": \\"取消原因描述\\",\\n    \\"cancelReason\\": 0,\\n    \\"durationTime\\": 300000,\\n    \\"progressSummaryRichTextId\\": 1231231,\\n    \\"handingProblemOperateLogs\\": [\\n      {\\n        \\"operator\\": \\"小王\\",\\n        \\"userId\\": 233,\\n        \\"actionName\\": \\"取消故障\\",\\n        \\"actionTime\\": \\"2010-03-09 15:53:45\\",\\n        \\"userIsValid\\": 1\\n      }\\n    ],\\n    \\"restoredProblemOperateLogs\\": [\\n      {\\n        \\"operator\\": \\"小王\\",\\n        \\"userId\\": 3232,\\n        \\"actionName\\": \\"恢复故障\\",\\n        \\"actionTime\\": \\"2020-08-08 15:39:39\\",\\n        \\"userIsValid\\": 1\\n      }\\n    ],\\n    \\"replayingProblemOperateLogs\\": [\\n      {\\n        \\"operator\\": \\"小杰\\",\\n        \\"userId\\": 0,\\n        \\"actionName\\": \\"复盘故障\\",\\n        \\"actionTime\\": \\"2020-08-08 15:39:39\\",\\n        \\"userIsValid\\": 1\\n      }\\n    ],\\n    \\"replayProblemOperateLogs\\": [\\n      {\\n        \\"operator\\": \\"小王\\",\\n        \\"userId\\": 2323,\\n        \\"actionName\\": \\"复盘故障\\",\\n        \\"actionTime\\": \\"2020-08-08 15:39:39\\",\\n        \\"userIsValid\\": 1\\n      }\\n    ],\\n    \\"effectionServices\\": [\\n      {\\n        \\"effectionServiceId\\": 1,\\n        \\"effectionLevel\\": 0,\\n        \\"effectionStatus\\": 0,\\n        \\"description\\": \\"描述\\",\\n        \\"serviceName\\": \\"购物车\\",\\n        \\"serviceDeleteType\\": 1\\n      }\\n    ],\\n    \\"coordinationGroups\\": [\\n      {\\n        \\"serviceGroupId\\": 1,\\n        \\"serviceGroupName\\": \\"冲上云霄\\",\\n        \\"isValid\\": 1\\n      }\\n    ],\\n    \\"timelines\\": [\\n      {\\n        \\"keyNode\\": \\"1,2,3,4,5,7,6,8,9,10\\"\\n      }\\n    ],\\n    \\"cancelProblemOperateLogs\\": [\\n      {\\n        \\"operator\\": \\"小王\\",\\n        \\"actionName\\": \\"取消故障\\",\\n        \\"actionTime\\": \\"2020-09-08 15:38:38\\",\\n        \\"userId\\": 66666\\n      }\\n    ],\\n    \\"serviceDeleteType\\": 1,\\n    \\"mainHandlerIsValid\\": 1,\\n    \\"isRuleTrigger\\": true\\n  },\\n  \\"requestId\\": \\"C4BE3837-1A13-41VB-A225-2C88188E8A43\\"\\n}","errorExample":""},{"type":"xml","example":"<GetProblemResponse>\\n    <data>\\n        <problemId>1</problemId>\\n        <createTime>2010-03-09 15:53:45</createTime>\\n        <incidentNumber>I3443835000012016260833157948165</incidentNumber>\\n        <incidentId>130000032</incidentId>\\n        <problemNumber>P34438300010030116260833538987481</problemNumber>\\n        <problemName>故障</problemName>\\n        <discoverTime>2010-03-09 15:53:45</discoverTime>\\n        <recoveryTime>2010-03-09 15:53:45</recoveryTime>\\n        <relatedServiceId>1</relatedServiceId>\\n        <serviceName>服务</serviceName>\\n        <progressSummary>进展摘要</progressSummary>\\n        <preliminaryReason>初步原因</preliminaryReason>\\n        <mainHandlerId>2000</mainHandlerId>\\n        <feedback>feedback</feedback>\\n        <cancelReasonDescription>取消原因描述</cancelReasonDescription>\\n        <handingProblemOperateLogs>\\n            <operator>小王</operator>\\n            <actionName>取消故障</actionName>\\n            <actionTime>2010-03-09 15:53:45</actionTime>\\n        </handingProblemOperateLogs>\\n        <restoredProblemOperateLogs>\\n            <operator>小王</operator>\\n            <actionName>恢复故障</actionName>\\n            <actionTime>2020-08-08 15:39:39</actionTime>\\n        </restoredProblemOperateLogs>\\n        <replayingProblemOperateLogs>\\n            <operator>小杰</operator>\\n            <actionName>复盘故障</actionName>\\n            <actionTime>2020-08-08 15:39:39</actionTime>\\n        </replayingProblemOperateLogs>\\n        <replayProblemOperateLogs>\\n            <operator>小王</operator>\\n            <actionName>复盘故障</actionName>\\n            <actionTime>2020-08-08 15:39:39</actionTime>\\n        </replayProblemOperateLogs>\\n        <effectionServices>\\n            <effectionServiceId>1</effectionServiceId>\\n            <description>描述</description>\\n            <serviceName>购物车</serviceName>\\n        </effectionServices>\\n        <coordinationGroups>\\n            <serviceGroupId>1</serviceGroupId>\\n            <serviceGroupName>冲上云霄</serviceGroupName>\\n        </coordinationGroups>\\n        <timelines>\\n            <keyNode>1,2,3,4,5,7,6,8,9,10</keyNode>\\n        </timelines>\\n        <cancelProblemOperateLogs>\\n            <operator>小王</operator>\\n            <actionName>取消故障</actionName>\\n            <actionTime>2020-09-08 15:38:38</actionTime>\\n        </cancelProblemOperateLogs>\\n    </data>\\n    <requestId>C4BE3837-1A13-41VB-A225-2C88188E8A43</requestId>\\n</GetProblemResponse>","errorExample":""}]',
      'title' => '故障详情',
    ),
    'GetProblemImprovement' => 
    array (
      'summary' => '故障复盘改进详情	。',
      'path' => '/problem/improvement/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障ID',
                'description' => '故障ID',
                'type' => 'string',
                'required' => false,
                'example' => '312312',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3811',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'problemId' => 
                  array (
                    'title' => '故障ID',
                    'description' => '故障ID',
                    'type' => 'string',
                    'example' => '231231',
                  ),
                  'problemReason' => 
                  array (
                    'title' => '故障原因',
                    'description' => '故障原因',
                    'type' => 'string',
                    'example' => '故障的原因',
                  ),
                  'recentActivity' => 
                  array (
                    'title' => '最近活动 码表:PROBLEM_RECENT_ACTIVITY',
                    'description' => '最近活动码表：PROBLEM_RECENT_ACTIVITY',
                    'type' => 'string',
                    'example' => '2',
                  ),
                  'injectionMode' => 
                  array (
                    'title' => '注入方式 码表:PROBLEM_INJECTION_MODE',
                    'description' => '注入方式码表：PROBLEM_INJECTION_MODE',
                    'type' => 'string',
                    'example' => '3',
                  ),
                  'recoveryMode' => 
                  array (
                    'title' => '恢复方式  码表:PROBLEM_RECOVERY_MODE',
                    'description' => '恢复方式码表：PROBLEM_RECOVERY_MODE',
                    'type' => 'string',
                    'example' => '2',
                  ),
                  'discoverSource' => 
                  array (
                    'title' => '发现来源 码表:PROBLEM_DISCOVER_SOURCE',
                    'description' => '发现来源码表：PROBLEM_DISCOVER_SOURCE',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'userReport' => 
                  array (
                    'title' => '用户上报 码表:PROBLEM_USER_REPORT',
                    'description' => '用户上报码表：PROBLEM_USER_REPORT',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'monitorSourceName' => 
                  array (
                    'title' => '监控源',
                    'description' => '监控源',
                    'type' => 'string',
                    'example' => 'Zabbix',
                  ),
                  'relationChanges' => 
                  array (
                    'title' => '关联变更',
                    'description' => '关联变更',
                    'type' => 'string',
                    'example' => '关联变更',
                  ),
                  'dutyUserId' => 
                  array (
                    'title' => '故障责任人id',
                    'description' => '故障责任人id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '231',
                  ),
                  'replayDutyUserId' => 
                  array (
                    'title' => '复盘负责人id',
                    'description' => '复盘负责人id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '23123',
                  ),
                  'replayDutyUserPhone' => 
                  array (
                    'title' => '复盘负责人手机号',
                    'description' => '复盘负责人手机号',
                    'type' => 'string',
                    'example' => '1308787****',
                  ),
                  'dutyDepartmentId' => 
                  array (
                    'title' => '故障责任部门',
                    'description' => '故障责任部门',
                    'type' => 'string',
                    'example' => '12312',
                  ),
                  'dutyUserName' => 
                  array (
                    'title' => '故障责任人名称',
                    'description' => '故障责任人名称',
                    'type' => 'string',
                    'example' => '小明',
                  ),
                  'dutyUserPhone' => 
                  array (
                    'title' => '故障责任人手机号',
                    'description' => '故障责任人手机号',
                    'type' => 'string',
                    'example' => '13098898****',
                  ),
                  'replayDutyUserName' => 
                  array (
                    'title' => '复盘负责人名称',
                    'description' => '复盘负责人名称',
                    'type' => 'string',
                    'example' => '小花',
                  ),
                  'remark' => 
                  array (
                    'title' => '备注',
                    'description' => '备注',
                    'type' => 'string',
                    'example' => '备注',
                  ),
                  'isManual' => 
                  array (
                    'title' => '是否手动',
                    'description' => '是否手动',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'dutyDepartmentName' => 
                  array (
                    'title' => '故障责任部门名称',
                    'description' => '故障责任部门名称',
                    'type' => 'string',
                    'example' => '服务组B',
                  ),
                  'measureList' => 
                  array (
                    'title' => '改进措施列表',
                    'description' => '改进措施列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'measureId' => 
                        array (
                          'title' => '改进措施id 用于删除或更新',
                          'description' => '改进措施ID用于删除或更新',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '12312',
                        ),
                        'type' => 
                        array (
                          'title' => '措施类型',
                          'description' => '措施类型码表PROBLEM_REPLAY_IMPROVEMENT',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'content' => 
                        array (
                          'title' => '措施内容',
                          'description' => '措施内容',
                          'type' => 'string',
                          'example' => '内容A',
                        ),
                        'checkStandard' => 
                        array (
                          'title' => '验收标准',
                          'description' => '验收标准',
                          'type' => 'string',
                          'example' => '验收标准A',
                        ),
                        'checkUserId' => 
                        array (
                          'title' => '验收人id',
                          'description' => '验收人id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '12',
                        ),
                        'checkUserName' => 
                        array (
                          'title' => '验收人名称',
                          'description' => '验收人名称',
                          'type' => 'string',
                          'example' => '小军',
                        ),
                        'directorName' => 
                        array (
                          'title' => '负责人名称',
                          'description' => '负责人名称',
                          'type' => 'string',
                          'example' => '小张',
                        ),
                        'stalkerName' => 
                        array (
                          'title' => '跟踪人名称',
                          'description' => '跟踪人名称',
                          'type' => 'string',
                          'example' => '小李',
                        ),
                        'planFinishTime' => 
                        array (
                          'title' => '计划完成时间',
                          'description' => '计划完成时间',
                          'type' => 'string',
                          'example' => '2021-05-01 00:00:00',
                        ),
                        'directorId' => 
                        array (
                          'title' => '负责人id',
                          'description' => '负责人id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '212',
                        ),
                        'stalkerId' => 
                        array (
                          'title' => '跟踪人id',
                          'description' => '跟踪人id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3121',
                        ),
                        'status' => 
                        array (
                          'title' => 'UNIMPROVED	状态 IMPROVED 改进 2 未改进UNIMPROVED',
                          'description' => 'UNIMPROVED	状态 IMPROVED 改进 2 未改进UNIMPROVED',
                          'type' => 'string',
                          'example' => 'UNIMPROVED',
                        ),
                        'checkUserIsValid' => 
                        array (
                          'title' => '验收人是否失效，0失效1生效',
                          'type' => 'integer',
                          'format' => 'int32',
                        ),
                        'directorIsValid' => 
                        array (
                          'title' => '负责人是否失效，0失效1生效',
                          'type' => 'integer',
                          'format' => 'int32',
                        ),
                        'stalkerIsValid' => 
                        array (
                          'title' => '跟踪人是否失效，0失效1生效',
                          'type' => 'integer',
                          'format' => 'int32',
                        ),
                      ),
                    ),
                  ),
                  'customProblemReason' => 
                  array (
                    'title' => '自定义故障原因',
                    'type' => 'string',
                  ),
                  'replayDutyUserIsValid' => 
                  array (
                    'title' => '复盘负责人生效状态，0失效1生效',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'dutyUserIsValid' => 
                  array (
                    'title' => '故障责任人生效状态，0失效1生效',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"4361a0e1-6747-4834-96ce-0c4840fd3811\\",\\n  \\"data\\": {\\n    \\"problemId\\": \\"231231\\",\\n    \\"problemReason\\": \\"故障的原因\\",\\n    \\"recentActivity\\": \\"2\\",\\n    \\"injectionMode\\": \\"3\\",\\n    \\"recoveryMode\\": \\"2\\",\\n    \\"discoverSource\\": \\"1\\",\\n    \\"userReport\\": 1,\\n    \\"monitorSourceName\\": \\"Zabbix\\",\\n    \\"relationChanges\\": \\"关联变更\\",\\n    \\"dutyUserId\\": 231,\\n    \\"replayDutyUserId\\": 23123,\\n    \\"replayDutyUserPhone\\": \\"1308787****\\",\\n    \\"dutyDepartmentId\\": \\"12312\\",\\n    \\"dutyUserName\\": \\"小明\\",\\n    \\"dutyUserPhone\\": \\"13098898****\\",\\n    \\"replayDutyUserName\\": \\"小花\\",\\n    \\"remark\\": \\"备注\\",\\n    \\"isManual\\": true,\\n    \\"dutyDepartmentName\\": \\"服务组B\\",\\n    \\"measureList\\": [\\n      {\\n        \\"measureId\\": 12312,\\n        \\"type\\": 2,\\n        \\"content\\": \\"内容A\\",\\n        \\"checkStandard\\": \\"验收标准A\\",\\n        \\"checkUserId\\": 12,\\n        \\"checkUserName\\": \\"小军\\",\\n        \\"directorName\\": \\"小张\\",\\n        \\"stalkerName\\": \\"小李\\",\\n        \\"planFinishTime\\": \\"2021-05-01 00:00:00\\",\\n        \\"directorId\\": 212,\\n        \\"stalkerId\\": 3121,\\n        \\"status\\": \\"UNIMPROVED\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetProblemImprovementResponse>\\n    <requestId>4361a0e1-6747-4834-96ce-0c4840fd3811</requestId>\\n    <data>\\n        <problemId>231231</problemId>\\n        <problemReason>故障的原因</problemReason>\\n        <recentActivity>2</recentActivity>\\n        <injectionMode>3</injectionMode>\\n        <recoveryMode>2</recoveryMode>\\n        <discoverSource>1</discoverSource>\\n        <userReport>1</userReport>\\n        <monitorSourceName>Zabbix</monitorSourceName>\\n        <relationChanges>关联变更</relationChanges>\\n        <dutyUserId>231</dutyUserId>\\n        <replayDutyUserId>23123</replayDutyUserId>\\n        <dutyDepartmentId>12312</dutyDepartmentId>\\n        <dutyUserName>小明</dutyUserName>\\n        <replayDutyUserName>小花</replayDutyUserName>\\n        <remark>备注</remark>\\n        <isManual>true</isManual>\\n        <dutyDepartmentName>服务组B</dutyDepartmentName>\\n        <measureList>\\n            <measureId>12312</measureId>\\n            <type>2</type>\\n            <content>内容A</content>\\n            <checkStandard>验收标准A</checkStandard>\\n            <checkUserId>12</checkUserId>\\n            <checkUserName>小军</checkUserName>\\n            <directorName>小张</directorName>\\n            <stalkerName>小李</stalkerName>\\n            <planFinishTime>2021-05-01 00:00:00</planFinishTime>\\n            <directorId>212</directorId>\\n            <stalkerId>3121</stalkerId>\\n            <status>UNIMPROVED</status>\\n        </measureList>\\n    </data>\\n</GetProblemImprovementResponse>","errorExample":""}]',
      'title' => '故障复盘改进详情',
    ),
    'DeleteProblemMeasure' => 
    array (
      'summary' => '删除故障改进措施。',
      'path' => '/problem/improvement/measure/delete',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'measureId' => 
              array (
                'title' => '故障改成措施id',
                'description' => '故障改成措施id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1213',
              ),
              'problemId' => 
              array (
                'title' => '故障Id',
                'description' => '故障Id',
                'type' => 'string',
                'required' => false,
                'example' => '2131',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"4361a0e1-6747-4834-96ce-0c4840fd3812\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteProblemMeasureResponse>\\n    <requestId>4361a0e1-6747-4834-96ce-0c4840fd3812</requestId>\\n</DeleteProblemMeasureResponse>","errorExample":""}]',
      'title' => '删除故障改进措施',
    ),
    'DeleteProblemTimeline' => 
    array (
      'summary' => '删除故障事件线节点。',
      'path' => '/problem/process/timeline/delete',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemTimelineId' => 
              array (
                'title' => 'ID',
                'description' => '时间线id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '11',
              ),
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '102',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378FTOKENA11',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"10REQUES-AC5C-4B59-BE11-378F117A6A88\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteProblemTimelineResponse>\\n    <requestId>10REQUES-AC5C-4B59-BE11-378F117A6A88</requestId>\\n</DeleteProblemTimelineResponse>","errorExample":""}]',
      'title' => '删除故障事件线节点',
    ),
    'ListProblemTimeLines' => 
    array (
      'summary' => '查询故障时间线列表	。',
      'path' => '/problem/detail/timeLines',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障ID',
                'description' => '故障ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10002010',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'description' => '故障时间线列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'createTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2020-08-08 15:38:38',
                    ),
                    'keyNode' => 
                    array (
                      'title' => '关键节点 码表:PROBLEM_KEY_NODE (逗号分隔)',
                      'description' => '关键节点 码表:PROBLEM_KEY_NODE (逗号分隔)',
                      'type' => 'string',
                      'example' => 'PROBLEM_INJECTION,PROBLEM_HAPPEN',
                    ),
                    'content' => 
                    array (
                      'title' => '内容',
                      'description' => '内容',
                      'type' => 'string',
                      'example' => '内容',
                    ),
                    'isKey' => 
                    array (
                      'title' => '是否是关键字 true是 false不是 默认 false',
                      'description' => '是否是关键字 true是 false不是 默认 false',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'updateTime' => 
                    array (
                      'title' => '修改时间',
                      'description' => '修改时间',
                      'type' => 'string',
                      'example' => '2020-08-08 15:38:38',
                    ),
                    'time' => 
                    array (
                      'title' => '展示时间',
                      'description' => '展示时间',
                      'type' => 'string',
                      'example' => '2020-08-08 15:38:38',
                    ),
                    'problemTimelineId' => 
                    array (
                      'title' => '时间线id',
                      'description' => '时间线id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '10000',
                    ),
                    'usersInContent' => 
                    array (
                      'title' => '内容中的用户信息',
                      'description' => '内容中的用户信息',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'object',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'userId' => 
                          array (
                            'title' => '用户id',
                            'description' => '用户id',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '232',
                          ),
                          'username' => 
                          array (
                            'title' => '用户名',
                            'description' => '用户名',
                            'type' => 'string',
                            'example' => '张老萨',
                          ),
                          'isValid' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int64',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"data\\": [\\n    {\\n      \\"createTime\\": \\"2020-08-08 15:38:38\\",\\n      \\"keyNode\\": \\"PROBLEM_INJECTION,PROBLEM_HAPPEN\\",\\n      \\"content\\": \\"内容\\",\\n      \\"isKey\\": true,\\n      \\"updateTime\\": \\"2020-08-08 15:38:38\\",\\n      \\"time\\": \\"2020-08-08 15:38:38\\",\\n      \\"problemTimelineId\\": 10000,\\n      \\"usersInContent\\": [\\n        {\\n          \\"userId\\": 232,\\n          \\"username\\": \\"张老萨\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListProblemTimeLinesResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n    <data>\\n        <createTime>2020-08-08 15:38:38</createTime>\\n        <keyNode>1,2,3</keyNode>\\n        <content>内容</content>\\n        <isKey>true</isKey>\\n        <updateTime>2020-08-08 15:38:38</updateTime>\\n        <time>2020-08-08 15:38:38</time>\\n        <problemTimelineId>10000</problemTimelineId>\\n    </data>\\n</ListProblemTimeLinesResponse>","errorExample":""}]',
      'title' => '查询故障时间线列表',
    ),
    'GetProblemEffectionService' => 
    array (
      'summary' => '故障影响服务详情。',
      'path' => '/problem/process/effectionService/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'effectionServiceId' => 
              array (
                'title' => 'id主键',
                'description' => 'id主键',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '9',
              ),
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '46',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => 'clientToken',
                'type' => 'string',
                'required' => false,
                'example' => 'e2d4306a-bf4d-4345-9ae6-158223c85dbd',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'e2d4306a-bf4d-4345-9ae6-158223c85dbd',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'effectionServiceId' => 
                  array (
                    'title' => '影响服务id',
                    'description' => '影响服务id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '6442430',
                  ),
                  'serviceName' => 
                  array (
                    'title' => '服务名称',
                    'description' => '服务名称',
                    'type' => 'string',
                    'example' => '哈哈',
                  ),
                  'serviceId' => 
                  array (
                    'title' => '服务id',
                    'description' => '服务id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '170000000',
                  ),
                  'level' => 
                  array (
                    'title' => '影响等级',
                    'description' => '影响等级',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => 'P2',
                  ),
                  'status' => 
                  array (
                    'title' => '影响状态 0 未恢复 1已恢复',
                    'description' => '影响状态 0 未恢复 1已恢复',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => 'UN_RECOVERED',
                  ),
                  'description' => 
                  array (
                    'title' => '影响描述',
                    'description' => '影响描述',
                    'type' => 'string',
                    'example' => 'ew',
                  ),
                  'picUrl' => 
                  array (
                    'title' => '图片链接',
                    'description' => '图片链接',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '图片key',
                      'type' => 'string',
                      'example' => '[             "problem/axxxxxx2-1xxxx4565-be92-f44ae2xxxxx",             "problem/7xxxxxxe314-49998-b9e7-399e78b41fbd",             "problem/xxxxx-f40d-4611-0978-1d1f719a929a"         ]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'EffectionServiceNotExisted',
            'errorMessage' => 'EffectionService does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"e2d4306a-bf4d-4345-9ae6-158223c85dbd\\",\\n  \\"data\\": {\\n    \\"effectionServiceId\\": 6442430,\\n    \\"serviceName\\": \\"哈哈\\",\\n    \\"serviceId\\": 170000000,\\n    \\"level\\": 0,\\n    \\"status\\": 0,\\n    \\"description\\": \\"ew\\",\\n    \\"picUrl\\": [\\n      \\"[             \\\\\\"problem/axxxxxx2-1xxxx4565-be92-f44ae2xxxxx\\\\\\",             \\\\\\"problem/7xxxxxxe314-49998-b9e7-399e78b41fbd\\\\\\",             \\\\\\"problem/xxxxx-f40d-4611-0978-1d1f719a929a\\\\\\"         ]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetProblemEffectionServiceResponse>\\n    <requestId>e2d4306a-bf4d-4345-9ae6-158223c85dbd</requestId>\\n    <data>\\n        <effectionServiceId>6442430</effectionServiceId>\\n        <serviceName>哈哈</serviceName>\\n        <serviceId>170000000</serviceId>\\n        <description>ew</description>\\n        <picUrl>[             \\"problem/axxxxxx2-1xxxx4565-be92-f44ae2xxxxx\\",             \\"problem/7xxxxxxe314-49998-b9e7-399e78b41fbd\\",             \\"problem/xxxxx-f40d-4611-0978-1d1f719a929a\\"         ]</picUrl>\\n    </data>\\n</GetProblemEffectionServiceResponse>","errorExample":""}]',
      'title' => '故障影响服务详情',
    ),
    'GetProblemPreview' => 
    array (
      'summary' => '获取故障通知预览。',
      'path' => '/problem/preview',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '12312',
              ),
              'problemNotifyType' => 
              array (
                'title' => '通告类型',
                'description' => '通告类型 PROBLEM_NOTIFY：故障通告 PROBLEM_UPDATE：故障更新 PROBLEM_UPGRADE：故障升级 PROBLEM_DEGRADE：故障降级 PROBLEM_RECOVER：故障恢复 PROBLEM_REISSUE：
故障补发 PROBLEM_CANCEL：故障取消',
                'type' => 'string',
                'required' => false,
                'example' => 'PROBLEM_NOTIFY',
              ),
              'problemLevel' => 
              array (
                'title' => '故障等级',
                'description' => '故障等级',
                'type' => 'string',
                'required' => false,
                'example' => 'P2',
              ),
              'effectServiceIds' => 
              array (
                'title' => '影响服务',
                'description' => '影响服务',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '影响服务ID',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '1231',
                ),
                'required' => false,
              ),
              'relatedServiceId' => 
              array (
                'title' => '所属服务',
                'description' => '关联服务Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '21312',
              ),
              'incidentId' => 
              array (
                'title' => '事件Id',
                'description' => '事件id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '213123',
              ),
              'serviceGroupIds' => 
              array (
                'title' => '应急协同组',
                'description' => '协同组Id',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '服务组Id',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '12313',
                ),
                'required' => false,
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等Token',
                'type' => 'string',
                'required' => false,
                'example' => '4361a0e1-6747-4834-96ce-0c4840f13812',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => '4361a0e1-6747-4834-96ce-0c2840fd3812',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'problem' => 
                  array (
                    'description' => 'object',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'problemName' => 
                      array (
                        'title' => '故障名称',
                        'description' => '故障名称',
                        'type' => 'string',
                        'example' => '故障名称',
                      ),
                      'problemStatus' => 
                      array (
                        'title' => '故障状态 1 处理中 2已恢复 3复盘中 4已复盘 5已取消',
                        'description' => 'HANDLING	故障状态 
HANDLING    处理中 RECOVERED  已恢复 
REPLAYING   复盘中 
REPLAYED     已复盘 CANCEL        已取消',
                        'type' => 'string',
                        'example' => 'HANDLING',
                      ),
                      'problemLevel' => 
                      array (
                        'title' => '故障等级 1=P1 2=P2 3=P3 4=P4',
                        'description' => '故障等级 1=P1 2=P2 3=P3 4=P4',
                        'type' => 'string',
                        'example' => 'P2',
                      ),
                      'discoverTime' => 
                      array (
                        'title' => '发现时间',
                        'description' => '发现时间',
                        'type' => 'string',
                        'example' => '2021-02-21 00:00:00',
                      ),
                      'recoveryTime' => 
                      array (
                        'title' => '恢复时间',
                        'description' => '恢复时间',
                        'type' => 'string',
                        'example' => '2021-02-21 00:00:00',
                      ),
                      'serviceName' => 
                      array (
                        'title' => '关联服务 名称',
                        'description' => '关联服务名称',
                        'type' => 'string',
                        'example' => '服务A',
                      ),
                      'progressSummary' => 
                      array (
                        'title' => '进展摘要',
                        'description' => '进展摘要',
                        'type' => 'string',
                        'example' => '摘要123',
                      ),
                      'preliminaryReason' => 
                      array (
                        'title' => '初步原因',
                        'description' => '初步原因',
                        'type' => 'string',
                        'example' => '原因A',
                      ),
                      'mainHandlerName' => 
                      array (
                        'title' => '主要处理人',
                        'description' => '主要处理人',
                        'type' => 'string',
                        'example' => '小明',
                      ),
                      'mainHandlerId' => 
                      array (
                        'title' => '主要处理人Id',
                        'description' => '主要处理人Id',
                        'type' => 'string',
                        'example' => '231',
                      ),
                      'isManual' => 
                      array (
                        'title' => '是否手动',
                        'description' => '是否手动',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'isUpgrade' => 
                      array (
                        'title' => '是否升级',
                        'description' => '是否升级',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'problemId' => 
                      array (
                        'title' => '故障Id',
                        'description' => '故障Id',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '123123',
                      ),
                      'relatedServiceId' => 
                      array (
                        'title' => '关联服务ID',
                        'description' => '关联服务ID',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '213123',
                      ),
                      'createTime' => 
                      array (
                        'title' => '创建时间',
                        'description' => '创建时间',
                        'type' => 'string',
                        'example' => '2021-02-21 00:00:00',
                      ),
                      'progressSummaryRichTextId' => 
                      array (
                        'title' => '富文本id',
                        'description' => '富文本id',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '12312',
                      ),
                      'coordinationGroups' => 
                      array (
                        'title' => '应急协同组',
                        'description' => '应急协同组',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'serviceGroupName' => 
                            array (
                              'title' => '服务组名称',
                              'description' => '服务组名称',
                              'type' => 'string',
                              'example' => '服务组A',
                            ),
                            'serviceGroupId' => 
                            array (
                              'title' => '服务Id',
                              'description' => '服务Id',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1231',
                            ),
                            'serviceGroupDescription' => 
                            array (
                              'title' => '服务组Maison',
                              'description' => '服务组Maison',
                              'type' => 'string',
                              'example' => '服务组描述',
                            ),
                          ),
                        ),
                      ),
                      'effectionServices' => 
                      array (
                        'title' => '影响服务',
                        'description' => '影响服务',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'serviceName' => 
                            array (
                              'title' => '影响服务名称',
                              'description' => '影响服务名称',
                              'type' => 'string',
                              'example' => '服务B',
                            ),
                            'serviceId' => 
                            array (
                              'title' => '影响服务Id',
                              'description' => '影响服务Id',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1231',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'voice' => 
                  array (
                    'title' => '语音',
                    'description' => '语音',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'count' => 
                      array (
                        'title' => '数量',
                        'description' => '数量',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '12',
                      ),
                      'users' => 
                      array (
                        'description' => '用户组',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '用户',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'username' => 
                            array (
                              'title' => '用户',
                              'description' => '用户',
                              'type' => 'string',
                              'example' => '用户名称',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'mail' => 
                  array (
                    'title' => '邮箱',
                    'description' => '邮箱',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'count' => 
                      array (
                        'title' => '数量',
                        'description' => '数量',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '123',
                      ),
                      'users' => 
                      array (
                        'description' => '用户组',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '用户',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'username' => 
                            array (
                              'title' => '用户名称',
                              'description' => '用户名称',
                              'type' => 'string',
                              'example' => '用户名称',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'sms' => 
                  array (
                    'title' => '短信',
                    'description' => '短信',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'count' => 
                      array (
                        'title' => '数量',
                        'description' => '数量',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '12',
                      ),
                      'users' => 
                      array (
                        'description' => '用户组',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '用户',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'username' => 
                            array (
                              'title' => '用户名称',
                              'description' => '用户名称',
                              'type' => 'string',
                              'example' => '用户名称',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'webhook' => 
                  array (
                    'title' => 'webhook',
                    'description' => 'webhook',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'count' => 
                      array (
                        'title' => '数量',
                        'description' => '数量',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '32',
                      ),
                      'serviceGroups' => 
                      array (
                        'description' => '服务组',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => 'object',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'serviceName' => 
                            array (
                              'title' => '服务名称',
                              'description' => '服务名称',
                              'type' => 'string',
                              'example' => '服务名称',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'upBeforeData' => 
                  array (
                    'title' => '升级前数据',
                    'description' => '升级前数据',
                    'type' => 'string',
                    'example' => '最新升级前等级',
                  ),
                  'upAfterData' => 
                  array (
                    'title' => '升级后数据',
                    'description' => '升级后数据',
                    'type' => 'string',
                    'example' => '最新升级后等级',
                  ),
                  'deBeforeData' => 
                  array (
                    'title' => '降级前数据',
                    'description' => '降级前数据',
                    'type' => 'string',
                    'example' => '最新降级前等级',
                  ),
                  'deAfterData' => 
                  array (
                    'title' => '降级后数据',
                    'description' => '降级后数据',
                    'type' => 'string',
                    'example' => '最新降级后等级',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"4361a0e1-6747-4834-96ce-0c2840fd3812\\",\\n  \\"data\\": {\\n    \\"problem\\": {\\n      \\"problemName\\": \\"故障名称\\",\\n      \\"problemStatus\\": \\"HANDLING\\",\\n      \\"problemLevel\\": \\"P2\\",\\n      \\"discoverTime\\": \\"2021-02-21 00:00:00\\",\\n      \\"recoveryTime\\": \\"2021-02-21 00:00:00\\",\\n      \\"serviceName\\": \\"服务A\\",\\n      \\"progressSummary\\": \\"摘要123\\",\\n      \\"preliminaryReason\\": \\"原因A\\",\\n      \\"mainHandlerName\\": \\"小明\\",\\n      \\"mainHandlerId\\": \\"231\\",\\n      \\"isManual\\": true,\\n      \\"isUpgrade\\": true,\\n      \\"problemId\\": 123123,\\n      \\"relatedServiceId\\": 213123,\\n      \\"createTime\\": \\"2021-02-21 00:00:00\\",\\n      \\"progressSummaryRichTextId\\": 12312,\\n      \\"coordinationGroups\\": [\\n        {\\n          \\"serviceGroupName\\": \\"服务组A\\",\\n          \\"serviceGroupId\\": 1231,\\n          \\"serviceGroupDescription\\": \\"服务组描述\\"\\n        }\\n      ],\\n      \\"effectionServices\\": [\\n        {\\n          \\"serviceName\\": \\"服务B\\",\\n          \\"serviceId\\": 1231\\n        }\\n      ]\\n    },\\n    \\"voice\\": {\\n      \\"count\\": 12,\\n      \\"users\\": [\\n        {\\n          \\"username\\": \\"用户名称\\"\\n        }\\n      ]\\n    },\\n    \\"mail\\": {\\n      \\"count\\": 123,\\n      \\"users\\": [\\n        {\\n          \\"username\\": \\"用户名称\\"\\n        }\\n      ]\\n    },\\n    \\"sms\\": {\\n      \\"count\\": 12,\\n      \\"users\\": [\\n        {\\n          \\"username\\": \\"用户名称\\"\\n        }\\n      ]\\n    },\\n    \\"webhook\\": {\\n      \\"count\\": 32,\\n      \\"serviceGroups\\": [\\n        {\\n          \\"serviceName\\": \\"服务名称\\"\\n        }\\n      ]\\n    },\\n    \\"upBeforeData\\": \\"最新升级前等级\\",\\n    \\"upAfterData\\": \\"最新升级后等级\\",\\n    \\"deBeforeData\\": \\"最新降级前等级\\",\\n    \\"deAfterData\\": \\"最新降级后等级\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetProblemPreviewResponse>\\n    <requestId>4361a0e1-6747-4834-96ce-0c2840fd3812</requestId>\\n    <data>\\n        <problem>\\n            <problemName>故障名称</problemName>\\n            <problemStatus>HANDLING</problemStatus>\\n            <problemLevel>P2</problemLevel>\\n            <discoverTime>2021-02-21 00:00:00</discoverTime>\\n            <recoveryTime>2021-02-21 00:00:00</recoveryTime>\\n            <serviceName>服务A</serviceName>\\n            <progressSummary>摘要123</progressSummary>\\n            <preliminaryReason>原因A</preliminaryReason>\\n            <mainHandlerName>小明</mainHandlerName>\\n            <mainHandlerId>231</mainHandlerId>\\n            <isManual>true</isManual>\\n            <isUpgrade>true</isUpgrade>\\n            <problemId>123123</problemId>\\n            <relatedServiceId>213123</relatedServiceId>\\n            <createTime>2021-02-21 00:00:00</createTime>\\n            <coordinationGroups>\\n                <serviceGroupName>服务组A</serviceGroupName>\\n                <serviceGroupId>1231</serviceGroupId>\\n                <serviceGroupDescription>服务组描述</serviceGroupDescription>\\n            </coordinationGroups>\\n            <effectionServices>\\n                <serviceName>服务B</serviceName>\\n                <serviceId>1231</serviceId>\\n            </effectionServices>\\n        </problem>\\n        <voice>\\n            <count>12</count>\\n            <users>\\n                <username>用户名称</username>\\n            </users>\\n        </voice>\\n        <mail>\\n            <count>123</count>\\n            <users>\\n                <username>用户名称</username>\\n            </users>\\n        </mail>\\n        <sms>\\n            <count>12</count>\\n            <users>\\n                <username>用户名称</username>\\n            </users>\\n        </sms>\\n        <webhook>\\n            <count>32</count>\\n            <serviceGroups>\\n                <serviceName>服务名称</serviceName>\\n            </serviceGroups>\\n        </webhook>\\n        <upBeforeData>最新升级前等级</upBeforeData>\\n        <upAfterData>最新升级后等级</upAfterData>\\n        <deBeforeData>最新降级前等级</deBeforeData>\\n        <deAfterData>最新降级后等级</deAfterData>\\n    </data>\\n</GetProblemPreviewResponse>","errorExample":""}]',
      'title' => '获取故障通知预览',
    ),
    'GenerateProblemPictureUploadSign' => 
    array (
      'summary' => '故障图片上传获取签名信息。',
      'path' => '/problem/process/oss/generatePostPolicy',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'fileName' => 
              array (
                'title' => '文件名',
                'description' => '文件名',
                'type' => 'string',
                'required' => false,
                'example' => 'test',
              ),
              'fileType' => 
              array (
                'title' => '文件类型',
                'description' => '文件类型',
                'type' => 'string',
                'required' => false,
                'example' => 'png',
              ),
              'fileSize' => 
              array (
                'title' => '文件大小KB',
                'description' => '文件大小KB',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1000',
              ),
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '67876',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'e2d4306a-bf4d-4345-9ae6-158223c85dbd',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'bucketName' => 
                  array (
                    'title' => 'oss bucket name',
                    'description' => 'oss bucket name',
                    'type' => 'string',
                    'example' => 'xxxx-xxxx-xxxx',
                  ),
                  'key' => 
                  array (
                    'title' => 'oss key',
                    'description' => 'oss key',
                    'type' => 'string',
                    'example' => 'problem/xxxxxxxxxxxxxxxx1-b3185d529277',
                  ),
                  'policy' => 
                  array (
                    'title' => 'policy',
                    'description' => 'policy',
                    'type' => 'string',
                    'example' => 'eyJleHBpcmF0a0p0IjoiMjAyMS0wNy0xM1QwNDowOTo0NS4yODJaIiwiY29uZGl0aW9ucyI6W1siY29udGVudC1sZW5ndGgtcmFuZ2UiLDAsMTA0ODU3NjAwXSxbInN0YXJ0cy13aXRoIiwiJGtleSIsInByb2JsZW0iXV19',
                  ),
                  'signature' => 
                  array (
                    'title' => 'signature',
                    'description' => 'signature',
                    'type' => 'string',
                    'example' => 'SHqvIkwUNQd0o0rvklir2K8U+ts=',
                  ),
                  'url' => 
                  array (
                    'title' => 'url',
                    'description' => 'url',
                    'type' => 'string',
                    'example' => 'https://xxx-xxx-bucket.oss-cn-shanghai.aliyuncs.com',
                  ),
                  'accessKeyId' => 
                  array (
                    'title' => 'ossaccessKeyId',
                    'description' => 'ossaccessKeyId',
                    'type' => 'string',
                    'example' => 'XXXXXXXH8GMy1iLRCno7',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"e2d4306a-bf4d-4345-9ae6-158223c85dbd\\",\\n  \\"data\\": {\\n    \\"bucketName\\": \\"xxxx-xxxx-xxxx\\",\\n    \\"key\\": \\"problem/xxxxxxxxxxxxxxxx1-b3185d529277\\",\\n    \\"policy\\": \\"eyJleHBpcmF0a0p0IjoiMjAyMS0wNy0xM1QwNDowOTo0NS4yODJaIiwiY29uZGl0aW9ucyI6W1siY29udGVudC1sZW5ndGgtcmFuZ2UiLDAsMTA0ODU3NjAwXSxbInN0YXJ0cy13aXRoIiwiJGtleSIsInByb2JsZW0iXV19\\",\\n    \\"signature\\": \\"SHqvIkwUNQd0o0rvklir2K8U+ts=\\",\\n    \\"url\\": \\"https://xxx-xxx-bucket.oss-cn-shanghai.aliyuncs.com\\",\\n    \\"accessKeyId\\": \\"XXXXXXXH8GMy1iLRCno7\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GenerateProblemPictureUploadSignResponse>\\n    <requestId>e2d4306a-bf4d-4345-9ae6-158223c85dbd</requestId>\\n    <data>\\n        <bucketName>xxxx-xxxx-xxxx</bucketName>\\n        <key>problem/xxxxxxxxxxxxxxxx1-b3185d529277</key>\\n        <policy>eyJleHBpcmF0a0p0IjoiMjAyMS0wNy0xM1QwNDowOTo0NS4yODJaIiwiY29uZGl0aW9ucyI6W1siY29udGVudC1sZW5ndGgtcmFuZ2UiLDAsMTA0ODU3NjAwXSxbInN0YXJ0cy13aXRoIiwiJGtleSIsInByb2JsZW0iXV19</policy>\\n        <signature>SHqvIkwUNQd0o0rvklir2K8U+ts=</signature>\\n        <url>https://xxx-xxx-bucket.oss-cn-shanghai.aliyuncs.com</url>\\n        <accessKeyId>XXXXXXXH8GMy1iLRCno7</accessKeyId>\\n    </data>\\n</GenerateProblemPictureUploadSignResponse>","errorExample":""}]',
      'title' => '故障图片上传获取签名信息',
    ),
    'UpdateProblemMeasure' => 
    array (
      'summary' => '更新故障改进措施。',
      'path' => '/problem/improvement/measure/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'type' => 
              array (
                'title' => '措施类型 码表 PROBLEM_REPLAY_IMPROVEMENT',
                'description' => '措施类型码表：PROBLEM_REPLAY_IMPROVEMENT',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '3',
              ),
              'content' => 
              array (
                'title' => '措施内容',
                'description' => '措施内容',
                'type' => 'string',
                'required' => false,
                'example' => '措施内容',
              ),
              'checkStandard' => 
              array (
                'title' => '验收标准',
                'description' => '验收标准',
                'type' => 'string',
                'required' => false,
                'example' => '2',
              ),
              'checkUserId' => 
              array (
                'title' => '验收人id',
                'description' => '验收人id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123',
              ),
              'directorId' => 
              array (
                'title' => '负责人id',
                'description' => '负责人id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123',
              ),
              'stalkerId' => 
              array (
                'title' => '跟踪人id',
                'description' => '跟踪人id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123',
              ),
              'planFinishTime' => 
              array (
                'title' => '计划完成时间',
                'description' => '计划完成时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-01-21 00:00:00',
              ),
              'measureId' => 
              array (
                'title' => '措施Id',
                'description' => '措施Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1231',
              ),
              'status' => 
              array (
                'title' => '状态 IMPROVED 改进 2 未改进UNIMPROVED',
                'description' => '状态 IMPROVED 改进 2 未改进UNIMPROVED',
                'type' => 'string',
                'required' => false,
                'example' => 'UNIMPROVED',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
              'problemId' => 
              array (
                'title' => '故障Id',
                'description' => '故障Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1233',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'ProblemMeasureNotExisted',
            'errorMessage' => 'The problem measure does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"4361a0e1-6747-4834-96ce-0c4840fd3812\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateProblemMeasureResponse>\\n    <requestId>4361a0e1-6747-4834-96ce-0c4840fd3812</requestId>\\n</UpdateProblemMeasureResponse>","errorExample":""}]',
      'title' => '更新故障改进措施',
    ),
    'UpdateProblemEffectionService' => 
    array (
      'summary' => '更新故障影响服务。',
      'path' => '/problem/process/effectionService/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceId' => 
              array (
                'title' => '关联服务id',
                'description' => '关联服务id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '33',
              ),
              'level' => 
              array (
                'title' => '影响等级',
                'description' => '影响等级',
                'type' => 'string',
                'required' => false,
                'example' => 'P1',
              ),
              'status' => 
              array (
                'title' => '影响状态 UN_RECOVERED 未恢复 RECOVERED已恢复',
                'description' => '影响状态 0 未恢复 1已恢复',
                'type' => 'string',
                'required' => false,
                'example' => 'UN_RECOVERED',
              ),
              'description' => 
              array (
                'title' => '影响描述',
                'description' => '影响描述',
                'type' => 'string',
                'required' => false,
                'example' => 'xxxx大厦',
              ),
              'picUrl' => 
              array (
                'title' => '图片地址',
                'description' => '图片地址',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '图片key',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'problem/xxxxxxxx-a2c8-40b9-9162-08a6c2e338e2',
                ),
                'required' => false,
              ),
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '190000000',
              ),
              'effectionServiceId' => 
              array (
                'title' => '影响服务id',
                'description' => '影响服务id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '103',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => 'clientToken',
                'type' => 'string',
                'required' => false,
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'ffbf594-e093-46ad-bdcd-df4d7097125a',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"ffbf594-e093-46ad-bdcd-df4d7097125a\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateProblemEffectionServiceResponse>\\n    <requestId>ffbf594-e093-46ad-bdcd-df4d7097125a</requestId>\\n</UpdateProblemEffectionServiceResponse>","errorExample":""}]',
      'title' => '更新故障影响服务',
    ),
    'GenerateProblemPictureLink' => 
    array (
      'summary' => '获取故障图片链接。',
      'path' => '/problem/process/oss/getPresignedLink',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'keys' => 
              array (
                'title' => 'oss key',
                'description' => 'oss key',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'keys',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'problem/38b2a7893-484d-8989-b9cf-d243e53a82c6',
                ),
                'required' => false,
              ),
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'string',
                'required' => false,
                'example' => '50002021',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'c26f36de-1ec8-496a-a828-88067879ef81',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'links' => 
                  array (
                    'title' => '图片链接列表',
                    'description' => '图片链接列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'key' => 
                        array (
                          'title' => 'oss key',
                          'description' => 'oss key',
                          'type' => 'string',
                          'example' => 'problem/xxxxxxxxxx-484d-4242-b9cf-xxxxxxxxxx',
                        ),
                        'link' => 
                        array (
                          'title' => '图片链接',
                          'description' => '图片链接',
                          'type' => 'string',
                          'example' => 'http://xxxx-xxxx-bucket.oss-cn-xxxx.aliyuncs.com/pxxxx/38xxxxd-4789-4242-b9cfxxxxxxxxc6?Expires=1xxxxxxxxxx7&OSSAccessKeyId=xxxxxxxxxxxxxx7&Signature=xxxxxxxxxxxxxxxxxxxxxx',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"c26f36de-1ec8-496a-a828-88067879ef81\\",\\n  \\"data\\": {\\n    \\"links\\": [\\n      {\\n        \\"key\\": \\"problem/xxxxxxxxxx-484d-4242-b9cf-xxxxxxxxxx\\",\\n        \\"link\\": \\"http://xxxx-xxxx-bucket.oss-cn-xxxx.aliyuncs.com/pxxxx/38xxxxd-4789-4242-b9cfxxxxxxxxc6?Expires=1xxxxxxxxxx7&OSSAccessKeyId=xxxxxxxxxxxxxx7&Signature=xxxxxxxxxxxxxxxxxxxxxx\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GenerateProblemPictureLinkResponse>\\n    <requestId>c26f36de-1ec8-496a-a828-88067879ef81</requestId>\\n    <data>\\n        <links>\\n            <key>problem/xxxxxxxxxx-484d-4242-b9cf-xxxxxxxxxx</key>\\n            <link>http://xxxx-xxxx-bucket.oss-cn-xxxx.aliyuncs.com/pxxxx/38xxxxd-4789-4242-b9cfxxxxxxxxc6?Expires=1xxxxxxxxxx7&amp;OSSAccessKeyId=xxxxxxxxxxxxxx7&amp;Signature=xxxxxxxxxxxxxxxxxxxxxx</link>\\n        </links>\\n    </data>\\n</GenerateProblemPictureLinkResponse>","errorExample":""}]',
      'title' => '获取故障图片链接',
    ),
    'DeleteProblemEffectionService' => 
    array (
      'summary' => '删除影响服务。',
      'path' => '/problem/process/effectionService/delete',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'effectionServiceId' => 
              array (
                'title' => '影响服务ID',
                'description' => '影响服务ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '567',
              ),
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '876',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => 'clientToken',
                'type' => 'string',
                'required' => false,
                'example' => 'e0b6735e-1a04-4d6b-a625-d2350612492c',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'e0b6735e-1a04-4d6b-a625-d2350612492c',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"e0b6735e-1a04-4d6b-a625-d2350612492c\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteProblemEffectionServiceResponse>\\n    <requestId>e0b6735e-1a04-4d6b-a625-d2350612492c</requestId>\\n</DeleteProblemEffectionServiceResponse>","errorExample":""}]',
      'title' => '删除影响服务',
    ),
    'DisableServiceGroupWebhook' => 
    array (
      'summary' => '禁用服务组的webhook。',
      'path' => '/services/group/disableWebhook',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DisableWebhookFailed',
            'errorMessage' => 'Disabling webhook failed.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\"\\n}","errorExample":""},{"type":"xml","example":"<DisableServiceGroupWebhookResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n</DisableServiceGroupWebhookResponse>","errorExample":""}]',
      'title' => '禁用服务组的webhook',
    ),
    'RemoveProblemServiceGroup' => 
    array (
      'summary' => '移除故障应急协同组。',
      'path' => '/problem/removeServiceGroup',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障ID',
                'description' => '故障ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '13123',
              ),
              'serviceGroupIds' => 
              array (
                'title' => '应急协同组',
                'description' => '应急协同组',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '应急协同组ID',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '应急协同组ID',
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '5AD6E6BC-2582-4E0E-832D-52CB1B922253',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"5AD6E6BC-2582-4E0E-832D-52CB1B922253\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveProblemServiceGroupResponse>\\n    <requestId>5AD6E6BC-2582-4E0E-832D-52CB1B922253</requestId>\\n</RemoveProblemServiceGroupResponse>","errorExample":""}]',
      'title' => '移除故障应急协同组',
    ),
    'CreateProblemEffectionService' => 
    array (
      'summary' => '创建影响服务。',
      'path' => '/problem/process/effectionService/create',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceId' => 
              array (
                'title' => '影响服务id',
                'description' => '影响服务id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '170000000',
              ),
              'level' => 
              array (
                'title' => '影响等级',
                'description' => '影响等级',
                'type' => 'string',
                'required' => false,
                'example' => 'P2',
              ),
              'status' => 
              array (
                'title' => '影响状态 0 未恢复 1已恢复',
                'description' => '影响状态 0 未恢复 1已恢复',
                'type' => 'string',
                'required' => false,
                'example' => 'UN_RECOVERED',
              ),
              'description' => 
              array (
                'title' => '影响描述',
                'description' => '影响描述',
                'type' => 'string',
                'required' => false,
                'example' => 'erdwcdc',
              ),
              'pictureUrl' => 
              array (
                'title' => '图片地址',
                'description' => '图片地址',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '图片key',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'problem/xxxxxxxssxxxa2c8-40b9-9162-08a6c2e338e2',
                ),
                'required' => false,
              ),
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '150000000',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => 'clientToken',
                'type' => 'string',
                'required' => false,
                'example' => 'e0b6735e-1a04-4d6b-a625-d2350612492c',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'description' => 'id of the request',
                'type' => 'string',
                'example' => 'c26f36de-1ec8-496a-a828-880676c5ef81',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'effectionServiceId' => 
                  array (
                    'title' => '影响服务id',
                    'description' => '影响服务id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '6442430',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'EffectionServiceAlreadyExisted',
            'errorMessage' => 'EffectionService already exists.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"c26f36de-1ec8-496a-a828-880676c5ef81\\",\\n  \\"data\\": {\\n    \\"effectionServiceId\\": 6442430\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateProblemEffectionServiceResponse>\\n    <requestId>c26f36de-1ec8-496a-a828-880676c5ef81</requestId>\\n    <data>\\n        <effectionServiceId>6442430</effectionServiceId>\\n    </data>\\n</CreateProblemEffectionServiceResponse>","errorExample":""}]',
      'title' => '创建影响服务',
    ),
    'ListMonitorSources' => 
    array (
      'summary' => '监控源列表。',
      'path' => '/monitorSource/list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378FTOKENA11',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'data' => 
              array (
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'monitorSourceId' => 
                    array (
                      'description' => '监控源id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12',
                    ),
                    'monitorSourceName' => 
                    array (
                      'description' => '监控源名称
',
                      'type' => 'string',
                      'example' => 'Zabbix',
                    ),
                    'fieldKeys' => 
                    array (
                      'description' => '监控源字段列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '监控源字段',
                        'type' => 'string',
                        'example' => 'payload.content',
                      ),
                    ),
                  ),
                ),
              ),
              'requestId' => 
              array (
                'description' => 'id of the request',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"data\\": [\\n    {\\n      \\"monitorSourceId\\": 12,\\n      \\"monitorSourceName\\": \\"Zabbix\\",\\n      \\"fieldKeys\\": [\\n        \\"payload.content\\"\\n      ]\\n    }\\n  ],\\n  \\"requestId\\": \\"10REQUES-AC5C-4B59-BE11-378F117A6A88\\"\\n}","errorExample":""},{"type":"xml","example":"<ListMonitorSourcesResponse>\\n    <monitorSourceId>1</monitorSourceId>\\n    <fieldKeys>payload.content</fieldKeys>\\n    <fieldKeys>payload.summary</fieldKeys>\\n    <fieldKeys>payload.testarr[].a</fieldKeys>\\n    <fieldKeys>payload.testarr[].b</fieldKeys>\\n    <fieldKeys>payload.title</fieldKeys>\\n    <monitorSourceName>zabbix</monitorSourceName>\\n</ListMonitorSourcesResponse>\\n<ListMonitorSourcesResponse>\\n    <monitorSourceId>9</monitorSourceId>\\n    <fieldKeys>payload.testarr[].a</fieldKeys>\\n    <fieldKeys>payload.testarr[].b</fieldKeys>\\n    <fieldKeys>payload.title</fieldKeys>\\n    <monitorSourceName>网易云</monitorSourceName>\\n</ListMonitorSourcesResponse>\\n<ListMonitorSourcesResponse>\\n    <monitorSourceId>8</monitorSourceId>\\n    <fieldKeys>payload.content</fieldKeys>\\n    <fieldKeys>payload.summary</fieldKeys>\\n    <fieldKeys>payload.title</fieldKeys>\\n    <monitorSourceName>腾讯云</monitorSourceName>\\n</ListMonitorSourcesResponse>","errorExample":""}]',
      'title' => '监控源列表',
    ),
    'ListIncidentSubtotals' => 
    array (
      'summary' => '查询事件小计。',
      'path' => '/incident/list/subtotal',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'incidentId' => 
              array (
                'title' => '事件ID',
                'description' => '事件ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '3123',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE62E59A2E9',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'description' => 
                    array (
                      'title' => '描述',
                      'description' => '描述',
                      'type' => 'string',
                      'example' => '小计描述',
                    ),
                    'createTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2021-06-23 00:00:00',
                    ),
                    'createUserName' => 
                    array (
                      'title' => '操作人',
                      'description' => '操作人',
                      'type' => 'string',
                      'example' => '小明',
                    ),
                    'createUserPhone' => 
                    array (
                      'title' => '操作人手机号',
                      'description' => '操作人手机号',
                      'type' => 'string',
                      'example' => '130****1111',
                    ),
                    'createUserId' => 
                    array (
                      'title' => '操作人Id',
                      'description' => '操作人Id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12312',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentNotExtisted',
            'errorMessage' => 'The incident does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\",\\n  \\"data\\": [\\n    {\\n      \\"description\\": \\"小计描述\\",\\n      \\"createTime\\": \\"2021-06-23 00:00:00\\",\\n      \\"createUserName\\": \\"小明\\",\\n      \\"createUserPhone\\": \\"130****1111\\",\\n      \\"createUserId\\": 12312\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListIncidentSubtotalsResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n    <data>\\n        <description>小计描述</description>\\n        <createTime>2021-06-23 00:00:00</createTime>\\n        <createUserName>小明</createUserName>\\n        <createUserPhone>130****1111</createUserPhone>\\n    </data>\\n</ListIncidentSubtotalsResponse>","errorExample":""}]',
      'title' => '查询事件小计',
    ),
    'EnableServiceGroupWebhook' => 
    array (
      'summary' => '启用服务组的webhook。',
      'path' => '/services/group/enableWebhook',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'EnableServiceGroupWebhookFail',
            'errorMessage' => 'Failed to enable the service group webhook.',
          ),
          1 => 
          array (
            'errorCode' => 'ServiceGroupNotExisted',
            'errorMessage' => 'The service group does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\"\\n}","errorExample":""},{"type":"xml","example":"<EnableServiceGroupWebhookResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n</EnableServiceGroupWebhookResponse>","errorExample":""}]',
      'title' => '启用服务组的webhook',
    ),
    'ListAlerts' => 
    array (
      'summary' => '报警列表查询。',
      'path' => '/alerts/list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'alertLevel' => 
              array (
                'title' => '报警等级 P1 P2 P3 P4',
                'description' => '报警等级',
                'type' => 'string',
                'required' => false,
                'example' => 'P1',
              ),
              'relatedServiceId' => 
              array (
                'title' => '服务id',
                'description' => '关联服务ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'alertName' => 
              array (
                'title' => '报警名称',
                'description' => '报警名称',
                'type' => 'string',
                'required' => false,
                'example' => '报警',
              ),
              'pageNumber' => 
              array (
                'title' => '当前页',
                'description' => '当前页',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '页大小',
                'description' => '分页大小',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10',
              ),
              'alertSourceName' => 
              array (
                'title' => '报警来源',
                'description' => '报警来源',
                'type' => 'string',
                'required' => false,
                'example' => '流转规则A',
              ),
              'startTime' => 
              array (
                'title' => '开始时间',
                'description' => '2020-09-10 13:00:00',
                'type' => 'string',
                'required' => false,
                'example' => '开始时间',
              ),
              'endTime' => 
              array (
                'title' => '结束时间',
                'description' => '2020-09-10 21:00:00',
                'type' => 'string',
                'required' => false,
                'example' => '结束时间',
              ),
              'ruleName' => 
              array (
                'title' => '流转规则名字',
                'description' => '报警规则名称',
                'type' => 'string',
                'required' => false,
                'example' => '规则名称',
              ),
              'monitorSourceId' => 
              array (
                'title' => '原始信息来源id',
                'description' => '监控源ID',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'data' => 
              array (
                'title' => '报警列表',
                'description' => '报警列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'alertId' => 
                    array (
                      'title' => '报警ID',
                      'description' => '报警ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '20000',
                    ),
                    'createTime' => 
                    array (
                      'title' => '创建时间',
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2020-03-05 15:53:55',
                    ),
                    'relatedServiceName' => 
                    array (
                      'title' => '关联服务名称',
                      'description' => '关联服务名称',
                      'type' => 'string',
                      'example' => '冲上云霄',
                    ),
                    'alertLevel' => 
                    array (
                      'title' => '告警优先级  1，2，3，4  对应 p1,p2,p3,p4',
                      'description' => '告警优先级：

-  1：P1
- 2：P2
- 3：P3
- 4：P4',
                      'type' => 'string',
                      'example' => 'P1',
                    ),
                    'title' => 
                    array (
                      'title' => '报警标题',
                      'description' => '报警标题',
                      'type' => 'string',
                      'example' => '报警',
                    ),
                    'sourceEventCount' => 
                    array (
                      'title' => '收敛量',
                      'description' => '收敛量',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '10',
                    ),
                    'alertSourceName' => 
                    array (
                      'title' => '报警源',
                      'description' => '报警源',
                      'type' => 'string',
                      'example' => '流转规则A',
                    ),
                    'firstEventTime' => 
                    array (
                      'title' => '第一次告警上报时间',
                      'description' => '第一次告警上报时间',
                      'type' => 'string',
                      'example' => '2021-09-08 18:30:00',
                    ),
                    'routeRuleId' => 
                    array (
                      'title' => '关联流转规则ID',
                      'description' => '关联流转规则ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '10000',
                    ),
                    'alertNumber' => 
                    array (
                      'title' => '报警编号',
                      'description' => '报警编号',
                      'type' => 'string',
                      'example' => 'A123123123',
                    ),
                    'routeRuleName' => 
                    array (
                      'title' => '流转规则名字',
                      'description' => '流转规则名字',
                      'type' => 'string',
                      'example' => '流转规则',
                    ),
                    'relServiceDeleteType' => 
                    array (
                      'title' => '服务删除字段 1正常 0删除',
                      'description' => '服务删除字段：

- 1正常
- 0删除',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'routeRuleDeleteType' => 
                    array (
                      'title' => '规则删除字段 1正常 0删除',
                      'description' => '规则删除字段：

- 1正常
- 0删除',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'monitorSourceName' => 
                    array (
                      'title' => '原始数据名称',
                      'description' => '原始数据名称',
                      'type' => 'string',
                      'example' => 'name',
                    ),
                  ),
                ),
              ),
              'totalCount' => 
              array (
                'title' => '总条数',
                'description' => '总条数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
              'pageNumber' => 
              array (
                'title' => '当前页',
                'description' => '当前页',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '页的大小',
                'description' => '页大小',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"data\\": [\\n    {\\n      \\"alertId\\": 20000,\\n      \\"createTime\\": \\"2020-03-05 15:53:55\\",\\n      \\"relatedServiceName\\": \\"冲上云霄\\",\\n      \\"alertLevel\\": \\"P1\\",\\n      \\"title\\": \\"报警\\",\\n      \\"sourceEventCount\\": 10,\\n      \\"alertSourceName\\": \\"流转规则A\\",\\n      \\"firstEventTime\\": \\"2021-09-08 18:30:00\\",\\n      \\"routeRuleId\\": 10000,\\n      \\"alertNumber\\": \\"A123123123\\",\\n      \\"routeRuleName\\": \\"流转规则\\",\\n      \\"relServiceDeleteType\\": 1,\\n      \\"routeRuleDeleteType\\": 1,\\n      \\"monitorSourceName\\": \\"name\\"\\n    }\\n  ],\\n  \\"totalCount\\": 100,\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 10\\n}","errorExample":""},{"type":"xml","example":"<ListAlertsResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n    <data>\\n        <alertId>20000</alertId>\\n        <createTime>2020-03-05 15:53:55</createTime>\\n        <relatedServiceName>冲上云霄</relatedServiceName>\\n        <alertLevel>P1</alertLevel>\\n        <title>报警</title>\\n        <sourceEventCount>10</sourceEventCount>\\n        <alertSourceName>流转规则A</alertSourceName>\\n        <routeRuleId>10000</routeRuleId>\\n        <firstEventTime>2021-09-08 18:30:00</firstEventTime>\\n    </data>\\n    <totalCount>100</totalCount>\\n    <pageNumber>1</pageNumber>\\n    <pageSize>10</pageSize>\\n</ListAlertsResponse>","errorExample":""}]',
      'title' => '报警列表查询',
    ),
    'ListSubscriptionServiceGroups' => 
    array (
      'summary' => '故障协同组列表。',
      'path' => '/problem/serviceGroup/list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceIds' => 
              array (
                'title' => '服务列表',
                'description' => '服务列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '服务id',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '12313',
                ),
                'required' => false,
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => '89f51d2e-5527-4f6c-a6c6-4411b5496e9f',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '89f51d2e-5527-4f6c-a6c6-4411b5496e9f',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'serviceId' => 
                    array (
                      'title' => '主键',
                      'description' => '主键',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '123113',
                    ),
                    'serviceName' => 
                    array (
                      'title' => '服务组名称',
                      'description' => '服务组名称',
                      'type' => 'string',
                      'example' => '服务A',
                    ),
                    'serviceGroupDescription' => 
                    array (
                      'title' => '服务组描述',
                      'description' => '服务组描述',
                      'type' => 'string',
                      'example' => '服务描述',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ServiceGroupNotExisted',
            'errorMessage' => 'The service group does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"89f51d2e-5527-4f6c-a6c6-4411b5496e9f\\",\\n  \\"data\\": [\\n    {\\n      \\"serviceId\\": 123113,\\n      \\"serviceName\\": \\"服务A\\",\\n      \\"serviceGroupDescription\\": \\"服务描述\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListSubscriptionServiceGroupsResponse>\\n    <requestId>89f51d2e-5527-4f6c-a6c6-4411b5496e9f</requestId>\\n    <data>\\n        <serviceId>123113</serviceId>\\n        <serviceName>服务A</serviceName>\\n        <serviceGroupDescription>服务描述</serviceGroupDescription>\\n    </data>\\n</ListSubscriptionServiceGroupsResponse>","errorExample":""}]',
      'title' => '故障协同组列表',
    ),
    'UpdateProblemImprovement' => 
    array (
      'summary' => '更新故障复盘改进详情。',
      'path' => '/problem/improvement/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'problemId' => 
              array (
                'title' => '故障ID',
                'description' => '故障ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '12312',
              ),
              'problemReason' => 
              array (
                'title' => '故障原因',
                'description' => '故障原因',
                'type' => 'string',
                'required' => false,
                'example' => '故障原因A',
              ),
              'recentActivity' => 
              array (
                'title' => '最近活动 码表:PROBLEM_RECENT_ACTIVITY',
                'description' => '最近活动码表：PROBLEM_RECENT_ACTIVITY',
                'type' => 'string',
                'required' => false,
                'example' => '2',
              ),
              'injectionMode' => 
              array (
                'title' => '注入方式 码表:PROBLEM_INJECTION_MODE',
                'description' => '注入方式码表：PROBLEM_INJECTION_MODE',
                'type' => 'string',
                'required' => false,
                'example' => '1',
              ),
              'recoveryMode' => 
              array (
                'title' => '恢复方式  码表:PROBLEM_RECOVERY_MODE',
                'description' => '恢复方式码表：PROBLEM_RECOVERY_MODE',
                'type' => 'string',
                'required' => false,
                'example' => '2',
              ),
              'discoverSource' => 
              array (
                'title' => '发现来源 码表:PROBLEM_DISCOVER_SOURCE',
                'description' => '发现来源码表：PROBLEM_DISCOVER_SOURCE',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'userReport' => 
              array (
                'title' => '用户上报 码表:PROBLEM_USER_REPORT',
                'description' => '用户上报码表：PROBLEM_USER_REPORT',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '10',
              ),
              'monitorSourceName' => 
              array (
                'title' => '监控源',
                'description' => '监控源',
                'type' => 'string',
                'required' => false,
                'example' => 'Zabbix',
              ),
              'relationChanges' => 
              array (
                'title' => '关联变更',
                'description' => '关联变更',
                'type' => 'string',
                'required' => false,
                'example' => '关联变更',
              ),
              'dutyUserId' => 
              array (
                'title' => '故障责任人id',
                'description' => '故障责任人id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1231',
              ),
              'replayDutyUserId' => 
              array (
                'title' => '复盘负责人id',
                'description' => '复盘负责人id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1213',
              ),
              'dutyDepartmentName' => 
              array (
                'title' => '故障责任部门',
                'description' => '部门名称',
                'type' => 'string',
                'required' => false,
                'example' => '服务组A',
              ),
              'dutyDepartmentId' => 
              array (
                'title' => '故障责任部门ID',
                'description' => '部门Id（服务组Id）',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123123',
              ),
              'remark' => 
              array (
                'title' => '备注',
                'description' => '备注',
                'type' => 'string',
                'required' => false,
                'example' => '备注',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3813',
              ),
              'customProblemReason' => 
              array (
                'title' => '自定义故障原因',
                'type' => 'string',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '4361a0e1-6747-4834-96ce-0c4840fd3812',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProblemNotExisted',
            'errorMessage' => 'The problem does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"4361a0e1-6747-4834-96ce-0c4840fd3812\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateProblemImprovementResponse>\\n    <requestId>4361a0e1-6747-4834-96ce-0c4840fd3812</requestId>\\n</UpdateProblemImprovementResponse>","errorExample":""}]',
      'title' => '更新故障复盘改进详情',
    ),
    'ListDictionaries' => 
    array (
      'summary' => '枚举字典接口。',
      'path' => '/dict/list',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'description' => '幂等id',
                'type' => 'string',
                'required' => false,
                'example' => '601FA6A2-AC5C-4B59-BE11-378F887A6A11',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'additionalProperties' => 
                array (
                  'type' => 'array',
                  'items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'code' => 
                      array (
                        'type' => 'string',
                        'example' => 'SMS',
                        'description' => '码值',
                      ),
                      'description' => 
                      array (
                        'type' => 'string',
                        'description' => '注释',
                        'example' => '短信',
                      ),
                    ),
                    'description' => 'object',
                  ),
                  'description' => 'array',
                ),
              ),
              'requestId' => 
              array (
                'description' => 'id of the request
',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"data\\": {\\n    \\"key\\": [\\n      {\\n        \\"code\\": \\"SMS\\",\\n        \\"description\\": \\"短信\\"\\n      }\\n    ]\\n  },\\n  \\"requestId\\": \\"10REQUES-AC5C-4B59-BE11-378F117A6A88\\"\\n}","errorExample":""},{"type":"xml","example":"<ListDictionariesResponse>\\n    <data>\\n        <incidentLevel>\\n            <code>P1</code>\\n            <desc>P1</desc>\\n        </incidentLevel>\\n        <incidentLevel>\\n            <code>P2</code>\\n            <desc>P2</desc>\\n        </incidentLevel>\\n        <incidentLevel>\\n            <code>P3</code>\\n            <desc>P3</desc>\\n        </incidentLevel>\\n        <incidentLevel>\\n            <code>P4</code>\\n            <desc>P4</desc>\\n        </incidentLevel>\\n        <incidentEffection>\\n            <code>LOW</code>\\n            <desc>低</desc>\\n        </incidentEffection>\\n        <incidentEffection>\\n            <code>HIGH</code>\\n            <desc>高</desc>\\n        </incidentEffection>\\n        <channel>\\n            <code>SMS</code>\\n            <desc>短信</desc>\\n        </channel>\\n        <channel>\\n            <code>EMAIL</code>\\n            <desc>邮件</desc>\\n        </channel>\\n        <channel>\\n            <code>PHONE</code>\\n            <desc>电话</desc>\\n        </channel>\\n        <channel>\\n            <code>WEIXIN_GROUP</code>\\n            <desc>企微群</desc>\\n        </channel>\\n        <channel>\\n            <code>DING_GROUP</code>\\n            <desc>钉钉群</desc>\\n        </channel>\\n        <operation>\\n            <code>CONTAIN</code>\\n            <desc>包含</desc>\\n        </operation>\\n        <operation>\\n            <code>NOT_CONTAIN</code>\\n            <desc>不包含</desc>\\n        </operation>\\n        <operation>\\n            <code>EQUALS</code>\\n            <desc>等于</desc>\\n        </operation>\\n        <operation>\\n            <code>NOT_EQUALS</code>\\n            <desc>不等于</desc>\\n        </operation>\\n        <problemNotifyType>\\n            <code>PROBLEM_NOTIFY</code>\\n            <desc>故障通告</desc>\\n        </problemNotifyType>\\n        <problemNotifyType>\\n            <code>PROBLEM_UPDATE</code>\\n            <desc>故障更新</desc>\\n        </problemNotifyType>\\n        <problemNotifyType>\\n            <code>PROBLEM_UPGRADE</code>\\n            <desc>故障升级</desc>\\n        </problemNotifyType>\\n        <problemNotifyType>\\n            <code>PROBLEM_DEGRADE</code>\\n            <desc>故障降级</desc>\\n        </problemNotifyType>\\n        <problemNotifyType>\\n            <code>PROBLEM_RECOVER</code>\\n            <desc>故障恢复</desc>\\n        </problemNotifyType>\\n        <problemNotifyType>\\n            <code>PROBLEM_REISSUE</code>\\n            <desc>故障补发</desc>\\n        </problemNotifyType>\\n        <problemNotifyType>\\n            <code>PROBLEM_CANCEL</code>\\n            <desc>故障取消</desc>\\n        </problemNotifyType>\\n        <UserQueryFields>\\n            <code>USERNAME</code>\\n            <desc>人员姓名</desc>\\n        </UserQueryFields>\\n        <UserQueryFields>\\n            <code>PHONE</code>\\n            <desc>人员手机号</desc>\\n        </UserQueryFields>\\n        <UserQueryFields>\\n            <code>RAM_ID</code>\\n            <desc>RAM账号ID</desc>\\n        </UserQueryFields>\\n        <incidentStatus>\\n            <code>ASSIGNED</code>\\n            <desc>已分派</desc>\\n        </incidentStatus>\\n        <incidentStatus>\\n            <code>RESPONDED</code>\\n            <desc>已响应</desc>\\n        </incidentStatus>\\n        <incidentStatus>\\n            <code>FINISHED</code>\\n            <desc>已完结</desc>\\n        </incidentStatus>\\n    </data>\\n</ListDictionariesResponse>","errorExample":""}]',
      'title' => '枚举字典接口',
    ),
    'ListSourceEvents' => 
    array (
      'summary' => '查询原始告警列表。',
      'path' => '/events/listOriginalEvent',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'instanceId' => 
              array (
                'title' => '报警或者事件ID',
                'description' => '报警或者事件ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
              'instanceType' => 
              array (
                'title' => 'INCIDENT 事件、ALERT 报警、PROBLEM 故障',
                'description' => 'INCIDENT 事件、ALERT 报警、PROBLEM 故障',
                'type' => 'string',
                'required' => true,
                'example' => 'INCIDENT',
              ),
              'startRowKey' => 
              array (
                'title' => 'startRowKey 用来查询下一页的数据',
                'description' => '起始key',
                'type' => 'string',
                'required' => false,
                'example' => '9223370410626682599-1344383-78954515-1-0a6e01a1701447fd9ef18b079edd2c6d',
              ),
              'stopRowKey' => 
              array (
                'title' => 'stopRowKey 用来查询上一页的数据',
                'description' => '终止key',
                'type' => 'string',
                'required' => false,
                'example' => '9223370410626682599-1344383-78954515-1-0a6e01a1701447fd9ef18b079edd2c6d',
              ),
              'pageSize' => 
              array (
                'title' => '页大小',
                'description' => '页大小',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '20',
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'pageNumber' => 
              array (
                'title' => '当前页',
                'description' => '当前页',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'startTime' => 
              array (
                'title' => '开始时间',
                'description' => '2020-09-10 13:00:00',
                'type' => 'string',
                'required' => false,
                'example' => '开始时间',
              ),
              'endTime' => 
              array (
                'title' => '结束时间',
                'description' => '2020-09-18 13:00:00',
                'type' => 'string',
                'required' => false,
                'example' => '结束时间',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
              'totalCount' => 
              array (
                'title' => '总条数',
                'description' => '总条数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
              'pageNumber' => 
              array (
                'title' => '当前页',
                'description' => '当前页',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '页大小',
                'description' => '页大小',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
              'data' => 
              array (
                'description' => '当前页',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'routeRuleId' => 
                    array (
                      'title' => '规则ID',
                      'description' => '规则ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'instanceType' => 
                    array (
                      'title' => 'INCIDENT 事件、ALERT 报警、PROBLEM 故障',
                      'description' => 'INCIDENT 事件、ALERT 报警、PROBLEM 故障',
                      'type' => 'string',
                      'example' => 'INCIDENT',
                    ),
                    'instanceId' => 
                    array (
                      'title' => '关联对象ID',
                      'description' => '关联对象ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'monitorSourceId' => 
                    array (
                      'title' => '监控告警源ID',
                      'description' => '监控告警源ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'monitorSourceName' => 
                    array (
                      'title' => '监控告警源名称',
                      'description' => '监控告警源名称',
                      'type' => 'string',
                      'example' => 'zabbix',
                    ),
                    'eventTime' => 
                    array (
                      'title' => '告警上报时间',
                      'description' => '告警上报时间',
                      'type' => 'string',
                      'example' => '2020-09-08 15:53:34',
                    ),
                    'tenantRamId' => 
                    array (
                      'title' => '租户ID',
                      'description' => '租户ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'eventJson' => 
                    array (
                      'title' => '告警内容json',
                      'description' => '告警内容json',
                      'type' => 'string',
                      'example' => '""',
                    ),
                  ),
                ),
              ),
              'lastRowKey' => 
              array (
                'title' => 'lastRowKey',
                'description' => 'lastRowKey',
                'type' => 'string',
                'example' => '9223370412331485036-1344383-9967-1-8d729a1b176f493ca3be643b391d5ced',
              ),
              'firstRowKey' => 
              array (
                'title' => 'firstRowKey',
                'description' => 'firstRowKey',
                'type' => 'string',
                'example' => '9223370412331485032-1344383-9967-1-08be8b08ef30441390072f3bfba71c94',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"C4BE3837-1A13-413B-A225-2C88188E8A43\\",\\n  \\"totalCount\\": 100,\\n  \\"pageNumber\\": 1,\\n  \\"pageSize\\": 20,\\n  \\"data\\": [\\n    {\\n      \\"routeRuleId\\": 1,\\n      \\"instanceType\\": \\"INCIDENT\\",\\n      \\"instanceId\\": 1,\\n      \\"monitorSourceId\\": 1,\\n      \\"monitorSourceName\\": \\"zabbix\\",\\n      \\"eventTime\\": \\"2020-09-08 15:53:34\\",\\n      \\"tenantRamId\\": 1,\\n      \\"eventJson\\": \\"\\\\\\"\\\\\\"\\"\\n    }\\n  ],\\n  \\"lastRowKey\\": \\"9223370412331485036-1344383-9967-1-8d729a1b176f493ca3be643b391d5ced\\",\\n  \\"firstRowKey\\": \\"9223370412331485032-1344383-9967-1-08be8b08ef30441390072f3bfba71c94\\"\\n}","errorExample":""},{"type":"xml","example":"<ListSourceEventsResponse>\\n    <requestId>C4BE3837-1A13-413B-A225-2C88188E8A43</requestId>\\n    <totalCount>100</totalCount>\\n    <pageNumber>1</pageNumber>\\n    <pageSize>20</pageSize>\\n    <data>\\n        <routeRuleId>1</routeRuleId>\\n        <instanceType>INCIDENT</instanceType>\\n        <instanceId>1</instanceId>\\n        <monitorSourceId>1</monitorSourceId>\\n        <monitorSourceName>zabbix</monitorSourceName>\\n        <eventTime>2020-09-08 15:53:34</eventTime>\\n        <tenantRamId>1</tenantRamId>\\n        <eventJson>\\"\\"</eventJson>\\n    </data>\\n    <lastRowKey>9223370412331485036-1344383-9967-1-8d729a1b176f493ca3be643b391d5ced</lastRowKey>\\n    <firstRowKey>9223370412331485032-1344383-9967-1-08be8b08ef30441390072f3bfba71c94</firstRowKey>\\n</ListSourceEventsResponse>","errorExample":""}]',
      'title' => '查询原始告警列表',
    ),
    'ListUserSerivceGroups' => 
    array (
      'summary' => '用户预览	。',
      'path' => '/user/preview/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'userId' => 
              array (
                'title' => '用户ID',
                'description' => '用户ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '123',
              ),
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => 'clientToken',
                'type' => 'string',
                'required' => false,
                'example' => '2b63cdef-7ac3-4892-a76d-0f3389ef729f',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '2b63cdef-7ac3-4892-a76d-0f3389ef7291',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'ramId' => 
                  array (
                    'title' => 'RAM子账号ID',
                    'description' => 'RAM子账号ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '321',
                  ),
                  'userId' => 
                  array (
                    'title' => '用户ID',
                    'description' => '用户ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '321',
                  ),
                  'username' => 
                  array (
                    'title' => '用户昵称',
                    'description' => '用户昵称',
                    'type' => 'string',
                    'example' => '小明',
                  ),
                  'phone' => 
                  array (
                    'title' => '手机号',
                    'description' => '手机号',
                    'type' => 'string',
                    'example' => '1390000****',
                  ),
                  'email' => 
                  array (
                    'title' => '邮箱',
                    'description' => '邮箱',
                    'type' => 'string',
                    'example' => '12121****@163.com',
                  ),
                  'serviceGroups' => 
                  array (
                    'title' => '人员所属服务组',
                    'description' => '人员所属服务组',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '服务组',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'serviceGroupId' => 
                        array (
                          'title' => '服务组id',
                          'description' => '服务组id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123',
                        ),
                        'serviceGroupName' => 
                        array (
                          'title' => '服务组名称',
                          'description' => '服务组名称',
                          'type' => 'string',
                          'example' => '服务组A',
                        ),
                        'serviceGroupDescription' => 
                        array (
                          'title' => '服务组描述',
                          'description' => '服务组描述',
                          'type' => 'string',
                          'example' => '描述',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserTypeNotExisted',
            'errorMessage' => 'The user type does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"2b63cdef-7ac3-4892-a76d-0f3389ef7291\\",\\n  \\"data\\": {\\n    \\"ramId\\": 321,\\n    \\"userId\\": 321,\\n    \\"username\\": \\"小明\\",\\n    \\"phone\\": \\"1390000****\\",\\n    \\"email\\": \\"12121****@163.com\\",\\n    \\"serviceGroups\\": [\\n      {\\n        \\"serviceGroupId\\": 123,\\n        \\"serviceGroupName\\": \\"服务组A\\",\\n        \\"serviceGroupDescription\\": \\"描述\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListUserSerivceGroupsResponse>\\n    <requestId>2b63cdef-7ac3-4892-a76d-0f3389ef7291</requestId>\\n    <data>\\n        <ramId>321</ramId>\\n        <userId>321</userId>\\n        <username>小明</username>\\n        <phone>1390000****</phone>\\n        <email>12121****@163.com</email>\\n        <serviceGroups>\\n            <serviceGroupId>123</serviceGroupId>\\n            <serviceGroupName>服务组A</serviceGroupName>\\n            <serviceGroupDescription>描述</serviceGroupDescription>\\n        </serviceGroups>\\n    </data>\\n</ListUserSerivceGroupsResponse>","errorExample":""}]',
      'title' => '用户预览',
    ),
    'CreateIncidentSubtotal' => 
    array (
      'summary' => '事件新增小计。',
      'path' => '/incident/save/subtotal',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'incidentId' => 
              array (
                'title' => '事件id',
                'description' => '事件Id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '12312',
              ),
              'description' => 
              array (
                'title' => '描述',
                'description' => '描述',
                'type' => 'string',
                'required' => false,
                'example' => '描述',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验Id',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'subtotalId' => 
                  array (
                    'title' => '小计Id',
                    'description' => '小计Id',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '123',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentStatusInvalid',
            'errorMessage' => 'The incident status is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IncidentUpdateInvalid',
            'errorMessage' => 'The incident update is invalid.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncidentNotExtisted',
            'errorMessage' => 'The incident does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\",\\n  \\"data\\": {\\n    \\"subtotalId\\": 123\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateIncidentSubtotalResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n    <data>\\n        <subtotalId>12312</subtotalId>\\n    </data>\\n</CreateIncidentSubtotalResponse>","errorExample":""}]',
      'title' => '事件新增小计',
    ),
    'ListConfigs' => 
    array (
      'summary' => '获取全部动态码表配置项。',
      'path' => '/config/all',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-CDE61E59A2E9',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'additionalProperties' => 
                array (
                  'type' => 'array',
                  'items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'configDescription' => 
                      array (
                        'title' => '配置描述',
                        'type' => 'string',
                        'description' => '配置类型',
                        'example' => '产品设计',
                      ),
                      'configCode' => 
                      array (
                        'title' => '配置code',
                        'type' => 'string',
                        'example' => 'PROBLEM_REASON_DISASTER',
                        'description' => '配置code',
                      ),
                      'parentCode' => 
                      array (
                        'title' => '配置父code',
                        'type' => 'string',
                        'description' => '父配置Code',
                        'example' => 'PROBLEM_REASON',
                      ),
                      'configKey' => 
                      array (
                        'title' => 'key (用于前后端值传递)',
                        'type' => 'string',
                        'example' => '2',
                        'description' => '配置key项',
                      ),
                      'configValue' => 
                      array (
                        'title' => 'value (用于前端展示)',
                        'type' => 'string',
                        'example' => '产品设计',
                        'description' => '配置key对应的value值',
                      ),
                      'requirement' => 
                      array (
                        'title' => '是否必选',
                        'type' => 'boolean',
                        'description' => '是否必选',
                        'example' => 'true',
                      ),
                    ),
                    'description' => 'object',
                  ),
                  'description' => 'array',
                ),
              ),
              'requestId' => 
              array (
                'title' => 'requestId',
                'description' => 'requestId',
                'type' => 'string',
                'example' => 'uuid',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"data\\": {\\n    \\"key\\": [\\n      {\\n        \\"configDescription\\": \\"产品设计\\",\\n        \\"configCode\\": \\"PROBLEM_REASON_DISASTER\\",\\n        \\"parentCode\\": \\"PROBLEM_REASON\\",\\n        \\"configKey\\": \\"2\\",\\n        \\"configValue\\": \\"产品设计\\",\\n        \\"requirement\\": true\\n      }\\n    ]\\n  },\\n  \\"requestId\\": \\"uuid\\"\\n}","errorExample":""},{"type":"xml","example":"<ListConfigsResponse>\\n    <data>\\n        <PROBLEM_INJECTION_MODE>\\n            <code>PROBLEM_INJECTION_CODE_RELEASE</code>\\n            <parentCode>PROBLEM_INJECTION_MODE</parentCode>\\n            <name>代码发布</name>\\n            <require>0</require>\\n            <id>29</id>\\n            <value>代码发布</value>\\n            <key>1</key>\\n        </PROBLEM_INJECTION_MODE>\\n    </data>\\n</ListConfigsResponse>","errorExample":""}]',
      'title' => '码表配置',
    ),
    'GetEvent' => 
    array (
      'summary' => '查询最近一次告警	。',
      'path' => '/events/getLastTimeEvent',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'monitorSourceId' => 
              array (
                'title' => '监控源ID不能为空',
                'description' => '监控源ID不能为空',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'XXXXXXXXXXXX',
              ),
              'data' => 
              array (
                'title' => '告警',
                'description' => '返回结果',
                'type' => 'object',
                'properties' => 
                array (
                  'monitorSourceId' => 
                  array (
                    'title' => '告警源ID',
                    'description' => '告警源ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'monitorSourceName' => 
                  array (
                    'title' => '告警源名称',
                    'description' => '告警源名称',
                    'type' => 'string',
                    'example' => 'zabbix',
                  ),
                  'eventTime' => 
                  array (
                    'title' => '告警上报时间',
                    'description' => '告警上报时间',
                    'type' => 'string',
                    'example' => '2002-09-08 15:30:35',
                  ),
                  'eventJson' => 
                  array (
                    'title' => '告警内容',
                    'description' => '告警内容',
                    'type' => 'string',
                    'example' => '“”',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"XXXXXXXXXXXX\\",\\n  \\"data\\": {\\n    \\"monitorSourceId\\": 1,\\n    \\"monitorSourceName\\": \\"zabbix\\",\\n    \\"eventTime\\": \\"2002-09-08 15:30:35\\",\\n    \\"eventJson\\": \\"“”\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetEventResponse>\\n    <requestId>XXXXXXXXXXXX</requestId>\\n    <data>\\n        <monitorSourceId>1</monitorSourceId>\\n        <monitorSourceName>zabbix</monitorSourceName>\\n        <eventTime>2002-09-08 15:30:35</eventTime>\\n        <eventJson>“”</eventJson>\\n    </data>\\n</GetEventResponse>","errorExample":""}]',
      'title' => '查询最近一次告警',
    ),
    'UpdateUserGuideStatus' => 
    array (
      'summary' => '更新用户引导状态。',
      'path' => '/user/update/guide/status',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => '幂等校验',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'guideAction' => 
              array (
                'title' => 'INCIDENT_GUIDE	事件线 INCIDENT_GUIDE配置人员 USER_GUIDE 服务组 SERVICE_GROUP_GUIDE 服务 SERVICE_GUIDE 集成配置 MONITOR_GUIDE 流转规则 ROUTE_RULE_GUIDE 通知订阅 NOTICE_GUIDE',
                'description' => 'INCIDENT_GUIDE	事件线 INCIDENT_GUIDE配置人员 USER_GUIDE 服务组 SERVICE_GROUP_GUIDE 服务 SERVICE_GUIDE 集成配置 MONITOR_GUIDE 流转规则 ROUTE_RULE_GUIDE 通知订阅 NOTICE_GUIDE',
                'type' => 'string',
                'required' => false,
                'example' => 'SERVICE_GROUP_GUIDE',
              ),
            ),
            'required' => false,
            'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateUserGuideStatusResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n</UpdateUserGuideStatusResponse>","errorExample":""}]',
      'title' => '更新用户引导状态',
    ),
    'ListEscalationPlanServices' => 
    array (
      'summary' => '升级计划范围对象（服务）已选择的列表。',
      'path' => '/escalationPlan/services',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => 'clientToken',
                'description' => 'clientToken',
                'type' => 'string',
                'required' => false,
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'scope' => 
                    array (
                      'title' => '范围类型',
                      'description' => '范围类型',
                      'type' => 'string',
                      'example' => 'SERVICE',
                    ),
                    'scopeObjectId' => 
                    array (
                      'title' => '范围对象id',
                      'description' => '范围对象id',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '23',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST\\",\\n  \\"data\\": [\\n    {\\n      \\"scope\\": \\"SERVICE\\",\\n      \\"scopeObjectId\\": 23\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListEscalationPlanServicesResponse>\\n    <requestId>A5A1FEAE-9C47-011C-9C73-A376BC2REQUEST</requestId>\\n    <data>\\n        <scope>SERVICE</scope>\\n        <scopeObjectId>23</scopeObjectId>\\n    </data>\\n</ListEscalationPlanServicesResponse>","errorExample":""}]',
      'title' => '升级计划范围对象已选择的列表',
    ),
    'CheckWebhook' => 
    array (
      'summary' => '校验webhook地址有效性。',
      'path' => '/services/check/webhook',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => '幂等校验token',
                'description' => '幂等校验token',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'webhook' => 
              array (
                'title' => 'webook地址',
                'description' => 'webook地址',
                'type' => 'string',
                'required' => false,
                'example' => 'https://oapi.dingtalk.com/robot/send?access_token=XXX',
              ),
              'webhookType' => 
              array (
                'title' => 'webhook地址类型 企业微信WEIXIN_GROUP 钉钉群 DING_GROUP 飞书 FEISHU_GROUP',
                'description' => 'webhook地址类型：
- 企业微信WEIXIN_GROUP
- 钉钉群DING_GROUP
- 飞书FEISHU_GROUP',
                'type' => 'string',
                'required' => false,
                'example' => 'DING_GROUP',
              ),
            ),
            'required' => false,
            'example' => 'body',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'WebhookVerificationError',
            'errorMessage' => 'A webhook verification error occurred.',
          ),
          1 => 
          array (
            'errorCode' => 'WebhookAddressFormatError',
            'errorMessage' => 'The webhook address format is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'WebhookAccessRestricts',
            'errorMessage' => 'Traffic is restricted for webhook access.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\"\\n}","errorExample":""},{"type":"xml","example":"<CheckWebhookResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n</CheckWebhookResponse>","errorExample":""}]',
      'title' => '校验webhook',
    ),
    'GetUserGuideStatus' => 
    array (
      'summary' => '获取用户引导状态。',
      'path' => '/user/guide/status',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => '幂等校验',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'data' => 
              array (
                'title' => 'map',
                'description' => 'map',
                'type' => 'object',
                'example' => '{   "data": {     "monitorGuide": false,     "userRamId": 1344371,     "serviceGuide": false,     "noticeGuide": false,     "userGuide": true,     "serviceGroupGuide": false,     "routeRuleGuide": false,     "incidentGuide": true   }',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\",\\n  \\"data\\": {\\n    \\"test\\": \\"test\\",\\n    \\"test2\\": 1\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetUserGuideStatusResponse>\\n    <data>\\n        <monitorGuide>false</monitorGuide>\\n        <userRamId>1344371</userRamId>\\n        <serviceGuide>false</serviceGuide>\\n        <noticeGuide>false</noticeGuide>\\n        <userGuide>true</userGuide>\\n        <serviceGroupGuide>false</serviceGroupGuide>\\n        <routeRuleGuide>false</routeRuleGuide>\\n        <incidentGuide>true</incidentGuide>\\n    </data>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n</GetUserGuideStatusResponse>","errorExample":""}]',
      'title' => '获取用户引导状态',
    ),
    'GetResourceStatistics' => 
    array (
      'summary' => '获取资源统计。',
      'path' => '/config/resource/count',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'body',
            'description' => 'body',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => '幂等校验',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
            ),
            'required' => false,
            'example' => 'body',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'incidentCount' => 
                  array (
                    'title' => '事件总数',
                    'description' => '事件总数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1331',
                  ),
                  'alertCount' => 
                  array (
                    'title' => '报警总数',
                    'description' => '报警总数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '123',
                  ),
                  'problemCount' => 
                  array (
                    'title' => '故障总数',
                    'description' => '故障总数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '221',
                  ),
                  'integrationCount' => 
                  array (
                    'title' => '集成总数',
                    'description' => '集成总数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2211',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\",\\n  \\"data\\": {\\n    \\"incidentCount\\": 1331,\\n    \\"alertCount\\": 123,\\n    \\"problemCount\\": 221,\\n    \\"integrationCount\\": 2211\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetResourceStatisticsResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n    <data>\\n        <incidentCount>1331</incidentCount>\\n        <alertCount>123</alertCount>\\n        <problemCount>221</problemCount>\\n        <integrationCount>2211</integrationCount>\\n    </data>\\n</GetResourceStatisticsResponse>","errorExample":""}]',
      'title' => '获取资源统计',
    ),
    'ListIncidentDetailEscalationPlans' => 
    array (
      'summary' => '事件关联的升级计划列表。',
      'path' => '/incident/detail/escalation',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'incidentId' => 
              array (
                'title' => '事件ID',
                'description' => '事件ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '2311',
              ),
              'clientToken' => 
              array (
                'title' => '幂等校验',
                'description' => '幂等校验',
                'type' => 'string',
                'required' => false,
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'FD200FAE-E98F-496E-BFE6-4CE61E59A2E9',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'escalationPlanId' => 
                  array (
                    'title' => '升级策略ID',
                    'description' => '升级策略ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '312123',
                  ),
                  'escalationPlanName' => 
                  array (
                    'title' => '升级策略名称',
                    'description' => '升级策略名称',
                    'type' => 'string',
                    'example' => '升级策略A',
                  ),
                  'unFinishEscalationPlan' => 
                  array (
                    'title' => '未完结升级策略规则列表',
                    'description' => '未完结升级策略规则列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'escalationPlanType' => 
                        array (
                          'title' => '升级策略类型 UN_ACKNOWLEDGE',
                          'description' => '升级策略类型 UN_ACKNOWLEDGE',
                          'type' => 'string',
                          'example' => 'UN_FINISH',
                        ),
                        'noticeTime' => 
                        array (
                          'title' => '延迟时间',
                          'description' => '延迟时间',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'status' => 
                        array (
                          'title' => '规则触发状态',
                          'description' => '规则触发状态',
                          'type' => 'string',
                          'example' => 'UPGRADE',
                        ),
                        'startTime' => 
                        array (
                          'title' => '开始时间',
                          'description' => '开始时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1629872386027',
                        ),
                        'noticeChannels' => 
                        array (
                          'title' => '分配渠道',
                          'description' => '分配渠道',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '渠道字符串',
                            'type' => 'string',
                            'example' => '渠道字符串 SMS',
                          ),
                        ),
                        'noticeObjectList' => 
                        array (
                          'title' => '用户信息',
                          'description' => '用户信息',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'noticeObjectId' => 
                              array (
                                'title' => '分配对象id',
                                'description' => '分配对象id',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '2311',
                              ),
                              'noticeObjectName' => 
                              array (
                                'title' => '分配对象名称',
                                'description' => '分配对象名称',
                                'type' => 'string',
                                'example' => '小明',
                              ),
                              'noticeObjectPhone' => 
                              array (
                                'title' => '手机号',
                                'description' => '手机号',
                                'type' => 'string',
                                'example' => '130xxxxxxxx',
                              ),
                              'roleNameList' => 
                              array (
                                'title' => '角色列表',
                                'description' => '角色列表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'string',
                                ),
                              ),
                            ),
                          ),
                        ),
                        'serviceGroupList' => 
                        array (
                          'title' => '消息群',
                          'description' => '消息群',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'id' => 
                              array (
                                'title' => '服务组id',
                                'description' => '服务组id',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '123132',
                              ),
                              'name' => 
                              array (
                                'title' => '服务组名称',
                                'description' => '服务组名称',
                                'type' => 'string',
                                'example' => '服务组A',
                              ),
                            ),
                          ),
                        ),
                        'noticeRoleList' => 
                        array (
                          'title' => '角色ID列表',
                          'description' => '角色ID列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int64',
                          ),
                        ),
                        'noticeRoleObjectList' => 
                        array (
                          'title' => '角色对象列表',
                          'description' => '角色对象列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'id' => 
                              array (
                                'type' => 'integer',
                                'format' => 'int64',
                              ),
                              'name' => 
                              array (
                                'type' => 'string',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'nuAcknowledgeEscalationPlan' => 
                  array (
                    'title' => '未响应升级策略',
                    'description' => '未响应升级策略',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'escalationPlanType' => 
                        array (
                          'title' => '升级策略类型 UN_ACKNOWLEDGE',
                          'description' => '升级策略类型 UN_ACKNOWLEDGE',
                          'type' => 'string',
                          'example' => 'UN_ACKNOWLEDGE',
                        ),
                        'noticeTime' => 
                        array (
                          'title' => '延迟时间',
                          'description' => '延迟时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '10',
                        ),
                        'status' => 
                        array (
                          'title' => '规则触发状态',
                          'description' => '规则触发状态',
                          'type' => 'string',
                          'example' => 'UPGRADE',
                        ),
                        'startTime' => 
                        array (
                          'title' => '开始时间',
                          'description' => '开始时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1629872386027',
                        ),
                        'noticeChannels' => 
                        array (
                          'title' => '分配渠道',
                          'description' => '分配渠道',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '分配渠道',
                            'type' => 'string',
                            'example' => '渠道字符串 SMS',
                          ),
                        ),
                        'noticeObjectList' => 
                        array (
                          'title' => '用户信息',
                          'description' => '用户信息',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'noticeObjectId' => 
                              array (
                                'title' => '分配对象id',
                                'description' => '分配对象id',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '31231',
                              ),
                              'noticeObjectName' => 
                              array (
                                'title' => '分配对象名称',
                                'description' => '分配对象名称',
                                'type' => 'string',
                                'example' => '小华',
                              ),
                              'noticeObjectPhone' => 
                              array (
                                'title' => '分配对象手机号',
                                'description' => '分配对象手机号',
                                'type' => 'string',
                                'example' => '130xxxxxxxxx',
                              ),
                              'roleNameList' => 
                              array (
                                'title' => '角色列表',
                                'description' => '角色列表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'string',
                                ),
                              ),
                            ),
                          ),
                        ),
                        'serviceGroupList' => 
                        array (
                          'title' => '通知群',
                          'description' => '通知群',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'id' => 
                              array (
                                'title' => '服务组id',
                                'description' => '服务组id',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1231',
                              ),
                              'name' => 
                              array (
                                'title' => '服务组名称',
                                'description' => '服务组名称',
                                'type' => 'string',
                                'example' => '服务组A',
                              ),
                            ),
                          ),
                        ),
                        'noticeRoleList' => 
                        array (
                          'title' => '角色ID列表',
                          'description' => '角色ID列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int64',
                          ),
                        ),
                        'noticeRoleObjectList' => 
                        array (
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'id' => 
                              array (
                                'type' => 'integer',
                                'format' => 'int64',
                              ),
                              'name' => 
                              array (
                                'type' => 'string',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'convergenceEscalationPlan' => 
                  array (
                    'title' => '未响应升级策略',
                    'description' => '未响应升级策略',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'escalationPlanType' => 
                        array (
                          'title' => '升级策略类型 UN_ACKNOWLEDGE',
                          'description' => '升级策略类型 UN_ACKNOWLEDGE',
                          'type' => 'string',
                          'example' => 'UN_ACKNOWLEDGE',
                        ),
                        'noticeTime' => 
                        array (
                          'title' => '收敛目标值',
                          'description' => '收敛目标值',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '10',
                        ),
                        'status' => 
                        array (
                          'title' => '规则触发状态',
                          'description' => '规则触发状态',
                          'type' => 'string',
                          'example' => 'UPGRADE',
                        ),
                        'startTime' => 
                        array (
                          'title' => '已收敛次数',
                          'description' => '已收敛次数',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1629872386027',
                        ),
                        'noticeChannels' => 
                        array (
                          'title' => '分配渠道',
                          'description' => '分配渠道',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'string',
                            'example' => '渠道字符串 SMS',
                          ),
                        ),
                        'noticeObjectList' => 
                        array (
                          'title' => '用户信息',
                          'description' => '用户信息',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'noticeObjectId' => 
                              array (
                                'title' => '分配对象id',
                                'description' => '分配对象id',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '31231',
                              ),
                              'noticeObjectName' => 
                              array (
                                'title' => '分配对象名称',
                                'description' => '分配对象名称',
                                'type' => 'string',
                                'example' => '小华',
                              ),
                              'noticeObjectPhone' => 
                              array (
                                'title' => '分配对象手机号',
                                'description' => '分配对象手机号',
                                'type' => 'string',
                                'example' => '130xxxxxxxxx',
                              ),
                              'roleNameList' => 
                              array (
                                'title' => '角色列表',
                                'description' => '角色列表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'type' => 'string',
                                ),
                              ),
                            ),
                          ),
                        ),
                        'serviceGroupList' => 
                        array (
                          'title' => '通知群',
                          'description' => '通知群',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'id' => 
                              array (
                                'title' => '服务组id',
                                'description' => '服务组id',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1231',
                              ),
                              'name' => 
                              array (
                                'title' => '服务组名称',
                                'description' => '服务组名称',
                                'type' => 'string',
                                'example' => '服务组A',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"FD200FAE-E98F-496E-BFE6-4CE61E59A2E9\\",\\n  \\"data\\": {\\n    \\"escalationPlanId\\": 312123,\\n    \\"escalationPlanName\\": \\"升级策略A\\",\\n    \\"unFinishEscalationPlan\\": [\\n      {\\n        \\"escalationPlanType\\": \\"UN_FINISH\\",\\n        \\"noticeTime\\": 10,\\n        \\"status\\": \\"UPGRADE\\",\\n        \\"startTime\\": 1629872386027,\\n        \\"noticeChannels\\": [\\n          \\"渠道字符串 SMS\\"\\n        ],\\n        \\"noticeObjectList\\": [\\n          {\\n            \\"noticeObjectId\\": 2311,\\n            \\"noticeObjectName\\": \\"小明\\",\\n            \\"noticeObjectPhone\\": \\"130xxxxxxxx\\",\\n            \\"roleNameList\\": [\\n              \\"\\"\\n            ]\\n          }\\n        ],\\n        \\"serviceGroupList\\": [\\n          {\\n            \\"id\\": 123132,\\n            \\"name\\": \\"服务组A\\"\\n          }\\n        ],\\n        \\"noticeRoleList\\": [\\n          0\\n        ],\\n        \\"noticeRoleObjectList\\": [\\n          {\\n            \\"id\\": 0,\\n            \\"name\\": \\"\\"\\n          }\\n        ]\\n      }\\n    ],\\n    \\"nuAcknowledgeEscalationPlan\\": [\\n      {\\n        \\"escalationPlanType\\": \\"UN_ACKNOWLEDGE\\",\\n        \\"noticeTime\\": 10,\\n        \\"status\\": \\"UPGRADE\\",\\n        \\"startTime\\": 1629872386027,\\n        \\"noticeChannels\\": [\\n          \\"渠道字符串 SMS\\"\\n        ],\\n        \\"noticeObjectList\\": [\\n          {\\n            \\"noticeObjectId\\": 31231,\\n            \\"noticeObjectName\\": \\"小华\\",\\n            \\"noticeObjectPhone\\": \\"130xxxxxxxxx\\",\\n            \\"roleNameList\\": [\\n              \\"\\"\\n            ]\\n          }\\n        ],\\n        \\"serviceGroupList\\": [\\n          {\\n            \\"id\\": 1231,\\n            \\"name\\": \\"服务组A\\"\\n          }\\n        ],\\n        \\"noticeRoleList\\": [\\n          0\\n        ],\\n        \\"noticeRoleObjectList\\": [\\n          {\\n            \\"id\\": 0,\\n            \\"name\\": \\"\\"\\n          }\\n        ]\\n      }\\n    ],\\n    \\"convergenceEscalationPlan\\": [\\n      {\\n        \\"escalationPlanType\\": \\"UN_ACKNOWLEDGE\\",\\n        \\"noticeTime\\": 10,\\n        \\"status\\": \\"UPGRADE\\",\\n        \\"startTime\\": 1629872386027,\\n        \\"noticeChannels\\": [\\n          \\"渠道字符串 SMS\\"\\n        ],\\n        \\"noticeObjectList\\": [\\n          {\\n            \\"noticeObjectId\\": 31231,\\n            \\"noticeObjectName\\": \\"小华\\",\\n            \\"noticeObjectPhone\\": \\"130xxxxxxxxx\\",\\n            \\"roleNameList\\": [\\n              \\"\\"\\n            ]\\n          }\\n        ],\\n        \\"serviceGroupList\\": [\\n          {\\n            \\"id\\": 1231,\\n            \\"name\\": \\"服务组A\\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListIncidentDetailEscalationPlansResponse>\\n    <requestId>FD200FAE-E98F-496E-BFE6-4CE61E59A2E9</requestId>\\n    <data>\\n        <escalationPlanId>312123</escalationPlanId>\\n        <escalationPlanName>升级策略A</escalationPlanName>\\n        <unFinishEscalationPlan>\\n            <escalationPlanType>UN_FINISH</escalationPlanType>\\n            <noticeTime>10</noticeTime>\\n            <status>UPGRADE</status>\\n            <startTime>1629872386027</startTime>\\n            <noticeChannels>渠道字符串 SMS</noticeChannels>\\n            <noticeObjectList>\\n                <noticeObjectId>2311</noticeObjectId>\\n                <noticeObjectName>小明</noticeObjectName>\\n                <noticeObjectPhone>130xxxxxxxx</noticeObjectPhone>\\n            </noticeObjectList>\\n            <serviceGroupList>\\n                <id>123132</id>\\n                <name>服务组A</name>\\n            </serviceGroupList>\\n        </unFinishEscalationPlan>\\n        <nuAcknowledgeEscalationPlan>\\n            <escalationPlanType>UN_ACKNOWLEDGE</escalationPlanType>\\n            <noticeTime>10</noticeTime>\\n            <status>UPGRADE</status>\\n            <startTime>1629872386027</startTime>\\n            <noticeChannels>渠道字符串 SMS</noticeChannels>\\n            <noticeObjectList>\\n                <noticeObjectId>31231</noticeObjectId>\\n                <noticeObjectName>小华</noticeObjectName>\\n                <noticeObjectPhone>130xxxxxxxxx</noticeObjectPhone>\\n            </noticeObjectList>\\n            <serviceGroupList>\\n                <id>1231</id>\\n                <name>服务组A</name>\\n            </serviceGroupList>\\n        </nuAcknowledgeEscalationPlan>\\n    </data>\\n</ListIncidentDetailEscalationPlansResponse>","errorExample":""}]',
      'title' => '事件关联的升级计划列表',
      'requestParamsDescription' => '{
  "incidentId" : 2311,
  "clientToken" : "FD200FAE-E98F-496E-BFE6-4CE61E59A2E9"
}',
      'responseParamsDescription' => '{
    "requestId": "FD200FAE-E98F-496E-BFE6-4CE61E59A2E9",
    "data": {
        "escalationPlanId": 312123,
        "escalationPlanName": "升级策略A",
        "unFinishEscalationPlan": [
            {
                "escalationPlanType": "UN_FINISH",
                "noticeTime": 10,
                "status": "UPGRADE",
                "startTime": 1629872386027,
                "noticeChannels": [
                    "渠道字符串 SMS"
                ],
                "noticeObjectList": [
                    {
                        "noticeObjectId": 2311,
                        "noticeObjectName": "小明",
                        "noticeObjectPhone": "130xxxxxxxx"
                    }
                ],
                "serviceGroupList": [
                    {
                        "id": 123132,
                        "name": "服务组A"
                    }
                ]
            }
        ],
        "nuAcknowledgeEscalationPlan": [
            {
                "escalationPlanType": "UN_ACKNOWLEDGE",
                "noticeTime": 10,
                "status": "UPGRADE",
                "startTime": 1629872386027,
                "noticeChannels": [
                    "渠道字符串 SMS"
                ],
                "noticeObjectList": [
                    {
                        "noticeObjectId": 31231,
                        "noticeObjectName": "小华",
                        "noticeObjectPhone": "130xxxxxxxxx"
                    }
                ],
                "serviceGroupList": [
                    {
                        "id": 1231,
                        "name": "服务组A"
                    }
                ]
            }
        ]
    }
}',
    ),
    'UpdateServiceGroupScheduling' => 
    array (
      'summary' => '修改服务组排班。',
      'path' => '/services/group/scheduling/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1000',
              ),
              'schedulingWay' => 
              array (
                'title' => '排班方式 FAST 快速排班 FINE 精细排班',
                'description' => '排班方式 FAST 快速排班 FINE 精细排班',
                'type' => 'string',
                'required' => true,
                'example' => 'FAST',
              ),
              'fastScheduling' => 
              array (
                'title' => '快速排班',
                'description' => '快速排班',
                'type' => 'object',
                'properties' => 
                array (
                  'singleDuration' => 
                  array (
                    'title' => '每人排班时长',
                    'description' => '每人排班时长',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '12',
                  ),
                  'dutyPlan' => 
                  array (
                    'title' => '值班方案 dutyPlan FAST_CHOICE 快速选择   CUSTOM  自定义',
                    'description' => '值班方案 dutyPlan FAST_CHOICE 快速选择   CUSTOM  自定义',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'FAST_CHOICE',
                  ),
                  'singleDurationUnit' => 
                  array (
                    'title' => '每人排班时长单位 HOUR 小时 DAY 天',
                    'description' => '每人排班时长单位 HOUR 小时 DAY 天',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'DAY',
                  ),
                  'schedulingUsers' => 
                  array (
                    'title' => '快速轮班用户',
                    'description' => '快速轮班用户',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '快速轮班用户',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'schedulingUserId' => 
                        array (
                          'title' => '轮班用户ID',
                          'description' => '轮班用户ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'required' => false,
                          'example' => '6666',
                        ),
                        'schedulingOrder' => 
                        array (
                          'title' => '排班顺序',
                          'description' => '排班顺序',
                          'type' => 'integer',
                          'format' => 'int32',
                          'required' => false,
                          'example' => '1',
                        ),
                        'schedulingObjectType' => 
                        array (
                          'title' => '排班对象类型',
                          'description' => '任务调度类型',
                          'type' => 'string',
                          'required' => false,
                          'example' => '1',
                        ),
                        'schedulingUserIdList' => 
                        array (
                          'description' => '调度用户列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '用户ID',
                            'type' => 'integer',
                            'format' => 'int64',
                            'required' => false,
                            'example' => '1',
                          ),
                          'required' => false,
                        ),
                      ),
                      'required' => false,
                    ),
                    'required' => false,
                  ),
                  'id' => 
                  array (
                    'title' => '快速排班ID',
                    'description' => '快速排班ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => false,
                    'example' => '1',
                  ),
                ),
                'required' => false,
                'example' => 'HOUR',
              ),
              'fineScheduling' => 
              array (
                'title' => '精细排班',
                'description' => '精细排班',
                'type' => 'object',
                'properties' => 
                array (
                  'period' => 
                  array (
                    'title' => '循环周期',
                    'description' => '循环周期',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '1',
                  ),
                  'periodUnit' => 
                  array (
                    'title' => '循环周期单位 HOUR 小时 DAY 天',
                    'description' => '循环周期单位 HOUR 小时 DAY 天 ',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'DAY',
                  ),
                  'shiftType' => 
                  array (
                    'title' => '班次类型 MORNING_NIGHT 早晚班 MORNING_NOON_NIGHT 早中晚班 CUSTOM 自定义',
                    'description' => '班次类型 MORNING_NIGHT 早晚班 MORNING_NOON_NIGHT 早中晚班 CUSTOM 自定义',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'MORNING_NIGHT',
                  ),
                  'schedulingFineShifts' => 
                  array (
                    'title' => '精细排班班次人员信息',
                    'description' => '精细排班班次人员信息',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '精细排班',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'schedulingStartTime' => 
                        array (
                          'title' => '排班开始时间',
                          'description' => '排班开始时间',
                          'type' => 'string',
                          'required' => false,
                          'example' => '2020-08-13',
                        ),
                        'schedulingEndTime' => 
                        array (
                          'title' => '排班结束时间',
                          'description' => '排班结束时间',
                          'type' => 'string',
                          'required' => false,
                          'example' => '2020-10-13',
                        ),
                        'schedulingOrder' => 
                        array (
                          'title' => '排班顺序',
                          'description' => '排班顺序',
                          'type' => 'integer',
                          'format' => 'int64',
                          'required' => false,
                          'example' => '1',
                        ),
                        'shiftName' => 
                        array (
                          'title' => '班次名称',
                          'description' => '班次名称',
                          'type' => 'string',
                          'required' => false,
                          'example' => '早班',
                        ),
                        'skipOneDay' => 
                        array (
                          'title' => '是否跨天',
                          'description' => '跨天',
                          'type' => 'boolean',
                          'required' => false,
                          'example' => 'true',
                        ),
                        'schedulingUserId' => 
                        array (
                          'title' => '排班用户ID',
                          'description' => '排班用户id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'required' => false,
                          'example' => '32',
                        ),
                        'cycleOrder' => 
                        array (
                          'title' => '轮训次序',
                          'description' => '排班顺序',
                          'type' => 'integer',
                          'format' => 'int32',
                          'required' => false,
                          'example' => '123',
                        ),
                        'schedulingObjectType' => 
                        array (
                          'title' => '排班对象类型',
                          'description' => '调度任务类型',
                          'type' => 'string',
                          'required' => false,
                          'example' => '1',
                        ),
                        'schedulingUserIdList' => 
                        array (
                          'title' => '多人排班时，人员Id',
                          'description' => '用户调度列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '用户ID',
                            'type' => 'integer',
                            'format' => 'int64',
                            'required' => false,
                            'example' => '1',
                          ),
                          'required' => false,
                        ),
                      ),
                      'required' => false,
                    ),
                    'required' => false,
                  ),
                  'schedulingTemplateFineShifts' => 
                  array (
                    'title' => '精细排班模版',
                    'description' => '精细排班模版',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '精细排班',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'schedulingStartTime' => 
                        array (
                          'title' => '排班开始时间',
                          'description' => '排班开始时间',
                          'type' => 'string',
                          'required' => false,
                          'example' => '2021-10-01 00:00：00',
                        ),
                        'schedulingEndTime' => 
                        array (
                          'title' => '排班结束时间',
                          'description' => '排班结束时间',
                          'type' => 'string',
                          'required' => false,
                          'example' => '2021-11-01 00:00：00',
                        ),
                        'schedulingOrder' => 
                        array (
                          'title' => '排班顺序',
                          'description' => '排班顺序',
                          'type' => 'integer',
                          'format' => 'int32',
                          'required' => false,
                          'example' => '1',
                        ),
                        'schedulingUserId' => 
                        array (
                          'title' => '排班用户ID',
                          'description' => '排班用户ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'required' => false,
                          'example' => '1',
                        ),
                        'shiftName' => 
                        array (
                          'title' => '班次名称',
                          'description' => '班次名称',
                          'type' => 'string',
                          'required' => false,
                          'example' => '早班',
                        ),
                        'skipOneDay' => 
                        array (
                          'title' => '是否跨天',
                          'description' => ' 是否跨天',
                          'type' => 'boolean',
                          'required' => false,
                          'example' => 'false',
                        ),
                        'schedulingObjectType' => 
                        array (
                          'title' => '排班对象类型',
                          'description' => '调度类型',
                          'type' => 'string',
                          'required' => false,
                          'example' => '1',
                        ),
                        'schedulingUserIdList' => 
                        array (
                          'title' => '多人排班时，人员Id',
                          'description' => '调度用户列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '用户ID',
                            'type' => 'integer',
                            'format' => 'int64',
                            'required' => false,
                            'example' => '1',
                          ),
                          'required' => false,
                        ),
                      ),
                      'required' => false,
                    ),
                    'required' => false,
                  ),
                  'id' => 
                  array (
                    'title' => '精细排班ID',
                    'description' => '精细排班ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => false,
                    'example' => '1',
                  ),
                ),
                'required' => false,
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxxxxxxx',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is not valid. %s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxxxxxxx\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateServiceGroupSchedulingResponse>\\n    <requestId>xxxxxxxxxx</requestId>\\n</UpdateServiceGroupSchedulingResponse>","errorExample":""}]',
      'title' => '修改服务组排班',
    ),
    'UpdateServiceGroupSpecialDayScheduling' => 
    array (
      'summary' => '修改指定日期的服务组排班。',
      'path' => '/services/group/scheduling/updateSpecialDayScheduling',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '6666',
              ),
              'schedulingDate' => 
              array (
                'title' => '排班日期',
                'description' => '排班日期',
                'type' => 'string',
                'required' => true,
                'example' => '2021-08-19',
              ),
              'schedulingSpecialDays' => 
              array (
                'title' => '特殊排班信息',
                'description' => '排班信息',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '排班',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'schedulingStartTime' => 
                    array (
                      'title' => '排班开始时间',
                      'description' => '排班开始时间',
                      'type' => 'string',
                      'required' => true,
                      'example' => '2021-08-19 08:00:00',
                    ),
                    'schedulingEndTime' => 
                    array (
                      'title' => '排班结束时间',
                      'description' => '排班结束时间',
                      'type' => 'string',
                      'required' => true,
                      'example' => '2021-08-19 12:00:00',
                    ),
                    'schedulingUserId' => 
                    array (
                      'title' => '排班用户ID',
                      'description' => '排班用户
',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '64',
                    ),
                    'schedulingOrder' => 
                    array (
                      'title' => '班次顺序',
                      'description' => '班次顺序',
                      'type' => 'integer',
                      'format' => 'int32',
                      'required' => false,
                      'example' => '1',
                    ),
                    'schedulingObjectType' => 
                    array (
                      'title' => '排班对象类型',
                      'type' => 'string',
                    ),
                    'schedulingUserIdList' => 
                    array (
                      'title' => '多人排班时，人员Id',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'integer',
                        'format' => 'int64',
                      ),
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
              ),
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'C4BE3837-1A13-413B-A225-2C88188E8A43',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxxxxx',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound',
            'errorMessage' => 'The specified Resource is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxxxxx\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateServiceGroupSpecialDaySchedulingResponse>\\n    <requestId>xxxxxxxx</requestId>\\n</UpdateServiceGroupSpecialDaySchedulingResponse>","errorExample":""}]',
      'title' => '修改指定日期的服务组排班',
    ),
    'GetTenantApplication' => 
    array (
      'summary' => '移动应用详情。',
      'path' => '/mobileApp/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => '幂等标识',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => true,
                'example' => '7C56D225-7C34-40BB-9624-C8BA449260E6',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'corporationId' => 
                  array (
                    'title' => '企业id',
                    'description' => '企业id',
                    'type' => 'string',
                    'example' => 'ding81913c*',
                  ),
                  'bizId' => 
                  array (
                    'title' => '业务id',
                    'description' => '业务id',
                    'type' => 'string',
                    'example' => '7356',
                  ),
                  'progress' => 
                  array (
                    'title' => '进度',
                    'description' => '进度',
                    'type' => 'string',
                    'example' => 'NOT_OPEN',
                  ),
                  'channel' => 
                  array (
                    'title' => '云钉协同渠道',
                    'description' => '云钉协同渠道',
                    'type' => 'string',
                    'example' => 'DINGDING',
                  ),
                  'originalCorpId' => 
                  array (
                    'type' => 'string',
                  ),
                ),
              ),
              'requestId' => 
              array (
                'title' => 'id of the request',
                'description' => 'id of the request',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"data\\": {\\n    \\"corporationId\\": \\"ding81913c*\\",\\n    \\"bizId\\": \\"7356\\",\\n    \\"progress\\": \\"NOT_OPEN\\",\\n    \\"channel\\": \\"DINGDING\\"\\n  },\\n  \\"requestId\\": \\"10REQUES-AC5C-4B59-BE11-378F117A6A88\\"\\n}","errorExample":""},{"type":"xml","example":"<GetTenantApplicationResponse>\\n    <data>\\n        <corporationId>ding81913c*</corporationId>\\n        <bizId>7356</bizId>\\n        <progress>NOT_OPEN</progress>\\n        <channel>DINGDING</channel>\\n    </data>\\n    <requestId>10REQUES-AC5C-4B59-BE11-378F117A6A88</requestId>\\n</GetTenantApplicationResponse>","errorExample":""}]',
      'title' => '移动应用详情',
    ),
    'GetSimilarIncidentStatistics' => 
    array (
      'summary' => '相似事件列表。',
      'path' => '/incident/similarIncident/statistics',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'incidentId' => 
              array (
                'title' => '事件id',
                'description' => '事件id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '32',
              ),
              'incidentTitle' => 
              array (
                'title' => '事件标题',
                'description' => '事件标题',
                'type' => 'string',
                'required' => true,
                'example' => 'xxx事件',
              ),
              'createTime' => 
              array (
                'title' => '触发时间',
                'description' => '触发时间',
                'type' => 'string',
                'required' => true,
                'example' => '2021-09-09 09:09:09',
              ),
              'relatedServiceId' => 
              array (
                'title' => '关联服务id',
                'description' => '关联服务id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '23',
              ),
              'events' => 
              array (
                'title' => '事件告警内容',
                'description' => '事件告警内容',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '事件内容',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'xxx',
                ),
                'required' => true,
              ),
              'clientToken' => 
              array (
                'title' => '幂等标识',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => '7C56D225-7C34-40BB-9624-C8BA449260E6',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'id of the request',
                'description' => 'id of the request',
                'type' => 'string',
                'example' => '7C56D225-7C34-40BB-9624-C8BA449260E6',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'topFiveIncidents' => 
                  array (
                    'title' => 'topFiveIncidents',
                    'description' => 'topFiveIncidents',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'incidentId' => 
                        array (
                          'title' => '事件id',
                          'description' => '事件id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '32',
                        ),
                        'incidentNumber' => 
                        array (
                          'title' => '事件编号',
                          'description' => '事件编号',
                          'type' => 'string',
                          'example' => 'I34324',
                        ),
                        'incidentTitle' => 
                        array (
                          'title' => '事件标题',
                          'description' => '事件标题',
                          'type' => 'string',
                          'example' => 'xxx事件',
                        ),
                        'relatedRouteRuleId' => 
                        array (
                          'title' => '流转规则id',
                          'description' => '流转规则id',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '4343',
                        ),
                        'relatedRouteRuleName' => 
                        array (
                          'title' => '流转规则名称',
                          'description' => '流转规则名称',
                          'type' => 'string',
                          'example' => 'xxx',
                        ),
                        'finishReason' => 
                        array (
                          'title' => '触发原因',
                          'description' => '触发原因',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'finishReasonDescription' => 
                        array (
                          'title' => '触发原因描述',
                          'description' => '触发原因描述',
                          'type' => 'string',
                          'example' => 'xxxx原因',
                        ),
                        'incidentFinishSolution' => 
                        array (
                          'title' => '解决方案',
                          'description' => '解决方案',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '5',
                        ),
                        'finishSolutionDescription' => 
                        array (
                          'title' => '解决方案描述',
                          'description' => '解决方案描述',
                          'type' => 'string',
                          'example' => 'xxx方案',
                        ),
                        'createTime' => 
                        array (
                          'title' => '触发时间',
                          'description' => '触发时间',
                          'type' => 'string',
                          'example' => '2021-09-09 09:09:09',
                        ),
                        'assignUserId' => 
                        array (
                          'title' => '分派人id',
                          'description' => '分派人id',
                          'type' => 'string',
                          'example' => '43',
                        ),
                        'assignUserName' => 
                        array (
                          'title' => '分派人',
                          'description' => '分派人',
                          'type' => 'string',
                          'example' => '张老三',
                        ),
                        'durationTime' => 
                        array (
                          'title' => '持续时间',
                          'description' => '持续时间',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '6787678767',
                        ),
                        'similarScore' => 
                        array (
                          'title' => '相似度',
                          'description' => '相似度',
                          'type' => 'string',
                          'example' => '1992.21',
                        ),
                      ),
                    ),
                  ),
                  'countInSixMonths' => 
                  array (
                    'title' => '6月内相似事件数量',
                    'description' => '6月内相似事件数量',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '43',
                  ),
                  'countInSevenDays' => 
                  array (
                    'title' => '7天内相似事件数量',
                    'description' => '7天内相似事件数量',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '8',
                  ),
                  'dailySimilarIncidents' => 
                  array (
                    'title' => '根据日期分类',
                    'description' => '根据日期分类',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'date' => 
                        array (
                          'title' => '日期',
                          'description' => '日期',
                          'type' => 'string',
                          'example' => '2021-03-07',
                        ),
                        'commitment' => 
                        array (
                          'title' => '数量',
                          'description' => '数量',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        'month' => 
                        array (
                          'title' => '月份',
                          'description' => '月份',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'week' => 
                        array (
                          'title' => '周',
                          'description' => '周',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'day' => 
                        array (
                          'title' => '星期几',
                          'description' => '星期几',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'similarIncidents' => 
                        array (
                          'title' => '相似事件列表',
                          'description' => '相似事件列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'object',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'incidentId' => 
                              array (
                                'title' => '事件id',
                                'description' => '事件id',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '5435',
                              ),
                              'incidentNumber' => 
                              array (
                                'title' => '事件编号',
                                'description' => '事件编号',
                                'type' => 'string',
                                'example' => 'I234432',
                              ),
                              'incidentTitle' => 
                              array (
                                'title' => '事件名称',
                                'description' => '事件名称',
                                'type' => 'string',
                                'example' => '线性代数发多少',
                              ),
                              'relatedRouteRuleId' => 
                              array (
                                'title' => '流转规则id',
                                'description' => '流转规则id',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '334',
                              ),
                              'relatedRouteRuleName' => 
                              array (
                                'title' => '流转规则名称',
                                'description' => '流转规则名称',
                                'type' => 'string',
                                'example' => 'xxx规则',
                              ),
                              'finishReason' => 
                              array (
                                'title' => '触发原因',
                                'description' => '触发原因',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1',
                              ),
                              'finishReasonDescription' => 
                              array (
                                'title' => '触发原因描述',
                                'description' => '触发原因描述',
                                'type' => 'string',
                                'example' => 'xx原因',
                              ),
                              'incidentFinishSolution' => 
                              array (
                                'title' => '解决方案',
                                'description' => '解决方案',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '5',
                              ),
                              'finishSolutionDescription' => 
                              array (
                                'title' => '解决方案描述',
                                'description' => '解决方案描述',
                                'type' => 'string',
                                'example' => 'xxx方案',
                              ),
                              'createTime' => 
                              array (
                                'title' => '触发时间',
                                'description' => '触发时间',
                                'type' => 'string',
                                'example' => '2021-09-09 09:09:09',
                              ),
                              'assignUserName' => 
                              array (
                                'title' => '分派人',
                                'description' => '分派人',
                                'type' => 'string',
                                'example' => '张老三',
                              ),
                              'assignUserId' => 
                              array (
                                'title' => '分派人id',
                                'description' => '分派人id',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '433',
                              ),
                              'durationTime' => 
                              array (
                                'title' => '持续时间',
                                'description' => '持续时间',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '6789765678',
                              ),
                              'similarScore' => 
                              array (
                                'title' => '相似度',
                                'description' => '相似度',
                                'type' => 'string',
                                'example' => '1003.567',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'example' => '{}',
                  ),
                  'requestId' => 
                  array (
                    'title' => 'id of the request',
                    'description' => 'id of the request',
                    'type' => 'string',
                    'example' => 'uyihg6789',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"7C56D225-7C34-40BB-9624-C8BA449260E6\\",\\n  \\"data\\": {\\n    \\"topFiveIncidents\\": [\\n      {\\n        \\"incidentId\\": 32,\\n        \\"incidentNumber\\": \\"I34324\\",\\n        \\"incidentTitle\\": \\"xxx事件\\",\\n        \\"relatedRouteRuleId\\": 4343,\\n        \\"relatedRouteRuleName\\": \\"xxx\\",\\n        \\"finishReason\\": 2,\\n        \\"finishReasonDescription\\": \\"xxxx原因\\",\\n        \\"incidentFinishSolution\\": 5,\\n        \\"finishSolutionDescription\\": \\"xxx方案\\",\\n        \\"createTime\\": \\"2021-09-09 09:09:09\\",\\n        \\"assignUserId\\": \\"43\\",\\n        \\"assignUserName\\": \\"张老三\\",\\n        \\"durationTime\\": 6787678767,\\n        \\"similarScore\\": \\"1992.21\\"\\n      }\\n    ],\\n    \\"countInSixMonths\\": 43,\\n    \\"countInSevenDays\\": 8,\\n    \\"dailySimilarIncidents\\": [\\n      {\\n        \\"date\\": \\"2021-03-07\\",\\n        \\"commitment\\": 0,\\n        \\"month\\": 2,\\n        \\"week\\": \\"1\\",\\n        \\"day\\": 1,\\n        \\"similarIncidents\\": [\\n          {\\n            \\"incidentId\\": 5435,\\n            \\"incidentNumber\\": \\"I234432\\",\\n            \\"incidentTitle\\": \\"线性代数发多少\\",\\n            \\"relatedRouteRuleId\\": 334,\\n            \\"relatedRouteRuleName\\": \\"xxx规则\\",\\n            \\"finishReason\\": 1,\\n            \\"finishReasonDescription\\": \\"xx原因\\",\\n            \\"incidentFinishSolution\\": 5,\\n            \\"finishSolutionDescription\\": \\"xxx方案\\",\\n            \\"createTime\\": \\"2021-09-09 09:09:09\\",\\n            \\"assignUserName\\": \\"张老三\\",\\n            \\"assignUserId\\": 433,\\n            \\"durationTime\\": 6789765678,\\n            \\"similarScore\\": \\"1003.567\\"\\n          }\\n        ]\\n      }\\n    ],\\n    \\"requestId\\": \\"uyihg6789\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetSimilarIncidentStatisticsResponse>\\n    <requestId>7C56D225-7C34-40BB-9624-C8BA449260E6</requestId>\\n    <data>\\n        <topFiveIncidents>\\n            <incidentId>32</incidentId>\\n            <incidentNumber>I34324</incidentNumber>\\n            <incidentTitle>xxx事件</incidentTitle>\\n            <relatedRouteRuleId>4343</relatedRouteRuleId>\\n            <relatedRouteRuleName>xxx</relatedRouteRuleName>\\n            <finishReason>2</finishReason>\\n            <finishReasonDescription>xxxx原因</finishReasonDescription>\\n            <incidentFinishSolution>5</incidentFinishSolution>\\n            <finishSolutionDescription>xxx方案</finishSolutionDescription>\\n            <createTime>2021-09-09 09:09:09</createTime>\\n            <assignUserId>43</assignUserId>\\n            <assignUserName>张老三</assignUserName>\\n            <durationTime>6787678767</durationTime>\\n            <similarScore>1992.21</similarScore>\\n        </topFiveIncidents>\\n        <countInSixMonths>43</countInSixMonths>\\n        <countInSevenDays>8</countInSevenDays>\\n        <dailySimilarIncidents>\\n            <date>2021-03-07</date>\\n            <commitment>0</commitment>\\n            <month>2</month>\\n            <week>1</week>\\n            <day>1</day>\\n            <similarIncidents>\\n                <incidentId>5435</incidentId>\\n                <incidentNumber>I234432</incidentNumber>\\n                <incidentTitle>线性代数发多少</incidentTitle>\\n                <relatedRouteRuleId>334</relatedRouteRuleId>\\n                <relatedRouteRuleName>xxx规则</relatedRouteRuleName>\\n                <finishReason>1</finishReason>\\n                <finishReasonDescription>xx原因</finishReasonDescription>\\n                <incidentFinishSolution>5</incidentFinishSolution>\\n                <finishSolutionDescription>xxx方案</finishSolutionDescription>\\n                <createTime>2021-09-09 09:09:09</createTime>\\n                <assignUserName>张老三</assignUserName>\\n                <assignUserId>433</assignUserId>\\n                <durationTime>6789765678</durationTime>\\n                <similarScore>1003.567</similarScore>\\n            </similarIncidents>\\n        </dailySimilarIncidents>\\n        <requestId>uyihg6789</requestId>\\n    </data>\\n</GetSimilarIncidentStatisticsResponse>","errorExample":""}]',
      'title' => '相似事件列表',
    ),
    'GetIncidentSubtotalCount' => 
    array (
      'summary' => '获取相似事件相关小计数量。',
      'path' => '/incident/subtotal/count',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'incidentIds' => 
              array (
                'title' => '事件id列表',
                'description' => '事件id列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '事件ID列表',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '6754',
                ),
                'required' => true,
              ),
              'clientToken' => 
              array (
                'title' => '幂等标识',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => false,
                'example' => '7C56D225-7C34-40BB-9624-C8BA449260E6',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'subtotalCount' => 
                  array (
                    'title' => 'map',
                    'description' => 'map',
                    'type' => 'object',
                    'example' => '{12:12}',
                  ),
                  'requestId' => 
                  array (
                    'title' => 'id of the request',
                    'description' => 'id of the request',
                    'type' => 'string',
                    'example' => '24343424234',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"data\\": {\\n    \\"subtotalCount\\": {\\n      \\"test\\": \\"test\\",\\n      \\"test2\\": 1\\n    },\\n    \\"requestId\\": \\"24343424234\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetIncidentSubtotalCountResponse>\\n    <data>\\n        <subtotalCount>\\n            <193594331>2</193594331>\\n        </subtotalCount>\\n    </data>\\n</GetIncidentSubtotalCountResponse>","errorExample":""}]',
      'title' => '获取相似事件相关小计数量',
    ),
    'CreateTenantApplication' => 
    array (
      'summary' => '创建移动应用。',
      'path' => '/mobileApp/create',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'channel' => 
              array (
                'title' => '应用协同渠道',
                'description' => '应用协同渠道',
                'type' => 'string',
                'required' => true,
                'example' => 'DINGDING',
              ),
              'clientToken' => 
              array (
                'title' => '幂等标识',
                'description' => '幂等标识',
                'type' => 'string',
                'required' => true,
                'example' => '7C56D225-7C34-40BB-9624-C8BA449260E6',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'id of the req',
                'description' => 'id of the req',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'openUrl' => 
                  array (
                    'title' => '开通url',
                    'description' => '开通url',
                    'type' => 'string',
                    'example' => 'http://xxxx',
                  ),
                  'progress' => 
                  array (
                    'title' => '开通进度状态',
                    'description' => '开通进度状态',
                    'type' => 'string',
                    'example' => 'OPENED 已开通 OPENING 开通中',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'TenantAppAlreadyExisit',
            'errorMessage' => 'App is opened.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"10REQUES-AC5C-4B59-BE11-378F117A6A88\\",\\n  \\"data\\": {\\n    \\"openUrl\\": \\"http://xxxx\\",\\n    \\"progress\\": \\"OPENED 已开通 OPENING 开通中\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateTenantApplicationResponse>\\n    <requestId>10REQUES-AC5C-4B59-BE11-378F117A6A88</requestId>\\n    <data>\\n        <openUrl>http://xxxx</openUrl>\\n        <progress>OPENED </progress>\\n    </data>\\n</CreateTenantApplicationResponse>","errorExample":""}]',
      'title' => '创建移动应用',
    ),
    'GetHomePageGuidance' => 
    array (
      'summary' => '查询首页配置引导。',
      'path' => '/guidance/detail',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '首页引导查询参数',
            'description' => '首页引导查询参数',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'xxxxxx',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxxx',
              ),
              'data' => 
              array (
                'description' => '首页引导配置信息',
                'type' => 'object',
                'properties' => 
                array (
                  'serviceStatus' => 
                  array (
                    'title' => '服务配置状态',
                    'description' => '服务配置状态',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'usersStatus' => 
                  array (
                    'title' => '用户配置状态',
                    'description' => '用户配置状态',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'serviceGroupStatus' => 
                  array (
                    'title' => '服务组配置状态',
                    'description' => '服务组配置状态',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'notifySubscriptionStatus' => 
                  array (
                    'title' => '通知订阅配置状态',
                    'description' => '通知订阅配置状态',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxxx\\",\\n  \\"data\\": {\\n    \\"serviceStatus\\": true,\\n    \\"usersStatus\\": true,\\n    \\"serviceGroupStatus\\": true,\\n    \\"notifySubscriptionStatus\\": true\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetHomePageGuidanceResponse>\\n    <requestId>xxxxxx</requestId>\\n    <data>\\n        <serviceStatus>true</serviceStatus>\\n        <usersStatus>true</usersStatus>\\n        <serviceGroupStatus>true</serviceGroupStatus>\\n        <notifySubscriptionStatus>true</notifySubscriptionStatus>\\n    </data>\\n</GetHomePageGuidanceResponse>","errorExample":""}]',
      'title' => '查询首页配置引导',
      'requestParamsDescription' => '{
    "pageNumber": 1,
    "pageSize": 10,
    "clientToken": "89b3ed86-e8d6-43b4-82a6-a711055806eb"
}',
      'responseParamsDescription' => '{
    
    "requestId": "gdgsdgsggsdg",
       "data": {
        "serviceStatus": true,
        "usersStatus": true,
        "serviceGroupStatus": true,
        "notifySubscriptionStatus": true
    }
}',
    ),
    'ListDataReportForServiceGroup' => 
    array (
      'summary' => '分页查询服务组统计数据	。',
      'path' => '/statistics/listDataReportForServiceGroup',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'startTime' => 
              array (
                'title' => '开始时间',
                'description' => '开始时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-09-09',
              ),
              'endTime' => 
              array (
                'title' => '结束时间',
                'description' => '结束时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-09-30',
              ),
              'serviceGroupName' => 
              array (
                'title' => '服务组名称',
                'description' => '服务组名称',
                'type' => 'string',
                'required' => false,
                'example' => 'A服务组',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxxxx',
              ),
              'data' => 
              array (
                'title' => '统计数据',
                'description' => '统计数据',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '统计数据',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'serviceGroupName' => 
                    array (
                      'title' => '服务组名字',
                      'description' => '服务组名字',
                      'type' => 'string',
                      'example' => '服务组',
                    ),
                    'incidentCount' => 
                    array (
                      'title' => '事件数量',
                      'description' => '事件数量',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'escalationIncidentCount' => 
                    array (
                      'title' => '升级事件数量',
                      'description' => '升级事件数量',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '100',
                    ),
                    'unAcknowledgedEscalationIncidentCount' => 
                    array (
                      'title' => '未响应升级事件数量',
                      'description' => '未响应升级事件数量',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '200',
                    ),
                    'unFinishEscalationIncidentCount' => 
                    array (
                      'title' => '未完成升级事件数量',
                      'description' => '未完成升级事件数量',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '200',
                    ),
                    'serviceGroupId' => 
                    array (
                      'title' => '服务组ID',
                      'description' => '服务组ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '100',
                    ),
                    'meanTimeToAcknowledge' => 
                    array (
                      'title' => 'MRRA',
                      'description' => 'MRRA',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3分19秒',
                    ),
                    'meanTimeToRepair' => 
                    array (
                      'title' => 'MTTR',
                      'description' => 'MTTR',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3分19秒',
                    ),
                    'finishProportion' => 
                    array (
                      'title' => '完结率',
                      'description' => '完结率',
                      'type' => 'string',
                      'example' => '19%',
                    ),
                    'finishIncidentCount' => 
                    array (
                      'title' => '事件完结数',
                      'description' => '事件完结数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '111',
                    ),
                  ),
                ),
              ),
              'pageSIze' => 
              array (
                'title' => '页大小',
                'description' => '页大小',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'pageNumber' => 
              array (
                'title' => '当前页',
                'description' => '当前页',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'totalCount' => 
              array (
                'title' => '总数',
                'description' => '总数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxxxx\\",\\n  \\"data\\": [\\n    {\\n      \\"serviceGroupName\\": \\"服务组\\",\\n      \\"incidentCount\\": 1,\\n      \\"escalationIncidentCount\\": 100,\\n      \\"unAcknowledgedEscalationIncidentCount\\": 200,\\n      \\"unFinishEscalationIncidentCount\\": 200,\\n      \\"serviceGroupId\\": 100,\\n      \\"meanTimeToAcknowledge\\": 0,\\n      \\"meanTimeToRepair\\": 0,\\n      \\"finishProportion\\": \\"19%\\",\\n      \\"finishIncidentCount\\": 111\\n    }\\n  ],\\n  \\"pageSIze\\": 10,\\n  \\"pageNumber\\": 1,\\n  \\"totalCount\\": 100\\n}","errorExample":""},{"type":"xml","example":"<ListDataReportForServiceGroupResponse>\\n    <requestId>xxxxxxx</requestId>\\n    <data>\\n        <serviceGroupName>服务组</serviceGroupName>\\n        <incidentCount>1</incidentCount>\\n        <escalationIncidentCount>100</escalationIncidentCount>\\n        <unAcknowledgedEscalationIncidentCount>200</unAcknowledgedEscalationIncidentCount>\\n        <unFinishEscalationIncidentCount>200</unFinishEscalationIncidentCount>\\n        <serviceGroupId>100</serviceGroupId>\\n        <finishProportion>19%</finishProportion>\\n    </data>\\n</ListDataReportForServiceGroupResponse>","errorExample":""}]',
      'title' => '查询服务组事件统计报表',
      'requestParamsDescription' => '{
    "pageNumber": 1,
    "pageSize": 10,
    "startTime": "2021-11-02",
    "endTime": "2021-11-09",
    "clientToken": "ec1eba2b-cbd9-4daa-aa6e-d127a27989bc"
}',
      'responseParamsDescription' => '{
    "requestId": "gdgsdgsggsdg",
    "data": [
        {
            "meanTimeToAcknowledge": "66天37分钟50秒",
            "meanTimeToRepair": "20小时20分钟48秒",
            "finishProportion": "17.65%",
            "serviceGroupName": "吃饭群（钉钉群）",
            "incidentCount": 34,
            "finishIncidentCount": 6,
            "escalationIncidentCount": 21,
            "unAcknowledgedEscalationIncidentCount": 20,
            "unFinishEscalationIncidentCount": 21,
            "serviceGroupId": 32
        },
        {
            "meanTimeToAcknowledge": "66天37分钟50秒",
            "meanTimeToRepair": "20小时20分钟48秒",
            "finishProportion": "25.00%",
            "serviceGroupName": "国庆企业",
            "incidentCount": 24,
            "finishIncidentCount": 6,
            "escalationIncidentCount": 11,
            "unAcknowledgedEscalationIncidentCount": 10,
            "unFinishEscalationIncidentCount": 11,
            "serviceGroupId": 180020080
        },
        {
            "meanTimeToAcknowledge": "66天37分钟50秒",
            "meanTimeToRepair": "20小时20分钟48秒",
            "finishProportion": "25.00%",
            "serviceGroupName": "【日常】胡江平的测试服务组",
            "incidentCount": 24,
            "finishIncidentCount": 6,
            "escalationIncidentCount": 11,
            "unAcknowledgedEscalationIncidentCount": 10,
            "unFinishEscalationIncidentCount": 11,
            "serviceGroupId": 170020030
        },
        {
            "meanTimeToAcknowledge": "66天37分钟50秒",
            "meanTimeToRepair": "20小时20分钟48秒",
            "finishProportion": "25.00%",
            "serviceGroupName": "Slack",
            "incidentCount": 24,
            "finishIncidentCount": 6,
            "escalationIncidentCount": 11,
            "unAcknowledgedEscalationIncidentCount": 10,
            "unFinishEscalationIncidentCount": 11,
            "serviceGroupId": 110030020
        },
        {
            "meanTimeToAcknowledge": "66天37分钟50秒",
            "meanTimeToRepair": "11天33分钟35秒",
            "finishProportion": "9.09%",
            "serviceGroupName": "飞书群",
            "incidentCount": 11,
            "finishIncidentCount": 1,
            "escalationIncidentCount": 10,
            "unAcknowledgedEscalationIncidentCount": 10,
            "unFinishEscalationIncidentCount": 10,
            "serviceGroupId": 130000010
        },
        {
            "meanTimeToAcknowledge": "66天37分钟50秒",
            "meanTimeToRepair": "11天33分钟35秒",
            "finishProportion": "9.09%",
            "serviceGroupName": "精细排班",
            "incidentCount": 11,
            "finishIncidentCount": 1,
            "escalationIncidentCount": 10,
            "unAcknowledgedEscalationIncidentCount": 10,
            "unFinishEscalationIncidentCount": 10,
            "serviceGroupId": 110020010
        },
        {
            "meanTimeToAcknowledge": "0",
            "meanTimeToRepair": "0",
            "finishProportion": "0.00%",
            "serviceGroupName": "新增服务组0927",
            "incidentCount": 8,
            "finishIncidentCount": 0,
            "escalationIncidentCount": 8,
            "unAcknowledgedEscalationIncidentCount": 8,
            "unFinishEscalationIncidentCount": 8,
            "serviceGroupId": 160020050
        },
        {
            "meanTimeToAcknowledge": "0",
            "meanTimeToRepair": "0",
            "finishProportion": "0.00%",
            "serviceGroupName": "ces",
            "incidentCount": 7,
            "finishIncidentCount": 0,
            "escalationIncidentCount": 7,
            "unAcknowledgedEscalationIncidentCount": 7,
            "unFinishEscalationIncidentCount": 7,
            "serviceGroupId": 170020040
        },
        {
            "meanTimeToAcknowledge": "0",
            "meanTimeToRepair": "0",
            "finishProportion": "0.00%",
            "serviceGroupName": "卡片服务组测试【勿动】",
            "incidentCount": 7,
            "finishIncidentCount": 0,
            "escalationIncidentCount": 7,
            "unAcknowledgedEscalationIncidentCount": 7,
            "unFinishEscalationIncidentCount": 7,
            "serviceGroupId": 160020030
        },
        {
            "meanTimeToAcknowledge": "0",
            "meanTimeToRepair": "0",
            "finishProportion": "0.00%",
            "serviceGroupName": "这是一个服务组1018",
            "incidentCount": 7,
            "finishIncidentCount": 0,
            "escalationIncidentCount": 7,
            "unAcknowledgedEscalationIncidentCount": 7,
            "unFinishEscalationIncidentCount": 7,
            "serviceGroupId": 150020080
        }
    ],
    "total": 313,
    "pageNum": 1,
    "pageSize": 10
}',
    ),
    'ListChartDataForServiceGroup' => 
    array (
      'summary' => '数据报表图表数据接口（服务组）。',
      'path' => '/statistics/chartDataForServiceGroup/',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'description' => 'clientToken',
                'type' => 'string',
                'required' => false,
                'example' => '23es23s32xas23',
              ),
              'startTime' => 
              array (
                'title' => '开始时间',
                'description' => '开始时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-09-09',
              ),
              'endTime' => 
              array (
                'title' => '结束时间',
                'description' => '结束时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-10-09',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '1231212',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'time' => 
                    array (
                      'title' => '时间',
                      'description' => '时间',
                      'type' => 'string',
                      'example' => '2021-09-09',
                    ),
                    'incidentCount' => 
                    array (
                      'title' => '时间总数',
                      'description' => '时间总数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '32',
                    ),
                    'effectionLevel' => 
                    array (
                      'title' => '根据影响等级时间等级分组统计数量',
                      'description' => '根据影响等级时间等级分组统计数量',
                      'type' => 'object',
                      'example' => '{"P1HIGH":32}',
                    ),
                    'meanTimeToAcknowledge' => 
                    array (
                      'title' => '当日平均响应时间单位秒',
                      'description' => '当日平均响应时间单位秒',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '323',
                    ),
                    'meanTimeToRepair' => 
                    array (
                      'title' => '当日平均完结时间单位秒',
                      'description' => '当日平均完结时间单位秒',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '4343',
                    ),
                    'totalMeanTimeToAcknowledge' => 
                    array (
                      'title' => '总平均响应时间',
                      'description' => '总平均响应时间',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3334',
                    ),
                    'totalMeanTimeToRepair' => 
                    array (
                      'title' => '总平均完结时间',
                      'description' => '总平均完结时间',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '4343',
                    ),
                    'escalationIncidentCount' => 
                    array (
                      'title' => '升级事件数',
                      'description' => '升级事件数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '43',
                    ),
                    'unAcknowledgedEscalationIncidentCount' => 
                    array (
                      'title' => '未响应升级事件数',
                      'description' => '未响应升级事件数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '23',
                    ),
                    'unFinishEscalationIncidentCount' => 
                    array (
                      'title' => '未完结升级事件数',
                      'description' => '未完结升级事件数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '23',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"1231212\\",\\n  \\"data\\": [\\n    {\\n      \\"time\\": \\"2021-09-09\\",\\n      \\"incidentCount\\": 32,\\n      \\"effectionLevel\\": {\\n        \\"P1HIGH\\": 32\\n      },\\n      \\"meanTimeToAcknowledge\\": 323,\\n      \\"meanTimeToRepair\\": 4343,\\n      \\"totalMeanTimeToAcknowledge\\": 3334,\\n      \\"totalMeanTimeToRepair\\": 4343,\\n      \\"escalationIncidentCount\\": 43,\\n      \\"unAcknowledgedEscalationIncidentCount\\": 23,\\n      \\"unFinishEscalationIncidentCount\\": 23\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListChartDataForServiceGroupResponse>\\n    <requestId>1231212</requestId>\\n    <data>\\n        <time>2021-09-09</time>\\n        <incidentCount>32</incidentCount>\\n        <meanTimeToAcknowledge>323</meanTimeToAcknowledge>\\n        <meanTimeToRepair>4343</meanTimeToRepair>\\n        <totalMeanTimeToAcknowledge>3334</totalMeanTimeToAcknowledge>\\n        <totalMeanTimeToRepair>4343</totalMeanTimeToRepair>\\n        <escalationIncidentCount>43</escalationIncidentCount>\\n        <unAcknowledgedEscalationIncidentCount>23</unAcknowledgedEscalationIncidentCount>\\n        <unFinishEscalationIncidentCount>23</unFinishEscalationIncidentCount>\\n    </data>\\n</ListChartDataForServiceGroupResponse>","errorExample":""}]',
      'title' => '数据报表图表数据接口（服务组）',
      'responseParamsDescription' => '{
    "requestId": "1231212",
    "data": [
        {
            "time": "2021-09-09",
            "incidentCount": 32,
            "meanTimeToAcknowledge": 323,
            "meanTimeToRepair": 4343,
            "totalMeanTimeToAcknowledge": 3334,
            "totalMeanTimeToRepair": 4343,
            "escalationIncidentCount": 43,
            "unAcknowledgedEscalationIncidentCount": 23,
            "unFinishEscalationIncidentCount": 23
        }
    ]
}',
    ),
    'ListSourceEventsForMonitorSource' => 
    array (
      'summary' => '查询最近告警列表。',
      'path' => '/events/queryLastestEvents',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'monitorSourceId' => 
              array (
                'title' => '监控源ID',
                'description' => '监控源ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1000',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxxx',
              ),
              'data' => 
              array (
                'title' => '告警列表',
                'description' => '告警列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'monitorSourceId' => 
                    array (
                      'title' => '监控源ID',
                      'description' => '监控源ID',
                      'type' => 'boolean',
                      'example' => '1000',
                    ),
                    'monitorSourceName' => 
                    array (
                      'title' => '监控源名称',
                      'description' => '监控源名称',
                      'type' => 'string',
                      'example' => 'zabbix',
                    ),
                    'eventTime' => 
                    array (
                      'title' => '告警上报时间',
                      'description' => '告警上报时间',
                      'type' => 'string',
                      'example' => '2020-01-01 18:30:00',
                    ),
                    'eventJson' => 
                    array (
                      'title' => '告警内容',
                      'description' => '告警内容',
                      'type' => 'string',
                      'example' => '{}',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxxx\\",\\n  \\"data\\": [\\n    {\\n      \\"monitorSourceId\\": true,\\n      \\"monitorSourceName\\": \\"zabbix\\",\\n      \\"eventTime\\": \\"2020-01-01 18:30:00\\",\\n      \\"eventJson\\": \\"{}\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListSourceEventsForMonitorSourceResponse>\\n    <requestId>xxxxxx</requestId>\\n    <data>\\n        <monitorSourceId>false</monitorSourceId>\\n        <monitorSourceName>zabbix</monitorSourceName>\\n        <eventTime>2020-01-01 18:30:00</eventTime>\\n        <eventJson>{}</eventJson>\\n    </data>\\n</ListSourceEventsForMonitorSourceResponse>","errorExample":""}]',
      'title' => '查询最近告警列表',
      'requestParamsDescription' => '{
  "monitorSourceId" : 1000
}',
      'responseParamsDescription' => '{
    "requestId": "xxxxxx",
    "data": [
        {
            "monitorSourceId": false,
            "monitorSourceName": "zabbix",
            "eventTime": "2020-01-01 18:30:00",
            "eventJson": "{}"
        }
    ]
}',
    ),
    'ListDataReportForUser' => 
    array (
      'summary' => '查询个人事件统计数据。',
      'path' => '/statistics/listDataReportForUser',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'startTime' => 
              array (
                'title' => '开始时间',
                'description' => '开始时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-09-01',
              ),
              'endTime' => 
              array (
                'title' => '结束时间',
                'description' => '结束时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-09-30',
              ),
              'pageNumber' => 
              array (
                'title' => '当前页',
                'description' => '当前页',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'pageSize' => 
              array (
                'title' => '页大小',
                'description' => '页大小',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '100',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxx',
              ),
              'data' => 
              array (
                'title' => '个人统计数据',
                'description' => '个人统计数据',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'userName' => 
                    array (
                      'title' => '用户名字',
                      'description' => '用户名字',
                      'type' => 'string',
                      'example' => 'wy',
                    ),
                    'escalationIncidentCount' => 
                    array (
                      'title' => '升级事件数量',
                      'description' => '升级事件数量',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '100',
                    ),
                    'distributionIncidentCount' => 
                    array (
                      'title' => '分配事件数量',
                      'description' => '分配事件数量',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '100',
                    ),
                    'finishIncidentNumber' => 
                    array (
                      'title' => '完结事件数量',
                      'description' => '完结事件数量',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '100',
                    ),
                    'unAcknowledgedEscalationIncidentCount' => 
                    array (
                      'title' => '未响应升级数',
                      'description' => '未响应升级数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '100',
                    ),
                    'unFinishEscalationIncidentCount' => 
                    array (
                      'title' => '未完结事件数',
                      'description' => '未完结事件数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '100',
                    ),
                    'meanTimeToAcknowledge' => 
                    array (
                      'title' => 'MRRA',
                      'description' => 'MRRA',
                      'type' => 'string',
                      'example' => '3分50秒',
                    ),
                    'meanTimeToRepair' => 
                    array (
                      'title' => 'MTTA',
                      'description' => 'MTTA',
                      'type' => 'string',
                      'example' => '3分50秒',
                    ),
                    'unDistributionIncidentCount' => 
                    array (
                      'title' => '非分配完结数',
                      'description' => '非分配完结数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '100',
                    ),
                    'finishProportion' => 
                    array (
                      'title' => '完结率',
                      'description' => '完结率',
                      'type' => 'string',
                      'example' => '20%',
                    ),
                    'userId' => 
                    array (
                      'title' => '用户ID',
                      'description' => '用户ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1111',
                    ),
                  ),
                ),
              ),
              'totalCount' => 
              array (
                'title' => '总条数',
                'description' => '总条数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxx\\",\\n  \\"data\\": [\\n    {\\n      \\"userName\\": \\"wy\\",\\n      \\"escalationIncidentCount\\": 100,\\n      \\"distributionIncidentCount\\": 100,\\n      \\"finishIncidentNumber\\": 100,\\n      \\"unAcknowledgedEscalationIncidentCount\\": 100,\\n      \\"unFinishEscalationIncidentCount\\": 100,\\n      \\"meanTimeToAcknowledge\\": \\"3分50秒\\",\\n      \\"meanTimeToRepair\\": \\"3分50秒\\",\\n      \\"unDistributionIncidentCount\\": 100,\\n      \\"finishProportion\\": \\"20%\\",\\n      \\"userId\\": 1111\\n    }\\n  ],\\n  \\"totalCount\\": 100\\n}","errorExample":""},{"type":"xml","example":"<ListDataReportForUserResponse>\\n    <data>\\n        <userName>wy</userName>\\n        <escalationIncidentCount>100</escalationIncidentCount>\\n        <distributionIncidentCount>100</distributionIncidentCount>\\n        <finishIncidentNumber>100</finishIncidentNumber>\\n        <unAcknowledgedEscalationIncidentCount>100</unAcknowledgedEscalationIncidentCount>\\n        <unFinishEscalationIncidentCount>100</unFinishEscalationIncidentCount>\\n        <meanTimeToAcknowledge>3分50秒</meanTimeToAcknowledge>\\n        <meanTimeToRepair>3分50秒</meanTimeToRepair>\\n        <unDistributionIncidentCount>100</unDistributionIncidentCount>\\n        <finishProportion>20%</finishProportion>\\n    </data>\\n</ListDataReportForUserResponse>","errorExample":""}]',
      'title' => '查询个人事件统计数据',
      'requestParamsDescription' => '{
    "pageNumber": 1,
    "pageSize": 10,
    "startTime": "2021-11-01",
    "endTime": "2021-11-08",
    "clientToken": "4b31b55b-32af-415a-b2fb-a88b4e066845"
}',
    ),
    'ListChartDataForUser' => 
    array (
      'summary' => '数据报表图表数据接口（人员）。',
      'path' => '/statistics/chartDataForUser/',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'description' => 'clientToken',
                'type' => 'string',
                'required' => false,
                'example' => '3232dsd32sd32gr',
              ),
              'startTime' => 
              array (
                'title' => '开始时间',
                'description' => '开始时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-09-09',
              ),
              'endTime' => 
              array (
                'title' => '结束时间',
                'description' => '结束时间',
                'type' => 'string',
                'required' => false,
                'example' => '2021-10-09',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '1231212',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'object',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'time' => 
                    array (
                      'title' => '时间',
                      'description' => '时间',
                      'type' => 'string',
                      'example' => '2021-09-09',
                    ),
                    'incidentCount' => 
                    array (
                      'title' => '时间总数',
                      'description' => '时间总数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '32',
                    ),
                    'effectionLevel' => 
                    array (
                      'title' => '根据影响等级时间等级分组统计数量',
                      'description' => '根据影响等级时间等级分组统计数量',
                      'type' => 'object',
                      'example' => '{"P1HIGH":32}',
                    ),
                    'meanTimeToAcknowledge' => 
                    array (
                      'title' => '当日平均响应时间单位秒',
                      'description' => '当日平均响应时间单位秒',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '323',
                    ),
                    'meanTimeToRepair' => 
                    array (
                      'title' => '当日平均完结时间单位秒',
                      'description' => '当日平均完结时间单位秒',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '4343',
                    ),
                    'totalMeanTimeToAcknowledge' => 
                    array (
                      'title' => '总平均响应时间',
                      'description' => '总平均响应时间',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3334',
                    ),
                    'totalMeanTimeToRepair' => 
                    array (
                      'title' => '总平均完结时间',
                      'description' => '总平均完结时间',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '4343',
                    ),
                    'escalationIncidentCount' => 
                    array (
                      'title' => '升级事件数',
                      'description' => '升级事件数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '43',
                    ),
                    'unAcknowledgedEscalationIncidentCount' => 
                    array (
                      'title' => '未响应升级事件数',
                      'description' => '未响应升级事件数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '23',
                    ),
                    'unFinishEscalationIncidentCount' => 
                    array (
                      'title' => '未完结升级事件数',
                      'description' => '未完结升级事件数',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '23',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"1231212\\",\\n  \\"data\\": [\\n    {\\n      \\"time\\": \\"2021-09-09\\",\\n      \\"incidentCount\\": 32,\\n      \\"effectionLevel\\": {\\n        \\"P1HIGH\\": 32\\n      },\\n      \\"meanTimeToAcknowledge\\": 323,\\n      \\"meanTimeToRepair\\": 4343,\\n      \\"totalMeanTimeToAcknowledge\\": 3334,\\n      \\"totalMeanTimeToRepair\\": 4343,\\n      \\"escalationIncidentCount\\": 43,\\n      \\"unAcknowledgedEscalationIncidentCount\\": 23,\\n      \\"unFinishEscalationIncidentCount\\": 23\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListChartDataForUserResponse>\\n    <requestId>1231212</requestId>\\n    <data>\\n        <time>2021-09-09</time>\\n        <incidentCount>32</incidentCount>\\n        <meanTimeToAcknowledge>323</meanTimeToAcknowledge>\\n        <meanTimeToRepair>4343</meanTimeToRepair>\\n        <totalMeanTimeToAcknowledge>3334</totalMeanTimeToAcknowledge>\\n        <totalMeanTimeToRepair>4343</totalMeanTimeToRepair>\\n        <escalationIncidentCount>43</escalationIncidentCount>\\n        <unAcknowledgedEscalationIncidentCount>23</unAcknowledgedEscalationIncidentCount>\\n        <unFinishEscalationIncidentCount>23</unFinishEscalationIncidentCount>\\n    </data>\\n</ListChartDataForUserResponse>","errorExample":""}]',
      'title' => '数据报表图表数据接口（人员）',
      'requestParamsDescription' => '{
  "clientToken" : "3232dsd32sd32gr",
  "startTime" : "2021-09-09",
  "endTime" : "2021-10-09"
}',
      'responseParamsDescription' => '{
    "requestId": "1231212",
    "data": [
        {
            "time": "2021-09-09",
            "incidentCount": 32,
            "meanTimeToAcknowledge": 323,
            "meanTimeToRepair": 4343,
            "totalMeanTimeToAcknowledge": 3334,
            "totalMeanTimeToRepair": 4343,
            "escalationIncidentCount": 43,
            "unAcknowledgedEscalationIncidentCount": 23,
            "unFinishEscalationIncidentCount": 23
        }
    ]
}',
    ),
    'ListTrendForSourceEvent' => 
    array (
      'summary' => '查询告警源趋势统计数据。',
      'path' => '/events/querySourceEventTrend',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'required' => false,
                'example' => 'xxxx',
              ),
              'instanceId' => 
              array (
                'title' => '报警ID',
                'description' => '报警或者事件ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1000',
              ),
              'instanceType' => 
              array (
                'title' => '类型',
                'description' => '类型',
                'type' => 'string',
                'required' => false,
                'example' => 'INCIDENT',
              ),
              'startTime' => 
              array (
                'title' => '开始时间',
                'description' => '开始时间',
                'type' => 'string',
                'required' => false,
                'example' => '2020-10-10 00:00:00',
              ),
              'endTime' => 
              array (
                'title' => '结束时间',
                'description' => '结束时间',
                'type' => 'string',
                'required' => false,
                'example' => '2020-10-10 23:59:59',
              ),
              'timeUnit' => 
              array (
                'title' => '时间单位毫秒',
                'description' => '时间单位毫秒',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1000',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxx',
              ),
              'data' => 
              array (
                'title' => '统计列表',
                'description' => '统计列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '统计数据',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'maxSustainTime' => 
                    array (
                      'title' => '最大持续时长',
                      'description' => '最大持续时长',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '10920312312312',
                    ),
                    'convergenceRate' => 
                    array (
                      'title' => '收敛率',
                      'description' => '收敛率',
                      'type' => 'string',
                      'example' => '90.90%',
                    ),
                    'sourceEventsStatMap' => 
                    array (
                      'title' => '按监控源分组统计数据',
                      'description' => '按监控源分组统计数据',
                      'type' => 'object',
                      'example' => '{             "Grafana": [                 {                     "evenTime": "2021-11-15 14:29:59",                     "eventCount": 4,                     "monitorSourceName": "Grafana",                     "monitorSourceCounts": null,                     "sustainTime": 15646                 },                 {                     "evenTime": "2021-11-15 14:30:36",                     "eventCount": 7,                     "monitorSourceName": "Grafana",                     "monitorSourceCounts": null,                     "sustainTime": 52638                 }             ]         }',
                    ),
                    'skipDay' => 
                    array (
                      'title' => '是否跨天',
                      'description' => '是否跨天',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'unit' => 
                    array (
                      'title' => '时间单位',
                      'description' => '时间单位',
                      'type' => 'string',
                      'example' => '1000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxx\\",\\n  \\"data\\": [\\n    {\\n      \\"maxSustainTime\\": 10920312312312,\\n      \\"convergenceRate\\": \\"90.90%\\",\\n      \\"sourceEventsStatMap\\": {\\n        \\"Grafana\\": [\\n          {\\n            \\"evenTime\\": \\"2021-11-15 14:29:59\\",\\n            \\"eventCount\\": 4,\\n            \\"monitorSourceName\\": \\"Grafana\\",\\n            \\"monitorSourceCounts\\": null,\\n            \\"sustainTime\\": 15646\\n          },\\n          {\\n            \\"evenTime\\": \\"2021-11-15 14:30:36\\",\\n            \\"eventCount\\": 7,\\n            \\"monitorSourceName\\": \\"Grafana\\",\\n            \\"monitorSourceCounts\\": null,\\n            \\"sustainTime\\": 52638\\n          }\\n        ]\\n      },\\n      \\"skipDay\\": true,\\n      \\"unit\\": \\"1000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTrendForSourceEventResponse>\\n    <requestId>xxxxx</requestId>\\n    <data>\\n        <maxSustainTime>10920312312312</maxSustainTime>\\n        <convergenceRate>90.90%</convergenceRate>\\n    </data>\\n</ListTrendForSourceEventResponse>","errorExample":""}]',
      'title' => '查询告警源趋势统计数据',
      'requestParamsDescription' => '{"instanceId":78958441,"instanceType":"ALERT","clientToken":"82af9e74-6592-435d-aa06-345562cdd37c"}',
      'responseParamsDescription' => '{
    "requestId": "gdgsdgsggsdg",
    "data": {
        "maxSustainTime": 3619249886,
        "convergenceRate": "98.57%",
        "unit": "小时",
        "startTime": "2021-11-29 20:03:15",
        "endTime": "2022-01-10 17:24:05",
        "skipDay": true,
        "sourceEventsStatMap": {
            "Grafana": [
                {
                    "evenTime": "2022-01-07 17:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-07 18:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-07 19:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-07 20:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-07 21:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-07 22:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-07 23:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 00:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 01:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 02:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 03:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 04:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 05:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 06:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 07:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 08:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 09:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 10:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 11:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 12:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 13:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 14:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 15:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 16:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 17:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 18:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 19:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 20:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 21:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 22:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-08 23:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 00:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 01:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 02:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 03:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 04:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 05:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 06:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 07:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 08:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 09:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 10:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 11:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 12:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 13:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 14:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 15:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 16:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 17:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 18:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 19:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 20:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 21:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 22:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-09 23:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 00:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 01:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 02:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 03:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 04:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 05:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 06:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 07:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 08:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 09:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 10:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 11:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 12:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 13:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 14:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 15:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 16:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                },
                {
                    "evenTime": "2022-01-10 17:00:00",
                    "eventCount": 0,
                    "monitorSourceName": "Grafana"
                }
            ]
        }
    }
}',
    ),
    'GeneratePictureLink' => 
    array (
      'summary' => '生成图片链接',
      'path' => '/rich/oss/getPictureLink',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'keys' => 
              array (
                'title' => 'keys',
                'description' => 'keys',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'oss key',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'oss key',
                ),
                'required' => false,
              ),
              'problemId' => 
              array (
                'title' => '故障id',
                'description' => '故障id',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '50002020',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxxxx',
              ),
              'data' => 
              array (
                'description' => 'data',
                'type' => 'object',
                'properties' => 
                array (
                  'links' => 
                  array (
                    'title' => 'array',
                    'description' => 'array',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'object',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'key' => 
                        array (
                          'title' => 'oss key',
                          'description' => 'oss key',
                          'type' => 'string',
                          'example' => 'problem/38b2a36d-484d-4242-b9cf-d243e53a82c6',
                        ),
                        'link' => 
                        array (
                          'title' => 'url',
                          'description' => 'url',
                          'type' => 'string',
                          'example' => 'http://gam-objects-bucket.oss-cn-shanghai.aliyuncs.com/problem/38b2a36d-484d-4242-b9cf-d243e53a82c6?Expires=1625662477&OSSAccessKeyId=LTAI5tEoRVPw8GMy1iLRCno7&Signature=1NFnt%2BnudD%2F%2BHVc31b6v5%2FFxoqg%3D',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxxxx\\",\\n  \\"data\\": {\\n    \\"links\\": [\\n      {\\n        \\"key\\": \\"problem/38b2a36d-484d-4242-b9cf-d243e53a82c6\\",\\n        \\"link\\": \\"http://gam-objects-bucket.oss-cn-shanghai.aliyuncs.com/problem/38b2a36d-484d-4242-b9cf-d243e53a82c6?Expires=1625662477&OSSAccessKeyId=LTAI5tEoRVPw8GMy1iLRCno7&Signature=1NFnt%2BnudD%2F%2BHVc31b6v5%2FFxoqg%3D\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GeneratePictureLinkResponse>\\n    <requestId>xxxxxx</requestId>\\n    <data>\\n        <links>\\n            <key>problem/38b2a36d-484d-4242-b9cf-d243e53a82c6</key>\\n            <link>http://gam-objects-bucket.oss-cn-shanghai.aliyuncs.com/problem/38b2a36d-484d-4242-b9cf-d243e53a82c6?Expires=1625662477&amp;OSSAccessKeyId=LTAI5tEoRVPw8GMy1iLRCno7&amp;Signature=1NFnt%2BnudD%2F%2BHVc31b6v5%2FFxoqg%3D</link>\\n        </links>\\n    </data>\\n</GeneratePictureLinkResponse>","errorExample":""}]',
      'title' => '生成图片链接',
      'requestParamsDescription' => '{
  "keys" : [ "oss key" ],
  "problemId" : 50002020
}',
      'responseParamsDescription' => '{
    "requestId": "xxxxxx",
    "data": {
        "links": [
            {
                "key": "problem/38b2a36d-484d-4242-b9cf-d243e53a82c6",
                "link": "http://gam-objects-bucket.oss-cn-shanghai.aliyuncs.com/problem/38b2a36d-484d-4242-b9cf-d243e53a82c6?Expires=1625662477&OSSAccessKeyId=LTAI5tEoRVPw8GMy1iLRCno7&Signature=1NFnt%2BnudD%2F%2BHVc31b6v5%2FFxoqg%3D"
            }
        ]
    }
}',
    ),
    'GeneratePictureUploadSign' => 
    array (
      'summary' => '生成图片上传签名信息。',
      'path' => '/rich/oss/generatePostPolicy',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => '参数说明',
            'type' => 'object',
            'properties' => 
            array (
              'instanceId' => 
              array (
                'title' => '资源id',
                'description' => '资源ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '123123',
              ),
              'instanceType' => 
              array (
                'title' => '资源类型',
                'description' => '资源类型：
- INCIDENT：事件图片
- ALERT：告警图片
- PROBLEM：故障图片
',
                'type' => 'string',
                'required' => false,
                'example' => 'INCIDENT',
              ),
              'files' => 
              array (
                'title' => '文件',
                'description' => '图片文件列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '图片文件列表',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'fileName' => 
                    array (
                      'title' => '文件名称',
                      'description' => '图片名称',
                      'type' => 'string',
                      'required' => false,
                      'example' => '文件',
                    ),
                    'fileType' => 
                    array (
                      'title' => '文件类型',
                      'description' => '图片类型

支持以下图片类型：

- JPEG
- PNG
- GIF',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'JPG',
                    ),
                    'fileSize' => 
                    array (
                      'title' => '文件大小',
                      'description' => '文件大小（byte）',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '100',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '本次调用请求的ID，是由阿里云为该请求生成的唯一标识符，可用于排查和定位问题。',
                'type' => 'string',
                'example' => 'e2d4306a-bf4d-4345-9ae6-158223c85dbd',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => '数据内容',
                'type' => 'object',
                'properties' => 
                array (
                  'bucketName' => 
                  array (
                    'title' => 'oss bucket name',
                    'description' => 'OSS Bucket名称',
                    'type' => 'string',
                    'example' => 'gam-objects-bucket',
                  ),
                  'policy' => 
                  array (
                    'title' => 'policy',
                    'description' => '策略名称',
                    'type' => 'string',
                    'example' => 'eyJleHBpcmF0aW9uIjoiMjAyMS0wNy0xM1QwNDowOTo0NS4yODJaIiwiY29uZGl0aW9ucyI6W1siY29udGVudC1sZW5ndGgtcmFuZ2UiLDAsMTA0ODU3NjAwXSxbInN0YXJ0cy13aXRoIiwiJGtleSIsInByb2JsZW0iXV19',
                  ),
                  'signature' => 
                  array (
                    'title' => 'signature',
                    'description' => '签名',
                    'type' => 'string',
                    'example' => 'SHqvIkwUNQd8Hervklir*****',
                  ),
                  'accessKeyId' => 
                  array (
                    'title' => 'accessKeyId',
                    'description' => 'Access Key ID',
                    'type' => 'string',
                    'example' => 'LTAI1tEoRVPw8GMy1iLRC*****',
                  ),
                  'url' => 
                  array (
                    'title' => 'url',
                    'description' => 'Bucket地址',
                    'type' => 'string',
                    'example' => 'https://*****-bucket.oss-cn-shanghai.aliyuncs.com',
                  ),
                  'files' => 
                  array (
                    'title' => 'files',
                    'description' => '图片列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '图片列表',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'fileName' => 
                        array (
                          'title' => '文件名称',
                          'description' => '图片名称',
                          'type' => 'string',
                          'example' => '文件A',
                        ),
                        'fileType' => 
                        array (
                          'title' => '文件类型',
                          'description' => '图片类型',
                          'type' => 'string',
                          'example' => 'JPG',
                        ),
                        'fileSize' => 
                        array (
                          'title' => '文件大小',
                          'description' => '图片大小',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '100',
                        ),
                        'key' => 
                        array (
                          'title' => 'oss key',
                          'description' => '图片唯一标识',
                          'type' => 'string',
                          'example' => 'problem/25a2316c-b08d-41a5-9f41-*****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"e2d4306a-bf4d-4345-9ae6-158223c85dbd\\",\\n  \\"data\\": {\\n    \\"bucketName\\": \\"gam-objects-bucket\\",\\n    \\"policy\\": \\"eyJleHBpcmF0aW9uIjoiMjAyMS0wNy0xM1QwNDowOTo0NS4yODJaIiwiY29uZGl0aW9ucyI6W1siY29udGVudC1sZW5ndGgtcmFuZ2UiLDAsMTA0ODU3NjAwXSxbInN0YXJ0cy13aXRoIiwiJGtleSIsInByb2JsZW0iXV19\\",\\n    \\"signature\\": \\"SHqvIkwUNQd8Hervklir*****\\",\\n    \\"accessKeyId\\": \\"LTAI1tEoRVPw8GMy1iLRC*****\\",\\n    \\"url\\": \\"https://*****-bucket.oss-cn-shanghai.aliyuncs.com\\",\\n    \\"files\\": [\\n      {\\n        \\"fileName\\": \\"文件A\\",\\n        \\"fileType\\": \\"JPG\\",\\n        \\"fileSize\\": 100,\\n        \\"key\\": \\"problem/25a2316c-b08d-41a5-9f41-*****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GeneratePictureUploadSignResponse>\\n    <requestId>e2d4306a-bf4d-4345-9ae6-158223c85dbd</requestId>\\n    <data>\\n        <bucketName>gam-objects-bucket</bucketName>\\n        <policy>eyJleHBpcmF0aW9uIjoiMjAyMS0wNy0xM1QwNDowOTo0NS4yODJaIiwiY29uZGl0aW9ucyI6W1siY29udGVudC1sZW5ndGgtcmFuZ2UiLDAsMTA0ODU3NjAwXSxbInN0YXJ0cy13aXRoIiwiJGtleSIsInByb2JsZW0iXV19</policy>\\n        <signature>SHqvIkwUNQd8Hervklir*****</signature>\\n        <accessKeyId>LTAI1tEoRVPw8GMy1iLRC*****</accessKeyId>\\n        <url>https://*****-bucket.oss-cn-shanghai.aliyuncs.com</url>\\n        <files>\\n            <fileName>文件A</fileName>\\n            <fileType>JPG</fileType>\\n            <fileSize>100</fileSize>\\n            <key>problem/25a2316c-b08d-41a5-9f41-*****</key>\\n        </files>\\n    </data>\\n</GeneratePictureUploadSignResponse>","errorExample":""}]',
      'title' => '生成图片上传签名信息',
    ),
    'ListServiceGroupMonitorSourceTemplates' => 
    array (
      'summary' => '查询服务组消息模版列表。',
      'path' => '/services/group/listServiceGroupMonitorSourceTemplates',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'clientToken' => 
              array (
                'title' => '幂等号',
                'description' => '幂等号',
                'type' => 'string',
                'required' => false,
                'example' => 'xxxx',
              ),
              'requestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'required' => false,
                'example' => 'xxxxx',
              ),
              'serviceGroupId' => 
              array (
                'title' => '服务组ID',
                'description' => '服务组ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1000',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'xxxx',
              ),
              'data' => 
              array (
                'title' => 'data',
                'description' => '模版列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '模版列表',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'monitorSourceId' => 
                    array (
                      'title' => '监控源ID',
                      'description' => '监控源ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1000',
                    ),
                    'templateId' => 
                    array (
                      'title' => '消息模版ID',
                      'description' => '消息模版ID',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1000',
                    ),
                    'monitorSourceName' => 
                    array (
                      'title' => '监控报警源名字',
                      'description' => '监控报警源名字',
                      'type' => 'string',
                      'example' => 'zabbix',
                    ),
                    'templateContent' => 
                    array (
                      'title' => '模板内容',
                      'description' => '模板内容',
                      'type' => 'string',
                      'example' => '""',
                    ),
                    'fields' => 
                    array (
                      'title' => '字段',
                      'description' => '字段',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '1',
                        'type' => 'string',
                        'example' => '字段',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"xxxx\\",\\n  \\"data\\": [\\n    {\\n      \\"monitorSourceId\\": 1000,\\n      \\"templateId\\": 1000,\\n      \\"monitorSourceName\\": \\"zabbix\\",\\n      \\"templateContent\\": \\"\\\\\\"\\\\\\"\\",\\n      \\"fields\\": [\\n        \\"字段\\"\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListServiceGroupMonitorSourceTemplatesResponse>\\n    <data>\\n        <monitorSourceId>1000</monitorSourceId>\\n        <templateId>1000</templateId>\\n        <monitorSourceName>zabbix</monitorSourceName>\\n    </data>\\n</ListServiceGroupMonitorSourceTemplatesResponse>","errorExample":""}]',
      'title' => '查询服务组消息模版列表',
      'requestParamsDescription' => '{"serviceGroupId":"180030020"}',
      'responseParamsDescription' => '{
 
    "requestId": "gdgsdgsggsdg",
    "data": [
        {
            "templateId": 3645786,
            "monitorSourceId": 23463,
            "monitorSourceName": "标准集成",
            "templateContent": "暂无",
            "fields": [
                "summary",
                "priority",
                "name",
                "timestamp",
                "region",
                "source",
                "application",
                "group",
                "class",
                "tags",
                "details"
            ]
        },
        {
            "templateId": 3645778,
            "monitorSourceId": 23465,
            "monitorSourceName": "Zabbix",
            "templateContent": "SSSSSSS",
            "fields": [
                "alarmContent",
                "eventId",
                "ip",
                "itemValue",
                "alarmName",
                "entityId",
                "eventType",
                "priority",
                "itemName",
                "entityName",
                "service",
                "host",
                "agentVersion"
            ]
        },
        {
            "templateId": 3645790,
            "monitorSourceId": 23466,
            "monitorSourceName": "Prometheus",
            "templateContent": "告警时间：${startsAt}\\\\n告警对象：${labels.instance}\\\\n告警名称：${labels.alertname}\\\\n告警内容：${description}",
            "fields": [
                "alerts[].generatorURL",
                "alerts[].fingerprint",
                "alerts[].annotations.summary",
                "alerts[].annotations.description",
                "alerts[].startsAt",
                "alerts[].endsAt",
                "alerts[].status",
                "alerts[].labels.severity",
                "alerts[].labels.instance",
                "alerts[].labels.alertname",
                "alerts[].labels.job",
                "commonLabels.severity",
                "commonLabels.instance",
                "commonLabels.alertname",
                "externalURL",
                "groupLabels.alertname",
                "receiver",
                "truncatedAlerts",
                "version",
                "commonAnnotations.summary",
                "commonAnnotations.description",
                "groupKey",
                "status",
                "commonLabels.job"
            ]
        },
        {
            "templateId": 3645795,
            "monitorSourceId": 23467,
            "monitorSourceName": "Nagios",
            "templateContent": "告警内容：${content}",
            "fields": [
                "notifyActionType",
                "hostName",
                "hostState",
                "content"
            ]
        },
        {
            "templateId": 3645785,
            "monitorSourceId": 23468,
            "monitorSourceName": "阿里云云监控",
            "templateContent": "告警结束时间：${timestamp}\\\\n告警对象：${dimensions}\\\\n告警名称：${alertName}\\\\n告警级别：${triggerLevel}\\\\n告警内容：当前值 ${curValue} 地域：${regionId} 应用组名：${productGroupName}",
            "fields": [
                "alertName",
                "alertState",
                "curValue",
                "dimensions",
                "expression",
                "instanceName",
                "lastTime",
                "metricName",
                "metricProject",
                "namespace",
                "preTriggerLevel",
                "productGroupName",
                "rawMetricName",
                "regionId",
                "regionName",
                "ruleId",
                "signature",
                "timestamp",
                "triggerLevel",
                "userId"
            ]
        },
        {
            "templateId": 3645787,
            "monitorSourceId": 23469,
            "monitorSourceName": "阿里云SLS",
            "templateContent": "告警时间：${alert_time}\\\\n告警对象：${project}\\\\n告警名称：${alert_name}\\\\n告警级别：${severity}\\\\n告警内容：日志库：${logstore} 触发数据：${fire_results_as_kv} 地域：${region}",
            "fields": [
                "aliuid",
                "alert_instance_id",
                "alert_id",
                "alert_name",
                "region",
                "project",
                "alert_time",
                "alert_url",
                "query_url",
                "fire_time",
                "resolve_time",
                "status",
                "fire_results_count",
                "fire_results_as_kv",
                "labels",
                "annotations_title",
                "annotations_desc",
                "severity",
                "logstore",
                "fire_results"
            ]
        },
        {
            "templateId": 3645791,
            "monitorSourceId": 23470,
            "monitorSourceName": "阿里云ARMS",
            "templateContent": "告警内容：${content}",
            "fields": [
                "content"
            ]
        },
        {
            "templateId": null,
            "monitorSourceId": 23472,
            "monitorSourceName": "腾讯云云监控",
            "templateContent": null,
            "fields": [
                "recoverTime",
                "alarmStatus",
                "alarmType",
                "firstOccurTime",
                "durationTime",
                "sessionId",
                "alarmObjInfo.namespace",
                "alarmObjInfo.region",
                "alarmObjInfo.dimensions.unInstanceId",
                "alarmObjInfo.dimensions.objId",
                "alarmObjInfo.dimensions.objName",
                "alarmObjInfo.dimensions.deviceName",
                "alarmPolicyInfo.policyId",
                "alarmPolicyInfo.policyName",
                "alarmPolicyInfo.policyType",
                "alarmPolicyInfo.conditions.periodNum",
                "alarmPolicyInfo.conditions.unit",
                "alarmPolicyInfo.conditions.period",
                "alarmPolicyInfo.conditions.metricName",
                "alarmPolicyInfo.conditions.alarmNotifyPeriod",
                "alarmPolicyInfo.conditions.calcType",
                "alarmPolicyInfo.conditions.metricShowName",
                "alarmPolicyInfo.conditions.alarmNotifyType",
                "alarmPolicyInfo.conditions.currentValue",
                "alarmPolicyInfo.conditions.calcValue",
                "alarmPolicyInfo.policyTypeCName",
                "alarmPolicyInfo.policyTypeEname",
                "alarmObjInfo.dimensions.appid",
                "alarmObjInfo.dimensions.instanceid",
                "alarmObjInfo.dimensions.rnodeid",
                "alarmObjInfo.dimensions.AppId",
                "alarmObjInfo.dimensions.InstanceId",
                "alarmObjInfo.dimensions.pnodeid",
                "alarmObjInfo.dimensions.protocol",
                "alarmObjInfo.dimensions.vip",
                "alarmObjInfo.dimensions.port",
                "alarmObjInfo.dimensions.vport",
                "alarmObjInfo.dimensions.protocol",
                "alarmObjInfo.dimensions.vpcId",
                "alarmObjInfo.dimensions.lanIp",
                "alarmObjInfo.dimensions.loadBalancerPort",
                "alarmObjInfo.dimensions.uid",
                "alarmObjInfo.dimensions.clusterid",
                "alarmObjInfo.dimensions.target",
                "alarmObjInfo.dimensions.insttype",
                "alarmObjInfo.dimensions.ClusterId",
                "alarmObjInfo.dimensions.TableInstanceId",
                "alarmObjInfo.dimensions.cluster_name",
                "alarmObjInfo.dimensions.is_master",
                "alarmObjInfo.dimensions.set_name",
                "alarmObjInfo.dimensions.type",
                "alarmObjInfo.dimensions.zk_name",
                "alarmObjInfo.dimensions.function_name",
                "alarmObjInfo.dimensions.namespace",
                "alarmObjInfo.dimensions.version",
                "alarmObjInfo.dimensions.bucket",
                "alarmObjInfo.dimensions.uniq_nat_id",
                "alarmObjInfo.dimensions.vpnconnid",
                "alarmObjInfo.dimensions.directconnectgatewayid",
                "alarmObjInfo.dimensions.peeringconnectionid",
                "alarmObjInfo.dimensions.netdetectid",
                "alarmObjInfo.dimensions.__region__",
                "alarmObjInfo.dimensions.netgroup",
                "alarmObjInfo.dimensions.projectid",
                "alarmObjInfo.dimensions.domain",
                "alarmObjInfo.dimensions.topicid",
                "alarmObjInfo.dimensions.instance_id",
                "alarmObjInfo.dimensions.consumer_group",
                "alarmObjInfo.dimensions.topicname",
                "alarmObjInfo.dimensions.partition",
                "alarmObjInfo.dimensions.FileSystemId",
                "alarmObjInfo.dimensions.directconnectid",
                "alarmObjInfo.dimensions.directconnectconnid",
                "alarmObjInfo.dimensions.objDetail.deviceLanIp",
                "alarmObjInfo.dimensions.objDetail.deviceWanIp",
                "alarmObjInfo.dimensions.objDetail.uniqVpcId",
                "alarmObjInfo.dimensions.objDetail.IP",
                "alarmObjInfo.dimensions.objDetail.PeeringConnectionName",
                "alarmObjInfo.dimensions.objDetail.QosBandwidth",
                "alarmObjInfo.dimensions.objDetail.VpcName",
                "alarmObjInfo.dimensions.objDetail.VpcId",
                "alarmObjInfo.dimensions.objDetail.VpnGatewayName",
                "alarmObjInfo.dimensions.objDetail.InternetMaxBandwidthOut",
                "alarmObjInfo.dimensions.objDetail.ar",
                "alarmObjInfo.dimensions.objDetail.bandwidth",
                "alarmObjInfo.dimensions.objDetail.circuitNumber",
                "alarmObjInfo.dimensions.objDetail.dcType",
                "alarmObjInfo.dimensions.objDetail.connLocalIp",
                "alarmObjInfo.dimensions.objDetail.connPeerIp"
            ]
        },
        {
            "templateId": null,
            "monitorSourceId": 23473,
            "monitorSourceName": "华为云云监控",
            "templateContent": null,
            "fields": [
                "message_type",
                "alarm_id",
                "alarm_name",
                "alarm_status",
                "time",
                "namespace",
                "metric_name",
                "dimension",
                "period",
                "filter",
                "comparison_operator",
                "value",
                "unit",
                "count",
                "alarmValue[].time",
                "alarmValue[].value",
                "sms_content",
                "template_variable.AccountName",
                "template_variable.Namespace",
                "template_variable.DimensionName",
                "template_variable.ResourceName",
                "template_variable.MetricName",
                "template_variable.IsAlarm",
                "template_variable.IsCycleTrigger",
                "template_variable.AlarmLevel",
                "template_variable.Region",
                "template_variable.ResourceId",
                "template_variable.PrivateIp",
                "template_variable.AlarmRule",
                "template_variable.CurrentData",
                "template_variable.AlarmTime",
                "template_variable.DataPointTime[]",
                "template_variable.AlarmRuleName",
                "template_variable.AlarmId",
                "template_variable.AlarmDesc",
                "template_variable.MonitoringRange",
                "template_variable.IsOriginalValue",
                "template_variable.Period",
                "template_variable.Filter",
                "template_variable.ComparisonOperator",
                "template_variable.Value",
                "template_variable.Unit",
                "template_variable.Count",
                "template_variable.EventContent",
                "template_variable.Link",
                "template_variable.IsIEC",
                "template_variable.DataPoint"
            ]
        },
        {
            "templateId": 3645788,
            "monitorSourceId": 23474,
            "monitorSourceName": "Cacti",
            "templateContent": "告警内容：${subject}",
            "fields": [
                "subject"
            ]
        },
        {
            "templateId": 3645796,
            "monitorSourceId": 23475,
            "monitorSourceName": "SkyWalking",
            "templateContent": "告警内容：${content}",
            "fields": [
                "content[].scopeId",
                "content[].scope",
                "content[].name",
                "content[].id0",
                "content[].id1",
                "content[].ruleName",
                "content[].alarmMessage",
                "content[].startTime"
            ]
        },
        {
            "templateId": null,
            "monitorSourceId": 23476,
            "monitorSourceName": "Open-Falcon",
            "templateContent": null,
            "fields": [
                "step",
                "priority",
                "status",
                "stra_id",
                "metric",
                "time",
                "tpl_id",
                "exp_id",
                "left_value",
                "tags",
                "endpoint"
            ]
        },
        {
            "templateId": null,
            "monitorSourceId": 23477,
            "monitorSourceName": "阿里云EventBridge",
            "templateContent": null,
            "fields": [
                "datacontenttype",
                "aliyunaccountid",
                "subject",
                "aliyunoriginalaccountid",
                "source",
                "type",
                "aliyunpublishtime",
                "specversion",
                "aliyuneventbusname",
                "id",
                "time",
                "aliyunregionid",
                "aliyunpublishaddr",
                "data",
                "data.resourceId",
                "data.publicIpAddress",
                "data.instanceName",
                "data.state",
                "data.privateIpAddress",
                "data.resourceType",
                "data.snapshotId",
                "data.snapshotType",
                "data.snapshotName",
                "data.diskId"
            ]
        },
        {
            "templateId": 3645793,
            "monitorSourceId": 23478,
            "monitorSourceName": "Grafana",
            "templateContent": "告警名称：${ruleName}\\\\n告警内容：面板id：${panelId} 仪表盘id：${dashboardId} 指标：${evalMatches.metric} 当前值：${evalMatches.value}",
            "fields": [
                "panelId",
                "dashboardId",
                "ruleName",
                "state",
                "ruleId",
                "title",
                "ruleUrl",
                "orgId",
                "evalMatches[].metric",
                "evalMatches[].value",
                "evalMatches[].tags.instance",
                "evalMatches[].tags",
                "tags",
                "message",
                "imageUrl"
            ]
        },
        {
            "templateId": 3645784,
            "monitorSourceId": 23479,
            "monitorSourceName": "阿里云Prometheus",
            "templateContent": "告警内容：${content}",
            "fields": [
                "content"
            ]
        },
        {
            "templateId": 3645789,
            "monitorSourceId": 23480,
            "monitorSourceName": "阿里云旧版SLS",
            "templateContent": "告警时间：${FireTime}\\\\n告警对象：${Project}\\\\n告警名称：${AlertDisplayName}\\\\n告警内容：仪表盘：${Dashboard} 触发表达式：${RawCondition}",
            "fields": [
                "Aliuid",
                "Project",
                "AlertID",
                "AlertName",
                "AlertDisplayName",
                "Condition",
                "Aliuid",
                "RawCondition",
                "Dashboard",
                "DashboardUrl",
                "FireTime",
                "FullResultUrl"
            ]
        },
        {
            "templateId": 3645794,
            "monitorSourceId": 23481,
            "monitorSourceName": "听云",
            "templateContent": "告警时间：${beginTime}\\\\n告警对象：${targetName}\\\\n告警级别：${eventPriority}\\\\n告警内容：${message}",
            "fields": [
                "eventTraceId",
                "targetName",
                "extra",
                "eventPriority",
                "threshold",
                "value",
                "beginTime",
                "endTime",
                "message",
                "sendTime"
            ]
        },
        {
            "templateId": 3645792,
            "monitorSourceId": 23482,
            "monitorSourceName": "监控宝",
            "templateContent": "告警时间：${fault_time}\\\\n告警对象：${task_summary}\\\\n告警名称：${task_name}\\\\n告警级别：${message_type}\\\\n告警内容：${content}",
            "fields": [
                "task_name",
                "message_status",
                "fault_time",
                "task_summary",
                "message_type",
                "task_id",
                "msg_id",
                "task_user_id",
                "task_type",
                "content",
                "message_detail",
                "message_detail.compare",
                "message_detail.unit",
                "message_detail.location_list_down",
                "message_detail.metric",
                "message_detail.location_num",
                "message_detail.value",
                "message_detail.location_type"
            ]
        },
        {
            "templateId": null,
            "monitorSourceId": 23483,
            "monitorSourceName": "京东云云监控",
            "templateContent": null,
            "fields": [
                "resourceName",
                "threshold",
                "serviceCode",
                "currentValue",
                "requestId",
                "tags",
                "resourceId",
                "metric",
                "times",
                "alertTime",
                "region",
                "ipAddress"
            ]
        },
        {
            "templateId": null,
            "monitorSourceId": 23484,
            "monitorSourceName": "Dynatrace",
            "templateContent": null,
            "fields": [
                "ProblemID",
                "ProblemSeverity",
                "PID",
                "ImpactedEntities",
                "ImpactedEntities[].type",
                "ImpactedEntities[].name",
                "ImpactedEntities[].entity",
                "ImpactedEntityNames",
                "ProblemURL",
                "ImpactedEntity",
                "ProblemDetailsText",
                "ProblemImpact",
                "ProblemTitle",
                "ProblemDetailsHTML",
                "State",
                "ProblemDetailsMarkdown",
                "Tags"
            ]
        },
        {
            "templateId": null,
            "monitorSourceId": 23485,
            "monitorSourceName": "Grafana8",
            "templateContent": null,
            "fields": [
                "commonLabels",
                "commonLabels.alertname",
                "commonLabels.tag",
                "externalURL",
                "groupLabels",
                "receiver",
                "title",
                "message",
                "version",
                "groupKey",
                "alerts",
                "alerts[].status",
                "alerts[].labels",
                "alerts[].labels.alertname",
                "alerts[].labels.tag",
                "alerts[].annotations",
                "alerts[].startsAt",
                "alerts[].endsAt",
                "alerts[].generatorURL",
                "alerts[].fingerprint",
                "alerts[].silenceURL",
                "alerts[].dashboardURL",
                "alerts[].panelURL",
                "alerts[].valueString",
                "truncatedAlerts",
                "state",
                "commonAnnotations",
                "status"
            ]
        },
        {
            "templateId": null,
            "monitorSourceId": 23486,
            "monitorSourceName": "邮件集成",
            "templateContent": null,
            "fields": [
                "FromAddress",
                "SendTo",
                "Subject",
                "MessageBody"
            ]
        }
    ]
}',
      'extraInfo' => '"data":{
		"requestId":"550DB2BE-98DE-0368-A52C-8F6BC78CD113"
	}',
    ),
    'RemoveIntegrationConfig' => 
    array (
      'summary' => '解除集成配置',
      'path' => '/integrationConfig/remove',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'integrationConfigId' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'clientToken' => 
              array (
                'title' => '幂等id',
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'requestId',
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegrationConfigExistsRouteRule',
            'errorMessage' => 'integration config exists routeRule.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotIntegrated',
            'errorMessage' => 'The specified integration config is not integrated.',
          ),
          1 => 
          array (
            'errorCode' => 'IntegationConfigAlreadyDisable',
            'errorMessage' => 'The specified integration config is already disabled.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IntegationConfigNotExists',
            'errorMessage' => 'The specified integration config does not exist.',
          ),
        ),
      ),
    ),
    'ListByMonitorSourceId' => 
    array (
      'summary' => '监控关联规则列表',
      'path' => '/routeRule/listByMonitorSourceId',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'type' => 'object',
            'properties' => 
            array (
              'monitorSourceId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'id of the request',
                'type' => 'string',
                'example' => '10REQUES-AC5C-4B59-BE11-378F117A6A88',
              ),
              'data' => 
              array (
                'title' => 'data',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'id' => 
                    array (
                      'title' => '用户id',
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'ruleName' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'ListRouteRulesByService' => 
    array (
      'summary' => '根据服务id查询流转规则',
      'path' => '/routeRule/listByService',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'type' => 'string',
              ),
              'data' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'id' => 
                    array (
                      'title' => '规则id',
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                    'ruleName' => 
                    array (
                      'title' => '规则名称',
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
              'totalCount' => 
              array (
                'title' => '流转规则数量',
                'type' => 'integer',
                'format' => 'int32',
              ),
            ),
          ),
        ),
      ),
    ),
    'GetTenantStatus' => 
    array (
      'summary' => '查询租户开通运维事件中心的状态',
      'path' => '/tenant/getTenantStatus',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'tenantRamId' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'docRequired' => true,
              ),
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'type' => 'string',
              ),
              'data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'tenantStatus' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'BillingStatistics' => 
    array (
      'summary' => '计费展示',
      'path' => '/charging/details',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ruleCount' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'ruleCountFree' => 
                  array (
                    'title' => '流转规则免费数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'subscriptionNotifyCount' => 
                  array (
                    'title' => '通知订阅数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'subscriptionNotifyCountFree' => 
                  array (
                    'title' => '通知订阅免费数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'escalationPlanCount' => 
                  array (
                    'title' => '升级策略数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'escalationPlanCountFree' => 
                  array (
                    'title' => '升级策略免费数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'hasScheduleServiceGroupCount' => 
                  array (
                    'title' => '服务排班数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'hasScheduleServiceGroupCountFree' => 
                  array (
                    'title' => '服务排班免费数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'appUserCount' => 
                  array (
                    'title' => '云钉协同数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'appUserCountFree' => 
                  array (
                    'title' => '云钉协同免费数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'eventReportApi' => 
                  array (
                    'title' => '告警上报',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'eventReportApiFree' => 
                  array (
                    'title' => '告警上报免费数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'smsSend' => 
                  array (
                    'title' => '短信条数',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'smsSendFree' => 
                  array (
                    'title' => '短信免费条数',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'voiceSend' => 
                  array (
                    'title' => '电话数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'voiceSendFree' => 
                  array (
                    'title' => '电话免费数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'emailSend' => 
                  array (
                    'title' => '邮件数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'emailSendFree' => 
                  array (
                    'title' => '邮件免费数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'imMsgSend' => 
                  array (
                    'title' => '即时通讯数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'imMsgSendFree' => 
                  array (
                    'title' => '即时通讯免费数量',
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'type' => 
                  array (
                    'title' => '系统控制下的查询状态 true开启查数据库 false关闭不查数据库',
                    'type' => 'boolean',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
    ),
    'DeleteServiceGroupScheduling' => 
    array (
      'summary' => '删除排班',
      'path' => '/services/group/scheduling/delete',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'DeleteServiceGroupSchedulingFail',
            'errorMessage' => 'The service group has been associated with route rule.	',
          ),
        ),
      ),
    ),
    'ListEscalationPlansByNoticeObject' => 
    array (
      'summary' => '根据推送对象查询升级策略',
      'path' => '/escalationPlan/listByNoticeObject',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'noticeObjectId' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'noticeObjectType' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'type' => 'string',
              ),
              'data' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'escalationPlanId' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'escalationPlanName' => 
                    array (
                      'type' => 'string',
                    ),
                    'escalationPlanScopeObjects' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'scopeObjectId' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int64',
                          ),
                          'scopeObjectName' => 
                          array (
                            'type' => 'string',
                          ),
                          'scope' => 
                          array (
                            'type' => 'string',
                          ),
                          'scopeObjectDeletedType' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int32',
                          ),
                        ),
                      ),
                    ),
                    'status' => 
                    array (
                      'type' => 'string',
                    ),
                    'modifyTime' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'UnbindUser' => 
    array (
      'summary' => '解绑用户',
      'path' => '/user/unbind',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnbindUserFail',
            'errorMessage' => 'The specified user does not exist.',
          ),
        ),
        402 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnbindUserFail',
            'errorMessage' => 'Not find userId.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnbindUserFail',
            'errorMessage' => 'Mobile app not opened.',
          ),
        ),
      ),
    ),
    'ListRouteRulesByAssignWhoId' => 
    array (
      'summary' => '获取指定分配对象的流转规则',
      'path' => '/routeRule/listByAssignWhoId',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'assignWhoId' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'assignWhoType' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'type' => 'string',
              ),
              'data' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ruleName' => 
                    array (
                      'type' => 'string',
                    ),
                    'id' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'tenantRamId' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'ListServiceGroupsByUserId' => 
    array (
      'summary' => '根据成员id查服务组',
      'path' => '/services/group/listByUserId',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'type' => 'string',
              ),
              'data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'serviceGroupId' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'isScheduled' => 
                  array (
                    'type' => 'boolean',
                  ),
                  'serviceGroupName' => 
                  array (
                    'type' => 'string',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'gemp.cn-hangzhou.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'gemp.cn-shanghai.aliyuncs.com',
    ),
  ),
);