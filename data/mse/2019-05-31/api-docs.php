<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'RPC',
    'product' => 'mse',
    'version' => '2019-05-31',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 172321,
      'title' => '标签',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListTagResources',
        1 => 'UntagResources',
        2 => 'TagResources',
      ),
    ),
    1 => 
    array (
      'id' => 163286,
      'title' => '注册配置中心',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 177199,
          'title' => '迁移上云',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'UpdateMigrationTask',
            1 => 'AddMigrationTask',
            2 => 'ListMigrationTask',
            3 => 'DeleteMigrationTask',
          ),
        ),
        1 => 
        array (
          'id' => 176890,
          'title' => '风险评估',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'PutClusterHealthCheckTask',
            1 => 'OrderClusterHealthCheckRiskNotice',
            2 => 'ListClusterHealthCheckTask',
          ),
        ),
        2 => 
        array (
          'id' => 163287,
          'title' => 'Nacos配置',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ListConfigTrack',
            1 => 'CreateNacosConfig',
            2 => 'DeleteNacosConfig',
            3 => 'DeleteNacosConfigs',
            4 => 'UpdateNacosConfig',
            5 => 'ListListenersByConfig',
            6 => 'ListListenersByIp',
            7 => 'GetNacosConfig',
            8 => 'GetNacosHistoryConfig',
            9 => 'ListNacosConfigs',
            10 => 'ListNacosHistoryConfigs',
            11 => 'CloneNacosConfig',
            12 => 'ExportNacosConfig',
            13 => 'GetImportFileUrl',
            14 => 'ImportNacosConfig',
          ),
        ),
        3 => 
        array (
          'id' => 163302,
          'title' => 'Nacos服务',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ListNamingTrack',
            1 => 'CreateNacosService',
            2 => 'ListAnsServices',
            3 => 'DeleteNacosService',
            4 => 'UpdateNacosService',
            5 => 'UpdateNacosCluster',
            6 => 'ListAnsServiceClusters',
            7 => 'CreateNacosInstance',
            8 => 'DeleteNacosInstance',
            9 => 'UpdateNacosInstance',
            10 => 'ListAnsInstances',
            11 => 'GetServiceListeners',
          ),
        ),
        4 => 
        array (
          'id' => 163312,
          'title' => 'Eureka服务',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ListEurekaServices',
            1 => 'ListEurekaInstances',
          ),
        ),
        5 => 
        array (
          'id' => 163322,
          'title' => '监控管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'QueryMonitor',
          ),
        ),
        6 => 
        array (
          'id' => 163324,
          'title' => '公网白名单管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'UpdateAcl',
          ),
        ),
        7 => 
        array (
          'id' => 163326,
          'title' => '集群管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'QueryInstancesInfo',
            1 => 'QueryClusterInfo',
            2 => 'QueryClusterDetail',
            3 => 'CreateCluster',
            4 => 'DeleteCluster',
            5 => 'UpdateCluster',
            6 => 'UpdateConfig',
            7 => 'ListClusters',
            8 => 'ListClusterTypes',
            9 => 'ListClusterVersions',
            10 => 'QueryClusterSpecification',
            11 => 'QueryClusterDiskSpecification',
            12 => 'ListInstanceCount',
            13 => 'QueryConfig',
            14 => 'GetImage',
            15 => 'UpdateImage',
            16 => 'GetMseFeatureSwitch',
            17 => 'QueryBusinessLocations',
            18 => 'ListClusterConnectionTypes',
            19 => 'QuerySlbSpec',
            20 => 'UpdateClusterSpec',
            21 => 'RestartCluster',
            22 => 'RetryCluster',
            23 => 'UpgradeCluster',
          ),
        ),
        8 => 
        array (
          'id' => 163349,
          'title' => '命名空间',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateEngineNamespace',
            1 => 'DeleteEngineNamespace',
            2 => 'UpdateEngineNamespace',
            3 => 'GetEngineNamepace',
            4 => 'ListEngineNamespaces',
          ),
        ),
        9 => 
        array (
          'id' => 163355,
          'title' => 'Zookeeper数据节点',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ImportZookeeperData',
            1 => 'GetZookeeperDataImportUrl',
            2 => 'ExportZookeeperData',
            3 => 'ListExportZookeeperData',
            4 => 'CreateZnode',
            5 => 'DeleteZnode',
            6 => 'UpdateZnode',
            7 => 'ListZnodeChildren',
            8 => 'QueryZnodeDetail',
            9 => 'ListZkTrack',
          ),
        ),
      ),
    ),
    2 => 
    array (
      'id' => 163361,
      'title' => '微服务治理中心',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 182648,
          'title' => '流量防护',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ListSentinelBlockFallbackDefinitions',
            1 => 'BindSentinelBlockFallbackDefinition',
            2 => 'ListIsolationRules',
            3 => 'CreateIsolationRule',
            4 => 'DeleteIsolationRules',
            5 => 'UpdateIsolationRule',
            6 => 'DeleteCircuitBreakerRules',
            7 => 'DeleteFlowRules',
            8 => 'UpdateFlowRule',
            9 => 'ListFlowRules',
            10 => 'CreateFlowRule',
            11 => 'CreateCircuitBreakerRule',
            12 => 'ListCircuitBreakerRules',
            13 => 'UpdateCircuitBreakerRule',
          ),
        ),
        1 => 
        array (
          'id' => 182556,
          'title' => '服务鉴权',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ListAuthPolicy',
            1 => 'UpdateAuthPolicy',
            2 => 'AddAuthPolicy',
            3 => 'RemoveAuthPolicy',
          ),
        ),
        2 => 
        array (
          'id' => 164545,
          'title' => '服务查询',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'GetServiceMethodPage',
            1 => 'GetServiceListPage',
            2 => 'GetServiceList',
          ),
        ),
        3 => 
        array (
          'id' => 164471,
          'title' => '全链路灰度',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateOrUpdateSwimmingLaneGroup',
            1 => 'DeleteSwimmingLaneGroup',
            2 => 'CreateOrUpdateSwimmingLane',
            3 => 'DeleteSwimmingLane',
            4 => 'QueryAllSwimmingLaneGroup',
            5 => 'QueryAllSwimmingLane',
            6 => 'GetTagsBySwimmingLaneGroupId',
            7 => 'QuerySwimmingLaneById',
            8 => 'ListAppBySwimmingLaneGroupTags',
            9 => 'ListAppBySwimmingLaneGroupTag',
          ),
        ),
        4 => 
        array (
          'id' => 180140,
          'title' => '无损上下线',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'GetLosslessRuleByApp',
            1 => 'ModifyLosslessRule',
            2 => 'FetchLosslessRuleList',
          ),
        ),
        5 => 
        array (
          'id' => 163364,
          'title' => '应用管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'GetApplicationList',
            1 => 'CreateMseServiceApplication',
            2 => 'CreateApplication',
            3 => 'GetOverview',
            4 => 'RemoveApplication',
          ),
        ),
        6 => 
        array (
          'id' => 163367,
          'title' => 'K8s集群治理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ModifyGovernanceKubernetesCluster',
            1 => 'GetGovernanceKubernetesCluster',
            2 => 'QueryGovernanceKubernetesCluster',
          ),
        ),
        7 => 
        array (
          'id' => 164587,
          'title' => '标签路由',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ApplyTagPolicies',
            1 => 'ListApplicationsWithTagRules',
          ),
        ),
        8 => 
        array (
          'id' => 180123,
          'title' => '消息灰度',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'GetAppMessageQueueRoute',
            1 => 'UpdateMessageQueueRoute',
          ),
        ),
        9 => 
        array (
          'id' => 163362,
          'title' => 'Mock规则',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddMockRule',
          ),
        ),
      ),
    ),
    3 => 
    array (
      'id' => 163372,
      'title' => '云原生网关',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 177200,
          'title' => '插件市场',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'GetPlugins',
            1 => 'GetPluginConfig',
            2 => 'UpdatePluginConfig',
          ),
        ),
        1 => 
        array (
          'id' => 163373,
          'title' => '域名证书',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddSSLCert',
            1 => 'AddGatewayDomain',
            2 => 'DeleteGatewayDomain',
            3 => 'UpdateSSLCert',
            4 => 'UpdateGatewayDomain',
            5 => 'ListSSLCert',
            6 => 'ListGatewayDomain',
            7 => 'GetGatewayDomainDetail',
          ),
        ),
        2 => 
        array (
          'id' => 163383,
          'title' => '网关管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddGateway',
            1 => 'ListGatewayZone',
            2 => 'AddGatewaySlb',
            3 => 'AddSecurityGroupRule',
            4 => 'DeleteGateway',
            5 => 'DeleteGatewaySlb',
            6 => 'DeleteSecurityGroupRule',
            7 => 'UpdateGatewayOption',
            8 => 'UpdateGatewayName',
            9 => 'QueryGatewayRegion',
            10 => 'QueryGatewayType',
            11 => 'GetGateway',
            12 => 'ListGateway',
            13 => 'ListGatewaySlb',
            14 => 'GetGatewayOption',
            15 => 'ListSecurityGroupRule',
            16 => 'ListSecurityGroup',
            17 => 'UpdateGatewaySpec',
            18 => 'SelectGatewaySlb',
          ),
        ),
        3 => 
        array (
          'id' => 163401,
          'title' => '服务管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddServiceSource',
            1 => 'AddGatewayServiceVersion',
            2 => 'DeleteServiceSource',
            3 => 'DeleteGatewayServiceVersion',
            4 => 'DeleteGatewayService',
            5 => 'UpdateGatewayServiceTrafficPolicy',
            6 => 'UpdateGatewayServiceVersion',
            7 => 'ListServiceSource',
            8 => 'ListGatewayService',
            9 => 'GetMseSource',
            10 => 'GetKubernetesSource',
            11 => 'GetGatewayServiceDetail',
            12 => 'UpdateServiceSource',
            13 => 'ImportServices',
            14 => 'PullServices',
            15 => 'UpdateGatewayServiceCheck',
          ),
        ),
        4 => 
        array (
          'id' => 163416,
          'title' => '安全能力',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'UpdateGatewayRouteAuth',
            1 => 'ListGatewayAuthConsumerResource',
            2 => 'UpdateGatewayAuthConsumer',
            3 => 'ListGatewayRouteOnAuth',
            4 => 'ListGatewayAuthConsumer',
            5 => 'UpdateGatewayAuthConsumerResource',
            6 => 'UpdateGatewayAuthConsumerStatus',
            7 => 'AddGatewayAuthConsumer',
            8 => 'DeleteGatewayAuthConsumerResource',
            9 => 'UpdateGatewayAuthConsumerResourceStatus',
            10 => 'DeleteGatewayAuthConsumer',
            11 => 'GetGatewayAuthConsumerDetail',
            12 => 'AddBlackWhiteList',
            13 => 'UpdateBlackWhiteList',
            14 => 'GetBlackWhiteList',
            15 => 'AddGatewayAuth',
            16 => 'GetGatewayAuthDetail',
            17 => 'AddAuthResource',
            18 => 'DeleteAuthResource',
          ),
        ),
        5 => 
        array (
          'id' => 163421,
          'title' => '路由配置',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddGatewayRoute',
            1 => 'DeleteGatewayRoute',
            2 => 'UpdateGatewayRouteHTTPRewrite',
            3 => 'UpdateGatewayRoute',
            4 => 'UpdateGatewayRouteCORS',
            5 => 'UpdateGatewayRouteHeaderOp',
            6 => 'UpdateGatewayRouteTimeout',
            7 => 'UpdateGatewayRouteRetry',
            8 => 'GetGatewayRouteDetail',
            9 => 'ListGatewayRoute',
            10 => 'UpdateGatewayRouteWafStatus',
            11 => 'ApplyGatewayRoute',
            12 => 'OfflineGatewayRoute',
          ),
        ),
        6 => 
        array (
          'id' => 191409,
          'title' => '策略配置',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateGatewayFlowRule',
            1 => 'DeleteGatewayFlowRule',
            2 => 'UpdateGatewayFlowRule',
            3 => 'ListGatewayFlowRule',
            4 => 'CreateGatewayCircuitBreakerRule',
            5 => 'DeleteGatewayCircuitBreakerRule',
            6 => 'UpdateGatewayCircuitBreakerRule',
            7 => 'ListGatewayCircuitBreakerRule',
            8 => 'CreateGatewayIsolationRule',
            9 => 'DeleteGatewayIsolationRule',
            10 => 'UpdateGatewayIsolationRule',
            11 => 'ListGatewayIsolationRule',
          ),
        ),
      ),
    ),
    4 => 
    array (
      'id' => 181319,
      'title' => '其他',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'QueryNamespace',
        1 => 'DeleteNamespace',
        2 => 'GetApplicationInstanceList',
        3 => 'CloneSentinelRuleFromAhas',
      ),
    ),
    5 => 
    array (
      'id' => 0,
      'title' => '其它',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'EnableProxyProtocol',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
      'GatewayDomain' => 
      array (
        'title' => 'A short description of struct',
        'description' => 'A short description of struct',
        'type' => 'object',
        'properties' => 
        array (
          'Id' => 
          array (
            'title' => 'Domain Id',
            'description' => 'Domain Id',
            'type' => 'integer',
            'format' => 'int64',
            'example' => '36',
          ),
          'Name' => 
          array (
            'title' => 'Domain Name',
            'description' => 'Domain Name',
            'type' => 'string',
            'example' => 'test.com',
          ),
          'Protocol' => 
          array (
            'title' => 'domainn的协议',
            'description' => 'domainn的协议',
            'type' => 'string',
            'example' => 'HTTPS',
          ),
          'MustHttps' => 
          array (
            'title' => '是否强制跳转',
            'description' => '是否强制HTTPS',
            'type' => 'string',
            'example' => 'true',
          ),
          'CertIdentifier' => 
          array (
            'title' => '使用的证书Id',
            'description' => '使用的证书Id',
            'type' => 'string',
            'example' => '595xx36-cn-hangzhou',
          ),
          'GatewayId' => 
          array (
            'title' => '网关ID',
            'description' => '网关ID',
            'type' => 'integer',
            'format' => 'int64',
            'example' => '1',
          ),
          'GatewayUniqueId' => 
          array (
            'title' => '网关唯一标识',
            'description' => '网关唯一标识',
            'type' => 'string',
            'example' => 'gw-c9bc5afd61014165bd58f621b491****',
          ),
          'GmtCreate' => 
          array (
            'title' => '创建时间',
            'description' => '创建时间',
            'type' => 'string',
            'example' => '2022-07-31 10:16:46',
          ),
          'GmtModified' => 
          array (
            'title' => '修改时间',
            'description' => '修改时间',
            'type' => 'string',
            'example' => '2022-08-11 15:28:47',
          ),
          'GatewayName' => 
          array (
            'title' => '网关名称',
            'description' => '网关名称',
            'type' => 'string',
            'example' => 'test',
          ),
        ),
      ),
      'GatewayOption' => 
      array (
        'title' => 'A short description of struct',
        'description' => '网关选项描述。',
        'type' => 'object',
        'properties' => 
        array (
          'TraceDetails' => 
          array (
            'title' => 'xtrace config option',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'TraceEnabled' => 
              array (
                'title' => 'trace是否开启',
                'description' => '是否开通XTrace。',
                'type' => 'boolean',
                'required' => true,
                'enumValueTitles' => 
                array (
                  'false' => '关闭xtrace',
                  'true' => '开启xtrace',
                ),
                'example' => 'true',
              ),
              'Sample' => 
              array (
                'title' => 'trace采样率，默认为10',
                'description' => 'XTrace的采样率。',
                'type' => 'integer',
                'format' => 'int64',
                'enumValueTitles' => 
                array (
                ),
                'example' => '10',
                'default' => '10',
              ),
              'TraceType' => 
              array (
                'title' => 'trace类型，可选XTRACE和SKYWALKING',
                'description' => 'trace类型，可选XTRACE和SKYWALKING',
                'type' => 'string',
                'example' => 'XTRACE',
                'default' => 'XTRACE',
              ),
              'ServiceId' => 
              array (
                'title' => 'SkyWalking服务Id，trace类型为SKYWALKING时必填',
                'description' => 'SkyWalking服务Id，trace类型为SKYWALKING时必填',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10458',
              ),
              'ServicePort' => 
              array (
                'title' => 'SkyWalking服务端口，trace类型为SKYWALKING时必填',
                'description' => 'SkyWalking服务端口，trace类型为SKYWALKING时必填',
                'type' => 'string',
                'example' => '80',
              ),
            ),
          ),
          'LogConfigDetails' => 
          array (
            'title' => '日志配置详情',
            'description' => '日志投递服务描述。',
            'type' => 'object',
            'properties' => 
            array (
              'LogEnabled' => 
              array (
                'title' => '是否开启日志投递',
                'description' => '是否开启日志投递SLS服务。',
                'type' => 'boolean',
                'required' => true,
                'enumValueTitles' => 
                array (
                  'true' => '开启日志投递',
                  'false' => '关闭日志投递',
                ),
                'example' => 'true',
              ),
              'ProjectName' => 
              array (
                'title' => '投递的目标project',
                'description' => '日志投递的目的。',
                'type' => 'string',
                'example' => 'project',
              ),
              'LogStoreName' => 
              array (
                'title' => '投递的目标logstore',
                'description' => '日志存储名称。',
                'type' => 'string',
                'example' => 'name',
              ),
            ),
          ),
          'EnableHardwareAcceleration' => 
          array (
            'title' => '是否开启硬件加速',
            'description' => '是否开启硬件加速',
            'type' => 'boolean',
            'example' => 'true',
          ),
          'DisableHttp2Alpn' => 
          array (
            'title' => '是否禁用http',
            'description' => '是否关闭HTTP 2.0协议',
            'type' => 'boolean',
            'example' => 'true',
          ),
          'EnableWaf' => 
          array (
            'title' => '是否开启waf',
            'description' => '是否开启waf',
            'type' => 'boolean',
            'example' => 'true',
          ),
        ),
      ),
      'GatewayService' => 
      array (
        'title' => 'A short description of struct',
        'description' => '网关服务描述',
        'type' => 'object',
        'properties' => 
        array (
          'Id' => 
          array (
            'title' => '服务id',
            'description' => '服务id',
            'type' => 'integer',
            'format' => 'int64',
            'example' => '1',
          ),
          'Name' => 
          array (
            'title' => '服务名',
            'description' => '服务名',
            'type' => 'string',
            'example' => 'test',
          ),
          'SourceType' => 
          array (
            'title' => '服务来源',
            'description' => '服务来源',
            'type' => 'string',
            'example' => 'MSE',
          ),
          'GatewayTrafficPolicy' => 
          array (
            'title' => '服务的策略',
            'description' => '服务的策略',
            '$ref' => '#/components/schemas/TrafficPolicy',
          ),
          'GatewayUniqueId' => 
          array (
            'title' => '网关uniqueId',
            'description' => '网关实例id',
            'type' => 'string',
            'example' => 'gw-913a49bab6c5461187a3305fb8da****',
          ),
          'MetaInfo' => 
          array (
            'title' => '元信息',
            'description' => '服务地址信息（当服务来源为DNS或固定地址时）',
            'type' => 'string',
            'example' => '[\\"192.168.0.xxx:80\\"]',
          ),
          'Namespace' => 
          array (
            'title' => '服务所属namesapce',
            'description' => '服务所属namesapce',
            'type' => 'string',
            'example' => 'public',
          ),
          'GroupName' => 
          array (
            'title' => '服务所属group',
            'description' => '服务所属group',
            'type' => 'string',
            'example' => 'DEFAULT_GROUP',
          ),
        ),
      ),
      'TrafficPolicy' => 
      array (
        'title' => 'A short description of struct',
        'description' => '服务流量管理。',
        'type' => 'object',
        'properties' => 
        array (
          'TlsSetting' => 
          array (
            'title' => 'tls相关配置',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'TlsMode' => 
              array (
                'title' => 'tls模式。为枚举类，可为NONE, SIMPLE, MUITUAL',
                'description' => '到后端服务的TLS模式。
- DISABLE（明文，不使用TLS）。
- SIMPLE（开启TLS）。
- MUTUAL（双向TLS）。',
                'type' => 'string',
                'required' => true,
                'enumValueTitles' => 
                array (
                ),
                'example' => 'SIMPLE',
              ),
              'CertId' => 
              array (
                'title' => '使用的证书id，仅当为mutual时需要填写',
                'description' => '在云盾托管的证书ID。',
                'type' => 'string',
                'example' => '6456988-cn-hangzhou',
              ),
              'CaCertContent' => 
              array (
                'title' => 'ca证书内容',
                'description' => '信任的CA证书链，在双向TLS中，如果后端证书为私有CA签发，需要将其CA证书添加到该信任链中。',
                'type' => 'string',
                'example' => '-----BEGIN CERTIFICATE----- MIIH0zCCBbugAwIBAgIIXsO3pkN/pOAwDQYJKoZIhvcNAQEFBQAwQjESMBAGA1UE AwwJQUNDVlJBSVoxMRAwDgYDVQQLDAdQS0lBQ0NWMQ0wCwYDVQQKDARBQ0NWMQsw CQYDVQQGEwJFUzAeFw0xMTA1MDUwOTM3MzdaFw0zMDEyMzEwOTM3MzdaMEIxEjAQ BgNVBAMMCUFDQ1ZSQUlaMTEQMA4GA1UECwwHUEtJQUNDVjENMAsGA1UECgwEQUND VjELMAkGA1UEBhMCRVMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCb qau/YUqXry+XZpp0X9DZlv3P4uRm7x8fRzPCRKPfmt4ftVTdFXxpNRFvu8gMjmoY HtiP2Ra8EEg2XPBjs5BaXCQ316PWywlxufEBcoSwfdtNgM3802/J+Nq2DoLSRYWo G2ioPej0RGy9ocLLA76MPhMAhN9KSMDjIgro6TenGEyxCQ0jVn8ETdkXhBilyNpA lHPrzg5XPAOBOp0KoVdDaaxXbXmQeOW1tDvYvEyNKKGno6e6Ak4l0Squ7a4DIrhr IA8wKFSVf+DuzgpmndFALW4ir50awQUZ0m/A8p/4e7MCQvtQqR0tkw8jq8bBD5L/ 0KIV9VMJcRz/RROE5iZe+OCIHAr8Fraocwa48GOEAqDGWuzndN9wrqODJerWx5eH k6fGioozl2A3ED6XPm4pFdahD9GILBKfb6qkxkLrQaLjlUPTAYVtjrs78yM2x/47 4KElB0iryYl0/wiPgL/AlmXz7uxLaL2diMMxs0Dx6M/2OLuc5NF/1OVYm3z61PMO m3WR5LpSLhl+0fXNWhn8ugb2+1KoS5kE3fj5tItQo05iifCHJPqDQsGH+tUtKSpa cXpkatcnYGMN285J9Y0fkIkyF/hzQ7jSWpOGYdbhdQrqeWZ2iE9x6wQl1gpaepPl uUsXQA+xtrn13k/c4LOsOxFwYIRKQ26ZIMApcQrAZQIDAQABo4ICyzCCAscwfQYI KwYBBQUHAQEEcTBvMEwGCCsGAQUFBzAChkBodHRwOi8vd3d3LmFjY3YuZXMvZmls ZWFkbWluL0FyY2hpdm9zL2NlcnRpZmljYWRvcy9yYWl6YWNjdjEuY3J0MB8GCCsG AQUFBzABhhNodHRwOi8vb2NzcC5hY2N2LmVzMB0GA1UdDgQWBBTSh7Tj3zcnk1X2 VuqB5TbMjB4/vTAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNKHtOPfNyeT VfZW6oHlNsyMHj+9MIIBcwYDVR0gBIIBajCCAWYwggFiBgRVHSAAMIIBWDCCASIG CCsGAQUFBwICMIIBFB6CARAAQQB1AHQAbwByAGkAZABhAGQAIABkAGUAIABDAGUA cgB0AGkAZgBpAGMAYQBjAGkA8wBuACAAUgBhAO0AegAgAGQAZQAgAGwAYQAgAEEA QwBDAFYAIAAoAEEAZwBlAG4AYwBpAGEAIABkAGUAIABUAGUAYwBuAG8AbABvAGcA 7QBhACAAeQAgAEMAZQByAHQAaQBmAGkAYwBhAGMAaQDzAG4AIABFAGwAZQBjAHQA cgDzAG4AaQBjAGEALAAgAEMASQBGACAAUQA0ADYAMAAxADEANQA2AEUAKQAuACAA QwBQAFMAIABlAG4AIABoAHQAdABwADoALwAvAHcAdwB3AC4AYQBjAGMAdgAuAGUA czAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5hY2N2LmVzL2xlZ2lzbGFjaW9uX2Mu aHRtMFUGA1UdHwROMEwwSqBIoEaGRGh0dHA6Ly93d3cuYWNjdi5lcy9maWxlYWRt aW4vQXJjaGl2b3MvY2VydGlmaWNhZG9zL3JhaXphY2N2MV9kZXIuY3JsMA4GA1Ud DwEB/wQEAwIBBjAXBgNVHREEEDAOgQxhY2N2QGFjY3YuZXMwDQYJKoZIhvcNAQEF BQADggIBAJcxAp/n/UNnSEQU5CmH7UwoZtCPNdpNYbdKl02125DgBS4OxnnQ8pdp D70ER9m+27Up2pvZrqmZ1dM8MJP1jaGo/AaNRPTKFpV8M9xii6g3+CfYCS0b78gU JyCpZET/LtZ1qmxNYEAZSUNUY9rizLpm5U9EelvZaoErQNV/+QEnWCzI7UiRfD+m AM/EKXMRNt6GGT6d7hmKG9Ww7Y49nCrADdg9ZuM8Db3VlFzi4qc1GwQA9j9ajepD vV+JHanBsMyZ4k0ACtrJJ1vnE5Bc5PUzolVt3OAJTS+xJlsndQAJxGJ3KQhfnlms tn6tn1QwIgPBHnFk/vk4CpYY3QIUrCPLBhwepH2NDd4nQeit2hW3sCPdK6jT2iWH 7ehVRE2I9DZ+hJp4rPcOVkkO1jMl1oRQQmwgEh0q1b688nCBpHBgvgW1m54ERL5h I6zppSSMEYCUWqKiuUnSwdzRp+0xESyeGabu4VXhwOrPDYTkF7eifKXeVSUG7szA h1xA2syVP1XgNce4hL60Xc16gwFy7ofmXx2utYXGJt/mwZrpHgJHnyqobalbz+xF d3+YJ5oyXSrjhO7FmGYvliAd3djDJ9ew+f7Zfc3Qn48LFFhRny+Lwzgt3uiP1o2H pPVWQxaZLPSkVrQ0uGE3ycJYgBugl6H8WY3pEfbRD0tVNEYqi4Y7 -----END CERTIFICATE-----',
              ),
              'Sni' => 
              array (
                'title' => '到后端服务些带',
                'description' => '建立TLS链接时使用的SNI。',
                'type' => 'string',
                'example' => 'www.aliyun.com',
              ),
            ),
          ),
          'LoadBalancerSettings' => 
          array (
            'title' => '负载均衡相关配置',
            'description' => '负载均衡相关配置。',
            'type' => 'object',
            'properties' => 
            array (
              'LoadbalancerType' => 
              array (
                'title' => '负载均衡类型，枚举类可为ROUND_ROBIN, LEAST_CONN,RANDOM, CONSISTENT_HASH',
                'description' => '负载均衡类型：

-     ROUND_ROBIN：轮询。
-     LEAST_CONN：最少连接数。
-     RANDOM：随机。
-     CONSISTENT_HASH：一致性Hash。',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                ),
                'example' => 'RANDOM',
              ),
              'ConsistentHashLBConfig' => 
              array (
                'title' => '一致性hash相关配置',
                'description' => '数据结构。',
                'type' => 'object',
                'properties' => 
                array (
                  'ParameterName' => 
                  array (
                    'title' => '使用根据header和参数路由时生效',
                    'description' => '使用一致性Hash时的基于参数，如果是基于参数则为URL参数名，如果是基于Header则是Header名。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'HttpCookie' => 
                  array (
                    'title' => '使用cookie时配置',
                    'description' => '仅当ConsistentHashLBType需要填写Cookie相关的详细配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Name' => 
                      array (
                        'title' => 'cookie名',
                        'description' => 'Cookie名称。',
                        'type' => 'string',
                        'example' => 'test',
                      ),
                      'Path' => 
                      array (
                        'title' => 'cookie path',
                        'description' => 'Cookie所在Path路径。',
                        'type' => 'string',
                        'example' => '/path',
                      ),
                      'TTL' => 
                      array (
                        'title' => 'cookie生命周期',
                        'description' => 'Cookie设置的生命周期。',
                        'type' => 'string',
                        'example' => '10s',
                      ),
                    ),
                  ),
                  'ConsistentHashLBType' => 
                  array (
                    'title' => 'HEADER, COOKIE, SOURCE_IP, QUERY_PARAMETER',
                    'description' => '一致性Hash基于的参数类型。

- QUERY_PARAMETER：请求参数。
- COOKIE：Cookie。
- SOURCE_IP：源IP。
- HEADER：请求头。',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                    ),
                    'example' => 'QUERY_PARAMETER',
                  ),
                ),
              ),
              'WarmupDuration' => 
              array (
                'title' => '预热时间(单位/s)',
                'description' => '预热时间（单位/s）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '5',
              ),
            ),
            'enumValueTitles' => 
            array (
            ),
          ),
        ),
      ),
    ),
  ),
  'apis' => 
  array (
    'ListTagResources' => 
    array (
      'summary' => '查标签接口。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '地域。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '下一个查询开始Token',
            'description' => '下一个查询开始Token。',
            'type' => 'string',
            'required' => false,
            'example' => 'AAAAAV3MpHK1AP0pfERHZN5pu6kywps2Ezza3n8HAAzCCqsi',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '资源类型',
            'description' => '资源类型：

- CLUSTER注册配置中心。

- GATEWAY云原生网关。',
            'type' => 'string',
            'required' => true,
            'example' => 'CLUSTER',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '资源ID,最多 50个子项',
            'description' => '资源ID，最多 50个子项。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'mse-cn-7pp2st29t16',
            ),
            'required' => false,
            'maxItems' => 51,
          ),
        ),
        4 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '标签列表，最多包含20个子项',
            'description' => '标签列表，最多包含20个子项。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签组合。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'title' => '标签键',
                  'description' => '标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'title' => '标签值',
                  'description' => '标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'prd',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'title' => '下一个查询开始Token，NextToken为空说明没有下一个',
                'description' => '下一个查询开始Token，NextToken为空说明没有下一个。',
                'type' => 'string',
                'example' => 'AAAAAV3MpHK1AP0pfERHZN5pu6ng3BeUyo2zbY5wgL1DBa2T',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '92ED7C9C-84A2-595F-87FE-354F84C0F739',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TagResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TagResource' => 
                  array (
                    'title' => '资源列表',
                    'description' => '资源列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '由资源及其标签组成的集合，包含了资源ID、资源类型和标签键值等信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ResourceId' => 
                        array (
                          'title' => '资源ID',
                          'description' => '资源ID。',
                          'type' => 'string',
                          'example' => 'mse-cn-7pp2st29t16',
                        ),
                        'ResourceType' => 
                        array (
                          'title' => '资源类型',
                          'description' => '资源类型。',
                          'type' => 'string',
                          'example' => 'cluster',
                        ),
                        'TagValue' => 
                        array (
                          'title' => '标签值',
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'prd',
                        ),
                        'TagKey' => 
                        array (
                          'title' => '标签键',
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'env',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"NextToken\\": \\"AAAAAV3MpHK1AP0pfERHZN5pu6ng3BeUyo2zbY5wgL1DBa2T\\",\\n  \\"RequestId\\": \\"92ED7C9C-84A2-595F-87FE-354F84C0F739\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true,\\n  \\"TagResources\\": {\\n    \\"TagResource\\": [\\n      {\\n        \\"ResourceId\\": \\"mse-cn-7pp2st29t16\\",\\n        \\"ResourceType\\": \\"cluster\\",\\n        \\"TagValue\\": \\"prd\\",\\n        \\"TagKey\\": \\"env\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取标签列表',
    ),
    'UntagResources' => 
    array (
      'summary' => '删标签接口。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '地域。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '资源类型',
            'description' => '资源类型：

- CLUSTER注册配置中心。

- GATEWAY云原生网关。',
            'type' => 'string',
            'required' => true,
            'example' => 'CLUSTER',
          ),
        ),
        2 => 
        array (
          'name' => 'All',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否全部删除，只针对TagKey.N为空时有效。 取值范围： true  false True False  默认是 false',
            'description' => '是否全部删除，只针对TagKey.N为空时有效。 
取值范围：
- true
- false

默认取值为false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '资源ID，最多50个子项',
            'description' => '资源ID，最多50个子项。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '实例ID。
>表示传入第几个实例ID。例如： 
- **ResourceId.0**表示传入第一个实例ID。
 - **ResourceId.1**表示传入第二个实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'mse-cn-7pp2st29t16',
            ),
            'required' => true,
            'maxItems' => 51,
          ),
        ),
        4 => 
        array (
          'name' => 'TagKey',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '标签键，最多20个子项',
            'description' => '标签键，最多20个子项。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源的标签键。N的取值范围：1~20。一旦传入该值，则不允许为空字符串。最多支持128个字符，不能以aliyun和acs:开头，不能包含***http://***  或者 ***https://***。',
              'type' => 'string',
              'required' => false,
              'example' => 'env',
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '58E06A0A-BD2C-47A0-99C2-B100F353****',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"58E06A0A-BD2C-47A0-99C2-B100F353****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除标签',
    ),
    'TagResources' => 
    array (
      'summary' => '为指定的资源打上标签。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '地域。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '资源类型',
            'description' => '资源类型：

- CLUSTER 注册配置中心。

- GATEWAY 云原生网关。',
            'type' => 'string',
            'required' => true,
            'example' => 'CLUSTER',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '实例ID。
>表示传入第几个实例ID。例如： 
- **ResourceId.0**表示传入第一个实例ID。
 - **ResourceId.1**表示传入第二个实例ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'mse-cn-7pp2st29t16',
            ),
            'required' => false,
            'maxItems' => 51,
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '标签列表，最多包含20个子项',
            'description' => '标签列表，最多包含20个子项。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息集合。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'title' => '标签键',
                  'description' => '资源的标签键。N的取值范围：1~20。一旦传入该值，则不允许为空字符串。最多支持128个字符，不能以aliyun和acs:开头，不能包含http://或者https://。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'title' => '标签值',
                  'description' => '标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'prd',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 21,
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E0A79810-9396-521C-A09D-E757B3E2BAF4',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E0A79810-9396-521C-A09D-E757B3E2BAF4\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '添加标签',
    ),
    'UpdateMigrationTask' => 
    array (
      'summary' => '调用接口更新迁移上云任务。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'ClusterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群类型。

- Nacos-Ans
- ZooKeeper
- Eureka',
            'type' => 'string',
            'required' => false,
            'example' => 'Nacos-Ans',
          ),
        ),
        3 => 
        array (
          'name' => 'OriginInstanceAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源实例节点地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.1.1:8848',
          ),
        ),
        4 => 
        array (
          'name' => 'OriginInstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => '来源集群',
          ),
        ),
        5 => 
        array (
          'name' => 'OriginInstanceNamespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间列表，当来源集群是Nacos时选填。',
            'type' => 'string',
            'required' => false,
            'example' => 'namesapceId1,namesapceId2',
          ),
        ),
        6 => 
        array (
          'name' => 'TargetInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-cn-ud82*****',
          ),
        ),
        7 => 
        array (
          'name' => 'TargetClusterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => '目标集群',
          ),
        ),
        8 => 
        array (
          'name' => 'TargetClusterUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标实例Url。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-66*****-nacos-ans.mse.aliyuncs.com:8848',
          ),
        ),
        9 => 
        array (
          'name' => 'ProjectDesc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述。',
            'type' => 'string',
            'required' => false,
            'example' => '这是一段描述',
          ),
        ),
        10 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '数据结构。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '任务ID。',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'UserId' => 
                  array (
                    'description' => '用户ID。',
                    'type' => 'string',
                    'example' => '183876217*****',
                  ),
                  'ClusterType' => 
                  array (
                    'description' => '集群类型。

- Nacos-Ans
- ZooKeeper
- Eureka',
                    'type' => 'string',
                    'example' => 'Nacos-Ans',
                  ),
                  'OriginInstanceAddress' => 
                  array (
                    'description' => '源实例节点地址。',
                    'type' => 'string',
                    'example' => '192.168.100.2:2181',
                  ),
                  'OriginInstanceName' => 
                  array (
                    'description' => '源实例名称。',
                    'type' => 'string',
                    'example' => 'src',
                  ),
                  'OriginInstanceNamespace' => 
                  array (
                    'description' => '命名空间列表，当来源集群是Nacos时选填。',
                    'type' => 'string',
                    'example' => 'fsdfsdfdsf',
                  ),
                  'TargetInstanceId' => 
                  array (
                    'description' => '目标实例ID。',
                    'type' => 'string',
                    'example' => 'mse-cn-zvp2u*****',
                  ),
                  'TargetClusterName' => 
                  array (
                    'description' => '目标实例名称。',
                    'type' => 'string',
                    'example' => 'multiple-nacos',
                  ),
                  'TargetClusterUrl' => 
                  array (
                    'description' => '目标实例Url。',
                    'type' => 'string',
                    'example' => 'mse-0b*****-nacos-ans.mse.aliyuncs.com:8848',
                  ),
                  'ProjectDesc' => 
                  array (
                    'description' => '描述。',
                    'type' => 'string',
                    'example' => '1232345',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '修改日期。

',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AF21683A-29C7-4853-AC0F-B5ADEE4****',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"200\\",\\n  \\"Data\\": {\\n    \\"Id\\": \\"1\\",\\n    \\"UserId\\": \\"183876217*****\\",\\n    \\"ClusterType\\": \\"Nacos-Ans\\",\\n    \\"OriginInstanceAddress\\": \\"192.168.100.2:2181\\",\\n    \\"OriginInstanceName\\": \\"src\\",\\n    \\"OriginInstanceNamespace\\": \\"fsdfsdfdsf\\",\\n    \\"TargetInstanceId\\": \\"mse-cn-zvp2u*****\\",\\n    \\"TargetClusterName\\": \\"multiple-nacos\\",\\n    \\"TargetClusterUrl\\": \\"mse-0b*****-nacos-ans.mse.aliyuncs.com:8848\\",\\n    \\"ProjectDesc\\": \\"1232345\\",\\n    \\"GmtCreate\\": \\"2022-01-07T10:07:57.000+0000\\",\\n    \\"GmtModified\\": \\"2022-01-07T10:07:57.000+0000\\"\\n  },\\n  \\"RequestId\\": \\"AF21683A-29C7-4853-AC0F-B5ADEE4****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新迁移上云任务',
    ),
    'AddMigrationTask' => 
    array (
      'summary' => '调用接口添加迁移任务。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群类型。

- Nacos-Ans
- ZooKeeper
- Eureka',
            'type' => 'string',
            'required' => false,
            'example' => 'Nacos-Ans',
          ),
        ),
        2 => 
        array (
          'name' => 'OriginInstanceAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源实例节点地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.1.1:8848',
          ),
        ),
        3 => 
        array (
          'name' => 'OriginInstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => '来源集群',
          ),
        ),
        4 => 
        array (
          'name' => 'OriginInstanceNamespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间列表，当来源集群是Nacos时选填。',
            'type' => 'string',
            'required' => false,
            'example' => 'namesapceId1,namesapceId2',
          ),
        ),
        5 => 
        array (
          'name' => 'TargetInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-cn-ud82*****',
          ),
        ),
        6 => 
        array (
          'name' => 'TargetClusterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => '目标集群',
          ),
        ),
        7 => 
        array (
          'name' => 'TargetClusterUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标实例Url。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-66*****-nacos-ans.mse.aliyuncs.com:8848',
          ),
        ),
        8 => 
        array (
          'name' => 'ProjectDesc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述。',
            'type' => 'string',
            'required' => false,
            'example' => '这是一段描述',
          ),
        ),
        9 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Data' => 
              array (
                'description' => '数据结构。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '任务ID。',
                    'type' => 'string',
                    'example' => '12',
                  ),
                  'UserId' => 
                  array (
                    'description' => '用户ID。',
                    'type' => 'string',
                    'example' => '183876217*****',
                  ),
                  'ClusterType' => 
                  array (
                    'description' => '集群类型。

- Nacos-Ans
- ZooKeeper
- Eureka',
                    'type' => 'string',
                    'example' => 'Nacos-Ans',
                  ),
                  'OriginInstanceAddress' => 
                  array (
                    'description' => '源实例节点地址。',
                    'type' => 'string',
                    'example' => '192.168.1.1:8848
',
                  ),
                  'OriginInstanceName' => 
                  array (
                    'description' => '源实例名称。',
                    'type' => 'string',
                    'example' => '来源集群',
                  ),
                  'OriginInstanceNamespace' => 
                  array (
                    'description' => '命名空间列表，当来源集群是Nacos时选填。',
                    'type' => 'string',
                    'example' => 'namesapceId1,namesapceId2',
                  ),
                  'TargetInstanceId' => 
                  array (
                    'description' => '目标实例ID。',
                    'type' => 'string',
                    'example' => 'mse-cn-7pp2w*****',
                  ),
                  'TargetClusterName' => 
                  array (
                    'description' => '目标实例名称。',
                    'type' => 'string',
                    'example' => '目标集群',
                  ),
                  'TargetClusterUrl' => 
                  array (
                    'description' => '目标实例Url。',
                    'type' => 'string',
                    'example' => 'mse-94d****-nacos-ans.mse.aliyuncs.com:8848',
                  ),
                  'ProjectDesc' => 
                  array (
                    'description' => '描述。',
                    'type' => 'string',
                    'example' => 'testsdfsdfsd',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7466566F-F30F-4A29-965D-3E0AF21D****',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => 'The request is processed successfully.',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Data\\": {\\n    \\"Id\\": \\"12\\",\\n    \\"UserId\\": \\"183876217*****\\",\\n    \\"ClusterType\\": \\"Nacos-Ans\\",\\n    \\"OriginInstanceAddress\\": \\"192.168.1.1:8848\\\\n\\",\\n    \\"OriginInstanceName\\": \\"来源集群\\",\\n    \\"OriginInstanceNamespace\\": \\"namesapceId1,namesapceId2\\",\\n    \\"TargetInstanceId\\": \\"mse-cn-7pp2w*****\\",\\n    \\"TargetClusterName\\": \\"目标集群\\",\\n    \\"TargetClusterUrl\\": \\"mse-94d****-nacos-ans.mse.aliyuncs.com:8848\\",\\n    \\"ProjectDesc\\": \\"testsdfsdfsd\\"\\n  },\\n  \\"RequestId\\": \\"7466566F-F30F-4A29-965D-3E0AF21D****\\",\\n  \\"Message\\": \\"The request is processed successfully.\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '添加迁移上云任务',
    ),
    'ListMigrationTask' => 
    array (
      'summary' => '调用接口查询迁移上云任务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'OriginInstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'whdc',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '数组结构。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Id' => 
                    array (
                      'description' => '任务ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'UserId' => 
                    array (
                      'description' => '用户ID。',
                      'type' => 'string',
                      'example' => '2',
                    ),
                    'ClusterType' => 
                    array (
                      'description' => '集群类型。

- Nacos-Ans
- ZooKeeper
- Eureka',
                      'type' => 'string',
                      'example' => 'Nacos-Ans',
                    ),
                    'OriginInstanceAddress' => 
                    array (
                      'description' => '源实例节点地址。',
                      'type' => 'string',
                      'example' => '192.168.1.1:8848',
                    ),
                    'OriginInstanceName' => 
                    array (
                      'description' => '源实例名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'OriginInstanceNamespace' => 
                    array (
                      'description' => '命名空间列表，当来源集群是Nacos时选填。',
                      'type' => 'string',
                      'example' => 'fsdfsdfdsf',
                    ),
                    'TargetInstanceId' => 
                    array (
                      'description' => '目标实例ID。',
                      'type' => 'string',
                      'example' => 'mse-cn-zv*****',
                    ),
                    'TargetClusterName' => 
                    array (
                      'description' => '目标实例名称。',
                      'type' => 'string',
                      'example' => 'multiple-nacos',
                    ),
                    'TargetClusterUrl' => 
                    array (
                      'description' => '目标实例Url。',
                      'type' => 'string',
                      'example' => 'mse-f1******-nacos-ans.mse.aliyuncs.com:8848',
                    ),
                    'ProjectDesc' => 
                    array (
                      'description' => '描述。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'GmtCreate' => 
                    array (
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2022-01-07T10:07:57.000+0000',
                    ),
                    'GmtModified' => 
                    array (
                      'description' => '更新时间。',
                      'type' => 'string',
                      'example' => '2021-12-30T06:41:52.000+0000',
                    ),
                  ),
                ),
              ),
              'PageSize' => 
              array (
                'description' => '分页大小。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '451EBE59-5F33-5B15-83C1-78593B9*****',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"200\\",\\n  \\"Data\\": [\\n    {\\n      \\"Id\\": 1,\\n      \\"UserId\\": \\"2\\",\\n      \\"ClusterType\\": \\"Nacos-Ans\\",\\n      \\"OriginInstanceAddress\\": \\"192.168.1.1:8848\\",\\n      \\"OriginInstanceName\\": \\"test\\",\\n      \\"OriginInstanceNamespace\\": \\"fsdfsdfdsf\\",\\n      \\"TargetInstanceId\\": \\"mse-cn-zv*****\\",\\n      \\"TargetClusterName\\": \\"multiple-nacos\\",\\n      \\"TargetClusterUrl\\": \\"mse-f1******-nacos-ans.mse.aliyuncs.com:8848\\",\\n      \\"ProjectDesc\\": \\"test\\",\\n      \\"GmtCreate\\": \\"2022-01-07T10:07:57.000+0000\\",\\n      \\"GmtModified\\": \\"2021-12-30T06:41:52.000+0000\\"\\n    }\\n  ],\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 2,\\n  \\"RequestId\\": \\"451EBE59-5F33-5B15-83C1-78593B9*****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询迁移上云任务',
    ),
    'DeleteMigrationTask' => 
    array (
      'summary' => '调用接口删除迁移上云任务。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '删除结果。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8BD1E58D-0755-42AC-A599-E6B55112****',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"200\\",\\n  \\"Data\\": true,\\n  \\"RequestId\\": \\"8BD1E58D-0755-42AC-A599-E6B55112****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除迁移上云任务',
    ),
    'PutClusterHealthCheckTask' => 
    array (
      'summary' => '对当前集群发起一次风险评估的检查任务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_prepaid_public_cn-2r42o83h506',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<Boolean>',
            'description' => 'RestResult<Boolean>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5B170A0D-2C5D-4CF8-B808-03966B86****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因，例如：TaskId not found。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '执行结果信息。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"5B170A0D-2C5D-4CF8-B808-03966B86****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '发起风险评估检查任务',
    ),
    'OrderClusterHealthCheckRiskNotice' => 
    array (
      'summary' => '是否订阅风险项通知功能。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-cn-st21ri2****',
          ),
        ),
        1 => 
        array (
          'name' => 'RiskCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '风险编码。',
            'type' => 'string',
            'required' => false,
            'example' => '30010010001',
          ),
        ),
        2 => 
        array (
          'name' => 'Mute',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否禁用此风险项通知功能。

- true  禁用风险项通知
- false 开启风险项通知',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'NoticeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预留参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'null',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        6 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型。
- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<Boolean>',
            'description' => 'RestResult<Boolean>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AF21683A-29C7-4853-AC0F-B5ADEE4D****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。

',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因，例如：TaskId not found。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。
',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '是否订阅成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"AF21683A-29C7-4853-AC0F-B5ADEE4D****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '订阅风险项通知',
    ),
    'ListClusterHealthCheckTask' => 
    array (
      'summary' => '获取历史风险评估任务列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_prepaid_public_cn-7pp2o4wfx01',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询第几页',
            'description' => '查询第几页',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页展示条数',
            'description' => '每页展示条数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'RestResult<PageResult<ClusterHealthCheckTaskModel>>',
            'description' => 'RestResult<PageResult<ClusterHealthCheckTaskModel>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E9FDCFE-0738-493B-B801-82BDFBCB****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'Code仅仅用来和success同步',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。取值说明如下：

- 请求成功：不返回**ErrorCode**字段。
- 请求失败：返回**ErrorCode**字段。具体信息，请参见本文的**错误码**目录。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。
',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'title' => '实例列表的页码',
                    'description' => '列表的页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'TotalSize' => 
                  array (
                    'title' => '查询到的实例总数',
                    'description' => '查询到的总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '9',
                  ),
                  'PageSize' => 
                  array (
                    'title' => '输入时设置的每页行数',
                    'description' => '输入时设置的每页行数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Result' => 
                  array (
                    'description' => '风险评估任务列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '风险评估任务。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => 'ID。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Score' => 
                        array (
                          'description' => '总得分。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '60',
                        ),
                        'TotalItem' => 
                        array (
                          'description' => '总检查项数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'TotalRisk' => 
                        array (
                          'description' => '总风险项数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'mse_ingresspost-cn-0jbvrcex****',
                        ),
                        'ClusterType' => 
                        array (
                          'description' => '集群类型。',
                          'type' => 'string',
                          'example' => 'Nacos-Ans',
                        ),
                        'Type' => 
                        array (
                          'description' => '冗余字段。',
                          'type' => 'string',
                          'example' => 'null
',
                        ),
                        'Status' => 
                        array (
                          'description' => '任务状态。',
                          'type' => 'string',
                          'example' => 'FINISH',
                        ),
                        'PrimaryUser' => 
                        array (
                          'description' => '集群归属用户ID。',
                          'type' => 'string',
                          'example' => '123456',
                        ),
                        'Spec' => 
                        array (
                          'description' => '规格。',
                          'type' => 'string',
                          'example' => 'MSE_SC_2_4_200_c',
                        ),
                        'Replica' => 
                        array (
                          'description' => '集群节点数量。',
                          'type' => 'string',
                          'example' => '3',
                        ),
                        'VersionCode' => 
                        array (
                          'description' => '版本号。',
                          'type' => 'string',
                          'example' => 'NACOS_ANS_1_2_1_3',
                        ),
                        'AppVersion' => 
                        array (
                          'description' => '完整版本号。',
                          'type' => 'string',
                          'example' => '1.2.1',
                        ),
                        'ImageVersion' => 
                        array (
                          'description' => '冗余字段。',
                          'type' => 'string',
                          'example' => 'null',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '任务创建时间。',
                          'type' => 'string',
                          'example' => '2022-06-20T06:51:46Z',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '最后更新时间。',
                          'type' => 'string',
                          'example' => '2022-11-12 15:07:55',
                        ),
                        'RiskList' => 
                        array (
                          'description' => '风险项列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '风险项信息。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Id' => 
                              array (
                                'description' => 'ID。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '3426',
                              ),
                              'TaskId' => 
                              array (
                                'description' => '关联的父任务ID。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1',
                              ),
                              'RiskName' => 
                              array (
                                'description' => '风险名称。',
                                'type' => 'string',
                                'example' => '引擎版本过低',
                              ),
                              'RiskCode' => 
                              array (
                                'description' => '风险编码。',
                                'type' => 'string',
                                'example' => '22020010001',
                              ),
                              'PrimaryUser' => 
                              array (
                                'description' => '集群归属用户ID。',
                                'type' => 'string',
                                'example' => '123456',
                              ),
                              'Type' => 
                              array (
                                'description' => '冗余字段。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => 'null',
                              ),
                              'Values' => 
                              array (
                                'description' => '冗余字段。',
                                'type' => 'string',
                                'example' => 'null',
                              ),
                              'Module' => 
                              array (
                                'description' => '冗余字段。',
                                'type' => 'string',
                                'example' => 'null',
                              ),
                              'RiskType' => 
                              array (
                                'description' => '风险类型。',
                                'type' => 'string',
                                'example' => '版本风险',
                              ),
                              'RiskLevel' => 
                              array (
                                'title' => 'HIGH, MID, LOW, NONE',
                                'description' => '风险等级，取值：
- HIGH  高风险
- MID   中风险
- LOW  低风险',
                                'type' => 'string',
                                'example' => 'MID',
                              ),
                              'Suggestion' => 
                              array (
                                'description' => '建议。',
                                'type' => 'string',
                                'example' => '{\\"desc\\":\\"请尽快升级至最新版本\\",\\"links\\":[{\\"type\\":\\"upgrade\\",\\"desc\\":\\"点击升级\\"}]}',
                              ),
                              'Situation' => 
                              array (
                                'description' => '现状。',
                                'type' => 'string',
                                'example' => '{\\"desc\\":\\"当前引擎版本过低，有大量功能缺失\\",\\"links\\":[{\\"type\\":\\"url\\",\\"value\\":\\"https://xxxx"\\",\\"desc\\":\\"版本说明\\"}]}',
                              ),
                              'Description' => 
                              array (
                                'description' => '描述说明。',
                                'type' => 'string',
                                'example' => '{\\"desc\\":\\"引擎版本过低，有大量功能缺失，请尽快升级至最新版本！\\"}',
                              ),
                              'Mute' => 
                              array (
                                'description' => '是否禁用此风险项通知功能。

- true  禁用风险项通知
- false 开启风险项通知',
                                'type' => 'boolean',
                                'example' => 'false',
                              ),
                              'NoticeFeature' => 
                              array (
                                'description' => '冗余字段。',
                                'type' => 'boolean',
                                'example' => 'null',
                              ),
                            ),
                          ),
                        ),
                        'ChargeType' => 
                        array (
                          'description' => '付费类型。',
                          'type' => 'string',
                          'example' => 'PREPAY',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4E9FDCFE-0738-493B-B801-82BDFBCB****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": {\\n    \\"PageNumber\\": 0,\\n    \\"TotalSize\\": 9,\\n    \\"PageSize\\": 10,\\n    \\"Result\\": [\\n      {\\n        \\"Id\\": 1,\\n        \\"Score\\": 60,\\n        \\"TotalItem\\": 10,\\n        \\"TotalRisk\\": 3,\\n        \\"InstanceId\\": \\"mse_ingresspost-cn-0jbvrcex****\\",\\n        \\"ClusterType\\": \\"Nacos-Ans\\",\\n        \\"Type\\": \\"null\\\\n\\",\\n        \\"Status\\": \\"FINISH\\",\\n        \\"PrimaryUser\\": \\"123456\\",\\n        \\"Spec\\": \\"MSE_SC_2_4_200_c\\",\\n        \\"Replica\\": \\"3\\",\\n        \\"VersionCode\\": \\"NACOS_ANS_1_2_1_3\\",\\n        \\"AppVersion\\": \\"1.2.1\\",\\n        \\"ImageVersion\\": \\"null\\",\\n        \\"CreateTime\\": \\"2022-06-20T06:51:46Z\\",\\n        \\"UpdateTime\\": \\"2022-11-12 15:07:55\\",\\n        \\"RiskList\\": [\\n          {\\n            \\"Id\\": 3426,\\n            \\"TaskId\\": 1,\\n            \\"RiskName\\": \\"引擎版本过低\\",\\n            \\"RiskCode\\": \\"22020010001\\",\\n            \\"PrimaryUser\\": \\"123456\\",\\n            \\"Type\\": 0,\\n            \\"Values\\": \\"null\\",\\n            \\"Module\\": \\"null\\",\\n            \\"RiskType\\": \\"版本风险\\",\\n            \\"RiskLevel\\": \\"MID\\",\\n            \\"Suggestion\\": \\"{\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"请尽快升级至最新版本\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"links\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"upgrade\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"点击升级\\\\\\\\\\\\\\"}]}\\",\\n            \\"Situation\\": \\"{\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"当前引擎版本过低，有大量功能缺失\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"links\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"url\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"https://xxxx\\\\\\"\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"版本说明\\\\\\\\\\\\\\"}]}\\",\\n            \\"Description\\": \\"{\\\\\\\\\\\\\\"desc\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"引擎版本过低，有大量功能缺失，请尽快升级至最新版本！\\\\\\\\\\\\\\"}\\",\\n            \\"Mute\\": false,\\n            \\"NoticeFeature\\": true\\n          }\\n        ],\\n        \\"ChargeType\\": \\"PREPAY\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取风险评估任务列表',
    ),
    'ListConfigTrack' => 
    array (
      'summary' => '获取Nacos配置中心的轨迹数据。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'mse_prepaid_public_cn-i7m2ne****',
          ),
        ),
        2 => 
        array (
          'name' => 'DataId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ballot',
          ),
        ),
        3 => 
        array (
          'name' => 'Group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置组。',
            'type' => 'string',
            'required' => false,
            'example' => 'DEFAULT_GROUP',
          ),
        ),
        4 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'f3a510e2-df52-4fad-9815-42d8bc40****',
          ),
        ),
        5 => 
        array (
          'name' => 'StartTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间戳，单位秒。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1671010148',
          ),
        ),
        6 => 
        array (
          'name' => 'EndTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间戳，单位秒。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1657178373',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '10',
          ),
        ),
        8 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'Reverse',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否倒序。

- true
- false',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        10 => 
        array (
          'name' => 'Ip',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监听IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.22.2',
          ),
        ),
        11 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Traces' => 
              array (
                'description' => '信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据概览。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'LogDate' => 
                    array (
                      'description' => '记录时间。',
                      'type' => 'string',
                      'example' => '2022-11-28 15:09:15',
                    ),
                    'Ts' => 
                    array (
                      'description' => '监控指标值对应的时间戳。

单位：秒。',
                      'type' => 'string',
                      'example' => '1659666529',
                    ),
                    'RequestIp' => 
                    array (
                      'description' => '请求来源IP。',
                      'type' => 'string',
                      'example' => '192.168.1.2',
                    ),
                    'ResponseIp' => 
                    array (
                      'description' => '响应节点。',
                      'type' => 'string',
                      'example' => 'mse-1973b9a0-1670834*****-reg-center-0-2',
                    ),
                    'DataId' => 
                    array (
                      'description' => '配置ID。',
                      'type' => 'string',
                      'example' => 'eir-server.properties',
                    ),
                    'Group' => 
                    array (
                      'description' => '配置组。',
                      'type' => 'string',
                      'example' => 'DEFAULT_GROUP',
                    ),
                    'Event' => 
                    array (
                      'description' => '事件。

- 配置获取事件：pull
- 持久化事件：persist',
                      'type' => 'string',
                      'example' => 'pull',
                    ),
                    'Result' => 
                    array (
                      'description' => '结果。',
                      'type' => 'string',
                      'example' => 'ok',
                    ),
                    'Delay' => 
                    array (
                      'description' => '延迟，单位为ms。',
                      'type' => 'string',
                      'example' => '0',
                    ),
                    'Md5' => 
                    array (
                      'description' => '配置MD5值。',
                      'type' => 'string',
                      'example' => 'd21c9091c60daa0ff7ee2f420141e5a0',
                    ),
                    'Type' => 
                    array (
                      'description' => '发布类型。

- beta发布：beta
- 灰度发布：tag
- 分批发布：batch',
                      'type' => 'string',
                      'example' => 'beta',
                    ),
                    'Push' => 
                    array (
                      'description' => '是否是服务端推送。

- true
- false',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'Client' => 
                    array (
                      'description' => '是否是客户端的请求。

- true
- false',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                  ),
                ),
              ),
              'PageSize' => 
              array (
                'description' => '当前页的大小。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '3',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0CE3ABD2-1E04-561F-A9B4-0423D50****',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"200\\",\\n  \\"Traces\\": [\\n    {\\n      \\"LogDate\\": \\"2022-11-28 15:09:15\\",\\n      \\"Ts\\": \\"1659666529\\",\\n      \\"RequestIp\\": \\"192.168.1.2\\",\\n      \\"ResponseIp\\": \\"mse-1973b9a0-1670834*****-reg-center-0-2\\",\\n      \\"DataId\\": \\"eir-server.properties\\",\\n      \\"Group\\": \\"DEFAULT_GROUP\\",\\n      \\"Event\\": \\"pull\\",\\n      \\"Result\\": \\"ok\\",\\n      \\"Delay\\": \\"0\\",\\n      \\"Md5\\": \\"d21c9091c60daa0ff7ee2f420141e5a0\\",\\n      \\"Type\\": \\"beta\\",\\n      \\"Push\\": false,\\n      \\"Client\\": false\\n    }\\n  ],\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 3,\\n  \\"RequestId\\": \\"0CE3ABD2-1E04-561F-A9B4-0423D50****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '获取Nacos配置中心推送轨迹',
    ),
    'CreateNacosConfig' => 
    array (
      'summary' => '创建一个Nacos配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse_prepaid_public_cn-tl32****',
          ),
        ),
        1 => 
        array (
          'name' => 'DataId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'common.yaml',
          ),
        ),
        2 => 
        array (
          'name' => 'Group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'alime-bridge-aliyun',
          ),
        ),
        3 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用名。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'saledatacenter-task',
          ),
        ),
        4 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置的标签。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '基本配置',
          ),
        ),
        5 => 
        array (
          'name' => 'Desc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置的描述信息。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '基础模块配置',
          ),
        ),
        6 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置格式，包括text、json、xml等。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'text',
          ),
        ),
        7 => 
        array (
          'name' => 'Content',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置内容。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'asdf',
          ),
        ),
        8 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '547fd2a0-d0d6-****-80db2a1afb82',
          ),
        ),
        9 => 
        array (
          'name' => 'BetaIps',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Beta发布的IP列表。',
            'type' => 'string',
            'required' => false,
            'example' => '100.117.XX.XX,100.117.XX.XX',
          ),
        ),
        10 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '673DBD43-569E-510F-B3DE-20BB8DFEB20A',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Code' => 
              array (
                'description' => '返回代码。',
                'type' => 'string',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"202\\",\\n  \\"RequestId\\": \\"673DBD43-569E-510F-B3DE-20BB8DFEB20A\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Code\\": \\"1\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '创建Nacos配置',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'DeleteNacosConfig' => 
    array (
      'summary' => '删除Nacos配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse_prepaid_public_cn-tl32epfyu18',
          ),
        ),
        1 => 
        array (
          'name' => 'DataId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'user-ds.yml',
          ),
        ),
        2 => 
        array (
          'name' => 'Group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组类型。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HALVIE_MICRO_GROUP',
          ),
        ),
        3 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '0e9d849b-****-8435da6c21ad',
          ),
        ),
        4 => 
        array (
          'name' => 'Beta',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否Beta发布。

- `true`：是
- `false`：否',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4FEFC13F-EB50-51E1-97D8-C5CBA8CD1B84',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"202\\",\\n  \\"RequestId\\": \\"4FEFC13F-EB50-51E1-97D8-C5CBA8CD1B84\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除Nacos配置',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'DeleteNacosConfigs' => 
    array (
      'summary' => '批量删除多个Nacos配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse_prepaid_public_cn-i7m2e32pd0n',
          ),
        ),
        1 => 
        array (
          'name' => 'Ids',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置列表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '20024,20025,20026,20027,20034,20104,20394',
          ),
        ),
        2 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1ef93a21-3487-4367-a859-857d8****',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '73EB5563-CBB3-5F48-999D-512F4EFB7377',
              ),
              'Message' => 
              array (
                'description' => '请求消息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"200\\",\\n  \\"RequestId\\": \\"73EB5563-CBB3-5F48-999D-512F4EFB7377\\",\\n  \\"Message\\": \\"success\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '批量删除Nacos配置',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'UpdateNacosConfig' => 
    array (
      'summary' => '更新一个Nacos配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-cn-7pp2a****',
          ),
        ),
        1 => 
        array (
          'name' => 'DataId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ky-check-****.yml',
          ),
        ),
        2 => 
        array (
          'name' => 'Group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'resource',
          ),
        ),
        3 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'postoffice',
          ),
        ),
        4 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Tag列表。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2021-10-20',
          ),
        ),
        5 => 
        array (
          'name' => 'Desc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置的描述信息。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '基础配置',
          ),
        ),
        6 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置格式，包括text、json、xml、html等。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'text',
          ),
        ),
        7 => 
        array (
          'name' => 'Content',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置内容。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'attribute1=1221111\\r\\nattribute2=中文\\r\\nattribute3=abc11\\r\\nattribute4=1.00111',
          ),
        ),
        8 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '78b7af66-d15f-4541-b886-11ed81ecb6c0',
          ),
        ),
        9 => 
        array (
          'name' => 'Md5',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'md5信息。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '045439703a273a94306422b****',
          ),
        ),
        10 => 
        array (
          'name' => 'BetaIps',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Beta发布的IP列表。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '196.168.XX.XX',
          ),
        ),
        11 => 
        array (
          'name' => 'EncryptedDataKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '加密密钥。',
            'type' => 'string',
            'required' => false,
            'example' => '122wdwe****',
          ),
        ),
        12 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '69AD2AA7-DB47-449B-941B-B14409DF****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'NoPermission',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"200\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"69AD2AA7-DB47-449B-941B-B14409DF****\\",\\n  \\"ErrorCode\\": \\"NoPermission\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新Nacos配置',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'ListListenersByConfig' => 
    array (
      'summary' => '根据配置信息查询监听者。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '17070',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseHU6B10',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"appGroup\\":\\"emas-zfive_prehost\\",\\"appName\\":\\"emas-zfive\\",\\"appStage\\":\\"PRE_PUBLISH\\",\\"appUnit\\":\\"\\",\\"bucId\\":\\"225902\\",\\"bucName\\":\\"无线\\",\\"provider\\":\\"aliyun\\"}',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-cn-m7r1yurp00e',
          ),
        ),
        2 => 
        array (
          'name' => 'DataId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'zeekr-clueboss.yml',
          ),
        ),
        3 => 
        array (
          'name' => 'Group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'prod',
          ),
        ),
        4 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'aaeb4d28-c9eb-4fa2-85f5-d03ce7ee8df1',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'TotalCount' => 
              array (
                'description' => '数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'Listeners' => 
              array (
                'description' => '监听者信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Ip' => 
                    array (
                      'description' => 'IP。',
                      'type' => 'string',
                      'example' => '1.1.1.1',
                    ),
                    'Md5' => 
                    array (
                      'description' => '校验串。',
                      'type' => 'string',
                      'example' => '23sdfdf',
                    ),
                    'Status' => 
                    array (
                      'description' => '状态。',
                      'type' => 'string',
                      'example' => 'beta',
                    ),
                    'Labels' => 
                    array (
                      'type' => 'object',
                      'additionalProperties' => 
                      array (
                        'type' => 'string',
                      ),
                    ),
                    'Version' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '75E1442F-11EC-567A-9CF0-5A36F7904F39',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'PageSize' => 
              array (
                'description' => '当前页的大小。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"202\\",\\n  \\"TotalCount\\": 7,\\n  \\"Listeners\\": [\\n    {\\n      \\"Ip\\": \\"1.1.1.1\\",\\n      \\"Md5\\": \\"23sdfdf\\",\\n      \\"Status\\": \\"beta\\",\\n      \\"Labels\\": {\\n        \\"key\\": \\"\\"\\n      },\\n      \\"Version\\": \\"\\"\\n    }\\n  ],\\n  \\"RequestId\\": \\"75E1442F-11EC-567A-9CF0-5A36F7904F39\\",\\n  \\"Message\\": \\"success\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 2,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询配置监听者',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'ListListenersByIp' => 
    array (
      'summary' => '根据IP查询监听者列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '17071',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseHU6B10',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse_prepaid_public_cn-i7m2cecji09',
          ),
        ),
        2 => 
        array (
          'name' => 'Ip',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监听IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '172.22.0.240',
          ),
        ),
        3 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'ea02a522-9482-4255-bb65-dc0636d783f2',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'TotalCount' => 
              array (
                'description' => '实例总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '6',
              ),
              'Listeners' => 
              array (
                'description' => '监听信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Md5' => 
                    array (
                      'description' => '校验串。',
                      'type' => 'string',
                      'example' => '23sdfdf',
                    ),
                    'DataId' => 
                    array (
                      'description' => '数据ID。',
                      'type' => 'string',
                      'example' => 'test.yaml',
                    ),
                    'Group' => 
                    array (
                      'description' => '分组。',
                      'type' => 'string',
                      'example' => 'default',
                    ),
                    'NamespaceId' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54973C90-F379-4372-9AA5-053A3F7****',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'PageSize' => 
              array (
                'description' => '当前页的大小。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'MSE-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"202\\",\\n  \\"TotalCount\\": 6,\\n  \\"Listeners\\": [\\n    {\\n      \\"Md5\\": \\"23sdfdf\\",\\n      \\"DataId\\": \\"test.yaml\\",\\n      \\"Group\\": \\"default\\",\\n      \\"NamespaceId\\": \\"\\"\\n    }\\n  ],\\n  \\"RequestId\\": \\"54973C90-F379-4372-9AA5-053A3F7****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"ErrorCode\\": \\"MSE-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '根据IP查询监听者列表',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'GetNacosConfig' => 
    array (
      'summary' => '获取Nacos配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-cn-i7m2h0****',
          ),
        ),
        1 => 
        array (
          'name' => 'DataId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'halvie-mp-item****',
          ),
        ),
        2 => 
        array (
          'name' => 'Group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置组信息。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'common',
          ),
        ),
        3 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'ddaf8f12-****-b1c1-86e7c72e266b',
          ),
        ),
        4 => 
        array (
          'name' => 'Beta',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否Beta发布。

- `true`：是
- `false`：否',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B4EAB48C-BB4B-5B8D-B33B-35D69606C5AD',
              ),
              'Configuration' => 
              array (
                'description' => '配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => '配置内容的格式。',
                    'type' => 'string',
                    'example' => 'text',
                  ),
                  'AppName' => 
                  array (
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Tags' => 
                  array (
                    'description' => '配置的标签。',
                    'type' => 'string',
                    'example' => 'context',
                  ),
                  'Md5' => 
                  array (
                    'description' => '配置的消息摘要。',
                    'type' => 'string',
                    'example' => '123rfsdf3',
                  ),
                  'DataId' => 
                  array (
                    'description' => '配置ID。',
                    'type' => 'string',
                    'example' => 'log.yaml',
                  ),
                  'Content' => 
                  array (
                    'description' => '配置内容。',
                    'type' => 'string',
                    'example' => 'log.level=error',
                  ),
                  'Group' => 
                  array (
                    'description' => '配置组名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Desc' => 
                  array (
                    'description' => '配置描述。',
                    'type' => 'string',
                    'example' => '测试专用',
                  ),
                  'EncryptedDataKey' => 
                  array (
                    'description' => '加密密钥。',
                    'type' => 'string',
                    'example' => 'key',
                  ),
                  'BetaIps' => 
                  array (
                    'description' => 'Beta发布的IP列表。',
                    'type' => 'string',
                    'example' => '1.1.XX.XX，2.2.XX.XX',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"B4EAB48C-BB4B-5B8D-B33B-35D69606C5AD\\",\\n  \\"Configuration\\": {\\n    \\"Type\\": \\"text\\",\\n    \\"AppName\\": \\"test\\",\\n    \\"Tags\\": \\"context\\",\\n    \\"Md5\\": \\"123rfsdf3\\",\\n    \\"DataId\\": \\"log.yaml\\",\\n    \\"Content\\": \\"log.level=error\\",\\n    \\"Group\\": \\"test\\",\\n    \\"Desc\\": \\"测试专用\\",\\n    \\"EncryptedDataKey\\": \\"key\\",\\n    \\"BetaIps\\": \\"1.1.XX.XX，2.2.XX.XX\\"\\n  },\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '获取Nacos配置',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'GetNacosHistoryConfig' => 
    array (
      'summary' => '查询Nacos配置变更历史列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse_prepaid_public_cn-st220g9ka02',
          ),
        ),
        1 => 
        array (
          'name' => 'DataId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'msg-center.main.yaml',
          ),
        ),
        2 => 
        array (
          'name' => 'Group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DEFAULT_GROUP',
          ),
        ),
        3 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '6cf708a5-****-89f2-3ba62c5ee9ba',
          ),
        ),
        4 => 
        array (
          'name' => 'Nid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置单ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '40****',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '69AD2AA7-DB47-449B-941B-B14409DF****',
              ),
              'Configuration' => 
              array (
                'description' => '配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'AppName' => 
                  array (
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Md5' => 
                  array (
                    'description' => '配置的消息摘要。',
                    'type' => 'string',
                    'example' => '23sdf32f****',
                  ),
                  'DataId' => 
                  array (
                    'description' => '配置ID。',
                    'type' => 'string',
                    'example' => 'test.yaml',
                  ),
                  'Content' => 
                  array (
                    'description' => '配置内容。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Group' => 
                  array (
                    'description' => '配置组名称。',
                    'type' => 'string',
                    'example' => 'public',
                  ),
                  'OpType' => 
                  array (
                    'description' => '配置类型。',
                    'type' => 'string',
                    'example' => 'text',
                  ),
                  'EncryptedDataKey' => 
                  array (
                    'description' => '加密密钥。',
                    'type' => 'string',
                    'example' => '23fds****',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'NoPermission',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"69AD2AA7-DB47-449B-941B-B14409DF****\\",\\n  \\"Configuration\\": {\\n    \\"AppName\\": \\"test\\",\\n    \\"Md5\\": \\"23sdf32f****\\",\\n    \\"DataId\\": \\"test.yaml\\",\\n    \\"Content\\": \\"test\\",\\n    \\"Group\\": \\"public\\",\\n    \\"OpType\\": \\"text\\",\\n    \\"EncryptedDataKey\\": \\"23fds****\\"\\n  },\\n  \\"ErrorCode\\": \\"NoPermission\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询Nacos配置历史',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'ListNacosConfigs' => 
    array (
      'summary' => '查询Nacos配置列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，支持JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"appGroup\\":\\"sm_zk_asi_na610\\",\\"appName\\":\\"sm-zk\\",\\"appStage\\":\\"PUBLISH\\",\\"appUnit\\":\\"center\\",\\"bucId\\":\\"193554\\",\\"bucName\\":\\"阿里移动事业群-UC\\",\\"provider\\":\\"aliyun\\"}',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '200',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-cn-7mz2fj****',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域，MSE支持的地域。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'DataId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'zeekr-*',
          ),
        ),
        6 => 
        array (
          'name' => 'Group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组类型，默认为`default`。',
            'type' => 'string',
            'required' => false,
            'example' => 'crm',
          ),
        ),
        7 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用名。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'fpx-pds-pns',
          ),
        ),
        8 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'billing',
          ),
        ),
        9 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'fad732a7-ff1a-4f21-8126-4edd4****',
          ),
        ),
        10 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'TotalCount' => 
              array (
                'description' => '实例总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '12',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4081087F-3429-5873-A1E7-D4B5479D0B84',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'PageSize' => 
              array (
                'description' => '每页展示实例数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Configurations' => 
              array (
                'description' => '配置列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'AppName' => 
                    array (
                      'description' => '应用名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'DataId' => 
                    array (
                      'description' => '配置ID。',
                      'type' => 'string',
                      'example' => 'log.yaml',
                    ),
                    'Id' => 
                    array (
                      'description' => '应用ID',
                      'type' => 'string',
                      'example' => '132****',
                    ),
                    'Group' => 
                    array (
                      'description' => '分组ID。',
                      'type' => 'string',
                      'example' => 'public',
                    ),
                  ),
                ),
              ),
              'Code' => 
              array (
                'description' => '返回代码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"200\\",\\n  \\"TotalCount\\": 12,\\n  \\"RequestId\\": \\"4081087F-3429-5873-A1E7-D4B5479D0B84\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Configurations\\": [\\n    {\\n      \\"AppName\\": \\"test\\",\\n      \\"DataId\\": \\"log.yaml\\",\\n      \\"Id\\": \\"132****\\",\\n      \\"Group\\": \\"public\\"\\n    }\\n  ],\\n  \\"Code\\": 200,\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询Nacos配置列表',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'ListNacosHistoryConfigs' => 
    array (
      'summary' => '查询Nacos配置历史列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"appGroup\\":\\"aliyun-phecda-service-staging\\",\\"appName\\":\\"aliyun-phecda-service\\",\\"appStage\\":\\"DAILY\\",\\"appUnit\\":\\"center\\",\\"bucId\\":\\"250858\\",\\"bucName\\":\\"阿里云\\",\\"provider\\":\\"aliyun\\"}',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示记录条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-cn-2r42e3bk20n',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域，MSE支持的地域。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'DataId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'user-prod.yaml',
          ),
        ),
        6 => 
        array (
          'name' => 'Group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置组。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'fc-dev-cluster-1',
          ),
        ),
        7 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'fc0f6e40-****-946b-45e3af313707',
          ),
        ),
        8 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'TotalCount' => 
              array (
                'description' => '实例配置信息总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '53338ECA-F880-54D8-A9B3-5606355A1B89',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'PageSize' => 
              array (
                'description' => '每页展示实例数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'HistoryItems' => 
              array (
                'description' => '配置项列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'AppName' => 
                    array (
                      'description' => '应用标签。',
                      'type' => 'string',
                      'example' => 'gateway',
                    ),
                    'DataId' => 
                    array (
                      'description' => '数据ID。',
                      'type' => 'string',
                      'example' => 'test.yaml',
                    ),
                    'Group' => 
                    array (
                      'description' => '分组名称。',
                      'type' => 'string',
                      'example' => 'default',
                    ),
                    'LastModifiedTime' => 
                    array (
                      'description' => '最后更新时间戳。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1643440066000',
                    ),
                    'Id' => 
                    array (
                      'description' => '配置ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '23fdsf',
                    ),
                    'OpType' => 
                    array (
                      'description' => '配置文本类型。',
                      'type' => 'string',
                      'example' => 'yaml',
                    ),
                    'SrcUser' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"200\\",\\n  \\"TotalCount\\": 7,\\n  \\"RequestId\\": \\"53338ECA-F880-54D8-A9B3-5606355A1B89\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true,\\n  \\"HistoryItems\\": [\\n    {\\n      \\"AppName\\": \\"gateway\\",\\n      \\"DataId\\": \\"test.yaml\\",\\n      \\"Group\\": \\"default\\",\\n      \\"LastModifiedTime\\": 1643440066000,\\n      \\"Id\\": 0,\\n      \\"OpType\\": \\"yaml\\",\\n      \\"SrcUser\\": \\"\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询Nacos配置历史列表',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'CloneNacosConfig' => 
    array (
      'summary' => '将已有的Nacos配置克隆到其他命名空间。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse_prepaid_public_cn-i7m25igg403',
          ),
        ),
        1 => 
        array (
          'name' => 'OriginNamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'be821963-6d48-4ea5-9910-6057d****',
          ),
        ),
        2 => 
        array (
          'name' => 'TargetNamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => '08be4b5d-2d1c-4e6e-aa85-83b9****',
          ),
        ),
        3 => 
        array (
          'name' => 'Policy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当写入冲突时，使用的策略。

- ABORT
- SKIP
- OVERWRITE',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
              'ABORT' => '终止',
              'OVERWRITE' => '覆盖',
              'SKIP' => '跳过',
            ),
            'example' => 'OVERWRITE',
          ),
        ),
        4 => 
        array (
          'name' => 'Ids',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置ID列表。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '253661,253662',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6678DBA9-5600-5948-ACF8-ED3105B288A3',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'Clone Completed Successfully',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'SuccCount' => 
                  array (
                    'description' => '成功数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'SkipCount' => 
                  array (
                    'description' => '跳过数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'SkipData' => 
                  array (
                    'description' => '跳过配置信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DataId' => 
                        array (
                          'description' => '数据ID。',
                          'type' => 'string',
                          'example' => 'test.yaml',
                        ),
                        'Group' => 
                        array (
                          'description' => '分组ID。',
                          'type' => 'string',
                          'example' => 'public ',
                        ),
                      ),
                    ),
                  ),
                  'FailData' => 
                  array (
                    'description' => '配置失败信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DataId' => 
                        array (
                          'description' => '数据ID。',
                          'type' => 'string',
                          'example' => 'test2.yaml',
                        ),
                        'Group' => 
                        array (
                          'description' => '分组ID。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"6678DBA9-5600-5948-ACF8-ED3105B288A3\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"Clone Completed Successfully\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": {\\n    \\"SuccCount\\": 100,\\n    \\"SkipCount\\": 1,\\n    \\"SkipData\\": [\\n      {\\n        \\"DataId\\": \\"test.yaml\\",\\n        \\"Group\\": \\"public \\"\\n      }\\n    ],\\n    \\"FailData\\": [\\n      {\\n        \\"DataId\\": \\"test2.yaml\\",\\n        \\"Group\\": \\"test\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '克隆Nacos配置',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'ExportNacosConfig' => 
    array (
      'summary' => '导出指定的Nacos配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-cn-2r42ddc****',
          ),
        ),
        1 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ae77c258-4d4f-478f-baaa-084aee0****',
          ),
        ),
        2 => 
        array (
          'name' => 'Ids',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置项主键ID。

><notice>
- 支持多种导出方式。当选择导出多个配置时，此参数必填。
- 此参数可通过ListNacosConfigs接口获取。
- 当配置此参数时，表示选择导出多个配置，DataId和Group参数无效。
></notice>

',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'example' => '1709,1710',
          ),
        ),
        3 => 
        array (
          'name' => 'DataId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待导出的数据ID。

<notice>

- 支持多种导出方式。
- 当选择导出单个配置时，参数Ids必须为空，DataID以及Group必填。></notice>',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'docRequired' => true,
            'example' => 'demo-develop',
          ),
        ),
        4 => 
        array (
          'name' => 'Group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置组名称。',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'example' => 'COMMON_GROUP',
          ),
        ),
        5 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用标签。',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'example' => 'gateway-openapi',
          ),
        ),
        6 => 
        array (
          'name' => 'DataIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要导出的数据的 dataId+groupName， 多个配置使用 "," 分隔',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testDataId1+testGroup1,testDataId2+testGroup',
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '92245803-49B7-54CF-8D49-01A34A0E1CD6',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的 **%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'Url' => 
                  array (
                    'description' => '导出配置的下载地址。',
                    'type' => 'string',
                    'example' => 'http://xxxxxxxxx',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"92245803-49B7-54CF-8D49-01A34A0E1CD6\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": {\\n    \\"Url\\": \\"http://xxxxxxxxx\\"\\n  }\\n}","type":"json"}]',
      'title' => '导出Nacos配置',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'GetImportFileUrl' => 
    array (
      'summary' => '获取Nacos配置导入时获取文件的上传地址。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ContentType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件类型。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'application/zip',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse_prepaid_public_cn-7pp2b****',
          ),
        ),
        2 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => '12788f73-9848-4388-98f1-507778f2****',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '19488A00-4AF5-55E1-A689-98BA9F5E7441',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。
',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'Url' => 
                  array (
                    'description' => '文件上传地址。',
                    'type' => 'string',
                    'example' => 'http://xxxxxxx',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"19488A00-4AF5-55E1-A689-98BA9F5E7441\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": {\\n    \\"Url\\": \\"http://xxxxxxx\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取文件上传地址',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'ImportNacosConfig' => 
    array (
      'summary' => '使用配置文件导入Nacos配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse_prepaid_public_cn-****',
          ),
        ),
        1 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'f5cdc80a-****-8094-282f5650fc00',
          ),
        ),
        2 => 
        array (
          'name' => 'Policy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
              'ABORT' => 'ABORT',
              'OVERWRITE' => 'OVERWRITE',
              'SKIP' => 'SKIP',
            ),
            'example' => 'OVERWRITE',
          ),
        ),
        3 => 
        array (
          'name' => 'FileUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '导入文件地址必须为MSE生成的地址（否则提示无权限）。
获取步骤：

1.GetImportFileUrl API获取到地址。

2.通过标准的HTTP PUT方法将文件上传到上述API返回的HTTP地址。

3.调用ImportNacosConfig API导入。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'http://mse-shared.oss-xxx.aliyuncs.com/cfg/import/xxxx/2021/01/11/xxxx.zip',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AF21683A-29C7-4853-AC0F-B5ADEE4****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-100',
              ),
              'Code' => 
              array (
                'description' => '代码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的 **%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'SuccCount' => 
                  array (
                    'description' => '导入成功的实例数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'SkipCount' => 
                  array (
                    'description' => '跳过消息数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'SkipData' => 
                  array (
                    'description' => '跳过的配置列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DataId' => 
                        array (
                          'description' => '数据ID。',
                          'type' => 'string',
                          'example' => 'test.yaml',
                        ),
                        'Group' => 
                        array (
                          'description' => '分组ID。',
                          'type' => 'string',
                          'example' => 'public ',
                        ),
                      ),
                    ),
                  ),
                  'FailData' => 
                  array (
                    'description' => '导入失败列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DataId' => 
                        array (
                          'description' => '数据ID。',
                          'type' => 'string',
                          'example' => 'test2.yaml',
                        ),
                        'Group' => 
                        array (
                          'description' => '分组ID。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"AF21683A-29C7-4853-AC0F-B5ADEE4****\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"mse-100-100\\",\\n  \\"Code\\": 1,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": {\\n    \\"SuccCount\\": 100,\\n    \\"SkipCount\\": 10,\\n    \\"SkipData\\": [\\n      {\\n        \\"DataId\\": \\"test.yaml\\",\\n        \\"Group\\": \\"public \\"\\n      }\\n    ],\\n    \\"FailData\\": [\\n      {\\n        \\"DataId\\": \\"test2.yaml\\",\\n        \\"Group\\": \\"test\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '导入Nacos配置',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'ListNamingTrack' => 
    array (
      'summary' => '获取Nacos注册中心的轨迹数据。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'mse_prepaid_public_cn-tl32d*****',
          ),
        ),
        2 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'fpx-xms-baseinfo',
          ),
        ),
        3 => 
        array (
          'name' => 'Group',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组。',
            'type' => 'string',
            'required' => false,
            'example' => 'group',
          ),
        ),
        4 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cd4d3703-e2a6-46b5-85c6-4447e4f****',
          ),
        ),
        5 => 
        array (
          'name' => 'Ip',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '172.16.183.232',
          ),
        ),
        6 => 
        array (
          'name' => 'StartTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间戳，单位秒。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1660238450',
          ),
        ),
        7 => 
        array (
          'name' => 'EndTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间戳，单位秒。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1665299698',
          ),
        ),
        8 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页的大小。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '10',
          ),
        ),
        9 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        10 => 
        array (
          'name' => 'Reverse',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按照时间正序或者倒序排列。默认值为`false`。

- `true`：表示倒序
- `false`：表示正序

',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        11 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Traces' => 
              array (
                'description' => '信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据概览。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'PushTime' => 
                    array (
                      'description' => '推送时间。',
                      'type' => 'string',
                      'example' => '2022-12-16 11:48:07',
                    ),
                    'NodeName' => 
                    array (
                      'description' => '节点名称。',
                      'type' => 'string',
                      'example' => 'mse-197*****-167083******-reg-center-0-0',
                    ),
                    'ClientIp' => 
                    array (
                      'description' => '客户端IP。',
                      'type' => 'string',
                      'example' => '120.40.32.235',
                    ),
                    'ServerName' => 
                    array (
                      'description' => '服务名称。',
                      'type' => 'string',
                      'example' => 'fpx-xms-baseinfo',
                    ),
                    'Group' => 
                    array (
                      'description' => '分组。',
                      'type' => 'string',
                      'example' => 'prod',
                    ),
                    'InstanceSize' => 
                    array (
                      'description' => '实例个数。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                    'PushTimeAll' => 
                    array (
                      'description' => '总推送耗时。',
                      'type' => 'string',
                      'example' => '628ms',
                    ),
                    'PushTimeNetwork' => 
                    array (
                      'description' => '推送网络耗时。',
                      'type' => 'string',
                      'example' => '37ms',
                    ),
                    'SlaTime' => 
                    array (
                      'description' => 'SLA时间。',
                      'type' => 'string',
                      'example' => '628ms',
                    ),
                  ),
                ),
              ),
              'PageSize' => 
              array (
                'description' => '当前页的大小。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总记录条数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '7',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9916CBED-B2D5-5685-9129-4592FE1*****',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        202 => 
        array (
          0 => 
          array (
            'errorCode' => 'TrackRegionNotSupport',
            'errorMessage' => '推送轨迹功能在当前Region暂未开放',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"200\\",\\n  \\"Traces\\": [\\n    {\\n      \\"PushTime\\": \\"2022-12-16 11:48:07\\",\\n      \\"NodeName\\": \\"mse-197*****-167083******-reg-center-0-0\\",\\n      \\"ClientIp\\": \\"120.40.32.235\\",\\n      \\"ServerName\\": \\"fpx-xms-baseinfo\\",\\n      \\"Group\\": \\"prod\\",\\n      \\"InstanceSize\\": \\"1\\",\\n      \\"PushTimeAll\\": \\"628ms\\",\\n      \\"PushTimeNetwork\\": \\"37ms\\",\\n      \\"SlaTime\\": \\"628ms\\"\\n    }\\n  ],\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 7,\\n  \\"RequestId\\": \\"9916CBED-B2D5-5685-9129-4592FE1*****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '获取Nacos注册中心推送轨迹',
    ),
    'CreateNacosService' => 
    array (
      'summary' => '创建Nacos服务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。
> 此接口同时有InstanceId与ClusterId，则其中一项必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-cn-st21ri2****',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'com.alibabacloud.hipstershop.cartserviceapi.service.CartService',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'DEFAULT_GROUP',
          ),
        ),
        3 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'production',
          ),
        ),
        4 => 
        array (
          'name' => 'ProtectThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保护阈值。',
            'type' => 'string',
            'required' => false,
            'example' => '0',
          ),
        ),
        5 => 
        array (
          'name' => 'Ephemeral',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否临时节点标志，取值如下：
- `true`：是。
- `false`：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。
> 此接口同时有InstanceId与ClusterId，则其中一项必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-3691a080',
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5B170A0D-2C5D-4CF8-B808-03966B86****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '节点数据。',
                'type' => 'string',
                'example' => 'data',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"5B170A0D-2C5D-4CF8-B808-03966B86****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Data\\": \\"data\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Message\\": \\"success\\"\\n}","type":"json"}]',
      'title' => '创建Nacos服务',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'ListAnsServices' => 
    array (
      'summary' => '查询Nacos服务详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询指定的服务名信息',
            'description' => '服务名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'name',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务所在的分组',
            'description' => '联系人组名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'name',
          ),
        ),
        2 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务所在的 namespace',
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => '12233****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClusterName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询服务下某个集群的实例列表是所需要的参数',
            'description' => '查询服务下某个集群的实例列表时所需要的参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'DEFAULT',
          ),
        ),
        4 => 
        array (
          'name' => 'HasIpCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否查询服务实例数量。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'false' => '不需要',
              'true' => '需要',
            ),
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前查询服务的集群标识',
            'description' => '集群ID。

> 此接口同时有InstanceId与ClusterId，则其中一项必填。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-09k1q11****',
          ),
        ),
        6 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前查询服务的集群标识',
            'description' => '实例ID。

> 此接口同时有InstanceId与ClusterId，则其中一项必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-cn-st21v5****',
          ),
        ),
        7 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询第几页',
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页展示条数',
            'description' => '每页展示实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        9 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        10 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        11 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'TotalCount' => 
              array (
                'description' => '实例总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '52BA6DA6-A702-4362-A32F-DFF79655****',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'PageSize' => 
              array (
                'description' => '每页展示实例数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'HealthyInstanceCount' => 
                    array (
                      'description' => '健康心跳的服务实例总数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'GroupName' => 
                    array (
                      'description' => '联系人组名称。',
                      'type' => 'string',
                      'example' => 'name',
                    ),
                    'IpCount' => 
                    array (
                      'description' => '当前服务的实例总数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'Name' => 
                    array (
                      'description' => '服务名称。',
                      'type' => 'string',
                      'example' => 'name',
                    ),
                    'ClusterCount' => 
                    array (
                      'description' => '集群总数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'Source' => 
                    array (
                      'description' => '服务类型，取值如下：
* console：控制台注册。
* sdk：SDK注册。
* governance：服务治理注册。',
                      'type' => 'string',
                      'example' => 'console',
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpCode\\": \\"202\\",\\n  \\"TotalCount\\": 7,\\n  \\"RequestId\\": \\"52BA6DA6-A702-4362-A32F-DFF79655****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"Data\\": [\\n    {\\n      \\"HealthyInstanceCount\\": 1,\\n      \\"GroupName\\": \\"name\\",\\n      \\"IpCount\\": 1,\\n      \\"Name\\": \\"name\\",\\n      \\"ClusterCount\\": 1,\\n      \\"Source\\": \\"console\\"\\n    }\\n  ],\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListAnsServicesResponse>\\n<HttpCode>202</HttpCode>\\n<TotalCount>7</TotalCount>\\n<PageSize>10</PageSize>\\n<Message>请求处理成功</Message>\\n<RequestId>52BA6DA6-A702-4362-A32F-DFF79655****</RequestId>\\n<PageNumber>1</PageNumber>\\n<Data>\\n    <GroupName>name</GroupName>\\n    <IpCount>1</IpCount>\\n    <HealthyInstanceCount>1</HealthyInstanceCount>\\n    <ClusterCount>1</ClusterCount>\\n    <Name>name</Name>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</ListAnsServicesResponse>","errorExample":""}]',
      'title' => '查询Nacos服务详情',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteNacosService' => 
    array (
      'summary' => '删除一个Nacos服务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-cn-123456',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hello_service',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DEFAULT_GROUP',
          ),
        ),
        3 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '9e78a671-4b9b-4dd4-99c1-0****',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '字符串对象。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'title' => 'http状态码',
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'title' => '请求id',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9e78a671-4b9b-4dd4-99c1-0b9da87d3dec',
              ),
              'Message' => 
              array (
                'title' => '响应信息',
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求成功',
              ),
              'Code' => 
              array (
                'title' => '响应码',
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'title' => '成功标志',
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'title' => '删除服务的结果',
                'description' => '删除结果。',
                'type' => 'string',
                'example' => 'ok',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"9e78a671-4b9b-4dd4-99c1-0b9da87d3dec\\",\\n  \\"Message\\": \\"请求成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": \\"ok\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteNacosServiceResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <RequestId>9e78a671-4b9b-4dd4-99c1-0b9da87d3dec</RequestId>\\n    <Message>请求成功</Message>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n    <Data>ok</Data>\\n</DeleteNacosServiceResponse>","errorExample":""}]',
      'title' => '删除Nacos服务',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'UpdateNacosService' => 
    array (
      'summary' => '更新Nacos服务。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。
> 此接口同时有InstanceId与ClusterId，则其中一项必填。
>',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-cn-st21ri2****',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'com.dingtalk.doc.thumbnails.pdf.ThumbnailService',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'DEFAULT_GROUP',
          ),
        ),
        3 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => '5e3ee449-b5c0-4aee-b857-32c0acbebf26',
          ),
        ),
        4 => 
        array (
          'name' => 'ProtectThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保护阈值。',
            'type' => 'string',
            'required' => false,
            'example' => '0',
          ),
        ),
        5 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。
> 此接口同时有InstanceId与ClusterId，则其中一项必填。
>',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-09k1q11****',
          ),
        ),
        6 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E9FDCFE-0738-493B-B801-82BDFBCB****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'string',
                'example' => '6',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4E9FDCFE-0738-493B-B801-82BDFBCB****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Data\\": \\"6\\",\\n  \\"Code\\": 1,\\n  \\"Success\\": true,\\n  \\"Message\\": \\"success\\"\\n}","type":"json"}]',
      'title' => '更新Nacos服务',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'UpdateNacosCluster' => 
    array (
      'summary' => '更新Nacos集群信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例id',
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-cn-123456',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务名',
            'description' => '服务名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hello_service',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分组名',
            'description' => '分组名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DEFAULT_GROUP',
          ),
        ),
        3 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '命名空间id',
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '9e78a671-4b9b-4dd4-99c1-0b9da87d3dec',
          ),
        ),
        4 => 
        array (
          'name' => 'ClusterName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Nacos集群名',
            'description' => 'Nacos集群名。',
            'type' => 'string',
            'required' => true,
            'example' => 'DEFAULT',
          ),
        ),
        5 => 
        array (
          'name' => 'CheckPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查端口',
            'description' => '健康检查端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '80',
          ),
        ),
        6 => 
        array (
          'name' => 'UseInstancePortForCheck',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否使用实例端口进行健康检查',
            'description' => '是否使用实例端口进行健康检查。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'HealthChecker',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查类型',
            'description' => '健康检查类型。',
            'type' => 'string',
            'required' => false,
            'example' => '{"type":"none"}',
          ),
        ),
        8 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'title' => 'http状态码',
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'title' => '请求id',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9e78a671-4b9b-4dd4-99c1-0b9da87d3dec',
              ),
              'Message' => 
              array (
                'title' => '响应信息',
                'description' => '响应信息。',
                'type' => 'string',
                'example' => '请求成功',
              ),
              'Code' => 
              array (
                'title' => '响应码',
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'title' => '成功标志',
                'description' => '成功标志。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'title' => '修改结果',
                'description' => '返回结果。',
                'type' => 'string',
                'example' => 'ok',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"9e78a671-4b9b-4dd4-99c1-0b9da87d3dec\\",\\n  \\"Message\\": \\"请求成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": \\"ok\\"\\n}","type":"json"}]',
      'title' => '更新Nacos集群',
    ),
    'ListAnsServiceClusters' => 
    array (
      'summary' => '查询Nacos服务的集群列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页展示实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MSE集群ID。
> 此处的集群与nacos服务下的集群概念不同，勿混淆。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-09k1q110q01',
          ),
        ),
        3 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'nacos.test.3',
          ),
        ),
        4 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'DEFAULT_GROUP',
          ),
        ),
        5 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => '12233****',
          ),
        ),
        6 => 
        array (
          'name' => 'ClusterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群别名。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-7413****',
          ),
        ),
        7 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_prepaid_public_cn-tl32a6****',
          ),
        ),
        8 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '52BA6DA6-A702-4362-A32F-DFF79655****',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'ProtectThreshold' => 
                  array (
                    'description' => '保护阈值。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '0',
                  ),
                  'GroupName' => 
                  array (
                    'description' => '服务所属服务组。',
                    'type' => 'string',
                    'example' => 'DEFAULT_GROUP',
                  ),
                  'Clusters' => 
                  array (
                    'description' => '集群信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DefaultCheckPort' => 
                        array (
                          'description' => '默认检查端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '80',
                        ),
                        'HealthCheckerType' => 
                        array (
                          'description' => '健康检查类型。',
                          'type' => 'string',
                          'example' => 'connection：链接存活检查
tcp: TCP连接检查
http：HTTP连接检查',
                        ),
                        'UseIPPort4Check' => 
                        array (
                          'description' => '服务端是否主动发起端到端健康状态检查，当服务为非临时服务时此值有效。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'ServiceName' => 
                        array (
                          'description' => '全量服务名。',
                          'type' => 'string',
                          'example' => 'DEFAULT_GROUP@@nacos.test.3',
                        ),
                        'Name' => 
                        array (
                          'description' => '集群名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'DefaultPort' => 
                        array (
                          'description' => '默认端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '80',
                        ),
                        'Metadata' => 
                        array (
                          'description' => '集群元数据。',
                          'type' => 'object',
                          'example' => '111',
                        ),
                      ),
                    ),
                  ),
                  'Name' => 
                  array (
                    'description' => '服务名称。',
                    'type' => 'string',
                    'example' => 'nacos.test.3',
                  ),
                  'SelectorType' => 
                  array (
                    'description' => '选举模式。',
                    'type' => 'string',
                    'example' => 'none',
                  ),
                  'Metadata' => 
                  array (
                    'description' => '服务元数据。',
                    'type' => 'object',
                    'example' => '111',
                  ),
                  'Ephemeral' => 
                  array (
                    'description' => '是否临时节点，取值如下：
- `true`：是。
- `false`：否。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Source' => 
                  array (
                    'description' => '服务类型，取值如下：
* console：控制台注册。
* sdk：SDK注册。
* governance：服务治理注册。',
                    'type' => 'string',
                    'example' => 'console',
                  ),
                  'AppDetail' => 
                  array (
                    'description' => '服务类型为服务治理注册时，服务所关联的服务治理应用信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AppId' => 
                      array (
                        'description' => '服务治理应用id。',
                        'type' => 'string',
                        'example' => 'hkhon1po62@904cba2c0xxxxxx',
                      ),
                      'AppName' => 
                      array (
                        'description' => '服务治理应用名。',
                        'type' => 'string',
                        'example' => 'spring-cloud-b',
                      ),
                      'Port' => 
                      array (
                        'description' => '服务治理应用端口。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '6001',
                      ),
                      'CheckType' => 
                      array (
                        'description' => '健康检查协议，取值如下：
* connection：链接存活检查。
* tcp: TCP连接检查。
* http：HTTP连接检查。',
                        'type' => 'string',
                        'example' => 'connection',
                      ),
                      'CheckPath' => 
                      array (
                        'description' => '健康检查路径（健康检查类型为http时携带）。',
                        'type' => 'string',
                        'example' => '/health',
                      ),
                      'CheckTimeout' => 
                      array (
                        'description' => '健康检查响应超时时间，单位：秒。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'CheckInternal' => 
                      array (
                        'description' => '健康检查间隔，单位：秒。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'HealthyCheckTimes' => 
                      array (
                        'description' => '健康检查健康阈值，指实例从不健康变为健康过程中健康探测重试次数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'UnhealthyCheckTimes' => 
                      array (
                        'description' => '健康检查不健康阈值，指实例从健康变为不健康过程中健康探测重试次数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"52BA6DA6-A702-4362-A32F-DFF79655****\\",\\n  \\"Data\\": {\\n    \\"ProtectThreshold\\": 0,\\n    \\"GroupName\\": \\"DEFAULT_GROUP\\",\\n    \\"Clusters\\": [\\n      {\\n        \\"DefaultCheckPort\\": 80,\\n        \\"HealthCheckerType\\": \\"connection：链接存活检查\\\\ntcp: TCP连接检查\\\\nhttp：HTTP连接检查\\",\\n        \\"UseIPPort4Check\\": true,\\n        \\"ServiceName\\": \\"DEFAULT_GROUP@@nacos.test.3\\",\\n        \\"Name\\": \\"test\\",\\n        \\"DefaultPort\\": 80,\\n        \\"Metadata\\": 111\\n      }\\n    ],\\n    \\"Name\\": \\"nacos.test.3\\",\\n    \\"SelectorType\\": \\"none\\",\\n    \\"Metadata\\": 111,\\n    \\"Ephemeral\\": true,\\n    \\"Source\\": \\"console\\",\\n    \\"AppDetail\\": {\\n      \\"AppId\\": \\"hkhon1po62@904cba2c0xxxxxx\\",\\n      \\"AppName\\": \\"spring-cloud-b\\",\\n      \\"Port\\": 6001,\\n      \\"CheckType\\": \\"connection\\",\\n      \\"CheckPath\\": \\"/health\\",\\n      \\"CheckTimeout\\": 5,\\n      \\"CheckInternal\\": 2,\\n      \\"HealthyCheckTimes\\": 2,\\n      \\"UnhealthyCheckTimes\\": 2\\n    }\\n  },\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true,\\n  \\"HttpCode\\": \\"200\\"\\n}","errorExample":""},{"type":"xml","example":"<ListAnsServiceClustersResponse>\\n<Message>请求处理成功</Message>\\n<RequestId>52BA6DA6-A702-4362-A32F-DFF79655****</RequestId>\\n<Data>\\n    <GroupName>DEFAULT_GROUP</GroupName>\\n    <SelectorType>none</SelectorType>\\n    <Metadata>111</Metadata>\\n    <ProtectThreshold>0</ProtectThreshold>\\n    <Name>DEFAULT</Name>\\n    <Clusters>\\n        <UseIPPort4Check>true</UseIPPort4Check>\\n        <DefaultCheckPort>80</DefaultCheckPort>\\n        <ServiceName>DEFAULT_GROUP@@consumers:com.alibaba.edas.IHelloService::</ServiceName>\\n        <Metadata>111</Metadata>\\n        <HealthCheckerType>心跳上报</HealthCheckerType>\\n        <DefaultPort>80</DefaultPort>\\n        <Name>test</Name>\\n    </Clusters>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</ListAnsServiceClustersResponse>","errorExample":""}]',
      'title' => '查询集群服务详情',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateNacosInstance' => 
    array (
      'summary' => '创建Nacos实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例id',
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-cn-123456',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务名',
            'description' => '服务名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hello_service',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分组名',
            'description' => '分组名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DEFAULT_GROUP',
          ),
        ),
        3 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '命名空间id',
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '9e78a671-4b9b-4dd4-99c1-0b9da87****',
          ),
        ),
        4 => 
        array (
          'name' => 'ClusterName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Nacos集群名',
            'description' => 'Nacos集群名。',
            'type' => 'string',
            'required' => false,
            'example' => 'DEFAULT',
          ),
        ),
        5 => 
        array (
          'name' => 'Ip',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Nacos实例ip',
            'description' => 'Nacos实例IP。',
            'type' => 'string',
            'required' => true,
            'example' => '1.2.xx.xx',
          ),
        ),
        6 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Nacos实例端口',
            'description' => 'Nacos实例端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'exclusiveMaximum' => true,
            'minimum' => '0',
            'exclusiveMinimum' => true,
            'example' => '12281',
          ),
        ),
        7 => 
        array (
          'name' => 'Ephemeral',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '临时节点标志',
            'description' => '临时节点标志。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '权重',
            'description' => '权重，为范围0～10000的整数。值越大，访问到该实例的频率越高。',
            'type' => 'string',
            'required' => true,
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'Enabled',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务禁用标志',
            'description' => '服务禁用标志。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'true',
          ),
        ),
        10 => 
        array (
          'name' => 'Metadata',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '节点元数据',
            'description' => '节点元数据。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"grayversion\\":\\"1.0\\",\\"preserved.register.source\\":\\"SPRING_CLOUD\\",\\"management.context-path\\":\\"\\"}',
          ),
        ),
        11 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'title' => 'http状态码',
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'title' => '请求id',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9e78a671-4b9b-4dd4-99c1-0b9da87d3dec',
              ),
              'Message' => 
              array (
                'title' => '响应信息',
                'description' => '响应信息。',
                'type' => 'string',
                'example' => '请求成功',
              ),
              'Code' => 
              array (
                'title' => '响应码',
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'title' => '成功标志',
                'description' => '成功标志。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'title' => '修改结果',
                'description' => '返回结果。',
                'type' => 'string',
                'example' => 'ok',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"9e78a671-4b9b-4dd4-99c1-0b9da87d3dec\\",\\n  \\"Message\\": \\"请求成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": \\"ok\\"\\n}","type":"json"}]',
      'title' => '创建Nacos实例',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'DeleteNacosInstance' => 
    array (
      'summary' => '删除Nacos服务下持久化实例。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'mse-cn-st21v5****',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'hello_service',
          ),
        ),
        2 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => '9e78a671-4b9b-4dd4-99c1-0b9da87****',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'DEFAULT_GROUP',
          ),
        ),
        4 => 
        array (
          'name' => 'ClusterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群别名。',
            'type' => 'string',
            'required' => false,
            'example' => 'DEFAULT',
            'default' => 'DEFAULT',
          ),
        ),
        5 => 
        array (
          'name' => 'Ip',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Nacos实例IP。',
            'type' => 'string',
            'required' => true,
            'example' => '10.237.1.32',
          ),
        ),
        6 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Nacos实例端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '8080',
          ),
        ),
        7 => 
        array (
          'name' => 'Ephemeral',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否临时节点标志，取值如下：
- `true`：是。
- `false`：否。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<String>',
            'description' => 'RestResult<String>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8BD1E58D-0755-42AC-A599-E6B55112****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'Code仅仅用来和Success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicMessage' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '节点数据。',
                'type' => 'string',
                'example' => 'OK',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"8BD1E58D-0755-42AC-A599-E6B55112****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": \\"OK\\"\\n}","type":"json"}]',
      'title' => '删除Nacos实例',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'UpdateNacosInstance' => 
    array (
      'summary' => '更新注册在Nacos中的实例信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例id',
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-cn-123456',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务名',
            'description' => '服务名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hello_service',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分组名',
            'description' => '分组名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DEFAULT_GROUP',
          ),
        ),
        3 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '命名空间id',
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '9e78a671-4b9b-4dd4-99c1-0****',
          ),
        ),
        4 => 
        array (
          'name' => 'ClusterName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Nacos集群名',
            'description' => 'Nacos集群名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'DEFAULT',
          ),
        ),
        5 => 
        array (
          'name' => 'Ip',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Nacos实例ip',
            'description' => 'Nacos实例IP。',
            'type' => 'string',
            'required' => true,
            'example' => '1.2.X.X',
          ),
        ),
        6 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Nacos实例端口',
            'description' => 'Nacos实例端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '12281',
          ),
        ),
        7 => 
        array (
          'name' => 'Ephemeral',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '临时节点标志',
            'description' => '是否为非持久化节点，取值如下：
- `true`：是。
- `false`：否。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '权重',
            'description' => '权重，为范围0～10000的整数。值越大，访问到该实例的频率越高。',
            'type' => 'string',
            'required' => true,
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'Enabled',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务禁用标志',
            'description' => '是否禁用此服务，取值如下：

- `true`：是。
- `false`：否。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'true',
          ),
        ),
        10 => 
        array (
          'name' => 'Metadata',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '节点元数据',
            'description' => '节点元数据。',
            'type' => 'string',
            'required' => false,
            'example' => '[int]',
          ),
        ),
        11 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '字符串对象。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'title' => 'http状态码',
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'title' => '请求id',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9e78a671-4b9b-4dd4-99c1-0b9da87d3dec',
              ),
              'Message' => 
              array (
                'title' => '响应信息',
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求成功',
              ),
              'Code' => 
              array (
                'title' => '响应码',
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'title' => '成功标志',
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'title' => '修改结果',
                'description' => '修改结果。',
                'type' => 'string',
                'example' => 'ok',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"9e78a671-4b9b-4dd4-99c1-0b9da87d3dec\\",\\n  \\"Message\\": \\"请求成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": \\"ok\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateNacosInstanceResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <RequestId>9e78a671-4b9b-4dd4-99c1-0b9da87d3dec</RequestId>\\n    <Message>请求成功</Message>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n    <Data>ok</Data>\\n</UpdateNacosInstanceResponse>","errorExample":""}]',
      'title' => '更新Nacos实例信息',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
    ),
    'ListAnsInstances' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页展示实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。><notice>此接口同时有InstanceId与ClusterId，则其中一项必填。></notice>
',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-09k1q11****',
          ),
        ),
        4 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'name',
          ),
        ),
        5 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '联系人组名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        6 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => '12233****',
          ),
        ),
        7 => 
        array (
          'name' => 'ClusterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群别名。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-7413****',
          ),
        ),
        8 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。><notice>此接口同时有InstanceId与ClusterId，则其中一项必填。></notice>
',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_prepaid_public_cn-tl327w****',
          ),
        ),
        9 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'TotalCount' => 
              array (
                'description' => '实例总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '52BA6DA6-A702-4362-A32F-DFF79655****',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'PageSize' => 
              array (
                'description' => '每页展示实例数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DefaultKey' => 
                    array (
                      'description' => '缺省键。',
                      'type' => 'string',
                      'example' => '30.5.XX.XX:unknown',
                    ),
                    'Ephemeral' => 
                    array (
                      'description' => '临时节点，取值如下：
- `true`：获取成功。
- `false`：获取失败。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'Marked' => 
                    array (
                      'description' => '标记，取值如下：
- `true`：标记成功。
- `false`：标记失败。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'Ip' => 
                    array (
                      'description' => '公网IP。',
                      'type' => 'string',
                      'example' => '30.5.XX.XX',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => '30.5.XX.XX#0#DEFAULT#DEFAULT_GROUP@@consumers:com.alibaba.edas.IHelloService',
                    ),
                    'Port' => 
                    array (
                      'description' => '端口号',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '8080',
                    ),
                    'LastBeat' => 
                    array (
                      'description' => '最近一次的心跳时间。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '20201010',
                    ),
                    'OkCount' => 
                    array (
                      'description' => '成功计数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'Weight' => 
                    array (
                      'description' => '权重。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'InstanceHeartBeatInterval' => 
                    array (
                      'description' => '实例心跳间隔，单位：秒。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '5000',
                    ),
                    'IpDeleteTimeout' => 
                    array (
                      'description' => 'IP删除超时。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '30000',
                    ),
                    'App' => 
                    array (
                      'description' => '应用名。',
                      'type' => 'string',
                      'example' => 'app',
                    ),
                    'FailCount' => 
                    array (
                      'description' => '失败计数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'Healthy' => 
                    array (
                      'description' => '实例健康状态，取值如下：
- `true`：实例健康。
- `false`：实例不健康。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'Enabled' => 
                    array (
                      'description' => '生效状态，取值如下：
- `true`：生效。
- `false`：不生效。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'DatumKey' => 
                    array (
                      'description' => '基准键。',
                      'type' => 'string',
                      'example' => '30.5.XX.XX:unknown:DEFAULT',
                    ),
                    'ClusterName' => 
                    array (
                      'description' => '集群名称。',
                      'type' => 'string',
                      'example' => 'DEFAULT',
                    ),
                    'InstanceHeartBeatTimeOut' => 
                    array (
                      'description' => '实例心跳超时。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '15000',
                    ),
                    'ServiceName' => 
                    array (
                      'description' => '服务名称。',
                      'type' => 'string',
                      'example' => 'DEFAULT_GROUP@@consumers:com.alibaba.edas.IHelloService::',
                    ),
                    'Metadata' => 
                    array (
                      'description' => '元数据。',
                      'type' => 'object',
                      'example' => '[int]',
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpCode\\": \\"202\\",\\n  \\"TotalCount\\": 7,\\n  \\"RequestId\\": \\"52BA6DA6-A702-4362-A32F-DFF79655****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"Data\\": [\\n    {\\n      \\"DefaultKey\\": \\"30.5.XX.XX:unknown\\",\\n      \\"Ephemeral\\": true,\\n      \\"Marked\\": true,\\n      \\"Ip\\": \\"30.5.XX.XX\\",\\n      \\"InstanceId\\": \\"30.5.XX.XX#0#DEFAULT#DEFAULT_GROUP@@consumers:com.alibaba.edas.IHelloService\\",\\n      \\"Port\\": 8080,\\n      \\"LastBeat\\": 20201010,\\n      \\"OkCount\\": 0,\\n      \\"Weight\\": 1,\\n      \\"InstanceHeartBeatInterval\\": 5000,\\n      \\"IpDeleteTimeout\\": 30000,\\n      \\"App\\": \\"app\\",\\n      \\"FailCount\\": 0,\\n      \\"Healthy\\": true,\\n      \\"Enabled\\": true,\\n      \\"DatumKey\\": \\"30.5.XX.XX:unknown:DEFAULT\\",\\n      \\"ClusterName\\": \\"DEFAULT\\",\\n      \\"InstanceHeartBeatTimeOut\\": 15000,\\n      \\"ServiceName\\": \\"DEFAULT_GROUP@@consumers:com.alibaba.edas.IHelloService::\\",\\n      \\"Metadata\\": {\\n        \\"test\\": \\"test\\",\\n        \\"test2\\": 1\\n      }\\n    }\\n  ],\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListAnsInstancesResponse>\\n<HttpCode>202</HttpCode>\\n<TotalCount>7</TotalCount>\\n<PageSize>10</PageSize>\\n<Message>请求处理成功</Message>\\n<RequestId>52BA6DA6-A702-4362-A32F-DFF79655****</RequestId>\\n<PageNumber>1</PageNumber>\\n<Data>\\n    <App>app</App>\\n    <InstanceId>30.5.XX.XX#0#DEFAULT#DEFAULT_GROUP@@consumers:com.alibaba.edas.IHelloService</InstanceId>\\n    <Ip>30.5.XX.XX</Ip>\\n    <Port>8080</Port>\\n    <Metadata>[int]</Metadata>\\n    <Enabled>true</Enabled>\\n    <Weight>1</Weight>\\n    <DatumKey>30.5.XX.XX:unknown:DEFAULT</DatumKey>\\n    <OkCount>0</OkCount>\\n    <ServiceName>DEFAULT_GROUP@@consumers:com.alibaba.edas.IHelloService::</ServiceName>\\n    <FailCount>0</FailCount>\\n    <ClusterName>DEFAULT</ClusterName>\\n    <LastBeat>20201010</LastBeat>\\n    <DefaultKey>30.5.XX.XX:unknown</DefaultKey>\\n    <InstanceHeartBeatTimeOut>15000</InstanceHeartBeatTimeOut>\\n    <Ephemeral>true</Ephemeral>\\n    <IpDeleteTimeout>30000</IpDeleteTimeout>\\n    <Marked>true</Marked>\\n    <Healthy>true</Healthy>\\n    <InstanceHeartBeatInterval>5000</InstanceHeartBeatInterval>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</ListAnsInstancesResponse>","errorExample":""}]',
      'title' => '查询Nacos服务实例列表',
      'summary' => '查询Nacos服务实例列表。',
      'description' => '> 当前的OpenAPI并非是Nacos-SDK API，Nacos-SDK API相关内容，请参见[官方文档](https://nacos.io/zh-cn/docs/sdk.html)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetServiceListeners' => 
    array (
      'summary' => '获取目标服务的监听者列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询指定的服务名信息',
            'description' => '查询指定的服务名信息。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'zeekr-orderboss',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务所在的分组',
            'description' => '服务所在的分组。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'WEB_GROUP',
          ),
        ),
        2 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务所在的 namespace',
            'description' => '服务所在的 namespace。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ddaf8f12-****-b1c1-86e7c72e266b',
          ),
        ),
        3 => 
        array (
          'name' => 'ClusterName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询服务下某个集群的实例列表是所需要的参数',
            'description' => '服务所属集群名字。
> 此处集群为nacos服务中的概念，非MSE集群。',
            'type' => 'string',
            'required' => false,
            'example' => 'DEFAULT',
          ),
        ),
        4 => 
        array (
          'name' => 'HasIpCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保留字段。',
            'type' => 'string',
            'required' => false,
            'example' => 'none',
          ),
        ),
        5 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前查询服务的集群标识',
            'description' => '待查询服务所属的MSE集群ID。
>  InstanceId与ClusterId其中一个必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-09k1q11****',
          ),
        ),
        6 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '当前查询服务的集群标识',
            'description' => '当前查询服务的集群ID。
>  InstanceId与ClusterId其中一个必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_prepaid_public_cn-tl32odtt20j',
          ),
        ),
        7 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询第几页',
            'description' => '查询第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页展示条数',
            'description' => '每页展示条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        9 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        10 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        11 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RegCenterOperatorResult',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Data' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据概览。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Addr' => 
                    array (
                      'title' => '地址',
                      'description' => '监听者的地址。',
                      'type' => 'string',
                      'example' => '119.23.84.102',
                    ),
                    'Agent' => 
                    array (
                      'title' => '客户端版本',
                      'description' => '监听者客户端版本。',
                      'type' => 'string',
                      'example' => 'Nacos-Java-Client:v2.1.1',
                    ),
                    'App' => 
                    array (
                      'title' => '应用',
                      'description' => '监听者的应用名称。',
                      'type' => 'string',
                      'example' => 'app',
                    ),
                    'IP' => 
                    array (
                      'title' => 'ip地址',
                      'description' => '被监听服务的IP地址。',
                      'type' => 'string',
                      'example' => '172.16.1.5',
                    ),
                    'Port' => 
                    array (
                      'title' => '端口号',
                      'description' => '被监听服务的端口号。',
                      'type' => 'string',
                      'example' => '8080',
                    ),
                    'NamespaceId' => 
                    array (
                      'title' => '命名空间id',
                      'description' => '命名空间ID。',
                      'type' => 'string',
                      'example' => '0ba53825-b183-414f-a6a0-288e4f1c467e',
                    ),
                    'ServiceName' => 
                    array (
                      'title' => '服务名称',
                      'description' => '被监听服务的名称。',
                      'type' => 'string',
                      'example' => 'zeekr-orderboss',
                    ),
                    'Cluster' => 
                    array (
                      'title' => '集群名称',
                      'description' => '被监听服务所属集群名字。',
                      'type' => 'string',
                      'example' => 'DEFAULT',
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'title' => '实例列表的页码',
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'title' => '查询到的实例总数',
                'description' => '查询到的监听者数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PageSize' => 
              array (
                'title' => '输入时设置的每页行数',
                'description' => '每页行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54973C90-F379-4372-9AA5-053A3F7****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Data\\": [\\n    {\\n      \\"Addr\\": \\"119.23.84.102\\",\\n      \\"Agent\\": \\"Nacos-Java-Client:v2.1.1\\",\\n      \\"App\\": \\"app\\",\\n      \\"IP\\": \\"172.16.1.5\\",\\n      \\"Port\\": \\"8080\\",\\n      \\"NamespaceId\\": \\"0ba53825-b183-414f-a6a0-288e4f1c467e\\",\\n      \\"ServiceName\\": \\"zeekr-orderboss\\",\\n      \\"Cluster\\": \\"DEFAULT\\"\\n    }\\n  ],\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 2,\\n  \\"PageSize\\": 10,\\n  \\"Success\\": true,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"54973C90-F379-4372-9AA5-053A3F7****\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpCode\\": \\"202\\"\\n}","type":"json"}]',
      'title' => '获取nacos服务监听者',
    ),
    'ListEurekaServices' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页展示实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-09k1q11****',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'TotalCount' => 
              array (
                'description' => '实例总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'PageSize' => 
              array (
                'description' => '每页展示实例数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'InstancesId' => 
                    array (
                      'description' => '实例信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '实例ID。',
                        'type' => 'string',
                        'example' => 'mse-cn-st21ri2****',
                      ),
                    ),
                    'Name' => 
                    array (
                      'description' => '服务名称。',
                      'type' => 'string',
                      'example' => 'CONTACTINFO',
                    ),
                    'UpStatus' => 
                    array (
                      'description' => '服务提供者数量，健康实例数/总实例数。',
                      'type' => 'string',
                      'example' => '1/1',
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpCode\\": \\"202\\",\\n  \\"TotalCount\\": 7,\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"Data\\": [\\n    {\\n      \\"InstancesId\\": [\\n        \\"mse-cn-st21ri2****\\"\\n      ],\\n      \\"Name\\": \\"CONTACTINFO\\",\\n      \\"UpStatus\\": \\"1/1\\"\\n    }\\n  ],\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListEurekaServicesResponse>\\n<HttpCode>202</HttpCode>\\n<TotalCount>7</TotalCount>\\n<PageSize>10</PageSize>\\n<Message>请求处理成功</Message>\\n<RequestId>316F5F64-F73D-42DC-8632-01E308B6****</RequestId>\\n<PageNumber>1</PageNumber>\\n<Data>\\n    <UpStatus>1/1</UpStatus>\\n    <Name>CONTACTINFO</Name>\\n    <InstancesId>mse-cn-st21ri2****</InstancesId>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</ListEurekaServicesResponse>","errorExample":""}]',
      'title' => '查询Eureka服务列表',
      'summary' => '查询Eureka服务列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListEurekaInstances' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页展示实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-09k1q11****',
          ),
        ),
        4 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'name',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'TotalCount' => 
              array (
                'description' => '实例总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'PageSize' => 
              array (
                'description' => '每页展示实例数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => '服务提供者数量，健康实例数/总实例数。',
                      'type' => 'string',
                      'example' => '1/1',
                    ),
                    'LastDirtyTimestamp' => 
                    array (
                      'description' => '实例属性最后更新的时间。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '20201009115543',
                    ),
                    'IpAddr' => 
                    array (
                      'description' => 'IP地址。',
                      'type' => 'string',
                      'example' => '30.5.XX.XX',
                    ),
                    'HomePageUrl' => 
                    array (
                      'description' => '主页地址。',
                      'type' => 'string',
                      'example' => 'http://30.5.XX.XX:8091/',
                    ),
                    'HostName' => 
                    array (
                      'description' => '主机名。',
                      'type' => 'string',
                      'example' => '30.5.XX.XX',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'L-PC1A6A28-****.hz.ali.com:contactinfo:8091',
                    ),
                    'Port' => 
                    array (
                      'description' => '服务端口。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '8091',
                    ),
                    'SecurePort' => 
                    array (
                      'description' => '安全端口。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '443',
                    ),
                    'App' => 
                    array (
                      'description' => '应用名。',
                      'type' => 'string',
                      'example' => 'CONTACTINFO',
                    ),
                    'DurationInSecs' => 
                    array (
                      'description' => '实例超时时间。  
超过这个时间后，服务默认不可用，将会被删除。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '90',
                    ),
                    'LastUpdatedTimestamp' => 
                    array (
                      'description' => '最近一次心跳时间。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '20201010071203',
                    ),
                    'RenewalIntervalInSecs' => 
                    array (
                      'description' => '心跳执行器在续约过程中超时后再次执行续约的最大延迟倍数。  
默认最大延迟倍数为10。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'VipAddress' => 
                    array (
                      'description' => 'VIP地址。',
                      'type' => 'string',
                      'example' => 'contactinfo',
                    ),
                    'Metadata' => 
                    array (
                      'description' => '元数据。',
                      'type' => 'object',
                      'example' => '[string]',
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpCode\\": \\"202\\",\\n  \\"TotalCount\\": 7,\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"Data\\": [\\n    {\\n      \\"Status\\": \\"1/1\\",\\n      \\"LastDirtyTimestamp\\": 20201009115543,\\n      \\"IpAddr\\": \\"30.5.XX.XX\\",\\n      \\"HomePageUrl\\": \\"http://30.5.XX.XX:8091/\\",\\n      \\"HostName\\": \\"30.5.XX.XX\\",\\n      \\"InstanceId\\": \\"L-PC1A6A28-****.hz.ali.com:contactinfo:8091\\",\\n      \\"Port\\": 8091,\\n      \\"SecurePort\\": 443,\\n      \\"App\\": \\"CONTACTINFO\\",\\n      \\"DurationInSecs\\": 90,\\n      \\"LastUpdatedTimestamp\\": 20201010071203,\\n      \\"RenewalIntervalInSecs\\": 10,\\n      \\"VipAddress\\": \\"contactinfo\\",\\n      \\"Metadata\\": {\\n        \\"test\\": \\"test\\",\\n        \\"test2\\": 1\\n      }\\n    }\\n  ],\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListEurekaInstancesResponse>\\n<HttpCode>202</HttpCode>\\n<TotalCount>7</TotalCount>\\n<PageSize>10</PageSize>\\n<Message>请求处理成功</Message>\\n<RequestId>316F5F64-F73D-42DC-8632-01E308B6****</RequestId>\\n<PageNumber>1</PageNumber>\\n<Data>\\n    <Status>1/1</Status>\\n    <App>CONTACTINFO</App>\\n    <RenewalIntervalInSecs>10</RenewalIntervalInSecs>\\n    <SecurePort>443</SecurePort>\\n    <IpAddr>30.5.XX.XX</IpAddr>\\n    <InstanceId>L-PC1A6A28-****.hz.ali.com:contactinfo:8091</InstanceId>\\n    <DurationInSecs>90</DurationInSecs>\\n    <VipAddress>contactinfo</VipAddress>\\n    <LastUpdatedTimestamp>20201010071203</LastUpdatedTimestamp>\\n    <Port>8091</Port>\\n    <Metadata>[string]</Metadata>\\n    <LastDirtyTimestamp>20201009115543</LastDirtyTimestamp>\\n    <HomePageUrl>http://30.5.XX.XX:8091/</HomePageUrl>\\n    <HostName>30.5.XX.XX</HostName>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</ListEurekaInstancesResponse>","errorExample":""}]',
      'title' => '查询Eureka实例列表',
      'summary' => '查询Eureka实例列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryMonitor' => 
    array (
      'summary' => '查询监控信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'MonitorType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控类型如下：

[基础系统指标]
- cpu使用量 cpuUsage
- 内存使用量 memoryUsage
- 磁盘使用量 diskUsage
- gc次数（每分钟） gcCount
- gc时间（每分钟）  gcTime

[nacos 注册中心]
- 服务数 serviceCount
- 写接口的平均请求耗时 writeCostTime
- 读接口的平均请求耗时 readCostTime
- TPS regCenterTps
- QPS regCenterQps

[nacos 配置中心]
- 配置数 publish
- 配置监听者数 getConfig

[zookeeper]
- TPS zk_TpsCount
- QPS zk_QpsCount
- 平均RT zookeeper_AvgRequestLatency',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'regCenterQps',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控开始时间戳。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1666678376',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监控结束时间戳。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1666678376',
          ),
        ),
        4 => 
        array (
          'name' => 'Step',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据点间隔，单位：s。  ',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'example' => '7',
          ),
        ),
        5 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-cn-****',
          ),
        ),
        6 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'ADDD8AB7-8D1C-4697-A83E-410D2607****',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据概览。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'podName' => 
                    array (
                      'description' => 'pod名称。',
                      'type' => 'string',
                      'example' => 'mse-xxxxxx-xxxxxx-reg-center-0-0',
                    ),
                    'clusterNamePrefix' => 
                    array (
                      'description' => '名称前缀。',
                      'type' => 'string',
                      'example' => 'mse-xxxx-xxxxxx',
                    ),
                    'values' => 
                    array (
                      'description' => '数据概览。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '数据内容。',
                        'type' => 'object',
                      ),
                    ),
                  ),
                ),
                'example' => '6',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"ADDD8AB7-8D1C-4697-A83E-410D2607****\\",\\n  \\"Data\\": [\\n    {\\n      \\"podName\\": \\"mse-xxxxxx-xxxxxx-reg-center-0-0\\",\\n      \\"clusterNamePrefix\\": \\"mse-xxxx-xxxxxx\\",\\n      \\"values\\": [\\n        {\\n          \\"test\\": \\"test\\",\\n          \\"test2\\": 1\\n        }\\n      ]\\n    }\\n  ],\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<QueryMonitorResponse>\\n<RequestId>ADDD8AB7-8D1C-4697-A83E-410D2607****</RequestId>\\n<Message>请求处理成功</Message>\\n<Data>6</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</QueryMonitorResponse>","errorExample":""}]',
      'title' => '查询监控信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateAcl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AclEntryList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '白名单列表。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '192.168.0.0/XX,192.168.0.0/XX',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-cn-78v1l83****',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7466566F-F30F-4A29-965D-3E0AF21D****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-100',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"7466566F-F30F-4A29-965D-3E0AF21D****\\",\\n  \\"ErrorCode\\": \\"mse-100-100\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateAclResponse>\\n<Message>请求处理成功</Message>\\n<RequestId>7466566F-F30F-4A29-965D-3E0AF21D****</RequestId>\\n<ErrorCode>mse-100-100</ErrorCode>\\n<Success>true</Success>\\n</UpdateAclResponse>","errorExample":""}]',
      'title' => '更新白名单',
      'summary' => '修改白名单。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryInstancesInfo' => 
    array (
      'summary' => '查询指定集群的运行时数据。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-09k1q11****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_prepaid_public_cn-tl32g1u9k01',
          ),
        ),
        2 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单ID。',
            'type' => 'string',
            'required' => false,
            'example' => '20574710974****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所属地域的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResult',
            'description' => 'BaseResult',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54973C90-F379-4372-9AA5-053A3F7****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据概览。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'HealthStatus' => 
                    array (
                      'description' => '预留字段。',
                      'type' => 'string',
                      'example' => 'null',
                    ),
                    'Role' => 
                    array (
                      'description' => '预留字段。',
                      'type' => 'string',
                      'example' => 'null',
                    ),
                    'PodName' => 
                    array (
                      'description' => 'POD名称。',
                      'type' => 'string',
                      'example' => 'mse-xxxxx-xxxxx-reg-center-0-1',
                    ),
                    'Ip' => 
                    array (
                      'description' => 'POD的IP。',
                      'type' => 'string',
                      'example' => '25.24.91.x',
                    ),
                    'InternetIp' => 
                    array (
                      'description' => '公网IP。',
                      'type' => 'string',
                      'example' => '120.55.71.x',
                    ),
                    'SingleTunnelVip' => 
                    array (
                      'description' => '内网IP。',
                      'type' => 'string',
                      'example' => '172.16.66.x',
                    ),
                    'CreationTimestamp' => 
                    array (
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2022-12-15T02:02:15Z',
                    ),
                    'ClientPort' => 
                    array (
                      'description' => '启用的端口。',
                      'type' => 'string',
                      'example' => '8848',
                    ),
                    'Zone' => 
                    array (
                      'description' => '可用区。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou-k',
                    ),
                    'ZoneDistributed' => 
                    array (
                      'description' => '所有Pod是否已满足多可用区分布。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"54973C90-F379-4372-9AA5-053A3F7****\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpCode\\": \\"202\\",\\n  \\"Data\\": [\\n    {\\n      \\"HealthStatus\\": \\"null\\",\\n      \\"Role\\": \\"null\\",\\n      \\"PodName\\": \\"mse-xxxxx-xxxxx-reg-center-0-1\\",\\n      \\"Ip\\": \\"25.24.91.x\\",\\n      \\"InternetIp\\": \\"120.55.71.x\\",\\n      \\"SingleTunnelVip\\": \\"172.16.66.x\\",\\n      \\"CreationTimestamp\\": \\"2022-12-15T02:02:15Z\\",\\n      \\"ClientPort\\": \\"8848\\",\\n      \\"Zone\\": \\"cn-hangzhou-k\\",\\n      \\"ZoneDistributed\\": true\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询集群静态信息',
    ),
    'QueryClusterInfo' => 
    array (
      'summary' => '查询集群的静态信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-09k1q11****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_prepaid_public_cn-7mz2t63ci03',
          ),
        ),
        2 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单ID。',
            'type' => 'string',
            'required' => false,
            'example' => '20574710974****',
          ),
        ),
        3 => 
        array (
          'name' => 'AclSwitch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否查询公网白名单配置。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        6 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '415088B3-A7BE-56F6-9CD9-C42DE895CD41',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'VpcId' => 
                  array (
                    'description' => '集群所处的VPC ID。',
                    'type' => 'string',
                    'example' => 'vpc-bp1v5nbauzh8xxxxxxx',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '集群创建时间。',
                    'type' => 'string',
                    'example' => '2022-12-15 10:02:07',
                  ),
                  'IntranetAddress' => 
                  array (
                    'description' => '预留字段。',
                    'type' => 'string',
                    'example' => 'null',
                  ),
                  'DiskType' => 
                  array (
                    'description' => '废弃字段。',
                    'type' => 'string',
                    'example' => 'null',
                  ),
                  'PubNetworkFlow' => 
                  array (
                    'description' => '公网带宽，单位：Mbps。   
取值范围：0~5000，其中0表示不接入公网。',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'DiskCapacity' => 
                  array (
                    'description' => '废弃字段。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => 'null',
                  ),
                  'MemoryCapacity' => 
                  array (
                    'description' => '废弃字段。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => 'null',
                  ),
                  'ClusterAliasName' => 
                  array (
                    'description' => '集群别名。',
                    'type' => 'string',
                    'example' => '开发环境',
                  ),
                  'InstanceCount' => 
                  array (
                    'description' => '集群实例数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'IntranetPort' => 
                  array (
                    'description' => '集群内网开放的端口。',
                    'type' => 'string',
                    'example' => '8848,6443,9848,8761',
                  ),
                  'InstanceModels' => 
                  array (
                    'description' => '预留结构。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '预留结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'PodName' => 
                        array (
                          'description' => '预留字段。',
                          'type' => 'string',
                          'example' => 'null',
                        ),
                        'SingleTunnelVip' => 
                        array (
                          'description' => '预留字段。',
                          'type' => 'string',
                          'example' => 'null',
                        ),
                        'InternetIp' => 
                        array (
                          'description' => '预留字段。',
                          'type' => 'string',
                          'example' => 'null',
                        ),
                        'Ip' => 
                        array (
                          'description' => '预留字段。',
                          'type' => 'string',
                          'example' => 'null',
                        ),
                        'Role' => 
                        array (
                          'description' => '预留字段。',
                          'type' => 'string',
                          'example' => 'null',
                        ),
                        'HealthStatus' => 
                        array (
                          'description' => '预留字段。',
                          'type' => 'string',
                          'example' => 'null',
                        ),
                        'CreationTimestamp' => 
                        array (
                          'description' => '预留字段。',
                          'type' => 'string',
                          'example' => 'null',
                        ),
                        'Zone' => 
                        array (
                          'description' => '预留字段。',
                          'type' => 'string',
                          'example' => 'null',
                        ),
                      ),
                    ),
                  ),
                  'IntranetDomain' => 
                  array (
                    'description' => '内网域名。',
                    'type' => 'string',
                    'example' => 'mse-xxxxx-nacos-ans.mse.aliyuncs.com',
                  ),
                  'InternetDomain' => 
                  array (
                    'description' => '公网域名。',
                    'type' => 'string',
                    'example' => 'mse-xxxxxx-p.nacos-ans.mse.aliyuncs.com',
                  ),
                  'PayInfo' => 
                  array (
                    'description' => '付费方式。',
                    'type' => 'string',
                    'example' => '按量付费',
                  ),
                  'InternetAddress' => 
                  array (
                    'description' => '预留字段。',
                    'type' => 'string',
                    'example' => 'null',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'mse-cn-st21ri2****',
                  ),
                  'AclEntryList' => 
                  array (
                    'description' => '公网白名单。',
                    'type' => 'string',
                    'example' => '["127.0.0.0/32"]',
                  ),
                  'HealthStatus' => 
                  array (
                    'description' => '集群状态。',
                    'type' => 'string',
                    'example' => 'INIT_SUCCESS',
                  ),
                  'InitCostTime' => 
                  array (
                    'description' => '集群初始化所用的时间（毫秒）。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '53353',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '地域ID。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'AclId' => 
                  array (
                    'description' => '公网白名单实例ID',
                    'type' => 'string',
                    'example' => 'acl-bp144q24cgqvzckmxxxx',
                  ),
                  'Cpu' => 
                  array (
                    'description' => '废弃字段。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => 'null',
                  ),
                  'ClusterType' => 
                  array (
                    'description' => '集群类型，包括ZooKeeper、Nacos-Ans和Eureka。',
                    'type' => 'string',
                    'example' => 'Nacos-Ans',
                  ),
                  'ClusterName' => 
                  array (
                    'description' => '集群完整名称。',
                    'type' => 'string',
                    'example' => 'mse-74355150-xxxxxxx',
                  ),
                  'InitStatus' => 
                  array (
                    'description' => '初始化状态。',
                    'type' => 'string',
                    'example' => 'INIT_SUCCESS',
                  ),
                  'InternetPort' => 
                  array (
                    'description' => '公网集群开放端口。',
                    'type' => 'string',
                    'example' => '8848,6443,9848,8761',
                  ),
                  'AppVersion' => 
                  array (
                    'description' => '集群版本号。',
                    'type' => 'string',
                    'example' => '2.1.0',
                  ),
                  'NetType' => 
                  array (
                    'description' => '集群网络连接类型。',
                    'type' => 'string',
                    'example' => 'privatenet',
                  ),
                  'ClusterVersion' => 
                  array (
                    'description' => '订单版本。',
                    'type' => 'string',
                    'example' => 'NACOS_2_0_0',
                  ),
                  'ClusterSpecification' => 
                  array (
                    'description' => '引擎规格。',
                    'type' => 'string',
                    'example' => 'MSE_SC_2_4_60_c',
                  ),
                  'VSwitchId' => 
                  array (
                    'description' => '交换机ID。',
                    'type' => 'string',
                    'example' => 'vsw-bp1egfakxxxxx',
                  ),
                  'ConnectionType' => 
                  array (
                    'description' => '废弃字段。',
                    'type' => 'string',
                    'example' => 'null',
                  ),
                  'MseVersion' => 
                  array (
                    'description' => '集群版本。',
                    'type' => 'string',
                    'example' => 'mse_pro',
                  ),
                  'ChargeType' => 
                  array (
                    'title' => '',
                    'description' => '付费模式，包括包年包月和按量付费。',
                    'type' => 'string',
                    'example' => 'POSTPAY',
                  ),
                  'Tags' => 
                  array (
                    'description' => '标签。',
                    'type' => 'object',
                  ),
                  'ExpectZones' => 
                  array (
                    'description' => '当前集群可打散到的可用区列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '可用区ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou-k',
                    ),
                  ),
                  'MaintenancePeriod' => 
                  array (
                    'description' => '运维时间窗口',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'EndTime' => 
                      array (
                        'description' => '运维时间窗口开始时间',
                        'type' => 'string',
                        'example' => '02:00',
                      ),
                      'StartTime' => 
                      array (
                        'description' => '运维时间窗口结束时间',
                        'type' => 'string',
                        'example' => '06:00',
                      ),
                    ),
                  ),
                  'EndDate' => 
                  array (
                    'title' => '到期时间（包年包月）',
                    'description' => '到期时间（包年包月）',
                    'type' => 'string',
                    'example' => '2021-08-01 00:00:00',
                  ),
                  'SecurityGroupId' => 
                  array (
                    'title' => 'ENI网络接入的安全组ID',
                    'description' => 'ENI网络接入的安全组ID',
                    'type' => 'string',
                    'example' => 'sg-uf6hgwe067prhg68agfa',
                  ),
                  'SecurityGroupType' => 
                  array (
                    'title' => 'ENI网络接入的安全组类型',
                    'description' => 'ENI网络接入的安全组类型',
                    'type' => 'string',
                    'example' => 'enterprise',
                    'enum' => 
                    array (
                      0 => 'enterprise',
                      1 => 'normal',
                    ),
                  ),
                  'EipInstanceId' => 
                  array (
                    'title' => '弹性公网IP（EIP）的实例ID',
                    'description' => '弹性公网IP（EIP）的实例ID',
                    'type' => 'string',
                    'example' => 'eip-bp1uujshd5funmyy8rcl9',
                  ),
                  'CanUpdate' => 
                  array (
                    'type' => 'boolean',
                  ),
                  'VersionCode' => 
                  array (
                    'type' => 'string',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"415088B3-A7BE-56F6-9CD9-C42DE895CD41\\",\\n  \\"Data\\": {\\n    \\"VpcId\\": \\"vpc-bp1v5nbauzh8xxxxxxx\\",\\n    \\"CreateTime\\": \\"2022-12-15 10:02:07\\",\\n    \\"IntranetAddress\\": \\"null\\",\\n    \\"DiskType\\": \\"null\\",\\n    \\"PubNetworkFlow\\": \\"1\\",\\n    \\"DiskCapacity\\": 0,\\n    \\"MemoryCapacity\\": 0,\\n    \\"ClusterAliasName\\": \\"开发环境\\",\\n    \\"InstanceCount\\": 3,\\n    \\"IntranetPort\\": \\"8848,6443,9848,8761\\",\\n    \\"InstanceModels\\": [\\n      {\\n        \\"PodName\\": \\"null\\",\\n        \\"SingleTunnelVip\\": \\"null\\",\\n        \\"InternetIp\\": \\"null\\",\\n        \\"Ip\\": \\"null\\",\\n        \\"Role\\": \\"null\\",\\n        \\"HealthStatus\\": \\"null\\",\\n        \\"CreationTimestamp\\": \\"null\\",\\n        \\"Zone\\": \\"null\\"\\n      }\\n    ],\\n    \\"IntranetDomain\\": \\"mse-xxxxx-nacos-ans.mse.aliyuncs.com\\",\\n    \\"InternetDomain\\": \\"mse-xxxxxx-p.nacos-ans.mse.aliyuncs.com\\",\\n    \\"PayInfo\\": \\"按量付费\\",\\n    \\"InternetAddress\\": \\"null\\",\\n    \\"InstanceId\\": \\"mse-cn-st21ri2****\\",\\n    \\"AclEntryList\\": \\"[\\\\\\"127.0.0.0/32\\\\\\"]\\",\\n    \\"HealthStatus\\": \\"INIT_SUCCESS\\",\\n    \\"InitCostTime\\": 53353,\\n    \\"RegionId\\": \\"cn-hangzhou\\",\\n    \\"AclId\\": \\"acl-bp144q24cgqvzckmxxxx\\",\\n    \\"Cpu\\": 0,\\n    \\"ClusterType\\": \\"Nacos-Ans\\",\\n    \\"ClusterName\\": \\"mse-74355150-xxxxxxx\\",\\n    \\"InitStatus\\": \\"INIT_SUCCESS\\",\\n    \\"InternetPort\\": \\"8848,6443,9848,8761\\",\\n    \\"AppVersion\\": \\"2.1.0\\",\\n    \\"NetType\\": \\"privatenet\\",\\n    \\"ClusterVersion\\": \\"NACOS_2_0_0\\",\\n    \\"ClusterSpecification\\": \\"MSE_SC_2_4_60_c\\",\\n    \\"VSwitchId\\": \\"vsw-bp1egfakxxxxx\\",\\n    \\"ConnectionType\\": \\"null\\",\\n    \\"MseVersion\\": \\"mse_pro\\",\\n    \\"ChargeType\\": \\"POSTPAY\\",\\n    \\"Tags\\": {\\n      \\"test\\": \\"test\\",\\n      \\"test2\\": 1\\n    },\\n    \\"ExpectZones\\": [\\n      \\"cn-hangzhou-k\\"\\n    ],\\n    \\"MaintenancePeriod\\": {\\n      \\"EndTime\\": \\"02:00\\",\\n      \\"StartTime\\": \\"06:00\\"\\n    },\\n    \\"EndDate\\": \\"2021-08-01 00:00:00\\",\\n    \\"SecurityGroupId\\": \\"sg-uf6hgwe067prhg68agfa\\",\\n    \\"SecurityGroupType\\": \\"enterprise\\",\\n    \\"EipInstanceId\\": \\"eip-bp1uujshd5funmyy8rcl9\\",\\n    \\"CanUpdate\\": true,\\n    \\"VersionCode\\": \\"\\"\\n  },\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询集群静态信息',
    ),
    'QueryClusterDetail' => 
    array (
      'summary' => '接口查询集群详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-cn-st21ri2****',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '20576750143****',
          ),
        ),
        2 => 
        array (
          'name' => 'AclSwitch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否查询ACL。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '字符串对象。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9515ACA4-E94D-440D-989E-C379FCED****',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'VpcId' => 
                  array (
                    'description' => 'VPC ID。',
                    'type' => 'string',
                    'example' => 'vpc-bp1hcg467ekqsv0zr****',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '集群创建时间。',
                    'type' => 'string',
                    'example' => '2020-07-31 11:36:08',
                  ),
                  'IntranetAddress' => 
                  array (
                    'description' => '私网地址。',
                    'type' => 'string',
                    'example' => '192.168.XX.XX',
                  ),
                  'DiskType' => 
                  array (
                    'description' => '磁盘类型。',
                    'type' => 'string',
                    'example' => 'alicloud-disk-ssd-multi-zone',
                  ),
                  'PubNetworkFlow' => 
                  array (
                    'description' => '公网带宽，单位：Mbps。   
取值范围：0~5000，其中0表示不接入公网。',
                    'type' => 'string',
                    'example' => '3',
                  ),
                  'DiskCapacity' => 
                  array (
                    'description' => '磁盘容量，单位：G。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '60',
                  ),
                  'MemoryCapacity' => 
                  array (
                    'description' => '内存大小，单位：G。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2',
                  ),
                  'ClusterAliasName' => 
                  array (
                    'description' => '集群别名。',
                    'type' => 'string',
                    'example' => 'mse-7413****',
                  ),
                  'InstanceCount' => 
                  array (
                    'description' => '集群实例数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'IntranetPort' => 
                  array (
                    'description' => '私网端口。',
                    'type' => 'string',
                    'example' => '8761',
                  ),
                  'InstanceModels' => 
                  array (
                    'description' => '实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '字符串对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'PodName' => 
                        array (
                          'description' => 'Pod名称。',
                          'type' => 'string',
                          'example' => 'mse-7413****-159616656****-reg-center-0-0',
                        ),
                        'SingleTunnelVip' => 
                        array (
                          'description' => '单线程IP。',
                          'type' => 'string',
                          'example' => '192.168.XX.XX',
                        ),
                        'InternetIp' => 
                        array (
                          'description' => '公网IP。',
                          'type' => 'string',
                          'example' => '47.98.XX.XX',
                        ),
                        'Ip' => 
                        array (
                          'description' => '实例IP。',
                          'type' => 'string',
                          'example' => '10.12.XX.XX',
                        ),
                        'Role' => 
                        array (
                          'description' => '角色。',
                          'type' => 'string',
                          'example' => 'Peer',
                        ),
                        'HealthStatus' => 
                        array (
                          'description' => '实例健康状态。',
                          'type' => 'string',
                          'example' => 'Running',
                        ),
                        'CreationTimestamp' => 
                        array (
                          'description' => '创建时间戳。',
                          'type' => 'string',
                          'example' => '1578575377732',
                        ),
                        'Zone' => 
                        array (
                          'description' => '可用区。',
                          'type' => 'string',
                          'example' => 'cn-shanghai-f',
                        ),
                      ),
                    ),
                  ),
                  'IntranetDomain' => 
                  array (
                    'description' => '私网域名。',
                    'type' => 'string',
                    'example' => 'mse-7413****-eureka.mse.aliyuncs.com',
                  ),
                  'InternetDomain' => 
                  array (
                    'description' => '公网域名。',
                    'type' => 'string',
                    'example' => 'mse-7413****-p.eureka.mse.aliyuncs.com',
                  ),
                  'PayInfo' => 
                  array (
                    'description' => '付费类型，包括包年包月和按量付费类型。',
                    'type' => 'string',
                    'example' => '按量付费',
                  ),
                  'InternetAddress' => 
                  array (
                    'description' => '公网地址。',
                    'type' => 'string',
                    'example' => '47.98.XX.XX',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'mse-cn-st21ri2****',
                  ),
                  'AclEntryList' => 
                  array (
                    'description' => '白名单列表。',
                    'type' => 'string',
                    'example' => '[]',
                  ),
                  'HealthStatus' => 
                  array (
                    'description' => '集群健康状态。',
                    'type' => 'string',
                    'example' => 'RESTART_SUCCESS',
                  ),
                  'InitCostTime' => 
                  array (
                    'description' => '集群创建耗时，单位：ms。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '98408',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '地域ID。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'AclId' => 
                  array (
                    'description' => '白名单ID。',
                    'type' => 'string',
                    'example' => 'acl-bp17020kiqvzutwwj****',
                  ),
                  'Cpu' => 
                  array (
                    'description' => 'CPU数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ClusterType' => 
                  array (
                    'description' => '集群类型，包括ZooKeeper、Nacos-Ans和Eureka。',
                    'type' => 'string',
                    'example' => 'Nacos-Ans',
                  ),
                  'ClusterName' => 
                  array (
                    'description' => '集群名称。',
                    'type' => 'string',
                    'example' => 'mse-bc1a29b0-160230875****',
                  ),
                  'InitStatus' => 
                  array (
                    'description' => '集群创建状态。',
                    'type' => 'string',
                    'example' => 'RESTART_SUCCESS',
                  ),
                  'InternetPort' => 
                  array (
                    'description' => '私网端口。',
                    'type' => 'string',
                    'example' => '8761',
                  ),
                  'AppVersion' => 
                  array (
                    'description' => 'APP版本。',
                    'type' => 'string',
                    'example' => '1.2.1',
                  ),
                  'NetType' => 
                  array (
                    'description' => '网络类型，取值如下：

- `privatenet`：表示专有网络。
- `pubnet`：表示公网。',
                    'type' => 'string',
                    'example' => 'privatenet',
                  ),
                  'ClusterVersion' => 
                  array (
                    'description' => '集群版本。',
                    'type' => 'string',
                    'example' => '1.2.1',
                  ),
                  'ClusterSpecification' => 
                  array (
                    'description' => '引擎规格。',
                    'type' => 'string',
                    'example' => 'MSE_SC_1_2_200_c',
                  ),
                  'VSwitchId' => 
                  array (
                    'description' => '交换机ID。',
                    'type' => 'string',
                    'example' => 'vsw-xxx-xxxx',
                  ),
                  'ConnectionType' => 
                  array (
                    'description' => '网络连接类型，取值如下：

- slb
- eni',
                    'type' => 'string',
                    'example' => 'slb',
                  ),
                  'MseVersion' => 
                  array (
                    'description' => 'MSE版本号',
                    'type' => 'string',
                    'example' => 'mse_basic',
                  ),
                  'ChargeType' => 
                  array (
                    'description' => '付费模式，包括包年包月和按量付费。',
                    'type' => 'string',
                    'example' => '按量付费',
                  ),
                  'OrderClusterVersion' => 
                  array (
                    'description' => '原始订单版本号。',
                    'type' => 'string',
                    'example' => '1.2.0',
                  ),
                  'Tags' => 
                  array (
                    'description' => '实例所绑定的标签。',
                    'type' => 'object',
                  ),
                  'ResourceGroupId' => 
                  array (
                    'description' => '资源组 ID。',
                    'type' => 'string',
                    'example' => 'rg-aek2dhgysj*****',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"9515ACA4-E94D-440D-989E-C379FCED****\\",\\n  \\"Data\\": {\\n    \\"VpcId\\": \\"vpc-bp1hcg467ekqsv0zr****\\",\\n    \\"CreateTime\\": \\"2020-07-31 11:36:08\\",\\n    \\"IntranetAddress\\": \\"192.168.XX.XX\\",\\n    \\"DiskType\\": \\"alicloud-disk-ssd-multi-zone\\",\\n    \\"PubNetworkFlow\\": \\"3\\",\\n    \\"DiskCapacity\\": 60,\\n    \\"MemoryCapacity\\": 2,\\n    \\"ClusterAliasName\\": \\"mse-7413****\\",\\n    \\"InstanceCount\\": 3,\\n    \\"IntranetPort\\": \\"8761\\",\\n    \\"InstanceModels\\": [\\n      {\\n        \\"PodName\\": \\"mse-7413****-159616656****-reg-center-0-0\\",\\n        \\"SingleTunnelVip\\": \\"192.168.XX.XX\\",\\n        \\"InternetIp\\": \\"47.98.XX.XX\\",\\n        \\"Ip\\": \\"10.12.XX.XX\\",\\n        \\"Role\\": \\"Peer\\",\\n        \\"HealthStatus\\": \\"Running\\",\\n        \\"CreationTimestamp\\": \\"1578575377732\\",\\n        \\"Zone\\": \\"cn-shanghai-f\\"\\n      }\\n    ],\\n    \\"IntranetDomain\\": \\"mse-7413****-eureka.mse.aliyuncs.com\\",\\n    \\"InternetDomain\\": \\"mse-7413****-p.eureka.mse.aliyuncs.com\\",\\n    \\"PayInfo\\": \\"按量付费\\",\\n    \\"InternetAddress\\": \\"47.98.XX.XX\\",\\n    \\"InstanceId\\": \\"mse-cn-st21ri2****\\",\\n    \\"AclEntryList\\": \\"[]\\",\\n    \\"HealthStatus\\": \\"RESTART_SUCCESS\\",\\n    \\"InitCostTime\\": 98408,\\n    \\"RegionId\\": \\"cn-hangzhou\\",\\n    \\"AclId\\": \\"acl-bp17020kiqvzutwwj****\\",\\n    \\"Cpu\\": 1,\\n    \\"ClusterType\\": \\"Nacos-Ans\\",\\n    \\"ClusterName\\": \\"mse-bc1a29b0-160230875****\\",\\n    \\"InitStatus\\": \\"RESTART_SUCCESS\\",\\n    \\"InternetPort\\": \\"8761\\",\\n    \\"AppVersion\\": \\"1.2.1\\",\\n    \\"NetType\\": \\"privatenet\\",\\n    \\"ClusterVersion\\": \\"1.2.1\\",\\n    \\"ClusterSpecification\\": \\"MSE_SC_1_2_200_c\\",\\n    \\"VSwitchId\\": \\"vsw-xxx-xxxx\\",\\n    \\"ConnectionType\\": \\"slb\\",\\n    \\"MseVersion\\": \\"mse_basic\\",\\n    \\"ChargeType\\": \\"按量付费\\",\\n    \\"OrderClusterVersion\\": \\"1.2.0\\",\\n    \\"Tags\\": {\\n      \\"test\\": \\"test\\",\\n      \\"test2\\": 1\\n    },\\n    \\"ResourceGroupId\\": \\"rg-aek2dhgysj*****\\"\\n  },\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<QueryClusterDetailResponse>\\n<RequestId>E7744898-AF7E-4FBC-9123-EAF01CFA****</RequestId>\\n<Message>请求处理成功</Message>\\n<Data>\\n    <InternetAddress>47.98.XX.XX</InternetAddress>\\n    <AclEntryList>[]</AclEntryList>\\n    <Cpu>1</Cpu>\\n    <InternetPort>8761</InternetPort>\\n    <IntranetPort>8761</IntranetPort>\\n    <AppVersion>1.9.3</AppVersion>\\n    <DiskType>alicloud-disk-ssd-multi-zone</DiskType>\\n    <PayInfo>按量付费</PayInfo>\\n    <InitCostTime>98408</InitCostTime>\\n    <ClusterName>mse-74131be0-159616656****</ClusterName>\\n    <IntranetDomain>mse-7413****-eureka.mse.aliyuncs.com</IntranetDomain>\\n    <ClusterId>mse-7413****</ClusterId>\\n    <InstanceId>mse-cn-st21ri2****</InstanceId>\\n    <InternetDomain>mse-7413****-p.eureka.mse.aliyuncs.com</InternetDomain>\\n    <CreateTime>2020-07-31 11:36:08</CreateTime>\\n    <AclId>acl-bp17020kiqvzutwwj****</AclId>\\n    <HealthStatus>RESTART_SUCCESS</HealthStatus>\\n    <ClusterType>Eureka</ClusterType>\\n    <MemoryCapacity>2</MemoryCapacity>\\n    <ClusterAliasName>mse-7413****</ClusterAliasName>\\n    <InstanceModels>\\n        <Role>Peer</Role>\\n        <PodName>mse-7413****-159616656****-reg-center-0-0</PodName>\\n        <InternetIp>47.98.XX.XX</InternetIp>\\n        <InstanceId>mse-cn-st21ri2****</InstanceId>\\n        <ClusterId>mse-7413****</ClusterId>\\n        <SingleTunnelVip>192.168.XX.XX</SingleTunnelVip>\\n        <Ip>10.12.XX.XX</Ip>\\n        <HealthStatus>Running</HealthStatus>\\n        <InstanceType>xxx</InstanceType>\\n        <Vip>XXX</Vip>\\n        <ZkClientPort>2181</ZkClientPort>\\n    </InstanceModels>\\n    <InstanceCount>3</InstanceCount>\\n    <IntranetAddress>192.168.XX.XX</IntranetAddress>\\n    <DiskCapacity>60</DiskCapacity>\\n    <VpcId>vpc-bp1hcg467ekqsv0zr****</VpcId>\\n    <PubNetworkFlow>3</PubNetworkFlow>\\n    <RegionId>cn-hangzhou</RegionId>\\n    <InitStatus>RESTART_SUCCESS</InitStatus>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</QueryClusterDetailResponse>","errorExample":""}]',
      'title' => '查询集群详情',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateCluster' => 
    array (
      'summary' => '创建一个注册配置中心（ZooKeeper、Nacos等）集群。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PubNetworkFlow',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'ConnectionType为`slb`时有效，0表示不创建公网接入SLB，1以上值表示公网接入SLB的带宽固定值；单位Mbps',
            'description' => 'ConnectionType为`slb`时有效，0表示不创建公网接入SLB，1以上值表示公网接入SLB的带宽固定值；单位Mbps。

取值范围：0~5000。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '0',
          ),
        ),
        1 => 
        array (
          'name' => 'PubSlbSpecification',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '不再使用',
            'description' => '不再使用',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'docRequired' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'DiskType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '不再使用',
            'description' => '不再使用',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'docRequired' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'vpc-bp1t50e045b5g7i3p****',
          ),
        ),
        4 => 
        array (
          'name' => 'NetType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络类型，取值如下：
- `privatenet`：表示专有网络。
- `pubnet`：表示公网。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'privatenet',
          ),
        ),
        5 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'vsw-bp17opt4v18sto39k****',
          ),
        ),
        6 => 
        array (
          'name' => 'InstanceCount',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例节点数，开发版仅支持1节点，其它版本支持3-9单数节点',
            'description' => '实例节点数，范围限制：1~9个。

[专业版] 
- 实例数大于等于3，且必须为奇数。

[开发版] 
- 实例数只能为1。

[Serverless版]

忽略该参数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '3',
          ),
        ),
        7 => 
        array (
          'name' => 'ClusterSpecification',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '引擎规格，取值如下：

[专业版] 

- `MSE_SC_2_4_60_c`：2核4G
- `MSE_SC_1_2_60_c`：1核2G
- `MSE_SC_4_8_60_c`：4核8G
- `MSE_SC_8_16_60_c`：8核16G
- `MSE_SC_16_32_60_c`：16核32G

[开发版] 

- `MSE_SC_1_2_60_c`：1核2G
- `MSE_SC_2_4_60_c`：2核4G

[Serverless版]

忽略该参数，也可填`MSE_SC_SERVERLESS`。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'MSE_SC_2_4_60_c',
          ),
        ),
        8 => 
        array (
          'name' => 'ClusterVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群版本，取值如下：

[专业版] 

-  `NACOS_2_0_0`：表示Nacos 2.x.x 版本。
- `ZooKeeper_3_8_0`：表示ZooKeeper 3.8.x 版本。

[开发版] 

-  `NACOS_2_0_0`：表示Nacos 2.x 版本。
- `ZooKeeper_3_8_0`：表示ZooKeeper 3.8.x 版本。

[Serverless版]

-  `NACOS_2_0_0`：表示Nacos 2.x 版本。
- `ZooKeeper_3_8_0`：表示ZooKeeper 3.8.x 版本。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'NACOS_2_0_0',
          ),
        ),
        9 => 
        array (
          'name' => 'ClusterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群类型，包括ZooKeeper、Nacos-Ans。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Nacos-Ans',
          ),
        ),
        10 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域，包括但不限于如下地域：
- `cn-hangzhou`：杭州
- `cn-beijing`：北京
- `cn-shanghai`：上海
- `cn-zhangjiakou`：张家口
- `cn-shenzhen`：深圳',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        11 => 
        array (
          'name' => 'PrivateSlbSpecification',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '不再使用',
            'description' => '不再使用',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'docRequired' => false,
          ),
        ),
        12 => 
        array (
          'name' => 'ConnectionType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网络接入类型，`slb`或`single_eni`；部分Region开发版只支持`single_eni`类型',
            'description' => '网络接入类型，`slb`或`single_eni`；部分Region开发版只支持`single_eni`类型。',
            'type' => 'string',
            'required' => false,
          ),
        ),
        13 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        14 => 
        array (
          'name' => 'MseVersion',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例版本：开发版mse_dev、基础版mse_basic、专业版mse_pro',
            'description' => '非特殊情况必填，取值如下：

- `mse_pro`：表示专业版。
- `mse_dev`：表示开发版。
- `mse_serverless`：表示Serverless版。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'mse_dev' => '开发版',
              'mse_serverless' => 'Serverless版',
              'mse_pro' => '专业版',
            ),
            'example' => 'mse_pro',
          ),
        ),
        15 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例别名',
            'description' => '实例自定义名称',
            'type' => 'string',
            'required' => false,
            'example' => 'tanshuyingtest001',
          ),
        ),
        16 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。资源组详情请参见查看[资源组基本信息](~~457230~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-aekzcqmoay3dlyq',
          ),
        ),
        17 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '标签列表，最多包含20个子项',
            'description' => '待添加的标签列表。最多包含20个子项。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'title' => '标签键',
                  'description' => '标签KEY。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'title' => '标签值',
                  'description' => '标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'prd',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        18 => 
        array (
          'name' => 'ChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '付费类型',
            'description' => '付费模式，包括PREPAY（包年包月）和POSTPAY（按量付费）。

Serverless版忽略该参数。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'PREPAY' => '包年包月',
              'POSTPAY' => '按量付费',
            ),
            'example' => 'POSTPAY',
          ),
        ),
        19 => 
        array (
          'name' => 'SecurityGroupType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'ConnectionType为`single_eni`时有效，表示实例所在的安全组类型',
            'description' => 'ConnectionType为`single_eni`时有效，表示实例所在的安全组类型',
            'type' => 'string',
            'required' => false,
            'example' => 'enterprise',
            'default' => 'enterprise',
            'enum' => 
            array (
              0 => 'enterprise',
              1 => 'normal',
            ),
          ),
        ),
        20 => 
        array (
          'name' => 'EipEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'ConnectionType为`single_eni`时有效，表示是否开启公网访问（弹性公网IP）',
            'description' => 'ConnectionType为`single_eni`时有效，表示是否开启公网访问（弹性公网IP）',
            'type' => 'boolean',
            'required' => false,
            'enumValueTitles' => 
            array (
              'true' => 'true',
              'false' => 'false',
            ),
            'default' => 'false',
          ),
        ),
        21 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '字符串对象。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'dc63-465d-8ef5-20dc18af****',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'InstanceId' => 
              array (
                'description' => '实例ID。',
                'type' => 'string',
                'example' => 'mse-cn-st21ri2****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'string',
                'example' => '20574710974****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"dc63-465d-8ef5-20dc18af****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"InstanceId\\": \\"mse-cn-st21ri2****\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"OrderId\\": \\"20574710974****\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateClusterResponse>\\n    <RequestId>dc63-465d-8ef5-20dc18af****</RequestId>\\n    <Message>请求处理成功</Message>\\n    <InstanceId>mse-cn-st21ri2****</InstanceId>\\n    <ErrorCode>mse-100-000</ErrorCode>\\n    <OrderId>20574710974****</OrderId>\\n    <Success>true</Success>\\n</CreateClusterResponse>","errorExample":""}]',
      'title' => '创建注册配置中心集群',
      'description' => '请确保在使用该接口前，已充分了解MSE（Microservice Engine）产品的收费方式和价格。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteCluster' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-cn-6ja1rgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3369AD10-F1A6-4E6F-B99E-20F51826****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpCode\\": \\"202\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"3369AD10-F1A6-4E6F-B99E-20F51826****\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteClusterResponse>\\n<HttpCode>202</HttpCode>\\n<RequestId>3369AD10-F1A6-4E6F-B99E-20F51826****</RequestId>\\n<Message>请求处理成功</Message>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</DeleteClusterResponse>","errorExample":""}]',
      'title' => '删除集群',
      'summary' => '删除一个注册配置中心集群。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateCluster' => 
    array (
      'summary' => '修改集群信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterAliasName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群别名。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cluster-1',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-cn-78v1l83****',
          ),
        ),
        3 => 
        array (
          'name' => 'MaintenanceStartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运维窗口开始时间',
            'type' => 'string',
            'required' => false,
            'example' => '02:00',
          ),
        ),
        4 => 
        array (
          'name' => 'MaintenanceEndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运维窗口结束时间',
            'type' => 'string',
            'required' => false,
            'example' => '06:00',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5B170A0D-2C5D-4CF8-B808-03966B86****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-100',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"5B170A0D-2C5D-4CF8-B808-03966B86****\\",\\n  \\"ErrorCode\\": \\"mse-100-100\\",\\n  \\"Success\\": true,\\n  \\"HttpStatusCode\\": \\"200\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateClusterResponse>\\n<Message>请求处理成功</Message>\\n<RequestId>5B170A0D-2C5D-4CF8-B808-03966B86****</RequestId>\\n<ErrorCode>mse-100-100</ErrorCode>\\n<Success>true</Success>\\n</UpdateClusterResponse>","errorExample":""}]',
      'title' => '更新集群信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateConfig' => 
    array (
      'summary' => '更新集群配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
        'abilityTreeCode' => '17099',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseY3D6DK',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-09k1q11****',
          ),
        ),
        2 => 
        array (
          'name' => 'ConfigType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置格式，包括TEXT、JSON、XML、HTML等。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'TEXT',
          ),
        ),
        3 => 
        array (
          'name' => 'TickTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'zookeeper配置，时间单元，默认为2000毫秒。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '2000',
          ),
        ),
        4 => 
        array (
          'name' => 'InitLimit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'zookeeper配置，实例最长连接时间，单位：秒。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '100',
          ),
        ),
        5 => 
        array (
          'name' => 'SyncLimit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'zookeeper配置，实例连接超时时间，单位：秒。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'MaxClientCnxns',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'zookeeper配置，单个客户端与单台服务器之间的连接数。  
如果设置为0，表示不作任何限制。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'OpenSuperAcl',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'zookeeper配置，超级权限开关，取值如下：
- `true`：打开
- `false`：关闭',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'UserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户名称。
> 当OpenSuperAcl为true时，需要填写此值。',
            'type' => 'string',
            'required' => false,
            'example' => 'name',
          ),
        ),
        9 => 
        array (
          'name' => 'PassWord',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户密码。
> 当OpenSuperAcl为true时，需要填写此值。',
            'type' => 'string',
            'required' => false,
            'example' => 'password',
          ),
        ),
        10 => 
        array (
          'name' => 'JuteMaxbuffer',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'zookeeper配置，每个节点最大数据量，默认是1M，单位：字节。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '1048575',
          ),
        ),
        11 => 
        array (
          'name' => 'AutopurgePurgeInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保留字段。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'none',
          ),
        ),
        12 => 
        array (
          'name' => 'AutopurgeSnapRetainCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保留字段。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'none',
          ),
        ),
        13 => 
        array (
          'name' => 'ConfigAuthEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'nacos配置，是否开启配置中心ram鉴权：
- `true`：开启
- `false`：关闭

> 设置此值前需要调用QueryConfig接口，获取ConfigAuthSupported参数，以查看当前集群是否支持此功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        14 => 
        array (
          'name' => 'NamingAuthEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'nacos配置，是否开启注册中心ram鉴权：
- `true`：开启
- `false`：关闭

> 设置此值前需要调用QueryConfig接口，获取NamingAuthSupporte参数，以查看当前集群是否支持此功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        15 => 
        array (
          'name' => 'MCPEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'nacos配置，MCP是否生效，取值如下：
- `true`：生效
- `false`：不生效
> 设置此值前需要调用QueryConfig接口，获取MCPSupported参数，以查看当前集群是否支持此功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        16 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_prepaid_public_cn-st2212****',
          ),
        ),
        17 => 
        array (
          'name' => 'ConfigSecretEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'nacos配置，是否打开配置中心配置加密功能，取值如下：
- `true`：请求成功。
- `false`：请求失败。

> 设置此值前需要调用QueryConfig接口，获取ConfigSecretSupported参数，以查看当前集群是否支持此功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        18 => 
        array (
          'name' => 'MinSessionTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '最小超时时间',
            'description' => 'zookeeper配置，最小超时时间，单位：秒。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
        19 => 
        array (
          'name' => 'MaxSessionTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '最大超时时间',
            'description' => 'zookeeper配置，最大超时时间，单位：秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1000',
          ),
        ),
        20 => 
        array (
          'name' => 'SnapshotCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'zookeeper配置，生成快照的频率',
            'type' => 'string',
            'required' => false,
            'example' => '100000',
          ),
        ),
        21 => 
        array (
          'name' => 'ExtendedTypesEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'zookeeper参数，是否开启TTL配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
          ),
        ),
        22 => 
        array (
          'name' => 'EurekaSupported',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Nacos是否开启支持Eurka协议',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        23 => 
        array (
          'name' => 'TLSEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Nacos是否开启TLS传输链路加密',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        24 => 
        array (
          'name' => 'ConsoleUIEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启Nacos开源控制台',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        25 => 
        array (
          'name' => 'Enable4lw',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        26 => 
        array (
          'name' => 'AuthEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        27 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8BD1E58D-0755-42AC-A599-E6B55112****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP返回码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"8BD1E58D-0755-42AC-A599-E6B55112****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"HttpStatusCode\\": 200\\n}","errorExample":""},{"type":"xml","example":"<UpdateConfigResponse>\\n<RequestId>CB889254-0C8B-49B2-8465-4CDAB08A****</RequestId>\\n<Message>请求处理成功</Message>\\n<ErrorCode>mse-100-100</ErrorCode>\\n<Success>true</Success>\\n</UpdateConfigResponse>","errorExample":""}]',
      'title' => '更新集群配置',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListClusters' => 
    array (
      'summary' => '查询注册配置中心集群列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页展示集群数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'ClusterAliasName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群名字，支持模糊匹配。',
            'type' => 'string',
            'required' => false,
            'example' => 'cluster',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域，MSE支持的地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。资源组详情请参见查看资源组基本信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxbzafebvvfa',
          ),
        ),
        6 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表，最多包含20个子项',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'env',
                ),
                'Value' => 
                array (
                  'description' => '标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'prd',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        7 => 
        array (
          'name' => 'KeyId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        8 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '字符串对象。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'TotalCount' => 
              array (
                'description' => '实例总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '69AD2AA7-DB47-449B-941B-B14409DF****',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'PageSize' => 
              array (
                'description' => '每页展示实例数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '字符串对象。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'EndDate' => 
                    array (
                      'description' => '集群截止时间。',
                      'type' => 'string',
                      'example' => '2021-08-01 00:00:00',
                    ),
                    'IntranetDomain' => 
                    array (
                      'description' => '私网域名。',
                      'type' => 'string',
                      'example' => 'mse-7413****-eureka.mse.aliyuncs.com',
                    ),
                    'InternetDomain' => 
                    array (
                      'description' => '公网域名。',
                      'type' => 'string',
                      'example' => 'mse-7413****-p.eureka.mse.aliyuncs.com',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '集群创建时间。',
                      'type' => 'string',
                      'example' => '2020-07-31 11:36:08',
                    ),
                    'ChargeType' => 
                    array (
                      'description' => '付费模式，包括包年包月和按量付费。',
                      'type' => 'string',
                      'example' => '按量付费',
                    ),
                    'IntranetAddress' => 
                    array (
                      'description' => '私网地址。',
                      'type' => 'string',
                      'example' => '192.168.XX.XX',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'mse-cn-st21ri2****',
                    ),
                    'InternetAddress' => 
                    array (
                      'description' => '公网地址。',
                      'type' => 'string',
                      'example' => '47.98.XX.XX',
                    ),
                    'ClusterAliasName' => 
                    array (
                      'description' => '集群别名。',
                      'type' => 'string',
                      'example' => 'mse-7413****',
                    ),
                    'ClusterType' => 
                    array (
                      'description' => '集群类型，包括ZooKeeper、Nacos-Ans和Eureka。',
                      'type' => 'string',
                      'example' => 'Eureka',
                    ),
                    'InitStatus' => 
                    array (
                      'description' => '初始化状态。',
                      'type' => 'string',
                      'example' => 'RESTART_SUCCESS',
                    ),
                    'AppVersion' => 
                    array (
                      'description' => 'APP版本。',
                      'type' => 'string',
                      'example' => '1.9.3',
                    ),
                    'CanUpdate' => 
                    array (
                      'description' => '是否能够升级。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'VersionCode' => 
                    array (
                      'description' => '版本信息。',
                      'type' => 'string',
                      'example' => 'EUREKA_1_9_3',
                    ),
                    'InstanceCount' => 
                    array (
                      'description' => '集群数量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '2',
                    ),
                    'ClusterName' => 
                    array (
                      'description' => '集群名字。',
                      'type' => 'string',
                      'example' => 'mse-cn-st21ri2****',
                    ),
                    'MseVersion' => 
                    array (
                      'description' => '集群所使用的版本类别。',
                      'type' => 'string',
                      'example' => 'mse_pro',
                    ),
                    'Tags' => 
                    array (
                      'description' => '实例所绑定的标签。',
                      'type' => 'object',
                    ),
                    'ResourceGroupId' => 
                    array (
                      'description' => '实例所属的资源组 ID。',
                      'type' => 'string',
                      'example' => 'rg-acfmv7jiavm4uxa',
                    ),
                    'VpcId' => 
                    array (
                      'description' => '集群所处的VPC ID。',
                      'type' => 'string',
                      'example' => 'vpc-bp1hcg467ekqsv0zr****',
                    ),
                    'MaintenancePeriod' => 
                    array (
                      'description' => '运维时间窗口',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'StartTime' => 
                        array (
                          'description' => '运维时间窗口开始时间',
                          'type' => 'string',
                          'example' => '02:00',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '运维时间窗口结束时间',
                          'type' => 'string',
                          'example' => '06:00',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpCode\\": \\"202\\",\\n  \\"TotalCount\\": 7,\\n  \\"RequestId\\": \\"69AD2AA7-DB47-449B-941B-B14409DF****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"Data\\": [\\n    {\\n      \\"EndDate\\": \\"2021-08-01 00:00:00\\",\\n      \\"IntranetDomain\\": \\"mse-7413****-eureka.mse.aliyuncs.com\\",\\n      \\"InternetDomain\\": \\"mse-7413****-p.eureka.mse.aliyuncs.com\\",\\n      \\"CreateTime\\": \\"2020-07-31 11:36:08\\",\\n      \\"ChargeType\\": \\"按量付费\\",\\n      \\"IntranetAddress\\": \\"192.168.XX.XX\\",\\n      \\"InstanceId\\": \\"mse-cn-st21ri2****\\",\\n      \\"InternetAddress\\": \\"47.98.XX.XX\\",\\n      \\"ClusterAliasName\\": \\"mse-7413****\\",\\n      \\"ClusterType\\": \\"Eureka\\",\\n      \\"InitStatus\\": \\"RESTART_SUCCESS\\",\\n      \\"AppVersion\\": \\"1.9.3\\",\\n      \\"CanUpdate\\": true,\\n      \\"VersionCode\\": \\"EUREKA_1_9_3\\",\\n      \\"InstanceCount\\": 2,\\n      \\"ClusterName\\": \\"mse-cn-st21ri2****\\",\\n      \\"MseVersion\\": \\"mse_pro\\",\\n      \\"Tags\\": {\\n        \\"test\\": \\"test\\",\\n        \\"test2\\": 1\\n      },\\n      \\"ResourceGroupId\\": \\"rg-acfmv7jiavm4uxa\\",\\n      \\"VpcId\\": \\"vpc-bp1hcg467ekqsv0zr****\\",\\n      \\"MaintenancePeriod\\": {\\n        \\"StartTime\\": \\"02:00\\",\\n        \\"EndTime\\": \\"06:00\\"\\n      }\\n    }\\n  ],\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListClustersResponse>\\n    <HttpCode>202</HttpCode>\\n    <TotalCount>7</TotalCount>\\n    <RequestId>69AD2AA7-DB47-449B-941B-B14409DF****</RequestId>\\n    <Message>请求处理成功</Message>\\n    <PageSize>10</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <Data>\\n        <EndDate>2021-08-01 00:00:00</EndDate>\\n        <IntranetDomain>mse-7413****-eureka.mse.aliyuncs.com</IntranetDomain>\\n        <InternetDomain>mse-7413****-p.eureka.mse.aliyuncs.com</InternetDomain>\\n        <CreateTime>2020-07-31 11:36:08</CreateTime>\\n        <ChargeType>按量付费</ChargeType>\\n        <IntranetAddress>192.168.XX.XX</IntranetAddress>\\n        <InstanceId>mse-cn-st21ri2****</InstanceId>\\n        <InternetAddress>47.98.XX.XX</InternetAddress>\\n        <ClusterAliasName>mse-7413****</ClusterAliasName>\\n        <ClusterType>Eureka</ClusterType>\\n        <InitStatus>RESTART_SUCCESS</InitStatus>\\n        <AppVersion>1.9.3</AppVersion>\\n    </Data>\\n    <ErrorCode>mse-100-000</ErrorCode>\\n    <Success>true</Success>\\n</ListClustersResponse>","errorExample":""}]',
      'title' => '查询集群列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListClusterTypes' => 
    array (
      'summary' => '查询支持开通的引擎类型。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域，MSE支持的地域。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ConnectType',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'title' => '网络连接类型',
            'description' => '网络类型，取值如下：

- slb
- eni',
            'type' => 'string',
            'required' => false,
            'example' => 'slb',
            'enum' => 
            array (
              0 => 'eni',
              1 => 'slb',
            ),
          ),
        ),
        2 => 
        array (
          'name' => 'MseVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待开通的MSE集群版本。

- mse_pro：表示专业版。
- mse_dev：表示开发版。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_pro',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '821B5B05-8919-5FBB-BA75-417BFC093EB8',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Code' => 
                    array (
                      'type' => 'string',
                    ),
                    'ShowName' => 
                    array (
                      'description' => '可开通的MSE引擎类型。',
                      'type' => 'string',
                      'example' => 'Zookeeper',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"821B5B05-8919-5FBB-BA75-417BFC093EB8\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": [\\n    {\\n      \\"Code\\": \\"\\",\\n      \\"ShowName\\": \\"Zookeeper\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询引擎类型',
    ),
    'ListClusterVersions' => 
    array (
      'summary' => '查询支持的集群版本信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群类型，包括ZooKeeper、Nacos-Ans和Eureka。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'Nacos-Ans',
          ),
        ),
        1 => 
        array (
          'name' => 'MseVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '取值如下：

- `mse_dev`：表示开发版。
- `mse_pro`：表示专业版（默认取值）。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_pro',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7717BE5B-C958-5F87-BF49-464AA276EDD1',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicMessage' => 
              array (
                'description' => '与本次请求相关的动态错误信息。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Code' => 
                    array (
                      'description' => '集群类型编码。',
                      'type' => 'string',
                      'example' => 'NACOS_2_0_0',
                    ),
                    'ShowName' => 
                    array (
                      'description' => '集群版本。',
                      'type' => 'string',
                      'example' => '2.1.0',
                    ),
                    'ClusterType' => 
                    array (
                      'description' => '集群类型。',
                      'type' => 'string',
                      'example' => 'Nacos-Ans',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"7717BE5B-C958-5F87-BF49-464AA276EDD1\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": [\\n    {\\n      \\"Code\\": \\"NACOS_2_0_0\\",\\n      \\"ShowName\\": \\"2.1.0\\",\\n      \\"ClusterType\\": \\"Nacos-Ans\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询集群版本',
    ),
    'QueryClusterSpecification' => 
    array (
      'summary' => '查询支持的集群规格列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ConnectType',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'title' => '网络连接类型',
            'description' => '网络类型，取值如下：

- slb
- eni',
            'type' => 'string',
            'required' => false,
            'example' => 'slb',
            'pattern' => '',
            'enum' => 
            array (
              0 => 'eni',
              1 => 'slb',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'MseVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待开通的MSE集群版本。

- mse_pro：表示专业版。
- mse_dev：表示开发版。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'mse_pro',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EE5C32A1-BC0E-4B79-817C-103E4EDF****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回结果。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ClusterSpecificationName' => 
                    array (
                      'description' => '可使用的引擎规格。',
                      'type' => 'string',
                      'example' => 'MSE_SC_1_2_200_c',
                    ),
                    'MemoryCapacity' => 
                    array (
                      'description' => '此规格下的内存大小，单位：G。',
                      'type' => 'string',
                      'example' => '2',
                    ),
                    'CpuCapacity' => 
                    array (
                      'description' => '此规格下的CPU核数。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"EE5C32A1-BC0E-4B79-817C-103E4EDF****\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Data\\": [\\n    {\\n      \\"ClusterSpecificationName\\": \\"MSE_SC_1_2_200_c\\",\\n      \\"MemoryCapacity\\": \\"2\\",\\n      \\"CpuCapacity\\": \\"1\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<QueryClusterSpecificationResponse>\\n<Message>请求处理成功</Message>\\n<RequestId>EE5C32A1-BC0E-4B79-817C-103E4EDF****</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Data>\\n    <MaxTps>5000</MaxTps>\\n    <CpuCapacity>1</CpuCapacity>\\n    <InstanceCount>1</InstanceCount>\\n    <DiskCapacity>60</DiskCapacity>\\n    <ClusterSpecificationName>MSE_SC_1_2_200_c</ClusterSpecificationName>\\n    <MemoryCapacity>2</MemoryCapacity>\\n    <MaxCon>3000</MaxCon>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Code>200</Code>\\n<Success>true</Success>\\n</QueryClusterSpecificationResponse>","errorExample":""}]',
      'title' => '查询集群规格',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryClusterDiskSpecification' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群类型，包括ZooKeeper、Nacos-Ans和Eureka。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'ZooKeeper',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => '请求返回码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E13A3A34-7201-50C4-B2D0-0D7DB891811E',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'Step' => 
                  array (
                    'description' => '磁盘大小步长。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'Max' => 
                  array (
                    'description' => '磁盘允许最大值，单位：GB。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '500',
                  ),
                  'Min' => 
                  array (
                    'description' => '磁盘允许最小值，单位：GB。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"E13A3A34-7201-50C4-B2D0-0D7DB891811E\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": {\\n    \\"Step\\": 2,\\n    \\"Max\\": 500,\\n    \\"Min\\": 1\\n  }\\n}","type":"json"}]',
      'title' => '查询集群磁盘规格',
      'summary' => '查询支持的集群磁盘规格信息。',
    ),
    'ListInstanceCount' => 
    array (
      'summary' => '列举集群可开通的节点数。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群类型，包括ZooKeeper、Nacos-Ans。',
            'type' => 'string',
            'required' => false,
            'example' => 'Nacos-Ans',
          ),
        ),
        1 => 
        array (
          'name' => 'MseVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群版本类型，取值如下：

- `mse_dev`：表示开发版。
- `mse_pro`：表示专业版。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_pro',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域，包括但不限于如下地域：

- cn-hangzhou：杭州                                 
- cn-beijing：北京                                 
- cn-shanghai：上海                                 
- cn-zhangjiakou：张家口                                 
- cn-shenzhen：深圳',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型。
- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<Integer>>',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。                                
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。当请求失败，返回ErrorCode字段。具体信息，请参见[本文的错误码列表](~~456441~~)。',
                'type' => 'string',
                'example' => 'mse-100-100',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。当请求成功时，返回成功信息；当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => '%s',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数 `ErrMessage` 错误信息中的 `%s`。

> 如果`ErrMessage`返回`The Value of Input Parameter %s is not valid`，且`DynamicMessage`返回`DtsJobId`，则代表所传入的请求参数`DtsJobId`不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '当前版本下可开通的节点数。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'example' => '3',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-100\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"%s\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": [\\n    3\\n  ]\\n}","type":"json"}]',
      'title' => '集群可开通的节点数',
    ),
    'QueryConfig' => 
    array (
      'summary' => '查询集群配置信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '17081',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseY3D6DK',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-09k1q11****',
          ),
        ),
        2 => 
        array (
          'name' => 'ConfigType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预留字段。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'null',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse_prepaid_public_cn-st2212****',
          ),
        ),
        4 => 
        array (
          'name' => 'NeedRunningConf',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否需要运行时配置。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8BD1E58D-0755-42AC-A599-E6B55112EC53',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'MaxClientCnxns' => 
                  array (
                    'description' => 'zookeeper配置，单个客户端与单台服务器之间的连接数。  
如果设置为0，表示不作任何限制。',
                    'type' => 'string',
                    'example' => '0',
                  ),
                  'ConfigAuthSupported' => 
                  array (
                    'description' => 'nacos配置，当前集群的配置中心是否支持ram鉴权，取值如下：
- `true`：支持
- `false`：不支持',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'InitLimit' => 
                  array (
                    'description' => 'zookeeper配置，实例最长连接时间，单位：秒。',
                    'type' => 'string',
                    'example' => '100',
                  ),
                  'MCPEnabled' => 
                  array (
                    'description' => 'nacos配置，MCP是否生效，取值如下：
- `true`：生效
- `false`：不生效',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'OpenSuperAcl' => 
                  array (
                    'description' => 'zookeeper配置，超级权限开关，取值如下：
- `true`：打开
- `false`：关闭',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'RestartFlag' => 
                  array (
                    'description' => '当前集群是否已重启并应用新配置，取值如下：
- `true`：重启成功。
- `false`：重启失败。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'JvmFlagsCustom' => 
                  array (
                    'description' => '保留字段',
                    'type' => 'string',
                    'example' => 'none',
                  ),
                  'AutopurgePurgeInterval' => 
                  array (
                    'description' => '保留字段。',
                    'type' => 'string',
                    'example' => 'none',
                  ),
                  'AutopurgeSnapRetainCount' => 
                  array (
                    'description' => '保留字段。',
                    'type' => 'string',
                    'example' => 'none',
                  ),
                  'SyncLimit' => 
                  array (
                    'description' => 'zookeeper配置，实例连接超时时间，单位：秒。',
                    'type' => 'string',
                    'example' => '10',
                  ),
                  'ConfigAuthEnabled' => 
                  array (
                    'description' => 'nacos配置，是否开启配置中心ram鉴权，取值如下：
- `true`：生效
- `false`：未生效',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ClusterName' => 
                  array (
                    'description' => '集群名称。',
                    'type' => 'string',
                    'example' => 'name',
                  ),
                  'MCPSupported' => 
                  array (
                    'description' => 'nacos配置，MCP是否支持，取值如下：
- `true`：支持
- `false`：不支持',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'JuteMaxbuffer' => 
                  array (
                    'description' => 'zookeeper配置，每个节点最大数据量，单位：字节。',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'TickTime' => 
                  array (
                    'description' => 'zookeeper配置，引擎中的一个时间单元，默认为2000毫秒。',
                    'type' => 'string',
                    'example' => '2000',
                  ),
                  'PassWord' => 
                  array (
                    'description' => '用户密码。当OpenSuperAcl为true时，展示此值。',
                    'type' => 'string',
                    'example' => 'password',
                  ),
                  'UserName' => 
                  array (
                    'description' => '用户名称。当OpenSuperAcl为true时，展示此值。',
                    'type' => 'string',
                    'example' => 'name',
                  ),
                  'ConfigSecretSupported' => 
                  array (
                    'description' => 'nacos配置，当前集群是否支持配置中心配置加密，取值如下：
- `true`：支持
- `false`：不支持',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ConfigSecretEnabled' => 
                  array (
                    'description' => 'nacos配置，当前集群是否开启配置中心配置加密，取值如下：
- `true`：开启
- `false`：未开启',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'NamingAuthEnabled' => 
                  array (
                    'description' => 'nacos配置，是否开启注册中心ram鉴权：
- `true`：开启
- `false`：关闭',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'NamingAuthSupported' => 
                  array (
                    'description' => 'nacos配置，当前集群是否支持服务ram鉴权，取值如下：
- `true`：支持
- `false`：不支持',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'NamingCreateServiceSupported' => 
                  array (
                    'description' => 'nacos配置，当前集群是否支持创建服务，取值如下：
- `true`：支持
- `false`：不支持',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'MinSessionTimeout' => 
                  array (
                    'title' => '最小超时时间',
                    'description' => 'zookeeper配置，最小超时时间。',
                    'type' => 'string',
                    'example' => '-1',
                  ),
                  'MaxSessionTimeout' => 
                  array (
                    'title' => '最大超时时间',
                    'description' => 'zookeeper配置，最大超时时间。',
                    'type' => 'string',
                    'example' => '-1',
                  ),
                  'SnapshotCount' => 
                  array (
                    'description' => 'zookeeper配置，生成快照的频率',
                    'type' => 'string',
                    'example' => '100000',
                  ),
                  'ConfigContentLimit' => 
                  array (
                    'description' => '单个配置的配置内容大小上限（单位：KB）。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '100',
                  ),
                  'NacosRunningEnv' => 
                  array (
                    'description' => 'nacos运行时配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'emptyProtect' => 
                      array (
                        'description' => '推空保护开关。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                    ),
                  ),
                  'ExtendedTypesEnable' => 
                  array (
                    'description' => 'zookeeper参数，是否开启TTL配置。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'EurekaSupported' => 
                  array (
                    'description' => '是否打开Eureka协议的访问端口8761。关闭此端口，应用将无法使用Eureka协议进行服务注册发现。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'TLSEnabled' => 
                  array (
                    'description' => 'MSE Nacos从2.1.2.1版本开始支持TLS传输链路加密，nacos-client需升级至2.2.1及以上版本，开启TLS后，会有10%左右性能下降，请合理评估系统容量水位，操作指引详见Nacos TLS传输加密.',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ConsoleUIEnabled' => 
                  array (
                    'description' => '是否开始Nacos开源控制台',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Enable4lw' => 
                  array (
                    'type' => 'boolean',
                  ),
                  'AuthEnabled' => 
                  array (
                    'title' => 'ZooKeeper sasl 强制身份认证开关',
                    'description' => 'ZooKeeper sasl 强制身份认证开关',
                    'type' => 'boolean',
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '	
返回结果码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"8BD1E58D-0755-42AC-A599-E6B55112EC53\\",\\n  \\"Data\\": {\\n    \\"MaxClientCnxns\\": \\"0\\",\\n    \\"ConfigAuthSupported\\": true,\\n    \\"InitLimit\\": \\"100\\",\\n    \\"MCPEnabled\\": true,\\n    \\"OpenSuperAcl\\": true,\\n    \\"RestartFlag\\": true,\\n    \\"JvmFlagsCustom\\": \\"none\\",\\n    \\"AutopurgePurgeInterval\\": \\"none\\",\\n    \\"AutopurgeSnapRetainCount\\": \\"none\\",\\n    \\"SyncLimit\\": \\"10\\",\\n    \\"ConfigAuthEnabled\\": true,\\n    \\"ClusterName\\": \\"name\\",\\n    \\"MCPSupported\\": true,\\n    \\"JuteMaxbuffer\\": \\"1\\",\\n    \\"TickTime\\": \\"2000\\",\\n    \\"PassWord\\": \\"password\\",\\n    \\"UserName\\": \\"name\\",\\n    \\"ConfigSecretSupported\\": true,\\n    \\"ConfigSecretEnabled\\": true,\\n    \\"NamingAuthEnabled\\": false,\\n    \\"NamingAuthSupported\\": true,\\n    \\"NamingCreateServiceSupported\\": true,\\n    \\"MinSessionTimeout\\": \\"-1\\",\\n    \\"MaxSessionTimeout\\": \\"-1\\",\\n    \\"SnapshotCount\\": \\"100000\\",\\n    \\"ConfigContentLimit\\": 100,\\n    \\"NacosRunningEnv\\": {\\n      \\"emptyProtect\\": true\\n    },\\n    \\"ExtendedTypesEnable\\": true,\\n    \\"EurekaSupported\\": true,\\n    \\"TLSEnabled\\": true,\\n    \\"ConsoleUIEnabled\\": true,\\n    \\"Enable4lw\\": true,\\n    \\"AuthEnabled\\": true\\n  },\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"HttpStatusCode\\": 200\\n}","errorExample":""},{"type":"xml","example":"<QueryConfigResponse>\\n<Message>请求处理成功</Message>\\n<RequestId>8BD1E58D-0755-42AC-A599-E6B55112EC53</RequestId>\\n<Data>\\n    <MCPEnabled>true</MCPEnabled>\\n    <MaxClientCnxns>0</MaxClientCnxns>\\n    <UserName>name</UserName>\\n    <OpenSuperAcl>true</OpenSuperAcl>\\n    <TickTime>2000</TickTime>\\n    <AutopurgeSnapRetainCount>none</AutopurgeSnapRetainCount>\\n    <PassWord>password</PassWord>\\n    <InitLimit>100</InitLimit>\\n    <ConfigAuthEnabled>true</ConfigAuthEnabled>\\n    <JvmFlagsCustom>none</JvmFlagsCustom>\\n    <RestartFlag>true</RestartFlag>\\n    <AutopurgePurgeInterval>none</AutopurgePurgeInterval>\\n    <JuteMaxbuffer>1</JuteMaxbuffer>\\n    <MCPSupported>true</MCPSupported>\\n    <ClusterName>name</ClusterName>\\n    <ConfigAuthSupported>true</ConfigAuthSupported>\\n    <SyncLimit>10</SyncLimit>\\n</Data>\\n<ErrorCode>mse-100-100</ErrorCode>\\n<Success>true</Success>\\n</QueryConfigResponse>","errorExample":""}]',
      'title' => '查询集群配置',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetImage' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VersionCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '集群版本',
            'description' => '当前集群所在的版本号。',
            'type' => 'string',
            'required' => true,
            'example' => 'ZooKeeper_3_5_5',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型。
- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '25EA0A83-9007-4E87-808C-637BE1A****',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentVersionFullShowName' => 
                  array (
                    'title' => '当前集群镜像版本的4位全名',
                    'description' => '当前集群镜像版本的4位全名',
                    'type' => 'string',
                    'example' => '3.5.5.0',
                  ),
                  'MaxVersionCode' => 
                  array (
                    'title' => '可升级的增量版本Code',
                    'description' => '可升级的增量版本Code',
                    'type' => 'string',
                    'example' => 'ZooKeeper_3_6_3',
                  ),
                  'MaxVersionFullShowName' => 
                  array (
                    'title' => '可升级的增量版本全名',
                    'description' => '可升级的增量版本全名',
                    'type' => 'string',
                    'example' => '3.6.3.0',
                  ),
                  'MaxVersionChangelogUrl' => 
                  array (
                    'title' => '可升级的最大版本变更日志url',
                    'description' => '可升级的最大版本变更日志url',
                    'type' => 'string',
                    'example' => 'https://xxxxx',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"25EA0A83-9007-4E87-808C-637BE1A****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true,\\n  \\"HttpCode\\": \\"200\\",\\n  \\"Data\\": {\\n    \\"CurrentVersionFullShowName\\": \\"3.5.5.0\\",\\n    \\"MaxVersionCode\\": \\"ZooKeeper_3_6_3\\",\\n    \\"MaxVersionFullShowName\\": \\"3.6.3.0\\",\\n    \\"MaxVersionChangelogUrl\\": \\"https://xxxxx\\"\\n  }\\n}","type":"json"}]',
      'title' => '查询本地单个镜像信息',
      'summary' => '查询当前版本可升级的最大版本号。',
    ),
    'UpdateImage' => 
    array (
      'summary' => '升级目标集群的版本号。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '目标集群的id',
            'description' => '目标集群的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'mse-8e8e9060',
          ),
        ),
        1 => 
        array (
          'name' => 'VersionCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '想修改的镜像版本code',
            'description' => '目标版本号。

> 需调用GetImage接口获取可升级的版本号MaxVersionCode。',
            'type' => 'string',
            'required' => true,
            'example' => 'ZooKeeper_3_5_5',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3855D475-2B66-5CFF-9A51-3D698E52C472',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'True',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"3855D475-2B66-5CFF-9A51-3D698E52C472\\",\\n  \\"Message\\": \\"success\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新集群镜像',
    ),
    'GetMseFeatureSwitch' => 
    array (
      'summary' => '获取MSE能力开关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6B4653A3-8D9C-5FDC-BB0C-936D40E9794B',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'example' => '{\'nacos_config_encrypt\': False}',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'NoPermission',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"6B4653A3-8D9C-5FDC-BB0C-936D40E9794B\\",\\n  \\"Result\\": {\\n    \\"test\\": \\"test\\",\\n    \\"test2\\": 1\\n  },\\n  \\"ErrorCode\\": \\"NoPermission\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '获取MSE能力开关',
    ),
    'QueryBusinessLocations' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'common',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '参数不合法',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3369AD10-F1A6-4E6F-B99E-20F51826****',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回集合。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Ordering' => 
                    array (
                      'description' => '订购。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '6',
                    ),
                    'Type' => 
                    array (
                      'description' => '类型。',
                      'type' => 'string',
                      'example' => 'region',
                    ),
                    'DistrictEnName' => 
                    array (
                      'description' => '地域英语名称。',
                      'type' => 'string',
                      'example' => 'Asia Pacific',
                    ),
                    'ShowName' => 
                    array (
                      'description' => '显示名称。',
                      'type' => 'string',
                      'example' => '华东2（上海）',
                    ),
                    'DistrictCnName' => 
                    array (
                      'description' => '地域中文名称。',
                      'type' => 'string',
                      'example' => '亚太',
                    ),
                    'EnName' => 
                    array (
                      'description' => '英语名称。',
                      'type' => 'string',
                      'example' => 'China (Shanghai)',
                    ),
                    'DistrictId' => 
                    array (
                      'description' => '地域ID。',
                      'type' => 'string',
                      'example' => 'asia-pacific',
                    ),
                    'DistrictShowName' => 
                    array (
                      'description' => '地域展示名称。',
                      'type' => 'string',
                      'example' => '亚太',
                    ),
                    'Description' => 
                    array (
                      'description' => '描述。',
                      'type' => 'string',
                      'example' => '华东 2',
                    ),
                    'EnDescription' => 
                    array (
                      'description' => '英语描述。',
                      'type' => 'string',
                      'example' => 'China East 2 (Shanghai)',
                    ),
                    'CnName' => 
                    array (
                      'description' => '中文名称。',
                      'type' => 'string',
                      'example' => '华东2（上海）',
                    ),
                    'Name' => 
                    array (
                      'description' => '名称。',
                      'type' => 'string',
                      'example' => 'cn-shanghai',
                    ),
                    'DistrictOrdering' => 
                    array (
                      'description' => '地区订购。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '101',
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"参数不合法\\",\\n  \\"RequestId\\": \\"3369AD10-F1A6-4E6F-B99E-20F51826****\\",\\n  \\"Data\\": [\\n    {\\n      \\"Ordering\\": 6,\\n      \\"Type\\": \\"region\\",\\n      \\"DistrictEnName\\": \\"Asia Pacific\\",\\n      \\"ShowName\\": \\"华东2（上海）\\",\\n      \\"DistrictCnName\\": \\"亚太\\",\\n      \\"EnName\\": \\"China (Shanghai)\\",\\n      \\"DistrictId\\": \\"asia-pacific\\",\\n      \\"DistrictShowName\\": \\"亚太\\",\\n      \\"Description\\": \\"华东 2\\",\\n      \\"EnDescription\\": \\"China East 2 (Shanghai)\\",\\n      \\"CnName\\": \\"华东2（上海）\\",\\n      \\"Name\\": \\"cn-shanghai\\",\\n      \\"DistrictOrdering\\": 101\\n    }\\n  ],\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<QueryBusinessLocationsResponse>\\n<RequestId>3369AD10-F1A6-4E6F-B99E-20F51826****</RequestId>\\n<Message>参数不合法</Message>\\n<Data>\\n    <Description>111</Description>\\n    <DistrictShowName>111</DistrictShowName>\\n    <EnName>111</EnName>\\n    <DistrictId>111</DistrictId>\\n    <ShowName>111</ShowName>\\n    <DistrictCnName>111</DistrictCnName>\\n    <Name>111</Name>\\n    <CnName>111</CnName>\\n    <Type>111</Type>\\n    <DistrictEnName>111</DistrictEnName>\\n    <EnDescription>111</EnDescription>\\n    <Ordering>111</Ordering>\\n    <DistrictOrdering>111</DistrictOrdering>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</QueryBusinessLocationsResponse>","errorExample":""}]',
      'title' => '查询地域信息',
      'summary' => '查询地域信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListClusterConnectionTypes' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8625467C-27DD-5711-878E-6857E3074937',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。
',
                'type' => 'string',
                'example' => 'success',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的%**s**。

> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则表示所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ShowName' => 
                    array (
                      'description' => '连接类型。',
                      'type' => 'string',
                      'example' => 'slb',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"8625467C-27DD-5711-878E-6857E3074937\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": [\\n    {\\n      \\"ShowName\\": \\"slb\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询集群连接信息',
      'summary' => '查询支持的集群连接类型。',
    ),
    'QuerySlbSpec' => 
    array (
      'summary' => '查询SLB类型。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。当请求成功时，返回成功信息；当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回集合信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Id' => 
                    array (
                      'description' => '返回数据ID。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '2',
                    ),
                    'Spec' => 
                    array (
                      'description' => '规格。',
                      'type' => 'string',
                      'example' => 'slb.s2.small',
                    ),
                    'Name' => 
                    array (
                      'description' => '名称。',
                      'type' => 'string',
                      'example' => '标准型I',
                    ),
                    'MaxConnection' => 
                    array (
                      'description' => '最大连接数。',
                      'type' => 'string',
                      'example' => '50,000',
                    ),
                    'NewConnectionPerSecond' => 
                    array (
                      'description' => '每秒连接数。',
                      'type' => 'string',
                      'example' => '50,000',
                    ),
                    'Qps' => 
                    array (
                      'description' => '每秒查询率。',
                      'type' => 'string',
                      'example' => '50,000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"Id\\": 2,\\n      \\"Spec\\": \\"slb.s2.small\\",\\n      \\"Name\\": \\"标准型I\\",\\n      \\"MaxConnection\\": \\"50,000\\",\\n      \\"NewConnectionPerSecond\\": \\"50,000\\",\\n      \\"Qps\\": \\"50,000\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询SLB类型',
    ),
    'UpdateClusterSpec' => 
    array (
      'summary' => '更新注册配置中心集群节点数或规格（支持按量付费和包年包月）。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关名称',
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-09k1q11****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '节点规格',
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'mse-cn-st21ri2****',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceCount',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '节点数量',
            'description' => '目标节点数量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
        3 => 
        array (
          'name' => 'ClusterSpecification',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标引擎规格。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'MSE_SC_4_8_200_c' => 'MSE_SC_4_8_200_c',
              'MSE_SC_16_32_200_c' => 'MSE_SC_16_32_200_c',
              'MSE_SC_2_4_200_c' => 'MSE_SC_2_4_200_c',
              'MSE_SC_8_16_200_c' => 'MSE_SC_8_16_200_c',
            ),
            'example' => 'MSE_SC_2_4_200_c',
          ),
        ),
        4 => 
        array (
          'name' => 'MseVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MSE版本。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_pro
',
          ),
        ),
        5 => 
        array (
          'name' => 'PubNetworkFlow',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '公网带宽',
            'description' => '公网带宽',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '0',
          ),
        ),
        6 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否下单之后自动支付，如果此值为false，此接口将会返回订单支付url，可手动确认支付',
            'description' => '是否下单之后自动支付，如果此值为false，此接口将会返回订单支付url，可手动确认支付',
            'type' => 'boolean',
            'required' => false,
            'default' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5B170A0D-2C5D-4CF8-B808-03966B86****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'title' => '如果AutoPay设置为false，则此值为订单支付的URL',
                'description' => '保留字段。',
                'type' => 'string',
                'example' => 'null',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。取值说明如下：

- 请求成功：不返回**ErrorCode**字段。
- 请求失败：返回**ErrorCode**字段。具体信息，请参见本文的**错误码**目录。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"5B170A0D-2C5D-4CF8-B808-03966B86****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": \\"null\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\"\\n}","type":"json"}]',
      'title' => '更新集群规格',
      'description' => '更新注册配置中心集群节点数或规格（支持按量付费和包年包月，增加节点或升级规格会产生相应资费，具体详情，请参见[价格说明]（[`~~1806469~~`]））。',
    ),
    'RestartCluster' => 
    array (
      'summary' => '重启注册配置中心集群。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-cn-78v1l83****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-09k1q11****',
          ),
        ),
        3 => 
        array (
          'name' => 'PodNameList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'PodName，支持多个podName传入，多个用英文"," 分隔；
如："mse-a8aba010-1629719288255-reg-center-0-1,mse-a8aba010-1629719288255-reg-center-0-2"

传入的Pod必须属于当前集群，与instanceId绑定，否则重启异常
',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-a8aba010-1629719288255-reg-center-0-1',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5B170A0D-2C5D-4CF8-B808-03966B86****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"5B170A0D-2C5D-4CF8-B808-03966B86****\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RestartClusterResponse>\\n<Message>请求成功</Message>\\n<RequestId>5B170A0D-2C5D-4CF8-B808-03966B86****</RequestId>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</RestartClusterResponse>","errorExample":""}]',
      'title' => '重启集群',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RetryCluster' => 
    array (
      'summary' => '创建超时时，调用RetryCluster接口重试集群。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-cn-st21ri2****',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC34E4A3-5F1C-4E40-86EA-02EDF967****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'NoPermission',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。                                
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"DC34E4A3-5F1C-4E40-86EA-02EDF967****\\",\\n  \\"ErrorCode\\": \\"NoPermission\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '重试集群',
    ),
    'UpgradeCluster' => 
    array (
      'summary' => '升级集群版本。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-cn-nif1w51wi0c',
          ),
        ),
        2 => 
        array (
          'name' => 'UpgradeVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级目标版本',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1.2.1',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'HttpCode' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '202',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8D855418-177B-5FF8-A021-75B930AD890A',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"HttpCode\\": \\"202\\",\\n  \\"RequestId\\": \\"8D855418-177B-5FF8-A021-75B930AD890A\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '升级集群',
    ),
    'CreateEngineNamespace' => 
    array (
      'summary' => '创建一个Nacos命名空间。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'mse-98s****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间展示名字。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dev',
          ),
        ),
        2 => 
        array (
          'name' => 'Desc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间描述。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '开发环境',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'mse-cn-st21ri2****',
          ),
        ),
        4 => 
        array (
          'name' => 'ServiceCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前命名空间下运行的最大服务数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '100',
          ),
        ),
        5 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间自定义ID，若不填，返回自动生成的UUID',
            'type' => 'string',
            'required' => false,
            'example' => 'f4fa5b81-2f26-4900-833a-7516b315ebb2',
          ),
        ),
        6 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F6092602-C357-4750-89D9-E572FBEA****',
              ),
              'ClusterId' => 
              array (
                'description' => '集群ID。',
                'type' => 'string',
                'example' => 'mse-892k****',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => '命名空间类型，取值如下：
- `0`：全局配置
- `1`：默认命名空间
- `2`：自定义命名空间',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'NamespaceShowName' => 
                  array (
                    'description' => '命名空间展示名称。',
                    'type' => 'string',
                    'example' => 'dev',
                  ),
                  'Quota' => 
                  array (
                    'description' => '配额。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Namespace' => 
                  array (
                    'description' => '命名空间ID。',
                    'type' => 'string',
                    'example' => 'f4fa5b81-2f26-4900-833a-7516b315ebb2',
                  ),
                  'NamespaceDesc' => 
                  array (
                    'description' => '命名空间描述。',
                    'type' => 'string',
                    'example' => 'mytest',
                  ),
                  'ConfigCount' => 
                  array (
                    'description' => '配置数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ServiceCount' => 
                  array (
                    'description' => '活跃服务数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"F6092602-C357-4750-89D9-E572FBEA****\\",\\n  \\"ClusterId\\": \\"mse-892k****\\",\\n  \\"Data\\": {\\n    \\"Type\\": 1,\\n    \\"NamespaceShowName\\": \\"dev\\",\\n    \\"Quota\\": 1,\\n    \\"Namespace\\": \\"f4fa5b81-2f26-4900-833a-7516b315ebb2\\",\\n    \\"NamespaceDesc\\": \\"mytest\\",\\n    \\"ConfigCount\\": 1,\\n    \\"ServiceCount\\": 3\\n  },\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateEngineNamespaceResponse>\\n<RequestId>F6092602-C357-4750-89D9-E572FBEA****</RequestId>\\n<Message>请求处理成功</Message>\\n<ClusterId>mse-892k****</ClusterId>\\n<Data>\\n    <Type>1</Type>\\n    <Quota>1</Quota>\\n    <ConfigCount>1</ConfigCount>\\n    <NamespaceShowName>public</NamespaceShowName>\\n    <ServiceCount>3</ServiceCount>\\n    <NamespaceDesc>mytest</NamespaceDesc>\\n    <Namespace>DEFAULT</Namespace>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</CreateEngineNamespaceResponse>","errorExample":""}]',
      'title' => '创建引擎命名空间',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteEngineNamespace' => 
    array (
      'summary' => '删除Nacos命名空间。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
        2 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '678ca857-****-b1bf-d0a98c5ca84b',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-cn-7pp2d1****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'mse-0c738****',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'Message' => 
              array (
                'description' => '响应描述。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A73AC37C-C617-4E3A-8049-372CF49C****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'True',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"202\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"A73AC37C-C617-4E3A-8049-372CF49C****\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除引擎命名空间',
    ),
    'UpdateEngineNamespace' => 
    array (
      'summary' => '更新引擎命名空间。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'name',
          ),
        ),
        1 => 
        array (
          'name' => 'Desc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群描述。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'public',
          ),
        ),
        2 => 
        array (
          'name' => 'ServiceCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '活跃服务数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '3',
          ),
        ),
        3 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '33ff74b6-d21e-4f9b-91a8-bc1ea4ef****',
          ),
        ),
        4 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'mse-09k1q11****',
          ),
        ),
        5 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-cn-st21ri2****',
          ),
        ),
        6 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E9FDCFE-0738-493B-B801-82BDFBCB****',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => '命名空间类型，取值如下：
- `0`：全局配置
- `1`：默认命名空间
- `2`：自定义命名空间',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'NamespaceShowName' => 
                  array (
                    'description' => '命名空间描述名称。',
                    'type' => 'string',
                    'example' => 'mytestshowname',
                  ),
                  'Quota' => 
                  array (
                    'description' => '配额。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Namespace' => 
                  array (
                    'description' => '命名空间。',
                    'type' => 'string',
                    'example' => 'public',
                  ),
                  'NamespaceDesc' => 
                  array (
                    'description' => '命名空间描述。',
                    'type' => 'string',
                    'example' => 'mytest',
                  ),
                  'ConfigCount' => 
                  array (
                    'description' => '配额数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"4E9FDCFE-0738-493B-B801-82BDFBCB****\\",\\n  \\"Data\\": {\\n    \\"Type\\": 1,\\n    \\"NamespaceShowName\\": \\"mytestshowname\\",\\n    \\"Quota\\": 1,\\n    \\"Namespace\\": \\"public\\",\\n    \\"NamespaceDesc\\": \\"mytest\\",\\n    \\"ConfigCount\\": 1\\n  },\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateEngineNamespaceResponse>\\n<RequestId>4E9FDCFE-0738-493B-B801-82BDFBCB****</RequestId>\\n<Message>请求处理成功</Message>\\n<Data>\\n    <Type>1</Type>\\n    <Quota>1</Quota>\\n    <ConfigCount>1</ConfigCount>\\n    <NamespaceShowName>mytestshowname</NamespaceShowName>\\n    <NamespaceDesc>mytest</NamespaceDesc>\\n    <Namespace>public</Namespace>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</UpdateEngineNamespaceResponse>","errorExample":""}]',
      'title' => '更新引擎命名空间',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetEngineNamepace' => 
    array (
      'summary' => '查询Nacos命名空间列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0e958d79-****-b282-b702d66362b5',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse.cn-hangzhou.aliyuncs.com',
          ),
        ),
        2 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-98s****',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'http状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'Type' => 
              array (
                'description' => '命名空间类型，取值如下：

- 0：全局配置                                 
- 1：默认命名空间                                 
- 2：自定义命名空间',
                'type' => 'string',
                'example' => '1',
              ),
              'Quota' => 
              array (
                'description' => '配额。',
                'type' => 'string',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FA8F966F-420C-52F5-B49E-6ED7CCE02697',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'ConfigCount' => 
              array (
                'description' => '配置数量。',
                'type' => 'string',
                'example' => '1',
              ),
              'NamespaceShowName' => 
              array (
                'description' => '命名空间展示名称。',
                'type' => 'string',
                'example' => 'public',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'NamespaceDesc' => 
              array (
                'description' => '命名空间描述。',
                'type' => 'string',
                'example' => 'mytest',
              ),
              'Namespace' => 
              array (
                'description' => '命名空间ID。',
                'type' => 'string',
                'example' => 'public',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"202\\",\\n  \\"Type\\": \\"1\\",\\n  \\"Quota\\": \\"200\\",\\n  \\"RequestId\\": \\"FA8F966F-420C-52F5-B49E-6ED7CCE02697\\",\\n  \\"Message\\": \\"success\\",\\n  \\"ConfigCount\\": \\"1\\",\\n  \\"NamespaceShowName\\": \\"public\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true,\\n  \\"NamespaceDesc\\": \\"mytest\\",\\n  \\"Namespace\\": \\"public\\"\\n}","type":"json"}]',
      'title' => '查询引擎命名空间',
    ),
    'ListEngineNamespaces' => 
    array (
      'summary' => '查询Nacos命名空间列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-cn-st21ri2****',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'TotalCount' => 
              array (
                'description' => '实例总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '062D13C5-DEA3-4921-8918-C49A0F1B****',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'PageSize' => 
              array (
                'description' => '每页展示实例数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据概览。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Type' => 
                    array (
                      'description' => '命名空间类型，取值如下：
- `0`：全局配置
- `1`：默认命名空间
- `2`：自定义命名空间',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'NamespaceShowName' => 
                    array (
                      'description' => '命名空间名称。',
                      'type' => 'string',
                      'example' => 'public',
                    ),
                    'Quota' => 
                    array (
                      'description' => '配额。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '200',
                    ),
                    'Namespace' => 
                    array (
                      'description' => '命名空间。',
                      'type' => 'string',
                      'example' => 'DEFAULT',
                    ),
                    'NamespaceDesc' => 
                    array (
                      'description' => '命名空间描述。',
                      'type' => 'string',
                      'example' => 'mytest',
                    ),
                    'ConfigCount' => 
                    array (
                      'description' => '配额数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'ServiceCount' => 
                    array (
                      'description' => '活跃服务数。',
                      'type' => 'string',
                      'example' => '3',
                    ),
                    'SourceType' => 
                    array (
                      'description' => '创建此空间的来源。',
                      'type' => 'string',
                      'example' => 'mse',
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpCode\\": \\"202\\",\\n  \\"TotalCount\\": 7,\\n  \\"RequestId\\": \\"062D13C5-DEA3-4921-8918-C49A0F1B****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"Data\\": [\\n    {\\n      \\"Type\\": 0,\\n      \\"NamespaceShowName\\": \\"public\\",\\n      \\"Quota\\": 200,\\n      \\"Namespace\\": \\"DEFAULT\\",\\n      \\"NamespaceDesc\\": \\"mytest\\",\\n      \\"ConfigCount\\": 1,\\n      \\"ServiceCount\\": \\"3\\",\\n      \\"SourceType\\": \\"mse\\"\\n    }\\n  ],\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListEngineNamespacesResponse>\\n<HttpCode>202</HttpCode>\\n<TotalCount>7</TotalCount>\\n<PageSize>10</PageSize>\\n<Message>请求处理成功</Message>\\n<RequestId>062D13C5-DEA3-4921-8918-C49A0F1B****</RequestId>\\n<PageNumber>1</PageNumber>\\n<Data>\\n    <Type>0</Type>\\n    <Quota>200</Quota>\\n    <ConfigCount>1</ConfigCount>\\n    <NamespaceShowName>public</NamespaceShowName>\\n    <ServiceCount>3</ServiceCount>\\n    <NamespaceDesc>mytest</NamespaceDesc>\\n    <Namespace>DEFAULT</Namespace>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</ListEngineNamespacesResponse>","errorExample":""}]',
      'title' => '查询引擎命名空间列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ImportZookeeperData' => 
    array (
      'summary' => '发起Zookeeper数据导入任务，使Zookeeper集群开始导入目标URL内的数据。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_prepaid_public_cn-u0t2xzvxa06',
          ),
        ),
        1 => 
        array (
          'name' => 'FileUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源数据链接。
> 需要使用通过GetZookeeperDataImportUrl接口生成的URL',
            'type' => 'string',
            'required' => false,
            'example' => 'http://xxxxxxxxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'FileName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需导入的文件名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'snapshot.5',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResult',
            'description' => 'BaseResult',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '52BA6DA6-A702-4362-A32F-DFF79655****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '202',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'any',
                'example' => 'null',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"52BA6DA6-A702-4362-A32F-DFF79655****\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpCode\\": \\"202\\",\\n  \\"Data\\": \\"null\\"\\n}","type":"json"}]',
      'title' => '发起Zookeeper数据导入',
      'description' => '><danger>此操作会清空原有数据，请谨慎操作></danger>',
    ),
    'GetZookeeperDataImportUrl' => 
    array (
      'summary' => '获取上传数据文件的URL，用户能通过此URL上传Zookeeper待导入的数据文件。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
        2 => 'wss',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_prepaid_public_cn-zvp2xzzkk06',
          ),
        ),
        1 => 
        array (
          'name' => 'ContentType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'zip',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<FileModel>',
            'description' => 'RestResult<FileModel>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E4E2058F-C524-5C29-9BC7-5874EA8D7CE2',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'Code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Url' => 
                  array (
                    'description' => '文件上传地址。',
                    'type' => 'string',
                    'example' => 'http://xxxxxxxxx',
                  ),
                  'MaxSize' => 
                  array (
                    'description' => '允许上传文件的最大大小（单位MB）。',
                    'type' => 'string',
                    'example' => '250000',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E4E2058F-C524-5C29-9BC7-5874EA8D7CE2\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Data\\": {\\n    \\"Url\\": \\"http://xxxxxxxxx\\",\\n    \\"MaxSize\\": \\"250000\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取Zookeeper数据导入URL',
    ),
    'ExportZookeeperData' => 
    array (
      'summary' => '发起导出zookeeper数据任务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-cn-78v1l83****',
          ),
        ),
        1 => 
        array (
          'name' => 'ExportType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '导出类型，取值：

- transactionLog 事务日志
- snapshot 快照文件',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'snapshot',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域，MSE支持的地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResult<ExportTaskDO>',
            'description' => 'BaseResult<ExportTaskDO>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。
',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '25EA0A83-9007-4E87-808C-637BE1A****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'mse-cn-st21ri2****',
                  ),
                  'ExportType' => 
                  array (
                    'description' => '导出类型，取值：

- transactionLog 事务日志
- snapshot 快照文件',
                    'type' => 'string',
                    'example' => 'snapshot',
                  ),
                  'ContentMap' => 
                  array (
                    'description' => '任务内容。',
                    'type' => 'object',
                  ),
                  'Extend' => 
                  array (
                    'description' => '扩展信息。',
                    'type' => 'string',
                    'example' => '{}',
                  ),
                  'Status' => 
                  array (
                    'description' => '任务状态，取值：
-  CREATE 创建中
 -   RUNNING 执行中
 -   FINISH 已完成
  -  FAILED 失败
 -   EXPIRE 已过期',
                    'type' => 'string',
                    'example' => 'FINISH',
                  ),
                  'KubeoneTaskIds' => 
                  array (
                    'description' => '关联的底层taskId，仅作为失败时的排查使用。',
                    'type' => 'string',
                    'example' => '10',
                  ),
                  'Id' => 
                  array (
                    'description' => '任务ID。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1631001140913',
                  ),
                  'UpdateTime' => 
                  array (
                    'description' => '最后更新时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1632979237663',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"RequestId\\": \\"25EA0A83-9007-4E87-808C-637BE1A****\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": \\"200\\",\\n  \\"Data\\": {\\n    \\"InstanceId\\": \\"mse-cn-st21ri2****\\",\\n    \\"ExportType\\": \\"snapshot\\",\\n    \\"ContentMap\\": {\\n      \\"test\\": \\"test\\",\\n      \\"test2\\": 1\\n    },\\n    \\"Extend\\": \\"{}\\",\\n    \\"Status\\": \\"FINISH\\",\\n    \\"KubeoneTaskIds\\": \\"10\\",\\n    \\"Id\\": 1,\\n    \\"CreateTime\\": 1631001140913,\\n    \\"UpdateTime\\": 1632979237663\\n  }\\n}","type":"json"}]',
      'title' => 'zookeeper发起导出数据任务',
      'description' => '同时只有一个任务在运行中。',
    ),
    'ListExportZookeeperData' => 
    array (
      'summary' => '列出Zookeeper的历史数据导出任务列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-cn-7pp2d1****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
            'default' => '0',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '5',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'BaseResult<List<ExportTaskDO>>',
            'description' => 'BaseResult<List<ExportTaskDO>>',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8BD1E58D-0755-42AC-A599-E6B55112****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'InstanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'mse-cn-st21ri2****',
                    ),
                    'ExportType' => 
                    array (
                      'description' => '导出类型，取值：

- transactionLog 事务日志
- snapshot 快照文件',
                      'type' => 'string',
                      'example' => 'snapshot',
                    ),
                    'ContentMap' => 
                    array (
                      'description' => '任务详情。',
                      'type' => 'string',
                      'example' => '{}',
                    ),
                    'Extend' => 
                    array (
                      'description' => '其他扩展信息，JSON结构，方便后续扩展参数。',
                      'type' => 'string',
                      'example' => '{}',
                    ),
                    'Status' => 
                    array (
                      'description' => '任务状态，取值：
-  CREATE 创建中
 -   RUNNING 执行中
 -   FINISH 已完成
  -  FAILED 失败
 -   EXPIRE 已过期',
                      'type' => 'string',
                      'example' => 'FINISH',
                    ),
                    'KubeoneTaskIds' => 
                    array (
                      'description' => '关联的底层taskId，仅作为失败时的排查使用。',
                      'type' => 'string',
                      'example' => '10',
                    ),
                    'Id' => 
                    array (
                      'description' => '任务ID。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '任务创建时间。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1631001140913',
                    ),
                    'UpdateTime' => 
                    array (
                      'description' => '更新时间。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1632979237663',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"RequestId\\": \\"8BD1E58D-0755-42AC-A599-E6B55112****\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": \\"200\\",\\n  \\"Data\\": [\\n    {\\n      \\"InstanceId\\": \\"mse-cn-st21ri2****\\",\\n      \\"ExportType\\": \\"snapshot\\",\\n      \\"ContentMap\\": \\"{}\\",\\n      \\"Extend\\": \\"{}\\",\\n      \\"Status\\": \\"FINISH\\",\\n      \\"KubeoneTaskIds\\": \\"10\\",\\n      \\"Id\\": 1,\\n      \\"CreateTime\\": 1631001140913,\\n      \\"UpdateTime\\": 1632979237663\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => 'Zookeeper导出任务列表',
    ),
    'CreateZnode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-09k1q11****',
          ),
        ),
        1 => 
        array (
          'name' => 'Path',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点路径。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '/zookeeper',
          ),
        ),
        2 => 
        array (
          'name' => 'Data',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点数据。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'data',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC34E4A3-5F1C-4E40-86EA-02EDF967****',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'Data' => 
                  array (
                    'description' => '节点数据。',
                    'type' => 'string',
                    'example' => 'cluster',
                  ),
                  'Path' => 
                  array (
                    'description' => '节点路径。',
                    'type' => 'string',
                    'example' => '/',
                  ),
                  'Dir' => 
                  array (
                    'description' => '节点列表信息，取值如下：
- `true`：信息返回成功。
- `false`：信息返回失败。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Name' => 
                  array (
                    'description' => '节点名称。',
                    'type' => 'string',
                    'example' => 'mse-bc1a29b0-160230875****-reg-center-0-1',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpCode\\": \\"200\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"DC34E4A3-5F1C-4E40-86EA-02EDF967****\\",\\n  \\"Data\\": {\\n    \\"Data\\": \\"cluster\\",\\n    \\"Path\\": \\"/\\",\\n    \\"Dir\\": true,\\n    \\"Name\\": \\"mse-bc1a29b0-160230875****-reg-center-0-1\\"\\n  },\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateZnodeResponse>\\n<HttpCode>200</HttpCode>\\n<RequestId>DC34E4A3-5F1C-4E40-86EA-02EDF967****</RequestId>\\n<Message>请求处理成功</Message>\\n<Data>\\n    <Path>/</Path>\\n    <Data>cluster</Data>\\n    <Dir>true</Dir>\\n    <Name>mse-bc1a29b0-160230875****-reg-center-0-1</Name>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</CreateZnodeResponse>","errorExample":""}]',
      'title' => '创建ZooKeeper数据节点',
      'summary' => '创建Zookeeper数据节点。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteZnode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-09k1q11****',
          ),
        ),
        2 => 
        array (
          'name' => 'Path',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点路径。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '/zookeeper',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC34E4A3-5F1C-4E40-86EA-02EDF967****',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'Data' => 
                  array (
                    'description' => '节点数据列表。',
                    'type' => 'string',
                    'example' => 'cluster',
                  ),
                  'Path' => 
                  array (
                    'description' => '节点路径。',
                    'type' => 'string',
                    'example' => '/',
                  ),
                  'Dir' => 
                  array (
                    'description' => '节点列表信息，取值如下：
- `true`：信息返回成功。
- `false`：信息返回失败。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Name' => 
                  array (
                    'description' => '节点名称。',
                    'type' => 'string',
                    'example' => 'mse-bc1a29b0-160230875****-reg-center-0-1',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HttpCode\\": \\"200\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"DC34E4A3-5F1C-4E40-86EA-02EDF967****\\",\\n  \\"Data\\": {\\n    \\"Data\\": \\"cluster\\",\\n    \\"Path\\": \\"/\\",\\n    \\"Dir\\": true,\\n    \\"Name\\": \\"mse-bc1a29b0-160230875****-reg-center-0-1\\"\\n  },\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteZnodeResponse>\\n<HttpCode>200</HttpCode>\\n<RequestId>DC34E4A3-5F1C-4E40-86EA-02EDF967****</RequestId>\\n<Message>请求处理成功</Message>\\n<Data>\\n    <Path>/</Path>\\n    <Data>cluster</Data>\\n    <Dir>true</Dir>\\n    <Name>mse-bc1a29b0-160230875****-reg-center-0-1</Name>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</DeleteZnodeResponse>","errorExample":""}]',
      'title' => '删除ZooKeeper数据节点',
      'summary' => '释放Zookeeper数据节点。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateZnode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-09k1q11****',
          ),
        ),
        2 => 
        array (
          'name' => 'Path',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点路径。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '/zookeeper',
          ),
        ),
        3 => 
        array (
          'name' => 'Data',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点数据。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'data',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateZnodeResponse>\\n<RequestId>316F5F64-F73D-42DC-8632-01E308B6****</RequestId>\\n<Message>请求处理成功</Message>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</UpdateZnodeResponse>","errorExample":""}]',
      'title' => '更新ZooKeeper数据节点',
      'summary' => '更新Zookeeper数据节点。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListZnodeChildren' => 
    array (
      'summary' => '查询ZooKeeper数据子节点。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Path',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点路径。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '/zookeeper',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mse-09k1q11****',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BDB6CE0B-9CAF-41B5-9FEA-E08BE8E2****',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Data' => 
                    array (
                      'description' => '节点数据。',
                      'type' => 'string',
                      'example' => 'cluster',
                    ),
                    'Path' => 
                    array (
                      'description' => '节点路径。',
                      'type' => 'string',
                      'example' => '/zookeeper',
                    ),
                    'Dir' => 
                    array (
                      'description' => '节点列表信息，取值如下：
- `true`：信息返回成功。
- `false`：信息返回失败。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'Name' => 
                    array (
                      'description' => '节点名称。',
                      'type' => 'string',
                      'example' => 'mse-bc1a29b0-160230875****-reg-center-0-1',
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"BDB6CE0B-9CAF-41B5-9FEA-E08BE8E2****\\",\\n  \\"Data\\": [\\n    {\\n      \\"Data\\": \\"cluster\\",\\n      \\"Path\\": \\"/zookeeper\\",\\n      \\"Dir\\": true,\\n      \\"Name\\": \\"mse-bc1a29b0-160230875****-reg-center-0-1\\"\\n    }\\n  ],\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListZnodeChildrenResponse>\\n<Message>请求处理成功</Message>\\n<RequestId>BDB6CE0B-9CAF-41B5-9FEA-E08BE8E2****</RequestId>\\n<Data>\\n    <Path>/zookeeper</Path>\\n    <Data>cluster</Data>\\n    <Dir>true</Dir>\\n    <Name>mse-bc1a29b0-160230875****-reg-center-0-1</Name>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</ListZnodeChildrenResponse>","errorExample":""}]',
      'title' => '查询ZooKeeper子节点',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryZnodeDetail' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展请求参数，JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'mse-09k1q11****',
          ),
        ),
        2 => 
        array (
          'name' => 'Path',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点路径。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '/zookeeper',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-cn-5bffa4e8630',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '58E06A0A-BD2C-47A0-99C2-B100F353****',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'Data' => 
                  array (
                    'description' => '节点数据。',
                    'type' => 'string',
                    'example' => 'cluster',
                  ),
                  'Path' => 
                  array (
                    'description' => '节点路径。',
                    'type' => 'string',
                    'example' => '/zookeeper',
                  ),
                  'Dir' => 
                  array (
                    'description' => '节点列表信息，取值如下：
- `true`：信息返回成功。
- `false`：信息返回失败。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Name' => 
                  array (
                    'description' => '节点名称。',
                    'type' => 'string',
                    'example' => 'zookeeper',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"58E06A0A-BD2C-47A0-99C2-B100F353****\\",\\n  \\"Data\\": {\\n    \\"Data\\": \\"cluster\\",\\n    \\"Path\\": \\"/zookeeper\\",\\n    \\"Dir\\": true,\\n    \\"Name\\": \\"zookeeper\\"\\n  },\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": \\"true\\"\\n}","errorExample":""},{"type":"xml","example":"<QueryZnodeDetailResponse>\\n<Message>请求处理成功</Message>\\n<RequestId>58E06A0A-BD2C-47A0-99C2-B100F353****</RequestId>\\n<Data>\\n    <Path>/zookeeper</Path>\\n    <Data>cluster</Data>\\n    <Dir>true</Dir>\\n    <Name>zookeeper</Name>\\n</Data>\\n<ErrorCode>mse-100-000</ErrorCode>\\n<Success>true</Success>\\n</QueryZnodeDetailResponse>","errorExample":""}]',
      'title' => '查询ZooKeeper数据节点',
      'summary' => '查询ZooKeeper数据节点信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListZkTrack' => 
    array (
      'summary' => '获取ZooKeeper的轨迹数据。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'cluster',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'RequestPars。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'mse-cn-0ju2yq****',
          ),
        ),
        2 => 
        array (
          'name' => 'Path',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路径。',
            'type' => 'string',
            'required' => false,
            'example' => '/path',
          ),
        ),
        3 => 
        array (
          'name' => 'SessionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SessionId。',
            'type' => 'string',
            'required' => false,
            'example' => '0x301fdfbdbf00***',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间戳，单位秒。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1669618483',
          ),
        ),
        5 => 
        array (
          'name' => 'EndTs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间戳，单位秒。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1669619383',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '20',
          ),
        ),
        7 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'Reverse',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否倒序。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        9 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文

- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Traces' => 
              array (
                'description' => '轨迹数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据概览。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'LogDate' => 
                    array (
                      'description' => '记录时间。',
                      'type' => 'string',
                      'example' => '2022-11-28 15:09:15,606',
                    ),
                    'Timestamp' => 
                    array (
                      'description' => '时间戳（暂无）。',
                      'type' => 'string',
                      'example' => '1669619383000',
                    ),
                    'SessionId' => 
                    array (
                      'description' => 'SessionId。',
                      'type' => 'string',
                      'example' => '0x301fdfbdbf00***',
                    ),
                    'Path' => 
                    array (
                      'description' => '路径。',
                      'type' => 'string',
                      'example' => '/path',
                    ),
                    'TraceType' => 
                    array (
                      'title' => '轨迹类型：push、pull、notify',
                      'description' => '轨迹类型：

- Push

- Pull

- Notify',
                      'type' => 'string',
                      'example' => 'Push',
                    ),
                    'OpType' => 
                    array (
                      'title' => '操作类型
对于Push
  ○ Create
  ○ Update
  ○ Delete
  ○ SetAcl
  ○ Multi
对于Pull
  ○ GetData
  ○ GetChild
  ○ GetStat',
                      'description' => '操作类型。
对于Push：
  
- Create

- Update

- Delete

- SetAcl

- Multi

对于Pull：

- GetData

- GetChild

- GetStat',
                      'type' => 'string',
                      'example' => 'Create',
                    ),
                    'EventType' => 
                    array (
                      'title' => '事件类型
对于notify：
  ○ NodeCreated
  ○ NodeDeleted
  ○ NodeDataChanged
  ○ NodeChildrenChanged',
                      'description' => '事件类型。
对于notify：

- NodeCreated

- NodeDeleted

- NodeDataChanged

- NodeChildrenChanged',
                      'type' => 'string',
                      'example' => 'NodeCreated',
                    ),
                    'DataType' => 
                    array (
                      'title' => '数据类型：persist、ephemeral',
                      'description' => '数据类型：

- persist

- ephemeral',
                      'type' => 'string',
                      'example' => 'persist',
                    ),
                    'Watch' => 
                    array (
                      'title' => '监听',
                      'description' => '是否监听。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'Acl' => 
                    array (
                      'description' => 'ACL。',
                      'type' => 'string',
                      'example' => 'world:anyone:cdrwa',
                    ),
                    'MultiSize' => 
                    array (
                      'description' => '事务大小。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3',
                    ),
                    'Result' => 
                    array (
                      'description' => '结果。',
                      'type' => 'string',
                      'example' => 'success',
                    ),
                    'Ttl' => 
                    array (
                      'description' => 'TTL。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '0',
                    ),
                    'Finished' => 
                    array (
                      'description' => '业务是否结束。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                  ),
                ),
              ),
              'PageSize' => 
              array (
                'description' => '分页大小。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC34E4A3-5F1C-4E40-86EA-02EDF967****
',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => 'ok',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- true：请求成功。

- false：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpCode\\": \\"200\\",\\n  \\"Traces\\": [\\n    {\\n      \\"LogDate\\": \\"2022-11-28 15:09:15,606\\",\\n      \\"Timestamp\\": \\"1669619383000\\",\\n      \\"SessionId\\": \\"0x301fdfbdbf00***\\",\\n      \\"Path\\": \\"/path\\",\\n      \\"TraceType\\": \\"Push\\",\\n      \\"OpType\\": \\"Create\\",\\n      \\"EventType\\": \\"NodeCreated\\",\\n      \\"DataType\\": \\"persist\\",\\n      \\"Watch\\": true,\\n      \\"Acl\\": \\"world:anyone:cdrwa\\",\\n      \\"MultiSize\\": 3,\\n      \\"Result\\": \\"success\\",\\n      \\"Ttl\\": 0,\\n      \\"Finished\\": true\\n    }\\n  ],\\n  \\"PageSize\\": 20,\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 20,\\n  \\"RequestId\\": \\"DC34E4A3-5F1C-4E40-86EA-02EDF967****\\\\n\\",\\n  \\"Message\\": \\"ok\\",\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询ZooKeeper轨迹数据',
    ),
    'ListSentinelBlockFallbackDefinitions' => 
    array (
      'summary' => '获取流量防护自定义行为。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClassificationSet',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '行为类型列表。',
            'description' => '行为类型列表。',
            'type' => 'array',
            'items' => 
            array (
              'title' => '行为类型。',
              'description' => '行为类型。',
              'type' => 'integer',
              'format' => 'int32',
              'required' => false,
              'enumValueTitles' => 
              array (
                1 => 'WEB行为',
                2 => 'RPC行为',
              ),
              'example' => '1',
            ),
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的微服务命名空间。',
            'description' => '应用所属的微服务命空间。',
            'type' => 'string',
            'required' => true,
            'example' => 'default',
          ),
        ),
        2 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称。',
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'title' => '状态码。',
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'title' => '响应信息。',
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E9FDCFE-0738-493B-B801-82BDFBCB****',
              ),
              'Data' => 
              array (
                'title' => '行为信息。',
                'description' => '行为信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Id' => 
                    array (
                      'title' => '行为ID。',
                      'description' => '行为ID。',
                      'type' => 'string',
                      'example' => '12',
                    ),
                    'Namespace' => 
                    array (
                      'title' => '应用所属的微服务命名空间。',
                      'description' => '应用所属的微服务命空间。',
                      'type' => 'string',
                      'example' => 'default',
                    ),
                    'AppName' => 
                    array (
                      'title' => '应用名称。',
                      'description' => '应用名称。',
                      'type' => 'string',
                      'example' => 'spring-cloud-a',
                    ),
                    'Name' => 
                    array (
                      'title' => '行为名称。',
                      'description' => '行为名称。',
                      'type' => 'string',
                      'example' => 'defaultFallback',
                    ),
                    'ResourceClassification' => 
                    array (
                      'title' => '行为类型。',
                      'description' => '行为类型。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                    'FallbackBehavior' => 
                    array (
                      'title' => '行为详情。',
                      'description' => '行为详情。',
                      'type' => 'object',
                      'example' => '{"webRespStatusCode":429,"webRespMessage":"test","webFallbackMode":0,"webRespContentType":0}',
                    ),
                    'TargetMap' => 
                    array (
                      'title' => '与该行为绑定的资源信息。',
                      'description' => '与该行为绑定的资源信息。',
                      'type' => 'object',
                      'example' => '{"/params/{hot}":[1]}',
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'title' => '请求结果。',
                'description' => '请求结果。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"4E9FDCFE-0738-493B-B801-82BDFBCB****\\",\\n  \\"Data\\": [\\n    {\\n      \\"Id\\": \\"12\\",\\n      \\"Namespace\\": \\"default\\",\\n      \\"AppName\\": \\"spring-cloud-a\\",\\n      \\"Name\\": \\"defaultFallback\\",\\n      \\"ResourceClassification\\": \\"1\\",\\n      \\"FallbackBehavior\\": {\\n        \\"webRespStatusCode\\": 429,\\n        \\"webRespMessage\\": \\"test\\",\\n        \\"webFallbackMode\\": 0,\\n        \\"webRespContentType\\": 0\\n      },\\n      \\"TargetMap\\": {\\n        \\"/params/{hot}\\": [\\n          1\\n        ]\\n      }\\n    }\\n  ],\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '获取流量防护自定义行为',
    ),
    'BindSentinelBlockFallbackDefinition' => 
    array (
      'summary' => '绑定流量防护行为。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称。',
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的微服务命名空间。',
            'description' => '应用所属的微服务命名空间。',
            'type' => 'string',
            'required' => true,
            'example' => 'prod',
          ),
        ),
        2 => 
        array (
          'name' => 'FallbackId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '行为ID。',
            'description' => '行为ID，其中0表示默认行为。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '21',
          ),
        ),
        3 => 
        array (
          'name' => 'TargetType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '目标规则类型。',
            'description' => '目标规则类型。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              1 => '接口流控',
              2 => '熔断规则',
              4 => '热点参数防护（RPC）',
              6 => '并发隔离',
              11 => '热点参数防护（HTTP 请求）',
            ),
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'Resource',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
            'description' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
            'type' => 'string',
            'required' => true,
            'example' => '/a',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'title' => '响应信息。',
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E9FDCFE-0738-493B-B801-82BDFBCB****',
              ),
              'Data' => 
              array (
                'title' => '返回详情。',
                'description' => '返回详情。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => '状态码。',
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'title' => '请求结果。',
                'description' => '请求结果。',
                'type' => 'string',
                'example' => 'true',
              ),
              'HttpStatusCode' => 
              array (
                'title' => '状态码。',
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"4E9FDCFE-0738-493B-B801-82BDFBCB****\\",\\n  \\"Data\\": true,\\n  \\"Code\\": 200,\\n  \\"Success\\": \\"true\\",\\n  \\"HttpStatusCode\\": 200\\n}","type":"json"}]',
      'title' => '绑定流量防护行为',
    ),
    'ListIsolationRules' => 
    array (
      'summary' => '查询隔离规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的微服务命名空间。',
            'description' => '应用所属的微服务命空间。',
            'type' => 'string',
            'required' => true,
            'example' => 'default',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称。',
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceSearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查找包含接口关键字的防护规则。',
            'description' => '查找包含接口关键字的防护规则。',
            'type' => 'string',
            'required' => false,
            'example' => 'a',
          ),
        ),
        3 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用ID。',
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hkhon1po62@c3df23522bXXXXX',
          ),
        ),
        4 => 
        array (
          'name' => 'Resource',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查找指定接口的防护规则。',
            'description' => '查找指定接口的防护规则。',
            'type' => 'string',
            'required' => false,
            'example' => '/a',
          ),
        ),
        5 => 
        array (
          'name' => 'PageIndex',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '起始页。默认值为1。',
            'description' => '起始页。默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '页大小。默认值为6。',
            'description' => '页大小。默认值为6。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'title' => '响应码。',
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'title' => '响应信息。',
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E9FDCFE-0738-493B-B801-82BDFBCB****',
              ),
              'Success' => 
              array (
                'title' => '请求结果。',
                'description' => '请求结果。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'title' => '规则信息。',
                'description' => '规则信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Result' => 
                  array (
                    'title' => '返回结果。',
                    'description' => '返回结果。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Namespace' => 
                        array (
                          'title' => '应用所属的微服务命名空间。',
                          'description' => '应用所属的微服务命空间。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'RuleId' => 
                        array (
                          'title' => '规则ID。',
                          'description' => '规则ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'AppName' => 
                        array (
                          'title' => '应用名称。',
                          'description' => '应用名称。',
                          'type' => 'string',
                          'example' => 'spring-cloud-a',
                        ),
                        'Resource' => 
                        array (
                          'title' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
                          'description' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
                          'type' => 'string',
                          'example' => '/a',
                        ),
                        'Threshold' => 
                        array (
                          'title' => '隔离规则并发数阈值。',
                          'description' => '隔离规则并发数阈值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'Enable' => 
                        array (
                          'title' => '规则的启用状态。',
                          'description' => '规则的启用状态。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'AppId' => 
                        array (
                          'title' => '应用ID。',
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => 'hkhon1po62@c3df23522bXXXXX',
                        ),
                        'RegionId' => 
                        array (
                          'title' => '集群所在地域。',
                          'description' => '集群所在地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'FallbackObject' => 
                        array (
                          'title' => '规则绑定的行为。',
                          'description' => '规则绑定的行为。',
                          'type' => 'string',
                          'example' => '"{\\"appName\\":\\"spring-cloud-a\\",\\"fallbackBehavior\\":{\\"webFallbackMode\\":0,\\"webRespContentType\\":0,\\"webRespMessage\\":\\"Blocked\\",\\"webRespStatusCode\\":429},\\"id\\":977,\\"name\\":\\"Fallback\\",\\"namespace\\":\\"default\\",\\"resourceClassification\\":1}"',
                        ),
                      ),
                    ),
                  ),
                  'PageNumber' => 
                  array (
                    'title' => '起始页。',
                    'description' => '起始页。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'title' => '页大小。',
                    'description' => '页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalSize' => 
                  array (
                    'title' => '规则总数。',
                    'description' => '规则总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'title' => '状态码。',
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"4E9FDCFE-0738-493B-B801-82BDFBCB****\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Result\\": [\\n      {\\n        \\"Namespace\\": \\"default\\",\\n        \\"RuleId\\": 1,\\n        \\"AppName\\": \\"spring-cloud-a\\",\\n        \\"Resource\\": \\"/a\\",\\n        \\"Threshold\\": 3,\\n        \\"Enable\\": true,\\n        \\"AppId\\": \\"hkhon1po62@c3df23522bXXXXX\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"FallbackObject\\": \\"\\\\\\"{\\\\\\\\\\\\\\"appName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"spring-cloud-a\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"fallbackBehavior\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"webFallbackMode\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"webRespContentType\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"webRespMessage\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Blocked\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"webRespStatusCode\\\\\\\\\\\\\\":429},\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\":977,\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Fallback\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"namespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"resourceClassification\\\\\\\\\\\\\\":1}\\\\\\"\\"\\n      }\\n    ],\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalSize\\": 3\\n  },\\n  \\"HttpStatusCode\\": 200\\n}","type":"json"}]',
      'title' => '获取隔离规则列表',
    ),
    'CreateIsolationRule' => 
    array (
      'summary' => '创建隔离规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '163570',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmse6JRV3O',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的微服务命名空间。',
            'description' => '应用所属的微服务命名空间。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称。',
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        2 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '隔离规则并发数阈值。',
            'description' => '隔离规则并发数阈值。',
            'type' => 'number',
            'format' => 'float',
            'required' => true,
            'docRequired' => true,
            'example' => '3',
          ),
        ),
        3 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '规则的启用状态。',
            'description' => '规则的启用状态。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'Resource',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
            'description' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '/a',
          ),
        ),
        5 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用ID。',
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hkhon1po62@c3df23522bXXXXX',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所在地域。',
            'description' => '集群所在地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'title' => '响应信息。',
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E9FDCFE-0738-493B-B801-82BDFBCB****',
              ),
              'Code' => 
              array (
                'title' => '响应码。',
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'title' => '规则信息。',
                'description' => '规则信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Namespace' => 
                  array (
                    'title' => '应用所属的微服务命名空间。',
                    'description' => '应用所属的微服务命空间。',
                    'type' => 'string',
                    'example' => 'default',
                  ),
                  'Id' => 
                  array (
                    'title' => '规则ID。',
                    'description' => '规则ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'AppName' => 
                  array (
                    'title' => '应用名称。',
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'spring-cloud-a',
                  ),
                  'Resource' => 
                  array (
                    'title' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
                    'description' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
                    'type' => 'string',
                    'example' => '/a',
                  ),
                  'Threshold' => 
                  array (
                    'title' => '隔离规则并发数阈值。',
                    'description' => '隔离规则并发数阈值。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '3',
                  ),
                  'Enable' => 
                  array (
                    'title' => '规则的启用状态。',
                    'description' => '规则的启用状态。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'AppId' => 
                  array (
                    'title' => '应用ID。',
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'hpn9ac29kz@e31a4b871******',
                  ),
                  'RegionId' => 
                  array (
                    'title' => '集群所在地域。',
                    'description' => '集群所在地域。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                ),
              ),
              'Success' => 
              array (
                'title' => '请求结果。',
                'description' => '请求结果。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"4E9FDCFE-0738-493B-B801-82BDFBCB****\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Data\\": {\\n    \\"Namespace\\": \\"default\\",\\n    \\"Id\\": 1,\\n    \\"AppName\\": \\"spring-cloud-a\\",\\n    \\"Resource\\": \\"/a\\",\\n    \\"Threshold\\": 3,\\n    \\"Enable\\": true,\\n    \\"AppId\\": \\"hpn9ac29kz@e31a4b871******\\",\\n    \\"RegionId\\": \\"cn-hangzhou\\"\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '创建隔离规则',
    ),
    'DeleteIsolationRules' => 
    array (
      'summary' => '删除隔离规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的微服务命名空间。',
            'description' => '应用所属的微服务命名空间。',
            'type' => 'string',
            'required' => true,
            'example' => 'default',
          ),
        ),
        1 => 
        array (
          'name' => 'Ids',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '待删除的规则ID列表。',
            'description' => '待删除的规则ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'title' => '规则ID。',
              'description' => '规则ID。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '1',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        2 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称。',
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'title' => '返回码。',
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'title' => '响应信息。',
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E9FDCFE-0738-493B-B801-82BDFBCB****',
              ),
              'Success' => 
              array (
                'title' => '请求结果。',
                'description' => '请求结果。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'HttpStatusCode' => 
              array (
                'title' => 'HTTP状态码。',
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Data' => 
              array (
                'title' => '完成删除的规则ID列表。',
                'description' => '完成删除的规则ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '规则ID。',
                  'description' => '规则ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'example' => '1',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"4E9FDCFE-0738-493B-B801-82BDFBCB****\\",\\n  \\"Success\\": true,\\n  \\"HttpStatusCode\\": 200,\\n  \\"Data\\": [\\n    1\\n  ]\\n}","type":"json"}]',
      'title' => '删除隔离规则',
    ),
    'UpdateIsolationRule' => 
    array (
      'summary' => '更新隔离规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的微服务命名空间。',
            'description' => '应用所属的微服务命空间。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称。',
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '规则ID。',
            'description' => '规则ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '隔离规则并发数阈值。',
            'description' => '隔离规则并发数阈值。',
            'type' => 'number',
            'format' => 'float',
            'required' => false,
            'docRequired' => false,
            'example' => '3',
          ),
        ),
        4 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '规则的启用状态。',
            'description' => '规则的启用状态。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用ID。',
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hkhon1po62@c3df23522******',
          ),
        ),
        6 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'title' => '响应信息。',
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E9FDCFE-0738-493B-B801-82BDFBCB****',
              ),
              'Code' => 
              array (
                'title' => '响应码。',
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'title' => '规则信息。',
                'description' => '规则信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Namespace' => 
                  array (
                    'title' => '应用所属的微服务命名空间。',
                    'description' => '应用所属的微服务命空间。',
                    'type' => 'string',
                    'example' => 'default',
                  ),
                  'Id' => 
                  array (
                    'title' => '规则ID。',
                    'description' => '规则ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'AppName' => 
                  array (
                    'title' => '应用名称。',
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'spring-cloud-a',
                  ),
                  'Resource' => 
                  array (
                    'title' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
                    'description' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
                    'type' => 'string',
                    'example' => '/a',
                  ),
                  'Threshold' => 
                  array (
                    'title' => '隔离规则并发数阈值。',
                    'description' => '隔离规则并发数阈值。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '3',
                  ),
                  'Enable' => 
                  array (
                    'title' => '规则的启用状态。',
                    'description' => '规则的启用状态。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'AppId' => 
                  array (
                    'title' => '应用ID。',
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'hkhon1po62@c3df23522bXXXXX',
                  ),
                ),
              ),
              'Success' => 
              array (
                'title' => '请求结果。',
                'description' => '请求结果。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"4E9FDCFE-0738-493B-B801-82BDFBCB****\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Data\\": {\\n    \\"Namespace\\": \\"default\\",\\n    \\"Id\\": 1,\\n    \\"AppName\\": \\"spring-cloud-a\\",\\n    \\"Resource\\": \\"/a\\",\\n    \\"Threshold\\": 3,\\n    \\"Enable\\": true,\\n    \\"AppId\\": \\"hkhon1po62@c3df23522bXXXXX\\"\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新隔离规则',
    ),
    'DeleteCircuitBreakerRules' => 
    array (
      'summary' => '删除熔断规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的微服务命名空间。',
            'description' => '应用所属的微服务命名空间。',
            'type' => 'string',
            'required' => true,
            'example' => 'default',
          ),
        ),
        1 => 
        array (
          'name' => 'Ids',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '待删除的规则ID列表。',
            'description' => '待删除的规则ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'title' => '规则ID。',
              'description' => '规则ID。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '1',
            ),
            'required' => true,
            'docRequired' => true,
            'maxItems' => 100,
          ),
        ),
        2 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称。',
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FAF577DD-8E8E-5BE6-80CC-380E19******',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。                                
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Data' => 
              array (
                'title' => '完成删除的规则ID列表。',
                'description' => '完成删除的规则ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '规则ID。',
                  'description' => '规则ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'example' => '1',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"FAF577DD-8E8E-5BE6-80CC-380E19******\\",\\n  \\"Success\\": true,\\n  \\"HttpStatusCode\\": 200,\\n  \\"Data\\": [\\n    1\\n  ]\\n}","type":"json"}]',
      'title' => '删除熔断规则',
    ),
    'DeleteFlowRules' => 
    array (
      'summary' => '删除流控规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的微服务命名空间。',
            'description' => '应用所属的微服务命名空间。',
            'type' => 'string',
            'required' => true,
            'example' => 'default',
          ),
        ),
        1 => 
        array (
          'name' => 'Ids',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '待删除的规则ID列表。',
            'description' => '待删除的规则ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'title' => '规则ID。',
              'description' => '规则ID。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '1',
            ),
            'required' => true,
            'docRequired' => true,
            'example' => '[1,2]',
          ),
        ),
        2 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称。',
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FAF577DD-8E8E-5BE6-80CC-380E19******',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Data' => 
              array (
                'title' => '完成删除的规则ID列表。',
                'description' => '完成删除的规则ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '规则ID。',
                  'description' => '规则ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'example' => '1',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"FAF577DD-8E8E-5BE6-80CC-380E19******\\",\\n  \\"Success\\": true,\\n  \\"HttpStatusCode\\": 200,\\n  \\"Data\\": [\\n    1\\n  ]\\n}","type":"json"}]',
      'title' => '删除流控规则',
    ),
    'UpdateFlowRule' => 
    array (
      'summary' => '更新流控规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则的 ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '13',
          ),
        ),
        3 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控规则阈值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '30',
          ),
        ),
        4 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则的启用状态。',
            'type' => 'boolean',
            'required' => false,
            'enumValueTitles' => 
            array (
              'true' => '开启',
              'false' => '关闭',
            ),
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'ControlBehavior',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控效果。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'enumValueTitles' => 
            array (
              0 => '快速失败',
              2 => '排队等待',
            ),
            'example' => '0',
          ),
        ),
        6 => 
        array (
          'name' => 'MaxQueueingTimeMs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '超时时间，单位毫秒。当controlBehavior类型为（排队等待）时，需要设置该字段。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '500',
          ),
        ),
        7 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hkhon1po62@c3df23522******',
          ),
        ),
        8 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '52BA6DA6-A702-4362-A32F-DFF79655****',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '节点数据列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'Namespace' => 
                  array (
                    'description' => '命名空间。',
                    'type' => 'string',
                    'example' => 'default',
                  ),
                  'Id' => 
                  array (
                    'description' => '规则ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12',
                  ),
                  'AppName' => 
                  array (
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'spring-cloud-a',
                  ),
                  'Resource' => 
                  array (
                    'description' => '接口资源名。',
                    'type' => 'string',
                    'example' => '/c',
                  ),
                  'ControlBehavior' => 
                  array (
                    'description' => '流控效果。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'enumValueTitles' => 
                    array (
                      0 => '快速失败',
                      2 => '排队等待',
                    ),
                    'example' => '0',
                  ),
                  'MaxQueueingTimeMs' => 
                  array (
                    'description' => '流控效果为排队等待时对应的超时时间，单位毫秒。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '500',
                  ),
                  'Threshold' => 
                  array (
                    'description' => '流控规则阈值。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '5',
                  ),
                  'Enable' => 
                  array (
                    'description' => '规则的启用状态。',
                    'type' => 'boolean',
                    'enumValueTitles' => 
                    array (
                      'true' => '开启',
                      'fasle' => '关闭',
                    ),
                    'example' => 'true',
                  ),
                  'AppId' => 
                  array (
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'hpn9ac29kz@e31a4b871******',
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求结果。',
                'type' => 'boolean',
                'enumValueTitles' => 
                array (
                  'true' => '请求成功',
                  'false' => '请求失败',
                ),
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"52BA6DA6-A702-4362-A32F-DFF79655****\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Data\\": {\\n    \\"Namespace\\": \\"default\\",\\n    \\"Id\\": 12,\\n    \\"AppName\\": \\"spring-cloud-a\\",\\n    \\"Resource\\": \\"/c\\",\\n    \\"ControlBehavior\\": 0,\\n    \\"MaxQueueingTimeMs\\": 500,\\n    \\"Threshold\\": 5,\\n    \\"Enable\\": true,\\n    \\"AppId\\": \\"hpn9ac29kz@e31a4b871******\\"\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新流控规则',
    ),
    'ListFlowRules' => 
    array (
      'summary' => '获取流控规则列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间。',
            'type' => 'string',
            'required' => true,
            'example' => 'default',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'xx-demo',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceSearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键字。',
            'type' => 'string',
            'required' => false,
            'example' => '/a',
          ),
        ),
        3 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hkhon1po62@c3df23522******',
          ),
        ),
        4 => 
        array (
          'name' => 'Resource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源名。',
            'type' => 'string',
            'required' => false,
            'example' => '/a',
          ),
        ),
        5 => 
        array (
          'name' => 'PageIndex',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标页号，默认为1',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页，每页 N 个。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'Success' => 
              array (
                'description' => '请求结果。',
                'type' => 'boolean',
                'enumValueTitles' => 
                array (
                  'true' => '请求成功',
                  'false' => '请求失败',
                ),
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '节点数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Result' => 
                  array (
                    'description' => '返回集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Namespace' => 
                        array (
                          'description' => '命名空间。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'RuleId' => 
                        array (
                          'description' => '规则ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'AppName' => 
                        array (
                          'description' => '应用名。',
                          'type' => 'string',
                          'example' => 'finance',
                        ),
                        'Resource' => 
                        array (
                          'description' => '接口资源名',
                          'type' => 'string',
                          'example' => '/a',
                        ),
                        'ResourceType' => 
                        array (
                          'type' => 'integer',
                          'format' => 'int32',
                        ),
                        'ControlBehavior' => 
                        array (
                          'description' => '流控效果。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'enumValueTitles' => 
                          array (
                            0 => '快速失败',
                            2 => '排队等待',
                          ),
                          'example' => '0',
                        ),
                        'MaxQueueingTimeMs' => 
                        array (
                          'description' => '流控效果为排队等待时对应的超时时间，单位毫秒。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '500',
                        ),
                        'Threshold' => 
                        array (
                          'description' => '流控规则阈值。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '10',
                        ),
                        'Enable' => 
                        array (
                          'description' => '规则启用状态。',
                          'type' => 'boolean',
                          'enumValueTitles' => 
                          array (
                            'true' => '启用',
                            'false' => '关闭',
                          ),
                          'example' => 'true',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => 'hkhon1po62@5f1b08becb*****',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'FallbackObject' => 
                        array (
                          'description' => '流控行为。',
                          'type' => 'string',
                          'example' => '"{\\"appName\\":\\"spring-cloud-a\\",\\"fallbackBehavior\\":{\\"webFallbackMode\\":0,\\"webRespContentType\\":0,\\"webRespMessage\\":\\"Blocked\\",\\"webRespStatusCode\\":429},\\"id\\":977,\\"name\\":\\"Fallback\\",\\"namespace\\":\\"default\\",\\"resourceClassification\\":1}"',
                        ),
                        'MetricType' => 
                        array (
                          'description' => '统计维度，1表示通过请求数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'TrafficTags' => 
                        array (
                          'description' => '预留字段。',
                          'type' => 'object',
                          'example' => '{\\"origin\\":\\"default\\"}',
                        ),
                      ),
                    ),
                  ),
                  'PageNumber' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '分页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalSize' => 
                  array (
                    'description' => '总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '11',
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Result\\": [\\n      {\\n        \\"Namespace\\": \\"default\\",\\n        \\"RuleId\\": 2,\\n        \\"AppName\\": \\"finance\\",\\n        \\"Resource\\": \\"/a\\",\\n        \\"ResourceType\\": 0,\\n        \\"ControlBehavior\\": 0,\\n        \\"MaxQueueingTimeMs\\": 500,\\n        \\"Threshold\\": 10,\\n        \\"Enable\\": true,\\n        \\"AppId\\": \\"hkhon1po62@5f1b08becb*****\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"FallbackObject\\": \\"\\\\\\"{\\\\\\\\\\\\\\"appName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"spring-cloud-a\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"fallbackBehavior\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"webFallbackMode\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"webRespContentType\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"webRespMessage\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Blocked\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"webRespStatusCode\\\\\\\\\\\\\\":429},\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\":977,\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Fallback\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"namespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"resourceClassification\\\\\\\\\\\\\\":1}\\\\\\"\\",\\n        \\"MetricType\\": 1,\\n        \\"TrafficTags\\": {\\n          \\"test\\": \\"test\\",\\n          \\"test2\\": 1\\n        }\\n      }\\n    ],\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalSize\\": 11\\n  },\\n  \\"HttpStatusCode\\": 200\\n}","type":"json"}]',
      'title' => '获取流控规则列表',
    ),
    'CreateFlowRule' => 
    array (
      'summary' => '创建流控规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '163217',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmse6JRV3O',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        2 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控规则阈值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则的启用状态。',
            'type' => 'boolean',
            'required' => true,
            'enumValueTitles' => 
            array (
              'true' => '启用',
              'false' => '禁用',
            ),
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'Resource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '接口资源名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '/b',
          ),
        ),
        5 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ib09eblv6p@c3df23522******',
          ),
        ),
        6 => 
        array (
          'name' => 'ControlBehavior',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控效果。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
              0 => '快速失败',
              2 => '排队等待',
            ),
            'example' => '0',
            'default' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'MaxQueueingTimeMs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '超时时间，流控效果为排队等待时需要设置，单位毫秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        8 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        9 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'enum' => 
            array (
              0 => '0',
              1 => '1',
              2 => '2',
              3 => '4',
              4 => '3',
            ),
          ),
        ),
        10 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '69AD2AA7-DB47-449B-941B-B14409DF****',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Namespace' => 
                  array (
                    'description' => '命名空间。',
                    'type' => 'string',
                    'example' => 'default',
                  ),
                  'Id' => 
                  array (
                    'description' => 'ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12',
                  ),
                  'AppName' => 
                  array (
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'spring-cloud-a',
                  ),
                  'Resource' => 
                  array (
                    'description' => '接口资源名。',
                    'type' => 'string',
                    'example' => 'app',
                  ),
                  'ControlBehavior' => 
                  array (
                    'description' => '流控效果。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'enumValueTitles' => 
                    array (
                      0 => '快速失败',
                      2 => '排队等待',
                    ),
                    'example' => '0',
                  ),
                  'MaxQueueingTimeMs' => 
                  array (
                    'description' => '流控效果为排队等待时对应的超时时间，单位毫秒。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '500',
                  ),
                  'Threshold' => 
                  array (
                    'description' => '流控规则阈值。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '200',
                  ),
                  'Enable' => 
                  array (
                    'description' => '规则的启用状态。',
                    'type' => 'boolean',
                    'enumValueTitles' => 
                    array (
                      'true' => '开启',
                      'false' => '关闭',
                    ),
                    'example' => 'true',
                  ),
                  'AppId' => 
                  array (
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'hkhon1po62@54e1f42f3******',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '地域。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求结果。',
                'type' => 'boolean',
                'enumValueTitles' => 
                array (
                  'true' => '请求成功',
                  'false' => '请求失败',
                ),
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"69AD2AA7-DB47-449B-941B-B14409DF****\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Data\\": {\\n    \\"Namespace\\": \\"default\\",\\n    \\"Id\\": 12,\\n    \\"AppName\\": \\"spring-cloud-a\\",\\n    \\"Resource\\": \\"app\\",\\n    \\"ControlBehavior\\": 0,\\n    \\"MaxQueueingTimeMs\\": 500,\\n    \\"Threshold\\": 200,\\n    \\"Enable\\": true,\\n    \\"AppId\\": \\"hkhon1po62@54e1f42f3******\\",\\n    \\"RegionId\\": \\"cn-hangzhou\\"\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '创建流控规则',
    ),
    'CreateCircuitBreakerRule' => 
    array (
      'summary' => '创建熔断规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '167810',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmse6JRV3O',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的微服务命名空间。',
            'description' => '应用所属的微服务命名空间。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称。',
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        2 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '熔断比例阈值：触发熔断的比例阈值，取值范围为0 - 1，代表0% - 100%。',
            'description' => '熔断比例阈值：触发熔断的比例阈值，取值范围为0 - 1，代表0% - 100%。',
            'type' => 'number',
            'format' => 'float',
            'required' => true,
            'docRequired' => true,
            'example' => '0.8',
          ),
        ),
        3 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '规则的启用状态。',
            'description' => '规则的启用状态。',
            'type' => 'boolean',
            'required' => true,
            'enumValueTitles' => 
            array (
              'true' => '启用',
              'false' => '关闭',
            ),
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'Resource',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
            'description' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '/a',
          ),
        ),
        5 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用ID。',
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hkhon1po62@c3df23522bXXXXX',
          ),
        ),
        6 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '集群所在地域。',
            'description' => '集群所在地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        7 => 
        array (
          'name' => 'Strategy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '阈值类型：选择以慢调用比例或异常比例作为阈值。',
            'description' => '阈值类型：选择以慢调用比例或异常比例作为阈值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'enumValueTitles' => 
            array (
              0 => '慢调用比例',
              1 => '异常比例',
            ),
            'example' => '0',
          ),
        ),
        8 => 
        array (
          'name' => 'RetryTimeoutMs',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '熔断时长（单位毫秒）：即熔断触发后持续的时间。资源进入熔断状态后，在配置的熔断时长内，请求都会快速失败。取值需要为1000的整数倍，默认值为10000，即10秒。',
            'description' => '熔断时长（单位毫秒）：即熔断触发后持续的时间。资源进入熔断状态后，在配置的熔断时长内，请求都会快速失败。取值需要为1000的整数倍，默认值为10000，即10秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10000',
          ),
        ),
        9 => 
        array (
          'name' => 'StatIntervalMs',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '统计窗口时长（单位毫秒）：统计的时间窗口长度，取值范围为1秒~120分钟。默认值为20000，即20秒。',
            'description' => '统计窗口时长（单位毫秒）：统计的时间窗口长度，取值范围为1秒~120分钟。默认值为20000，即20秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20000',
          ),
        ),
        10 => 
        array (
          'name' => 'MaxAllowedRtMs',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '慢调用RT（单位毫秒）：超过该时长则判定为慢请求，阈值类型为慢调用比例时必填。',
            'description' => '慢调用RT（单位毫秒）：超过该时长则判定为慢请求，阈值类型为慢调用比例时必填。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '200',
          ),
        ),
        11 => 
        array (
          'name' => 'MinRequestAmount',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '触发熔断的最小请求数目，若当前统计窗口请求数小于此值，即使达到熔断条件规则也不会触发。默认值为10。',
            'description' => '触发熔断的最小请求数目，若当前统计窗口请求数小于此值，即使达到熔断条件规则也不会触发。默认值为10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        12 => 
        array (
          'name' => 'HalfOpenBaseAmountPerStep',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '熔断恢复每步最小通过数目，默认值为1。',
            'description' => '熔断恢复每步最小通过数目，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5',
          ),
        ),
        13 => 
        array (
          'name' => 'HalfOpenRecoveryStepNum',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '熔断恢复阶段数，默认值为1。',
            'description' => '熔断恢复阶段数，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        14 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'enumValueTitles' => 
            array (
              0 => '自定义接口',
              1 => 'WEB',
              2 => 'RPC',
              3 => 'ROUTE',
              4 => 'SQL',
            ),
            'example' => '0',
            'enum' => 
            array (
              0 => '0',
              1 => '1',
              2 => '2',
              3 => '4',
              4 => '3',
            ),
          ),
        ),
        15 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'title' => '响应信息。',
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EE5C32A1-BC0E-4B79-817C-103E4EDF****',
              ),
              'Code' => 
              array (
                'title' => '响应码。',
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'title' => '规则信息。',
                'description' => '规则信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Namespace' => 
                  array (
                    'title' => '应用所属的微服务命空间。',
                    'description' => '应用所属的微服务命空间。',
                    'type' => 'string',
                    'example' => 'default',
                  ),
                  'Id' => 
                  array (
                    'title' => '规则ID。',
                    'description' => '规则ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'AppName' => 
                  array (
                    'title' => '应用名称。',
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'spring-cloud-a',
                  ),
                  'Resource' => 
                  array (
                    'title' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
                    'description' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
                    'type' => 'string',
                    'example' => '/a',
                  ),
                  'StatIntervalMs' => 
                  array (
                    'title' => '统计窗口时长（单位毫秒）：统计的时间窗口长度，取值范围为1秒~120分钟。',
                    'description' => '统计窗口时长（单位毫秒）：统计的时间窗口长度，取值范围为1秒~120分钟。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20000',
                  ),
                  'Threshold' => 
                  array (
                    'title' => '熔断比例阈值：触发熔断的比例阈值，取值范围为0 - 1，代表0% - 100%。',
                    'description' => '熔断比例阈值：触发熔断的比例阈值，取值范围为0 - 1，代表0% - 100%。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '0.8',
                  ),
                  'Enable' => 
                  array (
                    'title' => '规则的启用状态。',
                    'description' => '规则的启用状态。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Strategy' => 
                  array (
                    'title' => '阈值类型：选择以慢调用比例或异常比例作为阈值。',
                    'description' => '阈值类型：选择以慢调用比例或异常比例作为阈值。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'enumValueTitles' => 
                    array (
                      0 => '慢调用比例',
                      1 => '异常比例',
                    ),
                    'example' => '0',
                  ),
                  'RetryTimeoutMs' => 
                  array (
                    'title' => '熔断时长（单位毫秒）：即熔断触发后持续的时间。资源进入熔断状态后，在配置的熔断时长内，请求都会快速失败。',
                    'description' => '熔断时长（单位毫秒）：即熔断触发后持续的时间。资源进入熔断状态后，在配置的熔断时长内，请求都会快速失败。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10000',
                  ),
                  'AppId' => 
                  array (
                    'title' => '应用ID。',
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'hkhon1po62@c3df23522bXXXXX',
                  ),
                  'RegionId' => 
                  array (
                    'title' => '集群所在地域。',
                    'description' => '集群所在地域。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'MaxAllowedRtMs' => 
                  array (
                    'title' => '慢调用RT（单位毫秒）：超过该时长则判定为慢请求，阈值类型为慢调用比例时必填。',
                    'description' => '慢调用RT（单位毫秒）：阈值类型为慢调用比例时，超过该时长则判定为慢请求。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'MinRequestAmount' => 
                  array (
                    'title' => '触发熔断的最小请求数目，若当前统计窗口请求数小于此值，即使达到熔断条件规则也不会触发。',
                    'description' => '触发熔断的最小请求数目，若当前统计窗口请求数小于此值，即使达到熔断条件规则也不会触发。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'HalfOpenBaseAmountPerStep' => 
                  array (
                    'title' => '熔断恢复每步最小通过数目。',
                    'description' => '熔断恢复每步最小通过数目。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'HalfOpenRecoveryStepNum' => 
                  array (
                    'title' => '熔断恢复阶段数。',
                    'description' => '熔断恢复阶段数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                ),
              ),
              'Success' => 
              array (
                'title' => '请求结果。',
                'description' => '请求结果。',
                'type' => 'boolean',
                'enumValueTitles' => 
                array (
                  'true' => '请求成功',
                  'false' => '请求失败',
                ),
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"EE5C32A1-BC0E-4B79-817C-103E4EDF****\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Data\\": {\\n    \\"Namespace\\": \\"default\\",\\n    \\"Id\\": 1,\\n    \\"AppName\\": \\"spring-cloud-a\\",\\n    \\"Resource\\": \\"/a\\",\\n    \\"StatIntervalMs\\": 20000,\\n    \\"Threshold\\": 0.8,\\n    \\"Enable\\": true,\\n    \\"Strategy\\": 0,\\n    \\"RetryTimeoutMs\\": 10000,\\n    \\"AppId\\": \\"hkhon1po62@c3df23522bXXXXX\\",\\n    \\"RegionId\\": \\"cn-hangzhou\\",\\n    \\"MaxAllowedRtMs\\": 200,\\n    \\"MinRequestAmount\\": 10,\\n    \\"HalfOpenBaseAmountPerStep\\": 5,\\n    \\"HalfOpenRecoveryStepNum\\": 1\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '创建熔断规则',
    ),
    'ListCircuitBreakerRules' => 
    array (
      'summary' => '获取熔断规则列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的微服务命名空间。',
            'description' => '应用所属的微服务命名空间。',
            'type' => 'string',
            'required' => true,
            'example' => 'default',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称。',
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceSearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查找包含接口关键字的防护规则。',
            'description' => '查找包含接口关键字的防护规则。',
            'type' => 'string',
            'required' => false,
            'example' => 'a',
          ),
        ),
        3 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用ID。',
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hkhon1po62@c3df23522bXXXXX',
          ),
        ),
        4 => 
        array (
          'name' => 'Resource',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查找指定接口的防护规则。',
            'description' => '查找指定接口的防护规则。',
            'type' => 'string',
            'required' => false,
            'example' => '/a',
          ),
        ),
        5 => 
        array (
          'name' => 'PageIndex',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '起始页。',
            'description' => '起始页。默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '页大小。',
            'description' => '页大小。默认值为6。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh-CN（默认值）：中文，en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'title' => '响应码。',
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'title' => '响应信息。',
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E9FDCFE-0738-493B-B801-82BDFBCB****',
              ),
              'Success' => 
              array (
                'title' => '请求结果。',
                'description' => '请求结果。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'title' => '规则信息。',
                'description' => '规则信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Result' => 
                  array (
                    'title' => '返回结果。',
                    'description' => '返回结果。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Namespace' => 
                        array (
                          'title' => '应用所属的微服务命空间。',
                          'description' => '应用所属的微服务命空间。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'RuleId' => 
                        array (
                          'title' => '规则ID。',
                          'description' => '规则ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'AppName' => 
                        array (
                          'title' => '应用名称。',
                          'description' => '应用名称。',
                          'type' => 'string',
                          'example' => 'spring-cloud-a',
                        ),
                        'Resource' => 
                        array (
                          'title' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
                          'description' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
                          'type' => 'string',
                          'example' => '/a',
                        ),
                        'ResourceType' => 
                        array (
                          'type' => 'integer',
                          'format' => 'int32',
                        ),
                        'Strategy' => 
                        array (
                          'title' => '阈值类型：选择以慢调用比例或异常比例作为阈值。',
                          'description' => '阈值类型：选择以慢调用比例或异常比例作为阈值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'enumValueTitles' => 
                          array (
                            0 => '慢调用比例',
                            1 => '异常比例',
                          ),
                          'example' => '0',
                        ),
                        'Threshold' => 
                        array (
                          'title' => '熔断比例阈值：触发熔断的比例阈值，取值范围为0 - 1，代表0% - 100%。',
                          'description' => '熔断比例阈值：触发熔断的比例阈值，取值范围为0 - 1，代表0% - 100%。',
                          'type' => 'number',
                          'format' => 'float',
                          'example' => '0.8',
                        ),
                        'Enable' => 
                        array (
                          'title' => '规则的启用状态。',
                          'description' => '规则的启用状态。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'RetryTimeoutMs' => 
                        array (
                          'title' => '熔断时长（单位毫秒）：即熔断触发后持续的时间。资源进入熔断状态后，在配置的熔断时长内，请求都会快速失败。',
                          'description' => '熔断时长（单位毫秒）：即熔断触发后持续的时间。资源进入熔断状态后，在配置的熔断时长内，请求都会快速失败。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10000',
                        ),
                        'StatIntervalMs' => 
                        array (
                          'title' => '统计窗口时长（单位毫秒）：统计的时间窗口长度，取值范围为1秒~120分钟。',
                          'description' => '统计窗口时长（单位毫秒）：统计的时间窗口长度，取值范围为1秒~120分钟。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20000',
                        ),
                        'AppId' => 
                        array (
                          'title' => '应用ID。',
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => 'hkhon1po62@c3df23522bXXXXX',
                        ),
                        'RegionId' => 
                        array (
                          'title' => '集群所在地域。',
                          'description' => '集群所在地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'FallbackObject' => 
                        array (
                          'title' => '规则绑定的行为。',
                          'description' => '规则绑定的行为。',
                          'type' => 'string',
                          'example' => '"{\\"appName\\":\\"spring-cloud-a\\",\\"fallbackBehavior\\":{\\"webFallbackMode\\":0,\\"webRespContentType\\":0,\\"webRespMessage\\":\\"Blocked\\",\\"webRespStatusCode\\":429},\\"id\\":977,\\"name\\":\\"Fallback\\",\\"namespace\\":\\"default\\",\\"resourceClassification\\":1}"',
                        ),
                        'MaxAllowedRtMs' => 
                        array (
                          'title' => '慢调用RT（单位毫秒）：阈值类型为慢调用比例时，超过该时长则判定为慢请求。',
                          'description' => '慢调用RT（单位毫秒）：阈值类型为慢调用比例时，超过该时长则判定为慢请求。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '200',
                        ),
                        'MinRequestAmount' => 
                        array (
                          'title' => '触发熔断的最小请求数目，若当前统计窗口请求数小于此值，即使达到熔断条件规则也不会触发。',
                          'description' => '触发熔断的最小请求数目，若当前统计窗口请求数小于此值，即使达到熔断条件规则也不会触发。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'HalfOpenBaseAmountPerStep' => 
                        array (
                          'title' => '熔断恢复每步最小通过数目。',
                          'description' => '熔断恢复每步最小通过数目。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5',
                        ),
                        'HalfOpenRecoveryStepNum' => 
                        array (
                          'title' => '熔断恢复阶段数。',
                          'description' => '熔断恢复阶段数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                  'PageNumber' => 
                  array (
                    'title' => '起始页。',
                    'description' => '起始页。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'title' => '页大小。',
                    'description' => '页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalSize' => 
                  array (
                    'title' => '总页数。',
                    'description' => '总页数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                ),
              ),
              'HttpStatusCode' => 
              array (
                'title' => '状态码。',
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"4E9FDCFE-0738-493B-B801-82BDFBCB****\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Result\\": [\\n      {\\n        \\"Namespace\\": \\"default\\",\\n        \\"RuleId\\": 1,\\n        \\"AppName\\": \\"spring-cloud-a\\",\\n        \\"Resource\\": \\"/a\\",\\n        \\"ResourceType\\": 0,\\n        \\"Strategy\\": 0,\\n        \\"Threshold\\": 0.8,\\n        \\"Enable\\": true,\\n        \\"RetryTimeoutMs\\": 10000,\\n        \\"StatIntervalMs\\": 20000,\\n        \\"AppId\\": \\"hkhon1po62@c3df23522bXXXXX\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"FallbackObject\\": \\"\\\\\\"{\\\\\\\\\\\\\\"appName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"spring-cloud-a\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"fallbackBehavior\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"webFallbackMode\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"webRespContentType\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"webRespMessage\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Blocked\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"webRespStatusCode\\\\\\\\\\\\\\":429},\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\":977,\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Fallback\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"namespace\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"resourceClassification\\\\\\\\\\\\\\":1}\\\\\\"\\",\\n        \\"MaxAllowedRtMs\\": 200,\\n        \\"MinRequestAmount\\": 10,\\n        \\"HalfOpenBaseAmountPerStep\\": 5,\\n        \\"HalfOpenRecoveryStepNum\\": 1\\n      }\\n    ],\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalSize\\": 3\\n  },\\n  \\"HttpStatusCode\\": 200\\n}","type":"json"}]',
      'title' => '获取熔断规则列表',
    ),
    'UpdateCircuitBreakerRule' => 
    array (
      'summary' => '更新熔断规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的微服务命空间。',
            'description' => '应用所属的微服务命空间。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'default',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称。',
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        2 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '熔断比例阈值：触发熔断的比例阈值，取值范围为0 - 1，代表0% - 100%。',
            'description' => '熔断比例阈值：触发熔断的比例阈值，取值范围为0 - 1，代表0% - 100%。',
            'type' => 'number',
            'format' => 'float',
            'required' => false,
            'docRequired' => false,
            'enumValueTitles' => 
            array (
            ),
            'example' => '0.8',
          ),
        ),
        3 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '规则的启用状态。',
            'description' => '规则的启用状态。',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'enumValueTitles' => 
            array (
              'true' => '开启',
              'false' => '关闭',
            ),
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用ID。',
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hkhon1po62@c3df23522bXXXXX',
          ),
        ),
        5 => 
        array (
          'name' => 'Strategy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '阈值类型：选择以慢调用比例或异常比例作为阈值。',
            'description' => '阈值类型：选择以慢调用比例或异常比例作为阈值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'enumValueTitles' => 
            array (
              0 => '慢调用比例',
              1 => '异常比例',
            ),
            'example' => '0',
          ),
        ),
        6 => 
        array (
          'name' => 'RetryTimeoutMs',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '熔断时长（单位毫秒）：即熔断触发后持续的时间。资源进入熔断状态后，在配置的熔断时长内，请求都会快速失败。取值需要为1000的整数倍，默认值为10000，即10秒。',
            'description' => '熔断时长（单位毫秒）：即熔断触发后持续的时间。资源进入熔断状态后，在配置的熔断时长内，请求都会快速失败。取值需要为1000的整数倍，默认值为10000，即10秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10000',
          ),
        ),
        7 => 
        array (
          'name' => 'StatIntervalMs',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '统计窗口时长（单位毫秒）：统计的时间窗口长度，取值范围为1秒~120分钟。默认值为20000，即20秒。',
            'description' => '统计窗口时长（单位毫秒）：统计的时间窗口长度，取值范围为1秒~120分钟。默认值为20000，即20秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20000',
          ),
        ),
        8 => 
        array (
          'name' => 'MaxAllowedRtMs',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '慢调用RT（单位毫秒）：阈值类型为慢调用比例时，超过该时长则判定为慢请求。',
            'description' => '慢调用RT（单位毫秒）：超过该时长则判定为慢请求，阈值类型为慢调用比例时必填。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '200',
          ),
        ),
        9 => 
        array (
          'name' => 'MinRequestAmount',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '触发熔断的最小请求数目，若当前统计窗口请求数小于此值，即使达到熔断条件规则也不会触发。默认值为10。',
            'description' => '触发熔断的最小请求数目，若当前统计窗口请求数小于此值，即使达到熔断条件规则也不会触发。默认值为10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        10 => 
        array (
          'name' => 'HalfOpenBaseAmountPerStep',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '熔断恢复每步最小通过数目，默认值为1。',
            'description' => '熔断恢复每步最小通过数目，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5',
          ),
        ),
        11 => 
        array (
          'name' => 'HalfOpenRecoveryStepNum',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '熔断恢复阶段数，默认值为1。',
            'description' => '熔断恢复阶段数，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        12 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '规则ID。',
            'description' => '规则ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        13 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh-CN（默认值）：中文，en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EE5C32A1-BC0E-4B79-817C-103E4EDF****',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '规则信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Namespace' => 
                  array (
                    'title' => '应用所属的微服务命名空间。',
                    'description' => '应用所属的微服务命名空间。',
                    'type' => 'string',
                    'example' => 'default',
                  ),
                  'Id' => 
                  array (
                    'title' => '规则ID。',
                    'description' => '规则ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'AppName' => 
                  array (
                    'title' => '应用名称。',
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'spring-cloud-a',
                  ),
                  'Resource' => 
                  array (
                    'title' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
                    'description' => '接口名称：适用该规则的应用资源。需要与控制台接口详情处接口名称一致。',
                    'type' => 'string',
                    'example' => '/a',
                  ),
                  'Strategy' => 
                  array (
                    'title' => '阈值类型：选择以慢调用比例或异常比例作为阈值。',
                    'description' => '阈值类型：选择以慢调用比例或异常比例作为阈值。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'enumValueTitles' => 
                    array (
                      0 => '慢调用比例',
                      1 => '异常比例',
                    ),
                    'example' => '0',
                  ),
                  'Threshold' => 
                  array (
                    'title' => '熔断比例阈值：触发熔断的比例阈值，取值范围为0 - 1，代表0% - 100%。',
                    'description' => '熔断比例阈值：触发熔断的比例阈值，取值范围为0 - 1，代表0% - 100%。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '0.8',
                  ),
                  'Enable' => 
                  array (
                    'title' => '规则的启用状态。',
                    'description' => '规则的启用状态。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'RetryTimeoutMs' => 
                  array (
                    'title' => '熔断时长（单位毫秒）：即熔断触发后持续的时间。资源进入熔断状态后，在配置的熔断时长内，请求都会快速失败。',
                    'description' => '熔断时长（单位毫秒）：即熔断触发后持续的时间。资源进入熔断状态后，在配置的熔断时长内，请求都会快速失败。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10000',
                  ),
                  'StatIntervalMs' => 
                  array (
                    'title' => '统计窗口时长（单位毫秒）：统计的时间窗口长度，取值范围为1秒~120分钟。',
                    'description' => '统计窗口时长（单位毫秒）：统计的时间窗口长度，取值范围为1秒~120分钟。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20000',
                  ),
                  'AppId' => 
                  array (
                    'title' => '应用ID。',
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'hkhon1po62@c3df23522bXXXXX',
                  ),
                  'MaxAllowedRtMs' => 
                  array (
                    'title' => '慢调用RT（单位毫秒）：超过该时长则判定为慢请求，阈值类型为慢调用比例时必填。',
                    'description' => '慢调用RT（单位毫秒）：阈值类型为慢调用比例时，超过该时长则判定为慢请求。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'MinRequestAmount' => 
                  array (
                    'title' => '触发熔断的最小请求数目，若当前统计窗口请求数小于此值，即使达到熔断条件规则也不会触发。',
                    'description' => '触发熔断的最小请求数目，若当前统计窗口请求数小于此值，即使达到熔断条件规则也不会触发。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'HalfOpenBaseAmountPerStep' => 
                  array (
                    'title' => '熔断恢复每步最小通过数目。',
                    'description' => '熔断恢复每步最小通过数目。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'HalfOpenRecoveryStepNum' => 
                  array (
                    'title' => '熔断恢复阶段数。',
                    'description' => '熔断恢复阶段数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                ),
              ),
              'Success' => 
              array (
                'title' => '请求结果。',
                'description' => '请求结果。',
                'type' => 'boolean',
                'enumValueTitles' => 
                array (
                  'true' => '请求成功',
                  'false' => '请求失败',
                ),
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"EE5C32A1-BC0E-4B79-817C-103E4EDF****\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Data\\": {\\n    \\"Namespace\\": \\"default\\",\\n    \\"Id\\": 1,\\n    \\"AppName\\": \\"spring-cloud-a\\",\\n    \\"Resource\\": \\"/a\\",\\n    \\"Strategy\\": 0,\\n    \\"Threshold\\": 0.8,\\n    \\"Enable\\": true,\\n    \\"RetryTimeoutMs\\": 10000,\\n    \\"StatIntervalMs\\": 20000,\\n    \\"AppId\\": \\"hkhon1po62@c3df23522bXXXXX\\",\\n    \\"MaxAllowedRtMs\\": 200,\\n    \\"MinRequestAmount\\": 10,\\n    \\"HalfOpenBaseAmountPerStep\\": 5,\\n    \\"HalfOpenRecoveryStepNum\\": 1\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新熔断规则',
    ),
    'ListAuthPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示条数。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '来源。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'edasmsc',
          ),
        ),
        4 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型。取值：

- **SPRING_CLOUD**。
- **DUBBO**。
- **istio**。',
            'type' => 'string',
            'required' => false,
            'example' => 'SPRING_CLOUD',
          ),
        ),
        5 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权规则名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'auto-rule-**',
          ),
        ),
        6 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'jgy4cadmqo@***',
          ),
        ),
        7 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MSE命名空间名。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
        8 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh-CN（默认值）：中文，en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '05A5A150-4A5F-5A8C-97D6-710776CC8408',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'Result' => 
                  array (
                    'description' => '返回数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '状态。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'AuthRule' => 
                        array (
                          'description' => '服务鉴权规则内容列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '服务鉴权规则内容。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Black' => 
                              array (
                                'description' => '是否黑名单。',
                                'type' => 'boolean',
                                'example' => 'false',
                              ),
                              'Path' => 
                              array (
                                'description' => '路径。',
                                'type' => 'string',
                                'example' => '/a',
                              ),
                              'Method' => 
                              array (
                                'description' => '请求方法。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Version' => 
                                  array (
                                    'description' => '方法版本号。',
                                    'type' => 'string',
                                    'example' => '0.0.1',
                                  ),
                                  'ParameterTypes' => 
                                  array (
                                    'description' => '请求参数类型列表。',
                                    'type' => 'array',
                                    'items' => 
                                    array (
                                      'description' => '请求参数类型。',
                                      'type' => 'string',
                                      'example' => '[\\"java.lang.String\\",\\"java.lang.Object\\",\\"java.lang.String\\"]',
                                    ),
                                  ),
                                  'ServiceName' => 
                                  array (
                                    'description' => '服务名称。',
                                    'type' => 'string',
                                    'example' => 'spring-cloud-a',
                                  ),
                                  'Name' => 
                                  array (
                                    'description' => '方法名。',
                                    'type' => 'string',
                                    'example' => 'hello',
                                  ),
                                  'Group' => 
                                  array (
                                    'description' => '分组。',
                                    'type' => 'string',
                                    'example' => 'default',
                                  ),
                                  'ReturnType' => 
                                  array (
                                    'description' => '返回值类型。',
                                    'type' => 'string',
                                    'example' => 'Boolean',
                                  ),
                                ),
                              ),
                              'AppIds' => 
                              array (
                                'description' => '应用集合。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '应用ID。',
                                  'type' => 'string',
                                  'example' => '["dez4qt7weh@***"]',
                                ),
                              ),
                              'AuthType' => 
                              array (
                                'description' => '规则类型。

- 0， 按照应用维度。
- 1，按照命名空间维度。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '0',
                              ),
                              'K8sNamespaces' => 
                              array (
                                'description' => '命名空间列表。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '命名空间。',
                                  'type' => 'string',
                                  'example' => 'acced****',
                                ),
                              ),
                            ),
                          ),
                        ),
                        'NamespaceId' => 
                        array (
                          'description' => '命名空间ID。',
                          'type' => 'string',
                          'example' => 'ced54a95-4e33-4bda-be7e-37e95868***',
                        ),
                        'Protocol' => 
                        array (
                          'description' => '协议类型。取值：

- **SPRING_CLOUD**。
- **DUBBO**。
- **istio**。',
                          'type' => 'string',
                          'example' => 'SPRING_CLOUD',
                        ),
                        'AccountId' => 
                        array (
                          'description' => '资源拥有者的阿里云账号ID。',
                          'type' => 'string',
                          'example' => '19039813784***',
                        ),
                        'Source' => 
                        array (
                          'description' => '应用来源。',
                          'type' => 'string',
                          'example' => 'edasmsc',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'AppName' => 
                        array (
                          'description' => '应用名称。',
                          'type' => 'string',
                          'example' => 'spring-cloud-a',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => 'hkhon1po62@5f1b08becb*****',
                        ),
                        'Name' => 
                        array (
                          'description' => '鉴权规则名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'Id' => 
                        array (
                          'description' => 'ID。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '204',
                        ),
                        'Enable' => 
                        array (
                          'description' => '开启或关闭。

- `true`：开启。
- `false`：关闭。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'AuthType' => 
                        array (
                          'description' => '规则类型。

- 0， 按照应用维度。
- 1，按照命名空间维度。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'K8sNamespace' => 
                        array (
                          'description' => '命名空间。',
                          'type' => 'string',
                          'example' => 'c19c6c500e1ff4d7abc7bed9b8236***',
                        ),
                      ),
                    ),
                  ),
                  'TotalSize' => 
                  array (
                    'description' => '总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '11',
                  ),
                  'PageNumber' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                ),
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。                                
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'True',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"05A5A150-4A5F-5A8C-97D6-710776CC8408\\",\\n  \\"Data\\": {\\n    \\"Result\\": [\\n      {\\n        \\"Status\\": 1,\\n        \\"AuthRule\\": [\\n          {\\n            \\"Black\\": false,\\n            \\"Path\\": \\"/a\\",\\n            \\"Method\\": {\\n              \\"Version\\": \\"0.0.1\\",\\n              \\"ParameterTypes\\": [\\n                \\"[\\\\\\\\\\\\\\"java.lang.String\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"java.lang.Object\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"java.lang.String\\\\\\\\\\\\\\"]\\"\\n              ],\\n              \\"ServiceName\\": \\"spring-cloud-a\\",\\n              \\"Name\\": \\"hello\\",\\n              \\"Group\\": \\"default\\",\\n              \\"ReturnType\\": \\"Boolean\\"\\n            },\\n            \\"AppIds\\": [\\n              \\"[\\\\\\"dez4qt7weh@***\\\\\\"]\\"\\n            ],\\n            \\"AuthType\\": 0,\\n            \\"K8sNamespaces\\": [\\n              \\"acced****\\"\\n            ]\\n          }\\n        ],\\n        \\"NamespaceId\\": \\"ced54a95-4e33-4bda-be7e-37e95868***\\",\\n        \\"Protocol\\": \\"SPRING_CLOUD\\",\\n        \\"AccountId\\": \\"19039813784***\\",\\n        \\"Source\\": \\"edasmsc\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"AppName\\": \\"spring-cloud-a\\",\\n        \\"AppId\\": \\"hkhon1po62@5f1b08becb*****\\",\\n        \\"Name\\": \\"test\\",\\n        \\"Id\\": 204,\\n        \\"Enable\\": false,\\n        \\"AuthType\\": 0,\\n        \\"K8sNamespace\\": \\"c19c6c500e1ff4d7abc7bed9b8236***\\"\\n      }\\n    ],\\n    \\"TotalSize\\": 11,\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10\\n  },\\n  \\"Code\\": 200,\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '获取服务鉴权规则列表',
      'summary' => '通过ListAuthPolicy接口查询服务鉴权规则列表。',
    ),
    'UpdateAuthPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'demo-test',
          ),
        ),
        1 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用接入来源。',
            'type' => 'string',
            'required' => false,
            'example' => 'edasmsc',
          ),
        ),
        2 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '432',
          ),
        ),
        3 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启。',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'abcde@12345',
          ),
        ),
        6 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型。取值：

- **SPRING_CLOUD**。
- **DUBBO**。
- **istio**。',
            'type' => 'string',
            'required' => false,
            'example' => 'SPRING_CLOUD',
          ),
        ),
        7 => 
        array (
          'name' => 'AuthRule',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务鉴权规则内容。',
            'type' => 'string',
            'required' => false,
            'example' => '[{\\"all\\":true,\\"appIds\\":[\\"f6xqzbao96@4adfaf3c92c947a\\"],\\"black\\":false}]',
          ),
        ),
        8 => 
        array (
          'name' => 'K8sNamespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'k8s集群的命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'c19c6c500e1ff4d7abc7bed9b8236***',
          ),
        ),
        9 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh-CN（默认值）：中文，en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '83E3909D-D26F-5D97-B73B-407A26***',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'string',
                'example' => '{}',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '500',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：- true：请求成功。- false：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"83E3909D-D26F-5D97-B73B-407A26***\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Data\\": \\"{}\\",\\n  \\"Code\\": 500,\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新服务鉴权规则',
      'summary' => '通过UpdateAuthPolicy接口更新服务鉴权规则。',
    ),
    'AddAuthPolicy' => 
    array (
      'summary' => '通过AddAuthPolicy接口创建服务鉴权规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '来源。可选值为：edasmsc。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'edasmsc',
          ),
        ),
        2 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权规则的启用状态。取值：

- `true`：启用。
- `false`：禁用。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'e9clba2xlc@***',
          ),
        ),
        5 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型。取值：

- **SPRING_CLOUD**。
- **DUBBO**。
- **istio**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'SPRING_CLOUD',
          ),
        ),
        6 => 
        array (
          'name' => 'AuthRule',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务鉴权规则内容。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[{"all":true,"black":false,"appIds":["dez4qt7weh@***"]}]',
          ),
        ),
        7 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用所属的MSE命名空间。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
        8 => 
        array (
          'name' => 'AuthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则类型。

- 0， 按照应用维度。
- 1，按照命名空间维度。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        9 => 
        array (
          'name' => 'K8sNamespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'k8s集群的命名空间ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'c19c6c500e1ff4d7abc7***',
          ),
        ),
        10 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh-CN（默认值）：中文，en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'dc63-465d-8ef5-20dc18af****',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'string',
                'example' => '请求处理成功。',
              ),
              'Code' => 
              array (
                'description' => 'Code仅仅用来和Success同步',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"dc63-465d-8ef5-20dc18af****\\",\\n  \\"Message\\": \\"OK\\",\\n  \\"Data\\": \\"请求处理成功。\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '创建服务鉴权规则',
    ),
    'RemoveAuthPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '259',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh-CN（默认值）：中文，en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9515ACA4-E94D-440D-989E-C379FCED****',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'string',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '500',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'True',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"9515ACA4-E94D-440D-989E-C379FCED****\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Data\\": \\"true\\",\\n  \\"Code\\": 500,\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除服务鉴权规则',
      'summary' => '通过RemoveAuthPolicy接口删除服务鉴权规则。',
    ),
    'GetServiceMethodPage' => 
    array (
      'summary' => '获取服务接口列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务类型。',
            'description' => '服务类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'springCloud',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的MSE命名空间。',
            'description' => '应用所属的MSE命名空间。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        3 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称',
            'description' => '应用名称',
            'type' => 'string',
            'required' => false,
            'example' => 'example-app',
            'maxLength' => 64,
          ),
        ),
        4 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用id。',
            'description' => '应用id。',
            'type' => 'string',
            'required' => false,
            'example' => 'hkhonxxxxx@f3f75ed8ffxxxxx',
          ),
        ),
        5 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务名。',
            'description' => '服务名。',
            'type' => 'string',
            'required' => false,
            'example' => 'sc-A',
          ),
        ),
        6 => 
        array (
          'name' => 'ServiceVersion',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务版本。',
            'description' => '服务版本。',
            'type' => 'string',
            'required' => false,
            'example' => '1.0.0',
          ),
        ),
        7 => 
        array (
          'name' => 'ServiceGroup',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务分组。',
            'description' => '服务分组。',
            'type' => 'string',
            'required' => false,
            'example' => 'ALIYUN',
          ),
        ),
        8 => 
        array (
          'name' => 'Ip',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务提供者ip。',
            'description' => '服务提供者ip。',
            'type' => 'string',
            'required' => false,
            'example' => '223.5.5.5',
          ),
        ),
        9 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '获取第几页的数据。',
            'description' => '获取第几页的数据。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65536',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        10 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每一页多少条。',
            'description' => '每一页多少条。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65536',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        11 => 
        array (
          'name' => 'MethodController',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '接口所在的Controller类全称。',
            'description' => '接口所在的Controller类全称。',
            'type' => 'string',
            'required' => false,
            'example' => 'com.alibabacloud.mse.demo.a.AController',
          ),
        ),
        12 => 
        array (
          'name' => 'Path',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '接口对应的请求路径。',
            'description' => '接口对应的请求路径。',
            'type' => 'string',
            'required' => false,
            'example' => '/a',
          ),
        ),
        13 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '方法名。',
            'description' => '方法名。',
            'type' => 'string',
            'required' => false,
            'example' => 'aMethod',
          ),
        ),
        14 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'title' => '请求是否成功。',
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'Message' => 
              array (
                'title' => '请求信息。',
                'description' => '请求信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'title' => '请求id。',
                'description' => '请求id。',
                'type' => 'string',
                'example' => '2DD5A212-C77B-3XXF-9XXE-XXX9XXXE5XX1',
              ),
              'Data' => 
              array (
                'title' => '请求响应数据。',
                'description' => '请求响应数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Result' => 
                  array (
                    'title' => '方法描述列表。',
                    'description' => '方法描述列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'title' => '每个方法描述。',
                      'description' => '每个方法描述。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'NameDetail' => 
                        array (
                          'title' => '接口描述信息。',
                          'description' => '接口描述信息。',
                          'type' => 'string',
                          'example' => '示例接口描述信息。',
                        ),
                        'ParameterDetails' => 
                        array (
                          'title' => '接口参数类型。',
                          'description' => '接口参数类型。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'title' => '每个参数的类型。',
                            'description' => '每个参数的类型。',
                            'type' => 'string',
                            'example' => 'java.lang.String',
                          ),
                        ),
                        'ParameterDefinitions' => 
                        array (
                          'title' => '参数的详细定义。',
                          'description' => '参数的详细定义。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'title' => '参数的详细定义。',
                            'description' => '参数的详细定义。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Type' => 
                              array (
                                'title' => '参数类型。',
                                'description' => '参数类型。',
                                'type' => 'string',
                                'example' => 'java.lang.String',
                              ),
                              'Description' => 
                              array (
                                'title' => '参数描述。',
                                'description' => '参数描述。',
                                'type' => 'string',
                                'example' => '参数描述示例',
                              ),
                              'Name' => 
                              array (
                                'title' => '参数名字。',
                                'description' => '参数名字。',
                                'type' => 'string',
                                'example' => 'aParam',
                              ),
                            ),
                          ),
                        ),
                        'Paths' => 
                        array (
                          'title' => '接口对应的请求路径列表。',
                          'description' => '接口对应的请求路径列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'title' => '接口对应的请求路径。',
                            'description' => '接口对应的请求路径。',
                            'type' => 'string',
                            'example' => '/a',
                          ),
                        ),
                        'ParameterTypes' => 
                        array (
                          'title' => '参数类型。',
                          'description' => '参数类型。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'title' => '参数类型。',
                            'description' => '参数类型。',
                            'type' => 'string',
                            'example' => 'java.lang.String',
                          ),
                        ),
                        'RequestMethods' => 
                        array (
                          'title' => 'HTTP请求方法。',
                          'description' => 'HTTP请求方法。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'title' => 'HTTP请求参数。',
                            'description' => 'HTTP请求参数。',
                            'type' => 'string',
                            'example' => 'GET',
                          ),
                        ),
                        'ReturnDetails' => 
                        array (
                          'title' => '返回值类型。',
                          'description' => '返回值类型。',
                          'type' => 'string',
                          'example' => 'java.lang.String',
                        ),
                        'Name' => 
                        array (
                          'title' => '方法名。',
                          'description' => '方法名。',
                          'type' => 'string',
                          'example' => 'aMethod',
                        ),
                        'MethodController' => 
                        array (
                          'title' => '接口所在的Controller类全称。',
                          'description' => '接口所在的Controller类全称。',
                          'type' => 'string',
                          'example' => 'com.alibabacloud.mse.demo.a.AController',
                        ),
                        'ReturnType' => 
                        array (
                          'title' => '返回值类型。',
                          'description' => '返回值类型。',
                          'type' => 'string',
                          'example' => 'java.lang.String',
                        ),
                      ),
                    ),
                  ),
                  'TotalSize' => 
                  array (
                    'title' => '方法总数量。',
                    'description' => '方法总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'PageNumber' => 
                  array (
                    'title' => '第几页。',
                    'description' => '第几页。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'title' => '每页大小',
                    'description' => '每页大小',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"2DD5A212-C77B-3XXF-9XXE-XXX9XXXE5XX1\\",\\n  \\"Data\\": {\\n    \\"Result\\": [\\n      {\\n        \\"NameDetail\\": \\"示例接口描述信息。\\",\\n        \\"ParameterDetails\\": [\\n          \\"java.lang.String\\"\\n        ],\\n        \\"ParameterDefinitions\\": [\\n          {\\n            \\"Type\\": \\"java.lang.String\\",\\n            \\"Description\\": \\"参数描述示例\\",\\n            \\"Name\\": \\"aParam\\"\\n          }\\n        ],\\n        \\"Paths\\": [\\n          \\"/a\\"\\n        ],\\n        \\"ParameterTypes\\": [\\n          \\"java.lang.String\\"\\n        ],\\n        \\"RequestMethods\\": [\\n          \\"GET\\"\\n        ],\\n        \\"ReturnDetails\\": \\"java.lang.String\\",\\n        \\"Name\\": \\"aMethod\\",\\n        \\"MethodController\\": \\"com.alibabacloud.mse.demo.a.AController\\",\\n        \\"ReturnType\\": \\"java.lang.String\\"\\n      }\\n    ],\\n    \\"TotalSize\\": 100,\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10\\n  }\\n}","type":"json"}]',
      'title' => '获取服务方法列表',
    ),
    'GetServiceListPage' => 
    array (
      'summary' => '查询微服务应用的版本。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域。',
            'description' => '地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'MSE命名空间名字',
            'description' => 'MSE命名空间名字',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        2 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名字。',
            'description' => '应用名字。',
            'type' => 'string',
            'required' => false,
            'example' => 'example-app',
            'maxLength' => 64,
          ),
        ),
        3 => 
        array (
          'name' => 'ServiceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务类型。',
            'description' => '服务类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'springCloud',
          ),
        ),
        4 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用id。',
            'description' => '应用id。',
            'type' => 'string',
            'required' => false,
            'example' => 'dez4xxxxx@f3f75ed8ffxxxxx',
          ),
        ),
        5 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务名字。',
            'description' => '服务名字。',
            'type' => 'string',
            'required' => false,
            'example' => 'sc-A',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '页数。',
            'description' => '页数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页大小。',
            'description' => '每页大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        8 => 
        array (
          'name' => 'Ip',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要查询的ip地址。',
            'description' => '要查询的ip地址。',
            'type' => 'string',
            'required' => false,
            'example' => '223.5.5.5',
          ),
        ),
        9 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'title' => '请求是否成功。',
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'Message' => 
              array (
                'title' => '请求信息。',
                'description' => '请求信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'title' => '请求id。',
                'description' => '请求id。',
                'type' => 'string',
                'example' => 'A2F946FB-F2E3-5BF4-8CBE-xxxxxxxx',
              ),
              'Data' => 
              array (
                'title' => '请求响应数据。',
                'description' => '请求响应数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Result' => 
                  array (
                    'title' => '当前页面数据。',
                    'description' => '当前页面数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'title' => '每个服务的信息。',
                      'description' => '每个服务的信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AppName' => 
                        array (
                          'title' => '应用名。',
                          'description' => '应用名。',
                          'type' => 'string',
                          'example' => 'example-app',
                        ),
                        'Version' => 
                        array (
                          'title' => '服务版本。',
                          'description' => '服务版本。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'InstanceNum' => 
                        array (
                          'title' => '服务对应的节点数。',
                          'description' => '服务对应的节点数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'GmtModifyTime' => 
                        array (
                          'title' => '服务最后的更新时间。',
                          'description' => '服务最后的更新时间。',
                          'type' => 'string',
                          'example' => '123456',
                        ),
                        'AppId' => 
                        array (
                          'title' => '应用id。',
                          'description' => '应用id。',
                          'type' => 'string',
                          'example' => 'dez4xxxxx@f3f75ed8ffxxxxx',
                        ),
                        'ServiceName' => 
                        array (
                          'title' => '服务名。',
                          'description' => '服务名。',
                          'type' => 'string',
                          'example' => 'sc-A',
                        ),
                        'Group' => 
                        array (
                          'title' => '服务分组。',
                          'description' => '服务分组。',
                          'type' => 'string',
                          'example' => 'DEFAULT_GROUP',
                        ),
                      ),
                    ),
                  ),
                  'TotalSize' => 
                  array (
                    'title' => '数据总数。',
                    'description' => '数据总数。',
                    'type' => 'string',
                    'example' => '100',
                  ),
                  'PageNumber' => 
                  array (
                    'title' => '当前页码。',
                    'description' => '当前页码。',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'title' => '页面大小。',
                    'description' => '页面大小。',
                    'type' => 'string',
                    'example' => '10',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"A2F946FB-F2E3-5BF4-8CBE-xxxxxxxx\\",\\n  \\"Data\\": {\\n    \\"Result\\": [\\n      {\\n        \\"AppName\\": \\"example-app\\",\\n        \\"Version\\": \\"1\\",\\n        \\"InstanceNum\\": 1,\\n        \\"GmtModifyTime\\": \\"123456\\",\\n        \\"AppId\\": \\"dez4xxxxx@f3f75ed8ffxxxxx\\",\\n        \\"ServiceName\\": \\"sc-A\\",\\n        \\"Group\\": \\"DEFAULT_GROUP\\"\\n      }\\n    ],\\n    \\"TotalSize\\": \\"100\\",\\n    \\"PageNumber\\": \\"1\\",\\n    \\"PageSize\\": \\"10\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取服务列表',
    ),
    'GetServiceList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-zhangjiakou',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '框架类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'dubbo',
          ),
        ),
        2 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'xxx@xxx',
          ),
        ),
        3 => 
        array (
          'name' => 'ServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名。',
            'type' => 'string',
            'required' => false,
            'example' => 'com.alibaba.xxx',
          ),
        ),
        4 => 
        array (
          'name' => 'Ip',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '127.0.0.1',
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '语言类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'Http状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'xxx-xxx-xxx',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回结果。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'EdasAppName' => 
                    array (
                      'description' => '应用名。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'DubboApplicationName' => 
                    array (
                      'description' => 'Dubbo应用名。',
                      'type' => 'string',
                      'example' => 'dubbo-application',
                    ),
                    'Version' => 
                    array (
                      'description' => '版本信息。',
                      'type' => 'string',
                      'example' => '1.0.0',
                    ),
                    'SpringApplicationName' => 
                    array (
                      'description' => 'Spring应用名。',
                      'type' => 'string',
                      'example' => 'spring-application',
                    ),
                    'RegistryType' => 
                    array (
                      'description' => '注册中心类型。',
                      'type' => 'string',
                      'example' => 'nacos',
                    ),
                    'ServiceType' => 
                    array (
                      'description' => '服务类型。',
                      'type' => 'string',
                      'example' => 'dubbo',
                    ),
                    'ServiceName' => 
                    array (
                      'description' => '服务名。',
                      'type' => 'string',
                      'example' => 'com.alibaba.xxx',
                    ),
                    'Methods' => 
                    array (
                      'description' => '方法列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '方法列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Paths' => 
                          array (
                            'description' => '路径。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '服务映射地址。',
                              'type' => 'string',
                              'example' => '/path',
                            ),
                          ),
                          'ParameterTypes' => 
                          array (
                            'description' => '参数类型。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '参数类型。',
                              'type' => 'string',
                              'example' => 'int',
                            ),
                          ),
                          'RequestMethods' => 
                          array (
                            'description' => '方法。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '方法。',
                              'type' => 'string',
                              'example' => 'sayHello',
                            ),
                          ),
                          'Name' => 
                          array (
                            'description' => '方法名。',
                            'type' => 'string',
                            'example' => 'sayHello',
                          ),
                          'MethodController' => 
                          array (
                            'description' => '方法接口。',
                            'type' => 'string',
                            'example' => 'com.alibaba.SayHelloController',
                          ),
                          'ReturnType' => 
                          array (
                            'description' => '返回值类型。',
                            'type' => 'string',
                            'example' => 'int',
                          ),
                        ),
                      ),
                    ),
                    'Metadata' => 
                    array (
                      'description' => '元数据。',
                      'type' => 'object',
                      'example' => '{}',
                    ),
                    'Group' => 
                    array (
                      'description' => '分组。',
                      'type' => 'string',
                      'example' => 'dubbo',
                    ),
                  ),
                ),
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '调用成功与否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"xxx-xxx-xxx\\",\\n  \\"Data\\": [\\n    {\\n      \\"EdasAppName\\": \\"test\\",\\n      \\"DubboApplicationName\\": \\"dubbo-application\\",\\n      \\"Version\\": \\"1.0.0\\",\\n      \\"SpringApplicationName\\": \\"spring-application\\",\\n      \\"RegistryType\\": \\"nacos\\",\\n      \\"ServiceType\\": \\"dubbo\\",\\n      \\"ServiceName\\": \\"com.alibaba.xxx\\",\\n      \\"Methods\\": [\\n        {\\n          \\"Paths\\": [\\n            \\"/path\\"\\n          ],\\n          \\"ParameterTypes\\": [\\n            \\"int\\"\\n          ],\\n          \\"RequestMethods\\": [\\n            \\"sayHello\\"\\n          ],\\n          \\"Name\\": \\"sayHello\\",\\n          \\"MethodController\\": \\"com.alibaba.SayHelloController\\",\\n          \\"ReturnType\\": \\"int\\"\\n        }\\n      ],\\n      \\"Metadata\\": {},\\n      \\"Group\\": \\"dubbo\\"\\n    }\\n  ],\\n  \\"Code\\": 200,\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询应用服务信息',
      'summary' => '通过GetServiceList接口查询应用服务信息。',
    ),
    'CreateOrUpdateSwimmingLaneGroup' => 
    array (
      'summary' => '用于创建或者更新全链路灰度泳道组。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region',
            'description' => 'Region。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'MSE命名空间名字',
            'description' => 'MSE命名空间名字。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        2 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '泳道组ID。-1时为创建泳道组，大于0时为修改指定泳道组。',
            'description' => '泳道组ID。-1时为创建泳道组，大于0时为修改指定泳道组。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '120',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '名称',
            'description' => '名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'group1',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '0 未生效',
            'description' => '取值为0表示未生效，取值为1表示生效。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        5 => 
        array (
          'name' => 'EntryApp',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '入口应用。格式 "来源系统:id"。比如：
- mse:${mse应用id}
- mse-gw:${mse云原生网关id}',
            'description' => '入口应用。格式 "来源系统:id"。比如：
- mse:${mse应用id}
- mse-gw:${mse云原生网关id}',
            'type' => 'string',
            'required' => false,
            'example' => 'mse-gw:gw-2b1407e050f1446xxxcd2a65fd9xxxx',
          ),
        ),
        6 => 
        array (
          'name' => 'AppIds',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用集合。以 "," 分割应用 id',
            'description' => '应用集合。以 "," 分割应用 id',
            'type' => 'string',
            'required' => false,
            'example' => 'xxxxn1po62@492b8f98d4bxxxx,xxxxn1po62@2d8f5d1b7f2xxxx',
          ),
        ),
        7 => 
        array (
          'name' => 'MessageQueueGrayEnable',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启消息灰度',
            'description' => '是否开启消息灰度。',
            'type' => 'boolean',
            'required' => false,
            'enumValueTitles' => 
            array (
              'true' => 'true',
              'false' => 'false',
            ),
            'example' => 'true',
            'default' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'MessageQueueFilterSide',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '消息灰度过滤侧',
            'description' => '消息灰度过滤侧。',
            'type' => 'string',
            'required' => false,
            'example' => 'Server',
            'default' => 'Server',
            'enum' => 
            array (
              0 => 'Server',
              1 => 'Client',
            ),
          ),
        ),
        9 => 
        array (
          'name' => 'DbGrayEnable',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启数据库灰度',
            'description' => '是否开启数据库灰度。',
            'type' => 'boolean',
            'required' => false,
            'enumValueTitles' => 
            array (
              'true' => 'true',
              'false' => 'false',
            ),
            'example' => 'true',
          ),
        ),
        10 => 
        array (
          'name' => 'RecordCanaryDetail',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启记录请求详情',
            'description' => '是否开启记录请求详情。',
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        11 => 
        array (
          'name' => 'Paths',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        12 => 
        array (
          'name' => 'RouteIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '路由ID列表（以云原生网关为入口时，在创建泳道组的泳道前，需调用本接口传入选择的云原生网关路由ID列表）',
            'description' => '路由ID列表（以云原生网关为入口时，在创建泳道组的泳道前，需调用本接口传入选择的云原生网关路由ID列表）',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        13 => 
        array (
          'name' => 'CanaryModel',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
          ),
        ),
        14 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult',
            'description' => 'RestResult。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。

',
                'type' => 'string',
                'example' => 'EE5C32A1-BC0E-4B79-817C-103E4EDF****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

true：请求成功。
false：请求失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'title' => '错误码。',
                'description' => '错误码。

',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

',
                'type' => 'string',
                'example' => '请求处理成功
',
              ),
              'Data' => 
              array (
                'description' => '数据概览。

',
                'type' => 'object',
                'properties' => 
                array (
                  'Name' => 
                  array (
                    'title' => '应用名',
                    'description' => '应用名',
                    'type' => 'string',
                    'example' => 'example-app',
                  ),
                  'DbGrayEnable' => 
                  array (
                    'title' => '是否开启数据库灰度',
                    'description' => '是否开启数据库灰度',
                    'type' => 'string',
                    'example' => 'true',
                  ),
                  'UserId' => 
                  array (
                    'title' => '应用所属的用户id。',
                    'description' => '应用所属的用户id。',
                    'type' => 'string',
                    'example' => '12345',
                  ),
                  'MessageQueueFilterSide' => 
                  array (
                    'title' => '消息灰度过滤侧',
                    'description' => '消息灰度过滤侧。',
                    'type' => 'string',
                    'example' => 'Client',
                  ),
                  'AppIds' => 
                  array (
                    'title' => '应用id列表，逗号分隔。',
                    'description' => '应用id列表，逗号分隔。',
                    'type' => 'string',
                    'example' => 'abcd1@abcde123,abcd1@abcde124',
                  ),
                  'Namespace' => 
                  array (
                    'title' => 'MSE命名空间名字',
                    'description' => 'MSE命名空间名字。',
                    'type' => 'string',
                    'example' => 'prod',
                  ),
                  'RecordCanaryDetail' => 
                  array (
                    'title' => '是否开启记录请求详情。',
                    'description' => '是否开启记录请求详情。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Id' => 
                  array (
                    'title' => '泳道组id。',
                    'description' => '泳道组id。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2047',
                    'default' => '123',
                  ),
                  'EntryApp' => 
                  array (
                    'title' => '入口应用。格式 "来源系统:id"。比如：
mse:${mse应用id}
mse-gw:${mse云原生网关id}',
                    'description' => '入口应用。',
                    'type' => 'string',
                    'example' => 'mse:abcd1@a2345',
                  ),
                  'Region' => 
                  array (
                    'title' => '应用所属地域。',
                    'description' => '应用所属地域。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'MessageQueueGrayEnable' => 
                  array (
                    'title' => '是否开启消息灰度。',
                    'description' => '是否开启消息灰度。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'paths' => 
                  array (
                    'type' => 'string',
                  ),
                  'Paths' => 
                  array (
                    'type' => 'string',
                  ),
                  'canaryModel' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'CanaryModel' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                ),
                'example' => '{}',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"EE5C32A1-BC0E-4B79-817C-103E4EDF****\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"Success\\",\\n  \\"Message\\": \\"请求处理成功\\\\n\\",\\n  \\"Data\\": {\\n    \\"Name\\": \\"example-app\\",\\n    \\"DbGrayEnable\\": \\"true\\",\\n    \\"UserId\\": \\"12345\\",\\n    \\"MessageQueueFilterSide\\": \\"Client\\",\\n    \\"AppIds\\": \\"abcd1@abcde123,abcd1@abcde124\\",\\n    \\"Namespace\\": \\"prod\\",\\n    \\"RecordCanaryDetail\\": true,\\n    \\"Id\\": 2047,\\n    \\"EntryApp\\": \\"mse:abcd1@a2345\\",\\n    \\"Region\\": \\"cn-hangzhou\\",\\n    \\"MessageQueueGrayEnable\\": true,\\n    \\"paths\\": \\"\\",\\n    \\"Paths\\": \\"\\",\\n    \\"canaryModel\\": 0,\\n    \\"CanaryModel\\": 0\\n  }\\n}","type":"json"}]',
      'title' => '创建或者更新全链路灰度泳道组',
    ),
    'DeleteSwimmingLaneGroup' => 
    array (
      'summary' => '用于删除全链路泳道组。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全链路泳道组ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '145',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'MSE命名空间名字',
            'description' => 'MSE命名空间名字',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '名称',
            'type' => 'string',
            'required' => false,
            'example' => 'example-app',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult',
            'description' => 'RestResult',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '52BA6DA6-A702-4362-A32F-DFF79655****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'any',
                'example' => '{}',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"52BA6DA6-A702-4362-A32F-DFF79655****\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"Success\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Data\\": \\"{}\\"\\n}","type":"json"}]',
      'title' => '删除全链路泳道组',
    ),
    'CreateOrUpdateSwimmingLane' => 
    array (
      'summary' => '用于创建或者更新全链路灰度泳道。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
        'abilityTreeCode' => '116127',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseCR8P7I',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region',
            'description' => '地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'MSE命名空间名字',
            'description' => 'MSE命名空间名字',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        2 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '泳道ID。-1时为创建泳道，大于0时为修改指定泳道。',
            'description' => '主键ID。-1时为创建泳道，大于0时为修改指定泳道。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '-1',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '名称',
            'description' => '泳道名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'gray',
            'maxLength' => 64,
          ),
        ),
        4 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '匹配到后的目标机器标签',
            'description' => '标识。',
            'type' => 'string',
            'required' => false,
            'example' => 'gray',
            'maxLength' => 64,
          ),
        ),
        5 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启。',
            'description' => '是否开启。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '所属泳道组',
            'description' => '所属泳道组。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '115',
          ),
        ),
        7 => 
        array (
          'name' => 'EnableRules',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启规则',
            'description' => '是否配置泳道的路由规则，Ingress为网关暂时不需要配置。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'PathIndependentPercentageEnable',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        9 => 
        array (
          'name' => 'EntryRules',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => 'SwimmingLane',
            'description' => 'SwimmingLane',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Paths' => 
                array (
                  'title' => '路径列表',
                  'description' => '路径列表',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '路径',
                    'type' => 'string',
                    'required' => false,
                    'example' => '/',
                  ),
                  'required' => false,
                  'maxItems' => 50,
                ),
                'Condition' => 
                array (
                  'title' => '指示RestItems如何组合成最终的条件',
                  'description' => '指示RestItems如何组合成最终的条件',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'AND',
                  'default' => 'AND',
                  'enum' => 
                  array (
                    0 => 'AND',
                    1 => 'OR',
                  ),
                ),
                'RestItems' => 
                array (
                  'title' => '匹配列表',
                  'description' => '匹配列表',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => 'Rest匹配信息',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'title' => '匹配类型',
                        'description' => '匹配类型',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'header',
                      ),
                      'Name' => 
                      array (
                        'title' => '名称',
                        'description' => '名称',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'x-mse-tag',
                      ),
                      'Operator' => 
                      array (
                        'title' => '操作符',
                        'description' => '操作符',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'rawvalue',
                      ),
                      'NameList' => 
                      array (
                        'title' => '匹配列表',
                        'description' => '匹配列表',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '名称',
                          'type' => 'string',
                          'required' => false,
                          'example' => 'test',
                        ),
                        'required' => false,
                        'maxItems' => 10,
                      ),
                      'Datum' => 
                      array (
                        'title' => '数值',
                        'description' => '数值',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'x',
                      ),
                      'Cond' => 
                      array (
                        'title' => '匹配符',
                        'description' => '匹配符',
                        'type' => 'string',
                        'required' => false,
                        'example' => '==
',
                      ),
                      'Divisor' => 
                      array (
                        'title' => '除数',
                        'description' => '除数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '10',
                      ),
                      'Remainder' => 
                      array (
                        'title' => '余数',
                        'description' => '余数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '10',
                      ),
                      'Rate' => 
                      array (
                        'title' => '百分比',
                        'description' => '百分比',
                        'type' => 'integer',
                        'format' => 'int32',
                        'required' => false,
                        'example' => '30',
                      ),
                      'Value' => 
                      array (
                        'title' => '值',
                        'description' => '值',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'gray',
                      ),
                    ),
                    'required' => false,
                  ),
                  'required' => false,
                  'maxItems' => 10,
                ),
                'Priority' => 
                array (
                  'title' => '优先级',
                  'description' => '优先级',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                  'default' => '0',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        10 => 
        array (
          'name' => 'EntryRule',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'json string',
            'description' => 'json string。',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'example' => '[{"Priority":1,"Paths":[],"Condition":"AND","RestItems":[{"Type":"param","Name":"name","Value":"xiaoming","Cond":"==","Operator":"rawvalue"}]}]',
          ),
        ),
        11 => 
        array (
          'name' => 'GatewaySwimmingLaneRouteJson',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '网关路由信息（使用云原生网关为入口时使用）',
            'description' => '网关路由信息（使用云原生网关为入口时使用）',
            'type' => 'object',
            'properties' => 
            array (
              'GatewayId' => 
              array (
                'title' => '网关ID',
                'description' => '网关ID',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1',
              ),
              'GatewayUniqueId' => 
              array (
                'title' => '网关唯一ID',
                'description' => '网关唯一ID',
                'type' => 'string',
                'required' => false,
                'example' => 'gw-84efde2ee1464260bdb17a5b****',
              ),
              'RouteIdList' => 
              array (
                'title' => '路由ID列表',
                'description' => '路由ID列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '路由ID',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '1',
                ),
                'required' => false,
              ),
              'CanaryModel' => 
              array (
                'title' => '全链路灰度模式：

- 0: 按请求内容路由

- 1: 按比例路由',
                'description' => '全链路灰度模式：

- 0: 按请求内容路由

- 1: 按比例路由',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '0',
              ),
              'Conditions' => 
              array (
                'title' => '匹配条件列表（按内容路由使用）',
                'description' => '匹配条件列表',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '',
                  'description' => '条件项',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'title' => '参数名称',
                      'description' => '参数名称',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'name',
                    ),
                    'Value' => 
                    array (
                      'title' => '参数值',
                      'description' => '参数值',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'xiaoming',
                    ),
                    'Type' => 
                    array (
                      'title' => '参数类型：
- header：Header
- param：Parameter',
                      'description' => '参数类型：
- header：Header
- param：Parameter',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'header',
                    ),
                    'Cond' => 
                    array (
                      'title' => '条件：
- PRE：前缀匹配
- EQUAL：精确匹配
- ERGULAR：正则匹配',
                      'description' => '条件：
- PRE：前缀匹配
- EQUAL：精确匹配
- ERGULAR：正则匹配',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'PRE',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'Percentage' => 
              array (
                'title' => '流量比例（按比例路由使用，取值0-100）',
                'description' => '流量比例（按比例路由使用，取值0-100）',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '30',
              ),
              'RouteIndependentPercentageEnable' => 
              array (
                'type' => 'boolean',
                'required' => false,
              ),
              'RouteIndependentPercentageList' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'RouteId' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                    ),
                    'Percentage' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int32',
                      'required' => false,
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
        12 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult',
            'description' => 'RestResult',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EE5C32A1-BC0E-4B79-817C-103E4EDF****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'Code仅仅用来和Success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'name' => 
                  array (
                    'description' => '泳道名称',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'id' => 
                  array (
                    'description' => '泳道ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '94765',
                  ),
                  'tag' => 
                  array (
                    'description' => '泳道对应的标签。',
                    'type' => 'string',
                    'example' => 'release',
                  ),
                  'status' => 
                  array (
                    'description' => '泳道状态',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'enable' => 
                  array (
                    'description' => '泳道开关',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'regionId' => 
                  array (
                    'description' => '应用所在的区域。',
                    'type' => 'string',
                    'example' => 'cn-beijing',
                  ),
                  'groupId' => 
                  array (
                    'description' => '泳道组Id。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '72586',
                  ),
                  'entryRule' => 
                  array (
                    'description' => '入口应用规则',
                    'type' => 'string',
                    'example' => '{}',
                  ),
                  'entryRules' => 
                  array (
                    'description' => '名称',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '入口应用规则详情',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'paths' => 
                        array (
                          'description' => '路径列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '路径列表',
                            'type' => 'string',
                            'example' => '/',
                          ),
                        ),
                        'path' => 
                        array (
                          'title' => '',
                          'description' => '代码组路径',
                          'type' => 'string',
                          'example' => '/adump/wxb/prod',
                        ),
                        'condition' => 
                        array (
                          'description' => '条件',
                          'type' => 'string',
                          'example' => 'AND',
                        ),
                        'restItems' => 
                        array (
                          'description' => 'Rest匹配规则列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'Rest匹配规则',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'type' => 
                              array (
                                'title' => '匹配类型',
                                'description' => '匹配类型',
                                'type' => 'string',
                                'example' => 'cookie',
                              ),
                              'name' => 
                              array (
                                'title' => '名称',
                                'description' => '名称',
                                'type' => 'string',
                                'example' => 'test',
                              ),
                              'operator' => 
                              array (
                                'title' => '操作符',
                                'description' => '操作符',
                                'type' => 'string',
                                'example' => 'rawvalue',
                              ),
                              'nameList' => 
                              array (
                                'title' => '匹配列表',
                                'description' => '名称列表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '名称',
                                  'type' => 'string',
                                  'example' => 'test',
                                ),
                                'maxItems' => 10,
                              ),
                              'datum' => 
                              array (
                                'title' => '数值',
                                'description' => '数值',
                                'type' => 'string',
                                'example' => 'x',
                              ),
                              'cond' => 
                              array (
                                'title' => '匹配符',
                                'description' => '匹配符',
                                'type' => 'string',
                                'example' => '==',
                              ),
                              'divisor' => 
                              array (
                                'title' => '除数',
                                'description' => '除数',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '10',
                              ),
                              'remainder' => 
                              array (
                                'title' => '余数',
                                'description' => '余数',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '10',
                              ),
                              'rate' => 
                              array (
                                'title' => '百分比',
                                'description' => '百分比',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '30',
                              ),
                              'value' => 
                              array (
                                'title' => '值',
                                'description' => '值',
                                'type' => 'string',
                                'example' => '9',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'enableRules' => 
                  array (
                    'description' => '是否开启规则。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'gmtCreate' => 
                  array (
                    'description' => '泳道创建时间。',
                    'type' => 'string',
                    'example' => '1545726028000',
                  ),
                  'gmtModified' => 
                  array (
                    'description' => '泳道更新时间。',
                    'type' => 'string',
                    'example' => '1565701886000',
                  ),
                  'gatewaySwimmingLaneRouteJson' => 
                  array (
                    'description' => 'MSE网关路由规则',
                    'type' => 'string',
                    'example' => '{}',
                  ),
                  'pathIndependentPercentageEnable' => 
                  array (
                    'type' => 'boolean',
                  ),
                ),
                'example' => '{}',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"EE5C32A1-BC0E-4B79-817C-103E4EDF****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Data\\": {\\n    \\"name\\": \\"test\\",\\n    \\"id\\": 94765,\\n    \\"tag\\": \\"release\\",\\n    \\"status\\": 0,\\n    \\"enable\\": true,\\n    \\"regionId\\": \\"cn-beijing\\",\\n    \\"groupId\\": 72586,\\n    \\"entryRule\\": \\"{}\\",\\n    \\"entryRules\\": [\\n      {\\n        \\"paths\\": [\\n          \\"/\\"\\n        ],\\n        \\"path\\": \\"/adump/wxb/prod\\",\\n        \\"condition\\": \\"AND\\",\\n        \\"restItems\\": [\\n          {\\n            \\"type\\": \\"cookie\\",\\n            \\"name\\": \\"test\\",\\n            \\"operator\\": \\"rawvalue\\",\\n            \\"nameList\\": [\\n              \\"test\\"\\n            ],\\n            \\"datum\\": \\"x\\",\\n            \\"cond\\": \\"==\\",\\n            \\"divisor\\": 10,\\n            \\"remainder\\": 10,\\n            \\"rate\\": 30,\\n            \\"value\\": \\"9\\"\\n          }\\n        ]\\n      }\\n    ],\\n    \\"enableRules\\": true,\\n    \\"gmtCreate\\": \\"1545726028000\\",\\n    \\"gmtModified\\": \\"1565701886000\\",\\n    \\"gatewaySwimmingLaneRouteJson\\": \\"{}\\",\\n    \\"pathIndependentPercentageEnable\\": true\\n  }\\n}","type":"json"}]',
      'title' => '创建或者更新全链路灰度泳道',
    ),
    'DeleteSwimmingLane' => 
    array (
      'summary' => '用于删除全链路泳道。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LaneId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '229',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'MSE命名空间名字',
            'description' => 'MSE命名空间名字',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult',
            'description' => 'RestResult',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '69AD2AA7-DB47-449B-941B-B14409DF****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"69AD2AA7-DB47-449B-941B-B14409DF****\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"Success\\",\\n  \\"Message\\": \\"请求处理成功\\"\\n}","type":"json"}]',
      'title' => '删除全链路泳道',
    ),
    'QueryAllSwimmingLaneGroup' => 
    array (
      'summary' => '用于查询所有泳道组。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '需要查询的MSE命名空间名字',
            'description' => '需要查询的MSE命名空间名字。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult',
            'description' => 'RestResult',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id。',
                'type' => 'string',
                'example' => '54973C90-F379-4372-9AA5-053A3F7****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicMessage' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'title' => '泳道组名称',
                      'description' => '泳道组名称。',
                      'type' => 'string',
                      'example' => 'swimmingGroup',
                    ),
                    'UserId' => 
                    array (
                      'title' => '泳道所属的用户id',
                      'description' => '泳道所属的用户ID。',
                      'type' => 'string',
                      'example' => '12345',
                    ),
                    'MessageQueueFilterSide' => 
                    array (
                      'title' => '在哪一侧实现消息灰度',
                      'description' => '在哪一侧开启消息灰度。',
                      'type' => 'string',
                      'example' => 'Client',
                    ),
                    'AppIds' => 
                    array (
                      'title' => '应用Id列表',
                      'description' => '应用Id列表。',
                      'type' => 'string',
                      'example' => 'abcde@abcde,abcde@abcde',
                    ),
                    'Namespace' => 
                    array (
                      'title' => '泳道所属的MSE命名空间',
                      'description' => '泳道所属的MSE命名空间。',
                      'type' => 'string',
                      'example' => 'default',
                    ),
                    'RecordCanaryDetail' => 
                    array (
                      'title' => '是否记录请求详情（全链路灰度可观测）',
                      'description' => '是否记录请求详情（全链路灰度可观测）。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'Id' => 
                    array (
                      'title' => '泳道组Id',
                      'description' => '泳道组ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '123',
                    ),
                    'EntryApp' => 
                    array (
                      'title' => '入口应用类型+入口应用Id',
                      'description' => '入口应用类型和入口应用ID。',
                      'type' => 'string',
                      'example' => 'mse:abcde@abcde',
                    ),
                    'Region' => 
                    array (
                      'title' => '所属地域',
                      'description' => '所属地域。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'MessageQueueGrayEnable' => 
                    array (
                      'title' => '是否开启消息灰度',
                      'description' => '是否开启消息灰度。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'Paths' => 
                    array (
                      'type' => 'string',
                    ),
                    'paths' => 
                    array (
                      'type' => 'string',
                    ),
                    'CanaryModel' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                    'canaryModel' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int32',
                    ),
                  ),
                ),
                'example' => '[{id:100,name:"test"}]
',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"54973C90-F379-4372-9AA5-053A3F7****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": [\\n    {\\n      \\"Name\\": \\"swimmingGroup\\",\\n      \\"UserId\\": \\"12345\\",\\n      \\"MessageQueueFilterSide\\": \\"Client\\",\\n      \\"AppIds\\": \\"abcde@abcde,abcde@abcde\\",\\n      \\"Namespace\\": \\"default\\",\\n      \\"RecordCanaryDetail\\": false,\\n      \\"Id\\": 123,\\n      \\"EntryApp\\": \\"mse:abcde@abcde\\",\\n      \\"Region\\": \\"cn-hangzhou\\",\\n      \\"MessageQueueGrayEnable\\": true,\\n      \\"Paths\\": \\"\\",\\n      \\"paths\\": \\"\\",\\n      \\"CanaryModel\\": 0,\\n      \\"canaryModel\\": 0\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询所有泳道组',
    ),
    'QueryAllSwimmingLane' => 
    array (
      'summary' => '用于查询当前泳道组内所有泳道。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '116125',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseCR8P7I',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'MSE命名空间名字',
            'description' => 'MSE命名空间名字',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '泳道组id。',
            'description' => '泳道组ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '186',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult',
            'description' => 'RestResult',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC34E4A3-5F1C-4E40-86EA-02EDF967****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'title' => '错误码。',
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'title' => '请求信息。',
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'title' => '泳道组名称。',
                      'description' => '泳道组名称。',
                      'type' => 'string',
                      'example' => 'swimmingGroup',
                    ),
                    'UserId' => 
                    array (
                      'title' => '泳道所属的用户id。',
                      'description' => '泳道所属的用户id。',
                      'type' => 'string',
                      'example' => '12345',
                    ),
                    'MessageQueueFilterSide' => 
                    array (
                      'title' => '在哪一侧实现消息灰度。',
                      'description' => '在哪一侧实现消息灰度。',
                      'type' => 'string',
                      'example' => 'Client',
                    ),
                    'Namespace' => 
                    array (
                      'title' => '泳道所属的MSE命名空间。',
                      'description' => '泳道所属的MSE命名空间。',
                      'type' => 'string',
                      'example' => 'default',
                    ),
                    'RecordCanaryDetail' => 
                    array (
                      'title' => '是否记录请求详情（全链路灰度可观测）。',
                      'description' => '是否记录请求详情（全链路灰度可观测）。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'Id' => 
                    array (
                      'title' => '泳道组Id。',
                      'description' => '泳道组Id。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '123',
                    ),
                    'RegionId' => 
                    array (
                      'title' => '所属地域。',
                      'description' => '所属地域。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'MessageQueueGrayEnable' => 
                    array (
                      'title' => '是否开启消息灰度。',
                      'description' => '是否开启消息灰度。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'enableRules' => 
                    array (
                      'title' => '是否开启规则。',
                      'description' => '是否开启规则。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'EntryRules' => 
                    array (
                      'description' => '入口应用规则列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '入口应用规则',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'paths' => 
                          array (
                            'description' => '路径列表',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '路径',
                              'type' => 'string',
                              'example' => '/',
                            ),
                          ),
                          'path' => 
                          array (
                            'title' => '',
                            'description' => '路径',
                            'type' => 'string',
                            'example' => '/adump/wxb/prod',
                          ),
                          'condition' => 
                          array (
                            'description' => '条件',
                            'type' => 'string',
                            'example' => 'AND',
                          ),
                          'restItems' => 
                          array (
                            'description' => 'Rest匹配规则列表',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => 'Rest匹配规则',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'type' => 
                                array (
                                  'title' => '匹配类型',
                                  'description' => '匹配类型',
                                  'type' => 'string',
                                  'example' => 'cookie',
                                ),
                                'name' => 
                                array (
                                  'title' => '名称',
                                  'description' => '名称',
                                  'type' => 'string',
                                  'example' => 'test',
                                ),
                                'operator' => 
                                array (
                                  'title' => '操作符',
                                  'description' => '操作符',
                                  'type' => 'string',
                                  'example' => 'rawvalue',
                                ),
                                'nameList' => 
                                array (
                                  'title' => '匹配列表',
                                  'description' => '匹配列表',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '匹配名称',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                  'maxItems' => 10,
                                ),
                                'datum' => 
                                array (
                                  'title' => '数值',
                                  'description' => '数值',
                                  'type' => 'string',
                                  'example' => 'x',
                                ),
                                'cond' => 
                                array (
                                  'title' => '匹配符',
                                  'description' => '匹配符',
                                  'type' => 'string',
                                  'example' => '==',
                                ),
                                'divisor' => 
                                array (
                                  'title' => '除数',
                                  'description' => '除数',
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'example' => '10',
                                ),
                                'remainder' => 
                                array (
                                  'title' => '余数',
                                  'description' => '余数',
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'example' => '10',
                                ),
                                'rate' => 
                                array (
                                  'title' => '百分比',
                                  'description' => '百分比',
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'example' => '30',
                                ),
                                'value' => 
                                array (
                                  'title' => '值',
                                  'description' => '值',
                                  'type' => 'string',
                                  'example' => 'test',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'gmtCreate' => 
                    array (
                      'title' => '泳道创建时间。',
                      'description' => '泳道创建时间。',
                      'type' => 'string',
                      'example' => '1683598484000',
                    ),
                    'gmtModified' => 
                    array (
                      'title' => '泳道更新时间。',
                      'description' => '泳道更新时间。',
                      'type' => 'string',
                      'example' => '1683598484000',
                    ),
                    'groupId' => 
                    array (
                      'title' => '泳道组Id。',
                      'description' => '泳道组Id。',
                      'type' => 'string',
                      'example' => '72709',
                    ),
                    'GroupId' => 
                    array (
                      'title' => '泳道组Id。',
                      'description' => '泳道组Id。',
                      'type' => 'string',
                      'example' => '6859',
                    ),
                    'tag' => 
                    array (
                      'title' => '泳道对应的标签。',
                      'description' => '泳道对应的标签。',
                      'type' => 'string',
                      'example' => 'gray',
                    ),
                    'Tag' => 
                    array (
                      'title' => '泳道对应的标签。',
                      'description' => '泳道对应的标签。',
                      'type' => 'string',
                      'example' => 'gray',
                    ),
                    'GatewaySwimmingLaneRoute' => 
                    array (
                      'title' => '网关路由信息（使用云原生网关为入口时使用）',
                      'description' => '网关路由信息（使用云原生网关为入口时使用）',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GatewayId' => 
                        array (
                          'title' => '网关ID',
                          'description' => '网关ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'title' => '网关唯一ID',
                          'description' => '网关唯一ID',
                          'type' => 'string',
                          'example' => 'gw-84efde2ee1464260bdb17a5b****',
                        ),
                        'RouteIdList' => 
                        array (
                          'title' => '路由ID列表',
                          'description' => '路由ID列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '1',
                          ),
                        ),
                        'CanaryModel' => 
                        array (
                          'title' => '全链路灰度模式：

- 0: 按请求内容路由

- 1: 按比例路由',
                          'description' => '全链路灰度模式：

- 0: 按请求内容路由

- 1: 按比例路由',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'Conditions' => 
                        array (
                          'title' => '匹配条件列表（按内容路由使用）',
                          'description' => '匹配条件列表（按内容路由使用）',
                          'type' => 'array',
                          'items' => 
                          array (
                            'title' => '',
                            'description' => '',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Name' => 
                              array (
                                'title' => '参数名称',
                                'description' => '参数名称',
                                'type' => 'string',
                                'example' => 'name',
                              ),
                              'Value' => 
                              array (
                                'title' => '参数值',
                                'description' => '参数值',
                                'type' => 'string',
                                'example' => 'xiaoming',
                              ),
                              'Type' => 
                              array (
                                'title' => '参数类型：
- header：Header
- param：Parameter',
                                'description' => '参数类型：
- header：Header
- param：Parameter',
                                'type' => 'string',
                                'example' => 'header',
                              ),
                              'Cond' => 
                              array (
                                'title' => '条件：
- PRE：前缀匹配
- EQUAL：精确匹配
- ERGULAR：正则匹配',
                                'description' => '条件：
- PRE：前缀匹配
- EQUAL：精确匹配
- ERGULAR：正则匹配',
                                'type' => 'string',
                                'example' => 'PRE',
                              ),
                            ),
                          ),
                        ),
                        'Percentage' => 
                        array (
                          'title' => '流量比例（按比例路由使用，取值0-100）',
                          'description' => '流量比例（按比例路由使用，取值0-100）',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'RouteIndependentPercentageEnable' => 
                        array (
                          'type' => 'string',
                        ),
                        'RouteIndependentPercentageList' => 
                        array (
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'RouteId' => 
                              array (
                                'type' => 'string',
                              ),
                              'Percentage' => 
                              array (
                                'type' => 'string',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'PathIndependentPercentageEnable' => 
                    array (
                      'type' => 'boolean',
                    ),
                  ),
                ),
                'example' => '[{id:100,name:"test"}]',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"DC34E4A3-5F1C-4E40-86EA-02EDF967****\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"Success\\",\\n  \\"Message\\": \\"OK\\",\\n  \\"Data\\": [\\n    {\\n      \\"Name\\": \\"swimmingGroup\\",\\n      \\"UserId\\": \\"12345\\",\\n      \\"MessageQueueFilterSide\\": \\"Client\\",\\n      \\"Namespace\\": \\"default\\",\\n      \\"RecordCanaryDetail\\": false,\\n      \\"Id\\": 123,\\n      \\"RegionId\\": \\"cn-hangzhou\\",\\n      \\"MessageQueueGrayEnable\\": false,\\n      \\"enableRules\\": true,\\n      \\"EntryRules\\": [\\n        {\\n          \\"paths\\": [\\n            \\"/\\"\\n          ],\\n          \\"path\\": \\"/adump/wxb/prod\\",\\n          \\"condition\\": \\"AND\\",\\n          \\"restItems\\": [\\n            {\\n              \\"type\\": \\"cookie\\",\\n              \\"name\\": \\"test\\",\\n              \\"operator\\": \\"rawvalue\\",\\n              \\"nameList\\": [\\n                \\"test\\"\\n              ],\\n              \\"datum\\": \\"x\\",\\n              \\"cond\\": \\"==\\",\\n              \\"divisor\\": 10,\\n              \\"remainder\\": 10,\\n              \\"rate\\": 30,\\n              \\"value\\": \\"test\\"\\n            }\\n          ]\\n        }\\n      ],\\n      \\"gmtCreate\\": \\"1683598484000\\",\\n      \\"gmtModified\\": \\"1683598484000\\",\\n      \\"groupId\\": \\"72709\\",\\n      \\"GroupId\\": \\"6859\\",\\n      \\"tag\\": \\"gray\\",\\n      \\"Tag\\": \\"gray\\",\\n      \\"GatewaySwimmingLaneRoute\\": {\\n        \\"GatewayId\\": 1,\\n        \\"GatewayUniqueId\\": \\"gw-84efde2ee1464260bdb17a5b****\\",\\n        \\"RouteIdList\\": [\\n          1\\n        ],\\n        \\"CanaryModel\\": 0,\\n        \\"Conditions\\": [\\n          {\\n            \\"Name\\": \\"name\\",\\n            \\"Value\\": \\"xiaoming\\",\\n            \\"Type\\": \\"header\\",\\n            \\"Cond\\": \\"PRE\\"\\n          }\\n        ],\\n        \\"Percentage\\": 20,\\n        \\"RouteIndependentPercentageEnable\\": \\"\\",\\n        \\"RouteIndependentPercentageList\\": [\\n          {\\n            \\"RouteId\\": \\"\\",\\n            \\"Percentage\\": \\"\\"\\n          }\\n        ]\\n      },\\n      \\"PathIndependentPercentageEnable\\": true\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询当前泳道组内所有泳道',
    ),
    'GetTagsBySwimmingLaneGroupId' => 
    array (
      'summary' => '用于获取当前泳道组内的所有标签。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道组ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '154',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '需要查询的MSE命名空间名字',
            'description' => '需要查询的MSE命名空间名字',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult',
            'description' => 'RestResult',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '69AD2AA7-DB47-449B-941B-B14409DF****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Data' => 
              array (
                'description' => '标签数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '标签数据。',
                  'type' => 'string',
                  'example' => '[{"desc":"k8s-pod-label","priority":100,"tag":"gray","type":"tag"}]',
                ),
                'example' => '["gray"]',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"69AD2AA7-DB47-449B-941B-B14409DF****\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Data\\": [\\n    \\"[{\\\\\\"desc\\\\\\":\\\\\\"k8s-pod-label\\\\\\",\\\\\\"priority\\\\\\":100,\\\\\\"tag\\\\\\":\\\\\\"gray\\\\\\",\\\\\\"type\\\\\\":\\\\\\"tag\\\\\\"}]\\"\\n  ]\\n}","type":"json"}]',
      'title' => '获取当前泳道组内的所有标签',
    ),
    'QuerySwimmingLaneById' => 
    array (
      'summary' => '用于通过泳道ID查询泳道信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '116123',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseCR8P7I',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LaneId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '泳道ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '250',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'MSE命名空间名字',
            'description' => 'MSE命名空间名字',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult',
            'description' => 'RestResult',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '69AD2AA7-DB47-449B-941B-B14409DF****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'title' => '错误码。',
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Message' => 
              array (
                'title' => '请求信息。',
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'name' => 
                  array (
                    'description' => '泳道名称',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'id' => 
                  array (
                    'description' => '泳道ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'tag' => 
                  array (
                    'description' => '泳道对应的标签。',
                    'type' => 'string',
                    'example' => 'gray',
                  ),
                  'status' => 
                  array (
                    'description' => '泳道状态',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'enable' => 
                  array (
                    'description' => '泳道开关',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'regionId' => 
                  array (
                    'description' => '区域ID。',
                    'type' => 'string',
                    'example' => 'cn-shanghai',
                  ),
                  'groupId' => 
                  array (
                    'description' => '泳道组Id。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '8',
                  ),
                  'entryRule' => 
                  array (
                    'description' => '入口应用规则',
                    'type' => 'string',
                    'example' => '{}',
                  ),
                  'entryRules' => 
                  array (
                    'description' => '入口应用规则详情',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '入口应用规则',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'paths' => 
                        array (
                          'description' => '路径列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '路径',
                            'type' => 'string',
                            'example' => '/',
                          ),
                        ),
                        'path' => 
                        array (
                          'title' => '',
                          'description' => '路径',
                          'type' => 'string',
                          'example' => '/',
                        ),
                        'condition' => 
                        array (
                          'description' => '条件',
                          'type' => 'string',
                          'example' => 'AND',
                        ),
                        'restItems' => 
                        array (
                          'description' => 'Rest匹配规则列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'Rest匹配规则',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'type' => 
                              array (
                                'title' => '匹配类型',
                                'description' => '匹配类型',
                                'type' => 'string',
                                'example' => 'cookie',
                              ),
                              'name' => 
                              array (
                                'title' => '名称',
                                'description' => '名称',
                                'type' => 'string',
                                'example' => '11111',
                              ),
                              'operator' => 
                              array (
                                'title' => '操作符',
                                'description' => '操作符',
                                'type' => 'string',
                                'example' => 'rawvalue',
                              ),
                              'nameList' => 
                              array (
                                'title' => '匹配列表',
                                'description' => '名称列表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '名称',
                                  'type' => 'string',
                                  'example' => 'test',
                                ),
                                'maxItems' => 10,
                              ),
                              'datum' => 
                              array (
                                'title' => '数值',
                                'description' => '数值',
                                'type' => 'string',
                                'example' => 'x',
                              ),
                              'cond' => 
                              array (
                                'title' => '匹配符',
                                'description' => '匹配符',
                                'type' => 'string',
                                'example' => '==',
                              ),
                              'divisor' => 
                              array (
                                'title' => '除数',
                                'description' => '除数',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '10',
                              ),
                              'remainder' => 
                              array (
                                'title' => '余数',
                                'description' => '余数',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '10',
                              ),
                              'rate' => 
                              array (
                                'title' => '百分比',
                                'description' => '百分比',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '30',
                              ),
                              'value' => 
                              array (
                                'title' => '值',
                                'description' => '值',
                                'type' => 'string',
                                'example' => 'hello',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'enableRules' => 
                  array (
                    'description' => '是否开启规则。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'gmtCreate' => 
                  array (
                    'description' => '规则创建时间',
                    'type' => 'string',
                    'example' => '1683598484000',
                  ),
                  'gmtModified' => 
                  array (
                    'description' => '规则修改时间',
                    'type' => 'string',
                    'example' => '1683598484000',
                  ),
                  'gatewaySwimmingLaneRouteJson' => 
                  array (
                    'description' => 'MSE网关路由规则',
                    'type' => 'string',
                    'example' => '{}',
                  ),
                  'PathIndependentPercentageEnable' => 
                  array (
                    'type' => 'boolean',
                  ),
                ),
                'example' => '{id:102,name:"test"}',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"69AD2AA7-DB47-449B-941B-B14409DF****\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Data\\": {\\n    \\"name\\": \\"test\\",\\n    \\"id\\": 1,\\n    \\"tag\\": \\"gray\\",\\n    \\"status\\": 1,\\n    \\"enable\\": true,\\n    \\"regionId\\": \\"cn-shanghai\\",\\n    \\"groupId\\": 8,\\n    \\"entryRule\\": \\"{}\\",\\n    \\"entryRules\\": [\\n      {\\n        \\"paths\\": [\\n          \\"/\\"\\n        ],\\n        \\"path\\": \\"/\\",\\n        \\"condition\\": \\"AND\\",\\n        \\"restItems\\": [\\n          {\\n            \\"type\\": \\"cookie\\",\\n            \\"name\\": \\"11111\\",\\n            \\"operator\\": \\"rawvalue\\",\\n            \\"nameList\\": [\\n              \\"test\\"\\n            ],\\n            \\"datum\\": \\"x\\",\\n            \\"cond\\": \\"==\\",\\n            \\"divisor\\": 10,\\n            \\"remainder\\": 10,\\n            \\"rate\\": 30,\\n            \\"value\\": \\"hello\\"\\n          }\\n        ]\\n      }\\n    ],\\n    \\"enableRules\\": true,\\n    \\"gmtCreate\\": \\"1683598484000\\",\\n    \\"gmtModified\\": \\"1683598484000\\",\\n    \\"gatewaySwimmingLaneRouteJson\\": \\"{}\\",\\n    \\"PathIndependentPercentageEnable\\": true\\n  }\\n}","type":"json"}]',
      'title' => '通过泳道ID查询泳道信息',
    ),
    'ListAppBySwimmingLaneGroupTags' => 
    array (
      'summary' => '获取指定泳道组内的指定标签的应用列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '要查询的标签。',
            'description' => '要查询的标签。',
            'type' => 'array',
            'items' => 
            array (
              'title' => '要查询的标签。',
              'description' => '要查询的标签。',
              'type' => 'string',
              'required' => false,
              'example' => 'gray',
            ),
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '泳道组id。',
            'description' => '泳道组id。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '需要查询的MSE命名空间名字。',
            'description' => '需要查询的MSE命名空间名字。',
            'type' => 'string',
            'required' => true,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult',
            'description' => 'RestResult',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求id。',
                'description' => '请求id。',
                'type' => 'string',
                'example' => '6832e76b-bb5f-4dea-****-************',
              ),
              'Success' => 
              array (
                'title' => '请求是否成功。',
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'ErrorCode' => 
              array (
                'title' => '请求错误码。',
                'description' => '请求错误码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Message' => 
              array (
                'title' => '请求附加信息。',
                'description' => '请求附加信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Data' => 
              array (
                'title' => '请求返回数据。',
                'description' => '请求返回数据。',
                'type' => 'object',
                'additionalProperties' => 
                array (
                  'title' => '每个tag对应的应用信息列表。',
                  'description' => '返回信息',
                  'type' => 'array',
                  'items' => 
                  array (
                    'title' => '应用列表。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'UserId' => 
                      array (
                        'title' => '应用所属的用户id。',
                        'type' => 'string',
                        'example' => '12345',
                        'description' => '应用所属的用户id。',
                      ),
                      'RegionId' => 
                      array (
                        'title' => '应用所在地域。',
                        'type' => 'string',
                        'example' => 'cn-hangzhou',
                        'description' => '应用所在地域。',
                      ),
                      'Namespace' => 
                      array (
                        'title' => '应用所在的微服务命名空间。',
                        'type' => 'string',
                        'example' => 'default',
                        'description' => '应用所在的微服务命名空间。',
                      ),
                      'AppName' => 
                      array (
                        'title' => '应用名字。',
                        'type' => 'string',
                        'example' => 'example-app-name',
                        'description' => '应用名字。',
                      ),
                      'AppId' => 
                      array (
                        'title' => '应用id。',
                        'type' => 'string',
                        'example' => '123456abcde@12345abcde',
                        'description' => '应用id。',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6832e76b-bb5f-4dea-****-************\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"Success\\",\\n  \\"Message\\": \\"OK\\",\\n  \\"Data\\": {\\n    \\"key\\": [\\n      {\\n        \\"UserId\\": \\"12345\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"Namespace\\": \\"default\\",\\n        \\"AppName\\": \\"example-app-name\\",\\n        \\"AppId\\": \\"123456abcde@12345abcde\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取泳道组内的指定标签的应用列表',
    ),
    'ListAppBySwimmingLaneGroupTag' => 
    array (
      'summary' => '用于获取当前泳道组内的指定标签的应用列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '标签名字。',
            'description' => '标签。',
            'type' => 'string',
            'required' => true,
            'example' => 'gray',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '泳道组id。',
            'description' => '泳道组ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '119',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '需要查询的MSE命名空间名字',
            'description' => '需要查询的MSE命名空间名字',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult',
            'description' => 'RestResult',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7466566F-F30F-4A29-965D-3E0AF21D****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'any',
                'example' => '[{appName:"test",appId:"hkhon1po62@958bba95910341f
"}]',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'substitutions' => 
        array (
          0 => 'mse::2019-05-31::ListAppBySwimmingLaneGroupTags',
        ),
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"7466566F-F30F-4A29-965D-3E0AF21D****\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Data\\": \\"[{appName:\\\\\\"test\\\\\\",appId:\\\\\\"hkhon1po62@958bba95910341f\\\\n\\\\\\"}]\\"\\n}","type":"json"}]',
      'title' => '获取当前泳道组内的指定标签的应用列表',
    ),
    'GetLosslessRuleByApp' => 
    array (
      'summary' => '获取指定应用无损上下线规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id, such as cn-hangzhou',
            'description' => '地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Key word of search lossless list',
            'description' => '应用名。',
            'type' => 'string',
            'required' => false,
            'example' => 'example-app',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MSE命名空间名。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
        3 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'appId',
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hkhon1po62@c3df23522baa***',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：
* zh：中文。
* en：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<MseLosslessResponse>',
            'description' => '返回值。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC34E4A3-5F1C-4E40-86EA-02EDF967****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- true：请求成功。
- false：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'AppName' => 
                  array (
                    'title' => 'appName',
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'spring-cloud-a',
                  ),
                  'AppId' => 
                  array (
                    'title' => 'appId',
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'hkhon1po62@24810bf4364a***',
                  ),
                  'Count' => 
                  array (
                    'title' => 'instance\'s count of app',
                    'description' => '实例数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Enable' => 
                  array (
                    'title' => 'rule is open or close',
                    'description' => '无损上线启用状态。取值：

- `true`：启用。
- `false`：禁用。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'WarmupTime' => 
                  array (
                    'description' => '预热时长（秒）。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '120',
                  ),
                  'DelayTime' => 
                  array (
                    'description' => '延迟注册时间（秒）。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '60',
                  ),
                  'FuncType' => 
                  array (
                    'title' => 'warmup function type, 2 means f(x)=x^2',
                    'description' => '预热曲线斜率。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'Aligned' => 
                  array (
                    'title' => 'microservices lifecycle aligns to k8s\'s or NOT',
                    'description' => '是否开启“通过就绪检查前完成服务注册”。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Related' => 
                  array (
                    'title' => 'K8s\'s HPA is related to warmup or NOT',
                    'description' => '是否开启“通过就绪检查前完成服务预热”。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'LossLessDetail' => 
                  array (
                    'title' => 'show lossLess offline&online detail',
                    'description' => '是否开启上下线处理明细。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Notice' => 
                  array (
                    'title' => 'enable lossLess offline active notification',
                    'description' => '是否开启主动通知。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"DC34E4A3-5F1C-4E40-86EA-02EDF967****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"Success\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": {\\n    \\"AppName\\": \\"spring-cloud-a\\",\\n    \\"AppId\\": \\"hkhon1po62@24810bf4364a***\\",\\n    \\"Count\\": 1,\\n    \\"Enable\\": true,\\n    \\"WarmupTime\\": 120,\\n    \\"DelayTime\\": 60,\\n    \\"FuncType\\": 2,\\n    \\"Aligned\\": true,\\n    \\"Related\\": false,\\n    \\"LossLessDetail\\": true,\\n    \\"Notice\\": false\\n  }\\n}","type":"json"}]',
      'title' => '获取指定应用无损上下线规则',
      'description' => '调用GetLosslessRuleByApp接口来获取指定应用的无损上下线的配置规则。

优先按AppId查询。

若AppId为空，使用RegionId+Namespace+AppName查询。',
    ),
    'ModifyLosslessRule' => 
    array (
      'summary' => '修改用户无损上下线配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'regionId',
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-beijing',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'appName',
            'description' => '应用名。',
            'type' => 'string',
            'required' => false,
            'example' => 'wx-work-api',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'namespace',
            'description' => '规则所属的微服务命名空间。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'default' => 'default',
          ),
        ),
        3 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'appName',
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'c644n5frmc@3e75f25fd4*****',
          ),
        ),
        4 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'the switch of rule, TRUE means open, FALSE means close',
            'description' => '无损上线启用状态。取值：

- true：启用。
- false：禁用。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'WarmupTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'warmup time of App',
            'description' => '预热时长。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '60',
          ),
        ),
        6 => 
        array (
          'name' => 'DelayTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'delay time of register to registry',
            'description' => '延迟注册时间。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'FuncType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'warmup function type, 2 means f(x)=x^2',
            'description' => '预热曲线斜率。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'Aligned',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'microservices lifecycle aligns to k8s\'s or NOT',
            'description' => '是否开启“通过就绪检查前完成服务注册”。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'true',
          ),
        ),
        9 => 
        array (
          'name' => 'Related',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'K8s\'s HPA is related to warmup or NOT',
            'description' => '是否开启“通过就绪检查前完成服务预热”。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'true',
          ),
        ),
        10 => 
        array (
          'name' => 'LossLessDetail',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'show lossLess offline&online detail',
            'description' => '是否开启上下线处理明细。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        11 => 
        array (
          'name' => 'Notice',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'enable lossLess offline active notification',
            'description' => '是否开启主动通知。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        12 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3369AD10-F1A6-4E6F-B99E-20F51826****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。                                
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'modifyLosslessRule success',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'any',
                'example' => 'null',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"3369AD10-F1A6-4E6F-B99E-20F51826****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"modifyLosslessRule success\\",\\n  \\"Data\\": \\"null\\"\\n}","type":"json"}]',
      'title' => '修改无损规则',
    ),
    'FetchLosslessRuleList' => 
    array (
      'summary' => '获取无损上下线规则列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id, such as cn-hangzhou',
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-beijing',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Key word of search lossless list',
            'description' => '应用名。',
            'type' => 'string',
            'required' => false,
            'example' => 'spring-boot-sample',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
        3 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'appId',
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hyaziyb6sc@86827c61f5ed***',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'current',
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'limit',
            'description' => '每页显示条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：
* zh：中文。
* en：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<FetchListResponse<MseLosslessResponse>>',
            'description' => '返回值。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '56D9E600-6348-4260-B35F-583413F****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '页面大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'TotalSize' => 
                  array (
                    'description' => '总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '36',
                  ),
                  'Results' => 
                  array (
                    'description' => '返回数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回数据。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AppName' => 
                        array (
                          'title' => 'appName',
                          'description' => '应用名称。',
                          'type' => 'string',
                          'example' => 'echo-demo',
                        ),
                        'AppId' => 
                        array (
                          'title' => 'appId',
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => 'hkhon1po62@24810bf4364a***',
                        ),
                        'Count' => 
                        array (
                          'title' => 'instance\'s count of app',
                          'description' => '实例数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'Enable' => 
                        array (
                          'title' => 'rule is open or close',
                          'description' => '无损上线启用状态。取值：

- `true`：启用。
- `false`：禁用。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'WarmupTime' => 
                        array (
                          'description' => '预热时长（秒）。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '60',
                        ),
                        'DelayTime' => 
                        array (
                          'description' => '延迟注册时间（秒）。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '60',
                        ),
                        'FuncType' => 
                        array (
                          'title' => 'warmup function type, 2 means f(x)=x^2',
                          'description' => '预热曲线斜率。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'Aligned' => 
                        array (
                          'title' => 'microservices lifecycle aligns to k8s\'s or NOT',
                          'description' => '是否开启“通过就绪检查前完成服务注册”。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Related' => 
                        array (
                          'title' => 'K8s\'s HPA is related to warmup or NOT',
                          'description' => '是否开启“通过就绪检查前完成服务预热”。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'LossLessDetail' => 
                        array (
                          'title' => 'show lossLess offline&online detail',
                          'description' => '是否开启上下线处理明细。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Notice' => 
                        array (
                          'title' => 'enable lossLess offline active notification',
                          'description' => '是否开启主动通知。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"56D9E600-6348-4260-B35F-583413F****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"Success\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": {\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"TotalSize\\": 36,\\n    \\"Results\\": [\\n      {\\n        \\"AppName\\": \\"echo-demo\\",\\n        \\"AppId\\": \\"hkhon1po62@24810bf4364a***\\",\\n        \\"Count\\": 3,\\n        \\"Enable\\": true,\\n        \\"WarmupTime\\": 60,\\n        \\"DelayTime\\": 60,\\n        \\"FuncType\\": 2,\\n        \\"Aligned\\": true,\\n        \\"Related\\": false,\\n        \\"LossLessDetail\\": false,\\n        \\"Notice\\": true\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取无损上下线规则列表',
      'description' => '调用FetchLosslessRuleList接口来获取无损上下线的配置规则列表。',
    ),
    'GetApplicationList' => 
    array (
      'summary' => '通过GetApplicationList接口获取应用列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'rest-container',
          ),
        ),
        2 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用id。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'hkhon1po62@c3df23522b*****',
          ),
        ),
        3 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '固定值，默认使用这个值',
            'type' => 'string',
            'required' => false,
            'example' => 'edasmsc',
          ),
        ),
        4 => 
        array (
          'name' => 'Language',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言，如 Java、Go',
            'type' => 'string',
            'required' => false,
            'example' => 'Java',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每一页显示多少条数据',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'SwitchEnable',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '是否开始Switch',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'SentinelEnable',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '是否开启Sentinel。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'false',
          ),
        ),
        9 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用所属的微服务命名空间。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
            'default' => 'default',
          ),
        ),
        10 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求id。',
                'type' => 'string',
                'example' => 'F55E608F-7C15-****-9CFD-DF832EBC4A0F',
              ),
              'Data' => 
              array (
                'description' => '数据结构。',
                'type' => 'object',
                'properties' => 
                array (
                  'Result' => 
                  array (
                    'description' => '返回集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '状态。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        'ExtraInfo' => 
                        array (
                          'description' => '其他信息。',
                          'type' => 'string',
                          'example' => '{}',
                        ),
                        'AppName' => 
                        array (
                          'description' => '应用名称。',
                          'type' => 'string',
                          'example' => 'finance',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用id。',
                          'type' => 'string',
                          'example' => 'hkhon1po62@5f1b08becb*****',
                        ),
                        'UserId' => 
                        array (
                          'description' => '用户ID。',
                          'type' => 'string',
                          'example' => '1234567890',
                        ),
                        'InstancesNumber' => 
                        array (
                          'description' => '实例数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Source' => 
                        array (
                          'description' => '应用来源。',
                          'type' => 'string',
                          'example' => 'edasmsc',
                        ),
                        'Language' => 
                        array (
                          'description' => '应用的编程语言。',
                          'type' => 'string',
                          'example' => 'JAVA',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'Namespace' => 
                        array (
                          'title' => '应用所属的MSE命名空间。',
                          'description' => '应用所属的微服务命名空间。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                      ),
                    ),
                  ),
                  'TotalSize' => 
                  array (
                    'description' => '总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '11',
                  ),
                  'PageNumber' => 
                  array (
                    'description' => '当前页',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '页面大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": true,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"F55E608F-7C15-****-9CFD-DF832EBC4A0F\\",\\n  \\"Data\\": {\\n    \\"Result\\": [\\n      {\\n        \\"Status\\": 0,\\n        \\"ExtraInfo\\": \\"{}\\",\\n        \\"AppName\\": \\"finance\\",\\n        \\"AppId\\": \\"hkhon1po62@5f1b08becb*****\\",\\n        \\"UserId\\": \\"1234567890\\",\\n        \\"InstancesNumber\\": 1,\\n        \\"Source\\": \\"edasmsc\\",\\n        \\"Language\\": \\"JAVA\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"Namespace\\": \\"default\\"\\n      }\\n    ],\\n    \\"TotalSize\\": 11,\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10\\n  }\\n}","type":"json"}]',
      'title' => '获取应用列表',
    ),
    'CreateMseServiceApplication' => 
    array (
      'summary' => '创建应用。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'bsd-xxyp-open-goods-server',
          ),
        ),
        1 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域，包括但不限于如下地域：

- cn-hangzhou：杭州
- cn-beijing：北京
- cn-shanghai：上海
- cn-zhangjiakou：张家口
- cn-shenzhen：深圳',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shenzhen',
          ),
        ),
        2 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '来源。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'edasmsc',
            'default' => 'edasmsc',
          ),
        ),
        3 => 
        array (
          'name' => 'Language',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用的编程语言。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'JAVA',
          ),
        ),
        4 => 
        array (
          'name' => 'ExtraInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '其他信息。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '{}',
          ),
        ),
        5 => 
        array (
          'name' => 'SentinelEnable',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '是否开启Sentinel。',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
            'default' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'SwitchEnable',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '是否开始Switch',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
            'default' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'MseVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待开通的MSE集群版本。

- mse_pro：表示专业版。
- mse_dev：表示开发版。',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_pro',
          ),
        ),
        8 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型。
- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '904F6C04-1284-****-8ED2-FFC57E507A72',
              ),
              'Data' => 
              array (
                'description' => '数据结构。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '状态。1表示可用状态，2表示删除状态。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ExtraInfo' => 
                  array (
                    'description' => '额外信息。',
                    'type' => 'string',
                    'example' => '{}',
                  ),
                  'AppName' => 
                  array (
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'spring-cloud-a',
                  ),
                  'UpdateTime' => 
                  array (
                    'description' => '最后更新时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1632979237663',
                  ),
                  'LicenseKey' => 
                  array (
                    'description' => '用户的对应的LicenseKey。',
                    'type' => 'string',
                    'example' => 'xxxxxxxx@xxxxxxxxxx',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1631001140913',
                  ),
                  'AppId' => 
                  array (
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'xxxxxxxx@xxxxxxxxxx',
                  ),
                  'UserId' => 
                  array (
                    'description' => '用户ID。',
                    'type' => 'string',
                    'example' => '1234567890',
                  ),
                  'Source' => 
                  array (
                    'description' => '来源类型。',
                    'type' => 'string',
                    'example' => 'edasmsc',
                  ),
                  'Language' => 
                  array (
                    'description' => '应用的编程语言。',
                    'type' => 'string',
                    'example' => 'JAVA',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '地域ID。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'Version' => 
                  array (
                    'description' => '版本信息。',
                    'type' => 'string',
                    'example' => '1.0.0',
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'substitutions' => 
        array (
          0 => 'mse::2019-05-31::CreateApplication',
        ),
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"904F6C04-1284-****-8ED2-FFC57E507A72\\",\\n  \\"Data\\": {\\n    \\"Status\\": 1,\\n    \\"ExtraInfo\\": \\"{}\\",\\n    \\"AppName\\": \\"spring-cloud-a\\",\\n    \\"UpdateTime\\": 1632979237663,\\n    \\"LicenseKey\\": \\"xxxxxxxx@xxxxxxxxxx\\",\\n    \\"CreateTime\\": 1631001140913,\\n    \\"AppId\\": \\"xxxxxxxx@xxxxxxxxxx\\",\\n    \\"UserId\\": \\"1234567890\\",\\n    \\"Source\\": \\"edasmsc\\",\\n    \\"Language\\": \\"JAVA\\",\\n    \\"RegionId\\": \\"cn-hangzhou\\",\\n    \\"Version\\": \\"1.0.0\\"\\n  },\\n  \\"Success\\": \\"true\\"\\n}","type":"json"}]',
      'title' => '创建应用',
    ),
    'CreateApplication' => 
    array (
      'summary' => '创建应用。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域。',
            'description' => '应用所属的区域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的MSE命名空间。',
            'description' => 'MSE命名空间名字。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'prod',
            'maxLength' => 64,
          ),
        ),
        2 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名。',
            'description' => '应用名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'spring-cloud-a',
          ),
        ),
        3 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用的部署方式，ACK表示阿里云容器服务K8s。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'ACK',
            'default' => 'edasmsc',
          ),
        ),
        4 => 
        array (
          'name' => 'Language',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用的编程语言。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'JAVA',
            'default' => 'JAVA',
          ),
        ),
        5 => 
        array (
          'name' => 'SentinelEnable',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '是否开启Sentinel。',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
            'default' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'SwitchEnable',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '是否开始Switch。',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
            'default' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '68D91223-CCE9-5F9C-B538-20F617DA48B1',
              ),
              'Data' => 
              array (
                'description' => '节点数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '应用状态，1表示正常。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ExtraInfo' => 
                  array (
                    'description' => '额外信息。',
                    'type' => 'string',
                    'example' => '{\\"rpcTypes\\":[\\"dubbo\\",\\"springCloud\\"]}',
                  ),
                  'AppName' => 
                  array (
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'spring-cloud-a',
                  ),
                  'UpdateTime' => 
                  array (
                    'description' => '更新时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1632979237663',
                  ),
                  'LicenseKey' => 
                  array (
                    'description' => '用户的对应的LicenseKey。',
                    'type' => 'string',
                    'example' => 'xxxxxxxx@xxxxxxxxxx',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1631001140913',
                  ),
                  'AppId' => 
                  array (
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'xxxxxxxx@xxxxxxxxxx',
                  ),
                  'UserId' => 
                  array (
                    'description' => '阿里云用户ID。',
                    'type' => 'string',
                    'example' => '1888888888',
                  ),
                  'Source' => 
                  array (
                    'description' => '应用的部署方式。

- ACK：表示阿里云容器服务K8s。
- Normal：表示其他接入方式。',
                    'type' => 'string',
                    'example' => 'ACK',
                  ),
                  'Language' => 
                  array (
                    'description' => '应用的编程语言。',
                    'type' => 'string',
                    'example' => 'JAVA',
                  ),
                  'RegionId' => 
                  array (
                    'description' => '地域。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'Namespace' => 
                  array (
                    'description' => 'MSE命名空间名字。',
                    'type' => 'string',
                    'example' => 'prod',
                  ),
                  'Version' => 
                  array (
                    'description' => '版本号。',
                    'type' => 'string',
                    'example' => '1.0.0',
                  ),
                ),
                'example' => 'data',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"68D91223-CCE9-5F9C-B538-20F617DA48B1\\",\\n  \\"Data\\": {\\n    \\"Status\\": 1,\\n    \\"ExtraInfo\\": \\"{\\\\\\\\\\\\\\"rpcTypes\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\"dubbo\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"springCloud\\\\\\\\\\\\\\"]}\\",\\n    \\"AppName\\": \\"spring-cloud-a\\",\\n    \\"UpdateTime\\": 1632979237663,\\n    \\"LicenseKey\\": \\"xxxxxxxx@xxxxxxxxxx\\",\\n    \\"CreateTime\\": 1631001140913,\\n    \\"AppId\\": \\"xxxxxxxx@xxxxxxxxxx\\",\\n    \\"UserId\\": \\"1888888888\\",\\n    \\"Source\\": \\"ACK\\",\\n    \\"Language\\": \\"JAVA\\",\\n    \\"RegionId\\": \\"cn-hangzhou\\",\\n    \\"Namespace\\": \\"prod\\",\\n    \\"Version\\": \\"1.0.0\\"\\n  },\\n  \\"Code\\": 200,\\n  \\"Success\\": \\"true\\",\\n  \\"HttpStatusCode\\": 200\\n}","type":"json"}]',
      'title' => '创建应用',
    ),
    'GetOverview' => 
    array (
      'summary' => '查询治理概览信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询时间。单位：天。比如传入30，说明查询30天内的治理规则情况。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '52BA6DA6-A702-4362-A32F-DFF79655****',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'string',
                'example' => 'data',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。
',
                'type' => 'string',
                'example' => 'true',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"52BA6DA6-A702-4362-A32F-DFF79655****\\",\\n  \\"Data\\": \\"data\\",\\n  \\"Code\\": 1,\\n  \\"Success\\": \\"true\\",\\n  \\"HttpStatusCode\\": 200\\n}","type":"json"}]',
      'title' => '查询应用概览',
      'description' => '通过GetOverview接口查询服务治理概览信息。',
    ),
    'RemoveApplication' => 
    array (
      'summary' => '删除单个应用。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域。',
            'description' => '地域。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '微服务命名空间。',
            'description' => '微服务命名空间。',
            'type' => 'string',
            'required' => false,
            'example' => 'prod',
            'maxLength' => 64,
          ),
        ),
        2 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要删除的应用名字。',
            'description' => '要删除的应用名字。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'example-app',
          ),
        ),
        3 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要删除的应用id。',
            'description' => '要删除的应用id。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'abcde@12345',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求id。',
                'description' => '请求id。',
                'type' => 'string',
                'example' => 'abcde-12345',
              ),
              'Success' => 
              array (
                'title' => '是否成功。',
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'title' => '错误码。',
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'NoPermission',
              ),
              'Message' => 
              array (
                'title' => '错误信息。',
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'title' => '删除执行结果。',
                'description' => '删除执行结果。',
                'type' => 'string',
                'example' => 'success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"abcde-12345\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"NoPermission\\",\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": \\"success\\"\\n}","type":"json"}]',
      'title' => '删除应用',
    ),
    'ModifyGovernanceKubernetesCluster' => 
    array (
      'summary' => '修改已接入服务治理的集群信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cd23228b3c80c4d4f9ad87cc3****',
          ),
        ),
        2 => 
        array (
          'name' => 'NamespaceInfos',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '命名空间接入MSE服务治理的对应信息。',
            'description' => '命名空间接入MSE服务治理的对应信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Name' => 
                array (
                  'title' => 'kubernetes命名空间名字。',
                  'description' => 'kubernetes命名空间名字。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'default',
                ),
                'MseNamespace' => 
                array (
                  'title' => '对应的微服务命名空间，为空代表没有接入。',
                  'description' => '对应的微服务命名空间，为空代表没有接入。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'default',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F9849E97-2455-54B0-A3B4-3F6E4E9FFEB1',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。
',
                'type' => 'boolean',
                'example' => 'True',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"F9849E97-2455-54B0-A3B4-3F6E4E9FFEB1\\",\\n  \\"Data\\": true,\\n  \\"Code\\": 200,\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新已接入服务治理的集群信息',
    ),
    'GetGovernanceKubernetesCluster' => 
    array (
      'summary' => '获取服务治理的kubernetes集群信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域，MSE支持的地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cd23228b3c80c4d4f9ad7af1d87cc****',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5B170A0D-2C5D-4CF8-B808-03966B86****',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'ClusterId' => 
                  array (
                    'description' => '集群ID。',
                    'type' => 'string',
                    'example' => 'cd23228b3c80c4d4f9ad7af1d87cc30d5',
                  ),
                  'ClusterName' => 
                  array (
                    'description' => '集群名称。',
                    'type' => 'string',
                    'example' => 'myCluster',
                  ),
                  'Region' => 
                  array (
                    'description' => '集群所在地域，MSE支持的地域。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'K8sVersion' => 
                  array (
                    'description' => 'k8s版本。',
                    'type' => 'string',
                    'example' => '1.20.11-aliyun.1',
                  ),
                  'NamespaceInfos' => 
                  array (
                    'description' => '命名空间信息。',
                    'type' => 'string',
                    'example' => '[{\\"Name\\":\\"ack-onepilot\\",\\"Tags\\":null},{\\"Name\\":\\"default\\",\\"Tags\\":{\\"mse-enable\\":\\"enabled\\"}},{\\"Name\\":\\"kube-node-lease\\",\\"Tags\\":null},{\\"Name\\":\\"kube-public\\",\\"Tags\\":null},{\\"Name\\":\\"kube-system\\",\\"Tags\\":null}]',
                  ),
                  'PilotStartTime' => 
                  array (
                    'description' => 'Pilot启动时间。',
                    'type' => 'string',
                    'example' => '2022-01-11T11:50:38.000+0000',
                  ),
                  'UpdateTime' => 
                  array (
                    'description' => '最后更新时间。',
                    'type' => 'string',
                    'example' => '2022-01-12T05:24:31.000+0000',
                  ),
                  'Namespaces' => 
                  array (
                    'description' => '命名空间列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '命名空间结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Name' => 
                        array (
                          'title' => 'Kubernetes命名空间名字',
                          'description' => 'Kubernetes命名空间名字。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'MseNamespace' => 
                        array (
                          'title' => '对应接入的mse命名空间名字',
                          'description' => '对应接入的mse命名空间名字。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'True',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"5B170A0D-2C5D-4CF8-B808-03966B86****\\",\\n  \\"Data\\": {\\n    \\"ClusterId\\": \\"cd23228b3c80c4d4f9ad7af1d87cc30d5\\",\\n    \\"ClusterName\\": \\"myCluster\\",\\n    \\"Region\\": \\"cn-hangzhou\\",\\n    \\"K8sVersion\\": \\"1.20.11-aliyun.1\\",\\n    \\"NamespaceInfos\\": \\"[{\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"ack-onepilot\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"Tags\\\\\\\\\\\\\\":null},{\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"Tags\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"mse-enable\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\"}},{\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"kube-node-lease\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"Tags\\\\\\\\\\\\\\":null},{\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"kube-public\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"Tags\\\\\\\\\\\\\\":null},{\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"kube-system\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"Tags\\\\\\\\\\\\\\":null}]\\",\\n    \\"PilotStartTime\\": \\"2022-01-11T11:50:38.000+0000\\",\\n    \\"UpdateTime\\": \\"2022-01-12T05:24:31.000+0000\\",\\n    \\"Namespaces\\": [\\n      {\\n        \\"Name\\": \\"default\\",\\n        \\"MseNamespace\\": \\"default\\"\\n      }\\n    ]\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查询已接入服务治理的集群信息',
    ),
    'QueryGovernanceKubernetesCluster' => 
    array (
      'summary' => '获取微服务治理K8s集群信息列表。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterName',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'title' => 'Kubernetes集群名',
            'description' => 'Kubernetes集群名。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'example-cluster',
          ),
        ),
        1 => 
        array (
          'name' => 'ClusterId',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'title' => 'Kubernetes集群Id',
            'description' => 'Kubernetes集群ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'c24c9354acxxxxxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '当前页码',
            'description' => '当前页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页元素数量',
            'description' => '每页元素数量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '100',
            'minimum' => '5',
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '返回信息。

',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DE34D413-2B79-5E77-9696-36D875E822AD',
              ),
              'Data' => 
              array (
                'description' => '响应数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Result' => 
                  array (
                    'description' => '数据结构。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ClusterName' => 
                        array (
                          'title' => 'Kubernetes集群名',
                          'description' => '集群名字。',
                          'type' => 'string',
                          'example' => 'example-cluster',
                        ),
                        'ClusterId' => 
                        array (
                          'title' => 'Kubernetes集群Id',
                          'description' => '集群ID。',
                          'type' => 'string',
                          'example' => 'abcdef123456789',
                        ),
                        'Region' => 
                        array (
                          'title' => 'Kubernetes集群所在的地域',
                          'description' => '集群所在地域。',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                        'K8sVersion' => 
                        array (
                          'title' => 'Kubernetes集群版本',
                          'description' => '集群版本。',
                          'type' => 'string',
                          'example' => '1.22',
                        ),
                        'NamespaceInfos' => 
                        array (
                          'title' => 'Kubernetes集群命名空间信息（json格式）',
                          'description' => '命名空间信息。',
                          'type' => 'string',
                          'example' => '[{"Name":"ack-onepilot","Tags":{"name":"ack-onepilot"}}]',
                        ),
                        'PilotStartTime' => 
                        array (
                          'title' => 'pilot启动时间',
                          'description' => 'Pilot启动时间。',
                          'type' => 'string',
                          'example' => '2022-05-17T05:39:43.000+0000',
                        ),
                      ),
                    ),
                  ),
                  'TotalSize' => 
                  array (
                    'title' => '页码总数',
                    'description' => '集群总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'PageNumber' => 
                  array (
                    'title' => '当前页码',
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'title' => '页大小',
                    'description' => '当前页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                ),
              ),
              'Success' => 
              array (
                'title' => '是否成功',
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"DE34D413-2B79-5E77-9696-36D875E822AD\\",\\n  \\"Data\\": {\\n    \\"Result\\": [\\n      {\\n        \\"ClusterName\\": \\"example-cluster\\",\\n        \\"ClusterId\\": \\"abcdef123456789\\",\\n        \\"Region\\": \\"cn-shanghai\\",\\n        \\"K8sVersion\\": \\"1.22\\",\\n        \\"NamespaceInfos\\": \\"[{\\\\\\"Name\\\\\\":\\\\\\"ack-onepilot\\\\\\",\\\\\\"Tags\\\\\\":{\\\\\\"name\\\\\\":\\\\\\"ack-onepilot\\\\\\"}}]\\",\\n        \\"PilotStartTime\\": \\"2022-05-17T05:39:43.000+0000\\"\\n      }\\n    ],\\n    \\"TotalSize\\": 3,\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '获取微服务治理K8s集群信息列表',
    ),
    'ApplyTagPolicies' => 
    array (
      'summary' => '修改标签路由规则。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的MSE命名空间',
            'description' => '应用所属的MSE命名空间',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        2 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名字',
            'description' => '应用名字',
            'type' => 'string',
            'required' => false,
            'example' => 'example-app',
            'maxLength' => 64,
          ),
        ),
        3 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'deprecated' => true,
            'required' => true,
            'docRequired' => true,
            'example' => 'h5pohqu3gd@xxx',
          ),
        ),
        4 => 
        array (
          'name' => 'Rules',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => 'key为标签名。',
            'description' => '路由规则。',
            'type' => 'object',
            'required' => false,
            'additionalProperties' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Status' => 
                array (
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'description' => '状态。',
                  'enumValueTitles' => 
                  array (
                    0 => '未生效',
                    1 => '生效',
                    2 => '失效',
                  ),
                  'example' => '0',
                ),
                'Rate' => 
                array (
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '10',
                  'description' => '百分比。',
                ),
                'Enable' => 
                array (
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                  'description' => '是否开启。',
                ),
                'Tag' => 
                array (
                  'type' => 'string',
                  'required' => false,
                  'description' => '这个路由规则的环境。',
                  'example' => 'gray',
                ),
                'Name' => 
                array (
                  'title' => '路由规则名称。',
                  'description' => '路由规则名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'gray',
                ),
                'Id' => 
                array (
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '1',
                  'description' => '规则ID。',
                ),
                'InstanceNum' => 
                array (
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'description' => '实例数量。',
                  'example' => '10',
                ),
                'Rules' => 
                array (
                  'title' => '规则信息。',
                  'description' => '规则信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'springcloud' => 
                    array (
                      'title' => 'springcloud规则。',
                      'description' => 'springcloud规则。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'condition' => 
                          array (
                            'title' => '下面 items 各项中的逻辑运算关系。可选 AND 或者 OR。',
                            'description' => '下面 items 各项中的逻辑运算关系。可选 AND 或者 OR。',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'AND',
                          ),
                          'restItems' => 
                          array (
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'datum' => 
                                array (
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '10',
                                  'description' => 'rawvalue 等操作符需要比较的值。',
                                ),
                                'operator' => 
                                array (
                                  'title' => '操作符。rawvalue 表示直接比较，mode 表示取模，list 表示白名单。',
                                  'description' => '操作符。rawvalue 表示直接比较，mode 表示取模，list 表示白名单。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'rawvalue',
                                ),
                                'nameList' => 
                                array (
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'string',
                                    'required' => false,
                                    'description' => '名称。',
                                    'example' => 'test1',
                                  ),
                                  'required' => false,
                                  'description' => 'list 操作符需要的字段。',
                                ),
                                'cond' => 
                                array (
                                  'title' => '比较符号，可取 >=, <=, >, <, == 。',
                                  'description' => '比较符号，可取 >=, <=, >, <, == 。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '==',
                                ),
                                'divisor' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'required' => false,
                                  'example' => '30',
                                  'description' => 'mod 操作符需要的字段，除数。',
                                ),
                                'remainder' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'required' => false,
                                  'description' => '百分比操作需要的字段，百分比值。',
                                  'example' => '30',
                                ),
                                'rate' => 
                                array (
                                  'title' => '比例规则，20% 的流量路由到该标签对应的节点。',
                                  'description' => '比例规则，20% 的流量路由到该标签对应的节点。',
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'required' => false,
                                  'example' => '20',
                                ),
                                'type' => 
                                array (
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'test',
                                  'description' => '类型。',
                                ),
                                'name' => 
                                array (
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'key',
                                  'description' => '名称。',
                                ),
                                'value' => 
                                array (
                                  'type' => 'any',
                                  'required' => false,
                                  'example' => 'test',
                                  'description' => '值。',
                                ),
                              ),
                              'required' => false,
                            ),
                            'required' => false,
                          ),
                          'triggerPolicy' => 
                          array (
                            'type' => 'string',
                            'required' => false,
                            'enumValueTitles' => 
                            array (
                              'PERCENT' => '比例规则',
                              'CONTENT' => '内容匹配规则',
                            ),
                            'example' => 'CONTENT',
                            'description' => '策略类型。',
                          ),
                          'enable' => 
                          array (
                            'type' => 'boolean',
                            'required' => false,
                            'description' => '是否开启。',
                            'example' => 'true',
                          ),
                          'appId' => 
                          array (
                            'type' => 'string',
                            'required' => false,
                            'example' => '***@***',
                            'description' => '应用ID。',
                          ),
                          'priority' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int32',
                            'required' => false,
                            'description' => '优先级。',
                            'example' => '1',
                          ),
                          'tags' => 
                          array (
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'string',
                              'required' => false,
                              'example' => 'gray',
                              'description' => '标签。',
                            ),
                            'required' => false,
                            'description' => '标签列表。',
                          ),
                          'paths' => 
                          array (
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'string',
                              'required' => false,
                              'example' => '/hello',
                              'description' => '路径。',
                            ),
                            'required' => false,
                            'description' => '路径列表。',
                          ),
                          'path' => 
                          array (
                            'type' => 'string',
                            'required' => false,
                            'description' => '路径。',
                            'example' => '/hello',
                          ),
                        ),
                        'required' => false,
                      ),
                      'required' => false,
                    ),
                    'dubbo' => 
                    array (
                      'title' => 'dubbo 规则。',
                      'description' => 'dubbo 规则。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'appId' => 
                          array (
                            'type' => 'string',
                            'required' => false,
                            'description' => '应用ID。',
                            'example' => '***@***
',
                          ),
                          'tags' => 
                          array (
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'string',
                              'required' => false,
                              'example' => 'gray',
                              'description' => '标签。',
                            ),
                            'required' => false,
                            'description' => '标签列表。',
                          ),
                          'triggerPolicy' => 
                          array (
                            'type' => 'string',
                            'required' => false,
                            'description' => '策略类型。',
                            'example' => 'CONTENT',
                          ),
                          'serviceName' => 
                          array (
                            'title' => '服务名（接口）。',
                            'description' => '服务名（接口）。',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'HelloService',
                          ),
                          'group' => 
                          array (
                            'title' => 'dubbo服务分组。',
                            'description' => 'dubbo服务分组。',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'default',
                          ),
                          'version' => 
                          array (
                            'title' => 'dubbo服务版本。',
                            'description' => 'dubbo服务版本。',
                            'type' => 'string',
                            'required' => false,
                            'example' => '1.0.0',
                          ),
                          'methodName' => 
                          array (
                            'title' => 'dubbo服务的方法名。',
                            'description' => 'dubbo服务的方法名。',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'hello',
                          ),
                          'paramTypes' => 
                          array (
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'string',
                              'required' => false,
                              'example' => 'int',
                              'description' => '参数类型。',
                            ),
                            'required' => false,
                            'description' => '参数类型列表。',
                          ),
                          'condition' => 
                          array (
                            'title' => '下面 items 各项中的逻辑运算关系。可选 AND 或者 OR。',
                            'description' => '下面 items 各项中的逻辑运算关系。可选 AND 或者 OR。',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'AND',
                          ),
                          'argumentItems' => 
                          array (
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'operator' => 
                                array (
                                  'title' => '操作符。rawvalue 表示直接比较，mode 表示取模，list 表示白名单。',
                                  'description' => '操作符。rawvalue 表示直接比较，mode 表示取模，list 表示白名单。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'rawvalue',
                                ),
                                'nameList' => 
                                array (
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'string',
                                    'required' => false,
                                    'description' => '名称。',
                                    'example' => 'demo',
                                  ),
                                  'required' => false,
                                  'description' => '名称列表。',
                                ),
                                'datum' => 
                                array (
                                  'type' => 'string',
                                  'required' => false,
                                  'description' => 'rawvalue 等操作符需要比较的值。',
                                  'example' => '30
',
                                ),
                                'cond' => 
                                array (
                                  'title' => '比较符号，可取 >=, <=, >, <, == 。',
                                  'description' => '比较符号，可取 >=, <=, >, <, == 。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => '==',
                                ),
                                'divisor' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'required' => false,
                                  'description' => 'mod 操作符需要的字段，除数。',
                                  'example' => '30
',
                                ),
                                'remainder' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'required' => false,
                                  'example' => '30
',
                                  'description' => '百分比操作需要的字段，百分比值。',
                                ),
                                'rate' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'required' => false,
                                  'description' => '比例规则，20% 的流量路由到该标签对应的节点。',
                                  'example' => '10',
                                ),
                                'index' => 
                                array (
                                  'title' => '参数位置，从0开始。',
                                  'description' => '参数位置，从0开始。',
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'required' => false,
                                  'example' => '0',
                                ),
                                'expr' => 
                                array (
                                  'title' => '表达式，见其他字段解释。',
                                  'description' => '表达式，见其他字段解释。',
                                  'type' => 'string',
                                  'required' => false,
                                ),
                                'value' => 
                                array (
                                  'title' => '比较的值。表达式得到的值会跟这个值比较。如果 operator 是 list 白名单，value 的值用 \\",\\" 分隔，比如 1,2,3。',
                                  'description' => '比较的值。表达式得到的值会跟这个值比较。如果 operator 是 list 白名单，value 的值用 \\",\\" 分隔，比如 1,2,3。',
                                  'type' => 'any',
                                  'required' => false,
                                  'example' => '1,2,3',
                                ),
                              ),
                              'required' => false,
                              'description' => '参数内容。',
                            ),
                            'required' => false,
                            'description' => '参数内容列表。',
                          ),
                        ),
                        'required' => false,
                        'description' => '规则内容。',
                      ),
                      'required' => false,
                    ),
                  ),
                  'required' => false,
                ),
              ),
            ),
          ),
        ),
        5 => 
        array (
          'name' => 'NamespaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间ID，可以不填。',
            'type' => 'string',
            'required' => false,
            'example' => '12233****',
          ),
        ),
        6 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'Data' => 
              array (
                'description' => '数据概览',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据概览',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => '生效状态',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'InstanceNum' => 
                    array (
                      'description' => '实例数量',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'Remove' => 
                    array (
                      'description' => '是否删除成功。',
                      'type' => 'boolean',
                    ),
                    'CarryData' => 
                    array (
                      'description' => '是否为主键。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'Tag' => 
                    array (
                      'description' => '标签。',
                      'type' => 'string',
                      'example' => 'gray',
                    ),
                    'Name' => 
                    array (
                      'description' => '策略名称',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'Rules' => 
                    array (
                      'description' => '标签规则',
                      'type' => 'string',
                      'example' => '{\\"_base\\": {\\"rate\\": 100, \\"remove\\": true}, \\"blue\\": {\\"rate\\": 0}}',
                    ),
                    'Id' => 
                    array (
                      'description' => '主键ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12',
                    ),
                    'Rate' => 
                    array (
                      'description' => '比例',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'Enable' => 
                    array (
                      'description' => '开启或关闭。

- `true`：开启。
- `false`：关闭。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求结果',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"Data\\": [\\n    {\\n      \\"Status\\": 1,\\n      \\"InstanceNum\\": 1,\\n      \\"Remove\\": true,\\n      \\"CarryData\\": true,\\n      \\"Tag\\": \\"gray\\",\\n      \\"Name\\": \\"test\\",\\n      \\"Rules\\": \\"{\\\\\\\\\\\\\\"_base\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\"rate\\\\\\\\\\\\\\": 100, \\\\\\\\\\\\\\"remove\\\\\\\\\\\\\\": true}, \\\\\\\\\\\\\\"blue\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\"rate\\\\\\\\\\\\\\": 0}}\\",\\n      \\"Id\\": 12,\\n      \\"Rate\\": 10,\\n      \\"Enable\\": true\\n    }\\n  ],\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '修改标签路由规则',
    ),
    'ListApplicationsWithTagRules' => 
    array (
      'summary' => '通过ListApplicationsWithTagRules接口获取应用的路由规则。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页，第 N 页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页，每页 N 个。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '50',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据来源，默认edasmsc。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'edasmsc',
          ),
        ),
        4 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'example' => 'xjpc0h9h4d@xxx',
          ),
        ),
        5 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的MSE命名空间',
            'description' => '应用所属的MSE命名空间。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
            'default' => 'default',
          ),
        ),
        6 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名字',
            'description' => '应用名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
            'maxLength' => 64,
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7466566F-F30F-4A29-965D-3E0AF21D****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'Result' => 
                  array (
                    'description' => '数据结构。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Namespace' => 
                        array (
                          'title' => '应用所属的MSE命名空间',
                          'description' => '应用所属的MSE命名空间。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'AppName' => 
                        array (
                          'title' => '应用名',
                          'description' => '应用名。',
                          'type' => 'string',
                          'example' => 'service-lottery-core',
                        ),
                        'AppId' => 
                        array (
                          'description' => '应用ID。',
                          'type' => 'string',
                          'example' => 'daqijp6c31@xxx',
                        ),
                        'RouteRules' => 
                        array (
                          'description' => '规则列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '规则列表。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Status' => 
                              array (
                                'description' => '状态。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '1',
                              ),
                              'Rate' => 
                              array (
                                'title' => '比例规则，20% 的流量路由到该标签对应的节点。',
                                'description' => '比例。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '10',
                              ),
                              'Enable' => 
                              array (
                                'description' => '报警规则的启用状态。取值：

- `true`：启用。
- `false`：禁用。',
                                'type' => 'boolean',
                                'example' => 'true',
                              ),
                              'Tag' => 
                              array (
                                'title' => '标签名。',
                                'description' => '标签。',
                                'type' => 'string',
                                'example' => 'gray',
                              ),
                              'Name' => 
                              array (
                                'title' => '路由规则名称。',
                                'description' => '规则名称。',
                                'type' => 'string',
                                'example' => 'dubbo',
                              ),
                              'Id' => 
                              array (
                                'description' => '规则ID。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '653',
                              ),
                              'InstanceNum' => 
                              array (
                                'description' => '实例数量。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '1',
                              ),
                              'Rules' => 
                              array (
                                'description' => '规则的适用路由。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'springcloud' => 
                                  array (
                                    'title' => 'springcloud规则。',
                                    'description' => 'springcloud规则。',
                                    'type' => 'array',
                                    'items' => 
                                    array (
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'condition' => 
                                        array (
                                          'type' => 'string',
                                        ),
                                        'restItems' => 
                                        array (
                                          'type' => 'array',
                                          'items' => 
                                          array (
                                            'type' => 'object',
                                            'properties' => 
                                            array (
                                              'datum' => 
                                              array (
                                                'type' => 'string',
                                              ),
                                              'operator' => 
                                              array (
                                                'type' => 'string',
                                              ),
                                              'nameList' => 
                                              array (
                                                'type' => 'array',
                                                'items' => 
                                                array (
                                                  'type' => 'string',
                                                ),
                                              ),
                                              'cond' => 
                                              array (
                                                'type' => 'string',
                                              ),
                                              'divisor' => 
                                              array (
                                                'type' => 'integer',
                                                'format' => 'int32',
                                              ),
                                              'remainder' => 
                                              array (
                                                'type' => 'integer',
                                                'format' => 'int32',
                                              ),
                                              'rate' => 
                                              array (
                                                'type' => 'integer',
                                                'format' => 'int32',
                                              ),
                                              'type' => 
                                              array (
                                                'type' => 'string',
                                              ),
                                              'name' => 
                                              array (
                                                'type' => 'string',
                                              ),
                                              'value' => 
                                              array (
                                                'type' => 'string',
                                              ),
                                            ),
                                          ),
                                        ),
                                        'triggerPolicy' => 
                                        array (
                                          'type' => 'string',
                                        ),
                                        'enable' => 
                                        array (
                                          'type' => 'boolean',
                                        ),
                                        'appId' => 
                                        array (
                                          'type' => 'string',
                                        ),
                                        'priority' => 
                                        array (
                                          'type' => 'integer',
                                          'format' => 'int32',
                                        ),
                                        'tags' => 
                                        array (
                                          'type' => 'array',
                                          'items' => 
                                          array (
                                            'type' => 'string',
                                          ),
                                        ),
                                        'paths' => 
                                        array (
                                          'type' => 'array',
                                          'items' => 
                                          array (
                                            'type' => 'string',
                                          ),
                                        ),
                                        'path' => 
                                        array (
                                          'type' => 'string',
                                        ),
                                      ),
                                    ),
                                  ),
                                  'dubbo' => 
                                  array (
                                    'title' => 'dubbo 规则。',
                                    'description' => 'dubbo 规则。',
                                    'type' => 'array',
                                    'items' => 
                                    array (
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'appId' => 
                                        array (
                                          'type' => 'string',
                                        ),
                                        'tags' => 
                                        array (
                                          'type' => 'array',
                                          'items' => 
                                          array (
                                            'type' => 'string',
                                          ),
                                        ),
                                        'triggerPolicy' => 
                                        array (
                                          'type' => 'string',
                                        ),
                                        'serviceName' => 
                                        array (
                                          'title' => '服务名（接口）。',
                                          'description' => '服务名（接口）。',
                                          'type' => 'string',
                                        ),
                                        'group' => 
                                        array (
                                          'title' => 'dubbo服务分组。',
                                          'description' => 'dubbo服务分组。',
                                          'type' => 'string',
                                        ),
                                        'version' => 
                                        array (
                                          'title' => 'dubbo服务版本。',
                                          'description' => 'dubbo服务版本。',
                                          'type' => 'string',
                                        ),
                                        'methodName' => 
                                        array (
                                          'title' => 'dubbo服务方法名。',
                                          'description' => 'dubbo服务方法名。',
                                          'type' => 'string',
                                        ),
                                        'paramTypes' => 
                                        array (
                                          'type' => 'array',
                                          'items' => 
                                          array (
                                            'type' => 'string',
                                          ),
                                        ),
                                        'condition' => 
                                        array (
                                          'title' => '下面 items 各项中的逻辑运算关系。可选 AND 或者 OR。',
                                          'description' => '下面 items 各项中的逻辑运算关系。可选 AND 或者 OR。',
                                          'type' => 'string',
                                        ),
                                        'argumentItems' => 
                                        array (
                                          'type' => 'array',
                                          'items' => 
                                          array (
                                            'type' => 'object',
                                            'properties' => 
                                            array (
                                              'operator' => 
                                              array (
                                                'title' => '操作符。rawvalue 表示直接比较，mode 表示取模，list 表示白名单。',
                                                'description' => '操作符。rawvalue 表示直接比较，mode 表示取模，list 表示白名单。',
                                                'type' => 'string',
                                              ),
                                              'nameList' => 
                                              array (
                                                'type' => 'array',
                                                'items' => 
                                                array (
                                                  'type' => 'string',
                                                ),
                                              ),
                                              'datum' => 
                                              array (
                                                'type' => 'string',
                                              ),
                                              'cond' => 
                                              array (
                                                'title' => '比较符号，可取 >=, <=, >, <, == 。',
                                                'description' => '比较符号，可取 >=, <=, >, <, == 。',
                                                'type' => 'string',
                                              ),
                                              'divisor' => 
                                              array (
                                                'type' => 'integer',
                                                'format' => 'int32',
                                              ),
                                              'remainder' => 
                                              array (
                                                'type' => 'integer',
                                                'format' => 'int32',
                                              ),
                                              'rate' => 
                                              array (
                                                'type' => 'integer',
                                                'format' => 'int32',
                                              ),
                                              'index' => 
                                              array (
                                                'title' => '参数位置，从0开始。',
                                                'description' => '参数位置，从0开始。',
                                                'type' => 'integer',
                                                'format' => 'int32',
                                              ),
                                              'expr' => 
                                              array (
                                                'type' => 'string',
                                              ),
                                              'value' => 
                                              array (
                                                'type' => 'string',
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                                'example' => '{
  	"dubbo": [{
    "serviceName": "com.taobao.hsf.common.DemoService",
    "group": "",
    "version": "",
    "methodName": "sayHello",
    "condition": "AND",
    "argumentItems": [{
    	"index": 0,
    	"expr": "",
    	"operator": "rawvalue",
    	"value": "jim",
    	"cond": "=="
    }]
  	}]
  }',
                              ),
                            ),
                          ),
                        ),
                        'RouteStatus' => 
                        array (
                          'description' => '路由状态，取值如下：

- 0：关闭

- 1：开启',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                  'TotalSize' => 
                  array (
                    'description' => '总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageNumber' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '页面大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"7466566F-F30F-4A29-965D-3E0AF21D****\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Result\\": [\\n      {\\n        \\"Namespace\\": \\"default\\",\\n        \\"AppName\\": \\"service-lottery-core\\",\\n        \\"AppId\\": \\"daqijp6c31@xxx\\",\\n        \\"RouteRules\\": [\\n          {\\n            \\"Status\\": 1,\\n            \\"Rate\\": 10,\\n            \\"Enable\\": true,\\n            \\"Tag\\": \\"gray\\",\\n            \\"Name\\": \\"dubbo\\",\\n            \\"Id\\": 653,\\n            \\"InstanceNum\\": 1,\\n            \\"Rules\\": {\\n              \\"springcloud\\": [\\n                {\\n                  \\"condition\\": \\"\\",\\n                  \\"restItems\\": [\\n                    {\\n                      \\"datum\\": \\"\\",\\n                      \\"operator\\": \\"\\",\\n                      \\"nameList\\": [\\n                        \\"\\"\\n                      ],\\n                      \\"cond\\": \\"\\",\\n                      \\"divisor\\": 0,\\n                      \\"remainder\\": 0,\\n                      \\"rate\\": 0,\\n                      \\"type\\": \\"\\",\\n                      \\"name\\": \\"\\",\\n                      \\"value\\": \\"\\"\\n                    }\\n                  ],\\n                  \\"triggerPolicy\\": \\"\\",\\n                  \\"enable\\": true,\\n                  \\"appId\\": \\"\\",\\n                  \\"priority\\": 0,\\n                  \\"tags\\": [\\n                    \\"\\"\\n                  ],\\n                  \\"paths\\": [\\n                    \\"\\"\\n                  ],\\n                  \\"path\\": \\"\\"\\n                }\\n              ],\\n              \\"dubbo\\": [\\n                {\\n                  \\"appId\\": \\"\\",\\n                  \\"tags\\": [\\n                    \\"\\"\\n                  ],\\n                  \\"triggerPolicy\\": \\"\\",\\n                  \\"serviceName\\": \\"\\",\\n                  \\"group\\": \\"\\",\\n                  \\"version\\": \\"\\",\\n                  \\"methodName\\": \\"\\",\\n                  \\"paramTypes\\": [\\n                    \\"\\"\\n                  ],\\n                  \\"condition\\": \\"\\",\\n                  \\"argumentItems\\": [\\n                    {\\n                      \\"operator\\": \\"\\",\\n                      \\"nameList\\": [\\n                        \\"\\"\\n                      ],\\n                      \\"datum\\": \\"\\",\\n                      \\"cond\\": \\"\\",\\n                      \\"divisor\\": 0,\\n                      \\"remainder\\": 0,\\n                      \\"rate\\": 0,\\n                      \\"index\\": 0,\\n                      \\"expr\\": \\"\\",\\n                      \\"value\\": \\"\\"\\n                    }\\n                  ]\\n                }\\n              ]\\n            }\\n          }\\n        ],\\n        \\"RouteStatus\\": 1\\n      }\\n    ],\\n    \\"TotalSize\\": 1,\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10\\n  }\\n}","type":"json"}]',
      'title' => '获取应用的路由规则',
    ),
    'GetAppMessageQueueRoute' => 
    array (
      'summary' => '获取应用消息灰度相关的信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群所在地域，包括但不限于如下地域：
- `cn-hangzhou`：杭州
- `cn-beijing`：北京
- `cn-shanghai`：上海
- `cn-zhangjiakou`：张家口
- `cn-shenzhen`：深圳',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'hkhon1po62@c3df23522baa898',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'MSE命名空间名字',
            'description' => 'MSE命名空间名字',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        3 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称',
            'description' => '应用名称',
            'type' => 'string',
            'required' => false,
            'example' => 'example-app',
            'maxLength' => 64,
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4B00BCB0-105F-5A2A-B75B-641C8E9B18FC',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'AppId' => 
                  array (
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'hkhon1po62@54e1f42f37cd65a',
                  ),
                  'Region' => 
                  array (
                    'description' => '地域。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'Enable' => 
                  array (
                    'description' => '开启或关闭。

- `true`：开启。
- `false`：关闭。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Tags' => 
                  array (
                    'description' => '此应用的未打标环境，不会消费的标签。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '此应用的未打标环境，不会消费的标签',
                      'type' => 'string',
                      'example' => 'gray',
                    ),
                  ),
                  'FilterSide' => 
                  array (
                    'description' => '消息灰度过滤侧。',
                    'type' => 'string',
                    'example' => 'Server',
                    'default' => 'Server',
                    'enum' => 
                    array (
                      0 => 'Server',
                      1 => 'Client',
                    ),
                  ),
                ),
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：true：请求成功。                                 false：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"4B00BCB0-105F-5A2A-B75B-641C8E9B18FC\\",\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": {\\n    \\"AppId\\": \\"hkhon1po62@54e1f42f37cd65a\\",\\n    \\"Region\\": \\"cn-hangzhou\\",\\n    \\"Enable\\": true,\\n    \\"Tags\\": [\\n      \\"gray\\"\\n    ],\\n    \\"FilterSide\\": \\"Server\\"\\n  },\\n  \\"Code\\": 200,\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '获取应用消息灰度信息',
    ),
    'UpdateMessageQueueRoute' => 
    array (
      'summary' => '更新应用消息灰度的配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '此应用的未打标环境，忽略的标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '此应用的未打标环境，忽略的标签。',
              'type' => 'string',
              'required' => false,
              'example' => 'gray',
            ),
            'required' => false,
            'docRequired' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息灰度的启用状态。取值：

- `true`：启用。
- `false`：禁用。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'hkhon1po62@c3df23522baa898',
          ),
        ),
        4 => 
        array (
          'name' => 'FilterSide',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息灰度过滤侧。',
            'type' => 'string',
            'required' => false,
            'example' => 'Server',
            'default' => 'Server',
            'enum' => 
            array (
              0 => 'Server',
              1 => 'Client',
            ),
          ),
        ),
        5 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'MSE命名空间名字',
            'description' => 'MSE命名空间名字',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        6 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称',
            'description' => '应用名称',
            'type' => 'string',
            'required' => false,
            'example' => 'example-app',
            'maxLength' => 64,
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '本次请求的ID。',
                'type' => 'string',
                'example' => 'E3919C62-876A-5926-A0BC-18351A24FA35',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Data' => 
              array (
                'description' => '节点数据。',
                'type' => 'string',
                'example' => 'True',
              ),
              'Code' => 
              array (
                'description' => '状态码。状态码为200表示成功，其余取值表示失败。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"RequestId\\": \\"E3919C62-876A-5926-A0BC-18351A24FA35\\",\\n  \\"Message\\": \\"success\\",\\n  \\"Data\\": \\"True\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新应用消息灰度的配置',
    ),
    'AddMockRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'agent-auto-test-sc',
          ),
        ),
        1 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则来源',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'edasmsc',
          ),
        ),
        3 => 
        array (
          'name' => 'ProviderAppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务提供者应用ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'dcqtkuhnc4@66e5235415****',
          ),
        ),
        4 => 
        array (
          'name' => 'ProviderAppName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务提供者应用名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'demo-cartservice',
          ),
        ),
        5 => 
        array (
          'name' => 'ExtraJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{}',
          ),
        ),
        6 => 
        array (
          'name' => 'ScMockItems',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '入参数，支持JSON格式。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[]',
          ),
        ),
        7 => 
        array (
          'name' => 'DubboMockItems',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '回收站中的项目。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[]',
          ),
        ),
        8 => 
        array (
          'name' => 'ConsumerAppIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户自定义应用ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[{\\"appName\\":\\"provide\\",\\"appId\\":\\"bst8l6o735@f6d8aaf6e56e67d\\"}]',
          ),
        ),
        9 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警规则的启用状态。取值：

- `true`：启用。
- `false`：禁用。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        10 => 
        array (
          'name' => 'MockType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '慢调用RT。取值如下：

- 15：15ms
- 30：30ms
- 60：60ms
- 120：120ms',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        11 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'NamespaceId' => 
                  array (
                    'description' => '命名空间ID。',
                    'type' => 'string',
                    'example' => 'cn-shanghai',
                  ),
                  'ScMockItemJson' => 
                  array (
                    'description' => 'HTTP协议Mock规则。',
                    'type' => 'string',
                    'example' => '[{"oper":"return+json","Path":"/mock","Value":"{\\n \\"date\\": \\"2021-09-10T07:45:12.357+0000\\",\\n \\"name\\": \\"name\\",\\n \\"id\\": \\"1\\"\\n}","Method":"GET","Condition":"AND","Timeout":1,"ArgumentMockItems":[{"type":"param","name":"id","value":"1","cond":"==","operator":"rawvalue"},{"type":"param","name":"name","value":"aliyun","cond":"==","operator":"rawvalue"}]}]',
                  ),
                  'ConsumerAppName' => 
                  array (
                    'description' => '需查询的应用名称。',
                    'type' => 'string',
                    'example' => 'demo-xxxx',
                  ),
                  'ConsumerAppId' => 
                  array (
                    'description' => '服务消费者应用ID。',
                    'type' => 'string',
                    'example' => 'hkhon1po62@a000601b265xxxx',
                  ),
                  'AccountId' => 
                  array (
                    'description' => '账户ID。',
                    'type' => 'string',
                    'example' => '178432728867xxxx',
                  ),
                  'ExtraJson' => 
                  array (
                    'description' => '描述。',
                    'type' => 'string',
                    'example' => 'desc',
                  ),
                  'Source' => 
                  array (
                    'description' => '来源',
                    'type' => 'string',
                    'example' => 'edasmsc',
                  ),
                  'Region' => 
                  array (
                    'description' => '地域。',
                    'type' => 'string',
                    'example' => 'cn-shanghai',
                  ),
                  'ProviderAppId' => 
                  array (
                    'description' => '服务提供者应用ID。',
                    'type' => 'string',
                    'example' => 'hkhon1po62@a000601b265xxxx',
                  ),
                  'ProviderAppName' => 
                  array (
                    'description' => '服务提供者应用名称。',
                    'type' => 'string',
                    'example' => 'demo-xxxx',
                  ),
                  'Name' => 
                  array (
                    'description' => '名称。',
                    'type' => 'string',
                    'example' => 'mse-bc1a29b0-160230875****-reg-center-0-1',
                  ),
                  'Id' => 
                  array (
                    'description' => '规则ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '275',
                  ),
                  'Enable' => 
                  array (
                    'description' => '开启或关闭。

- `true`：开启。
- `false`：关闭。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'MockType' => 
                  array (
                    'description' => '模型类型，取值如下：

- `[unk]0[unk]`：桌面模型
- `[unk]1[unk]`：移动端模型',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '0',
                  ),
                ),
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"Data\\": {\\n    \\"NamespaceId\\": \\"cn-shanghai\\",\\n    \\"ScMockItemJson\\": \\"[{\\\\\\"oper\\\\\\":\\\\\\"return+json\\\\\\",\\\\\\"Path\\\\\\":\\\\\\"/mock\\\\\\",\\\\\\"Value\\\\\\":\\\\\\"{\\\\\\\\n \\\\\\\\\\\\\\"date\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"2021-09-10T07:45:12.357+0000\\\\\\\\\\\\\\",\\\\\\\\n \\\\\\\\\\\\\\"name\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"name\\\\\\\\\\\\\\",\\\\\\\\n \\\\\\\\\\\\\\"id\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"1\\\\\\\\\\\\\\"\\\\\\\\n}\\\\\\",\\\\\\"Method\\\\\\":\\\\\\"GET\\\\\\",\\\\\\"Condition\\\\\\":\\\\\\"AND\\\\\\",\\\\\\"Timeout\\\\\\":1,\\\\\\"ArgumentMockItems\\\\\\":[{\\\\\\"type\\\\\\":\\\\\\"param\\\\\\",\\\\\\"name\\\\\\":\\\\\\"id\\\\\\",\\\\\\"value\\\\\\":\\\\\\"1\\\\\\",\\\\\\"cond\\\\\\":\\\\\\"==\\\\\\",\\\\\\"operator\\\\\\":\\\\\\"rawvalue\\\\\\"},{\\\\\\"type\\\\\\":\\\\\\"param\\\\\\",\\\\\\"name\\\\\\":\\\\\\"name\\\\\\",\\\\\\"value\\\\\\":\\\\\\"aliyun\\\\\\",\\\\\\"cond\\\\\\":\\\\\\"==\\\\\\",\\\\\\"operator\\\\\\":\\\\\\"rawvalue\\\\\\"}]}]\\",\\n    \\"ConsumerAppName\\": \\"demo-xxxx\\",\\n    \\"ConsumerAppId\\": \\"hkhon1po62@a000601b265xxxx\\",\\n    \\"AccountId\\": \\"178432728867xxxx\\",\\n    \\"ExtraJson\\": \\"desc\\",\\n    \\"Source\\": \\"edasmsc\\",\\n    \\"Region\\": \\"cn-shanghai\\",\\n    \\"ProviderAppId\\": \\"hkhon1po62@a000601b265xxxx\\",\\n    \\"ProviderAppName\\": \\"demo-xxxx\\",\\n    \\"Name\\": \\"mse-bc1a29b0-160230875****-reg-center-0-1\\",\\n    \\"Id\\": 275,\\n    \\"Enable\\": true,\\n    \\"MockType\\": 0\\n  },\\n  \\"Code\\": 200,\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '创建Mock规则',
      'summary' => '创建Mock规则。',
    ),
    'GetPlugins' => 
    array (
      'summary' => '获取插件市场插件。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-0adf3ad751284cc69fcf9669fba*****',
          ),
        ),
        1 => 
        array (
          'name' => 'Category',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件类型：

- 自定义：0

- 认证权限：1

- 安全防护：2

- 传输协议：3

- 流量管控：4

- 流量观测：5',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'EnableOnly',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否已启用。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'key-auth',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

zh：中文
en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<GatewayPlugin>>',
            'description' => '返回数据。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '03A3E2F4-6804-5663-9D5D-2EC47A1*****
',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'Code。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '500',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP STATUS编码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '接口信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息。',
                'type' => 'string',
                'example' => 'message',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '对象。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Id' => 
                    array (
                      'description' => '插件ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'PrimaryUser' => 
                    array (
                      'description' => '创建人ID。',
                      'type' => 'string',
                      'example' => '123',
                    ),
                    'Category' => 
                    array (
                      'description' => '插件类型：

自定义：0

认证权限：1

安全防护：2

传输协议：3

流量管控：4

流量观测：5',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'Name' => 
                    array (
                      'description' => '插件名称。',
                      'type' => 'string',
                      'example' => 'key-auth',
                    ),
                    'Version' => 
                    array (
                      'description' => '插件版本。',
                      'type' => 'string',
                      'example' => 'v1',
                    ),
                    'Summary' => 
                    array (
                      'description' => '插件概要。',
                      'type' => 'string',
                      'example' => '这是一个插件',
                    ),
                    'Phase' => 
                    array (
                      'description' => '插件执行阶段：

- 默认阶段：0

- 认证阶段：1

- 鉴权阶段：2

- 统计阶段：3',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'Priority' => 
                    array (
                      'description' => '插件执行优先级。数值越大，优先级越高。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'ConfigCheck' => 
                    array (
                      'description' => '配置校验。',
                      'type' => 'string',
                      'example' => '# 配置必须字段的校验，如下例所示，要求插件配置必须存在 "name"、"age"、“friends” 字段
name: John
age: 18
friends:
- David
- Anne
',
                    ),
                    'WasmLang' => 
                    array (
                      'description' => 'Wasm实现语言：

- C++：0

- TinyGo：1

- Rust：2

- AssemblyScript：3

- Zig：4',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'PublishState' => 
                    array (
                      'description' => '发布状态：
- 0：成功
- 1：发布中
- 2：发布失败',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'WasmFile' => 
                    array (
                      'description' => 'Wasm插件OSS。',
                      'type' => 'string',
                      'example' => 'https://mse-shared-cn-hangzhou.oss-cn-hangzhou.aliyuncs.com/cfg/import/1917515******/gw-0adf3ad751284cc69fcf9669fba*****/2022/11/02/4d390496-2c17-4b42-a479-f9068ba****/16673573***5.wasm',
                    ),
                    'Status' => 
                    array (
                      'description' => '启用状态。

- 未启用：0

- 启用：1',
                      'type' => 'string',
                      'example' => '1',
                    ),
                    'Mode' => 
                    array (
                      'description' => '插件语言：

- 0：WASM插件
- 2：LUA插件',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'MaxVersion' => 
                    array (
                      'description' => '最新版本。',
                      'type' => 'string',
                      'example' => '1.0.0',
                    ),
                    'NewVersionPublishingFlag' => 
                    array (
                      'description' => '最新版本是否正在发布中。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"03A3E2F4-6804-5663-9D5D-2EC47A1*****\\\\n\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"500\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"message\\",\\n  \\"Data\\": [\\n    {\\n      \\"Id\\": 1,\\n      \\"PrimaryUser\\": \\"123\\",\\n      \\"Category\\": 0,\\n      \\"Name\\": \\"key-auth\\",\\n      \\"Version\\": \\"v1\\",\\n      \\"Summary\\": \\"这是一个插件\\",\\n      \\"Phase\\": 1,\\n      \\"Priority\\": 1,\\n      \\"ConfigCheck\\": \\"# 配置必须字段的校验，如下例所示，要求插件配置必须存在 \\\\\\"name\\\\\\"、\\\\\\"age\\\\\\"、“friends” 字段\\\\nname: John\\\\nage: 18\\\\nfriends:\\\\n- David\\\\n- Anne\\\\n\\",\\n      \\"WasmLang\\": 0,\\n      \\"PublishState\\": 1,\\n      \\"WasmFile\\": \\"https://mse-shared-cn-hangzhou.oss-cn-hangzhou.aliyuncs.com/cfg/import/1917515******/gw-0adf3ad751284cc69fcf9669fba*****/2022/11/02/4d390496-2c17-4b42-a479-f9068ba****/16673573***5.wasm\\",\\n      \\"Status\\": \\"1\\",\\n      \\"Mode\\": 0,\\n      \\"MaxVersion\\": \\"1.0.0\\",\\n      \\"NewVersionPublishingFlag\\": false\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取插件列表',
    ),
    'GetPluginConfig' => 
    array (
      'summary' => '获取插件配置。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '128638',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseKZMVG1',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关UniqueId。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-ubuwqygbq4783gqb2y3f87q****
',
          ),
        ),
        1 => 
        array (
          'name' => 'PluginId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关插件ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '123',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

zh：中文
en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<GatewayPluginConfigDetail>',
            'description' => 'RestResult<GatewayPluginConfigDetail>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '03A3E2F4-6804-5663-9D5D-2EC47A1*****',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'Code。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '500',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP STATUS编码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '接口信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误编码。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息。',
                'type' => 'string',
                'example' => 'message',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '插件ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'PrimaryUser' => 
                  array (
                    'description' => '创建人ID。',
                    'type' => 'string',
                    'example' => '123',
                  ),
                  'Type' => 
                  array (
                    'description' => '插件类型：
- 0：http filter
- 1：network filte',
                    'type' => 'integer',
                    'format' => 'int32',
                    'enumValueTitles' => 
                    array (
                    ),
                    'example' => '0',
                  ),
                  'Category' => 
                  array (
                    'description' => '插件目录。

自定义：0

认证权限：1

安全防护：2

传输协议：3

流量管控：4

流量观测：5',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Name' => 
                  array (
                    'description' => '插件名称。',
                    'type' => 'string',
                    'example' => 'name',
                  ),
                  'Version' => 
                  array (
                    'description' => '插件版本。',
                    'type' => 'string',
                    'example' => 'v1',
                  ),
                  'Summary' => 
                  array (
                    'description' => '插件概要。',
                    'type' => 'string',
                    'example' => '这是一个插件。',
                  ),
                  'Readme' => 
                  array (
                    'description' => 'README描述。',
                    'type' => 'string',
                    'example' => 'read me',
                  ),
                  'ReadmeEn' => 
                  array (
                    'description' => '英文README描述。',
                    'type' => 'string',
                    'example' => 'read me',
                  ),
                  'ConfigExample' => 
                  array (
                    'title' => '插件配置样例',
                    'description' => '插件配置样例',
                    'type' => 'string',
                  ),
                  'Phase' => 
                  array (
                    'description' => '插件执行阶段。

默认阶段：0

认证阶段：1

鉴权阶段：2

统计阶段：3',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Priority' => 
                  array (
                    'description' => '插件执行优先级。数值越大，优先级越高。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ConfigCheck' => 
                  array (
                    'description' => '配置校验。',
                    'type' => 'string',
                    'example' => '# 配置必须字段的校验，如下例所示，要求插件配置必须存在 "name"、"age"、“friends” 字段
name: John
age: 18
friends:
- David
- Anne',
                  ),
                  'Mode' => 
                  array (
                    'description' => '模式。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'WasmLang' => 
                  array (
                    'description' => 'wasm实现语言。

C++：0

TinyGo：1

Rust：2

AssemblyScript：3

Zig：4',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'ImageName' => 
                  array (
                    'description' => '镜像名称。',
                    'type' => 'string',
                    'example' => 'name',
                  ),
                  'PublishState' => 
                  array (
                    'description' => '发布状态。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Status' => 
                  array (
                    'description' => '启用状态。

未启用：0

启用：1',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'GatewayConfigList' => 
                  array (
                    'title' => '网关插件配置规则列表。规则排列顺序为路由级规则、域名级规则、实例级规则',
                    'description' => '网关插件配置列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '插件配置ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'GatewayId' => 
                        array (
                          'description' => '网关ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关UniqueId。',
                          'type' => 'string',
                          'example' => 'gw-ubuwqygbq4783gqb2y3f87q****',
                        ),
                        'PluginId' => 
                        array (
                          'description' => '网关插件ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'Enable' => 
                        array (
                          'description' => '是否开启。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Config' => 
                        array (
                          'description' => '插件配置。',
                          'type' => 'string',
                          'example' => '# 配置必须字段的校验，如下例所示，要求插件配置必须存在 "name"、"age"、“friends” 字段
name: John
age: 18
friends:
- David
- Anne',
                        ),
                        'ConfigLevel' => 
                        array (
                          'description' => '插件应用范围。

全局：0

域名：1

路由：2',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ResourceList' => 
                        array (
                          'title' => '域名/路由资源列表（根据ConfigLevel区分）',
                          'description' => '域名/路由资源列表（根据ConfigLevel区分）',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Id' => 
                              array (
                                'type' => 'integer',
                                'format' => 'int64',
                              ),
                              'Name' => 
                              array (
                                'title' => '资源名称（域名/路由名）',
                                'description' => '资源名称（域名/路由名）',
                                'type' => 'string',
                                'example' => 'test-route',
                              ),
                            ),
                          ),
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '1667309705000',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '更新时间。',
                          'type' => 'string',
                          'example' => '1667309705000',
                        ),
                      ),
                    ),
                  ),
                  'RouteConfigStartIndex' => 
                  array (
                    'title' => '路由级规则在GatewayConfigList中的起始下标。若不存在路由级规则，值为-1',
                    'description' => '路由级规则在GatewayConfigList中的起始下标。若不存在路由级规则，值为-1',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'DomainConfigStartIndex' => 
                  array (
                    'title' => '域名级规则在GatewayConfigList中的起始下标。若不存在域名级规则，值为-1',
                    'description' => '域名级规则在GatewayConfigList中的起始下标。若不存在域名级规则，值为-1',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'GatewayConfigStartIndex' => 
                  array (
                    'title' => '实例规则在GatewayConfigList中的下标。若不存在实例级规则，值为-1',
                    'description' => '实例规则在GatewayConfigList中的下标。若不存在实例级规则，值为-1',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '7',
                  ),
                  'VersionJson' => 
                  array (
                    'description' => '网关插件版本信息列表。',
                    'type' => 'string',
                    'example' => '[{"id":1, "version": "1.0.0"}]',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"03A3E2F4-6804-5663-9D5D-2EC47A1*****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"500\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"message\\",\\n  \\"Data\\": {\\n    \\"Id\\": 1,\\n    \\"PrimaryUser\\": \\"123\\",\\n    \\"Type\\": 0,\\n    \\"Category\\": 0,\\n    \\"Name\\": \\"name\\",\\n    \\"Version\\": \\"v1\\",\\n    \\"Summary\\": \\"这是一个插件。\\",\\n    \\"Readme\\": \\"read me\\",\\n    \\"ReadmeEn\\": \\"read me\\",\\n    \\"ConfigExample\\": \\"\\",\\n    \\"Phase\\": 0,\\n    \\"Priority\\": 1,\\n    \\"ConfigCheck\\": \\"# 配置必须字段的校验，如下例所示，要求插件配置必须存在 \\\\\\"name\\\\\\"、\\\\\\"age\\\\\\"、“friends” 字段\\\\nname: John\\\\nage: 18\\\\nfriends:\\\\n- David\\\\n- Anne\\",\\n    \\"Mode\\": 0,\\n    \\"WasmLang\\": 0,\\n    \\"ImageName\\": \\"name\\",\\n    \\"PublishState\\": 1,\\n    \\"Status\\": \\"1\\",\\n    \\"GatewayConfigList\\": [\\n      {\\n        \\"Id\\": 1,\\n        \\"GatewayId\\": 1,\\n        \\"GatewayUniqueId\\": \\"gw-ubuwqygbq4783gqb2y3f87q****\\",\\n        \\"PluginId\\": 1,\\n        \\"Enable\\": true,\\n        \\"Config\\": \\"# 配置必须字段的校验，如下例所示，要求插件配置必须存在 \\\\\\"name\\\\\\"、\\\\\\"age\\\\\\"、“friends” 字段\\\\nname: John\\\\nage: 18\\\\nfriends:\\\\n- David\\\\n- Anne\\",\\n        \\"ConfigLevel\\": 0,\\n        \\"ResourceList\\": [\\n          {\\n            \\"Id\\": 0,\\n            \\"Name\\": \\"test-route\\"\\n          }\\n        ],\\n        \\"GmtCreate\\": \\"1667309705000\\",\\n        \\"GmtModified\\": \\"1667309705000\\"\\n      }\\n    ],\\n    \\"RouteConfigStartIndex\\": 0,\\n    \\"DomainConfigStartIndex\\": 5,\\n    \\"GatewayConfigStartIndex\\": 7,\\n    \\"VersionJson\\": \\"[{\\\\\\"id\\\\\\":1, \\\\\\"version\\\\\\": \\\\\\"1.0.0\\\\\\"}]\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取插件配置',
    ),
    'UpdatePluginConfig' => 
    array (
      'summary' => '更新插件配置。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
        'abilityTreeCode' => '128635',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseKZMVG1',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件配置ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'deprecated' => true,
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关UniqueId。',
            'type' => 'string',
            'required' => false,
            'example' => 'gw-ubuwqygbq4783gqb2y3f87q****',
          ),
        ),
        3 => 
        array (
          'name' => 'PluginId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关插件ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '2',
          ),
        ),
        4 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'Config',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件配置。Wasm插件配置内容是YAML格式，Lua插件配置内容是Lua代码。',
            'type' => 'string',
            'required' => false,
            'example' => '# 配置必须字段的校验，如下例所示，要求插件配置必须存在 "name"、"age"、“friends” 字段
name: John
age: 18
friends:
- David
- Anne
',
          ),
        ),
        6 => 
        array (
          'name' => 'ConfigLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件应用范围。

- 全局：0

- 路由：1

- 域名：2',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'ResourceIdList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '域名ID/路由ID列表（根据ConfigLevel区分）',
            'description' => '域名ID/路由ID列表（根据ConfigLevel区分）',
            'type' => 'array',
            'items' => 
            array (
              'title' => 'ID值',
              'description' => 'ID值',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '200',
            ),
            'required' => false,
          ),
        ),
        8 => 
        array (
          'name' => 'GmtCreate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建时间。',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'example' => '1667309705000',
          ),
        ),
        9 => 
        array (
          'name' => 'GmtModified',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '更新时间。',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'example' => '1667309705000',
          ),
        ),
        10 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

zh：中文
en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<Long>',
            'description' => 'RestResult<Long>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '03A3E2F4-6804-5663-9D5D-2EC47A1*****',
              ),
              'Success' => 
              array (
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'Code。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '500',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP STATUS编码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '接口信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'DynamicMessage' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'Data' => 
              array (
                'description' => 'id值。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"03A3E2F4-6804-5663-9D5D-2EC47A1*****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"500\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"DynamicMessage\\": \\"code\\",\\n  \\"Data\\": 1\\n}","type":"json"}]',
      'title' => '更新插件配置',
    ),
    'AddSSLCert' => 
    array (
      'summary' => '网关域名关联证书，证书可托管在云盾服务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '0',
          ),
        ),
        1 => 
        array (
          'name' => 'CertIdentifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '证书ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '5213641-cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-c70622ff52fe49beb29bea9a6f52****',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E1CC74F0-5BDE-5220-A031-5CA622D80723',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '	
返回结果码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。                                
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据结构，关联是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E1CC74F0-5BDE-5220-A031-5CA622D80723\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '添加网关域名关联证书',
    ),
    'AddGatewayDomain' => 
    array (
      'summary' => '添加网关关联域名。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MustHttps',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启HTTPS。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        1 => 
        array (
          'name' => 'CertIdentifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '证书ID。',
            'type' => 'string',
            'required' => false,
            'example' => '6828169-cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test.com',
          ),
        ),
        3 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型：
- `HTTP`
- `HTTPS`',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HTTP',
          ),
        ),
        4 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-86575c0bc9f04ecfbacb92b8e392****',
          ),
        ),
        5 => 
        array (
          'name' => 'Http2',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启`Http2`：
- `open`：开启`Http2`。
- `close`：关闭`Http2`。
- `globalConfig`：使用全局配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'close',
          ),
        ),
        6 => 
        array (
          'name' => 'TlsMax',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Tls最大版本。',
            'type' => 'string',
            'required' => false,
            'example' => 'TLS 1.3',
          ),
        ),
        7 => 
        array (
          'name' => 'TlsMin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Tls最小版本。',
            'type' => 'string',
            'required' => false,
            'example' => 'TLS 1.0',
          ),
        ),
        8 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '16BA802F-B848-55DF-9F57-CD71B7272D1F',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"16BA802F-B848-55DF-9F57-CD71B7272D1F\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 100\\n}","type":"json"}]',
      'title' => '添加网关关联域名',
    ),
    'DeleteGatewayDomain' => 
    array (
      'summary' => '删除网关关联域名。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '109',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-90392d768a3847a7b804c505254d****',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '39016EAC-6EDB-52FE-AE20-4B013DF236FF',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '域名ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2',
                  ),
                  'Name' => 
                  array (
                    'description' => '名称。',
                    'type' => 'string',
                    'example' => 'CONTACTINFO',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。',
                    'type' => 'string',
                    'example' => 'gw-7ea3da97b96543e19f6c597c****',
                  ),
                  'GatewayId' => 
                  array (
                    'description' => '网关ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '253',
                  ),
                  'Protocol' => 
                  array (
                    'description' => '协议。',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'MustHttps' => 
                  array (
                    'description' => '是否允许HTTP探测。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'CertIdentifier' => 
                  array (
                    'description' => '证书ID。',
                    'type' => 'string',
                    'example' => '243',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '域名创建时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '最后修改时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"39016EAC-6EDB-52FE-AE20-4B013DF236FF\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 2,\\n    \\"Name\\": \\"CONTACTINFO\\",\\n    \\"GatewayUniqueId\\": \\"gw-7ea3da97b96543e19f6c597c****\\",\\n    \\"GatewayId\\": 253,\\n    \\"Protocol\\": \\"HTTP\\",\\n    \\"MustHttps\\": true,\\n    \\"CertIdentifier\\": \\"243\\",\\n    \\"GmtCreate\\": \\"2022-01-07T10:07:57.000+0000\\",\\n    \\"GmtModified\\": \\"2022-01-07T10:07:57.000+0000\\"\\n  }\\n}","type":"json"}]',
      'title' => '删除网关关联域名',
    ),
    'UpdateSSLCert' => 
    array (
      'summary' => '更换证书。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '210',
          ),
        ),
        1 => 
        array (
          'name' => 'CertIdentifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '证书ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5951436-cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-2a99625886d54722be94d92e9a69****',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回体结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CA689BED-08F3-54C2-A206-A0924E2ACA0A',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '是否更新成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CA689BED-08F3-54C2-A206-A0924E2ACA0A\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '更换证书',
    ),
    'UpdateGatewayDomain' => 
    array (
      'summary' => '修改关联域名信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型。

- HTTPS
- HTTP',
            'type' => 'string',
            'required' => false,
            'example' => 'HTTPS',
          ),
        ),
        1 => 
        array (
          'name' => 'MustHttps',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '强制HTTPS',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'CertIdentifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '证书ID。',
            'type' => 'string',
            'required' => false,
            'example' => '6209108-cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要更新的域名id。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '94',
          ),
        ),
        4 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-86575c0bc9f04ecfbacb92b8e392****',
          ),
        ),
        5 => 
        array (
          'name' => 'Http2',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启`Http2`。
- `open`：开启`Http2`。
- `close`：关闭`Http2`。
- `globalConfig`：使用全局配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'close',
          ),
        ),
        6 => 
        array (
          'name' => 'TlsMax',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Tls最大版本。',
            'type' => 'string',
            'required' => false,
            'example' => 'TLS 1.3',
          ),
        ),
        7 => 
        array (
          'name' => 'TlsMin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Tls最小版本。',
            'type' => 'string',
            'required' => false,
            'example' => 'TLS 1.0',
          ),
        ),
        8 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6F6C6DE4-DB33-5791-B210-ED2E6FEFFE6F',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '403',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '94',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6F6C6DE4-DB33-5791-B210-ED2E6FEFFE6F\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 403,\\n  \\"Success\\": true,\\n  \\"Data\\": 94\\n}","type":"json"}]',
      'title' => '更新关联域名信息',
    ),
    'ListSSLCert' => 
    array (
      'summary' => '获取网关证书列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-3f97e2989c344f35ab3fd62b19f1****',
          ),
        ),
        1 => 
        array (
          'name' => 'CertName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '按证书名称模糊搜索',
            'description' => '按证书名称模糊搜索',
            'type' => 'string',
            'required' => false,
            'example' => 'certabc',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CAA9A229-141D-5FBA-AC5C-516C02026A11',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '状态码，200表示返回成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CertIdentifier' => 
                    array (
                      'description' => '证书ID。',
                      'type' => 'string',
                      'example' => '1234',
                    ),
                    'CertName' => 
                    array (
                      'description' => '证书名称。',
                      'type' => 'string',
                      'example' => 'test.com',
                    ),
                    'CommonName' => 
                    array (
                      'description' => '绑定域名。',
                      'type' => 'string',
                      'example' => '*.test.com',
                    ),
                    'Sans' => 
                    array (
                      'description' => 'SSL证书。',
                      'type' => 'string',
                      'example' => 'SSL',
                    ),
                    'BeforeDate' => 
                    array (
                      'description' => '证书生效时间（Unix毫秒时间戳）。',
                      'type' => 'string',
                      'example' => '1694503184803',
                    ),
                    'AfterDate' => 
                    array (
                      'description' => '证书到期时间（Unix毫秒时间戳）。',
                      'type' => 'string',
                      'example' => '1726039184803',
                    ),
                    'Algorithm' => 
                    array (
                      'description' => '算法。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'Issuer' => 
                    array (
                      'description' => '颁发者。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'GmtBefore' => 
                    array (
                      'description' => '证书生效时间（GMT时间戳）。',
                      'type' => 'string',
                      'example' => '2023-09-12T07:19:44.803+0000',
                    ),
                    'GmtAfter' => 
                    array (
                      'description' => '证书到期时间（GMT时间戳）。',
                      'type' => 'string',
                      'example' => '2024-09-11T07:19:44.803+0000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CAA9A229-141D-5FBA-AC5C-516C02026A11\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"CertIdentifier\\": \\"1234\\",\\n      \\"CertName\\": \\"test.com\\",\\n      \\"CommonName\\": \\"*.test.com\\",\\n      \\"Sans\\": \\"SSL\\",\\n      \\"BeforeDate\\": \\"1694503184803\\",\\n      \\"AfterDate\\": \\"1726039184803\\",\\n      \\"Algorithm\\": \\"test\\",\\n      \\"Issuer\\": \\"test\\",\\n      \\"GmtBefore\\": \\"2023-09-12T07:19:44.803+0000\\",\\n      \\"GmtAfter\\": \\"2024-09-11T07:19:44.803+0000\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询网关证书列表',
    ),
    'ListGatewayDomain' => 
    array (
      'summary' => '查询网关已关联域名列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-c9bc5afd61014165bd58f621b491****',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'All',
          ),
        ),
        2 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '按域名模糊搜索',
            'description' => '按域名模糊搜索',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3F5D8E93-CA66-57F1-8BCF-A223E11B6B91',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '节点数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Id' => 
                    array (
                      'description' => '域名ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '243',
                    ),
                    'Name' => 
                    array (
                      'description' => '域名。',
                      'type' => 'string',
                      'example' => 'test.com',
                    ),
                    'Protocol' => 
                    array (
                      'description' => '协议。',
                      'type' => 'string',
                      'example' => 'HTTP',
                    ),
                    'MustHttps' => 
                    array (
                      'description' => '是否强制HTTPS。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'CertIdentifier' => 
                    array (
                      'description' => '证书ID。',
                      'type' => 'string',
                      'example' => '3452-cn-hangzhou',
                    ),
                    'CertBeforeDate' => 
                    array (
                      'description' => '证书到期时间（已废弃，请进入域名详情页查看）。',
                      'type' => 'string',
                      'example' => ' 2031-03-30 02:35:12',
                    ),
                    'GatewayId' => 
                    array (
                      'description' => '网关ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12',
                    ),
                    'GmtCreate' => 
                    array (
                      'description' => '域名记录创建时间。',
                      'type' => 'string',
                      'example' => ' 2031-03-30 02:35:12',
                    ),
                    'GmtModified' => 
                    array (
                      'description' => '域名记录更新时间。',
                      'type' => 'string',
                      'example' => ' 2031-03-30 02:35:12',
                    ),
                    'Status' => 
                    array (
                      'description' => '域名状态。
枚举值

- 0未发布
- 2发布中
- 3已发布
- 4编辑中
- 5下线中
- 6不可用',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '3',
                    ),
                    'Type' => 
                    array (
                      'description' => '域名来源类型：
- Op：控制台创建
- Ingress：MSE Ingress创建',
                      'type' => 'string',
                      'example' => 'Op',
                    ),
                    'Comment' => 
                    array (
                      'description' => '路由备注（ingress）',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '状态',
                          'type' => 'string',
                          'example' => 'Error',
                        ),
                      ),
                    ),
                    'Http2' => 
                    array (
                      'description' => '是否开启`Http2`。
- `open`：开启`Http2`。
- `close`：关闭`Http2`。
- `globalConfig`：使用全局配置。',
                      'type' => 'string',
                      'example' => 'close',
                    ),
                    'TlsMax' => 
                    array (
                      'description' => 'Tls最大版本。',
                      'type' => 'string',
                      'example' => 'TLS 1.3',
                    ),
                    'TlsMin' => 
                    array (
                      'description' => 'Tls最小版本.',
                      'type' => 'string',
                      'example' => 'TLS 1.0',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"3F5D8E93-CA66-57F1-8BCF-A223E11B6B91\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"Id\\": 243,\\n      \\"Name\\": \\"test.com\\",\\n      \\"Protocol\\": \\"HTTP\\",\\n      \\"MustHttps\\": true,\\n      \\"CertIdentifier\\": \\"3452-cn-hangzhou\\",\\n      \\"CertBeforeDate\\": \\" 2031-03-30 02:35:12\\",\\n      \\"GatewayId\\": 12,\\n      \\"GmtCreate\\": \\" 2031-03-30 02:35:12\\",\\n      \\"GmtModified\\": \\" 2031-03-30 02:35:12\\",\\n      \\"Status\\": 3,\\n      \\"Type\\": \\"Op\\",\\n      \\"Comment\\": {\\n        \\"Status\\": \\"Error\\"\\n      },\\n      \\"Http2\\": \\"close\\",\\n      \\"TlsMax\\": \\"TLS 1.3\\",\\n      \\"TlsMin\\": \\"TLS 1.0\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询网关已关联域名列表',
    ),
    'GetGatewayDomainDetail' => 
    array (
      'summary' => '查询网关域名详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名ID。',
            'type' => 'string',
            'required' => false,
            'example' => '29',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-6d0b23e1d39e41658a968d79a635****',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '88B83302-CD88-54D3-8DF2-208BFDC73F0D',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '403',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => 'ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12',
                  ),
                  'Name' => 
                  array (
                    'description' => '名称。',
                    'type' => 'string',
                    'example' => 'test.com',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。
',
                    'type' => 'string',
                    'example' => 'gw-7ea3da97b96543e19f6c597cd4a9****',
                  ),
                  'GatewayId' => 
                  array (
                    'description' => '网关ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'Protocol' => 
                  array (
                    'description' => '网关协议。',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'MustHttps' => 
                  array (
                    'description' => '强制HTTPS',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'CertIdentifier' => 
                  array (
                    'description' => '证书标识。',
                    'type' => 'string',
                    'example' => '234-cn-hangzhou',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '更新时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                  'CertName' => 
                  array (
                    'description' => '证书名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'CommonName' => 
                  array (
                    'description' => '公网域名。',
                    'type' => 'string',
                    'example' => 'name',
                  ),
                  'Sans' => 
                  array (
                    'description' => '扩展字段名称。',
                    'type' => 'string',
                    'example' => 'test.com',
                  ),
                  'BeforeDate' => 
                  array (
                    'description' => '到期时间',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2021-04-01 02:35:12',
                  ),
                  'AfterDate' => 
                  array (
                    'description' => '开始时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2021-04-01 02:35:12',
                  ),
                  'Algorithm' => 
                  array (
                    'description' => '算法。',
                    'type' => 'string',
                    'example' => 'RSA',
                  ),
                  'Issuer' => 
                  array (
                    'description' => '签发者。',
                    'type' => 'string',
                    'example' => 'Istio',
                  ),
                  'GmtBefore' => 
                  array (
                    'description' => '到期时间。',
                    'type' => 'string',
                    'example' => '2021-04-01 02:35:12',
                  ),
                  'GmtAfter' => 
                  array (
                    'description' => '开始时间。',
                    'type' => 'string',
                    'example' => '2021-04-01 02:35:12',
                  ),
                  'Http2' => 
                  array (
                    'description' => '是否开启`Http2`。
- `open`：开启`Http2`。
- `close`：关闭`Http2`。
- `globalConfig`：使用全局配置。',
                    'type' => 'string',
                    'example' => 'close',
                  ),
                  'TlsMax' => 
                  array (
                    'description' => 'Tls最大版本。',
                    'type' => 'string',
                    'example' => 'TLS 1.3',
                  ),
                  'TlsMin' => 
                  array (
                    'description' => 'Tls最小版本。',
                    'type' => 'string',
                    'example' => 'TLS 1.0',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"88B83302-CD88-54D3-8DF2-208BFDC73F0D\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 403,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 12,\\n    \\"Name\\": \\"test.com\\",\\n    \\"GatewayUniqueId\\": \\"gw-7ea3da97b96543e19f6c597cd4a9****\\",\\n    \\"GatewayId\\": 1,\\n    \\"Protocol\\": \\"HTTP\\",\\n    \\"MustHttps\\": true,\\n    \\"CertIdentifier\\": \\"234-cn-hangzhou\\",\\n    \\"GmtCreate\\": \\"2022-01-07T10:07:57.000+0000\\",\\n    \\"GmtModified\\": \\"2022-01-07T10:07:57.000+0000\\",\\n    \\"CertName\\": \\"test\\",\\n    \\"CommonName\\": \\"name\\",\\n    \\"Sans\\": \\"test.com\\",\\n    \\"BeforeDate\\": 0,\\n    \\"AfterDate\\": 0,\\n    \\"Algorithm\\": \\"RSA\\",\\n    \\"Issuer\\": \\"Istio\\",\\n    \\"GmtBefore\\": \\"2021-04-01 02:35:12\\",\\n    \\"GmtAfter\\": \\"2021-04-01 02:35:12\\",\\n    \\"Http2\\": \\"close\\",\\n    \\"TlsMax\\": \\"TLS 1.3\\",\\n    \\"TlsMin\\": \\"TLS 1.0\\"\\n  }\\n}","type":"json"}]',
      'title' => '查询网关域名详情',
    ),
    'AddGateway' => 
    array (
      'summary' => '添加网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '24670',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseYEACIS',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关名称',
            'description' => '网关名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-ceshi',
          ),
        ),
        1 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域',
            'description' => '地域。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'SlbSpec',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '内网SLB规格',
            'description' => '私网SLB规格。

- 简约型 (slb.s1.small)
- 标准型1 (slb.s2.small)
- 标准型I(slb.s2.medium)
- 高阶型1 (slb.s3.small)
- 高阶型I(slb.s3.medium)
- 超强型I (slb.s3.large)',
            'type' => 'string',
            'required' => false,
            'example' => 'slb.s2.small',
          ),
        ),
        3 => 
        array (
          'name' => 'Vpc',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '专有网络ID',
            'description' => '专有网络ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-bp15mncnrtm83uauxd1xb',
          ),
        ),
        4 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '主交换机ID',
            'description' => '主交换机ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-bp1q8th57frl5khj2li43',
          ),
        ),
        5 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '节点规格',
            'description' => '节点规格（购买传统实例时指定）。

- MSE_GTW_16_32_200_c(16C32G)
- MSE_GTW_2_4_200_c(2C4G)
- MSE_GTW_4_8_200_c(4C8G)
- MSE_GTW_8_16_200_c(8C16G)',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'MSE_GTW_16_32_200_c' => '16C32G',
              'MSE_GTW_2_4_200_c' => '2C4G',
              'MSE_GTW_4_8_200_c' => '4C8G',
              'MSE_GTW_8_16_200_c' => '8C16G',
            ),
            'example' => 'MSE_GTW_2_4_200_c',
          ),
        ),
        6 => 
        array (
          'name' => 'Replica',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '节点数量',
            'description' => '节点数量（购买传统实例时指定）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        7 => 
        array (
          'name' => 'InternetSlbSpec',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '外网SLB规格',
            'description' => '公网SLB规格。

- 简约型 (slb.s1.small)
- 标准型1 (slb.s2.smal)
- 标准型I(slb.s2.medium)
- 高阶型1 (slb.s3.small)
- 高阶型I(slb.s3.medium)
- 超强型I (slb.s3.large)',
            'type' => 'string',
            'required' => false,
            'example' => 'slb.s2.small',
          ),
        ),
        8 => 
        array (
          'name' => 'VSwitchId2',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '备交换机ID',
            'description' => '备交换机ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-wz9bu6o5vsvitt5mrxo6s',
          ),
        ),
        9 => 
        array (
          'name' => 'EnterpriseSecurityGroup',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否企业安全组类型',
            'description' => '是否企业安全组类型。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        10 => 
        array (
          'name' => 'EnableHardwareAcceleration',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启硬件加速',
            'description' => '是否开启硬件加速。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        11 => 
        array (
          'name' => 'EnableXtrace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启xtrace',
            'description' => '是否启用链路追踪。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        12 => 
        array (
          'name' => 'XtraceRatio',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'xtrace采样率，取值[0,100]',
            'description' => '链路追踪采样率，取值[1,100]。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
        13 => 
        array (
          'name' => 'EnableSls',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'title' => '是否开启SLS日志投递',
            'description' => '是否启用SLS日志投递。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        14 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'title' => '标签列表，最多包含20个子项',
            'description' => '网关标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签对象。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'title' => '标签键',
                  'description' => '标签Key。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key',
                ),
                'Value' => 
                array (
                  'title' => '标签值',
                  'description' => '标签Value。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        15 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm34x43l*****',
          ),
        ),
        16 => 
        array (
          'name' => 'RequestPars',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展字段。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        17 => 
        array (
          'name' => 'ZoneInfo',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '可用区信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '可用区信息。',
              'type' => 'object',
              'properties' => 
              array (
                'ZoneId' => 
                array (
                  'description' => '可用区ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cn-shenzhen-e',
                ),
                'VSwitchId' => 
                array (
                  'description' => '交换机ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'vsw-bp*****',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'docRequired' => true,
          ),
        ),
        18 => 
        array (
          'name' => 'ChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '付费类型（购买传统实例时指定）。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'PREPAY' => '包年包月',
              'POSTPAY' => '按量付费',
            ),
            'example' => 'POSTPAY',
          ),
        ),
        19 => 
        array (
          'name' => 'MserVersion',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关产品类型：
- mse_pro：传统实例
- mse_serverless：Serverless',
            'description' => '网关产品类型：
- mse_pro：传统实例
- mse_serverless：Serverless',
            'type' => 'string',
            'required' => false,
            'example' => 'mse_pro',
            'default' => 'mse_pro',
          ),
        ),
        20 => 
        array (
          'name' => 'NlbNetworkType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '代购NLB的网络类型：
- pubnet：公网
- privatenet：私网
- privatepubnet：公网+私网',
            'description' => '购买Serverless实例时指定NLB的网络类型：
- pubnet：公网
- privatenet：私网
- privatepubnet：公网+私网',
            'type' => 'string',
            'required' => false,
            'example' => 'pubnet',
          ),
        ),
        21 => 
        array (
          'name' => 'ClbNetworkType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '代购按LCU计费的CLB的网络类型：
- pubnet：公网
- privatenet：私网
- privatepubnet：公网+私网',
            'description' => '代购按LCU计费的CLB的网络类型：
- pubnet：公网
- privatenet：私网
- privatepubnet：公网+私网',
            'type' => 'string',
            'required' => false,
          ),
        ),
        22 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2F46B9E7-67EF-5C8A-BA52-D38D5B32AF2C',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。


- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。
',
                    'type' => 'string',
                    'example' => 'gw-5017305290e14cebbrvec4a5****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"2F46B9E7-67EF-5C8A-BA52-D38D5B32AF2C\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"GatewayUniqueId\\": \\"gw-5017305290e14cebbrvec4a5****\\"\\n  }\\n}","type":"json"}]',
      'title' => '添加网关',
    ),
    'ListGatewayZone' => 
    array (
      'summary' => '获取网关可用区列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '用于和Success同步，当Success为true时，Code为200',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EE5C32A1-BC0E-4B79-817C-103E4EDF****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'NO_PERMISSION',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'DynamicCode' => 
              array (
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的%s。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '可用区列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '可用区数据结构',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ZoneId' => 
                    array (
                      'description' => '可用区ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou-i',
                    ),
                    'LocalName' => 
                    array (
                      'description' => '可用区本地名称。',
                      'type' => 'string',
                      'example' => 'I',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 200,\\n  \\"Message\\": \\"OK\\",\\n  \\"RequestId\\": \\"EE5C32A1-BC0E-4B79-817C-103E4EDF****\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"NO_PERMISSION\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": [\\n    {\\n      \\"ZoneId\\": \\"cn-hangzhou-i\\",\\n      \\"LocalName\\": \\"I\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取网关可用区列表',
    ),
    'AddGatewaySlb' => 
    array (
      'summary' => '关联SLB。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SlbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-bp18t6jjskwxh6wy1****',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '类型。

- PUB_NET: 公网。

- PRIVATE_NET: 私网。',
            'type' => 'string',
            'required' => false,
            'example' => 'PUB_NET',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-9cdcf8e4f58144059e73ff4c5ef9****',
          ),
        ),
        3 => 
        array (
          'name' => 'VServerGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'http虚拟服务组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '353',
          ),
        ),
        4 => 
        array (
          'name' => 'ServiceWeight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务权重。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '80',
          ),
        ),
        5 => 
        array (
          'name' => 'HttpPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP端口（虚拟服务组）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '80',
          ),
        ),
        6 => 
        array (
          'name' => 'HttpsPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTPS端口（虚拟服务组）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '443',
          ),
        ),
        7 => 
        array (
          'name' => 'HttpsVServerGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'https虚拟服务组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '353',
          ),
        ),
        8 => 
        array (
          'name' => 'VServiceList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'SLB监听信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'VServerGroupId' => 
                array (
                  'description' => '虚拟服务器组ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'rsp-bp1j**t0fyl**',
                ),
                'VServerGroupName' => 
                array (
                  'description' => ' 虚拟服务器组名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'k8s/31**0/***/istio-system/clusterid',
                ),
                'Port' => 
                array (
                  'description' => '端口。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '443',
                ),
                'Protocol' => 
                array (
                  'description' => '协议类型：
- HTTP
- HTTPS',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'HTTPS',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        9 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'string',
                'example' => 'lb-uf6dqr4ondqi5w3df7hdf',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": \\"lb-uf6dqr4ondqi5w3df7hdf\\"\\n}","type":"json"}]',
      'title' => '关联网关SLB',
    ),
    'AddSecurityGroupRule' => 
    array (
      'summary' => '添加网关安全组规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SecurityGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '安全组ID',
            'description' => '安全组ID',
            'type' => 'string',
            'required' => true,
            'example' => 'sg-wz929kxhcdpw9z8idqd8',
          ),
        ),
        1 => 
        array (
          'name' => 'PortRange',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '端口范围',
            'description' => '端口范围',
            'type' => 'string',
            'required' => true,
            'example' => '1/65535',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关ID',
            'description' => '网关ID',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-c9bc5afd61014165bd58f621b491****',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'description',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'D0DB055C-51F2-5BB2-82A6-CD8A3C6EE6BA',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'string',
                'example' => '12',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"D0DB055C-51F2-5BB2-82A6-CD8A3C6EE6BA\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": \\"12\\"\\n}","type":"json"}]',
      'title' => '添加网关安全组规则',
    ),
    'DeleteGateway' => 
    array (
      'summary' => '删除指定网关。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DeleteSlb',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '删除网关时是否同时删除代购的SLB。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-0fe488252dc44d55a9dd57875193a1d7',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2FFEA345-BE30-5FE0-8885-42E2DEFD5FE6',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'http状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因，例如：TaskId not found。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '状态码。状态码为200表示成功，其余取值表示失败。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '主键ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12',
                  ),
                  'Name' => 
                  array (
                    'description' => '网关名称。',
                    'type' => 'string',
                    'example' => 'mse-bc1a29b0-reg-center-0-1',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一ID，系统自动生成的唯一标示符。',
                    'type' => 'string',
                    'example' => 'gw-7ea3da97b96543e19f6c597c****',
                  ),
                  'Region' => 
                  array (
                    'description' => '地域。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'PrimaryUser' => 
                  array (
                    'description' => '用户信息。',
                    'type' => 'string',
                    'example' => '1231254',
                  ),
                  'Status' => 
                  array (
                    'description' => '网关状态：
0: 创建中
1: 创建失败
2: 运行中
3: 变更中
4: 缩容中
6: 扩容中
8: 删除中
10: 重启中
11: 重建中
12: 升级中
13: 升级失败',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Vpc' => 
                  array (
                    'description' => '网关归属的VpcId',
                    'type' => 'string',
                    'example' => 'vpc-bp1328cm01m6uel42b5zb',
                  ),
                  'Vswitch' => 
                  array (
                    'description' => '交换机ID。',
                    'type' => 'string',
                    'example' => 'vsw-bp18zeqxx6mpuq843z4n5',
                  ),
                  'SecurityGroup' => 
                  array (
                    'description' => '安全组。',
                    'type' => 'string',
                    'example' => 'sg-bp11ufzqn6mmb8dtzz82',
                  ),
                  'Spec' => 
                  array (
                    'description' => '网关规格。',
                    'type' => 'string',
                    'example' => 'MSE_GTW_16_32_200_c',
                  ),
                  'Replica' => 
                  array (
                    'description' => '网关副本数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '最后一次更新网关实例的时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"2FFEA345-BE30-5FE0-8885-42E2DEFD5FE6\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 12,\\n    \\"Name\\": \\"mse-bc1a29b0-reg-center-0-1\\",\\n    \\"GatewayUniqueId\\": \\"gw-7ea3da97b96543e19f6c597c****\\",\\n    \\"Region\\": \\"cn-hangzhou\\",\\n    \\"PrimaryUser\\": \\"1231254\\",\\n    \\"Status\\": 1,\\n    \\"Vpc\\": \\"vpc-bp1328cm01m6uel42b5zb\\",\\n    \\"Vswitch\\": \\"vsw-bp18zeqxx6mpuq843z4n5\\",\\n    \\"SecurityGroup\\": \\"sg-bp11ufzqn6mmb8dtzz82\\",\\n    \\"Spec\\": \\"MSE_GTW_16_32_200_c\\",\\n    \\"Replica\\": 2,\\n    \\"GmtCreate\\": \\"2022-01-07T10:07:57.000+0000\\",\\n    \\"GmtModified\\": \\"2022-01-07T10:07:57.000+0000\\"\\n  }\\n}","type":"json"}]',
      'title' => '删除网关信息',
    ),
    'DeleteGatewaySlb' => 
    array (
      'summary' => '取消关联SLB。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联记录ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '395',
          ),
        ),
        1 => 
        array (
          'name' => 'DeleteSlb',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '删除网关时是否同时删除代购的SLB。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-c9bc5afd61014165bd58f621b491****',
          ),
        ),
        3 => 
        array (
          'name' => 'SlbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待取消关联的SlbId。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'lb-uf6duug6s13x4abc8****',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文

- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9297B27D-D932-5E9F-93B9-99D6C5F3A879',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '删除结果。',
                'type' => 'string',
                'example' => '28',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"9297B27D-D932-5E9F-93B9-99D6C5F3A879\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 1,\\n  \\"Success\\": true,\\n  \\"Data\\": \\"28\\"\\n}","type":"json"}]',
      'title' => '取消关联网关SLB',
    ),
    'DeleteSecurityGroupRule' => 
    array (
      'summary' => '删除网关安全组规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-83b0ddb569434f82b9fe8e4c60c40f7c',
          ),
        ),
        1 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '93',
          ),
        ),
        2 => 
        array (
          'name' => 'CascadingDelete',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '43E50CB7-258E-5AFF-9B93-ECC19928C699',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => 'ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2',
                  ),
                  'SecurityGroupId' => 
                  array (
                    'description' => '安全组ID。',
                    'type' => 'string',
                    'example' => 'sg-uf6hgwe067prhg68agfa',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。',
                    'type' => 'string',
                    'example' => 'gw-7ea3da97b96543e19f6c597c****',
                  ),
                  'PortRange' => 
                  array (
                    'description' => '目的端安全组开放的传输层协议相关的端口范围。取值范围： 
         
- TCP/UDP协议：取值范围为1~65535。使用斜线（/）隔开起始端口和终止端口。例如：1/200
- ICMP协议：-1/-1
- GRE协议：-1/-1
- all：-1/-1',
                    'type' => 'string',
                    'example' => '8443/8443',
                  ),
                  'IpProtocol' => 
                  array (
                    'description' => '传输层协议。不区分大小写。取值范围： 
         
- icmp
- gre
- tcp
- udp
- all：支持所有协议',
                    'type' => 'string',
                    'example' => 'tcp',
                  ),
                  'GatewayId' => 
                  array (
                    'description' => '网关ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '103',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2022-01-07 18:07:57',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '修改时间。',
                    'type' => 'string',
                    'example' => '2022-01-11T14:12:55.000+0000',
                  ),
                  'Description' => 
                  array (
                    'description' => '描述。',
                    'type' => 'string',
                    'example' => 'auto-description1',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"43E50CB7-258E-5AFF-9B93-ECC19928C699\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 2,\\n    \\"SecurityGroupId\\": \\"sg-uf6hgwe067prhg68agfa\\",\\n    \\"GatewayUniqueId\\": \\"gw-7ea3da97b96543e19f6c597c****\\",\\n    \\"PortRange\\": \\"8443/8443\\",\\n    \\"IpProtocol\\": \\"tcp\\",\\n    \\"GatewayId\\": 103,\\n    \\"GmtCreate\\": \\"2022-01-07 18:07:57\\",\\n    \\"GmtModified\\": \\"2022-01-11T14:12:55.000+0000\\",\\n    \\"Description\\": \\"auto-description1\\"\\n  }\\n}","type":"json"}]',
      'title' => '删除网关安全组规则',
    ),
    'UpdateGatewayOption' => 
    array (
      'summary' => '更新网关参数。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '421',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayOption',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '网关操作详情。

- **TraceDetails**：XTrace采样描述。内容：TraceEnabled为是否开通XTrace，Sample为XTrace的采样率。

- **LogConfigDetails**：日志投递服务描述。内容：LogEnabled为是否开启日志投递SLS服务，ProjectName为日志投递的目的，LogStoreName为日志存储名称。

- **EnableHardwareAcceleration**：是否开启硬件加速。

- **DisableHttp2Alpn**：是否关闭HTTP 2.0协议。

- **EnableWaf**：是否开启waf。',
            'required' => false,
            '$ref' => '#/components/schemas/GatewayOption',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-83b0ddb569434f82b9fe8e4c60c4****',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文

- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '124D02EB-DBDD-534D-A701-B4A95D3D****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'example' => '{\'LogConfigDetails\': {\'LogEnabled\': True}, \'TraceDetails\': {\'Sample\': 17, \'TraceEnabled\': True}}',
                '$ref' => '#/components/schemas/GatewayOption',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"124D02EB-DBDD-534D-A701-B4A95D3D****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TraceDetails\\": {\\n      \\"TraceEnabled\\": true,\\n      \\"Sample\\": 0,\\n      \\"TraceType\\": \\"XTRACE\\",\\n      \\"ServiceId\\": 0,\\n      \\"ServicePort\\": \\"\\"\\n    },\\n    \\"LogConfigDetails\\": {\\n      \\"LogEnabled\\": true,\\n      \\"ProjectName\\": \\"\\",\\n      \\"LogStoreName\\": \\"\\"\\n    },\\n    \\"EnableHardwareAcceleration\\": true,\\n    \\"DisableHttp2Alpn\\": true,\\n    \\"EnableWaf\\": true\\n  }\\n}","type":"json"}]',
      'title' => '更新网关参数',
    ),
    'UpdateGatewayName' => 
    array (
      'summary' => '修改网关名称。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'demo-test',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'gw-1cef54brvecdb419fb264d4f9b8c',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8C95711F-E702-5395-BFAA-21BA946CDE47',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'string',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"8C95711F-E702-5395-BFAA-21BA946CDE47\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": \\"true\\"\\n}","type":"json"}]',
      'title' => '更新网关名称',
    ),
    'QueryGatewayRegion' => 
    array (
      'summary' => '查询网关支持的地域。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9e78a671-4b9b-4dd4-99c1-0b9da87d3dec',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回地域信息集合。',
                  'type' => 'string',
                  'example' => '{"cn-hanghzou"}',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"9e78a671-4b9b-4dd4-99c1-0b9da87d3dec\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    \\"{\\\\\\"cn-hanghzou\\\\\\"}\\"\\n  ]\\n}","type":"json"}]',
      'title' => '查询网关支持地域',
    ),
    'QueryGatewayType' => 
    array (
      'summary' => '查询网关可用类型。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '52BA6DA6-A702-4362-A32F-DFF79655****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。当请求成功时，返回成功信息；当请求失败时，返回失败原因。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '状态码。状态码为200表示成功，其余取值表示失败。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '网关类型，参数数据类型为list。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '网关类型。',
                  'type' => 'string',
                  'example' => 'Ingress',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"52BA6DA6-A702-4362-A32F-DFF79655****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    \\"Ingress\\"\\n  ]\\n}","type":"json"}]',
      'title' => '查询网关可用类型',
    ),
    'GetGateway' => 
    array (
      'summary' => '获取网关的所属VPC，所属交换机等基本信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'gw-685f661467b54f48b7b7a76605ce****',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9C96CDF8-9E6C-5AB6-B83C-8F87A10117E6',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '请求是否成功的描述信息',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '状态码。说明 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '网关信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '网关ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12',
                  ),
                  'Name' => 
                  array (
                    'description' => '网关名称。',
                    'type' => 'string',
                    'example' => 'DEFAULT',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。',
                    'type' => 'string',
                    'example' => 'gw-7ea3da97b96543e19f6c597cd4a9****',
                  ),
                  'Region' => 
                  array (
                    'description' => '地域。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'PrimaryUser' => 
                  array (
                    'description' => '创建主用户User ID。',
                    'type' => 'string',
                    'example' => '1231254',
                  ),
                  'Status' => 
                  array (
                    'description' => '获取数据集成同步任务的结果状态。取值如下：
* 0: 创建中
* 1: 创建失败
* 2: 运行中
* 3: 变更中
* 4: 缩容中
* 6: 扩容中
* 8: 删除中
* 10: 重启中
* 11: 重建中
* 12: 升级中
* 13: 升级失败',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Vpc' => 
                  array (
                    'description' => 'VPC网络ID。',
                    'type' => 'string',
                    'example' => 'vpc-bp1328cm01m6uel42b5zb',
                  ),
                  'Vswitch' => 
                  array (
                    'description' => '交换机。',
                    'type' => 'string',
                    'example' => 'vsw-bp18zeqxx6mpuq843z4n5',
                  ),
                  'SecurityGroup' => 
                  array (
                    'description' => '安全组。',
                    'type' => 'string',
                    'example' => 'sg-bp11ufzqn6mmb8dtzz82',
                  ),
                  'Spec' => 
                  array (
                    'description' => '网关规格。',
                    'type' => 'string',
                    'example' => 'MSE_GTW_16_32_200_c',
                  ),
                  'Replica' => 
                  array (
                    'description' => '网关副本数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '网关设备的创建时间，GMT格式，是用户所在地的当地时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '最后一次更新实例的时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                  'XtraceDetails' => 
                  array (
                    'description' => 'XTrace详情。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Sample' => 
                      array (
                        'description' => 'XTrace采样率。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '10',
                      ),
                      'TraceOn' => 
                      array (
                        'description' => '是否开启XTrace采样。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                    ),
                  ),
                  'Vswitch2' => 
                  array (
                    'description' => '交换机2。',
                    'type' => 'string',
                    'example' => 'vpc-bp1j6ivhav15ve7q54kq2',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'mse-cn-st21ri2****',
                  ),
                  'ChargeType' => 
                  array (
                    'description' => '付费模式，包括包年包月和按量付费。',
                    'type' => 'string',
                    'example' => 'POSTPAY',
                  ),
                  'EndDate' => 
                  array (
                    'description' => '网关结束时间。',
                    'type' => 'string',
                    'example' => '2021-08-01 00:00:00',
                  ),
                  'StatusDesc' => 
                  array (
                    'description' => '状态描述。',
                    'type' => 'string',
                    'example' => '正在重启中。',
                  ),
                  'LogConfigDetails' => 
                  array (
                    'description' => '日志配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'LogEnabled' => 
                      array (
                        'description' => '是否开启日志投递',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'ProjectName' => 
                      array (
                        'description' => '项目名称。',
                        'type' => 'string',
                        'example' => 'k8s-log-c173117256e934a96b7fefdf2ef8a8057',
                      ),
                      'LogStoreName' => 
                      array (
                        'description' => 'logstore名称。',
                        'type' => 'string',
                        'example' => 'mse_access_log',
                      ),
                    ),
                  ),
                  'MseTag' => 
                  array (
                    'description' => '资源标签。',
                    'type' => 'string',
                    'example' => '{"TagKey":"TagValue"}',
                  ),
                  'ResourceGroupId' => 
                  array (
                    'description' => '资源组ID。',
                    'type' => 'string',
                    'example' => 'rg-acfm34x43l*****',
                  ),
                  'TotalReplica' => 
                  array (
                    'description' => '总副本数（包括自动扩容副本数）。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'Elastic' => 
                  array (
                    'description' => '是否开启自动扩容。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ElasticReplica' => 
                  array (
                    'description' => '自动扩容副本数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ElasticType' => 
                  array (
                    'description' => '自动扩容类型，目前支持：

* CronHPA：按时间扩容',
                    'type' => 'string',
                    'example' => 'CronHPA',
                  ),
                  'ElasticPolicy' => 
                  array (
                    'description' => '自动扩容策略。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MaxReplica' => 
                      array (
                        'description' => '自动扩容最大实例数（水平扩容时使用）。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                      'ElasticType' => 
                      array (
                        'description' => '自动扩容类型，目前支持：

- CronHPA：按时间扩容',
                        'type' => 'string',
                        'example' => 'CronHPA',
                      ),
                      'TimePolicyList' => 
                      array (
                        'description' => '按时间扩容策略。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DesiredReplica' => 
                            array (
                              'description' => '期望副本数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2',
                            ),
                            'StartTime' => 
                            array (
                              'description' => '自动扩容起始时间。',
                              'type' => 'string',
                              'example' => '16:00',
                            ),
                            'EndTime' => 
                            array (
                              'description' => '自动扩容结束时间。',
                              'type' => 'string',
                              'example' => '18:00',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"9C96CDF8-9E6C-5AB6-B83C-8F87A10117E6\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 12,\\n    \\"Name\\": \\"DEFAULT\\",\\n    \\"GatewayUniqueId\\": \\"gw-7ea3da97b96543e19f6c597cd4a9****\\",\\n    \\"Region\\": \\"cn-hangzhou\\",\\n    \\"PrimaryUser\\": \\"1231254\\",\\n    \\"Status\\": 0,\\n    \\"Vpc\\": \\"vpc-bp1328cm01m6uel42b5zb\\",\\n    \\"Vswitch\\": \\"vsw-bp18zeqxx6mpuq843z4n5\\",\\n    \\"SecurityGroup\\": \\"sg-bp11ufzqn6mmb8dtzz82\\",\\n    \\"Spec\\": \\"MSE_GTW_16_32_200_c\\",\\n    \\"Replica\\": 1,\\n    \\"GmtCreate\\": \\"2022-01-07T10:07:57.000+0000\\",\\n    \\"GmtModified\\": \\"2022-01-07T10:07:57.000+0000\\",\\n    \\"XtraceDetails\\": {\\n      \\"Sample\\": 10,\\n      \\"TraceOn\\": true\\n    },\\n    \\"Vswitch2\\": \\"vpc-bp1j6ivhav15ve7q54kq2\\",\\n    \\"InstanceId\\": \\"mse-cn-st21ri2****\\",\\n    \\"ChargeType\\": \\"POSTPAY\\",\\n    \\"EndDate\\": \\"2021-08-01 00:00:00\\",\\n    \\"StatusDesc\\": \\"正在重启中。\\",\\n    \\"LogConfigDetails\\": {\\n      \\"LogEnabled\\": true,\\n      \\"ProjectName\\": \\"k8s-log-c173117256e934a96b7fefdf2ef8a8057\\",\\n      \\"LogStoreName\\": \\"mse_access_log\\"\\n    },\\n    \\"MseTag\\": \\"{\\\\\\"TagKey\\\\\\":\\\\\\"TagValue\\\\\\"}\\",\\n    \\"ResourceGroupId\\": \\"rg-acfm34x43l*****\\",\\n    \\"TotalReplica\\": 3,\\n    \\"Elastic\\": true,\\n    \\"ElasticReplica\\": 1,\\n    \\"ElasticType\\": \\"CronHPA\\",\\n    \\"ElasticPolicy\\": {\\n      \\"MaxReplica\\": 5,\\n      \\"ElasticType\\": \\"CronHPA\\",\\n      \\"TimePolicyList\\": [\\n        {\\n          \\"DesiredReplica\\": 2,\\n          \\"StartTime\\": \\"16:00\\",\\n          \\"EndTime\\": \\"18:00\\"\\n        }\\n      ]\\n    }\\n  }\\n}","type":"json"}]',
      'title' => '查询网关信息',
    ),
    'ListGateway' => 
    array (
      'summary' => '查询该网关列表信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页展示实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'OrderItem',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单信息。',
            'type' => 'string',
            'required' => false,
            'example' => '{}',
          ),
        ),
        3 => 
        array (
          'name' => 'DescSort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序（暂时未使用）。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'FilterParams',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '参数信息。',
            'type' => 'object',
            'properties' => 
            array (
              'GatewayType' => 
              array (
                'description' => '网关类型。',
                'type' => 'string',
                'required' => false,
                'example' => 'Ingress',
              ),
              'Name' => 
              array (
                'description' => '网关名称。',
                'type' => 'string',
                'required' => false,
                'example' => 'rutain-test',
              ),
              'Vpc' => 
              array (
                'description' => '专有网络。',
                'type' => 'string',
                'required' => false,
                'example' => 'vpc-bp13hhyjntbab7w****',
              ),
              'GatewayUniqueId' => 
              array (
                'description' => '网关唯一标识ID。',
                'type' => 'string',
                'required' => false,
                'example' => 'gw-5017305290e14centbrveca****',
              ),
              'InstanceId' => 
              array (
                'description' => '实例ID。',
                'type' => 'string',
                'required' => false,
                'example' => 'mse_ingresspre-cn-****',
              ),
              'MseTag' => 
              array (
                'description' => '资源标签。',
                'type' => 'string',
                'required' => false,
                'example' => '[{"key":"tagkey","value":"tagvalue"}]',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。',
                'type' => 'string',
                'required' => false,
                'example' => 'rg-7y2uye*****',
              ),
            ),
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '34300B3-52EC-5049-8C96-914098CF****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation. Action: mse:ListGateway, Resource: acs:mse:cn-hangzhou:102123:*',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => 'Meta返回信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'TotalSize' => 
                  array (
                    'description' => '总条数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '9',
                  ),
                  'PageNumber' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Result' => 
                  array (
                    'description' => '返回数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '网关ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '153',
                        ),
                        'Name' => 
                        array (
                          'description' => '网关名称。',
                          'type' => 'string',
                          'example' => 'tesa-test',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关唯一标识ID。',
                          'type' => 'string',
                          'example' => 'gw-5017305290e14cebb8ce5cb6a4****',
                        ),
                        'GatewayType' => 
                        array (
                          'description' => '网关类型。',
                          'type' => 'string',
                          'example' => 'Ingress',
                        ),
                        'Region' => 
                        array (
                          'description' => '地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'PrimaryUser' => 
                        array (
                          'description' => '用户信息。',
                          'type' => 'string',
                          'example' => '18278117654342',
                        ),
                        'Status' => 
                        array (
                          'description' => '网关状态

- 0 创建中
- 1 创建失败
- 2 运行中
- 3 变更中
- 4 缩容中
- 6 扩容中
- 8 删除中
- 9 停服待释放
- 10 重启中
- 11 重建中
- 12 升级中
- 13 升级失败',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'AhasOn' => 
                        array (
                          'description' => '是否开启AHAS。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'ArmsOn' => 
                        array (
                          'description' => '是否开启ARMS。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Spec' => 
                        array (
                          'description' => '规格。',
                          'type' => 'string',
                          'example' => 'MSE_GTW_1_2_200_c',
                        ),
                        'Replica' => 
                        array (
                          'description' => '备份。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2021-09-13 19:24:23',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '修改时间。',
                          'type' => 'string',
                          'example' => '2021-09-13 19:24:23',
                        ),
                        'StatusDesc' => 
                        array (
                          'description' => '状态描述。',
                          'type' => 'string',
                          'example' => '重启中',
                        ),
                        'Slb' => 
                        array (
                          'description' => 'SLB集合。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'SLB集合信息。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'SlbIp' => 
                              array (
                                'description' => 'SLB IP。',
                                'type' => 'string',
                                'example' => '153.12.XX.XX',
                              ),
                              'SlbPort' => 
                              array (
                                'description' => 'SLB端口。',
                                'type' => 'string',
                                'example' => '80',
                              ),
                              'SlbSpec' => 
                              array (
                                'description' => 'SLB规格。',
                                'type' => 'string',
                                'example' => 'slb.s2.small',
                              ),
                              'Type' => 
                              array (
                                'description' => '网络类型

- PUB_NET：公网
- PRIVATE_NET：私网',
                                'type' => 'string',
                                'example' => 'PUB_NET',
                              ),
                              'GatewaySlbStatus' => 
                              array (
                                'description' => '网关SLB状态。',
                                'type' => 'string',
                                'example' => 'Ready',
                              ),
                              'StatusDesc' => 
                              array (
                                'description' => '状态描述。',
                                'type' => 'string',
                                'example' => '创建中',
                              ),
                              'GatewaySlbMode' => 
                              array (
                                'description' => '网关SLB模式。',
                                'type' => 'string',
                                'example' => 'UserHost',
                              ),
                              'SlbId' => 
                              array (
                                'description' => 'SLB ID。',
                                'type' => 'string',
                                'example' => 'lb-bp1ut8asdfgucjk****',
                              ),
                            ),
                          ),
                        ),
                        'InternetSlb' => 
                        array (
                          'description' => '互联网SLB。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '数据结构。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'SlbIp' => 
                              array (
                                'description' => 'SLB IP。',
                                'type' => 'string',
                                'example' => '153.12.XX.XX',
                              ),
                              'SlbPort' => 
                              array (
                                'description' => 'SLB端口。',
                                'type' => 'string',
                                'example' => 'slb.s2.small',
                              ),
                              'SlbSpec' => 
                              array (
                                'description' => 'SLB规格。',
                                'type' => 'string',
                                'example' => 'slb.s2.small',
                              ),
                              'Type' => 
                              array (
                                'description' => '类型。',
                                'type' => 'string',
                                'example' => 'PUB_NET',
                              ),
                              'InternetNetworkFlow' => 
                              array (
                                'description' => '网关流量。',
                                'type' => 'string',
                                'example' => '20',
                              ),
                              'GatewaySlbStatus' => 
                              array (
                                'description' => '网关SLB状态。',
                                'type' => 'string',
                                'example' => 'Ready',
                              ),
                              'StatusDesc' => 
                              array (
                                'description' => '状态描述。',
                                'type' => 'string',
                                'example' => '创建中',
                              ),
                              'GatewaySlbMode' => 
                              array (
                                'description' => '网关SLB模式。

',
                                'type' => 'string',
                                'example' => 'UserHost',
                              ),
                              'SlbId' => 
                              array (
                                'description' => 'SLB ID。',
                                'type' => 'string',
                                'example' => 'lb-bp1ut8asdfgucjk****',
                              ),
                            ),
                          ),
                        ),
                        'Upgrade' => 
                        array (
                          'description' => '升级。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'MustUpgrade' => 
                        array (
                          'description' => '强制升级。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'SupportWasm' => 
                        array (
                          'description' => '是否支持WASM。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'CurrentVersion' => 
                        array (
                          'description' => '当前版本。',
                          'type' => 'string',
                          'example' => '0.1.0-mse-gw',
                        ),
                        'AppVersion' => 
                        array (
                          'description' => '应用版本。',
                          'type' => 'string',
                          'example' => '1.0.1.0',
                        ),
                        'LatestVersion' => 
                        array (
                          'description' => '最新版本。',
                          'type' => 'string',
                          'example' => '0.1.0-mse-gw',
                        ),
                        'Vswitch2' => 
                        array (
                          'description' => '交换机2。',
                          'type' => 'string',
                          'example' => 'vsw-bpbrveck45nf****',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'mse_ingresspost-cn-0jbvrcex****',
                        ),
                        'ChargeType' => 
                        array (
                          'description' => '付费类型。',
                          'type' => 'string',
                          'example' => 'POSTPAY',
                        ),
                        'EndDate' => 
                        array (
                          'description' => '到期日期。',
                          'type' => 'string',
                          'example' => '4792060800000',
                        ),
                        'Tag' => 
                        array (
                          'description' => '标签。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'InitConfig' => 
                        array (
                          'description' => '配置信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EnableWaf' => 
                            array (
                              'description' => '是否开启WAF。',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                            'SupportWaf' => 
                            array (
                              'description' => '是否支持WAF。',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                          ),
                        ),
                        'GatewayVersion' => 
                        array (
                          'description' => '网关版本。',
                          'type' => 'string',
                          'example' => '1.2.9',
                        ),
                        'RollBack' => 
                        array (
                          'description' => '是否支持回滚。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'MseTag' => 
                        array (
                          'description' => '资源标签。',
                          'type' => 'string',
                          'example' => '{"tagKey":"tagValue"}',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-97hg87vi****',
                        ),
                        'TotalReplica' => 
                        array (
                          'description' => '总副本数（包括自动扩容副本数）。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '4',
                        ),
                        'Elastic' => 
                        array (
                          'description' => '是否开启自动扩容。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'ElasticReplica' => 
                        array (
                          'description' => '自动扩容副本数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'ElasticType' => 
                        array (
                          'description' => '自动扩容类型，目前支持：

- CronHPA：按时间扩容',
                          'type' => 'string',
                          'example' => 'CronHPA',
                        ),
                        'ElasticPolicy' => 
                        array (
                          'description' => '自动扩容策略。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Elastic' => 
                            array (
                              'description' => '是否开启自动扩容。',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                            'MaxReplica' => 
                            array (
                              'description' => '自动扩容最大实例数（水平扩容时使用）。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '10',
                            ),
                            'ElasticType' => 
                            array (
                              'description' => '自动扩容类型，目前支持：

* CronHPA：按时间扩容',
                              'type' => 'string',
                              'example' => 'CronHPA',
                            ),
                            'TimePolicyList' => 
                            array (
                              'description' => '自动扩容时间策略列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'DesiredReplica' => 
                                  array (
                                    'description' => '自动扩容期望副本数。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '4',
                                  ),
                                  'StartTime' => 
                                  array (
                                    'description' => '自动扩容起始时间。',
                                    'type' => 'string',
                                    'example' => '07:00',
                                  ),
                                  'EndTime' => 
                                  array (
                                    'description' => '自动扩容结束时间。',
                                    'type' => 'string',
                                    'example' => '09:00',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'ElasticInstanceId' => 
                        array (
                          'description' => '网关弹性实例ID，使用自动扩容时返回。',
                          'type' => 'string',
                          'example' => 'mse_ingresselastic_public_cn-uqm3d0*****',
                        ),
                        'VpcId' => 
                        array (
                          'description' => '网关VPC ID。',
                          'type' => 'string',
                          'example' => 'vpc-uf6heojei217tv14*****',
                        ),
                        'MseVersion' => 
                        array (
                          'type' => 'string',
                        ),
                        'MaintenancePeriod' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TimeZone' => 
                            array (
                              'type' => 'string',
                            ),
                            'StartTime' => 
                            array (
                              'type' => 'string',
                            ),
                            'EndTime' => 
                            array (
                              'type' => 'string',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"34300B3-52EC-5049-8C96-914098CF****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation. Action: mse:ListGateway, Resource: acs:mse:cn-hangzhou:102123:*\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TotalSize\\": 9,\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"Result\\": [\\n      {\\n        \\"Id\\": 153,\\n        \\"Name\\": \\"tesa-test\\",\\n        \\"GatewayUniqueId\\": \\"gw-5017305290e14cebb8ce5cb6a4****\\",\\n        \\"GatewayType\\": \\"Ingress\\",\\n        \\"Region\\": \\"cn-hangzhou\\",\\n        \\"PrimaryUser\\": \\"18278117654342\\",\\n        \\"Status\\": 2,\\n        \\"AhasOn\\": false,\\n        \\"ArmsOn\\": false,\\n        \\"Spec\\": \\"MSE_GTW_1_2_200_c\\",\\n        \\"Replica\\": 2,\\n        \\"GmtCreate\\": \\"2021-09-13 19:24:23\\",\\n        \\"GmtModified\\": \\"2021-09-13 19:24:23\\",\\n        \\"StatusDesc\\": \\"重启中\\",\\n        \\"Slb\\": [\\n          {\\n            \\"SlbIp\\": \\"153.12.XX.XX\\",\\n            \\"SlbPort\\": \\"80\\",\\n            \\"SlbSpec\\": \\"slb.s2.small\\",\\n            \\"Type\\": \\"PUB_NET\\",\\n            \\"GatewaySlbStatus\\": \\"Ready\\",\\n            \\"StatusDesc\\": \\"创建中\\",\\n            \\"GatewaySlbMode\\": \\"UserHost\\",\\n            \\"SlbId\\": \\"lb-bp1ut8asdfgucjk****\\"\\n          }\\n        ],\\n        \\"InternetSlb\\": [\\n          {\\n            \\"SlbIp\\": \\"153.12.XX.XX\\",\\n            \\"SlbPort\\": \\"slb.s2.small\\",\\n            \\"SlbSpec\\": \\"slb.s2.small\\",\\n            \\"Type\\": \\"PUB_NET\\",\\n            \\"InternetNetworkFlow\\": \\"20\\",\\n            \\"GatewaySlbStatus\\": \\"Ready\\",\\n            \\"StatusDesc\\": \\"创建中\\",\\n            \\"GatewaySlbMode\\": \\"UserHost\\",\\n            \\"SlbId\\": \\"lb-bp1ut8asdfgucjk****\\"\\n          }\\n        ],\\n        \\"Upgrade\\": false,\\n        \\"MustUpgrade\\": false,\\n        \\"SupportWasm\\": true,\\n        \\"CurrentVersion\\": \\"0.1.0-mse-gw\\",\\n        \\"AppVersion\\": \\"1.0.1.0\\",\\n        \\"LatestVersion\\": \\"0.1.0-mse-gw\\",\\n        \\"Vswitch2\\": \\"vsw-bpbrveck45nf****\\",\\n        \\"InstanceId\\": \\"mse_ingresspost-cn-0jbvrcex****\\",\\n        \\"ChargeType\\": \\"POSTPAY\\",\\n        \\"EndDate\\": \\"4792060800000\\",\\n        \\"Tag\\": \\"test\\",\\n        \\"InitConfig\\": {\\n          \\"EnableWaf\\": true,\\n          \\"SupportWaf\\": true\\n        },\\n        \\"GatewayVersion\\": \\"1.2.9\\",\\n        \\"RollBack\\": false,\\n        \\"MseTag\\": \\"{\\\\\\"tagKey\\\\\\":\\\\\\"tagValue\\\\\\"}\\",\\n        \\"ResourceGroupId\\": \\"rg-97hg87vi****\\",\\n        \\"TotalReplica\\": 4,\\n        \\"Elastic\\": true,\\n        \\"ElasticReplica\\": 2,\\n        \\"ElasticType\\": \\"CronHPA\\",\\n        \\"ElasticPolicy\\": {\\n          \\"Elastic\\": true,\\n          \\"MaxReplica\\": 10,\\n          \\"ElasticType\\": \\"CronHPA\\",\\n          \\"TimePolicyList\\": [\\n            {\\n              \\"DesiredReplica\\": 4,\\n              \\"StartTime\\": \\"07:00\\",\\n              \\"EndTime\\": \\"09:00\\"\\n            }\\n          ]\\n        },\\n        \\"ElasticInstanceId\\": \\"mse_ingresselastic_public_cn-uqm3d0*****\\",\\n        \\"VpcId\\": \\"vpc-uf6heojei217tv14*****\\",\\n        \\"MseVersion\\": \\"\\",\\n        \\"MaintenancePeriod\\": {\\n          \\"TimeZone\\": \\"\\",\\n          \\"StartTime\\": \\"\\",\\n          \\"EndTime\\": \\"\\"\\n        }\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询网关信息列表',
    ),
    'ListGatewaySlb' => 
    array (
      'summary' => '查询网关入口SLB。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'gw-1cef5440bf2d484db419fb264d4f****',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EAB345F4-3AC3-560C-B653-65717703****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Id' => 
                    array (
                      'description' => 'ID',
                      'type' => 'string',
                      'example' => 'ID',
                    ),
                    'SlbId' => 
                    array (
                      'description' => 'SLB ID',
                      'type' => 'string',
                      'example' => 'lb-bp1kmnli3hdpreptw2ah3',
                    ),
                    'SlbIp' => 
                    array (
                      'description' => 'SLB IP',
                      'type' => 'string',
                      'example' => '121.199.XX.XX',
                    ),
                    'SlbPort' => 
                    array (
                      'description' => 'SLB端口。',
                      'type' => 'string',
                      'example' => '80,443',
                    ),
                    'Type' => 
                    array (
                      'description' => '网络类型

- PUB_NET：公网
- PRIVATE_NET：私网',
                      'type' => 'string',
                      'example' => 'PUB_NET',
                    ),
                    'GatewayId' => 
                    array (
                      'description' => '网关ID。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                    'GmtCreate' => 
                    array (
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2022-01-14 14:39:16',
                    ),
                    'GatewaySlbMode' => 
                    array (
                      'description' => '来源。',
                      'type' => 'string',
                      'example' => 'UserSelect',
                    ),
                    'GatewaySlbStatus' => 
                    array (
                      'description' => '关联状态。',
                      'type' => 'string',
                      'example' => 'Ready',
                    ),
                    'StatusDesc' => 
                    array (
                      'description' => '状态备注。',
                      'type' => 'string',
                      'example' => '关联中',
                    ),
                    'VServerGroupId' => 
                    array (
                      'description' => 'http虚拟服务组ID。',
                      'type' => 'string',
                      'example' => '353',
                    ),
                    'HttpPort' => 
                    array (
                      'description' => 'HTTP端口（虚拟服务组）。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '80',
                    ),
                    'HttpsPort' => 
                    array (
                      'description' => 'HTTPS端口（虚拟服务组）。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '443',
                    ),
                    'ServiceWeight' => 
                    array (
                      'description' => '服务权重。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '80',
                    ),
                    'EditEnable' => 
                    array (
                      'description' => '是否可编辑。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'HttpsVServerGroupId' => 
                    array (
                      'description' => 'https虚拟服务组ID。',
                      'type' => 'string',
                      'example' => '353',
                    ),
                    'VsMetaInfo' => 
                    array (
                      'description' => '虚拟服务器组元信息。',
                      'type' => 'string',
                      'example' => '[{"protocol":"HTTP","vServerGroupName":"k8s/80/****","port":80,"vServerGroupId":"rsp-bp***"},{"protocol":"HTTPS","vServerGroupName":"k8s/443/***","port":443,"vServerGroupId":"rsp-bp*****"}]',
                    ),
                    'VServiceList' => 
                    array (
                      'description' => 'SLB监听信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Port' => 
                          array (
                            'description' => '端口。',
                            'type' => 'string',
                            'example' => '443',
                          ),
                          'Protocol' => 
                          array (
                            'description' => '协议类型。

- HTTPS
- HTTP',
                            'type' => 'string',
                            'example' => 'HTTPS',
                          ),
                          'VServerGroupId' => 
                          array (
                            'description' => '虚拟服务器组ID。',
                            'type' => 'string',
                            'example' => 'rsp-bp183l2x70***',
                          ),
                          'VServerGroupName' => 
                          array (
                            'description' => ' 虚拟服务器组名称。',
                            'type' => 'string',
                            'example' => 'k8s/31**0/***/istio-system/clusterid',
                          ),
                        ),
                      ),
                    ),
                    'SlbType' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"EAB345F4-3AC3-560C-B653-65717703****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"Id\\": \\"ID\\",\\n      \\"SlbId\\": \\"lb-bp1kmnli3hdpreptw2ah3\\",\\n      \\"SlbIp\\": \\"121.199.XX.XX\\",\\n      \\"SlbPort\\": \\"80,443\\",\\n      \\"Type\\": \\"PUB_NET\\",\\n      \\"GatewayId\\": \\"1\\",\\n      \\"GmtCreate\\": \\"2022-01-14 14:39:16\\",\\n      \\"GatewaySlbMode\\": \\"UserSelect\\",\\n      \\"GatewaySlbStatus\\": \\"Ready\\",\\n      \\"StatusDesc\\": \\"关联中\\",\\n      \\"VServerGroupId\\": \\"353\\",\\n      \\"HttpPort\\": 80,\\n      \\"HttpsPort\\": 443,\\n      \\"ServiceWeight\\": 80,\\n      \\"EditEnable\\": false,\\n      \\"HttpsVServerGroupId\\": \\"353\\",\\n      \\"VsMetaInfo\\": \\"[{\\\\\\"protocol\\\\\\":\\\\\\"HTTP\\\\\\",\\\\\\"vServerGroupName\\\\\\":\\\\\\"k8s/80/****\\\\\\",\\\\\\"port\\\\\\":80,\\\\\\"vServerGroupId\\\\\\":\\\\\\"rsp-bp***\\\\\\"},{\\\\\\"protocol\\\\\\":\\\\\\"HTTPS\\\\\\",\\\\\\"vServerGroupName\\\\\\":\\\\\\"k8s/443/***\\\\\\",\\\\\\"port\\\\\\":443,\\\\\\"vServerGroupId\\\\\\":\\\\\\"rsp-bp*****\\\\\\"}]\\",\\n      \\"VServiceList\\": [\\n        {\\n          \\"Port\\": \\"443\\",\\n          \\"Protocol\\": \\"HTTPS\\",\\n          \\"VServerGroupId\\": \\"rsp-bp183l2x70***\\",\\n          \\"VServerGroupName\\": \\"k8s/31**0/***/istio-system/clusterid\\"\\n        }\\n      ],\\n      \\"SlbType\\": \\"\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询网关入口SLB',
    ),
    'GetGatewayOption' => 
    array (
      'summary' => '获取网关全局参数。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '429',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-c9bc5afd61014165bd58f621b491*****',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C92F4A4D-A2FD-593E-839E-F3D4DFD2****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因，例如：TaskId not found。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '状态码。说明：200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '网关操作详情。

- **TraceDetails**：XTrace采样描述。内容：TraceEnabled为是否开通XTrace，Sample为XTrace的采样率。

- **LogConfigDetails**：日志投递服务描述。内容：LogEnabled为是否开启日志投递SLS服务，ProjectName为日志投递的目的，LogStoreName为日志存储名称。

- **EnableHardwareAcceleration**：是否开启硬件加速。

- **DisableHttp2Alpn**：是否关闭HTTP 2.0协议。

- **EnableWaf**：是否开启waf。',
                'example' => '{\'LogConfigDetails\': {\'LogEnabled\': False}, \'TraceDetails\': {\'TraceEnabled\': False}}',
                '$ref' => '#/components/schemas/GatewayOption',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C92F4A4D-A2FD-593E-839E-F3D4DFD2****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TraceDetails\\": {\\n      \\"TraceEnabled\\": true,\\n      \\"Sample\\": 0,\\n      \\"TraceType\\": \\"XTRACE\\",\\n      \\"ServiceId\\": 0,\\n      \\"ServicePort\\": \\"\\"\\n    },\\n    \\"LogConfigDetails\\": {\\n      \\"LogEnabled\\": true,\\n      \\"ProjectName\\": \\"\\",\\n      \\"LogStoreName\\": \\"\\"\\n    },\\n    \\"EnableHardwareAcceleration\\": true,\\n    \\"DisableHttp2Alpn\\": true,\\n    \\"EnableWaf\\": true\\n  }\\n}","type":"json"}]',
      'title' => '查询网关选项',
    ),
    'ListSecurityGroupRule' => 
    array (
      'summary' => '查询网关安全组列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关ID',
            'description' => '网关唯一ID',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-83b0ddb569434f82b9fe8e4c60c40f7c',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '9EC7BDBF-3C38-5C9C-95DD-61E298CD43E8',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息',
                'type' => 'string',
                'example' => 'success',
              ),
              'Code' => 
              array (
                'description' => '返回代码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回数据。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Id' => 
                    array (
                      'description' => '安全组授权记录ID。',
                      'type' => 'string',
                      'example' => '21',
                    ),
                    'SecurityGroupId' => 
                    array (
                      'description' => '安全组ID。',
                      'type' => 'string',
                      'example' => 'sg-bp1cg6qlyjepj0y6cf2c',
                    ),
                    'PortRange' => 
                    array (
                      'description' => '端口范围。',
                      'type' => 'string',
                      'example' => '8000/8000',
                    ),
                    'IpProtocol' => 
                    array (
                      'description' => '协议类型',
                      'type' => 'string',
                      'example' => 'tcp',
                    ),
                    'AuthCidrs' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'string',
                      ),
                    ),
                    'GatewayId' => 
                    array (
                      'description' => '网关ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '81',
                    ),
                    'GatewayUniqueId' => 
                    array (
                      'description' => '网关唯一标识ID。',
                      'type' => 'string',
                      'example' => 'gw-12a432a1f5da423997d8880bd32c304d',
                    ),
                    'GmtCreate' => 
                    array (
                      'description' => '创建时间',
                      'type' => 'string',
                      'example' => '2022-01-07T10:07:57.000+0000',
                    ),
                    'GmtModified' => 
                    array (
                      'description' => '最后修改时间。',
                      'type' => 'string',
                      'example' => '2022-01-07T10:07:57.000+0000',
                    ),
                    'Description' => 
                    array (
                      'description' => '规则描述。',
                      'type' => 'string',
                      'example' => '测试',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"9EC7BDBF-3C38-5C9C-95DD-61E298CD43E8\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"Id\\": \\"21\\",\\n      \\"SecurityGroupId\\": \\"sg-bp1cg6qlyjepj0y6cf2c\\",\\n      \\"PortRange\\": \\"8000/8000\\",\\n      \\"IpProtocol\\": \\"tcp\\",\\n      \\"AuthCidrs\\": [\\n        \\"\\"\\n      ],\\n      \\"GatewayId\\": 81,\\n      \\"GatewayUniqueId\\": \\"gw-12a432a1f5da423997d8880bd32c304d\\",\\n      \\"GmtCreate\\": \\"2022-01-07T10:07:57.000+0000\\",\\n      \\"GmtModified\\": \\"2022-01-07T10:07:57.000+0000\\",\\n      \\"Description\\": \\"测试\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询网关安全组列表',
    ),
    'ListSecurityGroup' => 
    array (
      'summary' => '获取安全组列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关ID',
            'description' => '网关ID',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-e98e40675aaf49bda082137d158e1585',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据结构。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '节点数据。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SecurityGroupId' => 
                    array (
                      'description' => '安全组ID。',
                      'type' => 'string',
                      'example' => 'sg-8vb8gsmrqyc35k645rk6',
                    ),
                    'SecurityGroupName' => 
                    array (
                      'description' => '安全组名称。',
                      'type' => 'string',
                      'example' => 'sg2',
                    ),
                    'VpcId' => 
                    array (
                      'description' => 'VPC ID。',
                      'type' => 'string',
                      'example' => 'vpc-bp1b',
                    ),
                    'SecurityGroupType' => 
                    array (
                      'description' => '安全组类型，分为普通安全组与企业安全组。取值范围：

- normal：普通安全组。
- enterprise：企业安全组。更多详情，请参见[企业安全组概述](~~120621~~)。',
                      'type' => 'string',
                      'example' => 'enterprise',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"SecurityGroupId\\": \\"sg-8vb8gsmrqyc35k645rk6\\",\\n      \\"SecurityGroupName\\": \\"sg2\\",\\n      \\"VpcId\\": \\"vpc-bp1b\\",\\n      \\"SecurityGroupType\\": \\"enterprise\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取安全组列表',
    ),
    'UpdateGatewaySpec' => 
    array (
      'summary' => '更新云原生网关集群节点数或规格（支持按量付费和包年包月）。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关名称',
            'description' => '网关ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-c70622ff52fe49beb29bea9a6f52****',
          ),
        ),
        1 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '节点规格',
            'description' => '节点规格。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'MSE_GTW_16_32_200_c' => 'MSE_GTW_16_32_200_c',
              'MSE_GTW_2_4_200_c' => 'MSE_GTW_2_4_200_c',
              'MSE_GTW_4_8_200_c' => 'MSE_GTW_4_8_200_c',
              'MSE_GTW_8_16_200_c' => 'MSE_GTW_8_16_200_c',
            ),
            'example' => 'MSE_GTW_4_8_200_c',
          ),
        ),
        2 => 
        array (
          'name' => 'Replica',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '节点数量',
            'description' => '节点数量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '3',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '执行结果信息。',
                'type' => 'string',
                'example' => 'gw-892ehbv7gg56******',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": \\"gw-892ehbv7gg56******\\"\\n}","type":"json"}]',
      'title' => '更新网关规格',
      'description' => '更新云原生网关集群节点数或规格，支持按量付费和包年包月，增加节点或升级规格会产生相应资费。具体详情，请参见[价格说明](~~250950~~)。',
    ),
    'SelectGatewaySlb' => 
    array (
      'summary' => '接口，查询用户已有（启动中状态无监听）SLB。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-slb',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SLB类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'PUB_NET',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-492af9b04bb4474cae9d645be850****',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文

- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E00C6D90-A28A-5813-8981-0459AA436F46',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据结构。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SlbId' => 
                    array (
                      'description' => 'SLB ID。',
                      'type' => 'string',
                      'example' => 'lb-bp14lqiw5n96hq2****',
                    ),
                    'SlbName' => 
                    array (
                      'description' => 'SLB名称。',
                      'type' => 'string',
                      'example' => 'MseGatewaySlb-gw',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E00C6D90-A28A-5813-8981-0459AA436F46\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"SlbId\\": \\"lb-bp14lqiw5n96hq2****\\",\\n      \\"SlbName\\": \\"MseGatewaySlb-gw\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询网关SLB',
    ),
    'AddServiceSource' => 
    array (
      'summary' => '创建Nacos服务来源。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务注册类型，按来源类型填写对应的值：
- 容器服务：K8S
- MSE Nacos：NACOS
- MSE ZooKeeper：ZOOKEEPER
- SAE 注册中心：NACOS
- EDAS 注册中心：NACOS',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'NACOS
',
          ),
        ),
        1 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务来源类型：
- 容器服务：K8S
- MSE Nacos：MSE
- MSE ZooKeeper：MSE_ZK
- SAE 注册中心：SAE
- EDAS 注册中心：EDAS',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'MSE',
          ),
        ),
        2 => 
        array (
          'name' => 'Address',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问地址（必填）：
* 容器服务：对应容器服务集群ID
* MSE Nacos：实例内网访问地址
* MSE ZooKeeper：实例内网访问地址
* SAE 注册中心：命名空间TID
* EDAS 注册中心：微服务空间Namespace',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'mse-********-nacos-ans.mse.aliyuncs.com:8848',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '名称。


> 不同来源类型描述。
- 类型为K8s时入参为名称。
- 类型为NACOS时入参为实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'nacos',
          ),
        ),
        4 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-c70622ff52fe49beb29bea9a6f52****',
          ),
        ),
        5 => 
        array (
          'name' => 'IngressOptionsRequest',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'Ingress配置（服务来源类型为K8S时使用）。',
            'type' => 'object',
            'properties' => 
            array (
              'EnableIngress' => 
              array (
                'description' => '是否开启Ingress。',
                'type' => 'boolean',
                'required' => false,
                'example' => 'true',
              ),
              'IngressClass' => 
              array (
                'description' => '监听Ingress Class。',
                'type' => 'string',
                'required' => false,
                'example' => 'com.test.xxx',
              ),
              'WatchNamespace' => 
              array (
                'description' => '监听目标命名空间。',
                'type' => 'string',
                'required' => false,
                'example' => 'default',
              ),
              'EnableStatus' => 
              array (
                'description' => '是否更新Ingress Status。',
                'type' => 'boolean',
                'required' => false,
                'example' => 'true',
              ),
            ),
            'required' => false,
          ),
        ),
        6 => 
        array (
          'name' => 'ToAuthorizeSecurityGroups',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '待授权安全组列表，用于在创建来源时打通后端服务的安全组限制',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'SecurityGroupId' => 
                array (
                  'description' => '安全组ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'sg-bp1acepclex0vmi1****',
                ),
                'PortRange' => 
                array (
                  'description' => '安全组的授权端口范围，可多选，使用,分隔。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '8080/8080,9000/10000',
                ),
                'Description' => 
                array (
                  'description' => '授权记录描述。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'rule for xxx',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        7 => 
        array (
          'name' => 'GroupList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '服务分组列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '服务分组。',
              'type' => 'string',
              'required' => false,
              'example' => 'NACOS',
            ),
            'required' => false,
          ),
        ),
        8 => 
        array (
          'name' => 'PathList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '服务根路径数组。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '服务根路径。',
              'type' => 'string',
              'required' => false,
              'example' => '/test',
            ),
            'required' => false,
          ),
        ),
        9 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '支持的语言。包括以下取值：

- 中文：zh-CN（默认值）。
- 英文：en-US。
- 日文：ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D0DB055C-51F2-5BB2-82A6-CD8A3C6EE6BA',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation. Action: mse:AddServiceSource, Resource: acs:mse:cn-hangzhou:1105471854403716:instance/gw-082c943a8c304e48a37a7a29a5ddeda7',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- true：请求成功。
- false：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '63',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"D0DB055C-51F2-5BB2-82A6-CD8A3C6EE6BA\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation. Action: mse:AddServiceSource, Resource: acs:mse:cn-hangzhou:1105471854403716:instance/gw-082c943a8c304e48a37a7a29a5ddeda7\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 63\\n}","type":"json"}]',
      'title' => '创建服务来源',
    ),
    'AddGatewayServiceVersion' => 
    array (
      'summary' => '添加服务版本。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'example' => '33',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务版本。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '{\\"name\\":\\"v1\\",\\"labels\\":[{\\"key\\":\\"version\\",\\"value\\":\\"v1\\"}]}',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'gw-913a49bab6c5461187a3305fb8da****',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BA4046B6-CFC6-583C-B608-DD75011A590F',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '403',
              ),
              'Message' => 
              array (
                'description' => '错误消息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '状态码。说明：200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '网关服务ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '330',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"BA4046B6-CFC6-583C-B608-DD75011A590F\\",\\n  \\"HttpStatusCode\\": 403,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 330\\n}","type":"json"}]',
      'title' => '添加网关服务版本',
    ),
    'DeleteServiceSource' => 
    array (
      'summary' => '删除网关服务来源。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '17',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-492af9b04bb4474cae9d645be850****',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2CEF593F-D60C-5449-9E98-15CA6ECD9189',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"2CEF593F-D60C-5449-9E98-15CA6ECD9189\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 1,\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除网关服务来源',
    ),
    'DeleteGatewayServiceVersion' => 
    array (
      'summary' => '删除网关服务版本。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '777',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务版本。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{\\"name\\":\\"app\\",\\"labels\\":[{\\"key\\":\\"app\\",\\"value\\":\\"demo-server\\"}]}',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-b6988bd16920479d9104e1729f97****',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '29D52777-BE96-563E-BC6B-796ACE47A7A5',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因，例如：TaskId not found。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"29D52777-BE96-563E-BC6B-796ACE47A7A5\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 1,\\n  \\"Success\\": true,\\n  \\"Data\\": 1\\n}","type":"json"}]',
      'title' => '删除网关服务版本',
    ),
    'DeleteGatewayService' => 
    array (
      'summary' => '删除网关服务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '190',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '60',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-1a4ab101d5924b6f92c5ec98a841761f',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '请求响应结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求唯一ID',
                'type' => 'string',
                'example' => 'B3545F76-6ED1-586F-8DB9-ECE07985F381',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '服务ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '190',
                  ),
                  'Name' => 
                  array (
                    'description' => '服务名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。',
                    'type' => 'string',
                    'example' => 'gw-7ea3da97b96543e19f6c597c****',
                  ),
                  'GatewayId' => 
                  array (
                    'description' => '网关ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'SourceType' => 
                  array (
                    'description' => '服务来源',
                    'type' => 'string',
                    'example' => 'MSE',
                  ),
                  'Namespace' => 
                  array (
                    'description' => '命名空间。',
                    'type' => 'string',
                    'example' => 'default',
                  ),
                  'GroupName' => 
                  array (
                    'description' => '分组名称。',
                    'type' => 'string',
                    'example' => 'DEFAULT_GROUP',
                  ),
                  'SourceId' => 
                  array (
                    'description' => '来源ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'ServiceNameInRegistry' => 
                  array (
                    'description' => '服务注册到注册中心的名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'MetaInfo' => 
                  array (
                    'description' => '服务的基本信息。',
                    'type' => 'string',
                    'example' => '{}',
                  ),
                  'Ips' => 
                  array (
                    'description' => 'IP',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'IP',
                      'type' => 'string',
                      'example' => '127.0.1.12',
                    ),
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '服务创建时间。',
                    'type' => 'string',
                    'example' => '2022-01-14 14:39:16',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '最后修改时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B3545F76-6ED1-586F-8DB9-ECE07985F381\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 190,\\n    \\"Name\\": \\"test\\",\\n    \\"GatewayUniqueId\\": \\"gw-7ea3da97b96543e19f6c597c****\\",\\n    \\"GatewayId\\": 1,\\n    \\"SourceType\\": \\"MSE\\",\\n    \\"Namespace\\": \\"default\\",\\n    \\"GroupName\\": \\"DEFAULT_GROUP\\",\\n    \\"SourceId\\": 1,\\n    \\"ServiceNameInRegistry\\": \\"test\\",\\n    \\"MetaInfo\\": \\"{}\\",\\n    \\"Ips\\": [\\n      \\"127.0.1.12\\"\\n    ],\\n    \\"GmtCreate\\": \\"2022-01-14 14:39:16\\",\\n    \\"GmtModified\\": \\"2022-01-07T10:07:57.000+0000\\"\\n  }\\n}","type":"json"}]',
      'title' => '删除网关服务',
    ),
    'UpdateGatewayServiceTrafficPolicy' => 
    array (
      'summary' => '更新服务流量策略。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '429',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'example' => '411',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayTrafficPolicy',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '网关流量控制策略。',
            'required' => true,
            '$ref' => '#/components/schemas/TrafficPolicy',
          ),
        ),
        3 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-75c5036c083e4f89ba8ef9fafff2e902',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回值的语言，取值：

- **zh-CN**：中文，默认值。
- **en-US**：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '11A61389-F896-5231-A4FB-074D9E2E0055',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'example' => '{\'GatewayUniqueId\': \'gw-2b8ebd75dc554c37a4279ba9917379f2\', \'Id\': 417, \'GatewayTrafficPolicy\': {\'LoadBalancerSettings\': {\'LoadbalancerType\': \'ROUND_ROBIN\'}, \'TlsSetting\': {\'TlsMode\': \'DISABLE\'}}}',
                '$ref' => '#/components/schemas/GatewayService',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"11A61389-F896-5231-A4FB-074D9E2E0055\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 0,\\n    \\"Name\\": \\"\\",\\n    \\"SourceType\\": \\"\\",\\n    \\"GatewayTrafficPolicy\\": {\\n      \\"TlsSetting\\": {\\n        \\"TlsMode\\": \\"SIMPLE\\",\\n        \\"CertId\\": \\"\\",\\n        \\"CaCertContent\\": \\"\\",\\n        \\"Sni\\": \\"\\"\\n      },\\n      \\"LoadBalancerSettings\\": {\\n        \\"LoadbalancerType\\": \\"RANDOM\\",\\n        \\"ConsistentHashLBConfig\\": {\\n          \\"ParameterName\\": \\"\\",\\n          \\"HttpCookie\\": {\\n            \\"Name\\": \\"\\",\\n            \\"Path\\": \\"\\",\\n            \\"TTL\\": \\"0s\\"\\n          },\\n          \\"ConsistentHashLBType\\": \\"\\"\\n        },\\n        \\"WarmupDuration\\": 0\\n      }\\n    },\\n    \\"GatewayUniqueId\\": \\"\\",\\n    \\"MetaInfo\\": \\"\\",\\n    \\"Namespace\\": \\"\\",\\n    \\"GroupName\\": \\"\\"\\n  }\\n}","type":"json"}]',
      'title' => '更新服务流量策略',
    ),
    'UpdateGatewayServiceVersion' => 
    array (
      'summary' => '更新修改服务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '575',
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务版本。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{\\"name\\":\\"v3\\",\\"labels\\":[{\\"key\\":\\"version\\",\\"value\\":\\"v3\\"}]}',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-eccf313e2224438ba53d95d039e5****',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D6580AA6-E285-58D2-B00B-12C051B3B7BF',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '节点数据。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '614',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"D6580AA6-E285-58D2-B00B-12C051B3B7BF\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 1,\\n  \\"Success\\": true,\\n  \\"Data\\": 614\\n}","type":"json"}]',
      'title' => '更新服务版本',
    ),
    'ListServiceSource' => 
    array (
      'summary' => '查询已关联来源列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-c51a15c7ee934a4fb945ccf35fe1****',
          ),
        ),
        1 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取指定服务来源类型（为空返回所有类型）：
- 容器服务：K8s
- MSE Nacos：MSE
- MSE ZooKeeper：MSE_ZK
- SAE 注册中心：SAE
- EDAS 注册中心：EDAS',
            'type' => 'string',
            'required' => false,
            'example' => 'MSE',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B8C4B0D8-EBB9-5F20-8295-04224FBE5529',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Id' => 
                    array (
                      'description' => 'ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'Name' => 
                    array (
                      'description' => '名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'Address' => 
                    array (
                      'description' => 'ACK ID或MSE注册中心地址。',
                      'type' => 'string',
                      'example' => '***',
                    ),
                    'Type' => 
                    array (
                      'description' => '类型。',
                      'type' => 'string',
                      'example' => 'NACOS',
                    ),
                    'Source' => 
                    array (
                      'description' => '来源类型。',
                      'type' => 'string',
                      'example' => 'MSE',
                    ),
                    'BindingWithGateway' => 
                    array (
                      'description' => '是否完成绑定。
（数值1表示完成绑定）',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'GatewayId' => 
                    array (
                      'description' => '网关ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'GmtCreate' => 
                    array (
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2022-01-07 18:07:57',
                    ),
                    'GmtModified' => 
                    array (
                      'description' => '更新时间。',
                      'type' => 'string',
                      'example' => '2022-01-07 18:07:57',
                    ),
                    'SourceUniqueId' => 
                    array (
                      'description' => '来源唯一标识。',
                      'type' => 'string',
                      'example' => 'mse-cn-***',
                    ),
                    'IngressOptions' => 
                    array (
                      'description' => '应用路由Ingress支持。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EnableIngress' => 
                        array (
                          'description' => '开启或关闭Ingress。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'IngressClass' => 
                        array (
                          'description' => 'Ingress Class。',
                          'type' => 'string',
                          'example' => 'com.test.xxx',
                        ),
                        'WatchNamespace' => 
                        array (
                          'description' => '监听命名空间。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'EnableStatus' => 
                        array (
                          'description' => '是否更新IngressStatus。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                    'GatewayUniqueId' => 
                    array (
                      'description' => '网关UniqueId。',
                      'type' => 'string',
                      'example' => 'gw-2u9uhd9283hd92hgd39g239dg2*****',
                    ),
                    'GroupList' => 
                    array (
                      'description' => '服务分组数组。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '服务分组。',
                        'type' => 'string',
                        'example' => 'DEFAULT_GROUP',
                      ),
                    ),
                    'PathList' => 
                    array (
                      'description' => '服务列表根路径数组。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '服务列表根路径。',
                        'type' => 'string',
                        'example' => '/path',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B8C4B0D8-EBB9-5F20-8295-04224FBE5529\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"Id\\": 1,\\n      \\"Name\\": \\"test\\",\\n      \\"Address\\": \\"***\\",\\n      \\"Type\\": \\"NACOS\\",\\n      \\"Source\\": \\"MSE\\",\\n      \\"BindingWithGateway\\": 1,\\n      \\"GatewayId\\": 1,\\n      \\"GmtCreate\\": \\"2022-01-07 18:07:57\\",\\n      \\"GmtModified\\": \\"2022-01-07 18:07:57\\",\\n      \\"SourceUniqueId\\": \\"mse-cn-***\\",\\n      \\"IngressOptions\\": {\\n        \\"EnableIngress\\": true,\\n        \\"IngressClass\\": \\"com.test.xxx\\",\\n        \\"WatchNamespace\\": \\"default\\",\\n        \\"EnableStatus\\": true\\n      },\\n      \\"GatewayUniqueId\\": \\"gw-2u9uhd9283hd92hgd39g239dg2*****\\",\\n      \\"GroupList\\": [\\n        \\"DEFAULT_GROUP\\"\\n      ],\\n      \\"PathList\\": [\\n        \\"/path\\"\\n      ]\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询网关已关联的服务来源列表',
    ),
    'ListGatewayService' => 
    array (
      'summary' => '查询网关已订阅的服务列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '25193',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmse5GGXKF',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'OrderItem',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序属性。',
            'type' => 'string',
            'required' => false,
            'example' => 'GmtCreate',
          ),
        ),
        3 => 
        array (
          'name' => 'DescSort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'FilterParams',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '过滤条件，格式为{"key1":"value1"}。',
            'type' => 'object',
            'properties' => 
            array (
              'Name' => 
              array (
                'description' => '服务名。',
                'type' => 'string',
                'required' => false,
                'example' => 'test',
              ),
              'SourceType' => 
              array (
                'description' => '来源类型。',
                'type' => 'string',
                'required' => false,
                'example' => 'MSE',
              ),
              'Namespace' => 
              array (
                'description' => '命名空间。',
                'type' => 'string',
                'required' => false,
                'example' => 'public',
              ),
              'GroupName' => 
              array (
                'description' => '分组。',
                'type' => 'string',
                'required' => false,
                'example' => 'test',
              ),
              'GatewayUniqueId' => 
              array (
                'description' => '网关唯一标识ID。',
                'type' => 'string',
                'required' => true,
                'docRequired' => true,
                'example' => 'gw-5017305290e14centbrveca****',
              ),
              'ServiceProtocol' => 
              array (
                'description' => '服务协议。

- HTTP

- HTTPS

- HTTP2

- GRPC

- DUBBO',
                'type' => 'string',
                'required' => false,
                'enumValueTitles' => 
                array (
                  'HTTP2' => 'HTTP2',
                  'HTTPS' => 'HTTPS',
                  'HTTP' => 'HTTP',
                  'DUBBO' => 'DUBBO',
                  'GRPC' => 'GRPC',
                ),
                'example' => 'HTTP',
              ),
            ),
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F46CDBA4-B1EE-5C94-8A48-51C10177****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'TotalSize' => 
                  array (
                    'description' => '总条数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '9',
                  ),
                  'PageNumber' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页最大记录数，默认值为10。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Result' => 
                  array (
                    'description' => '返回集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => 'ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'Name' => 
                        array (
                          'description' => '服务名。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关唯一ID。',
                          'type' => 'string',
                          'example' => 'gw-5017305290e14centbrveca****',
                        ),
                        'GatewayId' => 
                        array (
                          'description' => '网关ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'SourceType' => 
                        array (
                          'description' => '来源类型。',
                          'type' => 'string',
                          'example' => 'MSE',
                        ),
                        'Namespace' => 
                        array (
                          'description' => '命名空间。',
                          'type' => 'string',
                          'example' => 'public',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '分组。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'SourceId' => 
                        array (
                          'description' => '来源ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'ServiceNameInRegistry' => 
                        array (
                          'description' => '注册中心中原服务名。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'MetaInfo' => 
                        array (
                          'description' => '元信息或IP列表。',
                          'type' => 'string',
                          'example' => '{}',
                        ),
                        'Ips' => 
                        array (
                          'description' => 'IP列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'IP。',
                            'type' => 'string',
                            'example' => '127.0.2.1',
                          ),
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '记录创建时间。',
                          'type' => 'string',
                          'example' => '2022-01-07 18:07:57',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '记录修改时间。',
                          'type' => 'string',
                          'example' => '2022-01-07 18:07:57',
                        ),
                        'Versions' => 
                        array (
                          'description' => '服务版本。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '版本。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Name' => 
                              array (
                                'description' => '版本名。',
                                'type' => 'string',
                                'example' => 'v1',
                              ),
                            ),
                          ),
                        ),
                        'ServiceProtocol' => 
                        array (
                          'description' => '服务协议。',
                          'type' => 'string',
                          'example' => 'HTTP',
                        ),
                        'ServicePort' => 
                        array (
                          'description' => '服务端口。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '80',
                        ),
                        'HealehStatus' => 
                        array (
                          'description' => '健康状态。

- Health

- Unhealthy

- Unknown',
                          'type' => 'string',
                          'example' => 'Unhealthy',
                        ),
                        'HealthStatus' => 
                        array (
                          'description' => '健康状态。

- Health

- Unhealthy

- Unknown',
                          'type' => 'string',
                          'example' => 'Unhealthy',
                        ),
                        'HealthCheck' => 
                        array (
                          'description' => '是否进行健康检查。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'HealthCheckInfo' => 
                        array (
                          'description' => '健康检查信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Check' => 
                            array (
                              'description' => '是否检查。',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                            'Protocol' => 
                            array (
                              'description' => '网络协议。',
                              'type' => 'string',
                              'example' => 'TCP',
                            ),
                            'Timeout' => 
                            array (
                              'description' => '超时时间。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2',
                            ),
                            'Interval' => 
                            array (
                              'description' => '健康检查间隔。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2',
                            ),
                            'HealthyThreshold' => 
                            array (
                              'description' => '健康阈值。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2',
                            ),
                            'UnhealthyThreshold' => 
                            array (
                              'description' => '非健康阈值。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2',
                            ),
                            'HttpPath' => 
                            array (
                              'description' => '健康检查HTTP请求路径。',
                              'type' => 'string',
                              'example' => '/health',
                            ),
                            'HttpHost' => 
                            array (
                              'description' => '健康检查HTTP请求地址。',
                              'type' => 'string',
                              'example' => 'http://172.168.0.1',
                            ),
                            'ExpectedStatuses' => 
                            array (
                              'description' => '健康检查期望状态值。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '期望的HttpStatus。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '200',
                              ),
                            ),
                          ),
                        ),
                        'UnhealthyEndpoints' => 
                        array (
                          'description' => '非健康endpoint数组',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '非健康endpoint',
                            'type' => 'string',
                            'example' => '172.168.0.1',
                          ),
                        ),
                        'GatewayTrafficPolicy' => 
                        array (
                          'description' => '流量管理策略。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tls' => 
                            array (
                              'description' => 'TLS。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Mode' => 
                                array (
                                  'title' => 'DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL',
                                  'description' => 'TLS模式。

- DISABLE

 - SIMPLE

- MUTUAL

- ISTIO_MUTUAL',
                                  'type' => 'string',
                                  'example' => 'SIMPLE',
                                ),
                                'CertId' => 
                                array (
                                  'description' => '证书ID。',
                                  'type' => 'string',
                                  'example' => '5******-cn-hangzhou',
                                ),
                                'CaCertId' => 
                                array (
                                  'description' => 'CA证书ID。',
                                  'type' => 'string',
                                  'example' => '5******-cn-hangzhou',
                                ),
                                'CaCertContent' => 
                                array (
                                  'description' => 'CA证书公钥。',
                                  'type' => 'string',
                                  'example' => 'content',
                                ),
                                'SubjectAltNames' => 
                                array (
                                  'description' => '主体别名数组。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '主体别名。',
                                    'type' => 'string',
                                    'example' => 'name',
                                  ),
                                ),
                                'Sni' => 
                                array (
                                  'description' => '服务名称标识。',
                                  'type' => 'string',
                                  'example' => 'name-sni',
                                ),
                              ),
                            ),
                            'LoadBalancerSettings' => 
                            array (
                              'description' => '负载均衡设置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'LoadbalancerType' => 
                                array (
                                  'title' => 'ROUND_ROBIN, LEAST_CONN, RANDOM, CONSISTENT_HASH',
                                  'description' => '负载均衡策略

- ROUND_ROBIN

 - LEAST_CONN

 - RANDOM

 - CONSISTENT_HASH',
                                  'type' => 'string',
                                  'example' => 'RANDOM',
                                ),
                                'ConsistentHashLBConfig' => 
                                array (
                                  'description' => '一致性哈希配置。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'ParameterName' => 
                                    array (
                                      'description' => '参数名称。',
                                      'type' => 'string',
                                      'example' => 'param',
                                    ),
                                    'HttpCookie' => 
                                    array (
                                      'description' => '基于Cookie的参数。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'Name' => 
                                        array (
                                          'description' => 'cookie名称。',
                                          'type' => 'string',
                                          'example' => 'name',
                                        ),
                                        'Path' => 
                                        array (
                                          'description' => 'cookie路径。',
                                          'type' => 'string',
                                          'example' => '/path',
                                        ),
                                        'Ttl' => 
                                        array (
                                          'description' => 'cookie生命周期。',
                                          'type' => 'string',
                                          'example' => '360',
                                        ),
                                      ),
                                    ),
                                    'MinimumRingSize' => 
                                    array (
                                      'description' => '哈希环最小值。',
                                      'type' => 'integer',
                                      'format' => 'int64',
                                      'example' => '10000',
                                    ),
                                    'ConsistentHashLBType' => 
                                    array (
                                      'title' => 'HEADER, COOKIE, SOURCE_IP, QUERY_PARAMETER',
                                      'description' => '一致性哈希的方式。

- HEADER

 - COOKIE

 - SOURCE_IP

 - QUERY_PARAMETER',
                                      'type' => 'string',
                                      'example' => 'HEADER',
                                    ),
                                  ),
                                ),
                                'WarmupDuration' => 
                                array (
                                  'description' => '最小请求数的预热时间。',
                                  'type' => 'integer',
                                  'format' => 'int32',
                                  'example' => '10',
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Ports' => 
                        array (
                          'description' => '端口数组。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '端口。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '8080',
                          ),
                        ),
                        'ServiceFQDN' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"F46CDBA4-B1EE-5C94-8A48-51C10177****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TotalSize\\": 9,\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"Result\\": [\\n      {\\n        \\"Id\\": 1,\\n        \\"Name\\": \\"test\\",\\n        \\"GatewayUniqueId\\": \\"gw-5017305290e14centbrveca****\\",\\n        \\"GatewayId\\": 1,\\n        \\"SourceType\\": \\"MSE\\",\\n        \\"Namespace\\": \\"public\\",\\n        \\"GroupName\\": \\"test\\",\\n        \\"SourceId\\": 2,\\n        \\"ServiceNameInRegistry\\": \\"test\\",\\n        \\"MetaInfo\\": \\"{}\\",\\n        \\"Ips\\": [\\n          \\"127.0.2.1\\"\\n        ],\\n        \\"GmtCreate\\": \\"2022-01-07 18:07:57\\",\\n        \\"GmtModified\\": \\"2022-01-07 18:07:57\\",\\n        \\"Versions\\": [\\n          {\\n            \\"Name\\": \\"v1\\"\\n          }\\n        ],\\n        \\"ServiceProtocol\\": \\"HTTP\\",\\n        \\"ServicePort\\": 80,\\n        \\"HealehStatus\\": \\"Unhealthy\\",\\n        \\"HealthStatus\\": \\"Unhealthy\\",\\n        \\"HealthCheck\\": true,\\n        \\"HealthCheckInfo\\": {\\n          \\"Check\\": true,\\n          \\"Protocol\\": \\"TCP\\",\\n          \\"Timeout\\": 2,\\n          \\"Interval\\": 2,\\n          \\"HealthyThreshold\\": 2,\\n          \\"UnhealthyThreshold\\": 2,\\n          \\"HttpPath\\": \\"/health\\",\\n          \\"HttpHost\\": \\"http://172.168.0.1\\",\\n          \\"ExpectedStatuses\\": [\\n            200\\n          ]\\n        },\\n        \\"UnhealthyEndpoints\\": [\\n          \\"172.168.0.1\\"\\n        ],\\n        \\"GatewayTrafficPolicy\\": {\\n          \\"Tls\\": {\\n            \\"Mode\\": \\"SIMPLE\\",\\n            \\"CertId\\": \\"5******-cn-hangzhou\\",\\n            \\"CaCertId\\": \\"5******-cn-hangzhou\\",\\n            \\"CaCertContent\\": \\"content\\",\\n            \\"SubjectAltNames\\": [\\n              \\"name\\"\\n            ],\\n            \\"Sni\\": \\"name-sni\\"\\n          },\\n          \\"LoadBalancerSettings\\": {\\n            \\"LoadbalancerType\\": \\"RANDOM\\",\\n            \\"ConsistentHashLBConfig\\": {\\n              \\"ParameterName\\": \\"param\\",\\n              \\"HttpCookie\\": {\\n                \\"Name\\": \\"name\\",\\n                \\"Path\\": \\"/path\\",\\n                \\"Ttl\\": \\"360\\"\\n              },\\n              \\"MinimumRingSize\\": 10000,\\n              \\"ConsistentHashLBType\\": \\"HEADER\\"\\n            },\\n            \\"WarmupDuration\\": 10\\n          }\\n        },\\n        \\"Ports\\": [\\n          8080\\n        ],\\n        \\"ServiceFQDN\\": \\"\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询网关已订阅的服务列表',
    ),
    'GetMseSource' => 
    array (
      'summary' => '查询已有MSE Nacos。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '24939',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseZM8SC5',
          1 => 'FEATUREmseRZJSHZ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'gw-7ea3da97b96543e19f6c597cd4a9****',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC ID',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp1t50e045b5g7i3p****',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MSE引擎类型：

- NACOS

- ZOOKEEPER',
            'type' => 'string',
            'required' => false,
            'example' => 'NACOS',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'en' => '英文',
              'zh' => '中文',
            ),
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5EB2D865-B43F-5526-8F92-857718CF73A2',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

- 当请求成功时，返回成功信息。
- 当请求失败时，返回失败原因，例如：TaskId not found。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据结构。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'InstanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'mse_prepaid_public_cn-7pp2eec****',
                    ),
                    'Address' => 
                    array (
                      'description' => '链接地址。',
                      'type' => 'string',
                      'example' => 'mse-af1****-nacos-ans.mse.aliyuncs.com:8848',
                    ),
                    'Type' => 
                    array (
                      'description' => '类型。',
                      'type' => 'string',
                      'example' => 'Nacos',
                    ),
                    'Name' => 
                    array (
                      'description' => '名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'ClusterId' => 
                    array (
                      'description' => '集群ID。',
                      'type' => 'string',
                      'example' => 'mse_',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"5EB2D865-B43F-5526-8F92-857718CF73A2\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 1,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"InstanceId\\": \\"mse_prepaid_public_cn-7pp2eec****\\",\\n      \\"Address\\": \\"mse-af1****-nacos-ans.mse.aliyuncs.com:8848\\",\\n      \\"Type\\": \\"Nacos\\",\\n      \\"Name\\": \\"test\\",\\n      \\"ClusterId\\": \\"mse_\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询MSE Nacos来源',
    ),
    'GetKubernetesSource' => 
    array (
      'summary' => '获取当前所有ACK集群来源信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-c5d1aadb7df646cfb7065fbf75c1****',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专有网络vpcid。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp1t50e045b5g7i3p****',
          ),
        ),
        2 => 
        array (
          'name' => 'IsAll',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否获取所有K8s集群（false时只获取未被关联的集群）。',
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1085A66C-DEF1-58EE-A0A4-31E00C9FC0D5',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据结构。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'description' => 'ACK集群名称。',
                      'type' => 'string',
                      'example' => 'k8s-demo',
                    ),
                    'Cluster' => 
                    array (
                      'description' => 'ACK集群ID。',
                      'type' => 'string',
                      'example' => 'cbc1efca895a64af097ff00b26f3f****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"1085A66C-DEF1-58EE-A0A4-31E00C9FC0D5\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"Name\\": \\"k8s-demo\\",\\n      \\"Cluster\\": \\"cbc1efca895a64af097ff00b26f3f****\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询ACK集群来源信息',
    ),
    'GetGatewayServiceDetail' => 
    array (
      'summary' => '查询服务详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '39518',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmse5GGXKF',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '35',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-f4c960ad071a48a790b36324394c****',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9802C54E-5CC5-5706-927B-993DBB6DCF2F',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '服务ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'Name' => 
                  array (
                    'description' => '服务名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。',
                    'type' => 'string',
                    'example' => 'gw-7ea3da97b96543e19f6c597c****',
                  ),
                  'GatewayId' => 
                  array (
                    'description' => '网关ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'SourceType' => 
                  array (
                    'description' => '服务来源',
                    'type' => 'string',
                    'example' => 'MSE',
                  ),
                  'Namespace' => 
                  array (
                    'description' => '命名空间。',
                    'type' => 'string',
                    'example' => 'default',
                  ),
                  'GroupName' => 
                  array (
                    'description' => '分组名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'SourceId' => 
                  array (
                    'description' => '来源ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'ServiceNameInRegistry' => 
                  array (
                    'description' => '服务注册到注册中心的名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'MetaInfo' => 
                  array (
                    'description' => '服务的基本信息。',
                    'type' => 'string',
                    'example' => '{}',
                  ),
                  'Ips' => 
                  array (
                    'description' => '服务IP地址。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'IP。',
                      'type' => 'string',
                      'example' => '127.0.1.12',
                    ),
                  ),
                  'Versions' => 
                  array (
                    'description' => '服务版本号（已废弃）。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Label' => 
                        array (
                          'description' => '标签。',
                          'type' => 'string',
                          'example' => 'version',
                        ),
                        'Value' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'v1',
                        ),
                        'Type' => 
                        array (
                          'description' => '类型。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                  'LabelDetails' => 
                  array (
                    'description' => '标签详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '标签。',
                          'type' => 'string',
                          'example' => 'label',
                        ),
                        'Values' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'v1',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'VersionDetails' => 
                  array (
                    'description' => '版本详细。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ServiceVersion' => 
                        array (
                          'description' => '服务版本。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Name' => 
                            array (
                              'description' => '版本名。',
                              'type' => 'string',
                              'example' => 'v2',
                            ),
                            'Labels' => 
                            array (
                              'description' => '标签。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '数据结构。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签。',
                                    'type' => 'string',
                                    'example' => 'version',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'v2',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'EndpointNum' => 
                        array (
                          'description' => '实例数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'EndpointNumPercent' => 
                        array (
                          'description' => '实例百分比。',
                          'type' => 'string',
                          'example' => '20%',
                        ),
                      ),
                    ),
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2022-01-07 18:07:57',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '最后修改时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                  'GatewayTrafficPolicy' => 
                  array (
                    'description' => '服务流量策略。',
                    'example' => '{}',
                    '$ref' => '#/components/schemas/TrafficPolicy',
                  ),
                  'HealthStatus' => 
                  array (
                    'description' => '健康检查状态。',
                    'type' => 'string',
                    'example' => 'true',
                  ),
                  'HealthCheck' => 
                  array (
                    'description' => '是否健康检查。',
                    'type' => 'string',
                    'example' => 'true',
                  ),
                  'ServiceProtocol' => 
                  array (
                    'description' => '服务协议。',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'Ports' => 
                  array (
                    'description' => '服务端口数组。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '服务端口。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '80',
                    ),
                  ),
                  'PortTrafficPolicyList' => 
                  array (
                    'description' => '服务端口流量策略。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '端口流量策略对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '端口配置ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'ServiceId' => 
                        array (
                          'description' => '服务ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'ServicePort' => 
                        array (
                          'description' => '服务端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '8080',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关UniqueId。',
                          'type' => 'string',
                          'example' => 'gw-2837hfd91h34dbg87364g*****',
                        ),
                        'TrafficPolicy' => 
                        array (
                          'description' => '流量策略。',
                          '$ref' => '#/components/schemas/TrafficPolicy',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建时间',
                          'type' => 'string',
                          'example' => '1667460287386',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '修改时间。',
                          'type' => 'string',
                          'example' => '1667460287386',
                        ),
                      ),
                    ),
                  ),
                  'ServiceFQDN' => 
                  array (
                    'type' => 'string',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"9802C54E-5CC5-5706-927B-993DBB6DCF2F\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 1,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 1,\\n    \\"Name\\": \\"test\\",\\n    \\"GatewayUniqueId\\": \\"gw-7ea3da97b96543e19f6c597c****\\",\\n    \\"GatewayId\\": 1,\\n    \\"SourceType\\": \\"MSE\\",\\n    \\"Namespace\\": \\"default\\",\\n    \\"GroupName\\": \\"test\\",\\n    \\"SourceId\\": 1,\\n    \\"ServiceNameInRegistry\\": \\"test\\",\\n    \\"MetaInfo\\": \\"{}\\",\\n    \\"Ips\\": [\\n      \\"127.0.1.12\\"\\n    ],\\n    \\"Versions\\": [\\n      {\\n        \\"Label\\": \\"version\\",\\n        \\"Value\\": \\"v1\\",\\n        \\"Type\\": \\"test\\"\\n      }\\n    ],\\n    \\"LabelDetails\\": [\\n      {\\n        \\"Key\\": \\"label\\",\\n        \\"Values\\": [\\n          \\"v1\\"\\n        ]\\n      }\\n    ],\\n    \\"VersionDetails\\": [\\n      {\\n        \\"ServiceVersion\\": {\\n          \\"Name\\": \\"v2\\",\\n          \\"Labels\\": [\\n            {\\n              \\"Key\\": \\"version\\",\\n              \\"Value\\": \\"v2\\"\\n            }\\n          ]\\n        },\\n        \\"EndpointNum\\": 1,\\n        \\"EndpointNumPercent\\": \\"20%\\"\\n      }\\n    ],\\n    \\"GmtCreate\\": \\"2022-01-07 18:07:57\\",\\n    \\"GmtModified\\": \\"2022-01-07T10:07:57.000+0000\\",\\n    \\"GatewayTrafficPolicy\\": {\\n      \\"TlsSetting\\": {\\n        \\"TlsMode\\": \\"SIMPLE\\",\\n        \\"CertId\\": \\"\\",\\n        \\"CaCertContent\\": \\"\\",\\n        \\"Sni\\": \\"\\"\\n      },\\n      \\"LoadBalancerSettings\\": {\\n        \\"LoadbalancerType\\": \\"RANDOM\\",\\n        \\"ConsistentHashLBConfig\\": {\\n          \\"ParameterName\\": \\"\\",\\n          \\"HttpCookie\\": {\\n            \\"Name\\": \\"\\",\\n            \\"Path\\": \\"\\",\\n            \\"TTL\\": \\"0s\\"\\n          },\\n          \\"ConsistentHashLBType\\": \\"\\"\\n        },\\n        \\"WarmupDuration\\": 0\\n      }\\n    },\\n    \\"HealthStatus\\": \\"true\\",\\n    \\"HealthCheck\\": \\"true\\",\\n    \\"ServiceProtocol\\": \\"HTTP\\",\\n    \\"Ports\\": [\\n      80\\n    ],\\n    \\"PortTrafficPolicyList\\": [\\n      {\\n        \\"Id\\": 1,\\n        \\"ServiceId\\": 1,\\n        \\"ServicePort\\": 8080,\\n        \\"GatewayUniqueId\\": \\"gw-2837hfd91h34dbg87364g*****\\",\\n        \\"TrafficPolicy\\": {\\n          \\"TlsSetting\\": {\\n            \\"TlsMode\\": \\"SIMPLE\\",\\n            \\"CertId\\": \\"\\",\\n            \\"CaCertContent\\": \\"\\",\\n            \\"Sni\\": \\"\\"\\n          },\\n          \\"LoadBalancerSettings\\": {\\n            \\"LoadbalancerType\\": \\"RANDOM\\",\\n            \\"ConsistentHashLBConfig\\": {\\n              \\"ParameterName\\": \\"\\",\\n              \\"HttpCookie\\": {\\n                \\"Name\\": \\"\\",\\n                \\"Path\\": \\"\\",\\n                \\"TTL\\": \\"0s\\"\\n              },\\n              \\"ConsistentHashLBType\\": \\"\\"\\n            },\\n            \\"WarmupDuration\\": 0\\n          }\\n        },\\n        \\"GmtCreate\\": \\"1667460287386\\",\\n        \\"GmtModified\\": \\"1667460287386\\"\\n      }\\n    ],\\n    \\"ServiceFQDN\\": \\"\\"\\n  }\\n}","type":"json"}]',
      'title' => '查询网关服务详情',
    ),
    'UpdateServiceSource' => 
    array (
      'summary' => '修改云原生网关服务来源，目前仅支持对含有Ingress监听配置的ACK容器服务进行修改操作。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '429',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '类型。

- 容器服务为K8s。
- NACOS为NACOS。',
            'type' => 'string',
            'required' => false,
            'example' => 'K8s',
          ),
        ),
        2 => 
        array (
          'name' => 'Source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '来源。

- 容器服务为K8s。
- NACOS为MSE。',
            'type' => 'string',
            'required' => false,
            'example' => 'K8s',
          ),
        ),
        3 => 
        array (
          'name' => 'Address',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'c9ad2a0717032427e920754e25b49e3b5',
          ),
        ),
        4 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务来源ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '63',
          ),
        ),
        5 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'istio',
          ),
        ),
        6 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'gw-cdd1bb9bfb8341e9805f931a3ba1f4c6',
          ),
        ),
        7 => 
        array (
          'name' => 'IngressOptionsRequest',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'Ingress配置。',
            'type' => 'object',
            'properties' => 
            array (
              'EnableIngress' => 
              array (
                'description' => '是否开启Ingress。',
                'type' => 'boolean',
                'required' => false,
                'example' => 'true',
              ),
              'IngressClass' => 
              array (
                'description' => '监听Ingress Class。',
                'type' => 'string',
                'required' => false,
                'example' => 'com.test.xxx',
              ),
              'WatchNamespace' => 
              array (
                'description' => '监听目标命名空间。',
                'type' => 'string',
                'required' => false,
                'example' => 'default',
              ),
              'EnableStatus' => 
              array (
                'description' => '是否更新Ingress Status。',
                'type' => 'boolean',
                'required' => false,
                'example' => 'true',
              ),
            ),
            'required' => false,
            'example' => 'zh',
          ),
        ),
        8 => 
        array (
          'name' => 'PathList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '服务根路径数组。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '服务根路径。',
              'type' => 'string',
              'required' => false,
              'example' => '/path',
            ),
            'required' => false,
          ),
        ),
        9 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型。
- zh：中文。
- en：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6AB2B0B6-4A86-54E2-A340-FC47A22EE659',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下。
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '63',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6AB2B0B6-4A86-54E2-A340-FC47A22EE659\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 63\\n}","type":"json"}]',
      'title' => '更新服务来源',
    ),
    'ImportServices' => 
    array (
      'summary' => '订阅导入网关的服务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServiceList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '服务列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '数据结构。',
              'type' => 'object',
              'properties' => 
              array (
                'Name' => 
                array (
                  'description' => '服务名。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'Namespace' => 
                array (
                  'description' => '命名空间。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'public',
                ),
                'GroupName' => 
                array (
                  'description' => '分组。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'Ips' => 
                array (
                  'description' => 'IP列表。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => 'IP。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '127.0.XX.XX',
                  ),
                  'required' => false,
                ),
                'ServicePort' => 
                array (
                  'title' => '服务的端口',
                  'description' => '服务的端口。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '8080',
                ),
                'ServiceProtocol' => 
                array (
                  'title' => '服务的协议版本',
                  'description' => '服务的协议版本。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GRPC, HTTP',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'example' => 'DNS',
          ),
        ),
        1 => 
        array (
          'name' => 'SourceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务来源',
            'description' => '服务来源：

-  MSE（MSE-NACOS）
-  K8s（ACK容器服务）
-  VIP（固定地址）
-  DNS（DNS域名）',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
              'EDAS' => 'EDAS',
              'MSE_ZK' => 'MSE_ZK',
              'SAE' => 'SAE',
              'K8S' => 'K8S',
              'DNS' => 'DNS',
              'VIP' => 'VIP',
              'MSE' => 'MSE',
            ),
            'example' => 'DNS',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-77e1153db6e14c0a8b1fae20bcb89ca5',
          ),
        ),
        3 => 
        array (
          'name' => 'TlsSetting',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'TLS设定。

- TLS模式：mode

- 证书ID：certId

- CA证书ID：caCertId

- CA证书公钥：caCertContent

- 服务名称标识：sni',
            'type' => 'string',
            'required' => false,
            'example' => '{
      "mode": "MUTUAL",
      "certId": "1*****-cn-hangzhou",
      "caCertContent": "123",
      "sni": "ceshi"
}',
          ),
        ),
        4 => 
        array (
          'name' => 'FcServiceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'FC服务名称，服务来源为“FC 函数计算”时使用。',
            'type' => 'string',
            'required' => false,
            'example' => 'guide',
          ),
        ),
        5 => 
        array (
          'name' => 'FcVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'FC服务版本号，服务来源为“FC 函数计算”时使用。',
            'type' => 'string',
            'required' => false,
            'example' => 'LATEST',
          ),
        ),
        6 => 
        array (
          'name' => 'FcAlias',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'FC服务别名，服务来源为“FC 函数计算”时使用。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-alias',
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0F0FBA7D-5AC5-5DC4-A1E9-E9656BFAE1B9',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回结果。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0F0FBA7D-5AC5-5DC4-A1E9-E9656BFAE1B9\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '创建网关服务',
    ),
    'PullServices' => 
    array (
      'summary' => '查询指定来源可导入服务信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务来源类型。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'K8S' => 'K8S',
              'MSE' => 'MSE',
            ),
            'example' => 'K8S',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-eccf313e2224438ba53d95d039e5****',
          ),
        ),
        2 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间。',
            'type' => 'string',
            'required' => false,
            'example' => 'public',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EC0A99B9-8BA3-5FE3-8FE7-D7C719CF7BD2',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation. Action: mse:PullServices, Resource: acs:mse:cn-shenzhen:1228932054837788:*',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据结构。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Namespace' => 
                    array (
                      'description' => '命名空间。',
                      'type' => 'string',
                      'example' => 'default',
                    ),
                    'GroupName' => 
                    array (
                      'description' => '分组。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'Services' => 
                    array (
                      'description' => '服务列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '数据结构。

',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Name' => 
                          array (
                            'description' => '服务名。',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                          'Namespace' => 
                          array (
                            'description' => '命名空间。',
                            'type' => 'string',
                            'example' => 'public',
                          ),
                          'GroupName' => 
                          array (
                            'description' => '分组。',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                          'SourceId' => 
                          array (
                            'description' => '来源ID。',
                            'type' => 'string',
                            'example' => '1',
                          ),
                          'SourceType' => 
                          array (
                            'description' => '来源类型。',
                            'type' => 'string',
                            'example' => 'MSE',
                          ),
                        ),
                      ),
                    ),
                    'NamespaceShowName' => 
                    array (
                      'description' => '命名空间别名。',
                      'type' => 'string',
                      'example' => 'public',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"EC0A99B9-8BA3-5FE3-8FE7-D7C719CF7BD2\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation. Action: mse:PullServices, Resource: acs:mse:cn-shenzhen:1228932054837788:*\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"Namespace\\": \\"default\\",\\n      \\"GroupName\\": \\"test\\",\\n      \\"Services\\": [\\n        {\\n          \\"Name\\": \\"test\\",\\n          \\"Namespace\\": \\"public\\",\\n          \\"GroupName\\": \\"test\\",\\n          \\"SourceId\\": \\"1\\",\\n          \\"SourceType\\": \\"MSE\\"\\n        }\\n      ],\\n      \\"NamespaceShowName\\": \\"public\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询指定来源可导入服务信息',
    ),
    'UpdateGatewayServiceCheck' => 
    array (
      'summary' => '更新云原生网关指定服务的健康检查策略。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServiceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务ID',
            'description' => '服务ID',
            'type' => 'string',
            'required' => false,
            'example' => '12',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关唯一ID',
            'description' => '网关唯一ID',
            'type' => 'string',
            'required' => false,
            'example' => 'gw-8d410698bd7f4628ab76b*****72dd1d',
          ),
        ),
        2 => 
        array (
          'name' => 'Check',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启健康检查',
            'description' => '是否开启健康检查',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'ExpectedStatuses',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '正常状态码（健康检查协议为HTTP时必填）',
            'description' => '正常状态码（健康检查协议为HTTP时必填）',
            'type' => 'array',
            'items' => 
            array (
              'title' => '用于判断健康检查正常的HTTP状态码：
- http_2xx: 200
- http_3xx: 300
- http_4xx: 400
- http_5xx: 500',
              'description' => '用于判断健康检查正常的HTTP状态码（健康检查协议为HTTP时必填）：
- http_2xx: 200
- http_3xx: 300
- http_4xx: 400
- http_5xx: 500',
              'type' => 'integer',
              'format' => 'int32',
              'required' => false,
              'example' => '200',
            ),
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查协议，目前支持：
- HTTP
- TCP',
            'description' => '健康检查协议，目前支持：
- HTTP
- TCP',
            'type' => 'string',
            'required' => false,
            'example' => 'HTTP',
          ),
        ),
        5 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查响应超时时间（秒）',
            'description' => '健康检查响应超时时间（秒）',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5',
          ),
        ),
        6 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查间隔时间（秒）',
            'description' => '健康检查间隔时间（秒）',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        7 => 
        array (
          'name' => 'HealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查健康阈值',
            'description' => '健康检查健康阈值',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        8 => 
        array (
          'name' => 'UnhealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查不健康阈值',
            'description' => '健康检查不健康阈值',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        9 => 
        array (
          'name' => 'HttpPath',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查路径（健康检查协议为HTTP时必填）',
            'description' => '健康检查路径（健康检查协议为HTTP时必填）',
            'type' => 'string',
            'required' => false,
            'example' => '/healthz',
          ),
        ),
        10 => 
        array (
          'name' => 'HttpHost',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查域名',
            'description' => '健康检查域名（健康检查协议为HTTP时选填）',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
        11 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回体结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '62CBFCB8-DDC6-588C-BF1B-88828AF*****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Code' => 
              array (
                'description' => 'code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：true：请求成功。                                 false：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '操作的服务ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '12',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"62CBFCB8-DDC6-588C-BF1B-88828AF*****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"OK\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 12\\n}","type":"json"}]',
      'title' => '更新服务健康检查策略',
    ),
    'UpdateGatewayRouteAuth' => 
    array (
      'summary' => '更新路由鉴权配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-0adf3ad751284cc69fcf9669fba*****',
          ),
        ),
        1 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '109',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '102',
          ),
        ),
        3 => 
        array (
          'name' => 'AuthJSON',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '鉴权配置。',
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '鉴权类型（传空字符串代表关闭）：

- JWT',
                'type' => 'string',
                'required' => false,
                'example' => 'JWT',
              ),
            ),
            'required' => true,
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<GatewayPlugin>>',
            'description' => 'RestResult<List<GatewayPlugin>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54973C90-F379-4372-9AA5-053A3F7****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。
',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '路由ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '123',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"54973C90-F379-4372-9AA5-053A3F7****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": 123\\n}","type":"json"}]',
      'title' => '更新路由鉴权配置',
    ),
    'ListGatewayAuthConsumerResource' => 
    array (
      'summary' => '获取网关鉴权消费者的授权列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-3f97e2989c344f35ab3fd62b19f1****',
          ),
        ),
        1 => 
        array (
          'name' => 'ConsumerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关鉴权消费者ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '2',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源状态：

- true：启用

- false：停用',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'string',
            'required' => true,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页的大小。',
            'type' => 'string',
            'required' => true,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<GatewayPlugin>>',
            'description' => 'RestResult<List<GatewayPlugin>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A73AC37C-C617-4E3A-8049-372CF49C****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'TotalSize' => 
                  array (
                    'description' => '总条数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '11',
                  ),
                  'PageNumber' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '分页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Result' => 
                  array (
                    'description' => '数据结构。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据结构。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '鉴权消费者授权ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'ConsumerId' => 
                        array (
                          'description' => '网关鉴权消费者ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'RouteId' => 
                        array (
                          'description' => '路由ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3091',
                        ),
                        'RouteName' => 
                        array (
                          'description' => '路由名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ResourceStatus' => 
                        array (
                          'description' => '资源授权状态：

- true：启用

- false：停用',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关唯一标识。',
                          'type' => 'string',
                          'example' => 'gw-5017305290e14centbrveca****',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2022-01-07 18:07:57',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '修改时间。',
                          'type' => 'string',
                          'example' => '2022-01-07 18:07:57',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"A73AC37C-C617-4E3A-8049-372CF49C****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": {\\n    \\"TotalSize\\": 11,\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"Result\\": [\\n      {\\n        \\"Id\\": 1,\\n        \\"ConsumerId\\": 2,\\n        \\"RouteId\\": 3091,\\n        \\"RouteName\\": \\"test\\",\\n        \\"ResourceStatus\\": true,\\n        \\"GatewayUniqueId\\": \\"gw-5017305290e14centbrveca****\\",\\n        \\"GmtCreate\\": \\"2022-01-07 18:07:57\\",\\n        \\"GmtModified\\": \\"2022-01-07 18:07:57\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取网关鉴权消费者的授权列表',
    ),
    'UpdateGatewayAuthConsumer' => 
    array (
      'summary' => '更新网关鉴权消费者。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-90392d768a3847a7b804c505254d****',
          ),
        ),
        1 => 
        array (
          'name' => 'EncodeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '加密类型：

- RSA

- OCT',
            'type' => 'string',
            'required' => false,
            'example' => 'RSA',
          ),
        ),
        2 => 
        array (
          'name' => 'Jwks',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JWT公钥，支持JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{"keys":[{"e":"AQAB","kid":"DHFbpoIUqrY8t2zpA2qXfCmr5VO5ZEr4RzHU_-envvQ","kty":"RSA","n":"xAE7eB6qugXyCAG3yhh7pkDkT65pHymX-P7KfIupjf59vsdo91bSP9C8H07pSAGQO1MV_xFj9VswgsCg4R6otmg5PV2He95lZdHtOcU5DXIg_pbhLdKXbi66GlVeK6ABZOUW3WYtnNHD-91gVuoeJT_DwtGGcp4ignkgXfkiEm4sw-4sfb4qdt5oLbyVpmW6x9cfa7vs2WTfURiCrBoUqgBo_-4WTiULmmHSGZHOjzwa8WtrtOQGsAFjIbno85jp6MnGGGZPYZbDAa_b3y5u-YpW7ypZrvD8BgtKVjgtQgZhLAGezMt0ua3DRrWnKqTZ0BJ_EyxOGuHJrLsn00fnMQ"}]}',
          ),
        ),
        3 => 
        array (
          'name' => 'TokenName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要校验的Token参数信息的名称，默认是以Bearer为前缀放在Authorization header中，例如：`Authorization: Bearer token`。',
            'type' => 'string',
            'required' => false,
            'example' => 'Authorization',
          ),
        ),
        4 => 
        array (
          'name' => 'TokenPass',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否透传。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'TokenPosition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要校验的Token参数信息的位置，默认是以Bearer为前缀放在Authorization header中，例如：`Authorization: Bearer token`。',
            'type' => 'string',
            'required' => false,
            'example' => 'HEADER',
          ),
        ),
        6 => 
        array (
          'name' => 'TokenPrefix',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要校验的Token参数信息的前缀，默认是以Bearer为前缀放在Authorization header中，例如：`Authorization: Bearer token`。',
            'type' => 'string',
            'required' => false,
            'example' => 'Bearer ',
          ),
        ),
        7 => 
        array (
          'name' => 'KeyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JWT内身份标识KeyName。',
            'type' => 'string',
            'required' => false,
            'example' => 'iss',
          ),
        ),
        8 => 
        array (
          'name' => 'KeyValue',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JWT内身份标识KeyValue。',
            'type' => 'string',
            'required' => false,
            'example' => 'abcd',
          ),
        ),
        9 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权消费者描述。',
            'type' => 'string',
            'required' => false,
            'example' => '这是描述',
          ),
        ),
        10 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权消费者ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '63',
          ),
        ),
        11 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<GatewayPlugin>>',
            'description' => 'RestResult<List<GatewayPlugin>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EE5C32A1-BC0E-4B79-817C-103E4EDF****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。

',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '鉴权消费者ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"EE5C32A1-BC0E-4B79-817C-103E4EDF****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": 2\\n}","type":"json"}]',
      'title' => '更新网关鉴权消费者',
    ),
    'ListGatewayRouteOnAuth' => 
    array (
      'summary' => '获取开启鉴权的路由列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-c9bc5afd61014165bd58f621b491****',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权类型：

- JWT',
            'type' => 'string',
            'required' => true,
            'example' => 'JWT',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '58E06A0A-BD2C-47A0-99C2-B100F353****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。                                
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据概览。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '节点数据。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Id' => 
                    array (
                      'description' => '路由ID。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '12',
                    ),
                    'Name' => 
                    array (
                      'description' => '路由名称。',
                      'type' => 'string',
                      'example' => 'ceshi',
                    ),
                    'GatewayUniqueId' => 
                    array (
                      'description' => '网关唯一标识ID。',
                      'type' => 'string',
                      'example' => 'gw-7ea3da97b96543e19f6c597c****',
                    ),
                    'GatewayId' => 
                    array (
                      'description' => '网关ID。',
                      'type' => 'string',
                      'example' => '399',
                    ),
                    'RoutePredicates' => 
                    array (
                      'description' => '路由匹配。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'PathPredicates' => 
                        array (
                          'description' => '路由匹配。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Path' => 
                            array (
                              'description' => '路径。',
                              'type' => 'string',
                              'example' => '/api',
                            ),
                            'Type' => 
                            array (
                              'description' => '匹配类型。',
                              'type' => 'string',
                              'example' => 'PRE',
                            ),
                          ),
                        ),
                      ),
                    ),
                    'DomainId' => 
                    array (
                      'description' => '域名ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '235',
                    ),
                    'DomainName' => 
                    array (
                      'description' => '域名。',
                      'type' => 'string',
                      'example' => '123.com',
                    ),
                    'DomainIdList' => 
                    array (
                      'description' => '域名ID列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '域名ID列表。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1',
                      ),
                    ),
                    'DomainNameList' => 
                    array (
                      'description' => '域名列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '域名列表。',
                        'type' => 'string',
                        'example' => 'test.com',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"58E06A0A-BD2C-47A0-99C2-B100F353****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"Id\\": 12,\\n      \\"Name\\": \\"ceshi\\",\\n      \\"GatewayUniqueId\\": \\"gw-7ea3da97b96543e19f6c597c****\\",\\n      \\"GatewayId\\": \\"399\\",\\n      \\"RoutePredicates\\": {\\n        \\"PathPredicates\\": {\\n          \\"Path\\": \\"/api\\",\\n          \\"Type\\": \\"PRE\\"\\n        }\\n      },\\n      \\"DomainId\\": 235,\\n      \\"DomainName\\": \\"123.com\\",\\n      \\"DomainIdList\\": [\\n        1\\n      ],\\n      \\"DomainNameList\\": [\\n        \\"test.com\\"\\n      ]\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取开启鉴权的路由列表',
    ),
    'ListGatewayAuthConsumer' => 
    array (
      'summary' => '获取网关鉴权消费者列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-0fe488252dc44d55a9dd57875193****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权消费者名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权类型：

- JWT',
            'type' => 'string',
            'required' => false,
            'example' => 'JWT',
          ),
        ),
        3 => 
        array (
          'name' => 'ConsumerStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权消费者状态：

- true：启用

- false：停用',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数值。',
            'type' => 'string',
            'required' => true,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页的大小。',
            'type' => 'string',
            'required' => true,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<GatewayPlugin>>',
            'description' => 'RestResult<List<GatewayPlugin>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'dc63-465d-8ef5-20dc18af****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的%**s**。

> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则表示所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '数据结构。',
                'type' => 'object',
                'properties' => 
                array (
                  'TotalSize' => 
                  array (
                    'description' => '查询到的总数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '9',
                  ),
                  'PageNumber' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '页面大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Result' => 
                  array (
                    'description' => '返回集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '鉴权消费者ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'Name' => 
                        array (
                          'description' => '鉴权消费者名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ConsumerStatus' => 
                        array (
                          'description' => '鉴权消费者状态：

- true：启用

- false：停用',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'PrimaryUser' => 
                        array (
                          'description' => '创建人。',
                          'type' => 'string',
                          'example' => '123',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关唯一标识ID。',
                          'type' => 'string',
                          'example' => 'gw-5017305290e14centbrveca****',
                        ),
                        'Type' => 
                        array (
                          'description' => '鉴权类型：

- JWT',
                          'type' => 'string',
                          'example' => 'JWT',
                        ),
                        'Description' => 
                        array (
                          'description' => '鉴权消费者描述。',
                          'type' => 'string',
                          'example' => '描述',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2021-09-13 19:24:23',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '修改时间。',
                          'type' => 'string',
                          'example' => '2022-01-07 18:07:57',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"dc63-465d-8ef5-20dc18af****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": {\\n    \\"TotalSize\\": 9,\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"Result\\": [\\n      {\\n        \\"Id\\": 1,\\n        \\"Name\\": \\"test\\",\\n        \\"ConsumerStatus\\": true,\\n        \\"PrimaryUser\\": \\"123\\",\\n        \\"GatewayUniqueId\\": \\"gw-5017305290e14centbrveca****\\",\\n        \\"Type\\": \\"JWT\\",\\n        \\"Description\\": \\"描述\\",\\n        \\"GmtCreate\\": \\"2021-09-13 19:24:23\\",\\n        \\"GmtModified\\": \\"2022-01-07 18:07:57\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取网关鉴权消费者列表',
    ),
    'UpdateGatewayAuthConsumerResource' => 
    array (
      'summary' => '更新网关鉴权消费者的授权列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'UpdateGatewayAuthConsumerResource',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-3f97e2989c344f35ab3fd62b19f1****',
          ),
        ),
        1 => 
        array (
          'name' => 'ConsumerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关鉴权消费者ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '2',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceList',
          'in' => 'query',
          'allowEmptyValue' => true,
          'style' => 'json',
          'schema' => 
          array (
            'description' => '资源列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源列表。',
              'type' => 'object',
              'properties' => 
              array (
                'RouteId' => 
                array (
                  'description' => '路由ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '7816',
                ),
                'RouteName' => 
                array (
                  'description' => '路由名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'helo',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<GatewayPlugin>>',
            'description' => 'RestResult<List<GatewayPlugin>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的%**s**。

> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则表示所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '执行是否成功：

- true：成功

- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '更新网关鉴权消费者的授权列表',
    ),
    'UpdateGatewayAuthConsumerStatus' => 
    array (
      'summary' => '更新网关鉴权消费者状态。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-685f661467b54f48b7b7a76605ce****',
          ),
        ),
        1 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权消费者ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'ConsumerStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权消费者状态：

- true：启用

- false：停用',
            'type' => 'boolean',
            'required' => true,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<GatewayPlugin>>',
            'description' => 'RestResult<List<GatewayPlugin>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '56D9E600-6348-4260-B35F-583413F****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '执行是否成功：

- true：成功

- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"56D9E600-6348-4260-B35F-583413F****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '更新网关鉴权消费者状态',
    ),
    'AddGatewayAuthConsumer' => 
    array (
      'summary' => '新增网关鉴权消费者。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-c70622ff52fe49beb29bea9a6f52****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权消费者名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'name',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权类型：

- JWT',
            'type' => 'string',
            'required' => true,
            'example' => 'JWT',
          ),
        ),
        3 => 
        array (
          'name' => 'EncodeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '加密类型：

- RSA

- OCT',
            'type' => 'string',
            'required' => false,
            'example' => 'RSA',
          ),
        ),
        4 => 
        array (
          'name' => 'Jwks',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JWT公钥，支持JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{"keys":[{"e":"AQAB","kid":"DHFbpoIUqrY8t2zpA2qXfCmr5VO5ZEr4RzHU_-envvQ","kty":"RSA","n":"xAE7eB6qugXyCAG3yhh7pkDkT65pHymX-P7KfIupjf59vsdo91bSP9C8H07pSAGQO1MV_xFj9VswgsCg4R6otmg5PV2He95lZdHtOcU5DXIg_pbhLdKXbi66GlVeK6ABZOUW3WYtnNHD-91gVuoeJT_DwtGGcp4ignkgXfkiEm4sw-4sfb4qdt5oLbyVpmW6x9cfa7vs2WTfURiCrBoUqgBo_-4WTiULmmHSGZHOjzwa8WtrtOQGsAFjIbno85jp6MnGGGZPYZbDAa_b3y5u-YpW7ypZrvD8BgtKVjgtQgZhLAGezMt0ua3DRrWnKqTZ0BJ_EyxOGuHJrLsn00fnMQ"}]}',
          ),
        ),
        5 => 
        array (
          'name' => 'TokenName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要校验的Token参数信息的名称，默认是以Bearer为前缀放在Authorization header中，例如：`Authorization: Bearer token`。',
            'type' => 'string',
            'required' => false,
            'example' => 'Authorization',
          ),
        ),
        6 => 
        array (
          'name' => 'TokenPass',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否透传。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'TokenPosition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要校验的Token参数信息的位置，默认是以Bearer为前缀放在Authorization header中，例如：`Authorization: Bearer token`。',
            'type' => 'string',
            'required' => false,
            'example' => 'HEADER',
          ),
        ),
        8 => 
        array (
          'name' => 'TokenPrefix',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要校验的Token参数信息的前缀，默认是以Bearer为前缀放在Authorization header中，例如：`Authorization: Bearer token`。',
            'type' => 'string',
            'required' => false,
            'example' => 'Bearer ',
          ),
        ),
        9 => 
        array (
          'name' => 'KeyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JWT内身份标识KeyName。',
            'type' => 'string',
            'required' => false,
            'example' => 'iss',
          ),
        ),
        10 => 
        array (
          'name' => 'KeyValue',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JWT内身份标识KeyValue。',
            'type' => 'string',
            'required' => false,
            'example' => 'abcd',
          ),
        ),
        11 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权消费者描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'description',
          ),
        ),
        12 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<GatewayPlugin>>',
            'description' => 'RestResult<List<GatewayPlugin>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '69AD2AA7-DB47-449B-941B-B14409DF****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'True',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP返回码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数 `ErrMessage` 错误信息中的 `%s`。

> 如果`ErrMessage`返回`The Value of Input Parameter %s is not valid`，且`DynamicMessage`返回`DtsJobId`，则代表所传入的请求参数`DtsJobId`不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '鉴权消费者ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"69AD2AA7-DB47-449B-941B-B14409DF****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": 2\\n}","type":"json"}]',
      'title' => '新增网关鉴权消费者',
    ),
    'DeleteGatewayAuthConsumerResource' => 
    array (
      'summary' => '删除网关鉴权消费者的授权。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-ubuwqygbq4783gqb2y3f87q****
',
          ),
        ),
        1 => 
        array (
          'name' => 'ConsumerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关鉴权消费者ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '2',
          ),
        ),
        2 => 
        array (
          'name' => 'IdList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户删除指定的授权ID列表。',
            'type' => 'string',
            'required' => true,
            'example' => '1,2,3,4',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<GatewayPlugin>>',
            'description' => 'RestResult<List<GatewayPlugin>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3369AD10-F1A6-4E6F-B99E-20F51826****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'NoPermission',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '执行是否成功：

- true：成功

- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"3369AD10-F1A6-4E6F-B99E-20F51826****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"NoPermission\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '删除网关鉴权消费者的授权',
    ),
    'UpdateGatewayAuthConsumerResourceStatus' => 
    array (
      'summary' => '更新网关鉴权消费者的授权状态。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-2a99625886d54722be94d92e9a69****',
          ),
        ),
        1 => 
        array (
          'name' => 'ConsumerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关鉴权消费者ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '2',
          ),
        ),
        2 => 
        array (
          'name' => 'IdList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户更新指定的授权ID列表。',
            'type' => 'string',
            'required' => true,
            'example' => '1,2,3,4',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源状态：

- true：启用

- false：停用',
            'type' => 'boolean',
            'required' => true,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<GatewayPlugin>>',
            'description' => 'RestResult<List<GatewayPlugin>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数 `ErrMessage` 错误信息中的 `%s`。

> 如果`ErrMessage`返回`The Value of Input Parameter %s is not valid`，且`DynamicMessage`返回`DtsJobId`，则代表所传入的请求参数`DtsJobId`不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '执行是否成功：

- true：成功

- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '更新网关鉴权消费者的授权状态',
    ),
    'DeleteGatewayAuthConsumer' => 
    array (
      'summary' => '删除网关鉴权消费者。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-c70622ff52fe49beb29bea9a6f52****',
          ),
        ),
        1 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关鉴权消费者ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '33ff74b6-d21e-4f9b-91a8-bc1ea4ef****',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<GatewayPlugin>>',
            'description' => 'RestResult<List<GatewayPlugin>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '69AD2AA7-DB47-449B-941B-B14409DF****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。
',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '执行是否成功：

- true：成功

- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"69AD2AA7-DB47-449B-941B-B14409DF****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '删除网关鉴权消费者',
    ),
    'GetGatewayAuthConsumerDetail' => 
    array (
      'summary' => '获取网关鉴权消费者细节。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-1a4ab101d5924b6f92c5ec98a84*****',
          ),
        ),
        1 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权消费者ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '120',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<GatewayPlugin>>',
            'description' => 'RestResult<List<GatewayPlugin>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'mse-100-000',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符。',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的**%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '数据结构。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '鉴权消费者ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12',
                  ),
                  'Name' => 
                  array (
                    'description' => '鉴权消费者名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'ConsumerStatus' => 
                  array (
                    'description' => '鉴权消费者状态：

- true：启用

- false：停用',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'PrimaryUser' => 
                  array (
                    'description' => '创建人。',
                    'type' => 'string',
                    'example' => '123',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。
',
                    'type' => 'string',
                    'example' => 'gw-7ea3da97b96543e19f6c597cd4a9****',
                  ),
                  'Type' => 
                  array (
                    'description' => '鉴权类型：

- JWT',
                    'type' => 'string',
                    'example' => 'JWT',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2023-02-01 14:17:57',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '更新时间。',
                    'type' => 'string',
                    'example' => '2023-03-01 14:17:57',
                  ),
                  'Description' => 
                  array (
                    'description' => '描述。',
                    'type' => 'string',
                    'example' => '描述',
                  ),
                  'EncodeType' => 
                  array (
                    'description' => '加密类型：

- RSA

- OCT',
                    'type' => 'string',
                    'example' => 'RSA',
                  ),
                  'Jwks' => 
                  array (
                    'description' => 'JWT公钥，支持JSON格式。',
                    'type' => 'string',
                    'example' => '{
      "keys": [
            {
                  "e": "AQAB",
                  "kid": "DHFbpoIUqrY8t2zpA2qXfCmr5VO5ZEr4RzHU_-envvQ",
                  "kty": "RSA",
                  "n": "xAE7eB6qugXyCAG3yhh7pkDkT65pHymX-P7KfIupjf59vsdo91bSP9C8H07pSAGQO1MV_xFj9VswgsCg4R6otmg5PV2He95lZdHtOcU5DXIg_pbhLdKXbi66GlVeK6ABZOUW3WYtnNHD-91gVuoeJT_DwtGGcp4ignkgXfkiEm4sw-4sfb4qdt5oLbyVpmW6x9cfa7vs2WTfURiCrBoUqgBo_-4WTiULmmHSGZHOjzwa8WtrtOQGsAFjIbno85jp6MnGGGZPYZbDAa_b3y5u-YpW7ypZrvD8BgtKVjgtQgZhLAGezMt0ua3DRrWnKqTZ0BJ_EyxOGuHJrLsn00fnMQ"
            }
      ]
}',
                  ),
                  'TokenName' => 
                  array (
                    'description' => '要校验的Token参数信息的名称，默认是以Bearer为前缀放在Authorization header中，例如：`Authorization: Bearer token`。',
                    'type' => 'string',
                    'example' => 'Authorization',
                  ),
                  'TokenPass' => 
                  array (
                    'description' => '是否透传。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'TokenPosition' => 
                  array (
                    'description' => '要校验的Token参数信息的位置，默认是以Bearer为前缀放在Authorization header中，例如：`Authorization: Bearer token`。',
                    'type' => 'string',
                    'example' => 'HEADER',
                  ),
                  'TokenPrefix' => 
                  array (
                    'description' => '要校验的Token参数信息的前缀，默认是以Bearer为前缀放在Authorization header中，例如：`Authorization: Bearer token`。',
                    'type' => 'string',
                    'example' => 'Bearer ',
                  ),
                  'KeyName' => 
                  array (
                    'description' => 'JWT内身份标识KeyName。',
                    'type' => 'string',
                    'example' => 'iss',
                  ),
                  'KeyValue' => 
                  array (
                    'description' => 'JWT内身份标识KeyValue。',
                    'type' => 'string',
                    'example' => 'abcd',
                  ),
                  'ResourceList' => 
                  array (
                    'description' => '资源列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '资源列表',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '鉴权消费者授权ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '16',
                        ),
                        'ConsumerId' => 
                        array (
                          'description' => '网关鉴权消费者ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123',
                        ),
                        'RouteId' => 
                        array (
                          'description' => '路由ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3458',
                        ),
                        'RouteName' => 
                        array (
                          'description' => '路由名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ResourceStatus' => 
                        array (
                          'description' => '资源授权状态：

- true：启用

- false：停用',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关唯一标识ID。',
                          'type' => 'string',
                          'example' => 'gw-4822033a8513496fa10f05c934f*****',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2022-12-06 01:38:03',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '修改时间。',
                          'type' => 'string',
                          'example' => '2022-12-06 01:38:03',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"mse-100-000\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": {\\n    \\"Id\\": 12,\\n    \\"Name\\": \\"test\\",\\n    \\"ConsumerStatus\\": true,\\n    \\"PrimaryUser\\": \\"123\\",\\n    \\"GatewayUniqueId\\": \\"gw-7ea3da97b96543e19f6c597cd4a9****\\",\\n    \\"Type\\": \\"JWT\\",\\n    \\"GmtCreate\\": \\"2023-02-01 14:17:57\\",\\n    \\"GmtModified\\": \\"2023-03-01 14:17:57\\",\\n    \\"Description\\": \\"描述\\",\\n    \\"EncodeType\\": \\"RSA\\",\\n    \\"Jwks\\": \\"{\\\\n      \\\\\\"keys\\\\\\": [\\\\n            {\\\\n                  \\\\\\"e\\\\\\": \\\\\\"AQAB\\\\\\",\\\\n                  \\\\\\"kid\\\\\\": \\\\\\"DHFbpoIUqrY8t2zpA2qXfCmr5VO5ZEr4RzHU_-envvQ\\\\\\",\\\\n                  \\\\\\"kty\\\\\\": \\\\\\"RSA\\\\\\",\\\\n                  \\\\\\"n\\\\\\": \\\\\\"xAE7eB6qugXyCAG3yhh7pkDkT65pHymX-P7KfIupjf59vsdo91bSP9C8H07pSAGQO1MV_xFj9VswgsCg4R6otmg5PV2He95lZdHtOcU5DXIg_pbhLdKXbi66GlVeK6ABZOUW3WYtnNHD-91gVuoeJT_DwtGGcp4ignkgXfkiEm4sw-4sfb4qdt5oLbyVpmW6x9cfa7vs2WTfURiCrBoUqgBo_-4WTiULmmHSGZHOjzwa8WtrtOQGsAFjIbno85jp6MnGGGZPYZbDAa_b3y5u-YpW7ypZrvD8BgtKVjgtQgZhLAGezMt0ua3DRrWnKqTZ0BJ_EyxOGuHJrLsn00fnMQ\\\\\\"\\\\n            }\\\\n      ]\\\\n}\\",\\n    \\"TokenName\\": \\"Authorization\\",\\n    \\"TokenPass\\": true,\\n    \\"TokenPosition\\": \\"HEADER\\",\\n    \\"TokenPrefix\\": \\"Bearer \\",\\n    \\"KeyName\\": \\"iss\\",\\n    \\"KeyValue\\": \\"abcd\\",\\n    \\"ResourceList\\": [\\n      {\\n        \\"Id\\": 16,\\n        \\"ConsumerId\\": 123,\\n        \\"RouteId\\": 3458,\\n        \\"RouteName\\": \\"test\\",\\n        \\"ResourceStatus\\": true,\\n        \\"GatewayUniqueId\\": \\"gw-4822033a8513496fa10f05c934f*****\\",\\n        \\"GmtCreate\\": \\"2022-12-06 01:38:03\\",\\n        \\"GmtModified\\": \\"2022-12-06 01:38:03\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取网关鉴权消费者细节',
    ),
    'AddBlackWhiteList' => 
    array (
      'summary' => '添加黑白名单。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-0fe488252dc44d55a9dd57875193****',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '生效粒度：
- GATEWAY：网关全局
- DOMAIN：域名
- ROUTE：路由',
            'type' => 'string',
            'required' => false,
            'example' => 'GATEWAY',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '黑白名单类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'IP',
          ),
        ),
        3 => 
        array (
          'name' => 'Content',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '黑名单内容。',
            'type' => 'string',
            'required' => false,
            'example' => '1.117.115.51',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '黑名单状态描述。

- on 开启
- off 关闭',
            'type' => 'string',
            'required' => false,
            'example' => 'off',
          ),
        ),
        5 => 
        array (
          'name' => 'IsWhite',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否白名单（默认为否）。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceIdJsonList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源ID列表JSON。',
            'type' => 'string',
            'required' => false,
            'example' => '[123]',
          ),
        ),
        7 => 
        array (
          'name' => 'Note',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备注。',
            'type' => 'string',
            'required' => false,
            'example' => 'this is a note',
          ),
        ),
        8 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'name',
          ),
        ),
        9 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '966F6CA7-16D0-50AB-AB02-E140934F90C1',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。                                 
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '记录ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"966F6CA7-16D0-50AB-AB02-E140934F90C1\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 2\\n}","type":"json"}]',
      'title' => '添加黑白名单',
    ),
    'UpdateBlackWhiteList' => 
    array (
      'summary' => '更新网关黑白名单。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '黑名ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定资源作用范围。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'GATEWAY',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '黑白名单资源类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'IP',
          ),
        ),
        3 => 
        array (
          'name' => 'Content',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '黑名单内容。',
            'type' => 'string',
            'required' => false,
            'example' => '127.0.2.11',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启状态。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'off' => '关闭',
              'on' => '开启',
            ),
            'example' => 'on',
          ),
        ),
        5 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-c70622ff52fe49beb29bea9a6f52****',
          ),
        ),
        6 => 
        array (
          'name' => 'IsWhite',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否白名单（默认为否）。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'ResourceIdJsonList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源ID列表JSON。',
            'type' => 'string',
            'required' => false,
            'example' => '[123]',
          ),
        ),
        8 => 
        array (
          'name' => 'Note',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备注。',
            'type' => 'string',
            'required' => false,
            'example' => 'this is a note',
          ),
        ),
        9 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'name',
          ),
        ),
        10 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AD5DEDA0-C82A-50D9-AF54-BD3576CCFB4C',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '请求消息',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '记录ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '13',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"AD5DEDA0-C82A-50D9-AF54-BD3576CCFB4C\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 13\\n}","type":"json"}]',
      'title' => '更新网关黑白名单',
    ),
    'GetBlackWhiteList' => 
    array (
      'summary' => '查询网关黑白名单。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '范围类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'GATEWAY',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'IP',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'gw-32d5c9769c1842b1a2cc3426c59e****',
          ),
        ),
        3 => 
        array (
          'name' => 'IsWhite',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否白名单。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '89CBC928-4F57-51FA-A413-EE0F4CD87200',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation. ',
              ),
              'Code' => 
              array (
                'description' => '状态码。说明 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '节点数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => 'ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '275',
                  ),
                  'ResourceId' => 
                  array (
                    'description' => '资源ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'ResourceType' => 
                  array (
                    'description' => '资源类型。',
                    'type' => 'string',
                    'example' => 'GATEWAY',
                  ),
                  'Content' => 
                  array (
                    'description' => '黑名单内容。',
                    'type' => 'string',
                    'example' => 'text',
                  ),
                  'Type' => 
                  array (
                    'description' => '类型。',
                    'type' => 'string',
                    'example' => 'IP',
                  ),
                  'IsWhite' => 
                  array (
                    'description' => '是否为白名单。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Status' => 
                  array (
                    'description' => '黑白名单状态。',
                    'type' => 'string',
                    'example' => 'on',
                  ),
                  'GatewayId' => 
                  array (
                    'description' => '网关id。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。
',
                    'type' => 'string',
                    'example' => 'gw-7ea3da97b96543e19f6c597c****',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '更新时间',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"89CBC928-4F57-51FA-A413-EE0F4CD87200\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation. \\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 275,\\n    \\"ResourceId\\": 1,\\n    \\"ResourceType\\": \\"GATEWAY\\",\\n    \\"Content\\": \\"text\\",\\n    \\"Type\\": \\"IP\\",\\n    \\"IsWhite\\": true,\\n    \\"Status\\": \\"on\\",\\n    \\"GatewayId\\": 1,\\n    \\"GatewayUniqueId\\": \\"gw-7ea3da97b96543e19f6c597c****\\",\\n    \\"GmtCreate\\": \\"2022-01-07T10:07:57.000+0000\\",\\n    \\"GmtModified\\": \\"2022-01-07T10:07:57.000+0000\\"\\n  }\\n}","type":"json"}]',
      'title' => '查询网关黑白名单',
    ),
    'AddGatewayAuth' => 
    array (
      'summary' => '创建网关鉴权。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '37105',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseFZIQVY',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权类型：

- JWT
- OIDC
- IDaaS
- ExternalAuthZ（自建的鉴权服务）',
            'type' => 'string',
            'required' => false,
            'example' => 'JWT',
          ),
        ),
        2 => 
        array (
          'name' => 'Issuer',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权类型为JWT/OIDC时使用：

- JWT：表示JWT claims 的iss(issuer)，即签发人。
- OIDC：表示OIDC claims 的iss(issuer)，即签发人',
            'type' => 'string',
            'required' => false,
            'example' => 'https://example.com/auth',
          ),
        ),
        3 => 
        array (
          'name' => 'Jwks',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JWT公钥，支持JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{"keys":[{"e":"AQAB","kid":"DHFbpoIUqrY8t2zpA2qXfCmr5VO5ZEr4RzHU_-envvQ","kty":"RSA","n":"xAE7eB6qugXyCAG3yhh7pkDkT65pHymX-P7KfIupjf59vsdo91bSP9C8H07pSAGQO1MV_xFj9VswgsCg4R6otmg5PV2He95lZdHtOcU5DXIg_pbhLdKXbi66GlVeK6ABZOUW3WYtnNHD-91gVuoeJT_DwtGGcp4ignkgXfkiEm4sw-4sfb4qdt5oLbyVpmW6x9cfa7vs2WTfURiCrBoUqgBo_-4WTiULmmHSGZHOjzwa8WtrtOQGsAFjIbno85jp6MnGGGZPYZbDAa_b3y5u-YpW7ypZrvD8BgtKVjgtQgZhLAGezMt0ua3DRrWnKqTZ0BJ_EyxOGuHJrLsn00fnMQ"}]}',
          ),
        ),
        4 => 
        array (
          'name' => 'TokenPosition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JWT Token类型：

- HEADER：通过Header传输

要校验的Token参数信息，默认是以Bearer为前缀放在Authorization header中，例如：Authorization: Bearer token。',
            'type' => 'string',
            'required' => false,
            'example' => 'HEADER',
          ),
        ),
        5 => 
        array (
          'name' => 'TokenName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JWT Token保存的位置。

要校验的Token参数信息，默认是以Bearer为前缀放在Authorization header中，例如：`Authorization: Bearer token`。',
            'type' => 'string',
            'required' => false,
            'example' => 'Authorization',
          ),
        ),
        6 => 
        array (
          'name' => 'TokenNamePrefix',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JWT Token的前缀。

要校验的Token参数信息，默认是以Bearer为前缀放在Authorization header中，例如：`Authorization: Bearer token`。',
            'type' => 'string',
            'required' => false,
            'example' => 'Bearer ',
          ),
        ),
        7 => 
        array (
          'name' => 'TokenPass',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否透传Token。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'IsWhite',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权黑白名单模式：

- true：白名单模式（名单中的 hosts + paths 不需要校验即可访问，其余都需要校验）
- false：黑名单模式（名单中的 hosts + paths 需要校验，其余可直接访问）',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        9 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '未开放参数，无需传递（鉴权创建后默认为关闭状态）。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        10 => 
        array (
          'name' => 'RedirectUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权成功后的重定向地址（OIDC/IDaaS使用，需要与OIDC/IDaaS中配置的重定向地址保持一致。）',
            'type' => 'string',
            'required' => false,
            'example' => 'https://test-.com/oauth2/callback',
          ),
        ),
        11 => 
        array (
          'name' => 'ClientId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务注册的应用ID（OIDC/IDaaS使用）。',
            'type' => 'string',
            'required' => false,
            'example' => '23460e2fdd9bf9ad106****',
          ),
        ),
        12 => 
        array (
          'name' => 'ClientSecret',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务注册的应用Secret（OIDC/IDaaS使用）。',
            'type' => 'string',
            'required' => false,
            'example' => '123****',
          ),
        ),
        13 => 
        array (
          'name' => 'CookieDomain',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Cookie的域名，认证通过后会将Cookie发送到指定的域名，保持登录状态。

例如：设置`Cookie-domain=a.example.com`，则Cookie会发送到域名`a.example.com`；设置`Cookie-domain=.example.com`，则Cookie会发送到`example.com`的所有子域名。',
            'type' => 'string',
            'required' => false,
            'example' => 'test.com',
          ),
        ),
        14 => 
        array (
          'name' => 'ScopesList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'OIDC授权作用域（OIDC使用）。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'OIDC授权作用域',
              'type' => 'string',
              'required' => false,
              'example' => 'openid',
            ),
            'required' => false,
          ),
        ),
        15 => 
        array (
          'name' => 'LoginUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IDaaS实例用户登录页地址（IDaaS使用）。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://daxxxxcn.aliyunidaas.com/',
          ),
        ),
        16 => 
        array (
          'name' => 'Sub',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '鉴权类型为JWT时使用；JWT claims 的sub（subject），即主体，请确保JWT的Payload中的sub字段的值与此处配置的值一致。如果该参数未设置或者为空，那么默认与Issuer参数设置的值一致',
            'type' => 'string',
            'required' => false,
            'example' => 'testing@secure.istio.io',
          ),
        ),
        17 => 
        array (
          'name' => 'ExternalAuthZJSON',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '自定义鉴权信息。',
            'type' => 'object',
            'properties' => 
            array (
              'ServiceId' => 
              array (
                'description' => '鉴权服务ID。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '1343',
              ),
              'PrefixPath' => 
              array (
                'description' => '鉴权服务提供的鉴权API的Path，API的Path需是前缀匹配。',
                'type' => 'string',
                'required' => false,
                'example' => '/auth',
              ),
              'TokenKey' => 
              array (
                'description' => 'Token处于请求报文中哪个Header中，常见的有Authorization和Cookie。',
                'type' => 'string',
                'required' => false,
                'example' => 'Authorization',
              ),
              'AllowRequestHeaders' => 
              array (
                'description' => '鉴权请求中允许携带的头部。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '允许的请求头名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'x-req',
                ),
                'required' => false,
              ),
              'AllowUpstreamHeaders' => 
              array (
                'description' => '鉴权响应中允许保留的头部。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '允许的响应头名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'x-resp',
                ),
                'required' => false,
              ),
              'Timeout' => 
              array (
                'description' => '鉴权服务的超时时间，单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '10',
              ),
              'IsRestrict' => 
              array (
                'description' => '自定义鉴权模式：

- true：严格模式，当鉴权服务不可用时（鉴权服务建立连接失败或者返回5xx请求），网关拒绝客户端请求
- false：宽松模式，当鉴权服务不可用时（鉴权服务建立连接失败或者返回5xx请求），网关放过客户端请求',
                'type' => 'boolean',
                'required' => false,
                'example' => 'true',
              ),
              'WithRequestBody' => 
              array (
                'description' => '是否允许携带Body。',
                'type' => 'boolean',
                'required' => false,
                'example' => 'true',
              ),
              'BodyMaxBytes' => 
              array (
                'description' => 'Body的最大字节数。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '4000000',
              ),
            ),
            'required' => false,
          ),
        ),
        18 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'gw-*****9b04bb4474cae9d645be850e3d7',
          ),
        ),
        19 => 
        array (
          'name' => 'AuthResourceMode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '授权资源模式：

- 0：简单模式
- 1：复杂模式',
            'description' => '授权资源模式：

- 0：简单模式
- 1：复杂模式',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        20 => 
        array (
          'name' => 'AuthResourceConfig',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '复杂模式的YAML配置',
            'description' => '复杂模式的YAML配置',
            'type' => 'string',
            'required' => false,
          ),
        ),
        21 => 
        array (
          'name' => 'AuthResourceList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '鉴权的授权规则列表，多个规则条件之间是“或”关系，规则条件内的多个匹配项之间是“与”关系。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '数据结构。',
              'type' => 'object',
              'properties' => 
              array (
                'DomainId' => 
                array (
                  'description' => '规则内域名的ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '1765',
                ),
                'Path' => 
                array (
                  'description' => '规则的匹配路径。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '/test',
                ),
                'MatchType' => 
                array (
                  'description' => '请求Path的匹配类型：

- EQUAL：精确匹配
- PRE：前缀匹配
- ERGULAR：正则匹配',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'EQUAL',
                ),
                'IgnoreCase' => 
                array (
                  'description' => '路径是否开启大小写敏感（创建自定义鉴权时使用，其他鉴权类型默认开启大小写敏感）

- true：开启大小写敏感
- false：关闭大小写敏感',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
                'AuthResourceHeaderList' => 
                array (
                  'description' => '规则的请求头（当前仅供自定义鉴权使用）',
                  'type' => 'array',
                  'items' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'HeaderKey' => 
                      array (
                        'description' => '请求头名称。',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'x-req',
                      ),
                      'HeaderMethod' => 
                      array (
                        'description' => '匹配条件：

- EQUAL：等于
- NOT_EQUAL：不等于
- EXIST：存在
- NOT_EXIST：不存在
- INCLUDE：包含
- EXCLUDE：不包含
- PREFIX：前缀
- SUFFIX：后缀
- REGREX：正则',
                        'type' => 'string',
                        'required' => false,
                        'example' => 'EQUAL',
                      ),
                      'HeaderValue' => 
                      array (
                        'description' => '请求头的值。',
                        'type' => 'string',
                        'required' => false,
                        'example' => '123',
                      ),
                    ),
                    'required' => false,
                  ),
                  'required' => false,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        22 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4279C00F-A5E1-53C6-A43B-751C1C524D0B',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Code' => 
              array (
                'description' => '用于和Success同步，当Success为true时，Code为200。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '创建的鉴权ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '333',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4279C00F-A5E1-53C6-A43B-751C1C524D0B\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"OK\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 333\\n}","type":"json"}]',
      'title' => '创建网关鉴权',
    ),
    'GetGatewayAuthDetail' => 
    array (
      'summary' => '获取网关鉴权详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '37108',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseFZIQVY',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '鉴权ID',
            'description' => '鉴权ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1100',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关ID（和网关唯一ID二选一）',
            'description' => '网关ID（和网关唯一ID二选一）',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '2274',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网关唯一ID（和网关ID二选一，网关唯一ID不为空时优先使用网关唯一ID查询）',
            'description' => '网关唯一ID（和网关ID二选一，网关唯一ID不为空时优先使用网关唯一ID查询）',
            'type' => 'string',
            'required' => false,
            'example' => 'gw-6f0dbd108a0249d2b675b3ef50b*****',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：
* zh（默认值）：中文
* en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '9C96CDF8-9E6C-XXXX-XXXX-8F87A10117E6',
              ),
              'HttpStatusCode' => 
              array (
                'title' => 'HTTP 状态码。',
                'description' => 'HTTP 状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'title' => '信息。',
                'description' => '信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'Code' => 
              array (
                'title' => '用于和Success同步，当Success为true时，Code为200',
                'description' => '用于和Success同步，当Success为true时，Code为200',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'title' => '请求是否成功',
                'description' => '请求是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'title' => '鉴权详情',
                'description' => '鉴权详情',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'title' => '鉴权ID',
                    'description' => '鉴权ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1100',
                  ),
                  'Name' => 
                  array (
                    'title' => '鉴权名称',
                    'description' => '鉴权名称',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'title' => '鉴权所属网关的唯一ID',
                    'description' => '鉴权所属网关的唯一ID',
                    'type' => 'string',
                    'example' => 'gw-6f0dbd108a0249d2b675b3ef50b*****',
                  ),
                  'GatewayId' => 
                  array (
                    'title' => '鉴权所属网关的ID',
                    'description' => '鉴权所属网关的ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2274',
                  ),
                  'Type' => 
                  array (
                    'title' => '鉴权类型：

- JWT
- OIDC
- IDaaS
- ExternalAuthZ（自建的鉴权服务）',
                    'description' => '鉴权类型：

- JWT
- OIDC
- IDaaS
- ExternalAuthZ（自建的鉴权服务）',
                    'type' => 'string',
                    'example' => 'JWT',
                  ),
                  'Issuer' => 
                  array (
                    'title' => '鉴权类型为JWT/OIDC时使用：

- JWT：表示JWT claims 的iss(issuer)，即签发人。
- OIDC：表示OIDC claims 的iss(issuer)，即签发人',
                    'description' => '鉴权类型为JWT/OIDC时使用：

- JWT：表示JWT claims 的iss(issuer)，即签发人。
- OIDC：表示OIDC claims 的iss(issuer)，即签发人',
                    'type' => 'string',
                    'example' => 'https://example.com/auth',
                  ),
                  'Jwks' => 
                  array (
                    'title' => 'JWT公钥，JSON格式',
                    'description' => 'JWT公钥，JSON格式',
                    'type' => 'string',
                    'example' => '{\\n  \\"keys\\":[\\n    {\\n      \\"kty\\": \\"RSA\\",\\n      \\"e\\": \\"AQAB\\",\\n      \\"use\\": \\"sig\\",\\n      \\"kid\\": \\"1rGufmH1YN8rqM9ZOLgo7eEST3AnL89Y-m-XGFioLoA\\",\\n      \\"alg\\": \\"RS256\\",\\n      \\"n\\": \\"rM2GIc0YTMqwNCwXnjKbW5QndkCEZgyLu3uQUnyZF7HvMTekiTvQg_39mg3dV1eaYYkYfZBogyroJBqAQXhk6VVCxlBjFVp2xstJPVWngMOOlcafwN_BKdN-EQ06O_Uu__e7gNKI3DunkNk0cNaFETE7d4meRYyTlgEzYgsrW05_ufR0BKoddL3E5JsCpUxRjH9ICbodBx0U74W6Dcci-R2EA1DBrEcboE6n90uoJs6UJNriAK_71nAsYonihU5aQFFnyPTkJHfRwHK6JlME6rn-b-rpLSpdyc6U1nOFZP2DEpz8U5FrYoLYSZIU-MQGxDhCnGc_rxl2IyP9B2qcCQ\\"\\n    }\\n  ]\\n}\\n',
                  ),
                  'IsWhite' => 
                  array (
                    'title' => '授权黑白名单模式：

- true：白名单模式（名单中的 hosts + paths 不需要校验即可访问，其余都需要校验）
- false：黑名单模式（名单中的 hosts + paths 需要校验，其余可直接访问）',
                    'description' => '授权黑白名单模式：

- true：白名单模式（名单中的 hosts + paths 不需要校验即可访问，其余都需要校验）
- false：黑名单模式（名单中的 hosts + paths 需要校验，其余可直接访问）',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'GmtCreate' => 
                  array (
                    'title' => '鉴权创建的GMT时间',
                    'description' => '鉴权创建的GMT时间',
                    'type' => 'string',
                    'example' => '2024-02-19T02:41:03.000+0000',
                  ),
                  'GmtModified' => 
                  array (
                    'title' => '鉴权修改的GMT时间',
                    'description' => '鉴权修改的GMT时间',
                    'type' => 'string',
                    'example' => '2024-02-19T02:41:03.000+0000',
                  ),
                  'TokenPosition' => 
                  array (
                    'title' => 'JWT Token类型：

- HEADER：通过Header传输',
                    'description' => 'JWT Token类型：

- HEADER：通过Header传输',
                    'type' => 'string',
                    'example' => 'HEADER',
                  ),
                  'TokenName' => 
                  array (
                    'title' => 'JWT Token保存的位置',
                    'description' => 'JWT Token保存的位置',
                    'type' => 'string',
                    'example' => 'Authorization',
                  ),
                  'TokenNamePrefix' => 
                  array (
                    'title' => 'JWT Token的前缀',
                    'description' => 'JWT Token的前缀',
                    'type' => 'string',
                    'example' => 'Bearer ',
                  ),
                  'TokenPass' => 
                  array (
                    'title' => '是否透传Token',
                    'description' => '是否透传Token',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'Status' => 
                  array (
                    'title' => '鉴权是否开启',
                    'description' => '鉴权是否开启',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'RedirectUrl' => 
                  array (
                    'title' => '授权成功后的重定向地址（OIDC/IDaaS使用，需要与OIDC/IDaaS中配置的重定向地址保持一致。）',
                    'description' => '授权成功后的重定向地址（OIDC/IDaaS使用，需要与OIDC/IDaaS中配置的重定向地址保持一致。）',
                    'type' => 'string',
                    'example' => 'https://yourdomain/path',
                  ),
                  'ClientId' => 
                  array (
                    'title' => '服务注册的应用ID（OIDC/IDaaS使用）。',
                    'description' => '服务注册的应用ID（OIDC/IDaaS使用）。',
                    'type' => 'string',
                    'example' => 'example-app',
                  ),
                  'ClientSecret' => 
                  array (
                    'title' => '服务注册的应用Secret（OIDC/IDaaS使用）。',
                    'description' => '服务注册的应用Secret（OIDC/IDaaS使用）。',
                    'type' => 'string',
                    'example' => 'xxxxx',
                  ),
                  'CookieDomain' => 
                  array (
                    'title' => 'Cookie的域名，认证通过后会将Cookie发送到指定的域名，保持登录状态（OIDC/IDaaS使用）。',
                    'description' => 'Cookie的域名，认证通过后会将Cookie发送到指定的域名，保持登录状态（OIDC/IDaaS使用）。',
                    'type' => 'string',
                    'example' => 'hello.com',
                  ),
                  'ScopesList' => 
                  array (
                    'title' => 'OIDC 作用域（OIDC 使用）。',
                    'description' => 'OIDC作用域（OIDC使用）。',
                    'type' => 'string',
                    'example' => '["openid","email"]',
                  ),
                  'LoginUrl' => 
                  array (
                    'title' => 'IDaaS实例用户登录页地址（IDaaS使用）。',
                    'description' => 'IDaaS实例用户登录页地址（IDaaS使用）。',
                    'type' => 'string',
                    'example' => 'https://daxxxxcn.aliyunidaas.com/',
                  ),
                  'Sub' => 
                  array (
                    'title' => '鉴权类型为JWT时使用；JWT claims 的sub(subject)，即主体。',
                    'description' => '鉴权类型为JWT时使用；JWT claims 的sub(subject)，即主体。',
                    'type' => 'string',
                    'example' => 'https://example.com/auth',
                  ),
                  'ExternalAuthZ' => 
                  array (
                    'title' => '自定义鉴权信息',
                    'description' => '自定义鉴权信息',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ServiceId' => 
                      array (
                        'title' => '鉴权服务ID',
                        'description' => '鉴权服务ID',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '15300',
                      ),
                      'PrefixPath' => 
                      array (
                        'title' => '鉴权API的Path',
                        'description' => '鉴权API的Path',
                        'type' => 'string',
                        'example' => '/auth',
                      ),
                      'TokenKey' => 
                      array (
                        'title' => 'Token位置，表示Token位于请求报文中哪个Header中，常见的有Authorization和Cookie',
                        'description' => 'Token位置，表示Token位于请求报文中哪个Header中，常见的有Authorization和Cookie',
                        'type' => 'string',
                        'example' => 'Authorization',
                      ),
                      'AllowRequestHeaders' => 
                      array (
                        'title' => '允许的请求头部',
                        'description' => '允许的请求头部',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '允许的请求头名称。',
                          'type' => 'string',
                          'example' => 'x-req',
                        ),
                      ),
                      'AllowUpstreamHeaders' => 
                      array (
                        'title' => '允许的响应头部',
                        'description' => '允许的响应头部',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '允许的响应头名称。',
                          'type' => 'string',
                          'example' => 'x-resp',
                        ),
                      ),
                      'Timeout' => 
                      array (
                        'title' => '鉴权服务的超时时间，单位：秒',
                        'description' => '鉴权服务的超时时间，单位：秒',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '10',
                      ),
                      'IsRestrict' => 
                      array (
                        'title' => '自定义鉴权模式：

- true：严格模式，当鉴权服务不可用时（鉴权服务建立连接失败或者返回5xx请求），网关拒绝客户端请求
- false：宽松模式，当鉴权服务不可用时（鉴权服务建立连接失败或者返回5xx请求），网关放过客户端请求',
                        'description' => '自定义鉴权模式：

- true：严格模式，当鉴权服务不可用时（鉴权服务建立连接失败或者返回5xx请求），网关拒绝客户端请求
- false：宽松模式，当鉴权服务不可用时（鉴权服务建立连接失败或者返回5xx请求），网关放过客户端请求',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'Service' => 
                      array (
                        'title' => '鉴权服务信息',
                        'description' => '鉴权服务信息',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Name' => 
                          array (
                            'title' => '鉴权服务名称',
                            'description' => '鉴权服务名称',
                            'type' => 'string',
                            'example' => ' httpbin-auth-service',
                          ),
                          'SourceType' => 
                          array (
                            'title' => '鉴权服务来源类型',
                            'description' => '鉴权服务来源类型',
                            'type' => 'string',
                            'example' => 'K8s',
                          ),
                          'GroupName' => 
                          array (
                            'title' => '鉴权服务所属的分组',
                            'description' => '鉴权服务所属的分组',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                          'Namespace' => 
                          array (
                            'title' => '鉴权服务命名空间',
                            'description' => '鉴权服务命名空间',
                            'type' => 'string',
                            'example' => 'default',
                          ),
                        ),
                      ),
                      'WithRequestBody' => 
                      array (
                        'title' => '是否允许携带Body',
                        'description' => '是否允许携带Body',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'BodyMaxBytes' => 
                      array (
                        'title' => 'Body的最大字节数',
                        'description' => 'Body的最大字节数',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '4000000',
                      ),
                    ),
                  ),
                  'ResourceList' => 
                  array (
                    'title' => '鉴权的授权规则列表，多个规则条件之间是“或”关系，规则条件内的多个匹配项之间是“与”关系。',
                    'description' => '鉴权的授权规则列表，多个规则条件之间是“或”关系，规则条件内的多个匹配项之间是“与”关系。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '鉴权的授权规则。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'title' => '授权规则ID',
                          'description' => '授权规则ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1303',
                        ),
                        'AuthId' => 
                        array (
                          'title' => '规则所归属鉴权的ID',
                          'description' => '规则所归属鉴权的ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2274',
                        ),
                        'DomainId' => 
                        array (
                          'title' => '规则内域名的ID',
                          'description' => '规则内域名的ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1765',
                        ),
                        'DomainName' => 
                        array (
                          'title' => '规则内的域名',
                          'description' => '规则内的域名',
                          'type' => 'string',
                          'example' => 'example.com',
                        ),
                        'Path' => 
                        array (
                          'title' => '规则的匹配路径',
                          'description' => '规则的匹配路径',
                          'type' => 'string',
                          'example' => '/test',
                        ),
                        'IsWhite' => 
                        array (
                          'title' => '授权黑白名单模式：

- true：白名单模式（名单中的 hosts + paths 不需要校验即可访问，其余都需要校验）
- false：黑名单模式（名单中的 hosts + paths 需要校验，其余可直接访问）',
                          'description' => '授权黑白名单模式：

- true：白名单模式（名单中的 hosts + paths 不需要校验即可访问，其余都需要校验）
- false：黑名单模式（名单中的 hosts + paths 需要校验，其余可直接访问）',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'GatewayId' => 
                        array (
                          'title' => '规则所属网关的ID',
                          'description' => '规则所属网关的ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2274',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'title' => '规则所属网关的唯一ID',
                          'description' => '规则所属网关的唯一ID',
                          'type' => 'string',
                          'example' => 'gw-6f0dbd108a0249d2b675b3ef50b*****',
                        ),
                        'GmtCreate' => 
                        array (
                          'title' => '授权规则的创建GMT时间',
                          'description' => '授权规则的创建GMT时间',
                          'type' => 'string',
                          'example' => '2024-02-19T03:32:38.000+0000',
                        ),
                        'GmtModified' => 
                        array (
                          'title' => '授权规则的修改GMT时间',
                          'description' => '授权规则的修改GMT时间',
                          'type' => 'string',
                          'example' => '2024-02-19T03:32:38.000+0000',
                        ),
                        'MatchType' => 
                        array (
                          'title' => '请求Path的匹配类型：

- EQUAL：精确匹配
- PRE：前缀匹配
- ERGULAR：正则匹配',
                          'description' => '请求Path的匹配类型：

- EQUAL：精确匹配
- PRE：前缀匹配
- ERGULAR：正则匹配',
                          'type' => 'string',
                          'example' => 'EQUAL',
                        ),
                        'IgnoreCase' => 
                        array (
                          'title' => '路径是否开启大小写敏感

- true：开启大小写敏感
- false：关闭大小写敏感',
                          'description' => '路径是否开启大小写敏感

- true：开启大小写敏感
- false：关闭大小写敏感',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'AuthResourceHeaderList' => 
                        array (
                          'title' => '规则的请求头（当前仅供自定义鉴权使用）',
                          'description' => '规则的请求头（当前仅供自定义鉴权使用）',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'HeaderKey' => 
                              array (
                                'title' => '请求头名称',
                                'description' => '请求头名称',
                                'type' => 'string',
                                'example' => 'x-req',
                              ),
                              'HeaderMethod' => 
                              array (
                                'title' => '匹配条件：

- EQUAL：等于
- NOT_EQUAL：不等于
- EXIST：存在
- NOT_EXIST：不存在
- INCLUDE：包含
- EXCLUDE：不包含
- PREFIX：前缀
- SUFFIX：后缀
- REGREX：正则',
                                'description' => '匹配条件：

- EQUAL：等于
- NOT_EQUAL：不等于
- EXIST：存在
- NOT_EXIST：不存在
- INCLUDE：包含
- EXCLUDE：不包含
- PREFIX：前缀
- SUFFIX：后缀
- REGREX：正则',
                                'type' => 'string',
                                'example' => 'EQUAL',
                              ),
                              'HeaderValue' => 
                              array (
                                'title' => '请求头的值',
                                'description' => '请求头的值',
                                'type' => 'string',
                                'example' => '123',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'AuthResourceMode' => 
                  array (
                    'title' => '授权资源模式：

- 0：简单模式
- 1：复杂模式',
                    'description' => '授权资源模式：

- 0：简单模式
- 1：复杂模式',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'AuthResourceConfig' => 
                  array (
                    'title' => '复杂模式的YAML配置',
                    'description' => '复杂模式的YAML配置',
                    'type' => 'string',
                    'example' => 'permissions:
  - not_rule:
      or_rules:
        rules:
        - and_rules:
            rules:
            - url_path:
                path:
                  ignore_case: false
                  prefix: /version
        - and_rules:
            rules:
            - url_path:
                path:
                  ignore_case: false
                  prefix: /header',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"9C96CDF8-9E6C-XXXX-XXXX-8F87A10117E6\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"OK\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 1100,\\n    \\"Name\\": \\"test\\",\\n    \\"GatewayUniqueId\\": \\"gw-6f0dbd108a0249d2b675b3ef50b*****\\",\\n    \\"GatewayId\\": 2274,\\n    \\"Type\\": \\"JWT\\",\\n    \\"Issuer\\": \\"https://example.com/auth\\",\\n    \\"Jwks\\": \\"{\\\\\\\\n  \\\\\\\\\\\\\\"keys\\\\\\\\\\\\\\":[\\\\\\\\n    {\\\\\\\\n      \\\\\\\\\\\\\\"kty\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"RSA\\\\\\\\\\\\\\",\\\\\\\\n      \\\\\\\\\\\\\\"e\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"AQAB\\\\\\\\\\\\\\",\\\\\\\\n      \\\\\\\\\\\\\\"use\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"sig\\\\\\\\\\\\\\",\\\\\\\\n      \\\\\\\\\\\\\\"kid\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"1rGufmH1YN8rqM9ZOLgo7eEST3AnL89Y-m-XGFioLoA\\\\\\\\\\\\\\",\\\\\\\\n      \\\\\\\\\\\\\\"alg\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"RS256\\\\\\\\\\\\\\",\\\\\\\\n      \\\\\\\\\\\\\\"n\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"rM2GIc0YTMqwNCwXnjKbW5QndkCEZgyLu3uQUnyZF7HvMTekiTvQg_39mg3dV1eaYYkYfZBogyroJBqAQXhk6VVCxlBjFVp2xstJPVWngMOOlcafwN_BKdN-EQ06O_Uu__e7gNKI3DunkNk0cNaFETE7d4meRYyTlgEzYgsrW05_ufR0BKoddL3E5JsCpUxRjH9ICbodBx0U74W6Dcci-R2EA1DBrEcboE6n90uoJs6UJNriAK_71nAsYonihU5aQFFnyPTkJHfRwHK6JlME6rn-b-rpLSpdyc6U1nOFZP2DEpz8U5FrYoLYSZIU-MQGxDhCnGc_rxl2IyP9B2qcCQ\\\\\\\\\\\\\\"\\\\\\\\n    }\\\\\\\\n  ]\\\\\\\\n}\\\\\\\\n\\",\\n    \\"IsWhite\\": true,\\n    \\"GmtCreate\\": \\"2024-02-19T02:41:03.000+0000\\",\\n    \\"GmtModified\\": \\"2024-02-19T02:41:03.000+0000\\",\\n    \\"TokenPosition\\": \\"HEADER\\",\\n    \\"TokenName\\": \\"Authorization\\",\\n    \\"TokenNamePrefix\\": \\"Bearer \\",\\n    \\"TokenPass\\": true,\\n    \\"Status\\": false,\\n    \\"RedirectUrl\\": \\"https://yourdomain/path\\",\\n    \\"ClientId\\": \\"example-app\\",\\n    \\"ClientSecret\\": \\"xxxxx\\",\\n    \\"CookieDomain\\": \\"hello.com\\",\\n    \\"ScopesList\\": \\"[\\\\\\"openid\\\\\\",\\\\\\"email\\\\\\"]\\",\\n    \\"LoginUrl\\": \\"https://daxxxxcn.aliyunidaas.com/\\",\\n    \\"Sub\\": \\"https://example.com/auth\\",\\n    \\"ExternalAuthZ\\": {\\n      \\"ServiceId\\": 15300,\\n      \\"PrefixPath\\": \\"/auth\\",\\n      \\"TokenKey\\": \\"Authorization\\",\\n      \\"AllowRequestHeaders\\": [\\n        \\"x-req\\"\\n      ],\\n      \\"AllowUpstreamHeaders\\": [\\n        \\"x-resp\\"\\n      ],\\n      \\"Timeout\\": 10,\\n      \\"IsRestrict\\": true,\\n      \\"Service\\": {\\n        \\"Name\\": \\" httpbin-auth-service\\",\\n        \\"SourceType\\": \\"K8s\\",\\n        \\"GroupName\\": \\"test\\",\\n        \\"Namespace\\": \\"default\\"\\n      },\\n      \\"WithRequestBody\\": true,\\n      \\"BodyMaxBytes\\": 4000000\\n    },\\n    \\"ResourceList\\": [\\n      {\\n        \\"Id\\": 1303,\\n        \\"AuthId\\": 2274,\\n        \\"DomainId\\": 1765,\\n        \\"DomainName\\": \\"example.com\\",\\n        \\"Path\\": \\"/test\\",\\n        \\"IsWhite\\": true,\\n        \\"GatewayId\\": 2274,\\n        \\"GatewayUniqueId\\": \\"gw-6f0dbd108a0249d2b675b3ef50b*****\\",\\n        \\"GmtCreate\\": \\"2024-02-19T03:32:38.000+0000\\",\\n        \\"GmtModified\\": \\"2024-02-19T03:32:38.000+0000\\",\\n        \\"MatchType\\": \\"EQUAL\\",\\n        \\"IgnoreCase\\": true,\\n        \\"AuthResourceHeaderList\\": [\\n          {\\n            \\"HeaderKey\\": \\"x-req\\",\\n            \\"HeaderMethod\\": \\"EQUAL\\",\\n            \\"HeaderValue\\": \\"123\\"\\n          }\\n        ]\\n      }\\n    ],\\n    \\"AuthResourceMode\\": 0,\\n    \\"AuthResourceConfig\\": \\"permissions:\\\\n  - not_rule:\\\\n      or_rules:\\\\n        rules:\\\\n        - and_rules:\\\\n            rules:\\\\n            - url_path:\\\\n                path:\\\\n                  ignore_case: false\\\\n                  prefix: /version\\\\n        - and_rules:\\\\n            rules:\\\\n            - url_path:\\\\n                path:\\\\n                  ignore_case: false\\\\n                  prefix: /header\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取网关鉴权详情',
    ),
    'AddAuthResource' => 
    array (
      'summary' => '网关鉴权-创建授权信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AuthId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'example' => '13',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'example' => '128',
          ),
        ),
        2 => 
        array (
          'name' => 'Path',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路径。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '/abc',
          ),
        ),
        3 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-86575c0bc9f04ecfbacb92b8e392****',
          ),
        ),
        4 => 
        array (
          'name' => 'MatchType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '匹配类型。

- 精确匹配：EQUAL

- 前缀匹配：PRE

- 正则匹配：ERGULAR',
            'type' => 'string',
            'required' => false,
            'example' => 'PRE',
          ),
        ),
        5 => 
        array (
          'name' => 'IgnoreCase',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否忽略大小写。（默认为true）',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'AuthResourceHeaderList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '鉴权资源头列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'HeaderKey' => 
                array (
                  'description' => 'HTTP头参数。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Access-Control-Allow-Origin',
                ),
                'HeaderMethod' => 
                array (
                  'description' => 'Header匹配方式。',
                  'type' => 'string',
                  'required' => false,
                  'enumValueTitles' => 
                  array (
                    'SUFFIX' => '后缀',
                    'EXIST' => '存在',
                    'PREFIX' => '前缀',
                    'EQUAL' => '等于',
                    'EXCLUDE' => '不包含',
                    'NOT_EQUAL' => '不等于',
                    'NOT_EXIST' => '不存在',
                    'REGREX' => '正则',
                    'INCLUDE' => '包含',
                  ),
                  'example' => 'EQUAL',
                ),
                'HeaderValue' => 
                array (
                  'description' => 'HTTP头参数的取值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '*',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4BBCF560-4DD7-5DBD-B849-CCB135BBBAB7',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '403',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据结构。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '24',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4BBCF560-4DD7-5DBD-B849-CCB135BBBAB7\\",\\n  \\"HttpStatusCode\\": 403,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 24\\n}","type":"json"}]',
      'title' => '添加鉴权资源',
    ),
    'DeleteAuthResource' => 
    array (
      'summary' => '删除授权资源。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '36',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-3f97e2989c344f35ab3fd62b19f1****',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '559412D1-BFCE-53CC-B88E-0192C331EF44',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。                                
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '主键ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12',
                  ),
                  'AuthId' => 
                  array (
                    'description' => '鉴权ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '253',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。',
                    'type' => 'string',
                    'example' => 'gw-7ea3da97b96543e19f6c597cd4a9****',
                  ),
                  'GatewayId' => 
                  array (
                    'description' => '网关ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => 'gw-7ea3da97b96543e19f6c597cd4a9****',
                  ),
                  'DomainId' => 
                  array (
                    'description' => '域ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '235',
                  ),
                  'DomainName' => 
                  array (
                    'description' => '域名。',
                    'type' => 'string',
                    'example' => 'name',
                  ),
                  'Path' => 
                  array (
                    'description' => '路径。',
                    'type' => 'string',
                    'example' => '/zookeeper',
                  ),
                  'IsWhite' => 
                  array (
                    'description' => '是否为白名单。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '修改日期',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"559412D1-BFCE-53CC-B88E-0192C331EF44\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 1,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 12,\\n    \\"AuthId\\": 253,\\n    \\"GatewayUniqueId\\": \\"gw-7ea3da97b96543e19f6c597cd4a9****\\",\\n    \\"GatewayId\\": 0,\\n    \\"DomainId\\": 235,\\n    \\"DomainName\\": \\"name\\",\\n    \\"Path\\": \\"/zookeeper\\",\\n    \\"IsWhite\\": true,\\n    \\"GmtCreate\\": \\"2022-01-07T10:07:57.000+0000\\",\\n    \\"GmtModified\\": \\"2022-01-07T10:07:57.000+0000\\"\\n  }\\n}","type":"json"}]',
      'title' => '删除网关授权资源',
    ),
    'AddGatewayRoute' => 
    array (
      'summary' => '添加网关路由。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '526',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteOrder',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由顺序。（数值越小优先级越高）',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'Predicates',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '匹配规则。',
            'type' => 'object',
            'properties' => 
            array (
              'PathPredicates' => 
              array (
                'description' => '路由匹配。',
                'type' => 'object',
                'properties' => 
                array (
                  'Path' => 
                  array (
                    'description' => '路径。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '/test',
                  ),
                  'Type' => 
                  array (
                    'description' => '路由匹配：

- 前缀：PRE。
- 精确：EQUAL。
- 正则：ERGULAR。',
                    'type' => 'string',
                    'required' => false,
                    'enumValueTitles' => 
                    array (
                    ),
                    'example' => 'PRE',
                  ),
                  'IgnoreCase' => 
                  array (
                    'description' => '忽略大小写。',
                    'type' => 'boolean',
                    'required' => false,
                    'example' => 'true',
                  ),
                ),
                'required' => false,
              ),
              'MethodPredicates' => 
              array (
                'description' => '方法匹配。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '具体方法。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GET',
                ),
                'required' => false,
              ),
              'HeaderPredicates' => 
              array (
                'description' => '请求头匹配。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '请求头。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'description' => '请求头Key。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'debug',
                    ),
                    'Value' => 
                    array (
                      'description' => '对应的Value。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'test',
                    ),
                    'Type' => 
                    array (
                      'description' => '匹配类型。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'PRE',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'QueryPredicates' => 
              array (
                'description' => 'URL参数匹配。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'URL参数。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'description' => '参数名。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'userid',
                    ),
                    'Value' => 
                    array (
                      'description' => '匹配值。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'test',
                    ),
                    'Type' => 
                    array (
                      'description' => '匹配类型。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'PRE',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'Services',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '服务列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '服务列表。',
              'type' => 'object',
              'properties' => 
              array (
                'ServiceId' => 
                array (
                  'description' => '服务ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '353',
                ),
                'Percent' => 
                array (
                  'description' => '权重百分比。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '80',
                ),
                'Version' => 
                array (
                  'description' => '服务版本。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'v1',
                ),
                'Name' => 
                array (
                  'description' => '名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'user',
                ),
                'SourceType' => 
                array (
                  'description' => '来源类型。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'MSE',
                ),
                'Namespace' => 
                array (
                  'description' => '服务所在命名空间。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'default',
                ),
                'GroupName' => 
                array (
                  'description' => '服务分组名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'AgreementType' => 
                array (
                  'description' => '协议类型。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'DUBBO',
                ),
                'HttpDubboTranscoder' => 
                array (
                  'description' => 'Dubbo协议转换体。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DubboServiceName' => 
                    array (
                      'description' => 'Dubbo服务名称。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'org.apache.dubbo.samples.basic.api.DemoService',
                    ),
                    'DubboServiceVersion' => 
                    array (
                      'description' => 'Dubbot服务版本。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '0.0.0',
                    ),
                    'DubboServiceGroup' => 
                    array (
                      'description' => '服务组。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '无',
                    ),
                    'MothedMapList' => 
                    array (
                      'description' => 'Dubbo转发规则列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '方法映射。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'DubboMothedName' => 
                          array (
                            'description' => 'Dubbo方法名。',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'sayHello',
                          ),
                          'HttpMothed' => 
                          array (
                            'description' => 'Http方法。
> 支持http方法参数值。
> - ALL_GET。
> - ALL_POST。
> - ALL_PUT。
> - ALL_DELETE。
> - ALL_PATCH。
',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'ALL_GET',
                          ),
                          'Mothedpath' => 
                          array (
                            'description' => '方法匹配路径。',
                            'type' => 'string',
                            'required' => false,
                            'example' => '/mytestzbk/sayhello',
                          ),
                          'PassThroughAllHeaders' => 
                          array (
                            'description' => 'Header透传类型。
> 透传类型枚举值。
> - 透传所有：PASS_ALL。
> - 不透传：PASS_NOT。
> - 指定参数：PASS_ASSIGN。
',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'PASS_NOT',
                          ),
                          'PassThroughList' => 
                          array (
                            'description' => '指定透传Header列表',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '指定Header透传值。',
                              'type' => 'string',
                              'required' => false,
                              'example' => 'x-forward',
                            ),
                            'required' => false,
                          ),
                          'ParamMapsList' => 
                          array (
                            'description' => '参数映射列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '参数映射体。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'ExtractKeySpec' => 
                                array (
                                  'description' => '入参位置。
> 入参位置枚举值。
> - 请求参数：`ALL_QUERY_PARAMETER`
- 请求头：`ALL_HEADER`
- 请求路径：`ALL_PATH`
- 请求体：`ALL_BODY`
',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'ALL_QUERY_PARAMETER',
                                ),
                                'ExtractKey' => 
                                array (
                                  'description' => '入参位提取Key。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'name',
                                ),
                                'MappingType' => 
                                array (
                                  'description' => '后端参数类型。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'java.lang.String',
                                ),
                              ),
                              'required' => false,
                            ),
                            'required' => false,
                          ),
                        ),
                        'required' => false,
                      ),
                      'required' => false,
                    ),
                  ),
                  'required' => false,
                ),
                'ServicePort' => 
                array (
                  'description' => '服务端口。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '443',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'DomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        6 => 
        array (
          'name' => 'DestinationType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标服务类型。
- Single：单服务
- Multiple：多服务
- VersionOriented：标签路由
- Mock：Mock
- Redirect：重定向',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'VersionOriented' => 'VersionOriented',
              'Multiple' => 'Multiple',
              'Single' => 'Single',
              'Redirect' => 'Redirect',
              'Mock' => 'Mock',
            ),
            'example' => 'Multiple',
          ),
        ),
        7 => 
        array (
          'name' => 'DirectResponseJSON',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'Mock响应配置。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'Mock返回码。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '403',
              ),
              'Body' => 
              array (
                'description' => 'Mock返回值。',
                'type' => 'string',
                'required' => false,
                'example' => 'hello',
              ),
            ),
            'required' => false,
          ),
        ),
        8 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-492af9b04bb4474cae9d645be8*****',
          ),
        ),
        9 => 
        array (
          'name' => 'DomainIdListJSON',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名列表。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[0,94]',
          ),
        ),
        10 => 
        array (
          'name' => 'RedirectJSON',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '重定向配置。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '302',
              ),
              'Host' => 
              array (
                'description' => '重定向主机名。',
                'type' => 'string',
                'required' => false,
                'example' => 'test.com',
              ),
              'Path' => 
              array (
                'description' => '重定向路径。',
                'type' => 'string',
                'required' => false,
                'example' => '/test',
              ),
            ),
            'required' => false,
          ),
        ),
        11 => 
        array (
          'name' => 'EnableWaf',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启WAF。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        12 => 
        array (
          'name' => 'Fallback',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启Fallback服务。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        13 => 
        array (
          'name' => 'FallbackServices',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'Fallback服务。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ServiceId' => 
                array (
                  'description' => '服务ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '353',
                ),
                'Percent' => 
                array (
                  'description' => '权重百分比。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '80',
                ),
                'Version' => 
                array (
                  'description' => '服务版本。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'v1',
                ),
                'Name' => 
                array (
                  'description' => '名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'user',
                ),
                'SourceType' => 
                array (
                  'description' => '来源类型。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'MSE',
                ),
                'Namespace' => 
                array (
                  'description' => '服务所在命名空间。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'default',
                ),
                'GroupName' => 
                array (
                  'description' => '服务分组名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'AgreementType' => 
                array (
                  'description' => '协议类型。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'DUBBO',
                ),
                'ServicePort' => 
                array (
                  'description' => '服务端口。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '443',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        14 => 
        array (
          'name' => 'RouteType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由类型：

Op：管控路由。',
            'type' => 'string',
            'required' => false,
            'example' => 'Op',
          ),
        ),
        15 => 
        array (
          'name' => 'Policies',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略Json字符串。',
            'type' => 'string',
            'required' => false,
            'example' => '{"CORS":"{\\"allowMethods\\":\\"GET,POST,PUT,DELETE,HEAD,OPTIONS,PATCH\\",\\"allowHeaders\\":\\"*\\",\\"exposeHeaders\\":\\"*\\",\\"unitNum\\":12,\\"allowCredentials\\":true,\\"status\\":\\"off\\",\\"allowOrigins\\":\\"*\\",\\"timeUnit\\":\\"h\\"}","Timeout":"{\\"unitNum\\":10,\\"timeUnit\\":\\"s\\",\\"status\\":\\"off\\"}","Retry":"{\\"attempts\\":2,\\"retryOn\\":[\\"5xx\\"],\\"status\\":\\"off\\"}","HTTPRewrite":"{\\"pathType\\":\\"EQUAL\\",\\"path\\":\\"/o\\",\\"status\\":\\"off\\"}","Waf":"{\\"enabled\\":false}","HeaderOp":"{\\"status\\":\\"off\\",\\"headerOpItems\\":[{\\"directionType\\":\\"Request\\",\\"opType\\":\\"Add\\",\\"key\\":\\"kkk\\",\\"value\\":\\"ll\\"}]}"}',
          ),
        ),
        16 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '路由描述',
            'description' => '路由描述',
            'type' => 'string',
            'required' => false,
            'example' => 'a route for xxx',
          ),
        ),
        17 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '03A3E2F4-6804-5663-9D5D-2EC47A1*****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回代码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '创建的路由ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '555',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。

- InvalidParameter：参数错误：缺失、格式不对
- IllegalRequest：请求非法：参数越权
- NoPermission：权限专用
- NotFound：资源404
- InternalError：内部错误',
                'type' => 'string',
                'example' => 'InvalidParameter',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"03A3E2F4-6804-5663-9D5D-2EC47A1*****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 555,\\n  \\"ErrorCode\\": \\"InvalidParameter\\"\\n}","type":"json"}]',
      'title' => '添加网关路由',
    ),
    'DeleteGatewayRoute' => 
    array (
      'summary' => '删除网关路由。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '252',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'gw-492af9b04bb4474cae9d645be850e3d7',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'ADDD8AB7-8D1C-4697-A83E-410D2607****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '报错信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => 'ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12',
                  ),
                  'Name' => 
                  array (
                    'description' => '名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。',
                    'type' => 'string',
                    'example' => 'gw-5017305290e14cebbrvec4a5****',
                  ),
                  'GatewayId' => 
                  array (
                    'description' => '网关ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '125',
                  ),
                  'Predicates' => 
                  array (
                    'description' => '匹配规则',
                    'type' => 'string',
                    'example' => '{\\"PathPredicates\\":{\\"Path\\":\\"/metas\\",\\"Type\\":\\"PRE\\",\\"IgnoreCase\\":false}}',
                  ),
                  'DefaultServiceId' => 
                  array (
                    'description' => '默认服务ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'RouteOrder' => 
                  array (
                    'description' => '路由顺序。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Status' => 
                  array (
                    'description' => '路由状态。
- 未发布：0
- 发布中：2
- 已发布：3
- 编辑中(有更新未发布)：4
- 下线中：5
- 不可用：6',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2022-01-07 18:07:57',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '修改时间。',
                    'type' => 'string',
                    'example' => '2021-12-30T06:41:52.000+0000',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"ADDD8AB7-8D1C-4697-A83E-410D2607****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 12,\\n    \\"Name\\": \\"test\\",\\n    \\"GatewayUniqueId\\": \\"gw-5017305290e14cebbrvec4a5****\\",\\n    \\"GatewayId\\": 125,\\n    \\"Predicates\\": \\"{\\\\\\\\\\\\\\"PathPredicates\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"Path\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"/metas\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"Type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"PRE\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"IgnoreCase\\\\\\\\\\\\\\":false}}\\",\\n    \\"DefaultServiceId\\": 1,\\n    \\"RouteOrder\\": 1,\\n    \\"Status\\": 2,\\n    \\"GmtCreate\\": \\"2022-01-07 18:07:57\\",\\n    \\"GmtModified\\": \\"2021-12-30T06:41:52.000+0000\\"\\n  }\\n}","type":"json"}]',
      'title' => '删除网关路由',
    ),
    'UpdateGatewayRouteHTTPRewrite' => 
    array (
      'summary' => '更新网关路由的重写策略。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '59359',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseXCPJ75',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '238',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '430',
          ),
        ),
        2 => 
        array (
          'name' => 'HttpRewriteJSON',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP重写信息，支持JSON格式。',
            'type' => 'string',
            'required' => false,
            'example' => '{"pathType":"PRE","path":"/","status":"off"}',
          ),
        ),
        3 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-90392d768a3847a7b804c505254da96d',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AE60DA1E-B234-5105-897B-68372453A5A2',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '411',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"AE60DA1E-B234-5105-897B-68372453A5A2\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 411\\n}","type":"json"}]',
      'title' => '更新网关路由的重写策略',
    ),
    'UpdateGatewayRoute' => 
    array (
      'summary' => '更新网关路由。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '501',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '路由名称（已废弃，不支持修改路由名称，填入和当前不同的路由名称会导致更新失败）',
            'description' => '路由名称。',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'example' => 'route-web',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteOrder',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由顺序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'Predicates',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '路由匹配条件。',
            'type' => 'object',
            'properties' => 
            array (
              'PathPredicates' => 
              array (
                'description' => 'Path匹配。',
                'type' => 'object',
                'properties' => 
                array (
                  'Path' => 
                  array (
                    'description' => '路由Path路径。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '/test',
                  ),
                  'Type' => 
                  array (
                    'description' => '匹配类型。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'PRE',
                  ),
                  'IgnoreCase' => 
                  array (
                    'description' => '忽略大小写。',
                    'type' => 'boolean',
                    'required' => false,
                    'example' => 'true',
                  ),
                ),
                'required' => true,
                'docRequired' => true,
              ),
              'MethodPredicates' => 
              array (
                'description' => '方法匹配。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '具体方法。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'GET',
                ),
                'required' => false,
              ),
              'HeaderPredicates' => 
              array (
                'description' => '请求头匹配。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '请求头。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'description' => '请求头Key。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'debug',
                    ),
                    'Value' => 
                    array (
                      'description' => '对应的Value。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'on',
                    ),
                    'Type' => 
                    array (
                      'description' => '匹配类型。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'PRE',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'QueryPredicates' => 
              array (
                'description' => '参数匹配。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'URL参数。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'description' => '参数名。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'userid',
                    ),
                    'Value' => 
                    array (
                      'description' => '匹配值。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'test',
                    ),
                    'Type' => 
                    array (
                      'description' => '匹配类型。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'PRE',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
            ),
            'required' => true,
            'docRequired' => true,
          ),
        ),
        4 => 
        array (
          'name' => 'Services',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '目标服务。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '服务列表。',
              'type' => 'object',
              'properties' => 
              array (
                'ServiceId' => 
                array (
                  'description' => '服务ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '1',
                ),
                'Percent' => 
                array (
                  'description' => '百分比。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '80',
                ),
                'Version' => 
                array (
                  'description' => '服务版本。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'v1',
                ),
                'Name' => 
                array (
                  'description' => '名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'web',
                ),
                'SourceType' => 
                array (
                  'description' => '来源类型。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'MSE',
                ),
                'Namespace' => 
                array (
                  'description' => '服务所在命名空间。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'default',
                ),
                'GroupName' => 
                array (
                  'description' => '服务分组名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'AgreementType' => 
                array (
                  'description' => '协议类型。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'DUBBO
',
                ),
                'HttpDubboTranscoder' => 
                array (
                  'description' => 'Dubbo协议转换体。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DubboServiceName' => 
                    array (
                      'description' => 'Dubbo服务名称。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'org.apache.dubbo.samples.basic.api.DemoService',
                    ),
                    'DubboServiceVersion' => 
                    array (
                      'description' => 'Dubbot服务版本。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '0.0.0',
                    ),
                    'DubboServiceGroup' => 
                    array (
                      'description' => 'Dubbo服务组。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'service name',
                    ),
                    'MothedMapList' => 
                    array (
                      'description' => 'Dubbo转发规则列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '方法映射体。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'DubboMothedName' => 
                          array (
                            'description' => 'Dubbo方法名。',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'sayHello',
                          ),
                          'HttpMothed' => 
                          array (
                            'description' => 'Http方法。
> 支持http方法参数值。
> - ALL_GET。
> - ALL_POST。
> - ALL_PUT。
> - ALL_DELETE。
> - ALL_PATCH。
',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'ALL_GET',
                          ),
                          'Mothedpath' => 
                          array (
                            'description' => '方法匹配路径。',
                            'type' => 'string',
                            'required' => false,
                            'example' => '/mytestzbk/sayhello
',
                          ),
                          'PassThroughAllHeaders' => 
                          array (
                            'description' => 'Header透传类型。
> 透传类型枚举值。
> - 透传所有：PASS_ALL。
> - 不透传：PASS_NOT。
> - 指定参数：PASS_ASSIGN。
',
                            'type' => 'string',
                            'required' => false,
                            'example' => 'PASS_NOT
',
                          ),
                          'PassThroughList' => 
                          array (
                            'description' => '指定透传Header列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '指定Header透传值。',
                              'type' => 'string',
                              'required' => false,
                              'example' => 'x-forward
',
                            ),
                            'required' => false,
                          ),
                          'ParamMapsList' => 
                          array (
                            'description' => '参数映射列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '参数映射体。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'ExtractKeySpec' => 
                                array (
                                  'description' => '入参位置。
> 入参位置枚举值。
> - 请求参数：`ALL_QUERY_PARAMETER`
> - 请求头：`ALL_HEADER`
> - 请求路径：`ALL_PATH`
> - 请求体：`ALL_BODY`
',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'ALL_QUERY_PARAMETER
',
                                ),
                                'ExtractKey' => 
                                array (
                                  'description' => '入参位提取Key。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'name',
                                ),
                                'MappingType' => 
                                array (
                                  'description' => '后端参数类型。',
                                  'type' => 'string',
                                  'required' => false,
                                  'example' => 'java.lang.String',
                                ),
                              ),
                              'required' => false,
                            ),
                            'required' => false,
                          ),
                        ),
                        'required' => false,
                      ),
                      'required' => false,
                    ),
                  ),
                  'required' => false,
                ),
                'ServicePort' => 
                array (
                  'description' => 'Dubbo端口。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '20880',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '139',
          ),
        ),
        6 => 
        array (
          'name' => 'DestinationType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标服务类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'Mock',
          ),
        ),
        7 => 
        array (
          'name' => 'DirectResponseJSON',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'Mock内容。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => 'Mock返回码。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '200',
              ),
              'Body' => 
              array (
                'description' => 'Mock返回值。',
                'type' => 'string',
                'required' => false,
                'example' => 'hello',
              ),
            ),
            'required' => false,
          ),
        ),
        8 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-86575c0bc9f04ecfbacb92b8e392a2c4',
          ),
        ),
        9 => 
        array (
          'name' => 'DomainIdListJSON',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联域名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[90]',
          ),
        ),
        10 => 
        array (
          'name' => 'RedirectJSON',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '重定向。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '302',
              ),
              'Host' => 
              array (
                'description' => '重定向主机名。',
                'type' => 'string',
                'required' => false,
                'example' => 'test.com',
              ),
              'Path' => 
              array (
                'description' => '重定向路径。',
                'type' => 'string',
                'required' => false,
                'example' => '/test',
              ),
            ),
            'required' => false,
          ),
        ),
        11 => 
        array (
          'name' => 'EnableWaf',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启Waf。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        12 => 
        array (
          'name' => 'Fallback',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启Fallback服务。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        13 => 
        array (
          'name' => 'FallbackServices',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'Fallback服务。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '数据对象。',
              'type' => 'object',
              'properties' => 
              array (
                'ServiceId' => 
                array (
                  'description' => '服务ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '1',
                ),
                'Percent' => 
                array (
                  'description' => '权重百分比。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '80',
                ),
                'Version' => 
                array (
                  'description' => '服务版本。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'v1',
                ),
                'Name' => 
                array (
                  'description' => '名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'name',
                ),
                'SourceType' => 
                array (
                  'description' => '来源类型。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'MSE',
                ),
                'Namespace' => 
                array (
                  'description' => '服务所在命名空间。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Namespace
',
                ),
                'GroupName' => 
                array (
                  'description' => '服务分组名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'AgreementType' => 
                array (
                  'description' => '协议类型。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'DUBBO
',
                ),
                'ServicePort' => 
                array (
                  'description' => '服务端口。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '8848',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        14 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '路由描述',
            'description' => '路由描述',
            'type' => 'string',
            'required' => false,
            'example' => 'a route for xxx',
          ),
        ),
        15 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '73785414-2C5B-5E28-BD91-B2C742269C48',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP返回码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应描述',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '337',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'NoPermission',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"73785414-2C5B-5E28-BD91-B2C742269C48\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 337,\\n  \\"ErrorCode\\": \\"NoPermission\\"\\n}","type":"json"}]',
      'title' => '更新网关路由',
    ),
    'UpdateGatewayRouteCORS' => 
    array (
      'summary' => '修改网关路由跨域策略。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '101484',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseXCPJ75',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联记录ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '55',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '85',
          ),
        ),
        2 => 
        array (
          'name' => 'CorsJSON',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '跨域信息。',
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => '开启状态。',
                'type' => 'string',
                'required' => false,
                'example' => 'off',
              ),
              'AllowOrigins' => 
              array (
                'description' => '允许的域。',
                'type' => 'string',
                'required' => false,
                'example' => 'https://api.aliyun-inc.com/',
              ),
              'AllowMethods' => 
              array (
                'description' => '允许的方法。',
                'type' => 'string',
                'required' => false,
                'example' => 'GET,POST',
              ),
              'AllowHeaders' => 
              array (
                'description' => '允许的Header。',
                'type' => 'string',
                'required' => false,
                'example' => 'content-type',
              ),
              'ExposeHeaders' => 
              array (
                'description' => '允许的响应头部。',
                'type' => 'string',
                'required' => false,
                'example' => '*',
              ),
              'TimeUnit' => 
              array (
                'description' => '时间单位。',
                'type' => 'string',
                'required' => false,
                'example' => 'h',
              ),
              'UnitNum' => 
              array (
                'description' => '时间数。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '24',
              ),
              'AllowCredentials' => 
              array (
                'description' => '允许携带凭证。',
                'type' => 'boolean',
                'required' => false,
                'example' => 'true',
              ),
            ),
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-f70a6ddf2f0941a2bb997b2d16028f37',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '参照国际标准 [RFC7231](https://tools.ietf.org/html/rfc7231)，后端服务需要按用户语言要求返回结果
* 默认值：无
* 中文：zh-CN
* 英文：en-US',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '41BE990E-44E4-5ED3-AEEB-A276941B1854',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP返回码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '报错信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation. ',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。                                 
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据结构。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '618',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"41BE990E-44E4-5ED3-AEEB-A276941B1854\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation. \\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 618\\n}","type":"json"}]',
      'title' => '修改网关路由跨域策略',
    ),
    'UpdateGatewayRouteHeaderOp' => 
    array (
      'summary' => '修改网关路由Header设置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '72158',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseXCPJ75',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '记录ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '411',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '324',
          ),
        ),
        2 => 
        array (
          'name' => 'HeaderOpJSON',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户header设置描述。',
            'type' => 'string',
            'required' => false,
            'example' => '{"status":"on","headerOpItems":[{"directionType":"Request","opType":"Update","key":"hosts","value":"test.com"}]}',
          ),
        ),
        3 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-6bdc977deda44bf589c49d063b4c2d1d',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '7C8CB294-BED8-5F32-A416-7517725E8F27',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '报错信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '状态码。说明 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '666',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"7C8CB294-BED8-5F32-A416-7517725E8F27\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 666\\n}","type":"json"}]',
      'title' => '修改网关路由Header设置',
    ),
    'UpdateGatewayRouteTimeout' => 
    array (
      'summary' => '修改网关路由超时策略。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '114050',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseXCPJ75',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联记录ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '567',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '85',
          ),
        ),
        2 => 
        array (
          'name' => 'TimeoutJSON',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '超时时间。',
            'type' => 'object',
            'properties' => 
            array (
              'UnitNum' => 
              array (
                'description' => '超时时间数值',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '1',
              ),
              'TimeUnit' => 
              array (
                'description' => '时间单元，如下：s：秒',
                'type' => 'string',
                'required' => false,
                'example' => 's',
              ),
              'Status' => 
              array (
                'description' => '开启状态',
                'type' => 'string',
                'required' => false,
                'example' => 'off',
              ),
            ),
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-533290d279c1405f9628c64f7c8272ee',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '5359729E-A059-5942-98AF-E981E89C99FA',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应描述',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '返回值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。取值：true：成功。false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '节点数据。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '400',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"5359729E-A059-5942-98AF-E981E89C99FA\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 400\\n}","type":"json"}]',
      'title' => '修改网关路由超时策略',
    ),
    'UpdateGatewayRouteRetry' => 
    array (
      'summary' => '修改网关路由重试策略。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '114051',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseXCPJ75',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联记录ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '508',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '501',
          ),
        ),
        2 => 
        array (
          'name' => 'RetryJSON',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '重试。',
            'type' => 'object',
            'properties' => 
            array (
              'Attempts' => 
              array (
                'description' => '重试次数',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '2',
              ),
              'RetryOn' => 
              array (
                'description' => '重试触发条件',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '具体条件',
                  'type' => 'string',
                  'required' => false,
                  'example' => '5xx',
                ),
                'required' => false,
              ),
              'HttpCodes' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'HTTP状态码。',
                  'type' => 'string',
                  'required' => false,
                ),
                'required' => false,
              ),
              'Status' => 
              array (
                'description' => '开启状态',
                'type' => 'string',
                'required' => false,
                'example' => 'off',
              ),
            ),
            'required' => true,
            'docRequired' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-3f97e2989c344f35ab3fd62b19f1d10a',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '9297B27D-D932-5E9F-93B9-99D6C5F3A879',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP返回码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '报错信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '返回代码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '640',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"9297B27D-D932-5E9F-93B9-99D6C5F3A879\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": 640\\n}","type":"json"}]',
      'title' => '修改网关路由重试策略',
    ),
    'GetGatewayRouteDetail' => 
    array (
      'summary' => '查询网关路由详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1050',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-5d3a78a53ec947aa928212d671d400ac',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FDF2D16C-5D28-5FAA-A56B-30BDE3559880',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '状态码。说明 200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => 'ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1050',
                  ),
                  'Name' => 
                  array (
                    'description' => '名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。',
                    'type' => 'string',
                    'example' => 'gw-7ea3da97b96543e19f6c597c****',
                  ),
                  'GatewayId' => 
                  array (
                    'description' => '网关ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'DefaultServiceId' => 
                  array (
                    'description' => '默认服务ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '3',
                  ),
                  'DefaultServiceName' => 
                  array (
                    'description' => '默认服务名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Status' => 
                  array (
                    'description' => '路由状态。

- 未发布：0

- 发布中：2

- 已发布：3

- 编辑中(有更新未发布)：4

- 下线中：5

- 不可用：6',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2022-01-07 18:07:57',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '最后修改时间。',
                    'type' => 'string',
                    'example' => '2022-01-07T10:07:57.000+0000',
                  ),
                  'RouteOrder' => 
                  array (
                    'description' => '路由顺序。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Predicates' => 
                  array (
                    'description' => '匹配条件。',
                    'type' => 'string',
                    'example' => '{}',
                  ),
                  'RoutePredicates' => 
                  array (
                    'description' => '路由匹配。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PathPredicates' => 
                      array (
                        'description' => '路由匹配。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Path' => 
                          array (
                            'description' => '路径。',
                            'type' => 'string',
                            'example' => '/api',
                          ),
                          'Type' => 
                          array (
                            'description' => '匹配类型。',
                            'type' => 'string',
                            'example' => 'PRE',
                          ),
                          'IgnoreCase' => 
                          array (
                            'description' => '是否忽略大小写。',
                            'type' => 'boolean',
                            'example' => 'true',
                          ),
                        ),
                      ),
                      'MethodPredicates' => 
                      array (
                        'description' => '方法匹配。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '方法。',
                          'type' => 'string',
                          'example' => 'GET',
                        ),
                      ),
                      'HeaderPredicates' => 
                      array (
                        'description' => '头匹配。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '请求头。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Key' => 
                            array (
                              'description' => '请求头KEY。',
                              'type' => 'string',
                              'example' => 'id',
                            ),
                            'Value' => 
                            array (
                              'description' => '匹配值。',
                              'type' => 'string',
                              'example' => '200',
                            ),
                            'Type' => 
                            array (
                              'description' => '类型。',
                              'type' => 'string',
                              'example' => 'PRE',
                            ),
                          ),
                        ),
                      ),
                      'QueryPredicates' => 
                      array (
                        'description' => '参数匹配。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '参数。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Key' => 
                            array (
                              'description' => '参数名称。',
                              'type' => 'string',
                              'example' => 'userid',
                            ),
                            'Value' => 
                            array (
                              'description' => '匹配值。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'Type' => 
                            array (
                              'description' => '类型。',
                              'type' => 'string',
                              'example' => 'PRE',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'DomainId' => 
                  array (
                    'description' => '域名ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '235',
                  ),
                  'DomainName' => 
                  array (
                    'description' => '域名。',
                    'type' => 'string',
                    'example' => '123.com',
                  ),
                  'Services' => 
                  array (
                    'description' => '服务的配置信息。',
                    'type' => 'string',
                    'example' => '[{\\"Percent\\":100,\\"ServiceId\\":126}]',
                  ),
                  'RouteServices' => 
                  array (
                    'description' => '服务。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '服务。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ServiceId' => 
                        array (
                          'description' => '服务ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '782',
                        ),
                        'ServiceName' => 
                        array (
                          'description' => '服务名称。',
                          'type' => 'string',
                          'example' => 'xkc-crm',
                        ),
                        'Percent' => 
                        array (
                          'description' => '权重。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '80',
                        ),
                        'Version' => 
                        array (
                          'description' => '服务版本。',
                          'type' => 'string',
                          'example' => 'v1',
                        ),
                        'Name' => 
                        array (
                          'description' => '服务名称。',
                          'type' => 'string',
                          'example' => 'dubbo4',
                        ),
                        'SourceType' => 
                        array (
                          'description' => '服务来源。',
                          'type' => 'string',
                          'example' => 'MSE',
                        ),
                        'Namespace' => 
                        array (
                          'description' => '命名空间。',
                          'type' => 'string',
                          'example' => 'acs_ecs_dashboard',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '服务组名称。',
                          'type' => 'string',
                          'example' => 'api',
                        ),
                        'AgreementType' => 
                        array (
                          'description' => '协议类型。',
                          'type' => 'string',
                          'example' => 'DUBBO',
                        ),
                        'HttpDubboTranscoder' => 
                        array (
                          'description' => 'Dubbo协议转换体。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DubboServiceName' => 
                            array (
                              'description' => 'Dubbo服务名称。',
                              'type' => 'string',
                              'example' => 'org.apache.dubbo.samples.basic.api.DemoService
',
                            ),
                            'DubboServiceVersion' => 
                            array (
                              'description' => 'Dubbo服务版本。',
                              'type' => 'string',
                              'example' => '0.0.0',
                            ),
                            'MothedMapList' => 
                            array (
                              'description' => 'Dubbo转发规则列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'DubboMothedName' => 
                                  array (
                                    'description' => 'Dubbo方法名。',
                                    'type' => 'string',
                                    'example' => 'sayHello',
                                  ),
                                  'HttpMothed' => 
                                  array (
                                    'description' => 'Http方法。
> 支持http方法参数值。
> - ALL_GET
> - ALL_POST
> - ALL_PUT
> - ALL_DELETE
> - ALL_PATCH
',
                                    'type' => 'string',
                                    'example' => 'ALL_GET',
                                  ),
                                  'Mothedpath' => 
                                  array (
                                    'description' => '方法匹配路径。',
                                    'type' => 'string',
                                    'example' => '/mytestzbk/sayhello',
                                  ),
                                  'PassThroughAllHeaders' => 
                                  array (
                                    'description' => 'Header透传类型。
> 透传类型枚举值。
> - 透传所有：PASS_ALL
> - 不透传：PASS_NOT
> - 指定参数：PASS_ASSIGN',
                                    'type' => 'string',
                                    'example' => 'PASS_NOT',
                                  ),
                                  'PassThroughList' => 
                                  array (
                                    'description' => '指定Header透传列表。',
                                    'type' => 'array',
                                    'items' => 
                                    array (
                                      'description' => '指定Header透传值。',
                                      'type' => 'string',
                                      'example' => 'x-forward',
                                    ),
                                  ),
                                  'ParamMapsList' => 
                                  array (
                                    'description' => '参数映射列表。',
                                    'type' => 'array',
                                    'items' => 
                                    array (
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'ExtractKeySpec' => 
                                        array (
                                          'description' => '入参位置。
> 入参位置枚举值。
> - 请求参数：`ALL_QUERY_PARAMETER`
> - 请求头：`ALL_HEADER`
> - 请求路径：`ALL_PATH`
> - 请求体：`ALL_BODY`
',
                                          'type' => 'string',
                                          'example' => 'ALL_QUERY_PARAMETER',
                                        ),
                                        'ExtractKey' => 
                                        array (
                                          'description' => '入参位提取Key。',
                                          'type' => 'string',
                                          'example' => 'name',
                                        ),
                                        'MappingType' => 
                                        array (
                                          'description' => '后端参数类型。',
                                          'type' => 'string',
                                          'example' => 'java.lang.String',
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                            'DubboServiceGroup' => 
                            array (
                              'description' => 'Dubbo服务组。',
                              'type' => 'string',
                              'example' => 'service group',
                            ),
                          ),
                        ),
                        'ServicePort' => 
                        array (
                          'description' => '服务端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20880',
                        ),
                        'HealthStatus' => 
                        array (
                          'title' => '健康状态

- Health

- Unhealthy

- Checking

- Unknown',
                          'description' => '健康状态

- Health

- Unhealthy

- Checking

- Unknown',
                          'type' => 'string',
                          'example' => 'Health',
                        ),
                        'UnhealthyEndpoints' => 
                        array (
                          'title' => '非健康Endpoint列表',
                          'description' => '非健康Endpoint列表',
                          'type' => 'array',
                          'items' => 
                          array (
                            'title' => '非健康Endpoint',
                            'description' => '非健康Endpoint',
                            'type' => 'string',
                            'example' => '192.168.1.2',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'HTTPRewrite' => 
                  array (
                    'description' => '重写策略信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Status' => 
                      array (
                        'description' => '开启状态。',
                        'type' => 'string',
                        'example' => 'off',
                      ),
                      'Path' => 
                      array (
                        'description' => '节点路径。',
                        'type' => 'string',
                        'example' => '/test/client',
                      ),
                      'Host' => 
                      array (
                        'description' => '实例地址。',
                        'type' => 'string',
                        'example' => 'aliyuncs.com',
                      ),
                      'PathType' => 
                      array (
                        'description' => '重写类型。',
                        'type' => 'string',
                        'example' => 'PRE',
                      ),
                      'Pattern' => 
                      array (
                        'description' => '匹配Pattern。',
                        'type' => 'string',
                        'example' => '/test',
                      ),
                      'Substitution' => 
                      array (
                        'description' => '替换。',
                        'type' => 'string',
                        'example' => 'test',
                      ),
                    ),
                  ),
                  'HeaderOp' => 
                  array (
                    'description' => 'Header设置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Status' => 
                      array (
                        'description' => '状态。',
                        'type' => 'string',
                        'example' => 'off',
                      ),
                      'HeaderOpItems' => 
                      array (
                        'description' => '头字段对象。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '设置策略。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DirectionType' => 
                            array (
                              'description' => '请求或响应。',
                              'type' => 'string',
                              'example' => 'Response',
                            ),
                            'OpType' => 
                            array (
                              'description' => '操作类型。',
                              'type' => 'string',
                              'example' => 'Add',
                            ),
                            'Key' => 
                            array (
                              'description' => 'Header Key。',
                              'type' => 'string',
                              'example' => 'debug',
                            ),
                            'Value' => 
                            array (
                              'description' => '设置值。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'DestinationType' => 
                  array (
                    'description' => '目标服务类型。',
                    'type' => 'string',
                    'example' => 'Single',
                  ),
                  'DirectResponse' => 
                  array (
                    'description' => 'Mock信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Code' => 
                      array (
                        'description' => '响应码。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '200',
                      ),
                      'Body' => 
                      array (
                        'description' => 'Mock返回值。',
                        'type' => 'string',
                        'example' => '{}',
                      ),
                    ),
                  ),
                  'Cors' => 
                  array (
                    'description' => '跨域配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Status' => 
                      array (
                        'description' => '状态。',
                        'type' => 'string',
                        'example' => 'off',
                      ),
                      'AllowOrigins' => 
                      array (
                        'description' => '跨域。',
                        'type' => 'string',
                        'example' => '*',
                      ),
                      'AllowMethods' => 
                      array (
                        'description' => '跨域方法。',
                        'type' => 'string',
                        'example' => 'GET,POST,PUT,DELETE,HEAD,OPTIONS,PATCH',
                      ),
                      'AllowHeaders' => 
                      array (
                        'description' => '跨域Header。',
                        'type' => 'string',
                        'example' => '*',
                      ),
                      'ExposeHeaders' => 
                      array (
                        'description' => '响应头。',
                        'type' => 'string',
                        'example' => '*',
                      ),
                      'TimeUnit' => 
                      array (
                        'description' => '时间单位。',
                        'type' => 'string',
                        'example' => 'h',
                      ),
                      'UnitNum' => 
                      array (
                        'description' => '时间数。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '24',
                      ),
                      'AllowCredentials' => 
                      array (
                        'description' => '允许携带凭证。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                    ),
                  ),
                  'Timeout' => 
                  array (
                    'description' => '超时配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'UnitNum' => 
                      array (
                        'description' => '时间数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '10',
                      ),
                      'TimeUnit' => 
                      array (
                        'description' => '时间单位。',
                        'type' => 'string',
                        'example' => 's',
                      ),
                      'Status' => 
                      array (
                        'description' => '状态。',
                        'type' => 'string',
                        'example' => 'off',
                      ),
                    ),
                  ),
                  'Retry' => 
                  array (
                    'description' => '重试配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Attempts' => 
                      array (
                        'description' => '重试次数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'RetryOn' => 
                      array (
                        'description' => '重试条件。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '重试条件。',
                          'type' => 'string',
                          'example' => '5xx',
                        ),
                      ),
                      'HttpCodes' => 
                      array (
                        'description' => 'HTTP状态码。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => 'HTTP状态码。',
                          'type' => 'string',
                          'example' => '500',
                        ),
                      ),
                      'Status' => 
                      array (
                        'description' => '重试状态。',
                        'type' => 'string',
                        'example' => 'on',
                      ),
                    ),
                  ),
                  'DomainIdList' => 
                  array (
                    'description' => '域名列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '域名ID列表。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                  ),
                  'DomainNameList' => 
                  array (
                    'description' => '域名列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '域名列表。',
                      'type' => 'string',
                      'example' => 'test.com',
                    ),
                  ),
                  'Redirect' => 
                  array (
                    'description' => '重定向配置',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Code' => 
                      array (
                        'description' => '响应码。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '200',
                      ),
                      'Host' => 
                      array (
                        'description' => '主机。',
                        'type' => 'string',
                        'example' => '16',
                      ),
                      'Path' => 
                      array (
                        'description' => '路径。',
                        'type' => 'string',
                        'example' => '10111',
                      ),
                    ),
                  ),
                  'FlowMirror' => 
                  array (
                    'description' => '流量镜像配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'TargetServiceId' => 
                      array (
                        'description' => '目标服务ID。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '21',
                      ),
                      'TargetServiceName' => 
                      array (
                        'description' => '目标服务名称。',
                        'type' => 'string',
                        'example' => 'test',
                      ),
                      'Port' => 
                      array (
                        'description' => '目标服务端口。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '8790',
                      ),
                      'Percentage' => 
                      array (
                        'description' => '流量复制比例（%），取值0-100。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '90',
                      ),
                      'Status' => 
                      array (
                        'description' => '开启状态，取值：

- on：开启
- off：关闭',
                        'type' => 'string',
                        'example' => 'on',
                      ),
                    ),
                  ),
                  'EnableWaf' => 
                  array (
                    'description' => '是否开启Waf。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'AhasStatus' => 
                  array (
                    'description' => 'Ahas状态。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Fallback' => 
                  array (
                    'description' => '是否开启Fallback服务。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'FallbackServices' => 
                  array (
                    'description' => 'Fallback服务。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ServiceId' => 
                        array (
                          'description' => '服务ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'ServiceName' => 
                        array (
                          'description' => '服务名称。',
                          'type' => 'string',
                          'example' => 'name',
                        ),
                        'Percent' => 
                        array (
                          'description' => '权重百分比。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '80',
                        ),
                        'Version' => 
                        array (
                          'description' => '服务版本。',
                          'type' => 'string',
                          'example' => 'v1',
                        ),
                        'Name' => 
                        array (
                          'description' => '名称。',
                          'type' => 'string',
                          'example' => 'name',
                        ),
                        'SourceType' => 
                        array (
                          'description' => '来源类型。',
                          'type' => 'string',
                          'example' => 'MSE',
                        ),
                        'Namespace' => 
                        array (
                          'description' => '服务所在命名空间。',
                          'type' => 'string',
                          'example' => 'namespace',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '服务分组名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'AgreementType' => 
                        array (
                          'description' => '协议类型。',
                          'type' => 'string',
                          'example' => 'DUBBO',
                        ),
                        'ServicePort' => 
                        array (
                          'description' => '服务端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '8848',
                        ),
                      ),
                    ),
                  ),
                  'Policies' => 
                  array (
                    'description' => '路由策略Json字符串。',
                    'type' => 'string',
                    'example' => '{
      "CORS": "{\\"allowMethods\\":\\"GET,POST,PUT,DELETE,HEAD,OPTIONS,PATCH\\",\\"allowHeaders\\":\\"*\\",\\"exposeHeaders\\":\\"*\\",\\"unitNum\\":12,\\"allowCredentials\\":true,\\"status\\":\\"off\\",\\"allowOrigins\\":\\"*\\",\\"timeUnit\\":\\"h\\"}",
      "Timeout": "{\\"unitNum\\":10,\\"timeUnit\\":\\"s\\",\\"status\\":\\"off\\"}",
      "Retry": "{\\"attempts\\":2,\\"retryOn\\":[\\"5xx\\"],\\"status\\":\\"off\\"}",
      "HTTPRewrite": "{\\"pathType\\":\\"EQUAL\\",\\"path\\":\\"/o\\",\\"status\\":\\"off\\"}",
      "Waf": "{\\"enabled\\":false}",
      "HeaderOp": "{\\"status\\":\\"off\\",\\"headerOpItems\\":[{\\"directionType\\":\\"Request\\",\\"opType\\":\\"Add\\",\\"key\\":\\"kkk\\",\\"value\\":\\"ll\\"}]}"
}',
                  ),
                  'Description' => 
                  array (
                    'title' => '路由描述',
                    'description' => '路由描述',
                    'type' => 'string',
                    'example' => 'a route for xxx',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"FDF2D16C-5D28-5FAA-A56B-30BDE3559880\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 1050,\\n    \\"Name\\": \\"test\\",\\n    \\"GatewayUniqueId\\": \\"gw-7ea3da97b96543e19f6c597c****\\",\\n    \\"GatewayId\\": 1,\\n    \\"DefaultServiceId\\": 3,\\n    \\"DefaultServiceName\\": \\"test\\",\\n    \\"Status\\": 0,\\n    \\"GmtCreate\\": \\"2022-01-07 18:07:57\\",\\n    \\"GmtModified\\": \\"2022-01-07T10:07:57.000+0000\\",\\n    \\"RouteOrder\\": 1,\\n    \\"Predicates\\": \\"{}\\",\\n    \\"RoutePredicates\\": {\\n      \\"PathPredicates\\": {\\n        \\"Path\\": \\"/api\\",\\n        \\"Type\\": \\"PRE\\",\\n        \\"IgnoreCase\\": true\\n      },\\n      \\"MethodPredicates\\": [\\n        \\"GET\\"\\n      ],\\n      \\"HeaderPredicates\\": [\\n        {\\n          \\"Key\\": \\"id\\",\\n          \\"Value\\": \\"200\\",\\n          \\"Type\\": \\"PRE\\"\\n        }\\n      ],\\n      \\"QueryPredicates\\": [\\n        {\\n          \\"Key\\": \\"userid\\",\\n          \\"Value\\": \\"test\\",\\n          \\"Type\\": \\"PRE\\"\\n        }\\n      ]\\n    },\\n    \\"DomainId\\": 235,\\n    \\"DomainName\\": \\"123.com\\",\\n    \\"Services\\": \\"[{\\\\\\\\\\\\\\"Percent\\\\\\\\\\\\\\":100,\\\\\\\\\\\\\\"ServiceId\\\\\\\\\\\\\\":126}]\\",\\n    \\"RouteServices\\": [\\n      {\\n        \\"ServiceId\\": 782,\\n        \\"ServiceName\\": \\"xkc-crm\\",\\n        \\"Percent\\": 80,\\n        \\"Version\\": \\"v1\\",\\n        \\"Name\\": \\"dubbo4\\",\\n        \\"SourceType\\": \\"MSE\\",\\n        \\"Namespace\\": \\"acs_ecs_dashboard\\",\\n        \\"GroupName\\": \\"api\\",\\n        \\"AgreementType\\": \\"DUBBO\\",\\n        \\"HttpDubboTranscoder\\": {\\n          \\"DubboServiceName\\": \\"org.apache.dubbo.samples.basic.api.DemoService\\\\n\\",\\n          \\"DubboServiceVersion\\": \\"0.0.0\\",\\n          \\"MothedMapList\\": [\\n            {\\n              \\"DubboMothedName\\": \\"sayHello\\",\\n              \\"HttpMothed\\": \\"ALL_GET\\",\\n              \\"Mothedpath\\": \\"/mytestzbk/sayhello\\",\\n              \\"PassThroughAllHeaders\\": \\"PASS_NOT\\",\\n              \\"PassThroughList\\": [\\n                \\"x-forward\\"\\n              ],\\n              \\"ParamMapsList\\": [\\n                {\\n                  \\"ExtractKeySpec\\": \\"ALL_QUERY_PARAMETER\\",\\n                  \\"ExtractKey\\": \\"name\\",\\n                  \\"MappingType\\": \\"java.lang.String\\"\\n                }\\n              ]\\n            }\\n          ],\\n          \\"DubboServiceGroup\\": \\"service group\\"\\n        },\\n        \\"ServicePort\\": 20880,\\n        \\"HealthStatus\\": \\"Health\\",\\n        \\"UnhealthyEndpoints\\": [\\n          \\"192.168.1.2\\"\\n        ]\\n      }\\n    ],\\n    \\"HTTPRewrite\\": {\\n      \\"Status\\": \\"off\\",\\n      \\"Path\\": \\"/test/client\\",\\n      \\"Host\\": \\"aliyuncs.com\\",\\n      \\"PathType\\": \\"PRE\\",\\n      \\"Pattern\\": \\"/test\\",\\n      \\"Substitution\\": \\"test\\"\\n    },\\n    \\"HeaderOp\\": {\\n      \\"Status\\": \\"off\\",\\n      \\"HeaderOpItems\\": [\\n        {\\n          \\"DirectionType\\": \\"Response\\",\\n          \\"OpType\\": \\"Add\\",\\n          \\"Key\\": \\"debug\\",\\n          \\"Value\\": \\"test\\"\\n        }\\n      ]\\n    },\\n    \\"DestinationType\\": \\"Single\\",\\n    \\"DirectResponse\\": {\\n      \\"Code\\": 200,\\n      \\"Body\\": \\"{}\\"\\n    },\\n    \\"Cors\\": {\\n      \\"Status\\": \\"off\\",\\n      \\"AllowOrigins\\": \\"*\\",\\n      \\"AllowMethods\\": \\"GET,POST,PUT,DELETE,HEAD,OPTIONS,PATCH\\",\\n      \\"AllowHeaders\\": \\"*\\",\\n      \\"ExposeHeaders\\": \\"*\\",\\n      \\"TimeUnit\\": \\"h\\",\\n      \\"UnitNum\\": 24,\\n      \\"AllowCredentials\\": true\\n    },\\n    \\"Timeout\\": {\\n      \\"UnitNum\\": 10,\\n      \\"TimeUnit\\": \\"s\\",\\n      \\"Status\\": \\"off\\"\\n    },\\n    \\"Retry\\": {\\n      \\"Attempts\\": 1,\\n      \\"RetryOn\\": [\\n        \\"5xx\\"\\n      ],\\n      \\"HttpCodes\\": [\\n        \\"500\\"\\n      ],\\n      \\"Status\\": \\"on\\"\\n    },\\n    \\"DomainIdList\\": [\\n      1\\n    ],\\n    \\"DomainNameList\\": [\\n      \\"test.com\\"\\n    ],\\n    \\"Redirect\\": {\\n      \\"Code\\": 200,\\n      \\"Host\\": \\"16\\",\\n      \\"Path\\": \\"10111\\"\\n    },\\n    \\"FlowMirror\\": {\\n      \\"TargetServiceId\\": 21,\\n      \\"TargetServiceName\\": \\"test\\",\\n      \\"Port\\": 8790,\\n      \\"Percentage\\": 90,\\n      \\"Status\\": \\"on\\"\\n    },\\n    \\"EnableWaf\\": true,\\n    \\"AhasStatus\\": 1,\\n    \\"Fallback\\": true,\\n    \\"FallbackServices\\": [\\n      {\\n        \\"ServiceId\\": 1,\\n        \\"ServiceName\\": \\"name\\",\\n        \\"Percent\\": 80,\\n        \\"Version\\": \\"v1\\",\\n        \\"Name\\": \\"name\\",\\n        \\"SourceType\\": \\"MSE\\",\\n        \\"Namespace\\": \\"namespace\\",\\n        \\"GroupName\\": \\"test\\",\\n        \\"AgreementType\\": \\"DUBBO\\",\\n        \\"ServicePort\\": 8848\\n      }\\n    ],\\n    \\"Policies\\": \\"{\\\\n      \\\\\\"CORS\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"allowMethods\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"GET,POST,PUT,DELETE,HEAD,OPTIONS,PATCH\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"allowHeaders\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"exposeHeaders\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"unitNum\\\\\\\\\\\\\\":12,\\\\\\\\\\\\\\"allowCredentials\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"off\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"allowOrigins\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"*\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"timeUnit\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"h\\\\\\\\\\\\\\"}\\\\\\",\\\\n      \\\\\\"Timeout\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"unitNum\\\\\\\\\\\\\\":10,\\\\\\\\\\\\\\"timeUnit\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"s\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"off\\\\\\\\\\\\\\"}\\\\\\",\\\\n      \\\\\\"Retry\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"attempts\\\\\\\\\\\\\\":2,\\\\\\\\\\\\\\"retryOn\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\"5xx\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"off\\\\\\\\\\\\\\"}\\\\\\",\\\\n      \\\\\\"HTTPRewrite\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"pathType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"EQUAL\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"/o\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"off\\\\\\\\\\\\\\"}\\\\\\",\\\\n      \\\\\\"Waf\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"enabled\\\\\\\\\\\\\\":false}\\\\\\",\\\\n      \\\\\\"HeaderOp\\\\\\": \\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"off\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"headerOpItems\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"directionType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Request\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"opType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Add\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"kkk\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"ll\\\\\\\\\\\\\\"}]}\\\\\\"\\\\n}\\",\\n    \\"Description\\": \\"a route for xxx\\"\\n  }\\n}","type":"json"}]',
      'title' => '查询网关路由详情',
    ),
    'ListGatewayRoute' => 
    array (
      'summary' => '查询网关路由列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页展示实例数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'OrderItem',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序属性。',
            'type' => 'string',
            'required' => false,
            'example' => 'GmtCreate',
          ),
        ),
        3 => 
        array (
          'name' => 'DescSort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序。该字段目前不可用，下线中。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'FilterParams',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '过滤条件，格式为{"key1":"value1"}。',
            'type' => 'object',
            'properties' => 
            array (
              'GatewayId' => 
              array (
                'description' => '网关ID。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '81',
              ),
              'Name' => 
              array (
                'description' => '路由名称。',
                'type' => 'string',
                'required' => false,
                'example' => 'test',
              ),
              'Status' => 
              array (
                'description' => '路由状态：

- 未发布：0
- 发布中：2
- 已发布：3
- 编辑中(有更新未发布)：4
- 下线中：5
- 不可用：6',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '3',
              ),
              'DefaultServiceId' => 
              array (
                'title' => '默认服务ID（已废弃）',
                'description' => '缺省服务id。',
                'type' => 'integer',
                'format' => 'int64',
                'deprecated' => true,
                'required' => false,
                'example' => '1',
              ),
              'RouteOrder' => 
              array (
                'description' => '顺序',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '1',
              ),
              'DomainId' => 
              array (
                'description' => '域名id。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '284',
              ),
              'GatewayUniqueId' => 
              array (
                'description' => '网关唯一标识ID。',
                'type' => 'string',
                'required' => true,
                'example' => 'gw-30a0106924c94bca8712ec4e79fc5acc',
              ),
              'DomainName' => 
              array (
                'description' => '关联域名',
                'type' => 'string',
                'required' => false,
                'example' => '*.alites.com',
              ),
              'Path' => 
              array (
                'title' => '按路由路径模糊搜索',
                'description' => '路由路径。',
                'type' => 'string',
                'required' => false,
                'example' => '/test',
              ),
            ),
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '83F02EAB-ECDF-55C6-B332-8649E5E7AF2C',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Code' => 
              array (
                'description' => '代码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'TotalSize' => 
                  array (
                    'description' => '总条数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '36',
                  ),
                  'PageNumber' => 
                  array (
                    'description' => '页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '11',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '分页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Result' => 
                  array (
                    'description' => '数据结构。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '路由ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '47',
                        ),
                        'Name' => 
                        array (
                          'description' => '名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关唯一标识。',
                          'type' => 'string',
                          'example' => 'gw-cf0e7f52ecc7429dbc7ba4d5e3656100',
                        ),
                        'GatewayId' => 
                        array (
                          'description' => '网关ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '496',
                        ),
                        'Status' => 
                        array (
                          'description' => '状态。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'RouteOrder' => 
                        array (
                          'description' => '顺序',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'DefaultServiceName' => 
                        array (
                          'description' => '默认服务名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'DefaultServiceId' => 
                        array (
                          'description' => '默认服务id。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'Predicates' => 
                        array (
                          'description' => '匹配规则',
                          'type' => 'string',
                          'example' => '{\\"PathPredicates\\":{\\"Path\\":\\"/rpc/compute \\",\\"Type\\":\\"PRE\\",\\"IgnoreCase\\":true}}',
                        ),
                        'RoutePredicates' => 
                        array (
                          'description' => '匹配规则',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PathPredicates' => 
                            array (
                              'description' => '路由Path匹配。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Path' => 
                                array (
                                  'description' => '节点路径。',
                                  'type' => 'string',
                                  'example' => '/getIp',
                                ),
                                'Type' => 
                                array (
                                  'description' => '匹配类型。',
                                  'type' => 'string',
                                  'example' => 'PRE',
                                ),
                                'IgnoreCase' => 
                                array (
                                  'description' => '忽略大小写',
                                  'type' => 'boolean',
                                  'example' => 'true',
                                ),
                              ),
                            ),
                            'MethodPredicates' => 
                            array (
                              'description' => 'HTTP方法匹配',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '方法',
                                'type' => 'string',
                                'example' => 'GET',
                              ),
                            ),
                            'HeaderPredicates' => 
                            array (
                              'description' => 'Header匹配',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'Header列表',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => 'Header KEY ',
                                    'type' => 'string',
                                    'example' => 'userid',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '匹配值',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                  'Type' => 
                                  array (
                                    'description' => '匹配类型',
                                    'type' => 'string',
                                    'example' => 'PRE',
                                  ),
                                ),
                              ),
                            ),
                            'QueryPredicates' => 
                            array (
                              'description' => '参数匹配',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '参数列表',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '参数名称',
                                    'type' => 'string',
                                    'example' => 'userid',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '匹配值',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                  'Type' => 
                                  array (
                                    'description' => '匹配类型',
                                    'type' => 'string',
                                    'example' => 'PRE',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2022-01-25T07:14:01.817+0000',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '修改时间',
                          'type' => 'string',
                          'example' => '2022-01-07 18:07:57',
                        ),
                        'Services' => 
                        array (
                          'description' => '服务。',
                          'type' => 'string',
                          'example' => '[]',
                        ),
                        'RouteServices' => 
                        array (
                          'description' => '服务。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '服务列表',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'ServiceId' => 
                              array (
                                'description' => '服务ID',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1563',
                              ),
                              'ServiceName' => 
                              array (
                                'description' => '服务名称。',
                                'type' => 'string',
                                'example' => 'hu',
                              ),
                              'Percent' => 
                              array (
                                'description' => '权重百分比',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '11',
                              ),
                              'Version' => 
                              array (
                                'description' => '服务版本。',
                                'type' => 'string',
                                'example' => 'v1',
                              ),
                              'Name' => 
                              array (
                                'description' => '名称。',
                                'type' => 'string',
                                'example' => 'test',
                              ),
                              'SourceType' => 
                              array (
                                'description' => '来源类型',
                                'type' => 'string',
                                'example' => 'MSE',
                              ),
                              'Namespace' => 
                              array (
                                'description' => '命名空间。',
                                'type' => 'string',
                                'example' => 'default',
                              ),
                              'GroupName' => 
                              array (
                                'description' => '服务组名称。',
                                'type' => 'string',
                                'example' => 'api',
                              ),
                              'AgreementType' => 
                              array (
                                'description' => '协议类型。',
                                'type' => 'string',
                                'example' => 'DUBBO',
                              ),
                              'HttpDubboTranscoder' => 
                              array (
                                'description' => 'Dubbo协议转换体。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'DubboServiceName' => 
                                  array (
                                    'description' => 'Dubbo服务名称。',
                                    'type' => 'string',
                                    'example' => 'org.apache.dubbo.samples.basic.api.DemoService',
                                  ),
                                  'DubboServiceVersion' => 
                                  array (
                                    'description' => 'Dubbo服务版本。',
                                    'type' => 'string',
                                    'example' => '0.0.0',
                                  ),
                                  'MothedMapList' => 
                                  array (
                                    'description' => 'Dubbo转发规则列表。',
                                    'type' => 'array',
                                    'items' => 
                                    array (
                                      'description' => '方法映射体。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'DubboMothedName' => 
                                        array (
                                          'description' => 'Dubbo方法名。',
                                          'type' => 'string',
                                          'example' => 'sayHello',
                                        ),
                                        'HttpMothed' => 
                                        array (
                                          'description' => 'Http方法。
> 支持http方法参数值。
> - ALL_GET
> - ALL_POST
> - ALL_PUT
> - ALL_DELETE
> - ALL_PATCH
',
                                          'type' => 'string',
                                          'example' => 'ALL_GET',
                                        ),
                                        'Mothedpath' => 
                                        array (
                                          'description' => '方法匹配路径。',
                                          'type' => 'string',
                                          'example' => '/mytestzbk/sayhello',
                                        ),
                                        'PassThroughAllHeaders' => 
                                        array (
                                          'description' => 'Header透传类型。
> 透传类型枚举值。
> - 透传所有：PASS_ALL
> - 不透传：PASS_NOT
> - 指定参数：PASS_ASSIGN',
                                          'type' => 'string',
                                          'example' => 'PASS_NOT',
                                        ),
                                        'PassThroughList' => 
                                        array (
                                          'description' => '指定透传Header列表。',
                                          'type' => 'array',
                                          'items' => 
                                          array (
                                            'description' => '指定Header透传值。',
                                            'type' => 'string',
                                            'example' => 'x-forward',
                                          ),
                                        ),
                                        'ParamMapsList' => 
                                        array (
                                          'description' => '参数映射列表。',
                                          'type' => 'array',
                                          'items' => 
                                          array (
                                            'description' => '参数映射体。',
                                            'type' => 'object',
                                            'properties' => 
                                            array (
                                              'ExtractKeySpec' => 
                                              array (
                                                'description' => '入参位置。
> 入参位置枚举值。
> - 请求参数：`ALL_QUERY_PARAMETER`
> - 请求头：`ALL_HEADER`
> - 请求路径：`ALL_PATH`
> - 请求体：`ALL_BODY`
',
                                                'type' => 'string',
                                                'example' => 'ALL_QUERY_PARAMETER',
                                              ),
                                              'ExtractKey' => 
                                              array (
                                                'description' => '入参位提取Key。',
                                                'type' => 'string',
                                                'example' => 'name',
                                              ),
                                              'MappingType' => 
                                              array (
                                                'description' => '后端参数类型。',
                                                'type' => 'string',
                                                'example' => 'java.lang.String',
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                  'DubboServiceGroup' => 
                                  array (
                                    'description' => 'Dubbo服务组。',
                                    'type' => 'string',
                                    'example' => 'service group',
                                  ),
                                ),
                              ),
                              'ServicePort' => 
                              array (
                                'description' => '服务端口。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '20880',
                              ),
                              'HealthStatus' => 
                              array (
                                'title' => '健康状态

- Health

- Unhealthy

- Checking

- Unknown',
                                'description' => '健康状态

- Health

- Unhealthy

- Checking

- Unknown',
                                'type' => 'string',
                                'example' => 'Health',
                              ),
                              'UnhealthyEndpoints' => 
                              array (
                                'title' => '非健康Endpoint列表',
                                'description' => '非健康Endpoint列表',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'title' => '非健康Endpoint',
                                  'description' => '非健康Endpoint',
                                  'type' => 'string',
                                  'example' => '192.168.1.2',
                                ),
                              ),
                            ),
                          ),
                        ),
                        'DomainId' => 
                        array (
                          'description' => '域名ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '265',
                        ),
                        'DomainName' => 
                        array (
                          'description' => '域名。',
                          'type' => 'string',
                          'example' => 'y.com',
                        ),
                        'DestinationType' => 
                        array (
                          'description' => '目标类型。',
                          'type' => 'string',
                          'example' => 'Single',
                        ),
                        'DirectResponse' => 
                        array (
                          'description' => 'Mock配置',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Code' => 
                            array (
                              'description' => '响应码。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '200',
                            ),
                            'Body' => 
                            array (
                              'description' => 'Mock返回值',
                              'type' => 'string',
                              'example' => 'hello',
                            ),
                          ),
                        ),
                        'DomainIdList' => 
                        array (
                          'description' => '域名列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '域名ID',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '123',
                          ),
                        ),
                        'DomainNameList' => 
                        array (
                          'description' => '域名列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '域名',
                            'type' => 'string',
                            'example' => 'test.com',
                          ),
                        ),
                        'Redirect' => 
                        array (
                          'description' => '重定向',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Code' => 
                            array (
                              'description' => '响应码。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '200',
                            ),
                            'Host' => 
                            array (
                              'description' => '重定向主机名',
                              'type' => 'string',
                              'example' => 'test.com',
                            ),
                            'Path' => 
                            array (
                              'description' => '路径。',
                              'type' => 'string',
                              'example' => '/test',
                            ),
                          ),
                        ),
                        'Type' => 
                        array (
                          'description' => '路由类型',
                          'type' => 'string',
                          'example' => 'Op',
                        ),
                        'Comment' => 
                        array (
                          'description' => '路由备注（ingress）',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '状态。',
                              'type' => 'string',
                              'example' => 'error',
                            ),
                          ),
                        ),
                        'EnableWaf' => 
                        array (
                          'description' => '是否开启waf',
                          'type' => 'string',
                          'example' => 'false',
                        ),
                        'Fallback' => 
                        array (
                          'description' => '是否开启Fallback服务。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'FallbackServices' => 
                        array (
                          'description' => 'Fallback服务。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'ServiceId' => 
                              array (
                                'description' => '服务ID。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '353
',
                              ),
                              'ServiceName' => 
                              array (
                                'description' => '服务名称。',
                                'type' => 'string',
                                'example' => 'service name',
                              ),
                              'Percent' => 
                              array (
                                'description' => '权重百分比。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '100',
                              ),
                              'Version' => 
                              array (
                                'description' => '服务版本。',
                                'type' => 'string',
                                'example' => 'v1',
                              ),
                              'Name' => 
                              array (
                                'description' => '名称。',
                                'type' => 'string',
                                'example' => 'name',
                              ),
                              'SourceType' => 
                              array (
                                'description' => '来源类型。',
                                'type' => 'string',
                                'example' => 'MSE
',
                              ),
                              'Namespace' => 
                              array (
                                'description' => '服务所在命名空间。',
                                'type' => 'string',
                                'example' => 'Namespace',
                              ),
                              'GroupName' => 
                              array (
                                'description' => '服务分组名称。',
                                'type' => 'string',
                                'example' => 'test',
                              ),
                              'AgreementType' => 
                              array (
                                'description' => '协议类型。',
                                'type' => 'string',
                                'example' => 'DUBBO',
                              ),
                              'ServicePort' => 
                              array (
                                'description' => '服务端口。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '8848',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"83F02EAB-ECDF-55C6-B332-8649E5E7AF2C\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TotalSize\\": 36,\\n    \\"PageNumber\\": 11,\\n    \\"PageSize\\": 10,\\n    \\"Result\\": [\\n      {\\n        \\"Id\\": 47,\\n        \\"Name\\": \\"test\\",\\n        \\"GatewayUniqueId\\": \\"gw-cf0e7f52ecc7429dbc7ba4d5e3656100\\",\\n        \\"GatewayId\\": 496,\\n        \\"Status\\": 2,\\n        \\"RouteOrder\\": 1,\\n        \\"DefaultServiceName\\": \\"test\\",\\n        \\"DefaultServiceId\\": 1,\\n        \\"Predicates\\": \\"{\\\\\\\\\\\\\\"PathPredicates\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"Path\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"/rpc/compute \\\\\\\\\\\\\\",\\\\\\\\\\\\\\"Type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"PRE\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"IgnoreCase\\\\\\\\\\\\\\":true}}\\",\\n        \\"RoutePredicates\\": {\\n          \\"PathPredicates\\": {\\n            \\"Path\\": \\"/getIp\\",\\n            \\"Type\\": \\"PRE\\",\\n            \\"IgnoreCase\\": true\\n          },\\n          \\"MethodPredicates\\": [\\n            \\"GET\\"\\n          ],\\n          \\"HeaderPredicates\\": [\\n            {\\n              \\"Key\\": \\"userid\\",\\n              \\"Value\\": \\"test\\",\\n              \\"Type\\": \\"PRE\\"\\n            }\\n          ],\\n          \\"QueryPredicates\\": [\\n            {\\n              \\"Key\\": \\"userid\\",\\n              \\"Value\\": \\"test\\",\\n              \\"Type\\": \\"PRE\\"\\n            }\\n          ]\\n        },\\n        \\"GmtCreate\\": \\"2022-01-25T07:14:01.817+0000\\",\\n        \\"GmtModified\\": \\"2022-01-07 18:07:57\\",\\n        \\"Services\\": \\"[]\\",\\n        \\"RouteServices\\": [\\n          {\\n            \\"ServiceId\\": 1563,\\n            \\"ServiceName\\": \\"hu\\",\\n            \\"Percent\\": 11,\\n            \\"Version\\": \\"v1\\",\\n            \\"Name\\": \\"test\\",\\n            \\"SourceType\\": \\"MSE\\",\\n            \\"Namespace\\": \\"default\\",\\n            \\"GroupName\\": \\"api\\",\\n            \\"AgreementType\\": \\"DUBBO\\",\\n            \\"HttpDubboTranscoder\\": {\\n              \\"DubboServiceName\\": \\"org.apache.dubbo.samples.basic.api.DemoService\\",\\n              \\"DubboServiceVersion\\": \\"0.0.0\\",\\n              \\"MothedMapList\\": [\\n                {\\n                  \\"DubboMothedName\\": \\"sayHello\\",\\n                  \\"HttpMothed\\": \\"ALL_GET\\",\\n                  \\"Mothedpath\\": \\"/mytestzbk/sayhello\\",\\n                  \\"PassThroughAllHeaders\\": \\"PASS_NOT\\",\\n                  \\"PassThroughList\\": [\\n                    \\"x-forward\\"\\n                  ],\\n                  \\"ParamMapsList\\": [\\n                    {\\n                      \\"ExtractKeySpec\\": \\"ALL_QUERY_PARAMETER\\",\\n                      \\"ExtractKey\\": \\"name\\",\\n                      \\"MappingType\\": \\"java.lang.String\\"\\n                    }\\n                  ]\\n                }\\n              ],\\n              \\"DubboServiceGroup\\": \\"service group\\"\\n            },\\n            \\"ServicePort\\": 20880,\\n            \\"HealthStatus\\": \\"Health\\",\\n            \\"UnhealthyEndpoints\\": [\\n              \\"192.168.1.2\\"\\n            ]\\n          }\\n        ],\\n        \\"DomainId\\": 265,\\n        \\"DomainName\\": \\"y.com\\",\\n        \\"DestinationType\\": \\"Single\\",\\n        \\"DirectResponse\\": {\\n          \\"Code\\": 200,\\n          \\"Body\\": \\"hello\\"\\n        },\\n        \\"DomainIdList\\": [\\n          123\\n        ],\\n        \\"DomainNameList\\": [\\n          \\"test.com\\"\\n        ],\\n        \\"Redirect\\": {\\n          \\"Code\\": 200,\\n          \\"Host\\": \\"test.com\\",\\n          \\"Path\\": \\"/test\\"\\n        },\\n        \\"Type\\": \\"Op\\",\\n        \\"Comment\\": {\\n          \\"Status\\": \\"error\\"\\n        },\\n        \\"EnableWaf\\": \\"false\\",\\n        \\"Fallback\\": true,\\n        \\"FallbackServices\\": [\\n          {\\n            \\"ServiceId\\": 353,\\n            \\"ServiceName\\": \\"service name\\",\\n            \\"Percent\\": 100,\\n            \\"Version\\": \\"v1\\",\\n            \\"Name\\": \\"name\\",\\n            \\"SourceType\\": \\"MSE\\\\n\\",\\n            \\"Namespace\\": \\"Namespace\\",\\n            \\"GroupName\\": \\"test\\",\\n            \\"AgreementType\\": \\"DUBBO\\",\\n            \\"ServicePort\\": 8848\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '网关路由列表',
    ),
    'UpdateGatewayRouteWafStatus' => 
    array (
      'summary' => '更新路由waf状态。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '645',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-86575c0bc9f04ecfbacb92b8e392****',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
        3 => 
        array (
          'name' => 'EnableWaf',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启WAF。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'ID of the Request。',
                'type' => 'string',
                'example' => '7466566F-F30F-4A29-965D-3E0AF21D****',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Code' => 
              array (
                'description' => '状态码。说明200表示成功。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '路由ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12',
                  ),
                  'Name' => 
                  array (
                    'description' => '消息路由名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一ID。',
                    'type' => 'string',
                    'example' => 'gw-7ea3da97b96543e19f6c597cd4a9****',
                  ),
                  'GatewayId' => 
                  array (
                    'description' => '网关ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '102',
                  ),
                  'DefaultServiceId' => 
                  array (
                    'description' => '默认服务ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'DefaultServiceName' => 
                  array (
                    'description' => '默认服务名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Status' => 
                  array (
                    'description' => '路由状态。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2022-01-26T09:52:41.000+0000',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '修改日期。

',
                    'type' => 'string',
                    'example' => '2022-02-24T06:08:29.230+0000',
                  ),
                  'RouteOrder' => 
                  array (
                    'description' => '路由顺序。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Predicates' => 
                  array (
                    'description' => '匹配规则。',
                    'type' => 'string',
                    'example' => '{\\"PathPredicates\\":{\\"Path\\":\\"/metas\\",\\"Type\\":\\"PRE\\",\\"IgnoreCase\\":false}}',
                  ),
                  'RoutePredicates' => 
                  array (
                    'description' => '路由匹配。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PathPredicates' => 
                      array (
                        'description' => '路由匹配。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Path' => 
                          array (
                            'description' => '路径。',
                            'type' => 'string',
                            'example' => '/zookeeper/mmgw/unlogined/common.getBu',
                          ),
                          'Type' => 
                          array (
                            'description' => '匹配类型。',
                            'type' => 'string',
                            'example' => 'PRE',
                          ),
                          'IgnoreCase' => 
                          array (
                            'description' => '是否忽略大小写。',
                            'type' => 'boolean',
                            'example' => 'true',
                          ),
                        ),
                      ),
                      'MethodPredicates' => 
                      array (
                        'description' => '匹配方法。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '方法。',
                          'type' => 'string',
                          'example' => 'GET',
                        ),
                      ),
                      'HeaderPredicates' => 
                      array (
                        'description' => '请求头匹配规则。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '请求头。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Key' => 
                            array (
                              'description' => '请求头KEY。',
                              'type' => 'string',
                              'example' => 'alibo',
                            ),
                            'Value' => 
                            array (
                              'description' => '值。',
                              'type' => 'string',
                              'example' => '200',
                            ),
                            'Type' => 
                            array (
                              'description' => '匹配类型。',
                              'type' => 'string',
                              'example' => 'PRE',
                            ),
                          ),
                        ),
                      ),
                      'QueryPredicates' => 
                      array (
                        'description' => '参数匹配规则。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '参数。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Key' => 
                            array (
                              'description' => '参数名称。',
                              'type' => 'string',
                              'example' => 'instanceId',
                            ),
                            'Value' => 
                            array (
                              'description' => '匹配值。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'Type' => 
                            array (
                              'description' => '类型。',
                              'type' => 'string',
                              'example' => 'PRE',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'DomainId' => 
                  array (
                    'description' => '域名ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '235',
                  ),
                  'DomainName' => 
                  array (
                    'description' => '域名。',
                    'type' => 'string',
                    'example' => 'nbhamster.com',
                  ),
                  'Services' => 
                  array (
                    'description' => '服务。',
                    'type' => 'string',
                    'example' => '[{\\"Percent\\":100,\\"ServiceId\\":126}]',
                  ),
                  'RouteServices' => 
                  array (
                    'description' => '服务。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '服务。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ServiceId' => 
                        array (
                          'description' => '服务id。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '547',
                        ),
                        'ServiceName' => 
                        array (
                          'description' => '服务名称。',
                          'type' => 'string',
                          'example' => 'b-service',
                        ),
                        'Percent' => 
                        array (
                          'description' => '权重。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '80',
                        ),
                        'Version' => 
                        array (
                          'description' => '服务版本。',
                          'type' => 'string',
                          'example' => 'v1',
                        ),
                        'Name' => 
                        array (
                          'description' => '服务名称。',
                          'type' => 'string',
                          'example' => 'test-aixue-gray',
                        ),
                        'SourceType' => 
                        array (
                          'description' => '服务来源。',
                          'type' => 'string',
                          'example' => 'K8S',
                        ),
                        'Namespace' => 
                        array (
                          'description' => '命名空间。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '服务分组名称。',
                          'type' => 'string',
                          'example' => 'DEFAULT_GROUP',
                        ),
                      ),
                    ),
                  ),
                  'HTTPRewrite' => 
                  array (
                    'description' => '重写策略信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Status' => 
                      array (
                        'description' => 'HTTP状态。',
                        'type' => 'string',
                        'example' => 'off',
                      ),
                      'Path' => 
                      array (
                        'description' => 'HTTP请求路径。',
                        'type' => 'string',
                        'example' => '/test/client',
                      ),
                      'Host' => 
                      array (
                        'description' => '域名。',
                        'type' => 'string',
                        'example' => 'aliyuncs.com',
                      ),
                      'PathType' => 
                      array (
                        'description' => 'HTTP请求路径类型。',
                        'type' => 'string',
                        'example' => 'PRE',
                      ),
                      'Pattern' => 
                      array (
                        'description' => '匹配Pattern。',
                        'type' => 'string',
                        'example' => '/test',
                      ),
                      'Substitution' => 
                      array (
                        'description' => '替换。',
                        'type' => 'string',
                        'example' => 'test',
                      ),
                    ),
                  ),
                  'HeaderOp' => 
                  array (
                    'description' => 'Header设置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Status' => 
                      array (
                        'description' => '状态。',
                        'type' => 'string',
                        'example' => 'off',
                      ),
                      'HeaderOpItems' => 
                      array (
                        'description' => '设置策略。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '设置策略。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DirectionType' => 
                            array (
                              'description' => '请求或者响应。',
                              'type' => 'string',
                              'example' => 'Response',
                            ),
                            'OpType' => 
                            array (
                              'description' => '操作类型。',
                              'type' => 'string',
                              'example' => 'Add',
                            ),
                            'Key' => 
                            array (
                              'description' => 'Header Key。',
                              'type' => 'string',
                              'example' => 'debug',
                            ),
                            'Value' => 
                            array (
                              'description' => '设置值。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'DestinationType' => 
                  array (
                    'description' => '目标服务类型。',
                    'type' => 'string',
                    'example' => 'Single',
                  ),
                  'DirectResponse' => 
                  array (
                    'description' => 'Mock信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Code' => 
                      array (
                        'description' => '返回值。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '200',
                      ),
                      'Body' => 
                      array (
                        'description' => 'Mock返回值。',
                        'type' => 'string',
                        'example' => '[{\\"key\\":\\"h68d13466.sqa.eu95\\",\\"dims\\":\\"groupName=All}]',
                      ),
                    ),
                  ),
                  'Cors' => 
                  array (
                    'description' => '跨域配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Status' => 
                      array (
                        'description' => '状态。',
                        'type' => 'string',
                        'example' => 'off',
                      ),
                      'AllowOrigins' => 
                      array (
                        'description' => '跨域。',
                        'type' => 'string',
                        'example' => '*',
                      ),
                      'AllowMethods' => 
                      array (
                        'description' => '跨域方法。',
                        'type' => 'string',
                        'example' => 'GET,POST,PUT,DELETE,HEAD,OPTIONS,PATCH',
                      ),
                      'AllowHeaders' => 
                      array (
                        'description' => '跨域Header。',
                        'type' => 'string',
                        'example' => '*',
                      ),
                      'ExposeHeaders' => 
                      array (
                        'description' => '响应头。',
                        'type' => 'string',
                        'example' => '*',
                      ),
                      'TimeUnit' => 
                      array (
                        'description' => '时间单位。',
                        'type' => 'string',
                        'example' => 's',
                      ),
                      'UnitNum' => 
                      array (
                        'description' => '时间数。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1',
                      ),
                      'AllowCredentials' => 
                      array (
                        'description' => '允许携带凭证。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                    ),
                  ),
                  'Timeout' => 
                  array (
                    'description' => '超时配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'UnitNum' => 
                      array (
                        'description' => '时间数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '10',
                      ),
                      'TimeUnit' => 
                      array (
                        'description' => '时间单位。',
                        'type' => 'string',
                        'example' => 's',
                      ),
                      'Status' => 
                      array (
                        'description' => '状态。',
                        'type' => 'string',
                        'example' => 'off',
                      ),
                    ),
                  ),
                  'Retry' => 
                  array (
                    'description' => '重试配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Attempts' => 
                      array (
                        'description' => '给定请求允许的重试次数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'RetryOn' => 
                      array (
                        'description' => '重试条件。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '重试条件。',
                          'type' => 'string',
                          'example' => '5xx',
                        ),
                      ),
                      'HttpCodes' => 
                      array (
                        'description' => 'HTTP状态码。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => 'HTTP状态码。',
                          'type' => 'string',
                          'example' => '500',
                        ),
                      ),
                      'Status' => 
                      array (
                        'description' => '重试状态。',
                        'type' => 'string',
                        'example' => 'on',
                      ),
                    ),
                  ),
                  'DomainIdList' => 
                  array (
                    'description' => '域名ID列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '域名ID列表。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                  ),
                  'DomainNameList' => 
                  array (
                    'description' => '域名列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '域名列表。',
                      'type' => 'string',
                      'example' => 'test.com',
                    ),
                  ),
                  'Redirect' => 
                  array (
                    'description' => '重定向配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Code' => 
                      array (
                        'description' => '响应码。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '200',
                      ),
                      'Host' => 
                      array (
                        'description' => '主机。',
                        'type' => 'string',
                        'example' => 'ww.al.c',
                      ),
                      'Path' => 
                      array (
                        'description' => '路径。',
                        'type' => 'string',
                        'example' => '/',
                      ),
                    ),
                  ),
                  'EnableWaf' => 
                  array (
                    'description' => '是否开启WAF。',
                    'type' => 'boolean',
                    'example' => '0',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"7466566F-F30F-4A29-965D-3E0AF21D****\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Id\\": 12,\\n    \\"Name\\": \\"test\\",\\n    \\"GatewayUniqueId\\": \\"gw-7ea3da97b96543e19f6c597cd4a9****\\",\\n    \\"GatewayId\\": 102,\\n    \\"DefaultServiceId\\": 1,\\n    \\"DefaultServiceName\\": \\"test\\",\\n    \\"Status\\": 1,\\n    \\"GmtCreate\\": \\"2022-01-26T09:52:41.000+0000\\",\\n    \\"GmtModified\\": \\"2022-02-24T06:08:29.230+0000\\",\\n    \\"RouteOrder\\": 1,\\n    \\"Predicates\\": \\"{\\\\\\\\\\\\\\"PathPredicates\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"Path\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"/metas\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"Type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"PRE\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"IgnoreCase\\\\\\\\\\\\\\":false}}\\",\\n    \\"RoutePredicates\\": {\\n      \\"PathPredicates\\": {\\n        \\"Path\\": \\"/zookeeper/mmgw/unlogined/common.getBu\\",\\n        \\"Type\\": \\"PRE\\",\\n        \\"IgnoreCase\\": true\\n      },\\n      \\"MethodPredicates\\": [\\n        \\"GET\\"\\n      ],\\n      \\"HeaderPredicates\\": [\\n        {\\n          \\"Key\\": \\"alibo\\",\\n          \\"Value\\": \\"200\\",\\n          \\"Type\\": \\"PRE\\"\\n        }\\n      ],\\n      \\"QueryPredicates\\": [\\n        {\\n          \\"Key\\": \\"instanceId\\",\\n          \\"Value\\": \\"test\\",\\n          \\"Type\\": \\"PRE\\"\\n        }\\n      ]\\n    },\\n    \\"DomainId\\": 235,\\n    \\"DomainName\\": \\"nbhamster.com\\",\\n    \\"Services\\": \\"[{\\\\\\\\\\\\\\"Percent\\\\\\\\\\\\\\":100,\\\\\\\\\\\\\\"ServiceId\\\\\\\\\\\\\\":126}]\\",\\n    \\"RouteServices\\": [\\n      {\\n        \\"ServiceId\\": 547,\\n        \\"ServiceName\\": \\"b-service\\",\\n        \\"Percent\\": 80,\\n        \\"Version\\": \\"v1\\",\\n        \\"Name\\": \\"test-aixue-gray\\",\\n        \\"SourceType\\": \\"K8S\\",\\n        \\"Namespace\\": \\"default\\",\\n        \\"GroupName\\": \\"DEFAULT_GROUP\\"\\n      }\\n    ],\\n    \\"HTTPRewrite\\": {\\n      \\"Status\\": \\"off\\",\\n      \\"Path\\": \\"/test/client\\",\\n      \\"Host\\": \\"aliyuncs.com\\",\\n      \\"PathType\\": \\"PRE\\",\\n      \\"Pattern\\": \\"/test\\",\\n      \\"Substitution\\": \\"test\\"\\n    },\\n    \\"HeaderOp\\": {\\n      \\"Status\\": \\"off\\",\\n      \\"HeaderOpItems\\": [\\n        {\\n          \\"DirectionType\\": \\"Response\\",\\n          \\"OpType\\": \\"Add\\",\\n          \\"Key\\": \\"debug\\",\\n          \\"Value\\": \\"test\\"\\n        }\\n      ]\\n    },\\n    \\"DestinationType\\": \\"Single\\",\\n    \\"DirectResponse\\": {\\n      \\"Code\\": 200,\\n      \\"Body\\": \\"[{\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"h68d13466.sqa.eu95\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"dims\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"groupName=All}]\\"\\n    },\\n    \\"Cors\\": {\\n      \\"Status\\": \\"off\\",\\n      \\"AllowOrigins\\": \\"*\\",\\n      \\"AllowMethods\\": \\"GET,POST,PUT,DELETE,HEAD,OPTIONS,PATCH\\",\\n      \\"AllowHeaders\\": \\"*\\",\\n      \\"ExposeHeaders\\": \\"*\\",\\n      \\"TimeUnit\\": \\"s\\",\\n      \\"UnitNum\\": 1,\\n      \\"AllowCredentials\\": true\\n    },\\n    \\"Timeout\\": {\\n      \\"UnitNum\\": 10,\\n      \\"TimeUnit\\": \\"s\\",\\n      \\"Status\\": \\"off\\"\\n    },\\n    \\"Retry\\": {\\n      \\"Attempts\\": 1,\\n      \\"RetryOn\\": [\\n        \\"5xx\\"\\n      ],\\n      \\"HttpCodes\\": [\\n        \\"500\\"\\n      ],\\n      \\"Status\\": \\"on\\"\\n    },\\n    \\"DomainIdList\\": [\\n      1\\n    ],\\n    \\"DomainNameList\\": [\\n      \\"test.com\\"\\n    ],\\n    \\"Redirect\\": {\\n      \\"Code\\": 200,\\n      \\"Host\\": \\"ww.al.c\\",\\n      \\"Path\\": \\"/\\"\\n    },\\n    \\"EnableWaf\\": true\\n  }\\n}","type":"json"}]',
      'title' => '更新路由防护状态',
    ),
    'ApplyGatewayRoute' => 
    array (
      'summary' => '发布网关路由。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '950',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-1a4ab101d5924b6f92c5ec98a841761f',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1DB1AB36-8395-540E-AACC-7571D6B2057A',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应信息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '节点数据。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"1DB1AB36-8395-540E-AACC-7571D6B2057A\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"success\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '发布网关路由',
    ),
    'OfflineGatewayRoute' => 
    array (
      'summary' => '下线网关路由。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '645',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gw-77e1153db6e14c0a8b1fae20bcb89ca5',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回信息的语言类型：

- zh：中文
- en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '数据结构。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8EB24742-AB15-5953-BEFB-1FA18E770EEE',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '报错信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：

- `true`：请求成功。                                
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '下线是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"8EB24742-AB15-5953-BEFB-1FA18E770EEE\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"Code\\": 200,\\n  \\"Success\\": true,\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '下线网关路由',
    ),
    'CreateGatewayFlowRule' => 
    array (
      'summary' => '创建网关流控规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '14407',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-e2d226bba4b2445c9e29fa7f8216****',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '52853',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'routeName',
          ),
        ),
        4 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '总体QPS阈值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'BehaviorType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Web fallbac行为类型。

0：返回指定文本。

1：跳转到指定页面。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        6 => 
        array (
          'name' => 'BodyEncoding',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '编码类型。

0：普通文本。

1：JSON',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'ResponseStatusCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Http状态码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '429',
          ),
        ),
        8 => 
        array (
          'name' => 'ResponseContentBody',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP返回文本。',
            'type' => 'string',
            'required' => false,
            'example' => 'text',
          ),
        ),
        9 => 
        array (
          'name' => 'ResponseRedirectUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跳转地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.******.com',
          ),
        ),
        10 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启。

0：不开启。

1：开启。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        11 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<Long>',
            'description' => 'RestResult<Long>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '72FC625E-9629-591B-9C01-3F0BFDAB****',
              ),
              'Data' => 
              array (
                'description' => '返回规则ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '608',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"72FC625E-9629-591B-9C01-3F0BFDAB****\\",\\n  \\"Data\\": 608\\n}","type":"json"}]',
      'title' => '创建网关流控规则',
    ),
    'DeleteGatewayFlowRule' => 
    array (
      'summary' => '删除该网关流控规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-e2d226bba4b2445c9e29fa7f8216****',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '11151',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控规则ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<Boolean>',
            'description' => 'RestResult<Boolean>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2B74E7F7-DF54-5AB1-B8F2-67391B83****',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'boolean',
                'example' => 'True',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"2B74E7F7-DF54-5AB1-B8F2-67391B83****\\",\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '删除网关流控规则',
    ),
    'UpdateGatewayFlowRule' => 
    array (
      'summary' => '更新该网关流控规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流控规则ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '549',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '14407',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-e2d226bba4b2445c9e29fa7f8216****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '48811',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'routeA',
          ),
        ),
        5 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '总体QPS阈值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'BehaviorType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Web fallback行为类型。

0：返回指定文本

1：跳转到指定页面',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'BodyEncoding',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '编码类型。

0：普通文本

1：JSON',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        8 => 
        array (
          'name' => 'ResponseStatusCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Http状态码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '429',
          ),
        ),
        9 => 
        array (
          'name' => 'ResponseContentBody',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Http返回文本。',
            'type' => 'string',
            'required' => false,
            'example' => 'text',
          ),
        ),
        10 => 
        array (
          'name' => 'ResponseRedirectUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跳转地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.******.com',
          ),
        ),
        11 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启。

0：不开启。

1：开启。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        12 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<GatewayRouteFlowRule>',
            'description' => 'RestResult<GatewayRouteFlowRule>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2B74E7F7-DF54-5AB1-B8F2-67391B83****',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '流控规则ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '549',
                  ),
                  'GatewayId' => 
                  array (
                    'description' => '网关ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '14407',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。',
                    'type' => 'string',
                    'example' => 'gw-e2d226bba4b2445c9e29fa7f8216****',
                  ),
                  'RouteId' => 
                  array (
                    'description' => '路由ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '48811',
                  ),
                  'RouteName' => 
                  array (
                    'description' => '路由名称。',
                    'type' => 'string',
                    'example' => 'routeA',
                  ),
                  'Threshold' => 
                  array (
                    'description' => '总体QPS阈值。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'StatDurationMs' => 
                  array (
                    'description' => '统计持续时间。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'LimitMode' => 
                  array (
                    'description' => '阈值转化模式。

0：单机。

1：集群。

2：集群转单机。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'BehaviorType' => 
                  array (
                    'description' => 'Web fallbaco行为类型。

0：返回指定文本。

1：跳转到指定页面。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'BodyEncoding' => 
                  array (
                    'description' => '编码类型。

0：普通文本

1：JSON',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'ResponseStatusCode' => 
                  array (
                    'description' => 'Http状态码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '429',
                  ),
                  'ResponseContentBody' => 
                  array (
                    'description' => 'HTTP返回文本。',
                    'type' => 'string',
                    'example' => 'Text',
                  ),
                  'ResponseRedirectUrl' => 
                  array (
                    'description' => '跳转地址。',
                    'type' => 'string',
                    'example' => 'www.******.com',
                  ),
                  'ResponseAdditionalHeaders' => 
                  array (
                    'description' => '自定义header，输入为key-value键值对。',
                    'type' => 'string',
                    'example' => 'key=value',
                  ),
                  'Enable' => 
                  array (
                    'description' => '是否开启。

0：不开启。

1：开启。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'IdList' => 
                  array (
                    'title' => '筛选规则id',
                    'description' => '筛选规则id',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '规则ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '549',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"2B74E7F7-DF54-5AB1-B8F2-67391B83****\\",\\n  \\"Data\\": {\\n    \\"Id\\": 549,\\n    \\"GatewayId\\": 14407,\\n    \\"GatewayUniqueId\\": \\"gw-e2d226bba4b2445c9e29fa7f8216****\\",\\n    \\"RouteId\\": 48811,\\n    \\"RouteName\\": \\"routeA\\",\\n    \\"Threshold\\": 10,\\n    \\"StatDurationMs\\": 10,\\n    \\"LimitMode\\": 0,\\n    \\"BehaviorType\\": 0,\\n    \\"BodyEncoding\\": 0,\\n    \\"ResponseStatusCode\\": 429,\\n    \\"ResponseContentBody\\": \\"Text\\",\\n    \\"ResponseRedirectUrl\\": \\"www.******.com\\",\\n    \\"ResponseAdditionalHeaders\\": \\"key=value\\",\\n    \\"Enable\\": 0,\\n    \\"IdList\\": [\\n      549\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '更新网关流控规则',
    ),
    'ListGatewayFlowRule' => 
    array (
      'summary' => '查询该网关流控规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'FilterParams',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'just for POP',
            'description' => 'just for POP',
            'type' => 'string',
            'required' => true,
            'example' => 'param',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<PageResult<GatewayRouteFlowRule>>',
            'description' => 'RestResult<PageResult<GatewayRouteFlowRule>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0951EBF0-798E-5E0B-8D38-460A14AD****',
              ),
              'Data' => 
              array (
                'description' => 'Meta返回信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'title' => '实例列表的页码',
                    'description' => '实例列表的页码',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TotalSize' => 
                  array (
                    'title' => '查询到的实例总数',
                    'description' => '查询到的实例总数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'title' => '输入时设置的每页行数',
                    'description' => '输入时设置的每页行数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'Result' => 
                  array (
                    'description' => '返回数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '路由流控规则ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '549',
                        ),
                        'GatewayId' => 
                        array (
                          'description' => '网关ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '14407',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关唯一标识ID。',
                          'type' => 'string',
                          'example' => 'gw-e2d226bba4b2445c9e29fa7f8216****',
                        ),
                        'RouteId' => 
                        array (
                          'description' => '路由ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '48811',
                        ),
                        'RouteName' => 
                        array (
                          'description' => '路由名称。',
                          'type' => 'string',
                          'example' => 'routeA',
                        ),
                        'Threshold' => 
                        array (
                          'description' => '总体QPS阈值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'BehaviorType' => 
                        array (
                          'description' => 'Web fallback行为类型。

0：返回指定内容

1：跳转到指定页面',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'BodyEncoding' => 
                        array (
                          'description' => '编码类型。

0：普通文本

1：JSON',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ResponseStatusCode' => 
                        array (
                          'description' => 'Http状态码。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '429',
                        ),
                        'ResponseContentBody' => 
                        array (
                          'description' => 'Http返回文本。',
                          'type' => 'string',
                          'example' => 'text',
                        ),
                        'ResponseRedirectUrl' => 
                        array (
                          'description' => '跳转地址。',
                          'type' => 'string',
                          'example' => 'www.******.com',
                        ),
                        'Enable' => 
                        array (
                          'description' => '是否开启。

0：不开启。

1：开启。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                  'Results' => 
                  array (
                    'title' => '从 com.alibaba.mse.common.dto.FetchListResponse#results',
                    'description' => '分页数据集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '路由流控规则ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '549',
                        ),
                        'GatewayId' => 
                        array (
                          'description' => '网关ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '14407',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关唯一标识ID。',
                          'type' => 'string',
                          'example' => 'gw-e2d226bba4b2445c9e29fa7f8216****',
                        ),
                        'RouteId' => 
                        array (
                          'description' => '路由ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '48811',
                        ),
                        'RouteName' => 
                        array (
                          'description' => '路由名称。',
                          'type' => 'string',
                          'example' => 'routeA',
                        ),
                        'Threshold' => 
                        array (
                          'description' => '总体QPS阈值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'StatDurationMs' => 
                        array (
                          'description' => '统计持续时间。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'LimitMode' => 
                        array (
                          'description' => '阈值转化模式。

0：单机。

1：集群。

2：集群转单机。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'BehaviorType' => 
                        array (
                          'description' => 'Web fallback行为类型。

0：返回指定内容

1：跳转到指定页面',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'BodyEncoding' => 
                        array (
                          'description' => '编码类型。

0：普通文本

1：JSON',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ResponseStatusCode' => 
                        array (
                          'description' => 'Http状态码。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '429',
                        ),
                        'ResponseContentBody' => 
                        array (
                          'description' => 'Http返回文本。',
                          'type' => 'string',
                          'example' => 'text',
                        ),
                        'ResponseRedirectUrl' => 
                        array (
                          'description' => '跳转地址。',
                          'type' => 'string',
                          'example' => 'www.******.com',
                        ),
                        'ResponseAdditionalHeaders' => 
                        array (
                          'description' => '自定义header，输入为key-value键值对。',
                          'type' => 'string',
                          'example' => 'key=value',
                        ),
                        'Enable' => 
                        array (
                          'description' => '是否开启。

0：不开启。

1：开启。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'IdList' => 
                        array (
                          'title' => '筛选规则id',
                          'description' => '筛选规则id。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '规则ID。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '549',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0951EBF0-798E-5E0B-8D38-460A14AD****\\",\\n  \\"Data\\": {\\n    \\"PageNumber\\": 1,\\n    \\"TotalSize\\": 1,\\n    \\"PageSize\\": 100,\\n    \\"Result\\": [\\n      {\\n        \\"Id\\": 549,\\n        \\"GatewayId\\": 14407,\\n        \\"GatewayUniqueId\\": \\"gw-e2d226bba4b2445c9e29fa7f8216****\\",\\n        \\"RouteId\\": 48811,\\n        \\"RouteName\\": \\"routeA\\",\\n        \\"Threshold\\": 10,\\n        \\"BehaviorType\\": 0,\\n        \\"BodyEncoding\\": 0,\\n        \\"ResponseStatusCode\\": 429,\\n        \\"ResponseContentBody\\": \\"text\\",\\n        \\"ResponseRedirectUrl\\": \\"www.******.com\\",\\n        \\"Enable\\": 0\\n      }\\n    ],\\n    \\"Results\\": [\\n      {\\n        \\"Id\\": 549,\\n        \\"GatewayId\\": 14407,\\n        \\"GatewayUniqueId\\": \\"gw-e2d226bba4b2445c9e29fa7f8216****\\",\\n        \\"RouteId\\": 48811,\\n        \\"RouteName\\": \\"routeA\\",\\n        \\"Threshold\\": 10,\\n        \\"StatDurationMs\\": 10,\\n        \\"LimitMode\\": 0,\\n        \\"BehaviorType\\": 0,\\n        \\"BodyEncoding\\": 0,\\n        \\"ResponseStatusCode\\": 429,\\n        \\"ResponseContentBody\\": \\"text\\",\\n        \\"ResponseRedirectUrl\\": \\"www.******.com\\",\\n        \\"ResponseAdditionalHeaders\\": \\"key=value\\",\\n        \\"Enable\\": 0,\\n        \\"IdList\\": [\\n          549\\n        ]\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询网关流控规则',
    ),
    'CreateGatewayCircuitBreakerRule' => 
    array (
      'summary' => '创建网关熔断规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '14407',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-c9bc5afd61014165bd58f621b491*****',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '645',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'routeName',
          ),
        ),
        4 => 
        array (
          'name' => 'Strategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阈值类型。

0：慢调用类型。

1：异常类型。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        5 => 
        array (
          'name' => 'TriggerRatio',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发熔断百分比。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'StatDurationSec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '熔断统计时长。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '11',
          ),
        ),
        7 => 
        array (
          'name' => 'RecoveryTimeoutSec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '熔断恢复时长。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '12',
          ),
        ),
        8 => 
        array (
          'name' => 'MinRequestAmount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发熔断的最小请求数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        9 => 
        array (
          'name' => 'MaxAllowedMs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '慢调用模式下慢调用阈值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        10 => 
        array (
          'name' => 'BehaviorType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Web fallbac行为类型。

0：返回指定文本。

1：跳转到指定页面。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        11 => 
        array (
          'name' => 'BodyEncoding',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '编码类型。

0：普通文本。

1：JSON',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        12 => 
        array (
          'name' => 'ResponseStatusCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP状态码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '429',
          ),
        ),
        13 => 
        array (
          'name' => 'ResponseContentBody',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP返回文本。',
            'type' => 'string',
            'required' => false,
            'example' => 'text',
          ),
        ),
        14 => 
        array (
          'name' => 'ResponseRedirectUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跳转地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.******.com',
          ),
        ),
        15 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启。

0：不开启。

1：开启。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        16 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<Long>',
            'description' => 'RestResult<Long>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC34E4A3-5F1C-4E40-86EA-02EDF967****',
              ),
              'Data' => 
              array (
                'description' => '返回规则ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '28',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"DC34E4A3-5F1C-4E40-86EA-02EDF967****\\",\\n  \\"Data\\": 28\\n}","type":"json"}]',
      'title' => '创建网关熔断规则',
    ),
    'DeleteGatewayCircuitBreakerRule' => 
    array (
      'summary' => '删除该网关熔断规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-1cef5440bf2d484db419fb264d4f****',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '11151',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '熔断规则ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<Boolean>',
            'description' => 'RestResult<Boolean>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '52BA6DA6-A702-4362-A32F-DFF79655****',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'boolean',
                'example' => 'True',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"52BA6DA6-A702-4362-A32F-DFF79655****\\",\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '删除网关熔断规则',
    ),
    'UpdateGatewayCircuitBreakerRule' => 
    array (
      'summary' => '更新该网关熔断规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '熔断规则ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '369',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '14407',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-c9bc5afd61014165bd58f621b491****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '645',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'routeName',
          ),
        ),
        5 => 
        array (
          'name' => 'Strategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阈值类型。

0：慢调用类型。

1：异常类型。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        6 => 
        array (
          'name' => 'TriggerRatio',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发熔断百分比。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'StatDurationSec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '熔断统计时长。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '11',
          ),
        ),
        8 => 
        array (
          'name' => 'RecoveryTimeoutSec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '熔断恢复时长。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '12',
          ),
        ),
        9 => 
        array (
          'name' => 'MinRequestAmount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发熔断的最小请求数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        10 => 
        array (
          'name' => 'MaxAllowedMs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '慢调用模式下慢调用阈值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        11 => 
        array (
          'name' => 'BehaviorType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Web fallback行为类型。

0：返回指定文本

1：跳转到指定页面',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        12 => 
        array (
          'name' => 'BodyEncoding',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '编码类型。

0：普通文本

1：JSON',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        13 => 
        array (
          'name' => 'ResponseStatusCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP状态码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '429',
          ),
        ),
        14 => 
        array (
          'name' => 'ResponseContentBody',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP返回文本。',
            'type' => 'string',
            'required' => false,
            'example' => 'text',
          ),
        ),
        15 => 
        array (
          'name' => 'ResponseRedirectUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跳转地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.******.com',
          ),
        ),
        16 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启。

0：不开启。

1：开启。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        17 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<GatewayRouteCircuitBreakerRule>',
            'description' => 'RestResult<GatewayRouteCircuitBreakerRule>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC34E4A3-5F1C-4E40-86EA-02EDF967****',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '熔断规则ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '369',
                  ),
                  'GatewayId' => 
                  array (
                    'description' => '网关ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '14407',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。',
                    'type' => 'string',
                    'example' => 'gw-c9bc5afd61014165bd58f621b491****',
                  ),
                  'RouteId' => 
                  array (
                    'description' => '路由ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '645',
                  ),
                  'RouteName' => 
                  array (
                    'description' => '路由名称。',
                    'type' => 'string',
                    'example' => 'routeName',
                  ),
                  'Strategy' => 
                  array (
                    'description' => '阈值类型。

0：慢调用类型。

1：异常类型。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'TriggerRatio' => 
                  array (
                    'description' => '触发熔断的百分比。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'StatDurationSec' => 
                  array (
                    'description' => '熔断统计时长。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '11',
                  ),
                  'RecoveryTimeoutSec' => 
                  array (
                    'description' => '熔断恢复时长。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '12',
                  ),
                  'MinRequestAmount' => 
                  array (
                    'description' => '触发熔断的最小请求数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'MaxAllowedMs' => 
                  array (
                    'description' => '慢调用模式下慢调用阈值。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'LimitMode' => 
                  array (
                    'description' => '阈值转化模式。

0：单机。

1：集群。

2：集群转单机。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'BehaviorType' => 
                  array (
                    'description' => 'Web fallbaco行为类型。

0：返回指定文本。

1：跳转到指定页面。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'BodyEncoding' => 
                  array (
                    'description' => '编码类型。

0：普通文本。

1：JSON。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'ResponseStatusCode' => 
                  array (
                    'description' => 'HTTP状态码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '201',
                  ),
                  'ResponseContentBody' => 
                  array (
                    'description' => 'HTTP返回文本。',
                    'type' => 'string',
                    'example' => 'text',
                  ),
                  'ResponseRedirectUrl' => 
                  array (
                    'description' => '跳转地址。',
                    'type' => 'string',
                    'example' => 'www.******.com',
                  ),
                  'ResponseAdditionalHeaders' => 
                  array (
                    'description' => '自定义header，输入为key-value键值对。',
                    'type' => 'string',
                    'example' => 'key=value',
                  ),
                  'Enable' => 
                  array (
                    'description' => '是否开启。

0：不开启。

1：开启。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'IdList' => 
                  array (
                    'title' => '筛选规则id',
                    'description' => '筛选规则id',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '规则ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '369',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"DC34E4A3-5F1C-4E40-86EA-02EDF967****\\",\\n  \\"Data\\": {\\n    \\"Id\\": 369,\\n    \\"GatewayId\\": 14407,\\n    \\"GatewayUniqueId\\": \\"gw-c9bc5afd61014165bd58f621b491****\\",\\n    \\"RouteId\\": 645,\\n    \\"RouteName\\": \\"routeName\\",\\n    \\"Strategy\\": 0,\\n    \\"TriggerRatio\\": 10,\\n    \\"StatDurationSec\\": 11,\\n    \\"RecoveryTimeoutSec\\": 12,\\n    \\"MinRequestAmount\\": 10,\\n    \\"MaxAllowedMs\\": 10,\\n    \\"LimitMode\\": 0,\\n    \\"BehaviorType\\": 0,\\n    \\"BodyEncoding\\": 0,\\n    \\"ResponseStatusCode\\": 201,\\n    \\"ResponseContentBody\\": \\"text\\",\\n    \\"ResponseRedirectUrl\\": \\"www.******.com\\",\\n    \\"ResponseAdditionalHeaders\\": \\"key=value\\",\\n    \\"Enable\\": 0,\\n    \\"IdList\\": [\\n      369\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '更新网关熔断规则',
    ),
    'ListGatewayCircuitBreakerRule' => 
    array (
      'summary' => '查询该网关熔断规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'FilterParams',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'just for POP',
            'description' => 'just for POP',
            'type' => 'string',
            'required' => true,
            'example' => 'param',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<PageResult<GatewayRouteCircuitBreakerRule>>',
            'description' => 'RestResult<PageResult<GatewayRouteCircuitBreakerRule>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC34E4A3-5F1C-4E40-86EA-02EDF967****',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'title' => '实例列表的页码',
                    'description' => '实例列表的页码',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TotalSize' => 
                  array (
                    'title' => '查询到的实例总数',
                    'description' => '查询到的实例总数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '11',
                  ),
                  'PageSize' => 
                  array (
                    'title' => '输入时设置的每页行数',
                    'description' => '输入时设置的每页行数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'Result' => 
                  array (
                    'description' => '返回结果。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '熔断规则ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '467',
                        ),
                        'GatewayId' => 
                        array (
                          'description' => '网关ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '11919',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关唯一标识ID。',
                          'type' => 'string',
                          'example' => 'gw-5017305290e14centbrveca****',
                        ),
                        'RouteId' => 
                        array (
                          'description' => '路由ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3091',
                        ),
                        'RouteName' => 
                        array (
                          'description' => '路由名称。',
                          'type' => 'string',
                          'example' => 'routeName',
                        ),
                        'Strategy' => 
                        array (
                          'description' => '阈值模式。

0：慢调用模式。

1：异常模式。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'TriggerRatio' => 
                        array (
                          'description' => '触发熔断百分比。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'StatDurationSec' => 
                        array (
                          'description' => '熔断统计时长。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '11',
                        ),
                        'RecoveryTimeoutSec' => 
                        array (
                          'description' => '熔断恢复时长。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '12',
                        ),
                        'MinRequestAmount' => 
                        array (
                          'description' => '触发熔断的最小请求数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'MaxAllowedMs' => 
                        array (
                          'description' => '慢调用模式下慢调用阈值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '14',
                        ),
                        'LimitMode' => 
                        array (
                          'description' => '阈值转化模式。

0：单机。

1：集群。

2：集群转单机。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'BehaviorType' => 
                        array (
                          'description' => 'Web fallback行为类型。

0：返回指定内容。

1：跳转到指定页面。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'BodyEncoding' => 
                        array (
                          'description' => '编码类型。

0：普通文本

1：JSON',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ResponseStatusCode' => 
                        array (
                          'description' => 'Http状态码。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '204',
                        ),
                        'ResponseContentBody' => 
                        array (
                          'description' => 'HTTP返回文本。',
                          'type' => 'string',
                          'example' => 'text',
                        ),
                        'ResponseRedirectUrl' => 
                        array (
                          'description' => '跳转地址。',
                          'type' => 'string',
                          'example' => 'www.******.com',
                        ),
                        'ResponseAdditionalHeaders' => 
                        array (
                          'description' => '自定义header，输入为key-value键值对。',
                          'type' => 'string',
                          'example' => 'key=value',
                        ),
                        'Enable' => 
                        array (
                          'description' => '是否开启。

0：不开启。

1：开启。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'IdList' => 
                        array (
                          'title' => '筛选规则id',
                          'description' => '筛选规则id',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '规则ID。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '467',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Results' => 
                  array (
                    'title' => '从 com.alibaba.mse.common.dto.FetchListResponse#results',
                    'description' => '返回结果集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '熔断规则ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '467',
                        ),
                        'GatewayId' => 
                        array (
                          'description' => '网关ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '11919',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关唯一标识ID。',
                          'type' => 'string',
                          'example' => 'gw-1ee34548c68f4778a25c05abd657****',
                        ),
                        'RouteId' => 
                        array (
                          'description' => '路由ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3450',
                        ),
                        'RouteName' => 
                        array (
                          'description' => '路由名称。',
                          'type' => 'string',
                          'example' => 'routeName',
                        ),
                        'Strategy' => 
                        array (
                          'description' => '阈值模式。

0：慢调用模式。

1：异常模式。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'TriggerRatio' => 
                        array (
                          'description' => '触发熔断的百分比。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'StatDurationSec' => 
                        array (
                          'description' => '熔断统计时长。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '11',
                        ),
                        'RecoveryTimeoutSec' => 
                        array (
                          'description' => '熔断恢复时长。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '12',
                        ),
                        'MinRequestAmount' => 
                        array (
                          'description' => '触发熔断的最小请求数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'MaxAllowedMs' => 
                        array (
                          'description' => '慢调用模式下慢调用阈值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'LimitMode' => 
                        array (
                          'description' => '阈值转化模式。

0：单机。

1：集群。

2：集群转单机。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'BehaviorType' => 
                        array (
                          'description' => 'Web fallback行为类型。

0：返回指定内容

1：跳转到指定页面',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'BodyEncoding' => 
                        array (
                          'description' => '编码类型。

0：普通文本

1：JSON',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ResponseStatusCode' => 
                        array (
                          'description' => 'HTTP状态码。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '204',
                        ),
                        'ResponseContentBody' => 
                        array (
                          'description' => 'HTTP返回文本。',
                          'type' => 'string',
                          'example' => 'text',
                        ),
                        'ResponseRedirectUrl' => 
                        array (
                          'description' => '跳转地址。',
                          'type' => 'string',
                          'example' => 'www.******.com',
                        ),
                        'ResponseAdditionalHeaders' => 
                        array (
                          'description' => '自定义header，输入为key-value键值对。',
                          'type' => 'string',
                          'example' => 'key=value',
                        ),
                        'Enable' => 
                        array (
                          'description' => '是否开启。

0：不开启。

1：开启。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'IdList' => 
                        array (
                          'title' => '筛选规则id',
                          'description' => '筛选规则id',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '规则ID。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '467',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"DC34E4A3-5F1C-4E40-86EA-02EDF967****\\",\\n  \\"Data\\": {\\n    \\"PageNumber\\": 1,\\n    \\"TotalSize\\": 11,\\n    \\"PageSize\\": 100,\\n    \\"Result\\": [\\n      {\\n        \\"Id\\": 467,\\n        \\"GatewayId\\": 11919,\\n        \\"GatewayUniqueId\\": \\"gw-5017305290e14centbrveca****\\",\\n        \\"RouteId\\": 3091,\\n        \\"RouteName\\": \\"routeName\\",\\n        \\"Strategy\\": 0,\\n        \\"TriggerRatio\\": 10,\\n        \\"StatDurationSec\\": 11,\\n        \\"RecoveryTimeoutSec\\": 12,\\n        \\"MinRequestAmount\\": 10,\\n        \\"MaxAllowedMs\\": 14,\\n        \\"LimitMode\\": 0,\\n        \\"BehaviorType\\": 0,\\n        \\"BodyEncoding\\": 0,\\n        \\"ResponseStatusCode\\": 204,\\n        \\"ResponseContentBody\\": \\"text\\",\\n        \\"ResponseRedirectUrl\\": \\"www.******.com\\",\\n        \\"ResponseAdditionalHeaders\\": \\"key=value\\",\\n        \\"Enable\\": 0,\\n        \\"IdList\\": [\\n          467\\n        ]\\n      }\\n    ],\\n    \\"Results\\": [\\n      {\\n        \\"Id\\": 467,\\n        \\"GatewayId\\": 11919,\\n        \\"GatewayUniqueId\\": \\"gw-1ee34548c68f4778a25c05abd657****\\",\\n        \\"RouteId\\": 3450,\\n        \\"RouteName\\": \\"routeName\\",\\n        \\"Strategy\\": 0,\\n        \\"TriggerRatio\\": 10,\\n        \\"StatDurationSec\\": 11,\\n        \\"RecoveryTimeoutSec\\": 12,\\n        \\"MinRequestAmount\\": 10,\\n        \\"MaxAllowedMs\\": 10,\\n        \\"LimitMode\\": 0,\\n        \\"BehaviorType\\": 0,\\n        \\"BodyEncoding\\": 0,\\n        \\"ResponseStatusCode\\": 204,\\n        \\"ResponseContentBody\\": \\"text\\",\\n        \\"ResponseRedirectUrl\\": \\"www.******.com\\",\\n        \\"ResponseAdditionalHeaders\\": \\"key=value\\",\\n        \\"Enable\\": 0,\\n        \\"IdList\\": [\\n          467\\n        ]\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询网关熔断规则',
    ),
    'CreateGatewayIsolationRule' => 
    array (
      'summary' => '创建网关并发规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '14407',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-e2d226bba4b2445c9e29fa7f8216****',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '52853',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'routeName',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxConcurrency',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '总体并发数阈值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '100',
          ),
        ),
        5 => 
        array (
          'name' => 'BehaviorType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Web fallback行为类型。

0：返回指定内容。

1：跳转到指定页面。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        6 => 
        array (
          'name' => 'BodyEncoding',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '编码类型。

0：普通文本。

1：JSON。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'ResponseStatusCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP状态码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '429',
          ),
        ),
        8 => 
        array (
          'name' => 'ResponseContentBody',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP返回文本。',
            'type' => 'string',
            'required' => false,
            'example' => 'text',
          ),
        ),
        9 => 
        array (
          'name' => 'ResponseRedirectUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跳转路径。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.******.com',
          ),
        ),
        10 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启。

0：不开启。

1：开启。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        11 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<Long>',
            'description' => 'RestResult<Long>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '94B12406-E44D-57C9-BF93-A8B35BFF****',
              ),
              'Data' => 
              array (
                'description' => '返回规则ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '608',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"94B12406-E44D-57C9-BF93-A8B35BFF****\\",\\n  \\"Data\\": 608\\n}","type":"json"}]',
      'title' => '创建网关并发规则',
    ),
    'DeleteGatewayIsolationRule' => 
    array (
      'summary' => '删除该网关并发规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-e2d226bba4b2445c9e29fa7f8216****',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '11151',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '并发规则ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<Boolean>',
            'description' => 'RestResult<Boolean>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '94B12406-E44D-57C9-BF93-A8B35BFF****',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'boolean',
                'example' => 'True',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"94B12406-E44D-57C9-BF93-A8B35BFF****\\",\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '删除网关并发规则',
    ),
    'UpdateGatewayIsolationRule' => 
    array (
      'summary' => '更新该网关并发规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '并发规则ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '358',
          ),
        ),
        1 => 
        array (
          'name' => 'GatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '14407',
          ),
        ),
        2 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-e2d226bba4b2445c9e29fa7f8216****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '52853',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'routeName',
          ),
        ),
        5 => 
        array (
          'name' => 'MaxConcurrency',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '总体并发数阈值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '100',
          ),
        ),
        6 => 
        array (
          'name' => 'BehaviorType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Web fallback行为类型。

0：返回指定内容。

1：跳转到指定页面。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'BodyEncoding',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '编码类型。

0：普通文本。

1：JSON。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        8 => 
        array (
          'name' => 'ResponseStatusCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP状态码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '429',
          ),
        ),
        9 => 
        array (
          'name' => 'ResponseContentBody',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HTTP返回文本。',
            'type' => 'string',
            'required' => false,
            'example' => 'text',
          ),
        ),
        10 => 
        array (
          'name' => 'ResponseRedirectUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跳转路径。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.******.com',
          ),
        ),
        11 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启。

0：不开启。

1：开启。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        12 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<GatewayRouteIsolationRule>',
            'description' => 'RestResult<GatewayRouteIsolationRule>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '94B12406-E44D-57C9-BF93-A8B35BFF****',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '并发规则ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '358',
                  ),
                  'GatewayId' => 
                  array (
                    'description' => '网关ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '14407',
                  ),
                  'GatewayUniqueId' => 
                  array (
                    'description' => '网关唯一标识ID。',
                    'type' => 'string',
                    'example' => 'gw-e2d226bba4b2445c9e29fa7f8216****',
                  ),
                  'RouteId' => 
                  array (
                    'description' => '路由ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '52853',
                  ),
                  'RouteName' => 
                  array (
                    'description' => '路由名称。',
                    'type' => 'string',
                    'example' => 'routeName',
                  ),
                  'MaxConcurrency' => 
                  array (
                    'description' => '总体并发数阈值。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'LimitMode' => 
                  array (
                    'description' => '阈值转化模式。

0：单机。

1：集群。

2：集群转单机。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'BehaviorType' => 
                  array (
                    'description' => 'Web fallback行为类型。

0：返回指定内容。

1：跳转到指定页面。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'BodyEncoding' => 
                  array (
                    'description' => '编码类型。

0：普通文本。

1：JSON。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'ResponseStatusCode' => 
                  array (
                    'description' => 'HTTP状态码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '429',
                  ),
                  'ResponseContentBody' => 
                  array (
                    'description' => 'HTTP返回文本。',
                    'type' => 'string',
                    'example' => 'text',
                  ),
                  'ResponseRedirectUrl' => 
                  array (
                    'description' => '跳转路径。',
                    'type' => 'string',
                    'example' => 'www.******.com',
                  ),
                  'ResponseAdditionalHeaders' => 
                  array (
                    'description' => '自定义header，输入为key-value键值对。',
                    'type' => 'string',
                    'example' => 'key=value',
                  ),
                  'Enable' => 
                  array (
                    'description' => '是否开启。

0：不开启。

1：开启。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'IdList' => 
                  array (
                    'title' => '筛选规则id',
                    'description' => '筛选规则id',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '规则ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '358',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"94B12406-E44D-57C9-BF93-A8B35BFF****\\",\\n  \\"Data\\": {\\n    \\"Id\\": 358,\\n    \\"GatewayId\\": 14407,\\n    \\"GatewayUniqueId\\": \\"gw-e2d226bba4b2445c9e29fa7f8216****\\",\\n    \\"RouteId\\": 52853,\\n    \\"RouteName\\": \\"routeName\\",\\n    \\"MaxConcurrency\\": 100,\\n    \\"LimitMode\\": 0,\\n    \\"BehaviorType\\": 0,\\n    \\"BodyEncoding\\": 0,\\n    \\"ResponseStatusCode\\": 429,\\n    \\"ResponseContentBody\\": \\"text\\",\\n    \\"ResponseRedirectUrl\\": \\"www.******.com\\",\\n    \\"ResponseAdditionalHeaders\\": \\"key=value\\",\\n    \\"Enable\\": 0,\\n    \\"IdList\\": [\\n      358\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '更新网关并发规则',
    ),
    'ListGatewayIsolationRule' => 
    array (
      'summary' => '查询该网关并发规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'FilterParams',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'just for POP',
            'description' => 'just for POP',
            'type' => 'string',
            'required' => true,
            'example' => 'param',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<PageResult<GatewayRouteIsolationRule>>',
            'description' => 'RestResult<PageResult<GatewayRouteIsolationRule>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6F025D43-8632-5716-AE9B-7EDDF16C****',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'title' => '实例列表的页码',
                    'description' => '实例列表的页码',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TotalSize' => 
                  array (
                    'title' => '查询到的实例总数',
                    'description' => '查询到的实例总数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'title' => '输入时设置的每页行数',
                    'description' => '输入时设置的每页行数',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'Result' => 
                  array (
                    'description' => '返回结果。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '并发规则ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '358',
                        ),
                        'GatewayId' => 
                        array (
                          'description' => '网关ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '14407',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关唯一标识ID。',
                          'type' => 'string',
                          'example' => 'gw-e2d226bba4b2445c9e29fa7f8216****',
                        ),
                        'RouteId' => 
                        array (
                          'description' => '路由ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '52853',
                        ),
                        'RouteName' => 
                        array (
                          'description' => '路由名称。',
                          'type' => 'string',
                          'example' => 'routeName',
                        ),
                        'MaxConcurrency' => 
                        array (
                          'description' => '总体并发数阈值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'LimitMode' => 
                        array (
                          'description' => '阈值转化模式。

0：单机

1：集群

2：集群转单机',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'BehaviorType' => 
                        array (
                          'description' => 'Web fallback行为类型。

0：返回指定内容。

1：跳转到指定页面。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'BodyEncoding' => 
                        array (
                          'description' => '编码类型。

0：普通文本。

1：JSON。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ResponseStatusCode' => 
                        array (
                          'description' => 'HTTP状态码。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '429',
                        ),
                        'ResponseContentBody' => 
                        array (
                          'description' => 'HTTP返回文本。',
                          'type' => 'string',
                          'example' => 'text',
                        ),
                        'ResponseRedirectUrl' => 
                        array (
                          'description' => '跳转地址。',
                          'type' => 'string',
                          'example' => 'www.******.com',
                        ),
                        'ResponseAdditionalHeaders' => 
                        array (
                          'description' => '自定义header，输入为key-value键值对',
                          'type' => 'string',
                          'example' => 'key:value',
                        ),
                        'Enable' => 
                        array (
                          'description' => '是否开启。

0：不开启。

1：开启。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'IdList' => 
                        array (
                          'title' => '筛选规则id',
                          'description' => '筛选规则id',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '规则ID。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '358',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Results' => 
                  array (
                    'title' => '从 com.alibaba.mse.common.dto.FetchListResponse#results',
                    'description' => '返回结果集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '返回集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '并发规则ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '358',
                        ),
                        'GatewayId' => 
                        array (
                          'description' => '网关ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '14407',
                        ),
                        'GatewayUniqueId' => 
                        array (
                          'description' => '网关唯一标识ID。',
                          'type' => 'string',
                          'example' => 'gw-e2d226bba4b2445c9e29fa7f8216****',
                        ),
                        'RouteId' => 
                        array (
                          'description' => '路由ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '52853',
                        ),
                        'RouteName' => 
                        array (
                          'description' => '路由名称。',
                          'type' => 'string',
                          'example' => 'routeName',
                        ),
                        'MaxConcurrency' => 
                        array (
                          'description' => '总体并发数阈值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'LimitMode' => 
                        array (
                          'description' => '阈值转化类型。

0：单机。

1：集群。

2：单机转集群。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'BehaviorType' => 
                        array (
                          'description' => 'Web fallback行为类型。

0：返回指定内容。

1：跳转到指定页面。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'BodyEncoding' => 
                        array (
                          'description' => '编码类型。

0：普通文本。

1：JSON。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ResponseStatusCode' => 
                        array (
                          'description' => 'HTTP状态码。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '429',
                        ),
                        'ResponseContentBody' => 
                        array (
                          'description' => 'HTTP返回文本。',
                          'type' => 'string',
                          'example' => 'text',
                        ),
                        'ResponseRedirectUrl' => 
                        array (
                          'description' => '跳转地址。',
                          'type' => 'string',
                          'example' => 'www.******.com',
                        ),
                        'ResponseAdditionalHeaders' => 
                        array (
                          'description' => '自定义header，输入为key-value键值对',
                          'type' => 'string',
                          'example' => 'key=value',
                        ),
                        'Enable' => 
                        array (
                          'description' => '是否开启。

0：不开启。

1：开启。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'IdList' => 
                        array (
                          'title' => '筛选规则id',
                          'description' => '筛选规则id',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '规则ID。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '358',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6F025D43-8632-5716-AE9B-7EDDF16C****\\",\\n  \\"Data\\": {\\n    \\"PageNumber\\": 1,\\n    \\"TotalSize\\": 1,\\n    \\"PageSize\\": 100,\\n    \\"Result\\": [\\n      {\\n        \\"Id\\": 358,\\n        \\"GatewayId\\": 14407,\\n        \\"GatewayUniqueId\\": \\"gw-e2d226bba4b2445c9e29fa7f8216****\\",\\n        \\"RouteId\\": 52853,\\n        \\"RouteName\\": \\"routeName\\",\\n        \\"MaxConcurrency\\": 100,\\n        \\"LimitMode\\": 0,\\n        \\"BehaviorType\\": 0,\\n        \\"BodyEncoding\\": 0,\\n        \\"ResponseStatusCode\\": 429,\\n        \\"ResponseContentBody\\": \\"text\\",\\n        \\"ResponseRedirectUrl\\": \\"www.******.com\\",\\n        \\"ResponseAdditionalHeaders\\": \\"key:value\\",\\n        \\"Enable\\": 0,\\n        \\"IdList\\": [\\n          358\\n        ]\\n      }\\n    ],\\n    \\"Results\\": [\\n      {\\n        \\"Id\\": 358,\\n        \\"GatewayId\\": 14407,\\n        \\"GatewayUniqueId\\": \\"gw-e2d226bba4b2445c9e29fa7f8216****\\",\\n        \\"RouteId\\": 52853,\\n        \\"RouteName\\": \\"routeName\\",\\n        \\"MaxConcurrency\\": 100,\\n        \\"LimitMode\\": 1,\\n        \\"BehaviorType\\": 0,\\n        \\"BodyEncoding\\": 0,\\n        \\"ResponseStatusCode\\": 429,\\n        \\"ResponseContentBody\\": \\"text\\",\\n        \\"ResponseRedirectUrl\\": \\"www.******.com\\",\\n        \\"ResponseAdditionalHeaders\\": \\"key=value\\",\\n        \\"Enable\\": 0,\\n        \\"IdList\\": [\\n          358\\n        ]\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询网关并发规则',
    ),
    'QueryNamespace' => 
    array (
      'summary' => '查询MSE命名空间。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '操作的地域',
            'description' => '操作的地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要搜索的命名空间名字',
            'description' => '要搜索的命名空间名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Message' => 
              array (
                'title' => '错误时的提示信息',
                'description' => '错误时的提示信息。',
                'type' => 'string',
                'example' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'title' => '请求id',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'abcde-fg',
              ),
              'ErrorCode' => 
              array (
                'title' => '错误码。',
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Success' => 
              array (
                'title' => '请求是否成功',
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'title' => '返回的数据',
                'description' => '返回的数据。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Region' => 
                    array (
                      'title' => '命名空间所属的地域',
                      'description' => '命名空间所属的地域。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'Namespace' => 
                    array (
                      'title' => '命名空间名字',
                      'description' => '命名空间名字。',
                      'type' => 'string',
                      'example' => 'default',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"abcde-fg\\",\\n  \\"ErrorCode\\": \\"Success\\",\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"Region\\": \\"cn-hangzhou\\",\\n      \\"Namespace\\": \\"default\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询MSE命名空间',
    ),
    'DeleteNamespace' => 
    array (
      'summary' => '删除MSE命名空间。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '操作的地域',
            'description' => '操作的地域。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要删除的MSE命名空间名称',
            'description' => '要删除的MSE命名空间名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'prod',
            'maxLength' => 64,
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HttpStatusCode' => 
              array (
                'title' => 'HTTP状态码',
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'title' => '请求信息，错误排查用',
                'description' => '请求信息，错误排查用。',
                'type' => 'string',
                'example' => '请求处理成功',
                'default' => '请求处理成功',
              ),
              'RequestId' => 
              array (
                'title' => '请求Id',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'abcde-efg',
              ),
              'Success' => 
              array (
                'title' => '是否成功',
                'description' => '是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorCode' => 
              array (
                'title' => '错误码。',
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'NO_PERMISSION',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"请求处理成功\\",\\n  \\"RequestId\\": \\"abcde-efg\\",\\n  \\"Success\\": true,\\n  \\"ErrorCode\\": \\"NO_PERMISSION\\"\\n}","type":"json"}]',
      'title' => '删除MSE命名空间',
    ),
    'GetApplicationInstanceList' => 
    array (
      'summary' => '查询微服务应用实例列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用所属的MSE命名空间。',
            'description' => '应用所属的MSE命名空间。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'maxLength' => 64,
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名字。',
            'description' => '应用名字。',
            'type' => 'string',
            'required' => false,
            'example' => 'example-app',
            'maxLength' => 64,
          ),
        ),
        2 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用Id。',
            'description' => '应用Id。',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'docRequired' => true,
            'example' => 'abcde@12345',
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '节点标签。',
            'description' => '节点标签。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'gray',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '第几页。从1开始。',
            'description' => '第几页。从1开始。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页大小。',
            'description' => '每页大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '20',
            'default' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'Region',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '所在地域。',
            'description' => '所在地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        7 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Data' => 
              array (
                'title' => '返回数据',
                'description' => '返回数据',
                'type' => 'object',
                'properties' => 
                array (
                  'Result' => 
                  array (
                    'title' => '节点列表。',
                    'description' => '节点列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'title' => '微服务治理节点列表。',
                      'description' => '微服务治理节点列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Ip' => 
                        array (
                          'title' => '节点ip。',
                          'description' => '节点ip。',
                          'type' => 'string',
                          'example' => '10.1.2.3',
                        ),
                        'Tags' => 
                        array (
                          'title' => '节点标签。',
                          'description' => '节点标签。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'title' => '节点标签结构。',
                            'description' => '节点标签结构。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Tag' => 
                              array (
                                'title' => '标签值。',
                                'description' => '标签值。',
                                'type' => 'string',
                                'example' => 'gray',
                              ),
                            ),
                          ),
                        ),
                        'Port' => 
                        array (
                          'title' => '应用端口。',
                          'description' => '应用端口。',
                          'type' => 'string',
                          'example' => '8080',
                        ),
                      ),
                    ),
                  ),
                  'TotalSize' => 
                  array (
                    'title' => '总共有多少个节点。',
                    'description' => '总共有多少个节点。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'PageNumber' => 
                  array (
                    'title' => '第几页，从1开始。',
                    'description' => '第几页，从1开始。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'title' => '每页多少个。',
                    'description' => '每页多少个。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Data\\": {\\n    \\"Result\\": [\\n      {\\n        \\"Ip\\": \\"10.1.2.3\\",\\n        \\"Tags\\": [\\n          {\\n            \\"Tag\\": \\"gray\\"\\n          }\\n        ],\\n        \\"Port\\": \\"8080\\"\\n      }\\n    ],\\n    \\"TotalSize\\": 100,\\n    \\"PageNumber\\": 1,\\n    \\"PageSize\\": 10\\n  }\\n}","type":"json"}]',
      'title' => '获取应用实例信息',
    ),
    'CloneSentinelRuleFromAhas' => 
    array (
      'summary' => '从AHAS侧复制规则',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'msc',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '209225',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREmseHJJ9Z1',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '命名空间',
            'description' => '命名空间',
            'type' => 'string',
            'required' => true,
            'example' => 'default',
          ),
        ),
        1 => 
        array (
          'name' => 'AppName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '应用名称',
            'description' => '应用名称',
            'type' => 'string',
            'required' => false,
            'example' => 'spring-cloud-a',
          ),
        ),
        2 => 
        array (
          'name' => 'AhasNamespace',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'AHAS侧命名空间（环境）。',
            'description' => 'AHAS侧命名空间（环境）。',
            'type' => 'string',
            'required' => true,
            'example' => 'default',
          ),
        ),
        3 => 
        array (
          'name' => 'IsAHASPublicRegion',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'AHAS侧是否为公网地域。',
            'description' => 'AHAS侧是否为公网地域。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<Map<String, List<String>>>',
            'description' => 'RestResult<Map<String, List<String>>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求Id。',
                'description' => '请求Id。',
                'type' => 'string',
                'example' => 'EE5C32A1-BC0E-4B79-817C-103E4EDF****',
              ),
              'Data' => 
              array (
                'title' => '返回结果。',
                'description' => '返回结果。',
                'type' => 'object',
                'additionalProperties' => 
                array (
                  'title' => '执行结果。',
                  'description' => '执行结果。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'type' => 'string',
                    'example' => '"完成 AHAS prod:spring-cloud-b -> MSE prod:spring-cloud-b 应用的流控规则迁移。AHAS 侧总规则数: 14 ；成功迁移的规则数: 7 ；完成迁移但存在异常的规则数: 2 ；迁移失败的规则数: 5"',
                    'description' => '执行结果详情',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"EE5C32A1-BC0E-4B79-817C-103E4EDF****\\",\\n  \\"Data\\": {\\n    \\"key\\": [\\n      \\"\\\\\\"完成 AHAS prod:spring-cloud-b -> MSE prod:spring-cloud-b 应用的流控规则迁移。AHAS 侧总规则数: 14 ；成功迁移的规则数: 7 ；完成迁移但存在异常的规则数: 2 ；迁移失败的规则数: 5\\\\\\"\\"\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => 'AHAS规则迁移',
    ),
    'EnableProxyProtocol' => 
    array (
      'summary' => '开启Proxy协议。如果网关入口流量使用NLB接入，如果不开启则无法获取客户端的真实IP，开启后对于非Proxy协议请求没有影响。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'tags' => 
      array (
        0 => 'gateway',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GatewayUniqueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关唯一ID',
            'type' => 'string',
            'required' => true,
            'example' => 'gw-c9bc5afd61014165bd58f621b491*****',
          ),
        ),
        1 => 
        array (
          'name' => 'EnableProxyProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否使用ProxyProtocol方式开启保持客户端源IP功能，取值：

- **true**：开启保持客户端源IP功能。

- **false**（默认值）：不开启保持客户端源IP功能。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'true',
          ),
        ),
        2 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'description' => '返回结果显示的语言。取值：zh（默认值）：中文，en：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'RestResult<List<GatewayPlugin>>',
            'description' => 'RestResult<List<GatewayPlugin>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '316F5F64-F73D-42DC-8632-01E308B6****',
              ),
              'Success' => 
              array (
                'description' => '请求结果，取值如下：
- `true`：请求成功。
- `false`：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'title' => 'code仅仅用来和success同步',
                'description' => 'code仅仅用来和success同步',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息。',
                'type' => 'string',
                'example' => 'OK',
              ),
              'DynamicCode' => 
              array (
                'title' => '动态错误信息中的占位符',
                'description' => '动态错误信息中的占位符',
                'type' => 'string',
                'example' => 'code',
              ),
              'DynamicMessage' => 
              array (
                'description' => '动态错误信息，用于替换返回参数**ErrMessage**错误信息中的 **%s**。
> 如果**ErrMessage**返回**The Value of Input Parameter %s is not valid**，且**DynamicMessage**返回**DtsJobId**，则代表所传入的请求参数**DtsJobId**不合法。',
                'type' => 'string',
                'example' => 'The specified parameter is invalid.',
              ),
              'Data' => 
              array (
                'description' => '是否操作成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalRequest',
            'errorMessage' => 'Invalid request:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Parameter error:%s',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'You are not authorized to perform this operation:%s',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotFound',
            'errorMessage' => 'Not found:%s',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Console error. Try again later:%s',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"316F5F64-F73D-42DC-8632-01E308B6****\\",\\n  \\"Success\\": true,\\n  \\"Code\\": 200,\\n  \\"ErrorCode\\": \\"Success\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Message\\": \\"OK\\",\\n  \\"DynamicCode\\": \\"code\\",\\n  \\"DynamicMessage\\": \\"The specified parameter is invalid.\\",\\n  \\"Data\\": true\\n}","type":"json"}]',
      'title' => '开启Proxy协议',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-qingdao',
      'endpoint' => 'mse.cn-qingdao.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'cn-beijing',
      'endpoint' => 'mse.cn-beijing.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'cn-zhangjiakou',
      'endpoint' => 'mse.cn-zhangjiakou.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'cn-zhengzhou-jva',
      'endpoint' => 'mse.cn-zhengzhou-jva.aliyuncs.com',
    ),
    4 => 
    array (
      'regionId' => 'cn-huhehaote',
      'endpoint' => 'mse.cn-huhehaote.aliyuncs.com',
    ),
    5 => 
    array (
      'regionId' => 'cn-wulanchabu',
      'endpoint' => 'mse.cn-wulanchabu.aliyuncs.com',
    ),
    6 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'mse.cn-hangzhou.aliyuncs.com',
    ),
    7 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'mse.cn-shanghai.aliyuncs.com',
    ),
    8 => 
    array (
      'regionId' => 'cn-fuzhou',
      'endpoint' => 'mse.cn-fuzhou.aliyuncs.com',
    ),
    9 => 
    array (
      'regionId' => 'cn-shenzhen',
      'endpoint' => 'mse.cn-shenzhen.aliyuncs.com',
    ),
    10 => 
    array (
      'regionId' => 'cn-heyuan',
      'endpoint' => 'mse.cn-heyuan.aliyuncs.com',
    ),
    11 => 
    array (
      'regionId' => 'cn-guangzhou',
      'endpoint' => 'mse.cn-guangzhou.aliyuncs.com',
    ),
    12 => 
    array (
      'regionId' => 'cn-chengdu',
      'endpoint' => 'mse.cn-chengdu.aliyuncs.com',
    ),
    13 => 
    array (
      'regionId' => 'cn-hongkong',
      'endpoint' => 'mse.cn-hongkong.aliyuncs.com',
    ),
    14 => 
    array (
      'regionId' => 'ap-northeast-1',
      'endpoint' => 'mse.ap-northeast-1.aliyuncs.com',
    ),
    15 => 
    array (
      'regionId' => 'ap-northeast-2',
      'endpoint' => 'mse.ap-northeast-2.aliyuncs.com',
    ),
    16 => 
    array (
      'regionId' => 'ap-southeast-1',
      'endpoint' => 'mse.ap-southeast-1.aliyuncs.com',
    ),
    17 => 
    array (
      'regionId' => 'ap-southeast-2',
      'endpoint' => 'mse.ap-southeast-2.aliyuncs.com',
    ),
    18 => 
    array (
      'regionId' => 'ap-southeast-3',
      'endpoint' => 'mse.ap-southeast-3.aliyuncs.com',
    ),
    19 => 
    array (
      'regionId' => 'ap-southeast-5',
      'endpoint' => 'mse.ap-southeast-5.aliyuncs.com',
    ),
    20 => 
    array (
      'regionId' => 'ap-southeast-6',
      'endpoint' => 'mse.ap-southeast-6.aliyuncs.com',
    ),
    21 => 
    array (
      'regionId' => 'us-east-1',
      'endpoint' => 'mse.us-east-1.aliyuncs.com',
    ),
    22 => 
    array (
      'regionId' => 'us-west-1',
      'endpoint' => 'mse.us-west-1.aliyuncs.com',
    ),
    23 => 
    array (
      'regionId' => 'eu-west-1',
      'endpoint' => 'mse.eu-west-1.aliyuncs.com',
    ),
    24 => 
    array (
      'regionId' => 'eu-central-1',
      'endpoint' => 'mse.eu-central-1.aliyuncs.com',
    ),
    25 => 
    array (
      'regionId' => 'ap-south-1',
      'endpoint' => 'mse.ap-south-1.aliyuncs.com',
    ),
    26 => 
    array (
      'regionId' => 'me-east-1',
      'endpoint' => 'mse.me-east-1.aliyuncs.com',
    ),
    27 => 
    array (
      'regionId' => 'cn-hangzhou-finance',
      'endpoint' => 'mse.cn-hangzhou-finance.aliyuncs.com',
    ),
    28 => 
    array (
      'regionId' => 'cn-shanghai-finance-1',
      'endpoint' => 'mse.cn-shanghai-finance-1.aliyuncs.com',
    ),
    29 => 
    array (
      'regionId' => 'cn-shenzhen-finance-1',
      'endpoint' => 'mse.cn-shenzhen-finance-1.aliyuncs.com',
    ),
    30 => 
    array (
      'regionId' => 'ap-southeast-7',
      'endpoint' => 'mse.ap-southeast-7.aliyuncs.com',
    ),
    31 => 
    array (
      'regionId' => 'cn-beijing-finance-1',
      'endpoint' => 'mse.cn-beijing-finance-1.aliyuncs.com',
    ),
    32 => 
    array (
      'regionId' => 'me-central-1',
      'endpoint' => 'mse.me-central-1.aliyuncs.com',
    ),
  ),
);