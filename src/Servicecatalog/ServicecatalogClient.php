<?php

declare(strict_types=1);

namespace Dew\Acs\Servicecatalog;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result getProductAsEndUser(array $arguments = [])
 * @method \Http\Promise\Promise getProductAsEndUserAsync($arguments = [])
 * @method \Dew\Acs\Result listProductsAsEndUser(array $arguments = [])
 * @method \Http\Promise\Promise listProductsAsEndUserAsync($arguments = [])
 * @method \Dew\Acs\Result listLaunchOptions(array $arguments = [])
 * @method \Http\Promise\Promise listLaunchOptionsAsync($arguments = [])
 * @method \Dew\Acs\Result launchProduct(array $arguments = [])
 * @method \Http\Promise\Promise launchProductAsync($arguments = [])
 * @method \Dew\Acs\Result terminateProvisionedProduct(array $arguments = [])
 * @method \Http\Promise\Promise terminateProvisionedProductAsync($arguments = [])
 * @method \Dew\Acs\Result updateProvisionedProduct(array $arguments = [])
 * @method \Http\Promise\Promise updateProvisionedProductAsync($arguments = [])
 * @method \Dew\Acs\Result createProvisionedProductPlan(array $arguments = [])
 * @method \Http\Promise\Promise createProvisionedProductPlanAsync($arguments = [])
 * @method \Dew\Acs\Result getProvisionedProductPlan(array $arguments = [])
 * @method \Http\Promise\Promise getProvisionedProductPlanAsync($arguments = [])
 * @method \Dew\Acs\Result listProvisionedProductPlans(array $arguments = [])
 * @method \Http\Promise\Promise listProvisionedProductPlansAsync($arguments = [])
 * @method \Dew\Acs\Result cancelProvisionedProductPlan(array $arguments = [])
 * @method \Http\Promise\Promise cancelProvisionedProductPlanAsync($arguments = [])
 * @method \Dew\Acs\Result updateProvisionedProductPlan(array $arguments = [])
 * @method \Http\Promise\Promise updateProvisionedProductPlanAsync($arguments = [])
 * @method \Dew\Acs\Result approveProvisionedProductPlan(array $arguments = [])
 * @method \Http\Promise\Promise approveProvisionedProductPlanAsync($arguments = [])
 * @method \Dew\Acs\Result listProvisionedProductPlanApprovers(array $arguments = [])
 * @method \Http\Promise\Promise listProvisionedProductPlanApproversAsync($arguments = [])
 * @method \Dew\Acs\Result executeProvisionedProductPlan(array $arguments = [])
 * @method \Http\Promise\Promise executeProvisionedProductPlanAsync($arguments = [])
 * @method \Dew\Acs\Result deleteProvisionedProductPlan(array $arguments = [])
 * @method \Http\Promise\Promise deleteProvisionedProductPlanAsync($arguments = [])
 * @method \Dew\Acs\Result getProvisionedProduct(array $arguments = [])
 * @method \Http\Promise\Promise getProvisionedProductAsync($arguments = [])
 * @method \Dew\Acs\Result listProvisionedProducts(array $arguments = [])
 * @method \Http\Promise\Promise listProvisionedProductsAsync($arguments = [])
 * @method \Dew\Acs\Result getTask(array $arguments = [])
 * @method \Http\Promise\Promise getTaskAsync($arguments = [])
 * @method \Dew\Acs\Result listTasks(array $arguments = [])
 * @method \Http\Promise\Promise listTasksAsync($arguments = [])
 * @method \Dew\Acs\Result copyProduct(array $arguments = [])
 * @method \Http\Promise\Promise copyProductAsync($arguments = [])
 * @method \Dew\Acs\Result createProduct(array $arguments = [])
 * @method \Http\Promise\Promise createProductAsync($arguments = [])
 * @method \Dew\Acs\Result deleteProduct(array $arguments = [])
 * @method \Http\Promise\Promise deleteProductAsync($arguments = [])
 * @method \Dew\Acs\Result updateProduct(array $arguments = [])
 * @method \Http\Promise\Promise updateProductAsync($arguments = [])
 * @method \Dew\Acs\Result getProductAsAdmin(array $arguments = [])
 * @method \Http\Promise\Promise getProductAsAdminAsync($arguments = [])
 * @method \Dew\Acs\Result listProductsAsAdmin(array $arguments = [])
 * @method \Http\Promise\Promise listProductsAsAdminAsync($arguments = [])
 * @method \Dew\Acs\Result createProductVersion(array $arguments = [])
 * @method \Http\Promise\Promise createProductVersionAsync($arguments = [])
 * @method \Dew\Acs\Result deleteProductVersion(array $arguments = [])
 * @method \Http\Promise\Promise deleteProductVersionAsync($arguments = [])
 * @method \Dew\Acs\Result updateProductVersion(array $arguments = [])
 * @method \Http\Promise\Promise updateProductVersionAsync($arguments = [])
 * @method \Dew\Acs\Result getProductVersion(array $arguments = [])
 * @method \Http\Promise\Promise getProductVersionAsync($arguments = [])
 * @method \Dew\Acs\Result listProductVersions(array $arguments = [])
 * @method \Http\Promise\Promise listProductVersionsAsync($arguments = [])
 * @method \Dew\Acs\Result createTemplate(array $arguments = [])
 * @method \Http\Promise\Promise createTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result getTemplate(array $arguments = [])
 * @method \Http\Promise\Promise getTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result createPortfolio(array $arguments = [])
 * @method \Http\Promise\Promise createPortfolioAsync($arguments = [])
 * @method \Dew\Acs\Result associateProductWithPortfolio(array $arguments = [])
 * @method \Http\Promise\Promise associateProductWithPortfolioAsync($arguments = [])
 * @method \Dew\Acs\Result deletePortfolio(array $arguments = [])
 * @method \Http\Promise\Promise deletePortfolioAsync($arguments = [])
 * @method \Dew\Acs\Result disassociateProductFromPortfolio(array $arguments = [])
 * @method \Http\Promise\Promise disassociateProductFromPortfolioAsync($arguments = [])
 * @method \Dew\Acs\Result updatePortfolio(array $arguments = [])
 * @method \Http\Promise\Promise updatePortfolioAsync($arguments = [])
 * @method \Dew\Acs\Result getPortfolio(array $arguments = [])
 * @method \Http\Promise\Promise getPortfolioAsync($arguments = [])
 * @method \Dew\Acs\Result listPortfolios(array $arguments = [])
 * @method \Http\Promise\Promise listPortfoliosAsync($arguments = [])
 * @method \Dew\Acs\Result createConstraint(array $arguments = [])
 * @method \Http\Promise\Promise createConstraintAsync($arguments = [])
 * @method \Dew\Acs\Result deleteConstraint(array $arguments = [])
 * @method \Http\Promise\Promise deleteConstraintAsync($arguments = [])
 * @method \Dew\Acs\Result updateConstraint(array $arguments = [])
 * @method \Http\Promise\Promise updateConstraintAsync($arguments = [])
 * @method \Dew\Acs\Result getConstraint(array $arguments = [])
 * @method \Http\Promise\Promise getConstraintAsync($arguments = [])
 * @method \Dew\Acs\Result associatePrincipalWithPortfolio(array $arguments = [])
 * @method \Http\Promise\Promise associatePrincipalWithPortfolioAsync($arguments = [])
 * @method \Dew\Acs\Result disassociatePrincipalFromPortfolio(array $arguments = [])
 * @method \Http\Promise\Promise disassociatePrincipalFromPortfolioAsync($arguments = [])
 * @method \Dew\Acs\Result listPrincipals(array $arguments = [])
 * @method \Http\Promise\Promise listPrincipalsAsync($arguments = [])
 * @method \Dew\Acs\Result listRegions(array $arguments = [])
 * @method \Http\Promise\Promise listRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result getTagOption(array $arguments = [])
 * @method \Http\Promise\Promise getTagOptionAsync($arguments = [])
 * @method \Dew\Acs\Result disAssociateTagOptionFromResource(array $arguments = [])
 * @method \Http\Promise\Promise disAssociateTagOptionFromResourceAsync($arguments = [])
 * @method \Dew\Acs\Result listResourcesForTagOption(array $arguments = [])
 * @method \Http\Promise\Promise listResourcesForTagOptionAsync($arguments = [])
 * @method \Dew\Acs\Result updateTagOption(array $arguments = [])
 * @method \Http\Promise\Promise updateTagOptionAsync($arguments = [])
 * @method \Dew\Acs\Result listTagOptions(array $arguments = [])
 * @method \Http\Promise\Promise listTagOptionsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTagOption(array $arguments = [])
 * @method \Http\Promise\Promise deleteTagOptionAsync($arguments = [])
 * @method \Dew\Acs\Result createTagOption(array $arguments = [])
 * @method \Http\Promise\Promise createTagOptionAsync($arguments = [])
 * @method \Dew\Acs\Result associateTagOptionWithResource(array $arguments = [])
 * @method \Http\Promise\Promise associateTagOptionWithResourceAsync($arguments = [])
 */
final class ServicecatalogClient extends AcsClient
{
    //
}
