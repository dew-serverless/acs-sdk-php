<?php

declare(strict_types=1);

namespace Dew\Acs\Xtee;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result recallRuleAudit(array $arguments = [])
 * @method \Http\Promise\Promise recallRuleAuditAsync($arguments = [])
 * @method \Dew\Acs\Result describeAuditDetails(array $arguments = [])
 * @method \Http\Promise\Promise describeAuditDetailsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyRulePriority(array $arguments = [])
 * @method \Http\Promise\Promise modifyRulePriorityAsync($arguments = [])
 * @method \Dew\Acs\Result updateRule(array $arguments = [])
 * @method \Http\Promise\Promise updateRuleAsync($arguments = [])
 * @method \Dew\Acs\Result updateAudit(array $arguments = [])
 * @method \Http\Promise\Promise updateAuditAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createRule(array $arguments = [])
 * @method \Http\Promise\Promise createRuleAsync($arguments = [])
 * @method \Dew\Acs\Result modifyRuleStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyRuleStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeUserInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeRulePageList(array $arguments = [])
 * @method \Http\Promise\Promise describeRulePageListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAuditPageList(array $arguments = [])
 * @method \Http\Promise\Promise describeAuditPageListAsync($arguments = [])
 * @method \Dew\Acs\Result describeRuleVersionList(array $arguments = [])
 * @method \Http\Promise\Promise describeRuleVersionListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAuditConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeAuditConfigAsync($arguments = [])
 * @method \Dew\Acs\Result updateRuleBase(array $arguments = [])
 * @method \Http\Promise\Promise updateRuleBaseAsync($arguments = [])
 * @method \Dew\Acs\Result describeRuleDetailByRuleId(array $arguments = [])
 * @method \Http\Promise\Promise describeRuleDetailByRuleIdAsync($arguments = [])
 * @method \Dew\Acs\Result expressionTest(array $arguments = [])
 * @method \Http\Promise\Promise expressionTestAsync($arguments = [])
 * @method \Dew\Acs\Result describeAllRootVariable(array $arguments = [])
 * @method \Http\Promise\Promise describeAllRootVariableAsync($arguments = [])
 * @method \Dew\Acs\Result describeDetailStart(array $arguments = [])
 * @method \Http\Promise\Promise describeDetailStartAsync($arguments = [])
 * @method \Dew\Acs\Result describeServiceAppKey(array $arguments = [])
 * @method \Http\Promise\Promise describeServiceAppKeyAsync($arguments = [])
 * @method \Dew\Acs\Result describeBasicStart(array $arguments = [])
 * @method \Http\Promise\Promise describeBasicStartAsync($arguments = [])
 * @method \Dew\Acs\Result deleteQueryVariable(array $arguments = [])
 * @method \Http\Promise\Promise deleteQueryVariableAsync($arguments = [])
 * @method \Dew\Acs\Result describeQueryVariableDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeQueryVariableDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeAllDataSource(array $arguments = [])
 * @method \Http\Promise\Promise describeAllDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataSourceFields(array $arguments = [])
 * @method \Http\Promise\Promise describeDataSourceFieldsAsync($arguments = [])
 * @method \Dew\Acs\Result switchQueryVariable(array $arguments = [])
 * @method \Http\Promise\Promise switchQueryVariableAsync($arguments = [])
 * @method \Dew\Acs\Result describeQueryVariablePageList(array $arguments = [])
 * @method \Http\Promise\Promise describeQueryVariablePageListAsync($arguments = [])
 * @method \Dew\Acs\Result updateQueryVariable(array $arguments = [])
 * @method \Http\Promise\Promise updateQueryVariableAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataSourcePageList(array $arguments = [])
 * @method \Http\Promise\Promise describeDataSourcePageListAsync($arguments = [])
 * @method \Dew\Acs\Result createQueryVariable(array $arguments = [])
 * @method \Http\Promise\Promise createQueryVariableAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataSourceDataDownloadUrl(array $arguments = [])
 * @method \Http\Promise\Promise describeDataSourceDataDownloadUrlAsync($arguments = [])
 * @method \Dew\Acs\Result createDataSource(array $arguments = [])
 * @method \Http\Promise\Promise createDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result updateDataSource(array $arguments = [])
 * @method \Http\Promise\Promise updateDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result describeOssPolicy(array $arguments = [])
 * @method \Http\Promise\Promise describeOssPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDataSource(array $arguments = [])
 * @method \Http\Promise\Promise deleteDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result createAnalysisConditionFavorite(array $arguments = [])
 * @method \Http\Promise\Promise createAnalysisConditionFavoriteAsync($arguments = [])
 * @method \Dew\Acs\Result createAnalysisExportTask(array $arguments = [])
 * @method \Http\Promise\Promise createAnalysisExportTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAnalysisConditionFavorite(array $arguments = [])
 * @method \Http\Promise\Promise deleteAnalysisConditionFavoriteAsync($arguments = [])
 * @method \Dew\Acs\Result describeAdvanceSearchPageList(array $arguments = [])
 * @method \Http\Promise\Promise describeAdvanceSearchPageListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAnalysisColumnFieldList(array $arguments = [])
 * @method \Http\Promise\Promise describeAnalysisColumnFieldListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAnalysisColumnList(array $arguments = [])
 * @method \Http\Promise\Promise describeAnalysisColumnListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAnalysisConditionFavoriteList(array $arguments = [])
 * @method \Http\Promise\Promise describeAnalysisConditionFavoriteListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAnalysisExportTaskDownloadUrl(array $arguments = [])
 * @method \Http\Promise\Promise describeAnalysisExportTaskDownloadUrlAsync($arguments = [])
 * @method \Dew\Acs\Result describeBasicSearchPageList(array $arguments = [])
 * @method \Http\Promise\Promise describeBasicSearchPageListAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventDetailByRequestId(array $arguments = [])
 * @method \Http\Promise\Promise describeEventDetailByRequestIdAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventVariableList(array $arguments = [])
 * @method \Http\Promise\Promise describeEventVariableListAsync($arguments = [])
 * @method \Dew\Acs\Result describeRuleListByEventCodesList(array $arguments = [])
 * @method \Http\Promise\Promise describeRuleListByEventCodesListAsync($arguments = [])
 * @method \Dew\Acs\Result saveAnalysisColumn(array $arguments = [])
 * @method \Http\Promise\Promise saveAnalysisColumnAsync($arguments = [])
 * @method \Dew\Acs\Result updateAnalysisConditionFavorite(array $arguments = [])
 * @method \Http\Promise\Promise updateAnalysisConditionFavoriteAsync($arguments = [])
 * @method \Dew\Acs\Result describeAdvanceSearchLeftVariableList(array $arguments = [])
 * @method \Http\Promise\Promise describeAdvanceSearchLeftVariableListAsync($arguments = [])
 * @method \Dew\Acs\Result describeOperatorListByType(array $arguments = [])
 * @method \Http\Promise\Promise describeOperatorListByTypeAsync($arguments = [])
 * @method \Dew\Acs\Result describeAuthRulePageList(array $arguments = [])
 * @method \Http\Promise\Promise describeAuthRulePageListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAuthSceneList(array $arguments = [])
 * @method \Http\Promise\Promise describeAuthSceneListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAuthScenePageList(array $arguments = [])
 * @method \Http\Promise\Promise describeAuthScenePageListAsync($arguments = [])
 * @method \Dew\Acs\Result queryAuthRuleDetailByRuleId(array $arguments = [])
 * @method \Http\Promise\Promise queryAuthRuleDetailByRuleIdAsync($arguments = [])
 * @method \Dew\Acs\Result updateAuthRule(array $arguments = [])
 * @method \Http\Promise\Promise updateAuthRuleAsync($arguments = [])
 * @method \Dew\Acs\Result describeHitRuleTrend(array $arguments = [])
 * @method \Http\Promise\Promise describeHitRuleTrendAsync($arguments = [])
 * @method \Dew\Acs\Result describeDecisionResultTrend(array $arguments = [])
 * @method \Http\Promise\Promise describeDecisionResultTrendAsync($arguments = [])
 * @method \Dew\Acs\Result describeHighRiskPieChart(array $arguments = [])
 * @method \Http\Promise\Promise describeHighRiskPieChartAsync($arguments = [])
 * @method \Dew\Acs\Result describeDecisionResultFluctuation(array $arguments = [])
 * @method \Http\Promise\Promise describeDecisionResultFluctuationAsync($arguments = [])
 * @method \Dew\Acs\Result describeHitRuleFluctuation(array $arguments = [])
 * @method \Http\Promise\Promise describeHitRuleFluctuationAsync($arguments = [])
 * @method \Dew\Acs\Result describeTagsFluctuation(array $arguments = [])
 * @method \Http\Promise\Promise describeTagsFluctuationAsync($arguments = [])
 * @method \Dew\Acs\Result describeResultCount(array $arguments = [])
 * @method \Http\Promise\Promise describeResultCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeRequestPeakReport(array $arguments = [])
 * @method \Http\Promise\Promise describeRequestPeakReportAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventTotalCountReport(array $arguments = [])
 * @method \Http\Promise\Promise describeEventTotalCountReportAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventResultBarChart(array $arguments = [])
 * @method \Http\Promise\Promise describeEventResultBarChartAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventResultList(array $arguments = [])
 * @method \Http\Promise\Promise describeEventResultListAsync($arguments = [])
 * @method \Dew\Acs\Result describeRuleBarChart(array $arguments = [])
 * @method \Http\Promise\Promise describeRuleBarChartAsync($arguments = [])
 * @method \Dew\Acs\Result describeAvgExecuteCostReport(array $arguments = [])
 * @method \Http\Promise\Promise describeAvgExecuteCostReportAsync($arguments = [])
 * @method \Dew\Acs\Result describeTagsTrend(array $arguments = [])
 * @method \Http\Promise\Promise describeTagsTrendAsync($arguments = [])
 * @method \Dew\Acs\Result describeRiskLineChart(array $arguments = [])
 * @method \Http\Promise\Promise describeRiskLineChartAsync($arguments = [])
 * @method \Dew\Acs\Result describeTagsBarChart(array $arguments = [])
 * @method \Http\Promise\Promise describeTagsBarChartAsync($arguments = [])
 * @method \Dew\Acs\Result deleteByPassShuntEvent(array $arguments = [])
 * @method \Http\Promise\Promise deleteByPassShuntEventAsync($arguments = [])
 * @method \Dew\Acs\Result describeByPassShuntEvent(array $arguments = [])
 * @method \Http\Promise\Promise describeByPassShuntEventAsync($arguments = [])
 * @method \Dew\Acs\Result describeHitRuleList(array $arguments = [])
 * @method \Http\Promise\Promise describeHitRuleListAsync($arguments = [])
 * @method \Dew\Acs\Result describeScoreSectionNumLineChart(array $arguments = [])
 * @method \Http\Promise\Promise describeScoreSectionNumLineChartAsync($arguments = [])
 * @method \Dew\Acs\Result describeScoreSectionPieChart(array $arguments = [])
 * @method \Http\Promise\Promise describeScoreSectionPieChartAsync($arguments = [])
 * @method \Dew\Acs\Result describeScoreSectionRatioLineChart(array $arguments = [])
 * @method \Http\Promise\Promise describeScoreSectionRatioLineChartAsync($arguments = [])
 * @method \Dew\Acs\Result describeTagsNumLineChart(array $arguments = [])
 * @method \Http\Promise\Promise describeTagsNumLineChartAsync($arguments = [])
 * @method \Dew\Acs\Result describeTagsRatioLineChart(array $arguments = [])
 * @method \Http\Promise\Promise describeTagsRatioLineChartAsync($arguments = [])
 * @method \Dew\Acs\Result saveByPassOrShuntEvent(array $arguments = [])
 * @method \Http\Promise\Promise saveByPassOrShuntEventAsync($arguments = [])
 * @method \Dew\Acs\Result startOrStopByPassShuntEvent(array $arguments = [])
 * @method \Http\Promise\Promise startOrStopByPassShuntEventAsync($arguments = [])
 * @method \Dew\Acs\Result switchToOnline(array $arguments = [])
 * @method \Http\Promise\Promise switchToOnlineAsync($arguments = [])
 * @method \Dew\Acs\Result updateByPassShuntEvent(array $arguments = [])
 * @method \Http\Promise\Promise updateByPassShuntEventAsync($arguments = [])
 * @method \Dew\Acs\Result updateSampleBatch(array $arguments = [])
 * @method \Http\Promise\Promise updateSampleBatchAsync($arguments = [])
 * @method \Dew\Acs\Result createSample(array $arguments = [])
 * @method \Http\Promise\Promise createSampleAsync($arguments = [])
 * @method \Dew\Acs\Result describeOssAuthStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeOssAuthStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeApi(array $arguments = [])
 * @method \Http\Promise\Promise describeApiAsync($arguments = [])
 * @method \Dew\Acs\Result describeGroupPage(array $arguments = [])
 * @method \Http\Promise\Promise describeGroupPageAsync($arguments = [])
 * @method \Dew\Acs\Result describeSampleList(array $arguments = [])
 * @method \Http\Promise\Promise describeSampleListAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAppKey(array $arguments = [])
 * @method \Http\Promise\Promise modifyAppKeyAsync($arguments = [])
 * @method \Dew\Acs\Result describeRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result describeExcuteNum(array $arguments = [])
 * @method \Http\Promise\Promise describeExcuteNumAsync($arguments = [])
 * @method \Dew\Acs\Result describeGroupConditionList(array $arguments = [])
 * @method \Http\Promise\Promise describeGroupConditionListAsync($arguments = [])
 * @method \Dew\Acs\Result describeApis(array $arguments = [])
 * @method \Http\Promise\Promise describeApisAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSampleBatch(array $arguments = [])
 * @method \Http\Promise\Promise deleteSampleBatchAsync($arguments = [])
 * @method \Dew\Acs\Result describeSafConsole(array $arguments = [])
 * @method \Http\Promise\Promise describeSafConsoleAsync($arguments = [])
 * @method \Dew\Acs\Result describeOssToken(array $arguments = [])
 * @method \Http\Promise\Promise describeOssTokenAsync($arguments = [])
 * @method \Dew\Acs\Result describeApiVariable(array $arguments = [])
 * @method \Http\Promise\Promise describeApiVariableAsync($arguments = [])
 * @method \Dew\Acs\Result describeSampleInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeSampleInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeSampleTagList(array $arguments = [])
 * @method \Http\Promise\Promise describeSampleTagListAsync($arguments = [])
 * @method \Dew\Acs\Result describeMarkPage(array $arguments = [])
 * @method \Http\Promise\Promise describeMarkPageAsync($arguments = [])
 * @method \Dew\Acs\Result describeGroupTrend(array $arguments = [])
 * @method \Http\Promise\Promise describeGroupTrendAsync($arguments = [])
 * @method \Dew\Acs\Result describeGroupStatisticsByToday(array $arguments = [])
 * @method \Http\Promise\Promise describeGroupStatisticsByTodayAsync($arguments = [])
 * @method \Dew\Acs\Result describeGroupAccountPage(array $arguments = [])
 * @method \Http\Promise\Promise describeGroupAccountPageAsync($arguments = [])
 * @method \Dew\Acs\Result describeApiGroups(array $arguments = [])
 * @method \Http\Promise\Promise describeApiGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result describeTemplateDownload(array $arguments = [])
 * @method \Http\Promise\Promise describeTemplateDownloadAsync($arguments = [])
 * @method \Dew\Acs\Result describeExistScene(array $arguments = [])
 * @method \Http\Promise\Promise describeExistSceneAsync($arguments = [])
 * @method \Dew\Acs\Result describeSampleDataList(array $arguments = [])
 * @method \Http\Promise\Promise describeSampleDataListAsync($arguments = [])
 * @method \Dew\Acs\Result importTemplateEvent(array $arguments = [])
 * @method \Http\Promise\Promise importTemplateEventAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecommendVariablesVelocity(array $arguments = [])
 * @method \Http\Promise\Promise describeRecommendVariablesVelocityAsync($arguments = [])
 * @method \Dew\Acs\Result createSampleData(array $arguments = [])
 * @method \Http\Promise\Promise createSampleDataAsync($arguments = [])
 * @method \Dew\Acs\Result stopSimulationTask(array $arguments = [])
 * @method \Http\Promise\Promise stopSimulationTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeSimulationPreditInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeSimulationPreditInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeSampleSceneList(array $arguments = [])
 * @method \Http\Promise\Promise describeSampleSceneListAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSampleData(array $arguments = [])
 * @method \Http\Promise\Promise deleteSampleDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeSampleDemoDownloadUrl(array $arguments = [])
 * @method \Http\Promise\Promise describeSampleDemoDownloadUrlAsync($arguments = [])
 * @method \Dew\Acs\Result describeTaskLogList(array $arguments = [])
 * @method \Http\Promise\Promise describeTaskLogListAsync($arguments = [])
 * @method \Dew\Acs\Result describeSampleDownloadUrl(array $arguments = [])
 * @method \Http\Promise\Promise describeSampleDownloadUrlAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecommendSceneVariables(array $arguments = [])
 * @method \Http\Promise\Promise describeRecommendSceneVariablesAsync($arguments = [])
 * @method \Dew\Acs\Result describeSupportRuleList(array $arguments = [])
 * @method \Http\Promise\Promise describeSupportRuleListAsync($arguments = [])
 * @method \Dew\Acs\Result startSimulationTask(array $arguments = [])
 * @method \Http\Promise\Promise startSimulationTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeSimulationTaskList(array $arguments = [])
 * @method \Http\Promise\Promise describeSimulationTaskListAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventTaskHistory(array $arguments = [])
 * @method \Http\Promise\Promise describeEventTaskHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result createRecommendEventRule(array $arguments = [])
 * @method \Http\Promise\Promise createRecommendEventRuleAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecommendVelocities(array $arguments = [])
 * @method \Http\Promise\Promise describeRecommendVelocitiesAsync($arguments = [])
 * @method \Dew\Acs\Result createSimulationTask(array $arguments = [])
 * @method \Http\Promise\Promise createSimulationTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecommendTaskDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeRecommendTaskDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeOperationLogPageList(array $arguments = [])
 * @method \Http\Promise\Promise describeOperationLogPageListAsync($arguments = [])
 * @method \Dew\Acs\Result describeTemplatePageList(array $arguments = [])
 * @method \Http\Promise\Promise describeTemplatePageListAsync($arguments = [])
 * @method \Dew\Acs\Result createRecommendTask(array $arguments = [])
 * @method \Http\Promise\Promise createRecommendTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeSimulationTaskCount(array $arguments = [])
 * @method \Http\Promise\Promise describeSimulationTaskCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecommendTaskPageList(array $arguments = [])
 * @method \Http\Promise\Promise describeRecommendTaskPageListAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventLogDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeEventLogDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeMenuPermission(array $arguments = [])
 * @method \Http\Promise\Promise describeMenuPermissionAsync($arguments = [])
 * @method \Dew\Acs\Result modifyEventStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyEventStatusAsync($arguments = [])
 * @method \Dew\Acs\Result openConsoleSls(array $arguments = [])
 * @method \Http\Promise\Promise openConsoleSlsAsync($arguments = [])
 * @method \Dew\Acs\Result describeLoanTaskList(array $arguments = [])
 * @method \Http\Promise\Promise describeLoanTaskListAsync($arguments = [])
 * @method \Dew\Acs\Result describeSelectItem(array $arguments = [])
 * @method \Http\Promise\Promise describeSelectItemAsync($arguments = [])
 * @method \Dew\Acs\Result describeSlsUrlConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeSlsUrlConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeMonitorTaskLimit(array $arguments = [])
 * @method \Http\Promise\Promise describeMonitorTaskLimitAsync($arguments = [])
 * @method \Dew\Acs\Result describeSDKDownloadList(array $arguments = [])
 * @method \Http\Promise\Promise describeSDKDownloadListAsync($arguments = [])
 * @method \Dew\Acs\Result checkFieldLimit(array $arguments = [])
 * @method \Http\Promise\Promise checkFieldLimitAsync($arguments = [])
 * @method \Dew\Acs\Result describeLoanExecList(array $arguments = [])
 * @method \Http\Promise\Promise describeLoanExecListAsync($arguments = [])
 * @method \Dew\Acs\Result describeSafTagList(array $arguments = [])
 * @method \Http\Promise\Promise describeSafTagListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAppKeyPage(array $arguments = [])
 * @method \Http\Promise\Promise describeAppKeyPageAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventUploadPolicy(array $arguments = [])
 * @method \Http\Promise\Promise describeEventUploadPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeSafStartSteps(array $arguments = [])
 * @method \Http\Promise\Promise describeSafStartStepsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyEvent(array $arguments = [])
 * @method \Http\Promise\Promise modifyEventAsync($arguments = [])
 * @method \Dew\Acs\Result describeApiNameList(array $arguments = [])
 * @method \Http\Promise\Promise describeApiNameListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAuthStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeAuthStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeSampleUploadPolicy(array $arguments = [])
 * @method \Http\Promise\Promise describeSampleUploadPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeSafOrder(array $arguments = [])
 * @method \Http\Promise\Promise describeSafOrderAsync($arguments = [])
 * @method \Dew\Acs\Result describeApiLimit(array $arguments = [])
 * @method \Http\Promise\Promise describeApiLimitAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventLogPage(array $arguments = [])
 * @method \Http\Promise\Promise describeEventLogPageAsync($arguments = [])
 * @method \Dew\Acs\Result removeEvent(array $arguments = [])
 * @method \Http\Promise\Promise removeEventAsync($arguments = [])
 * @method \Dew\Acs\Result describeDownloadUrl(array $arguments = [])
 * @method \Http\Promise\Promise describeDownloadUrlAsync($arguments = [])
 * @method \Dew\Acs\Result describeRuleHit(array $arguments = [])
 * @method \Http\Promise\Promise describeRuleHitAsync($arguments = [])
 * @method \Dew\Acs\Result describeUsedService(array $arguments = [])
 * @method \Http\Promise\Promise describeUsedServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describeAuthEventNameList(array $arguments = [])
 * @method \Http\Promise\Promise describeAuthEventNameListAsync($arguments = [])
 * @method \Dew\Acs\Result createAppKey(array $arguments = [])
 * @method \Http\Promise\Promise createAppKeyAsync($arguments = [])
 * @method \Dew\Acs\Result describeRequestHit(array $arguments = [])
 * @method \Http\Promise\Promise describeRequestHitAsync($arguments = [])
 * @method \Dew\Acs\Result describeAllEventNameAndCode(array $arguments = [])
 * @method \Http\Promise\Promise describeAllEventNameAndCodeAsync($arguments = [])
 * @method \Dew\Acs\Result createEvent(array $arguments = [])
 * @method \Http\Promise\Promise createEventAsync($arguments = [])
 * @method \Dew\Acs\Result describeSafDeOrder(array $arguments = [])
 * @method \Http\Promise\Promise describeSafDeOrderAsync($arguments = [])
 * @method \Dew\Acs\Result describeRuleSnapshot(array $arguments = [])
 * @method \Http\Promise\Promise describeRuleSnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result describeServiceList(array $arguments = [])
 * @method \Http\Promise\Promise describeServiceListAsync($arguments = [])
 * @method \Dew\Acs\Result describePocTaskList(array $arguments = [])
 * @method \Http\Promise\Promise describePocTaskListAsync($arguments = [])
 * @method \Dew\Acs\Result describeSafStartConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeSafStartConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventCount(array $arguments = [])
 * @method \Http\Promise\Promise describeEventCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventPageList(array $arguments = [])
 * @method \Http\Promise\Promise describeEventPageListAsync($arguments = [])
 * @method \Dew\Acs\Result describeFieldById(array $arguments = [])
 * @method \Http\Promise\Promise describeFieldByIdAsync($arguments = [])
 * @method \Dew\Acs\Result switchExpressionVariable(array $arguments = [])
 * @method \Http\Promise\Promise switchExpressionVariableAsync($arguments = [])
 * @method \Dew\Acs\Result describeFieldPage(array $arguments = [])
 * @method \Http\Promise\Promise describeFieldPageAsync($arguments = [])
 * @method \Dew\Acs\Result checkUsageVariable(array $arguments = [])
 * @method \Http\Promise\Promise checkUsageVariableAsync($arguments = [])
 * @method \Dew\Acs\Result deleteNameList(array $arguments = [])
 * @method \Http\Promise\Promise deleteNameListAsync($arguments = [])
 * @method \Dew\Acs\Result describeExistName(array $arguments = [])
 * @method \Http\Promise\Promise describeExistNameAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustVariablePage(array $arguments = [])
 * @method \Http\Promise\Promise describeCustVariablePageAsync($arguments = [])
 * @method \Dew\Acs\Result bindVariable(array $arguments = [])
 * @method \Http\Promise\Promise bindVariableAsync($arguments = [])
 * @method \Dew\Acs\Result deleteField(array $arguments = [])
 * @method \Http\Promise\Promise deleteFieldAsync($arguments = [])
 * @method \Dew\Acs\Result describeNameListLimit(array $arguments = [])
 * @method \Http\Promise\Promise describeNameListLimitAsync($arguments = [])
 * @method \Dew\Acs\Result operateFavoriteVariable(array $arguments = [])
 * @method \Http\Promise\Promise operateFavoriteVariableAsync($arguments = [])
 * @method \Dew\Acs\Result modifyField(array $arguments = [])
 * @method \Http\Promise\Promise modifyFieldAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventVariableTemplateBind(array $arguments = [])
 * @method \Http\Promise\Promise describeEventVariableTemplateBindAsync($arguments = [])
 * @method \Dew\Acs\Result deleteNameListData(array $arguments = [])
 * @method \Http\Promise\Promise deleteNameListDataAsync($arguments = [])
 * @method \Dew\Acs\Result createExpressionVariable(array $arguments = [])
 * @method \Http\Promise\Promise createExpressionVariableAsync($arguments = [])
 * @method \Dew\Acs\Result describeVariableList(array $arguments = [])
 * @method \Http\Promise\Promise describeVariableListAsync($arguments = [])
 * @method \Dew\Acs\Result describeHasRuleNameByEventCode(array $arguments = [])
 * @method \Http\Promise\Promise describeHasRuleNameByEventCodeAsync($arguments = [])
 * @method \Dew\Acs\Result describeFieldList(array $arguments = [])
 * @method \Http\Promise\Promise describeFieldListAsync($arguments = [])
 * @method \Dew\Acs\Result switchField(array $arguments = [])
 * @method \Http\Promise\Promise switchFieldAsync($arguments = [])
 * @method \Dew\Acs\Result switchVariable(array $arguments = [])
 * @method \Http\Promise\Promise switchVariableAsync($arguments = [])
 * @method \Dew\Acs\Result checkCustVariableLimit(array $arguments = [])
 * @method \Http\Promise\Promise checkCustVariableLimitAsync($arguments = [])
 * @method \Dew\Acs\Result checkExpressionVariableLimit(array $arguments = [])
 * @method \Http\Promise\Promise checkExpressionVariableLimitAsync($arguments = [])
 * @method \Dew\Acs\Result createCustVariable(array $arguments = [])
 * @method \Http\Promise\Promise createCustVariableAsync($arguments = [])
 * @method \Dew\Acs\Result createField(array $arguments = [])
 * @method \Http\Promise\Promise createFieldAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCustVariable(array $arguments = [])
 * @method \Http\Promise\Promise deleteCustVariableAsync($arguments = [])
 * @method \Dew\Acs\Result deleteExpressionVariable(array $arguments = [])
 * @method \Http\Promise\Promise deleteExpressionVariableAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustVariableConfigList(array $arguments = [])
 * @method \Http\Promise\Promise describeCustVariableConfigListAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustVariableDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeCustVariableDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventBaseInfoByEventCode(array $arguments = [])
 * @method \Http\Promise\Promise describeEventBaseInfoByEventCodeAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventsVariableList(array $arguments = [])
 * @method \Http\Promise\Promise describeEventsVariableListAsync($arguments = [])
 * @method \Dew\Acs\Result describeExpressionVariableDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeExpressionVariableDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeExpressionVariableFunctionList(array $arguments = [])
 * @method \Http\Promise\Promise describeExpressionVariableFunctionListAsync($arguments = [])
 * @method \Dew\Acs\Result describeExpressionVariablePage(array $arguments = [])
 * @method \Http\Promise\Promise describeExpressionVariablePageAsync($arguments = [])
 * @method \Dew\Acs\Result describeNameList(array $arguments = [])
 * @method \Http\Promise\Promise describeNameListAsync($arguments = [])
 * @method \Dew\Acs\Result describeOperatorList(array $arguments = [])
 * @method \Http\Promise\Promise describeOperatorListAsync($arguments = [])
 * @method \Dew\Acs\Result describeParamByEventCodes(array $arguments = [])
 * @method \Http\Promise\Promise describeParamByEventCodesAsync($arguments = [])
 * @method \Dew\Acs\Result describeRuleCountByUserId(array $arguments = [])
 * @method \Http\Promise\Promise describeRuleCountByUserIdAsync($arguments = [])
 * @method \Dew\Acs\Result describeVariableBindDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeVariableBindDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeVariableDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeVariableDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeVariableFee(array $arguments = [])
 * @method \Http\Promise\Promise describeVariableFeeAsync($arguments = [])
 * @method \Dew\Acs\Result describeVariableMarketList(array $arguments = [])
 * @method \Http\Promise\Promise describeVariableMarketListAsync($arguments = [])
 * @method \Dew\Acs\Result describeVariableSceneList(array $arguments = [])
 * @method \Http\Promise\Promise describeVariableSceneListAsync($arguments = [])
 * @method \Dew\Acs\Result importNameList(array $arguments = [])
 * @method \Http\Promise\Promise importNameListAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCustVariable(array $arguments = [])
 * @method \Http\Promise\Promise modifyCustVariableAsync($arguments = [])
 * @method \Dew\Acs\Result modifyExpressionVariable(array $arguments = [])
 * @method \Http\Promise\Promise modifyExpressionVariableAsync($arguments = [])
 * @method \Dew\Acs\Result createPocEv(array $arguments = [])
 * @method \Http\Promise\Promise createPocEvAsync($arguments = [])
 * @method \Dew\Acs\Result describeListPoc(array $arguments = [])
 * @method \Http\Promise\Promise describeListPocAsync($arguments = [])
 * @method \Dew\Acs\Result describeTagList(array $arguments = [])
 * @method \Http\Promise\Promise describeTagListAsync($arguments = [])
 * @method \Dew\Acs\Result fileUpload(array $arguments = [])
 * @method \Http\Promise\Promise fileUploadAsync($arguments = [])
 * @method \Dew\Acs\Result permissionCheck(array $arguments = [])
 * @method \Http\Promise\Promise permissionCheckAsync($arguments = [])
 * @method \Dew\Acs\Result sampleFileDownload(array $arguments = [])
 * @method \Http\Promise\Promise sampleFileDownloadAsync($arguments = [])
 * @method \Dew\Acs\Result taskNameByUserId(array $arguments = [])
 * @method \Http\Promise\Promise taskNameByUserIdAsync($arguments = [])
 * @method \Dew\Acs\Result describeNameListVariablePageList(array $arguments = [])
 * @method \Http\Promise\Promise describeNameListVariablePageListAsync($arguments = [])
 * @method \Dew\Acs\Result describeNameListPageList(array $arguments = [])
 * @method \Http\Promise\Promise describeNameListPageListAsync($arguments = [])
 * @method \Dew\Acs\Result describeNameListTypeList(array $arguments = [])
 * @method \Http\Promise\Promise describeNameListTypeListAsync($arguments = [])
 * @method \Dew\Acs\Result describeNameListDownloadUrl(array $arguments = [])
 * @method \Http\Promise\Promise describeNameListDownloadUrlAsync($arguments = [])
 * @method \Dew\Acs\Result describePrivateStack(array $arguments = [])
 * @method \Http\Promise\Promise describePrivateStackAsync($arguments = [])
 * @method \Dew\Acs\Result describeSceneEventPageList(array $arguments = [])
 * @method \Http\Promise\Promise describeSceneEventPageListAsync($arguments = [])
 * @method \Dew\Acs\Result describeSceneAllEventNameCodeList(array $arguments = [])
 * @method \Http\Promise\Promise describeSceneAllEventNameCodeListAsync($arguments = [])
 * @method \Dew\Acs\Result describeSceneRulePageList(array $arguments = [])
 * @method \Http\Promise\Promise describeSceneRulePageListAsync($arguments = [])
 * @method \Dew\Acs\Result createSampleApi(array $arguments = [])
 * @method \Http\Promise\Promise createSampleApiAsync($arguments = [])
 * @method \Dew\Acs\Result describeOperatorListByScene(array $arguments = [])
 * @method \Http\Promise\Promise describeOperatorListBySceneAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventVariableTemplateList(array $arguments = [])
 * @method \Http\Promise\Promise describeEventVariableTemplateListAsync($arguments = [])
 * @method \Dew\Acs\Result describeInputFeildCountByEventCode(array $arguments = [])
 * @method \Http\Promise\Promise describeInputFeildCountByEventCodeAsync($arguments = [])
 * @method \Dew\Acs\Result describeTaskList(array $arguments = [])
 * @method \Http\Promise\Promise describeTaskListAsync($arguments = [])
 * @method \Dew\Acs\Result describePocOssToken(array $arguments = [])
 * @method \Http\Promise\Promise describePocOssTokenAsync($arguments = [])
 * @method \Dew\Acs\Result describeTagsList(array $arguments = [])
 * @method \Http\Promise\Promise describeTagsListAsync($arguments = [])
 * @method \Dew\Acs\Result describeTemplateCount(array $arguments = [])
 * @method \Http\Promise\Promise describeTemplateCountAsync($arguments = [])
 * @method \Dew\Acs\Result createModel(array $arguments = [])
 * @method \Http\Promise\Promise createModelAsync($arguments = [])
 * @method \Dew\Acs\Result describeRiskTagsLineChart(array $arguments = [])
 * @method \Http\Promise\Promise describeRiskTagsLineChartAsync($arguments = [])
 * @method \Dew\Acs\Result describeInitDig(array $arguments = [])
 * @method \Http\Promise\Promise describeInitDigAsync($arguments = [])
 * @method \Dew\Acs\Result compareCopyRuleVariable(array $arguments = [])
 * @method \Http\Promise\Promise compareCopyRuleVariableAsync($arguments = [])
 * @method \Dew\Acs\Result deepCopyRule(array $arguments = [])
 * @method \Http\Promise\Promise deepCopyRuleAsync($arguments = [])
 * @method \Dew\Acs\Result checkCopyRuleVariable(array $arguments = [])
 * @method \Http\Promise\Promise checkCopyRuleVariableAsync($arguments = [])
 * @method \Dew\Acs\Result addSampleDataByCsv(array $arguments = [])
 * @method \Http\Promise\Promise addSampleDataByCsvAsync($arguments = [])
 * @method \Dew\Acs\Result batchDeleteSampleData(array $arguments = [])
 * @method \Http\Promise\Promise batchDeleteSampleDataAsync($arguments = [])
 * @method \Dew\Acs\Result addSampleDataByText(array $arguments = [])
 * @method \Http\Promise\Promise addSampleDataByTextAsync($arguments = [])
 * @method \Dew\Acs\Result describeSampleBatchOssPolicy(array $arguments = [])
 * @method \Http\Promise\Promise describeSampleBatchOssPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result createSampleBatch(array $arguments = [])
 * @method \Http\Promise\Promise createSampleBatchAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSelfBindVariable(array $arguments = [])
 * @method \Http\Promise\Promise deleteSelfBindVariableAsync($arguments = [])
 * @method \Dew\Acs\Result deleteEventField(array $arguments = [])
 * @method \Http\Promise\Promise deleteEventFieldAsync($arguments = [])
 */
final class XteeClient extends AcsClient
{
    //
}
