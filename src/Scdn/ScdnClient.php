<?php

declare(strict_types=1);

namespace Dew\Acs\Scdn;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result setScdnBotInfo(array $arguments = [])
 * @method \Http\Promise\Promise setScdnBotInfoAsync($arguments = [])
 * @method \Dew\Acs\Result setScdnCcInfo(array $arguments = [])
 * @method \Http\Promise\Promise setScdnCcInfoAsync($arguments = [])
 * @method \Dew\Acs\Result setScdnDDoSInfo(array $arguments = [])
 * @method \Http\Promise\Promise setScdnDDoSInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDDoSInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDDoSInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnService(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnUserProtectInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnUserProtectInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnUserQuota(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnUserQuotaAsync($arguments = [])
 * @method \Dew\Acs\Result checkScdnService(array $arguments = [])
 * @method \Http\Promise\Promise checkScdnServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainPvData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainPvDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainIspData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainIspDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainRealTimeByteHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainRealTimeByteHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainRealTimeHttpCodeData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainRealTimeHttpCodeDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainRealTimeQpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainRealTimeQpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainRealTimeReqHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainRealTimeReqHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainRealTimeSrcBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainRealTimeSrcBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainRegionData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainRegionDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainTopReferVisit(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainTopReferVisitAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainTopUrlVisit(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainTopUrlVisitAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainUvData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainUvDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainRealTimeBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainRealTimeBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnCcTopIp(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnCcTopIpAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnCcTopUrl(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnCcTopUrlAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainHttpCodeData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainHttpCodeDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainLog(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainLogAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainOriginBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainOriginBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainQpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainQpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnTopDomainsByFlow(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnTopDomainsByFlowAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnRefreshQuota(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnRefreshQuotaAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnRefreshTasks(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnRefreshTasksAsync($arguments = [])
 * @method \Dew\Acs\Result preloadScdnObjectCaches(array $arguments = [])
 * @method \Http\Promise\Promise preloadScdnObjectCachesAsync($arguments = [])
 * @method \Dew\Acs\Result refreshScdnObjectCaches(array $arguments = [])
 * @method \Http\Promise\Promise refreshScdnObjectCachesAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnCertificateDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnCertificateDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnCertificateList(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnCertificateListAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainOriginTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainOriginTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainRealTimeSrcTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainRealTimeSrcTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainRealTimeTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainRealTimeTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnCcQpsInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnCcQpsInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDDoSTrafficInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDDoSTrafficInfoAsync($arguments = [])
 * @method \Dew\Acs\Result setScdnDomainCertificate(array $arguments = [])
 * @method \Http\Promise\Promise setScdnDomainCertificateAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainCertificateInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainCertificateInfoAsync($arguments = [])
 * @method \Dew\Acs\Result addScdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise addScdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result deleteScdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise deleteScdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result deleteScdnSpecificConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteScdnSpecificConfigAsync($arguments = [])
 * @method \Dew\Acs\Result startScdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise startScdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result stopScdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise stopScdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result updateScdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise updateScdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result batchDeleteScdnDomainConfigs(array $arguments = [])
 * @method \Http\Promise\Promise batchDeleteScdnDomainConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result batchSetScdnDomainConfigs(array $arguments = [])
 * @method \Http\Promise\Promise batchSetScdnDomainConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result batchUpdateScdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise batchUpdateScdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result batchStopScdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise batchStopScdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result batchStartScdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise batchStartScdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnUserDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnUserDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainConfigs(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainCname(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainCnameAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnDomainDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnDomainDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnCcInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnCcInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeScdnVerifyContent(array $arguments = [])
 * @method \Http\Promise\Promise describeScdnVerifyContentAsync($arguments = [])
 * @method \Dew\Acs\Result verifyScdnDomainOwner(array $arguments = [])
 * @method \Http\Promise\Promise verifyScdnDomainOwnerAsync($arguments = [])
 */
final class ScdnClient extends AcsClient
{
    //
}
