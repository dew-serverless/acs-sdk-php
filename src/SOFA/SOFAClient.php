<?php

declare(strict_types=1);

namespace Dew\Acs\SOFA;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result deleteMsConfigAttributes(array $arguments = [])
 * @method \Http\Promise\Promise deleteMsConfigAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMsConfigResources(array $arguments = [])
 * @method \Http\Promise\Promise deleteMsConfigResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result updateMsConfigAttributes(array $arguments = [])
 * @method \Http\Promise\Promise updateMsConfigAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result updateMsConfigResources(array $arguments = [])
 * @method \Http\Promise\Promise updateMsConfigResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result getMsConfigAttributes(array $arguments = [])
 * @method \Http\Promise\Promise getMsConfigAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result getMsConfigResources(array $arguments = [])
 * @method \Http\Promise\Promise getMsConfigResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result queryMsConfigAttributes(array $arguments = [])
 * @method \Http\Promise\Promise queryMsConfigAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result queryMsConfigClients(array $arguments = [])
 * @method \Http\Promise\Promise queryMsConfigClientsAsync($arguments = [])
 * @method \Dew\Acs\Result queryMsConfigClientValues(array $arguments = [])
 * @method \Http\Promise\Promise queryMsConfigClientValuesAsync($arguments = [])
 * @method \Dew\Acs\Result queryMsConfigData(array $arguments = [])
 * @method \Http\Promise\Promise queryMsConfigDataAsync($arguments = [])
 * @method \Dew\Acs\Result queryMsConfigResources(array $arguments = [])
 * @method \Http\Promise\Promise queryMsConfigResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result grayPushMsConfigData(array $arguments = [])
 * @method \Http\Promise\Promise grayPushMsConfigDataAsync($arguments = [])
 * @method \Dew\Acs\Result pushMsConfigData(array $arguments = [])
 * @method \Http\Promise\Promise pushMsConfigDataAsync($arguments = [])
 * @method \Dew\Acs\Result createMqSofamqGroup(array $arguments = [])
 * @method \Http\Promise\Promise createMqSofamqGroupAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMqSofamqGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteMqSofamqGroupAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMqSofamqTopic(array $arguments = [])
 * @method \Http\Promise\Promise deleteMqSofamqTopicAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMqSofamqTrace(array $arguments = [])
 * @method \Http\Promise\Promise deleteMqSofamqTraceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMqSofamqWarn(array $arguments = [])
 * @method \Http\Promise\Promise deleteMqSofamqWarnAsync($arguments = [])
 * @method \Dew\Acs\Result updateMqSofamqGroup(array $arguments = [])
 * @method \Http\Promise\Promise updateMqSofamqGroupAsync($arguments = [])
 * @method \Dew\Acs\Result updateMqSofamqGroupRemark(array $arguments = [])
 * @method \Http\Promise\Promise updateMqSofamqGroupRemarkAsync($arguments = [])
 * @method \Dew\Acs\Result updateMqSofamqWarn(array $arguments = [])
 * @method \Http\Promise\Promise updateMqSofamqWarnAsync($arguments = [])
 * @method \Dew\Acs\Result disableMqSofamqWarn(array $arguments = [])
 * @method \Http\Promise\Promise disableMqSofamqWarnAsync($arguments = [])
 * @method \Dew\Acs\Result enableMqSofamqWarn(array $arguments = [])
 * @method \Http\Promise\Promise enableMqSofamqWarnAsync($arguments = [])
 * @method \Dew\Acs\Result getMqSofamqConsumerJStack(array $arguments = [])
 * @method \Http\Promise\Promise getMqSofamqConsumerJStackAsync($arguments = [])
 * @method \Dew\Acs\Result getMqSofamqConsumerStatus(array $arguments = [])
 * @method \Http\Promise\Promise getMqSofamqConsumerStatusAsync($arguments = [])
 * @method \Dew\Acs\Result getMqSofamqDLQMessageById(array $arguments = [])
 * @method \Http\Promise\Promise getMqSofamqDLQMessageByIdAsync($arguments = [])
 * @method \Dew\Acs\Result getMqSofamqMessageById(array $arguments = [])
 * @method \Http\Promise\Promise getMqSofamqMessageByIdAsync($arguments = [])
 * @method \Dew\Acs\Result getMqSofamqTraceByMsgId(array $arguments = [])
 * @method \Http\Promise\Promise getMqSofamqTraceByMsgIdAsync($arguments = [])
 * @method \Dew\Acs\Result getMqSofamqTraceResult(array $arguments = [])
 * @method \Http\Promise\Promise getMqSofamqTraceResultAsync($arguments = [])
 * @method \Dew\Acs\Result listMqSofamqGroup(array $arguments = [])
 * @method \Http\Promise\Promise listMqSofamqGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listMqSofamqTopic(array $arguments = [])
 * @method \Http\Promise\Promise listMqSofamqTopicAsync($arguments = [])
 * @method \Dew\Acs\Result listMqSofamqTrace(array $arguments = [])
 * @method \Http\Promise\Promise listMqSofamqTraceAsync($arguments = [])
 * @method \Dew\Acs\Result listMqSofamqWarn(array $arguments = [])
 * @method \Http\Promise\Promise listMqSofamqWarnAsync($arguments = [])
 * @method \Dew\Acs\Result listMqSofamqWarnHistory(array $arguments = [])
 * @method \Http\Promise\Promise listMqSofamqWarnHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result queryMqSofamqConsumerAccumulate(array $arguments = [])
 * @method \Http\Promise\Promise queryMqSofamqConsumerAccumulateAsync($arguments = [])
 * @method \Dew\Acs\Result queryMqSofamqConsumerConnection(array $arguments = [])
 * @method \Http\Promise\Promise queryMqSofamqConsumerConnectionAsync($arguments = [])
 * @method \Dew\Acs\Result queryMqSofamqConsumerTimespan(array $arguments = [])
 * @method \Http\Promise\Promise queryMqSofamqConsumerTimespanAsync($arguments = [])
 * @method \Dew\Acs\Result queryMqSofamqDLQMessageByGroupId(array $arguments = [])
 * @method \Http\Promise\Promise queryMqSofamqDLQMessageByGroupIdAsync($arguments = [])
 * @method \Dew\Acs\Result queryMqSofamqGroupSubDetail(array $arguments = [])
 * @method \Http\Promise\Promise queryMqSofamqGroupSubDetailAsync($arguments = [])
 * @method \Dew\Acs\Result queryMqSofamqMessageByKey(array $arguments = [])
 * @method \Http\Promise\Promise queryMqSofamqMessageByKeyAsync($arguments = [])
 * @method \Dew\Acs\Result queryMqSofamqMessageByTopic(array $arguments = [])
 * @method \Http\Promise\Promise queryMqSofamqMessageByTopicAsync($arguments = [])
 * @method \Dew\Acs\Result queryMqSofamqTraceByMsgKey(array $arguments = [])
 * @method \Http\Promise\Promise queryMqSofamqTraceByMsgKeyAsync($arguments = [])
 * @method \Dew\Acs\Result queryMqSofamqTraceByTopic(array $arguments = [])
 * @method \Http\Promise\Promise queryMqSofamqTraceByTopicAsync($arguments = [])
 * @method \Dew\Acs\Result resendMqSofamqDLQMessageBatch(array $arguments = [])
 * @method \Http\Promise\Promise resendMqSofamqDLQMessageBatchAsync($arguments = [])
 * @method \Dew\Acs\Result resendMqSofamqDLQMessageById(array $arguments = [])
 * @method \Http\Promise\Promise resendMqSofamqDLQMessageByIdAsync($arguments = [])
 * @method \Dew\Acs\Result resetMqSofamqConsumerOffset(array $arguments = [])
 * @method \Http\Promise\Promise resetMqSofamqConsumerOffsetAsync($arguments = [])
 * @method \Dew\Acs\Result createMqSofamqTopic(array $arguments = [])
 * @method \Http\Promise\Promise createMqSofamqTopicAsync($arguments = [])
 * @method \Dew\Acs\Result updateMqSofamqTopic(array $arguments = [])
 * @method \Http\Promise\Promise updateMqSofamqTopicAsync($arguments = [])
 * @method \Dew\Acs\Result updateMqSofamqTopicRemark(array $arguments = [])
 * @method \Http\Promise\Promise updateMqSofamqTopicRemarkAsync($arguments = [])
 * @method \Dew\Acs\Result describeCasComputers(array $arguments = [])
 * @method \Http\Promise\Promise describeCasComputersAsync($arguments = [])
 * @method \Dew\Acs\Result addMsConfigAttributes(array $arguments = [])
 * @method \Http\Promise\Promise addMsConfigAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result addMsConfigResources(array $arguments = [])
 * @method \Http\Promise\Promise addMsConfigResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result updateRMSUnifiedAlarmRule(array $arguments = [])
 * @method \Http\Promise\Promise updateRMSUnifiedAlarmRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createRMSUnifiedAlarmRule(array $arguments = [])
 * @method \Http\Promise\Promise createRMSUnifiedAlarmRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRMSUnifiedAlarmRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteRMSUnifiedAlarmRuleAsync($arguments = [])
 * @method \Dew\Acs\Result queryRMSUnifiedAlarmEvent(array $arguments = [])
 * @method \Http\Promise\Promise queryRMSUnifiedAlarmEventAsync($arguments = [])
 * @method \Dew\Acs\Result queryRMSUnifiedAlarmRule(array $arguments = [])
 * @method \Http\Promise\Promise queryRMSUnifiedAlarmRuleAsync($arguments = [])
 * @method \Dew\Acs\Result queryRMSUnifiedAlarmHistory(array $arguments = [])
 * @method \Http\Promise\Promise queryRMSUnifiedAlarmHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result queryRMSUnifiedAlarmNotifyHistory(array $arguments = [])
 * @method \Http\Promise\Promise queryRMSUnifiedAlarmNotifyHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result queryRMSMetrics(array $arguments = [])
 * @method \Http\Promise\Promise queryRMSMetricsAsync($arguments = [])
 * @method \Dew\Acs\Result logoutMsRegistryService(array $arguments = [])
 * @method \Http\Promise\Promise logoutMsRegistryServiceAsync($arguments = [])
 */
final class SOFAClient extends AcsClient
{
    //
}
