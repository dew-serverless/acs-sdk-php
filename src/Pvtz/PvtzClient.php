<?php

declare(strict_types=1);

namespace Dew\Acs\Pvtz;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result describeUserServiceStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeUserServiceStatusAsync($arguments = [])
 * @method \Dew\Acs\Result setProxyPattern(array $arguments = [])
 * @method \Http\Promise\Promise setProxyPatternAsync($arguments = [])
 * @method \Dew\Acs\Result describeChangeLogs(array $arguments = [])
 * @method \Http\Promise\Promise describeChangeLogsAsync($arguments = [])
 * @method \Dew\Acs\Result describeRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result moveResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise moveResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result addZone(array $arguments = [])
 * @method \Http\Promise\Promise addZoneAsync($arguments = [])
 * @method \Dew\Acs\Result deleteZone(array $arguments = [])
 * @method \Http\Promise\Promise deleteZoneAsync($arguments = [])
 * @method \Dew\Acs\Result updateZoneRemark(array $arguments = [])
 * @method \Http\Promise\Promise updateZoneRemarkAsync($arguments = [])
 * @method \Dew\Acs\Result changeZoneDnsGroup(array $arguments = [])
 * @method \Http\Promise\Promise changeZoneDnsGroupAsync($arguments = [])
 * @method \Dew\Acs\Result bindZoneVpc(array $arguments = [])
 * @method \Http\Promise\Promise bindZoneVpcAsync($arguments = [])
 * @method \Dew\Acs\Result checkZoneName(array $arguments = [])
 * @method \Http\Promise\Promise checkZoneNameAsync($arguments = [])
 * @method \Dew\Acs\Result describeZoneInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeZoneInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeZones(array $arguments = [])
 * @method \Http\Promise\Promise describeZonesAsync($arguments = [])
 * @method \Dew\Acs\Result describeZoneVpcTree(array $arguments = [])
 * @method \Http\Promise\Promise describeZoneVpcTreeAsync($arguments = [])
 * @method \Dew\Acs\Result describeTags(array $arguments = [])
 * @method \Http\Promise\Promise describeTagsAsync($arguments = [])
 * @method \Dew\Acs\Result listTagResources(array $arguments = [])
 * @method \Http\Promise\Promise listTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result untagResources(array $arguments = [])
 * @method \Http\Promise\Promise untagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result describeRequestGraph(array $arguments = [])
 * @method \Http\Promise\Promise describeRequestGraphAsync($arguments = [])
 * @method \Dew\Acs\Result describeStatisticSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeStatisticSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result addZoneRecord(array $arguments = [])
 * @method \Http\Promise\Promise addZoneRecordAsync($arguments = [])
 * @method \Dew\Acs\Result deleteZoneRecord(array $arguments = [])
 * @method \Http\Promise\Promise deleteZoneRecordAsync($arguments = [])
 * @method \Dew\Acs\Result setZoneRecordStatus(array $arguments = [])
 * @method \Http\Promise\Promise setZoneRecordStatusAsync($arguments = [])
 * @method \Dew\Acs\Result updateRecordRemark(array $arguments = [])
 * @method \Http\Promise\Promise updateRecordRemarkAsync($arguments = [])
 * @method \Dew\Acs\Result updateZoneRecord(array $arguments = [])
 * @method \Http\Promise\Promise updateZoneRecordAsync($arguments = [])
 * @method \Dew\Acs\Result describeZoneRecord(array $arguments = [])
 * @method \Http\Promise\Promise describeZoneRecordAsync($arguments = [])
 * @method \Dew\Acs\Result describeZoneRecords(array $arguments = [])
 * @method \Http\Promise\Promise describeZoneRecordsAsync($arguments = [])
 * @method \Dew\Acs\Result addResolverEndpoint(array $arguments = [])
 * @method \Http\Promise\Promise addResolverEndpointAsync($arguments = [])
 * @method \Dew\Acs\Result addResolverRule(array $arguments = [])
 * @method \Http\Promise\Promise addResolverRuleAsync($arguments = [])
 * @method \Dew\Acs\Result bindResolverRuleVpc(array $arguments = [])
 * @method \Http\Promise\Promise bindResolverRuleVpcAsync($arguments = [])
 * @method \Dew\Acs\Result deleteResolverEndpoint(array $arguments = [])
 * @method \Http\Promise\Promise deleteResolverEndpointAsync($arguments = [])
 * @method \Dew\Acs\Result deleteResolverRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteResolverRuleAsync($arguments = [])
 * @method \Dew\Acs\Result describeResolverEndpoint(array $arguments = [])
 * @method \Http\Promise\Promise describeResolverEndpointAsync($arguments = [])
 * @method \Dew\Acs\Result describeResolverEndpoints(array $arguments = [])
 * @method \Http\Promise\Promise describeResolverEndpointsAsync($arguments = [])
 * @method \Dew\Acs\Result describeResolverRule(array $arguments = [])
 * @method \Http\Promise\Promise describeResolverRuleAsync($arguments = [])
 * @method \Dew\Acs\Result describeResolverRules(array $arguments = [])
 * @method \Http\Promise\Promise describeResolverRulesAsync($arguments = [])
 * @method \Dew\Acs\Result updateResolverEndpoint(array $arguments = [])
 * @method \Http\Promise\Promise updateResolverEndpointAsync($arguments = [])
 * @method \Dew\Acs\Result updateResolverRule(array $arguments = [])
 * @method \Http\Promise\Promise updateResolverRuleAsync($arguments = [])
 * @method \Dew\Acs\Result describeResolverAvailableZones(array $arguments = [])
 * @method \Http\Promise\Promise describeResolverAvailableZonesAsync($arguments = [])
 * @method \Dew\Acs\Result addCustomLine(array $arguments = [])
 * @method \Http\Promise\Promise addCustomLineAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCustomLine(array $arguments = [])
 * @method \Http\Promise\Promise deleteCustomLineAsync($arguments = [])
 * @method \Dew\Acs\Result updateCustomLine(array $arguments = [])
 * @method \Http\Promise\Promise updateCustomLineAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomLines(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomLinesAsync($arguments = [])
 * @method \Dew\Acs\Result searchCustomLines(array $arguments = [])
 * @method \Http\Promise\Promise searchCustomLinesAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomLineInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomLineInfoAsync($arguments = [])
 * @method \Dew\Acs\Result addUserVpcAuthorization(array $arguments = [])
 * @method \Http\Promise\Promise addUserVpcAuthorizationAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserVpcAuthorizations(array $arguments = [])
 * @method \Http\Promise\Promise describeUserVpcAuthorizationsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUserVpcAuthorization(array $arguments = [])
 * @method \Http\Promise\Promise deleteUserVpcAuthorizationAsync($arguments = [])
 * @method \Dew\Acs\Result updateSyncEcsHostTask(array $arguments = [])
 * @method \Http\Promise\Promise updateSyncEcsHostTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeSyncEcsHostTask(array $arguments = [])
 * @method \Http\Promise\Promise describeSyncEcsHostTaskAsync($arguments = [])
 */
final class PvtzClient extends AcsClient
{
    //
}
