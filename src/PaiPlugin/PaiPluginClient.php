<?php

declare(strict_types=1);

namespace Dew\Acs\PaiPlugin;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result getUser(array $arguments = [])
 * @method \Http\Promise\Promise getUserAsync($arguments = [])
 * @method \Dew\Acs\Result getMessageConfig(array $arguments = [])
 * @method \Http\Promise\Promise getMessageConfigAsync($arguments = [])
 * @method \Dew\Acs\Result createSignature(array $arguments = [])
 * @method \Http\Promise\Promise createSignatureAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSignature(array $arguments = [])
 * @method \Http\Promise\Promise deleteSignatureAsync($arguments = [])
 * @method \Dew\Acs\Result listSignatures(array $arguments = [])
 * @method \Http\Promise\Promise listSignaturesAsync($arguments = [])
 * @method \Dew\Acs\Result getSignature(array $arguments = [])
 * @method \Http\Promise\Promise getSignatureAsync($arguments = [])
 * @method \Dew\Acs\Result createTemplate(array $arguments = [])
 * @method \Http\Promise\Promise createTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTemplate(array $arguments = [])
 * @method \Http\Promise\Promise deleteTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result listTemplates(array $arguments = [])
 * @method \Http\Promise\Promise listTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result getTemplate(array $arguments = [])
 * @method \Http\Promise\Promise getTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result sendMessage(array $arguments = [])
 * @method \Http\Promise\Promise sendMessageAsync($arguments = [])
 * @method \Dew\Acs\Result listMessages(array $arguments = [])
 * @method \Http\Promise\Promise listMessagesAsync($arguments = [])
 * @method \Dew\Acs\Result listMessageMetrics(array $arguments = [])
 * @method \Http\Promise\Promise listMessageMetricsAsync($arguments = [])
 * @method \Dew\Acs\Result smsReport(array $arguments = [])
 * @method \Http\Promise\Promise smsReportAsync($arguments = [])
 * @method \Dew\Acs\Result smsUp(array $arguments = [])
 * @method \Http\Promise\Promise smsUpAsync($arguments = [])
 * @method \Dew\Acs\Result updateReportUrl(array $arguments = [])
 * @method \Http\Promise\Promise updateReportUrlAsync($arguments = [])
 * @method \Dew\Acs\Result updateUploadUrl(array $arguments = [])
 * @method \Http\Promise\Promise updateUploadUrlAsync($arguments = [])
 * @method \Dew\Acs\Result createCampaign(array $arguments = [])
 * @method \Http\Promise\Promise createCampaignAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCampaign(array $arguments = [])
 * @method \Http\Promise\Promise deleteCampaignAsync($arguments = [])
 * @method \Dew\Acs\Result listCampaigns(array $arguments = [])
 * @method \Http\Promise\Promise listCampaignsAsync($arguments = [])
 * @method \Dew\Acs\Result getCampaign(array $arguments = [])
 * @method \Http\Promise\Promise getCampaignAsync($arguments = [])
 * @method \Dew\Acs\Result updateCampaign(array $arguments = [])
 * @method \Http\Promise\Promise updateCampaignAsync($arguments = [])
 * @method \Dew\Acs\Result listAlgorithms(array $arguments = [])
 * @method \Http\Promise\Promise listAlgorithmsAsync($arguments = [])
 * @method \Dew\Acs\Result getAlgorithm(array $arguments = [])
 * @method \Http\Promise\Promise getAlgorithmAsync($arguments = [])
 * @method \Dew\Acs\Result createTrainingJob(array $arguments = [])
 * @method \Http\Promise\Promise createTrainingJobAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTrainingJob(array $arguments = [])
 * @method \Http\Promise\Promise deleteTrainingJobAsync($arguments = [])
 * @method \Dew\Acs\Result listTrainingJobs(array $arguments = [])
 * @method \Http\Promise\Promise listTrainingJobsAsync($arguments = [])
 * @method \Dew\Acs\Result getTrainingJob(array $arguments = [])
 * @method \Http\Promise\Promise getTrainingJobAsync($arguments = [])
 * @method \Dew\Acs\Result createInferenceJob(array $arguments = [])
 * @method \Http\Promise\Promise createInferenceJobAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInferenceJob(array $arguments = [])
 * @method \Http\Promise\Promise deleteInferenceJobAsync($arguments = [])
 * @method \Dew\Acs\Result listInferenceJobs(array $arguments = [])
 * @method \Http\Promise\Promise listInferenceJobsAsync($arguments = [])
 * @method \Dew\Acs\Result getInferenceJob(array $arguments = [])
 * @method \Http\Promise\Promise getInferenceJobAsync($arguments = [])
 * @method \Dew\Acs\Result createGroup(array $arguments = [])
 * @method \Http\Promise\Promise createGroupAsync($arguments = [])
 * @method \Dew\Acs\Result deleteGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listGroups(array $arguments = [])
 * @method \Http\Promise\Promise listGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result getGroup(array $arguments = [])
 * @method \Http\Promise\Promise getGroupAsync($arguments = [])
 * @method \Dew\Acs\Result createSchedule(array $arguments = [])
 * @method \Http\Promise\Promise createScheduleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSchedule(array $arguments = [])
 * @method \Http\Promise\Promise deleteScheduleAsync($arguments = [])
 * @method \Dew\Acs\Result listSchedules(array $arguments = [])
 * @method \Http\Promise\Promise listSchedulesAsync($arguments = [])
 * @method \Dew\Acs\Result getSchedule(array $arguments = [])
 * @method \Http\Promise\Promise getScheduleAsync($arguments = [])
 */
final class PaiPluginClient extends AcsClient
{
    //
}
