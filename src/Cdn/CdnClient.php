<?php

declare(strict_types=1);

namespace Dew\Acs\Cdn;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result addCdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise addCdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result batchAddCdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise batchAddCdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise deleteCdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnDeletedDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnDeletedDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result verifyDomainOwner(array $arguments = [])
 * @method \Http\Promise\Promise verifyDomainOwnerAsync($arguments = [])
 * @method \Dew\Acs\Result describeVerifyContent(array $arguments = [])
 * @method \Http\Promise\Promise describeVerifyContentAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainVerifyData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainVerifyDataAsync($arguments = [])
 * @method \Dew\Acs\Result startCdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise startCdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result batchStartCdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise batchStartCdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result stopCdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise stopCdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result batchStopCdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise batchStopCdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeUserDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainCname(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainCnameAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainsBySource(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainsBySourceAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnUserDomainsByFunc(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnUserDomainsByFuncAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnDomainDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnDomainDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnDomainConfigs(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnDomainConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result batchSetCdnDomainConfig(array $arguments = [])
 * @method \Http\Promise\Promise batchSetCdnDomainConfigAsync($arguments = [])
 * @method \Dew\Acs\Result batchDeleteCdnDomainConfig(array $arguments = [])
 * @method \Http\Promise\Promise batchDeleteCdnDomainConfigAsync($arguments = [])
 * @method \Dew\Acs\Result batchUpdateCdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise batchUpdateCdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSpecificConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteSpecificConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCdnDomainSchdmByProperty(array $arguments = [])
 * @method \Http\Promise\Promise modifyCdnDomainSchdmByPropertyAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise modifyCdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnDomainStagingConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnDomainStagingConfigAsync($arguments = [])
 * @method \Dew\Acs\Result setCdnDomainStagingConfig(array $arguments = [])
 * @method \Http\Promise\Promise setCdnDomainStagingConfigAsync($arguments = [])
 * @method \Dew\Acs\Result rollbackStagingConfig(array $arguments = [])
 * @method \Http\Promise\Promise rollbackStagingConfigAsync($arguments = [])
 * @method \Dew\Acs\Result publishStagingConfigToProduction(array $arguments = [])
 * @method \Http\Promise\Promise publishStagingConfigToProductionAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSpecificStagingConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteSpecificStagingConfigAsync($arguments = [])
 * @method \Dew\Acs\Result setWaitingRoomConfig(array $arguments = [])
 * @method \Http\Promise\Promise setWaitingRoomConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnUserConfigs(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnUserConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnWafDomain(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnWafDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeBlockedRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeBlockedRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result refreshObjectCacheByCacheTag(array $arguments = [])
 * @method \Http\Promise\Promise refreshObjectCacheByCacheTagAsync($arguments = [])
 * @method \Dew\Acs\Result describeRefreshQuota(array $arguments = [])
 * @method \Http\Promise\Promise describeRefreshQuotaAsync($arguments = [])
 * @method \Dew\Acs\Result pushObjectCache(array $arguments = [])
 * @method \Http\Promise\Promise pushObjectCacheAsync($arguments = [])
 * @method \Dew\Acs\Result refreshObjectCaches(array $arguments = [])
 * @method \Http\Promise\Promise refreshObjectCachesAsync($arguments = [])
 * @method \Dew\Acs\Result describeRefreshTasks(array $arguments = [])
 * @method \Http\Promise\Promise describeRefreshTasksAsync($arguments = [])
 * @method \Dew\Acs\Result describeRefreshTaskById(array $arguments = [])
 * @method \Http\Promise\Promise describeRefreshTaskByIdAsync($arguments = [])
 * @method \Dew\Acs\Result describePreloadDetailById(array $arguments = [])
 * @method \Http\Promise\Promise describePreloadDetailByIdAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnUserQuota(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnUserQuotaAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainPathData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainPathDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainQpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainQpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainQpsDataByLayer(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainQpsDataByLayerAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainBpsDataByLayer(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainBpsDataByLayerAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainBpsDataByTimeStamp(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainBpsDataByTimeStampAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainHttpCodeData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainHttpCodeDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainHttpCodeDataByLayer(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainHttpCodeDataByLayerAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainReqHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainReqHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainsUsageByDay(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainsUsageByDayAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainDetailDataByLayer(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainDetailDataByLayerAsync($arguments = [])
 * @method \Dew\Acs\Result describeRangeDataByLocateAndIspService(array $arguments = [])
 * @method \Http\Promise\Promise describeRangeDataByLocateAndIspServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainSrcBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainSrcBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainSrcHttpCodeData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainSrcHttpCodeDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainSrcTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainSrcTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainSrcQpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainSrcQpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRealTimeTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRealTimeTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRealTimeBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRealTimeBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRealTimeHttpCodeData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRealTimeHttpCodeDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRealTimeQpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRealTimeQpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRealTimeReqHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRealTimeReqHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRealTimeByteHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRealTimeByteHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRealTimeSrcBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRealTimeSrcBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRealTimeSrcHttpCodeData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRealTimeSrcHttpCodeDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRealTimeSrcTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRealTimeSrcTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeEsExecuteData(array $arguments = [])
 * @method \Http\Promise\Promise describeEsExecuteDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeEsExceptionData(array $arguments = [])
 * @method \Http\Promise\Promise describeEsExceptionDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnUserBillHistory(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnUserBillHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnUserBillType(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnUserBillTypeAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnUserBillPrediction(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnUserBillPredictionAsync($arguments = [])
 * @method \Dew\Acs\Result createUserUsageDataExportTask(array $arguments = [])
 * @method \Http\Promise\Promise createUserUsageDataExportTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserUsageDataExportTask(array $arguments = [])
 * @method \Http\Promise\Promise describeUserUsageDataExportTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUserUsageDataExportTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteUserUsageDataExportTaskAsync($arguments = [])
 * @method \Dew\Acs\Result createUsageDetailDataExportTask(array $arguments = [])
 * @method \Http\Promise\Promise createUsageDetailDataExportTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserUsageDetailDataExportTask(array $arguments = [])
 * @method \Http\Promise\Promise describeUserUsageDetailDataExportTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUsageDetailDataExportTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteUsageDetailDataExportTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainMax95BpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainMax95BpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainUsageData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainUsageDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnUserResourcePackage(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnUserResourcePackageAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRealTimeLogLogstore(array $arguments = [])
 * @method \Http\Promise\Promise deleteRealTimeLogLogstoreAsync($arguments = [])
 * @method \Dew\Acs\Result createRealTimeLogDelivery(array $arguments = [])
 * @method \Http\Promise\Promise createRealTimeLogDeliveryAsync($arguments = [])
 * @method \Dew\Acs\Result modifyRealtimeLogDelivery(array $arguments = [])
 * @method \Http\Promise\Promise modifyRealtimeLogDeliveryAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRealtimeLogDelivery(array $arguments = [])
 * @method \Http\Promise\Promise deleteRealtimeLogDeliveryAsync($arguments = [])
 * @method \Dew\Acs\Result disableRealtimeLogDelivery(array $arguments = [])
 * @method \Http\Promise\Promise disableRealtimeLogDeliveryAsync($arguments = [])
 * @method \Dew\Acs\Result enableRealtimeLogDelivery(array $arguments = [])
 * @method \Http\Promise\Promise enableRealtimeLogDeliveryAsync($arguments = [])
 * @method \Dew\Acs\Result listRealtimeLogDelivery(array $arguments = [])
 * @method \Http\Promise\Promise listRealtimeLogDeliveryAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRealtimeLogDelivery(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRealtimeLogDeliveryAsync($arguments = [])
 * @method \Dew\Acs\Result describeRealtimeDeliveryAcc(array $arguments = [])
 * @method \Http\Promise\Promise describeRealtimeDeliveryAccAsync($arguments = [])
 * @method \Dew\Acs\Result listRealtimeLogDeliveryInfos(array $arguments = [])
 * @method \Http\Promise\Promise listRealtimeLogDeliveryInfosAsync($arguments = [])
 * @method \Dew\Acs\Result listRealtimeLogDeliveryDomains(array $arguments = [])
 * @method \Http\Promise\Promise listRealtimeLogDeliveryDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainCustomLogConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainCustomLogConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomLogConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomLogConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnDomainLogs(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnDomainLogsAsync($arguments = [])
 * @method \Dew\Acs\Result listDomainsByLogConfigId(array $arguments = [])
 * @method \Http\Promise\Promise listDomainsByLogConfigIdAsync($arguments = [])
 * @method \Dew\Acs\Result listUserCustomLogConfig(array $arguments = [])
 * @method \Http\Promise\Promise listUserCustomLogConfigAsync($arguments = [])
 * @method \Dew\Acs\Result openCdnService(array $arguments = [])
 * @method \Http\Promise\Promise openCdnServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnRegionAndIsp(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnRegionAndIspAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnOrderCommodityCode(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnOrderCommodityCodeAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnService(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnDomainByCertificate(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnDomainByCertificateAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainCertificateInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainCertificateInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnCertificateDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnCertificateDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnCertificateList(array $arguments = []) {@deprecated 2018-05-10}
 * @method \Http\Promise\Promise describeCdnCertificateListAsync($arguments = []) {@deprecated 2018-05-10}
 * @method \Dew\Acs\Result describeCdnSSLCertificateList(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnSSLCertificateListAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnHttpsDomainList(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnHttpsDomainListAsync($arguments = [])
 * @method \Dew\Acs\Result describeCertificateInfoByID(array $arguments = [])
 * @method \Http\Promise\Promise describeCertificateInfoByIDAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnCertificateDetailById(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnCertificateDetailByIdAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserCertificateExpireCount(array $arguments = [])
 * @method \Http\Promise\Promise describeUserCertificateExpireCountAsync($arguments = [])
 * @method \Dew\Acs\Result createCdnCertificateSigningRequest(array $arguments = [])
 * @method \Http\Promise\Promise createCdnCertificateSigningRequestAsync($arguments = [])
 * @method \Dew\Acs\Result setCdnDomainCSRCertificate(array $arguments = [])
 * @method \Http\Promise\Promise setCdnDomainCSRCertificateAsync($arguments = [])
 * @method \Dew\Acs\Result setCdnDomainSMCertificate(array $arguments = [])
 * @method \Http\Promise\Promise setCdnDomainSMCertificateAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnSMCertificateList(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnSMCertificateListAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnSMCertificateDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnSMCertificateDetailAsync($arguments = [])
 * @method \Dew\Acs\Result setCdnDomainSSLCertificate(array $arguments = [])
 * @method \Http\Promise\Promise setCdnDomainSSLCertificateAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result describeTagResources(array $arguments = [])
 * @method \Http\Promise\Promise describeTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserTags(array $arguments = [])
 * @method \Http\Promise\Promise describeUserTagsAsync($arguments = [])
 * @method \Dew\Acs\Result untagResources(array $arguments = [])
 * @method \Http\Promise\Promise untagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result listTagResources(array $arguments = [])
 * @method \Http\Promise\Promise listTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result createCdnSubTask(array $arguments = [])
 * @method \Http\Promise\Promise createCdnSubTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnSubList(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnSubListAsync($arguments = [])
 * @method \Dew\Acs\Result updateCdnSubTask(array $arguments = [])
 * @method \Http\Promise\Promise updateCdnSubTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCdnSubTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteCdnSubTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnReport(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnReportAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnReportList(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnReportListAsync($arguments = [])
 * @method \Dew\Acs\Result createCdnDeliverTask(array $arguments = [])
 * @method \Http\Promise\Promise createCdnDeliverTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnDeliverList(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnDeliverListAsync($arguments = [])
 * @method \Dew\Acs\Result updateCdnDeliverTask(array $arguments = [])
 * @method \Http\Promise\Promise updateCdnDeliverTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCdnDeliverTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteCdnDeliverTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeIpInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeIpInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeStagingIp(array $arguments = [])
 * @method \Http\Promise\Promise describeStagingIpAsync($arguments = [])
 * @method \Dew\Acs\Result describeL2VipsByDomain(array $arguments = [])
 * @method \Http\Promise\Promise describeL2VipsByDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserVipsByDomain(array $arguments = [])
 * @method \Http\Promise\Promise describeUserVipsByDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeIpStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeIpStatusAsync($arguments = [])
 * @method \Dew\Acs\Result addFCTrigger(array $arguments = [])
 * @method \Http\Promise\Promise addFCTriggerAsync($arguments = [])
 * @method \Dew\Acs\Result updateFCTrigger(array $arguments = [])
 * @method \Http\Promise\Promise updateFCTriggerAsync($arguments = [])
 * @method \Dew\Acs\Result describeFCTrigger(array $arguments = [])
 * @method \Http\Promise\Promise describeFCTriggerAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFCTrigger(array $arguments = [])
 * @method \Http\Promise\Promise deleteFCTriggerAsync($arguments = [])
 * @method \Dew\Acs\Result listFCTrigger(array $arguments = [])
 * @method \Http\Promise\Promise listFCTriggerAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainCcActivityLog(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainCcActivityLogAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainPvData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainPvDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainUvData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainUvDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainTopUrlVisit(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainTopUrlVisitAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainTopClientIpVisit(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainTopClientIpVisitAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainTopReferVisit(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainTopReferVisitAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainSrcTopUrlVisit(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainSrcTopUrlVisitAsync($arguments = [])
 * @method \Dew\Acs\Result describeTopDomainsByFlow(array $arguments = [])
 * @method \Http\Promise\Promise describeTopDomainsByFlowAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRegionData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRegionDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainISPData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainISPDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainAverageResponseTime(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainAverageResponseTimeAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRealTimeDetailData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRealTimeDetailDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainMultiUsageData(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainMultiUsageDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserConfigs(array $arguments = [])
 * @method \Http\Promise\Promise describeUserConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result setReqHeaderConfig(array $arguments = [])
 * @method \Http\Promise\Promise setReqHeaderConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCdnService(array $arguments = [])
 * @method \Http\Promise\Promise modifyCdnServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserCdnStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeUserCdnStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnTypes(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnTypesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCdnDomainOwner(array $arguments = [])
 * @method \Http\Promise\Promise modifyCdnDomainOwnerAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnConditionIPBInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnConditionIPBInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnSecFuncInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnSecFuncInfoAsync($arguments = [])
 * @method \Dew\Acs\Result checkCdnDomainExist(array $arguments = [])
 * @method \Http\Promise\Promise checkCdnDomainExistAsync($arguments = [])
 * @method \Dew\Acs\Result checkCdnDomainICP(array $arguments = [])
 * @method \Http\Promise\Promise checkCdnDomainICPAsync($arguments = [])
 * @method \Dew\Acs\Result batchDescribeCdnIpInfo(array $arguments = [])
 * @method \Http\Promise\Promise batchDescribeCdnIpInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnFullDomainsBlockIPHistory(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnFullDomainsBlockIPHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result setCdnFullDomainsBlockIP(array $arguments = [])
 * @method \Http\Promise\Promise setCdnFullDomainsBlockIPAsync($arguments = [])
 * @method \Dew\Acs\Result describeCdnFullDomainsBlockIPConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeCdnFullDomainsBlockIPConfigAsync($arguments = [])
 */
final class CdnClient extends AcsClient
{
    //
}
