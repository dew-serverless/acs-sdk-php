<?php

declare(strict_types=1);

namespace Dew\Acs\Ddi;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createClusterV2(array $arguments = [])
 * @method \Http\Promise\Promise createClusterV2Async($arguments = [])
 * @method \Dew\Acs\Result releaseCluster(array $arguments = [])
 * @method \Http\Promise\Promise releaseClusterAsync($arguments = [])
 * @method \Dew\Acs\Result describeClusterV2(array $arguments = [])
 * @method \Http\Promise\Promise describeClusterV2Async($arguments = [])
 * @method \Dew\Acs\Result listClusters(array $arguments = [])
 * @method \Http\Promise\Promise listClustersAsync($arguments = [])
 * @method \Dew\Acs\Result createFlowCategory(array $arguments = [])
 * @method \Http\Promise\Promise createFlowCategoryAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFlowCategory(array $arguments = [])
 * @method \Http\Promise\Promise deleteFlowCategoryAsync($arguments = [])
 * @method \Dew\Acs\Result createFlow(array $arguments = [])
 * @method \Http\Promise\Promise createFlowAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFlow(array $arguments = [])
 * @method \Http\Promise\Promise deleteFlowAsync($arguments = [])
 * @method \Dew\Acs\Result listFlow(array $arguments = [])
 * @method \Http\Promise\Promise listFlowAsync($arguments = [])
 * @method \Dew\Acs\Result describeFlow(array $arguments = [])
 * @method \Http\Promise\Promise describeFlowAsync($arguments = [])
 * @method \Dew\Acs\Result createFlowJob(array $arguments = [])
 * @method \Http\Promise\Promise createFlowJobAsync($arguments = [])
 * @method \Dew\Acs\Result cloneFlowJob(array $arguments = [])
 * @method \Http\Promise\Promise cloneFlowJobAsync($arguments = [])
 * @method \Dew\Acs\Result submitFlowJob(array $arguments = [])
 * @method \Http\Promise\Promise submitFlowJobAsync($arguments = [])
 * @method \Dew\Acs\Result killFlowJob(array $arguments = [])
 * @method \Http\Promise\Promise killFlowJobAsync($arguments = [])
 * @method \Dew\Acs\Result modifyFlowJob(array $arguments = [])
 * @method \Http\Promise\Promise modifyFlowJobAsync($arguments = [])
 * @method \Dew\Acs\Result describeFlowJob(array $arguments = [])
 * @method \Http\Promise\Promise describeFlowJobAsync($arguments = [])
 * @method \Dew\Acs\Result listFlowJobs(array $arguments = [])
 * @method \Http\Promise\Promise listFlowJobsAsync($arguments = [])
 * @method \Dew\Acs\Result listFlowJobHistory(array $arguments = [])
 * @method \Http\Promise\Promise listFlowJobHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result rerunFlow(array $arguments = [])
 * @method \Http\Promise\Promise rerunFlowAsync($arguments = [])
 * @method \Dew\Acs\Result submitFlow(array $arguments = [])
 * @method \Http\Promise\Promise submitFlowAsync($arguments = [])
 * @method \Dew\Acs\Result resumeFlow(array $arguments = [])
 * @method \Http\Promise\Promise resumeFlowAsync($arguments = [])
 * @method \Dew\Acs\Result createFlowProject(array $arguments = [])
 * @method \Http\Promise\Promise createFlowProjectAsync($arguments = [])
 * @method \Dew\Acs\Result createFlowProjectUser(array $arguments = [])
 * @method \Http\Promise\Promise createFlowProjectUserAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFlowProject(array $arguments = [])
 * @method \Http\Promise\Promise deleteFlowProjectAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFlowProjectUser(array $arguments = [])
 * @method \Http\Promise\Promise deleteFlowProjectUserAsync($arguments = [])
 * @method \Dew\Acs\Result modifyFlowProject(array $arguments = [])
 * @method \Http\Promise\Promise modifyFlowProjectAsync($arguments = [])
 * @method \Dew\Acs\Result describeFlowProject(array $arguments = [])
 * @method \Http\Promise\Promise describeFlowProjectAsync($arguments = [])
 * @method \Dew\Acs\Result listFlowProjects(array $arguments = [])
 * @method \Http\Promise\Promise listFlowProjectsAsync($arguments = [])
 * @method \Dew\Acs\Result listFlowProjectUser(array $arguments = [])
 * @method \Http\Promise\Promise listFlowProjectUserAsync($arguments = [])
 * @method \Dew\Acs\Result describeFlowCategoryTree(array $arguments = [])
 * @method \Http\Promise\Promise describeFlowCategoryTreeAsync($arguments = [])
 * @method \Dew\Acs\Result describeFlowEntitySnapshot(array $arguments = [])
 * @method \Http\Promise\Promise describeFlowEntitySnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result describeFlowNodeInstance(array $arguments = [])
 * @method \Http\Promise\Promise describeFlowNodeInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result modifyFlowForWeb(array $arguments = [])
 * @method \Http\Promise\Promise modifyFlowForWebAsync($arguments = [])
 */
final class DdiClient extends AcsClient
{
    //
}
