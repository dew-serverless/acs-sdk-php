<?php

declare(strict_types=1);

namespace Dew\Acs\OpenITag;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result listTenants(array $arguments = [])
 * @method \Http\Promise\Promise listTenantsAsync($arguments = [])
 * @method \Dew\Acs\Result getTenant(array $arguments = [])
 * @method \Http\Promise\Promise getTenantAsync($arguments = [])
 * @method \Dew\Acs\Result updateTenant(array $arguments = [])
 * @method \Http\Promise\Promise updateTenantAsync($arguments = [])
 * @method \Dew\Acs\Result listTemplates(array $arguments = [])
 * @method \Http\Promise\Promise listTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result createTemplate(array $arguments = [])
 * @method \Http\Promise\Promise createTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result updateTemplate(array $arguments = [])
 * @method \Http\Promise\Promise updateTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTemplate(array $arguments = [])
 * @method \Http\Promise\Promise deleteTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result getTemplateView(array $arguments = [])
 * @method \Http\Promise\Promise getTemplateViewAsync($arguments = [])
 * @method \Dew\Acs\Result getTemplateQuestions(array $arguments = [])
 * @method \Http\Promise\Promise getTemplateQuestionsAsync($arguments = [])
 * @method \Dew\Acs\Result getTemplate(array $arguments = [])
 * @method \Http\Promise\Promise getTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result appendAllDataToTask(array $arguments = [])
 * @method \Http\Promise\Promise appendAllDataToTaskAsync($arguments = [])
 * @method \Dew\Acs\Result listTasks(array $arguments = [])
 * @method \Http\Promise\Promise listTasksAsync($arguments = [])
 * @method \Dew\Acs\Result createTask(array $arguments = [])
 * @method \Http\Promise\Promise createTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getTask(array $arguments = [])
 * @method \Http\Promise\Promise getTaskAsync($arguments = [])
 * @method \Dew\Acs\Result updateTask(array $arguments = [])
 * @method \Http\Promise\Promise updateTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getTaskTemplateViews(array $arguments = [])
 * @method \Http\Promise\Promise getTaskTemplateViewsAsync($arguments = [])
 * @method \Dew\Acs\Result getTaskTemplateQuestions(array $arguments = [])
 * @method \Http\Promise\Promise getTaskTemplateQuestionsAsync($arguments = [])
 * @method \Dew\Acs\Result getTaskTemplate(array $arguments = [])
 * @method \Http\Promise\Promise getTaskTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result getTaskStatus(array $arguments = [])
 * @method \Http\Promise\Promise getTaskStatusAsync($arguments = [])
 * @method \Dew\Acs\Result getTaskStatistics(array $arguments = [])
 * @method \Http\Promise\Promise getTaskStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result listSubtasks(array $arguments = [])
 * @method \Http\Promise\Promise listSubtasksAsync($arguments = [])
 * @method \Dew\Acs\Result getSubtask(array $arguments = [])
 * @method \Http\Promise\Promise getSubtaskAsync($arguments = [])
 * @method \Dew\Acs\Result listSubtaskItems(array $arguments = [])
 * @method \Http\Promise\Promise listSubtaskItemsAsync($arguments = [])
 * @method \Dew\Acs\Result getSubtaskItem(array $arguments = [])
 * @method \Http\Promise\Promise getSubtaskItemAsync($arguments = [])
 * @method \Dew\Acs\Result exportAnnotations(array $arguments = [])
 * @method \Http\Promise\Promise exportAnnotationsAsync($arguments = [])
 * @method \Dew\Acs\Result listJobs(array $arguments = [])
 * @method \Http\Promise\Promise listJobsAsync($arguments = [])
 * @method \Dew\Acs\Result getJob(array $arguments = [])
 * @method \Http\Promise\Promise getJobAsync($arguments = [])
 * @method \Dew\Acs\Result listUsers(array $arguments = [])
 * @method \Http\Promise\Promise listUsersAsync($arguments = [])
 * @method \Dew\Acs\Result getUser(array $arguments = [])
 * @method \Http\Promise\Promise getUserAsync($arguments = [])
 * @method \Dew\Acs\Result createUser(array $arguments = [])
 * @method \Http\Promise\Promise createUserAsync($arguments = [])
 * @method \Dew\Acs\Result updateUser(array $arguments = [])
 * @method \Http\Promise\Promise updateUserAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUser(array $arguments = [])
 * @method \Http\Promise\Promise deleteUserAsync($arguments = [])
 * @method \Dew\Acs\Result getTaskWorkforce(array $arguments = [])
 * @method \Http\Promise\Promise getTaskWorkforceAsync($arguments = [])
 * @method \Dew\Acs\Result addWorkNodeWorkforce(array $arguments = [])
 * @method \Http\Promise\Promise addWorkNodeWorkforceAsync($arguments = [])
 * @method \Dew\Acs\Result getTaskWorkforceStatistic(array $arguments = [])
 * @method \Http\Promise\Promise getTaskWorkforceStatisticAsync($arguments = [])
 * @method \Dew\Acs\Result updateTaskWorkforce(array $arguments = [])
 * @method \Http\Promise\Promise updateTaskWorkforceAsync($arguments = [])
 * @method \Dew\Acs\Result removeWorkNodeWorkforce(array $arguments = [])
 * @method \Http\Promise\Promise removeWorkNodeWorkforceAsync($arguments = [])
 */
final class OpenITagClient extends AcsClient
{
    //
}
