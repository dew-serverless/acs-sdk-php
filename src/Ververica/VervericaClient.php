<?php

declare(strict_types=1);

namespace Dew\Acs\Ververica;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createFolder(array $arguments = [])
 * @method \Http\Promise\Promise createFolderAsync($arguments = [])
 * @method \Dew\Acs\Result updateFolder(array $arguments = [])
 * @method \Http\Promise\Promise updateFolderAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFolder(array $arguments = [])
 * @method \Http\Promise\Promise deleteFolderAsync($arguments = [])
 * @method \Dew\Acs\Result getFolder(array $arguments = [])
 * @method \Http\Promise\Promise getFolderAsync($arguments = [])
 * @method \Dew\Acs\Result createDeploymentDraft(array $arguments = [])
 * @method \Http\Promise\Promise createDeploymentDraftAsync($arguments = [])
 * @method \Dew\Acs\Result updateDeploymentDraft(array $arguments = [])
 * @method \Http\Promise\Promise updateDeploymentDraftAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDeploymentDraft(array $arguments = [])
 * @method \Http\Promise\Promise deleteDeploymentDraftAsync($arguments = [])
 * @method \Dew\Acs\Result getDeploymentDraft(array $arguments = [])
 * @method \Http\Promise\Promise getDeploymentDraftAsync($arguments = [])
 * @method \Dew\Acs\Result listDeploymentDrafts(array $arguments = [])
 * @method \Http\Promise\Promise listDeploymentDraftsAsync($arguments = [])
 * @method \Dew\Acs\Result getDeploymentDraftLock(array $arguments = [])
 * @method \Http\Promise\Promise getDeploymentDraftLockAsync($arguments = [])
 * @method \Dew\Acs\Result deployDeploymentDraftAsync(array $arguments = [])
 * @method \Http\Promise\Promise deployDeploymentDraftAsyncAsync($arguments = [])
 * @method \Dew\Acs\Result getDeployDeploymentDraftResult(array $arguments = [])
 * @method \Http\Promise\Promise getDeployDeploymentDraftResultAsync($arguments = [])
 * @method \Dew\Acs\Result createUdfArtifact(array $arguments = [])
 * @method \Http\Promise\Promise createUdfArtifactAsync($arguments = [])
 * @method \Dew\Acs\Result updateUdfArtifact(array $arguments = [])
 * @method \Http\Promise\Promise updateUdfArtifactAsync($arguments = [])
 * @method \Dew\Acs\Result getUdfArtifacts(array $arguments = [])
 * @method \Http\Promise\Promise getUdfArtifactsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUdfArtifact(array $arguments = [])
 * @method \Http\Promise\Promise deleteUdfArtifactAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUdfFunction(array $arguments = [])
 * @method \Http\Promise\Promise deleteUdfFunctionAsync($arguments = [])
 * @method \Dew\Acs\Result registerUdfFunction(array $arguments = [])
 * @method \Http\Promise\Promise registerUdfFunctionAsync($arguments = [])
 * @method \Dew\Acs\Result listCustomConnectors(array $arguments = [])
 * @method \Http\Promise\Promise listCustomConnectorsAsync($arguments = [])
 * @method \Dew\Acs\Result registerCustomConnector(array $arguments = [])
 * @method \Http\Promise\Promise registerCustomConnectorAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCustomConnector(array $arguments = [])
 * @method \Http\Promise\Promise deleteCustomConnectorAsync($arguments = [])
 * @method \Dew\Acs\Result getDatabases(array $arguments = [])
 * @method \Http\Promise\Promise getDatabasesAsync($arguments = [])
 * @method \Dew\Acs\Result getTables(array $arguments = [])
 * @method \Http\Promise\Promise getTablesAsync($arguments = [])
 * @method \Dew\Acs\Result getCatalogs(array $arguments = [])
 * @method \Http\Promise\Promise getCatalogsAsync($arguments = [])
 * @method \Dew\Acs\Result executeSqlStatement(array $arguments = [])
 * @method \Http\Promise\Promise executeSqlStatementAsync($arguments = [])
 * @method \Dew\Acs\Result createSavepoint(array $arguments = [])
 * @method \Http\Promise\Promise createSavepointAsync($arguments = [])
 * @method \Dew\Acs\Result getSavepoint(array $arguments = [])
 * @method \Http\Promise\Promise getSavepointAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSavepoint(array $arguments = [])
 * @method \Http\Promise\Promise deleteSavepointAsync($arguments = [])
 * @method \Dew\Acs\Result listSavepoints(array $arguments = [])
 * @method \Http\Promise\Promise listSavepointsAsync($arguments = [])
 * @method \Dew\Acs\Result createDeployment(array $arguments = [])
 * @method \Http\Promise\Promise createDeploymentAsync($arguments = [])
 * @method \Dew\Acs\Result updateDeployment(array $arguments = [])
 * @method \Http\Promise\Promise updateDeploymentAsync($arguments = [])
 * @method \Dew\Acs\Result getDeployment(array $arguments = [])
 * @method \Http\Promise\Promise getDeploymentAsync($arguments = [])
 * @method \Dew\Acs\Result listDeployments(array $arguments = [])
 * @method \Http\Promise\Promise listDeploymentsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDeployment(array $arguments = [])
 * @method \Http\Promise\Promise deleteDeploymentAsync($arguments = [])
 * @method \Dew\Acs\Result getEvents(array $arguments = [])
 * @method \Http\Promise\Promise getEventsAsync($arguments = [])
 * @method \Dew\Acs\Result getJob(array $arguments = [])
 * @method \Http\Promise\Promise getJobAsync($arguments = [])
 * @method \Dew\Acs\Result listJobs(array $arguments = [])
 * @method \Http\Promise\Promise listJobsAsync($arguments = [])
 * @method \Dew\Acs\Result startJobWithParams(array $arguments = [])
 * @method \Http\Promise\Promise startJobWithParamsAsync($arguments = [])
 * @method \Dew\Acs\Result stopJob(array $arguments = [])
 * @method \Http\Promise\Promise stopJobAsync($arguments = [])
 * @method \Dew\Acs\Result deleteJob(array $arguments = [])
 * @method \Http\Promise\Promise deleteJobAsync($arguments = [])
 * @method \Dew\Acs\Result hotUpdateJob(array $arguments = [])
 * @method \Http\Promise\Promise hotUpdateJobAsync($arguments = [])
 * @method \Dew\Acs\Result getHotUpdateJobResult(array $arguments = [])
 * @method \Http\Promise\Promise getHotUpdateJobResultAsync($arguments = [])
 * @method \Dew\Acs\Result getLatestJobStartLog(array $arguments = [])
 * @method \Http\Promise\Promise getLatestJobStartLogAsync($arguments = [])
 * @method \Dew\Acs\Result startJob(array $arguments = []) {@deprecated 2022-07-18}
 * @method \Http\Promise\Promise startJobAsync($arguments = []) {@deprecated 2022-07-18}
 * @method \Dew\Acs\Result createScheduledPlan(array $arguments = [])
 * @method \Http\Promise\Promise createScheduledPlanAsync($arguments = [])
 * @method \Dew\Acs\Result updateScheduledPlan(array $arguments = [])
 * @method \Http\Promise\Promise updateScheduledPlanAsync($arguments = [])
 * @method \Dew\Acs\Result deleteScheduledPlan(array $arguments = [])
 * @method \Http\Promise\Promise deleteScheduledPlanAsync($arguments = [])
 * @method \Dew\Acs\Result listScheduledPlan(array $arguments = [])
 * @method \Http\Promise\Promise listScheduledPlanAsync($arguments = [])
 * @method \Dew\Acs\Result applyScheduledPlan(array $arguments = [])
 * @method \Http\Promise\Promise applyScheduledPlanAsync($arguments = [])
 * @method \Dew\Acs\Result stopApplyScheduledPlan(array $arguments = [])
 * @method \Http\Promise\Promise stopApplyScheduledPlanAsync($arguments = [])
 * @method \Dew\Acs\Result getAppliedScheduledPlan(array $arguments = [])
 * @method \Http\Promise\Promise getAppliedScheduledPlanAsync($arguments = [])
 * @method \Dew\Acs\Result listScheduledPlanExecutedHistory(array $arguments = [])
 * @method \Http\Promise\Promise listScheduledPlanExecutedHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result createSessionCluster(array $arguments = [])
 * @method \Http\Promise\Promise createSessionClusterAsync($arguments = [])
 * @method \Dew\Acs\Result updateSessionCluster(array $arguments = [])
 * @method \Http\Promise\Promise updateSessionClusterAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSessionCluster(array $arguments = [])
 * @method \Http\Promise\Promise deleteSessionClusterAsync($arguments = [])
 * @method \Dew\Acs\Result getSessionCluster(array $arguments = [])
 * @method \Http\Promise\Promise getSessionClusterAsync($arguments = [])
 * @method \Dew\Acs\Result listSessionClusters(array $arguments = [])
 * @method \Http\Promise\Promise listSessionClustersAsync($arguments = [])
 * @method \Dew\Acs\Result startSessionCluster(array $arguments = [])
 * @method \Http\Promise\Promise startSessionClusterAsync($arguments = [])
 * @method \Dew\Acs\Result stopSessionCluster(array $arguments = [])
 * @method \Http\Promise\Promise stopSessionClusterAsync($arguments = [])
 * @method \Dew\Acs\Result createDeploymentTarget(array $arguments = [])
 * @method \Http\Promise\Promise createDeploymentTargetAsync($arguments = [])
 * @method \Dew\Acs\Result updateDeploymentTarget(array $arguments = [])
 * @method \Http\Promise\Promise updateDeploymentTargetAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDeploymentTarget(array $arguments = [])
 * @method \Http\Promise\Promise deleteDeploymentTargetAsync($arguments = [])
 * @method \Dew\Acs\Result listDeploymentTargets(array $arguments = [])
 * @method \Http\Promise\Promise listDeploymentTargetsAsync($arguments = [])
 * @method \Dew\Acs\Result createMember(array $arguments = [])
 * @method \Http\Promise\Promise createMemberAsync($arguments = [])
 * @method \Dew\Acs\Result updateMember(array $arguments = [])
 * @method \Http\Promise\Promise updateMemberAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMember(array $arguments = [])
 * @method \Http\Promise\Promise deleteMemberAsync($arguments = [])
 * @method \Dew\Acs\Result getMember(array $arguments = [])
 * @method \Http\Promise\Promise getMemberAsync($arguments = [])
 * @method \Dew\Acs\Result listMembers(array $arguments = [])
 * @method \Http\Promise\Promise listMembersAsync($arguments = [])
 * @method \Dew\Acs\Result updateVariable(array $arguments = [])
 * @method \Http\Promise\Promise updateVariableAsync($arguments = [])
 * @method \Dew\Acs\Result createVariable(array $arguments = [])
 * @method \Http\Promise\Promise createVariableAsync($arguments = [])
 * @method \Dew\Acs\Result deleteVariable(array $arguments = [])
 * @method \Http\Promise\Promise deleteVariableAsync($arguments = [])
 * @method \Dew\Acs\Result listVariables(array $arguments = [])
 * @method \Http\Promise\Promise listVariablesAsync($arguments = [])
 * @method \Dew\Acs\Result getJobDiagnosis(array $arguments = [])
 * @method \Http\Promise\Promise getJobDiagnosisAsync($arguments = [])
 * @method \Dew\Acs\Result listEngineVersionMetadata(array $arguments = [])
 * @method \Http\Promise\Promise listEngineVersionMetadataAsync($arguments = [])
 * @method \Dew\Acs\Result validateSqlStatement(array $arguments = [])
 * @method \Http\Promise\Promise validateSqlStatementAsync($arguments = [])
 * @method \Dew\Acs\Result generateResourcePlanWithFlinkConfAsync(array $arguments = [])
 * @method \Http\Promise\Promise generateResourcePlanWithFlinkConfAsyncAsync($arguments = [])
 * @method \Dew\Acs\Result getGenerateResourcePlanResult(array $arguments = [])
 * @method \Http\Promise\Promise getGenerateResourcePlanResultAsync($arguments = [])
 * @method \Dew\Acs\Result flinkApiProxy(array $arguments = [])
 * @method \Http\Promise\Promise flinkApiProxyAsync($arguments = [])
 * @method \Dew\Acs\Result getLineageInfo(array $arguments = [])
 * @method \Http\Promise\Promise getLineageInfoAsync($arguments = [])
 */
final class VervericaClient extends AcsClient
{
    //
}
