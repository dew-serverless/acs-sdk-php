<?php

declare(strict_types=1);

namespace Dew\Acs\DlfNext;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result subscribe(array $arguments = [])
 * @method \Http\Promise\Promise subscribeAsync($arguments = [])
 * @method \Dew\Acs\Result describeRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result getRegionStatus(array $arguments = [])
 * @method \Http\Promise\Promise getRegionStatusAsync($arguments = [])
 * @method \Dew\Acs\Result createCatalog(array $arguments = [])
 * @method \Http\Promise\Promise createCatalogAsync($arguments = [])
 * @method \Dew\Acs\Result getCatalog(array $arguments = [])
 * @method \Http\Promise\Promise getCatalogAsync($arguments = [])
 * @method \Dew\Acs\Result getCatalogById(array $arguments = [])
 * @method \Http\Promise\Promise getCatalogByIdAsync($arguments = [])
 * @method \Dew\Acs\Result alterCatalog(array $arguments = [])
 * @method \Http\Promise\Promise alterCatalogAsync($arguments = [])
 * @method \Dew\Acs\Result dropCatalog(array $arguments = [])
 * @method \Http\Promise\Promise dropCatalogAsync($arguments = [])
 * @method \Dew\Acs\Result listCatalogs(array $arguments = [])
 * @method \Http\Promise\Promise listCatalogsAsync($arguments = [])
 * @method \Dew\Acs\Result getCatalogToken(array $arguments = [])
 * @method \Http\Promise\Promise getCatalogTokenAsync($arguments = [])
 * @method \Dew\Acs\Result getDatabase(array $arguments = [])
 * @method \Http\Promise\Promise getDatabaseAsync($arguments = [])
 * @method \Dew\Acs\Result createDatabase(array $arguments = [])
 * @method \Http\Promise\Promise createDatabaseAsync($arguments = [])
 * @method \Dew\Acs\Result alterDatabase(array $arguments = [])
 * @method \Http\Promise\Promise alterDatabaseAsync($arguments = [])
 * @method \Dew\Acs\Result dropDatabase(array $arguments = [])
 * @method \Http\Promise\Promise dropDatabaseAsync($arguments = [])
 * @method \Dew\Acs\Result listDatabases(array $arguments = [])
 * @method \Http\Promise\Promise listDatabasesAsync($arguments = [])
 * @method \Dew\Acs\Result listDatabaseDetails(array $arguments = [])
 * @method \Http\Promise\Promise listDatabaseDetailsAsync($arguments = [])
 * @method \Dew\Acs\Result getTableCompaction(array $arguments = [])
 * @method \Http\Promise\Promise getTableCompactionAsync($arguments = [])
 * @method \Dew\Acs\Result getTable(array $arguments = [])
 * @method \Http\Promise\Promise getTableAsync($arguments = [])
 * @method \Dew\Acs\Result createTable(array $arguments = [])
 * @method \Http\Promise\Promise createTableAsync($arguments = [])
 * @method \Dew\Acs\Result alterTable(array $arguments = [])
 * @method \Http\Promise\Promise alterTableAsync($arguments = [])
 * @method \Dew\Acs\Result dropTable(array $arguments = [])
 * @method \Http\Promise\Promise dropTableAsync($arguments = [])
 * @method \Dew\Acs\Result rollbackTable(array $arguments = [])
 * @method \Http\Promise\Promise rollbackTableAsync($arguments = [])
 * @method \Dew\Acs\Result listTables(array $arguments = [])
 * @method \Http\Promise\Promise listTablesAsync($arguments = [])
 * @method \Dew\Acs\Result listTableDetails(array $arguments = [])
 * @method \Http\Promise\Promise listTableDetailsAsync($arguments = [])
 * @method \Dew\Acs\Result getTableSnapshot(array $arguments = [])
 * @method \Http\Promise\Promise getTableSnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result listSnapshots(array $arguments = [])
 * @method \Http\Promise\Promise listSnapshotsAsync($arguments = [])
 * @method \Dew\Acs\Result getTableToken(array $arguments = [])
 * @method \Http\Promise\Promise getTableTokenAsync($arguments = [])
 * @method \Dew\Acs\Result listPartitions(array $arguments = [])
 * @method \Http\Promise\Promise listPartitionsAsync($arguments = [])
 * @method \Dew\Acs\Result createShare(array $arguments = [])
 * @method \Http\Promise\Promise createShareAsync($arguments = [])
 * @method \Dew\Acs\Result getShare(array $arguments = [])
 * @method \Http\Promise\Promise getShareAsync($arguments = [])
 * @method \Dew\Acs\Result alterShare(array $arguments = [])
 * @method \Http\Promise\Promise alterShareAsync($arguments = [])
 * @method \Dew\Acs\Result dropShare(array $arguments = [])
 * @method \Http\Promise\Promise dropShareAsync($arguments = [])
 * @method \Dew\Acs\Result listProvidedShares(array $arguments = [])
 * @method \Http\Promise\Promise listProvidedSharesAsync($arguments = [])
 * @method \Dew\Acs\Result listReceivedShares(array $arguments = [])
 * @method \Http\Promise\Promise listReceivedSharesAsync($arguments = [])
 * @method \Dew\Acs\Result createReceiver(array $arguments = [])
 * @method \Http\Promise\Promise createReceiverAsync($arguments = [])
 * @method \Dew\Acs\Result getReceiver(array $arguments = [])
 * @method \Http\Promise\Promise getReceiverAsync($arguments = [])
 * @method \Dew\Acs\Result alterReceiver(array $arguments = [])
 * @method \Http\Promise\Promise alterReceiverAsync($arguments = [])
 * @method \Dew\Acs\Result dropReceiver(array $arguments = [])
 * @method \Http\Promise\Promise dropReceiverAsync($arguments = [])
 * @method \Dew\Acs\Result listReceivers(array $arguments = [])
 * @method \Http\Promise\Promise listReceiversAsync($arguments = [])
 * @method \Dew\Acs\Result listShareReceivers(array $arguments = [])
 * @method \Http\Promise\Promise listShareReceiversAsync($arguments = [])
 * @method \Dew\Acs\Result alterShareReceivers(array $arguments = [])
 * @method \Http\Promise\Promise alterShareReceiversAsync($arguments = [])
 * @method \Dew\Acs\Result alterShareResources(array $arguments = [])
 * @method \Http\Promise\Promise alterShareResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result listShareResources(array $arguments = [])
 * @method \Http\Promise\Promise listShareResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result batchGrantPermissions(array $arguments = [])
 * @method \Http\Promise\Promise batchGrantPermissionsAsync($arguments = [])
 * @method \Dew\Acs\Result batchRevokePermissions(array $arguments = [])
 * @method \Http\Promise\Promise batchRevokePermissionsAsync($arguments = [])
 * @method \Dew\Acs\Result listPermissions(array $arguments = [])
 * @method \Http\Promise\Promise listPermissionsAsync($arguments = [])
 * @method \Dew\Acs\Result createRole(array $arguments = [])
 * @method \Http\Promise\Promise createRoleAsync($arguments = [])
 * @method \Dew\Acs\Result getRole(array $arguments = [])
 * @method \Http\Promise\Promise getRoleAsync($arguments = [])
 * @method \Dew\Acs\Result updateRole(array $arguments = [])
 * @method \Http\Promise\Promise updateRoleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRole(array $arguments = [])
 * @method \Http\Promise\Promise deleteRoleAsync($arguments = [])
 * @method \Dew\Acs\Result listRoles(array $arguments = [])
 * @method \Http\Promise\Promise listRolesAsync($arguments = [])
 * @method \Dew\Acs\Result getUser(array $arguments = [])
 * @method \Http\Promise\Promise getUserAsync($arguments = [])
 * @method \Dew\Acs\Result listUsers(array $arguments = [])
 * @method \Http\Promise\Promise listUsersAsync($arguments = [])
 * @method \Dew\Acs\Result listRoleUsers(array $arguments = [])
 * @method \Http\Promise\Promise listRoleUsersAsync($arguments = [])
 * @method \Dew\Acs\Result updateRoleUsers(array $arguments = [])
 * @method \Http\Promise\Promise updateRoleUsersAsync($arguments = [])
 * @method \Dew\Acs\Result listUserRoles(array $arguments = [])
 * @method \Http\Promise\Promise listUserRolesAsync($arguments = [])
 * @method \Dew\Acs\Result grantRoleToUsers(array $arguments = [])
 * @method \Http\Promise\Promise grantRoleToUsersAsync($arguments = [])
 * @method \Dew\Acs\Result revokeRoleFromUsers(array $arguments = [])
 * @method \Http\Promise\Promise revokeRoleFromUsersAsync($arguments = [])
 * @method \Dew\Acs\Result refreshUserSync(array $arguments = [])
 * @method \Http\Promise\Promise refreshUserSyncAsync($arguments = [])
 * @method \Dew\Acs\Result getCatalogSummary(array $arguments = [])
 * @method \Http\Promise\Promise getCatalogSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result getCatalogSummaryTrend(array $arguments = [])
 * @method \Http\Promise\Promise getCatalogSummaryTrendAsync($arguments = [])
 * @method \Dew\Acs\Result getDatabaseSummary(array $arguments = [])
 * @method \Http\Promise\Promise getDatabaseSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result getTableSummary(array $arguments = [])
 * @method \Http\Promise\Promise getTableSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result listPartitionSummaries(array $arguments = [])
 * @method \Http\Promise\Promise listPartitionSummariesAsync($arguments = [])
 * @method \Dew\Acs\Result listIcebergTableDetails(array $arguments = [])
 * @method \Http\Promise\Promise listIcebergTableDetailsAsync($arguments = [])
 * @method \Dew\Acs\Result listIcebergSnapshots(array $arguments = [])
 * @method \Http\Promise\Promise listIcebergSnapshotsAsync($arguments = [])
 * @method \Dew\Acs\Result listIcebergNamespaceDetails(array $arguments = [])
 * @method \Http\Promise\Promise listIcebergNamespaceDetailsAsync($arguments = [])
 * @method \Dew\Acs\Result getIcebergTable(array $arguments = [])
 * @method \Http\Promise\Promise getIcebergTableAsync($arguments = [])
 * @method \Dew\Acs\Result getIcebergNamespace(array $arguments = [])
 * @method \Http\Promise\Promise getIcebergNamespaceAsync($arguments = [])
 */
final class DlfNextClient extends AcsClient
{
    //
}
