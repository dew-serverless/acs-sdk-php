<?php

declare(strict_types=1);

namespace Dew\Acs\SWASOPEN;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createInstances(array $arguments = [])
 * @method \Http\Promise\Promise createInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result startInstance(array $arguments = [])
 * @method \Http\Promise\Promise startInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result startInstances(array $arguments = [])
 * @method \Http\Promise\Promise startInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceStatus(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceStatusAsync($arguments = [])
 * @method \Dew\Acs\Result stopInstance(array $arguments = [])
 * @method \Http\Promise\Promise stopInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result stopInstances(array $arguments = [])
 * @method \Http\Promise\Promise stopInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result updateInstanceAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateInstanceAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listInstances(array $arguments = [])
 * @method \Http\Promise\Promise listInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result loginInstance(array $arguments = [])
 * @method \Http\Promise\Promise loginInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceVncUrl(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceVncUrlAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceVncPassword(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceVncPasswordAsync($arguments = [])
 * @method \Dew\Acs\Result listInstancePlansModification(array $arguments = [])
 * @method \Http\Promise\Promise listInstancePlansModificationAsync($arguments = [])
 * @method \Dew\Acs\Result listInstancesTrafficPackages(array $arguments = [])
 * @method \Http\Promise\Promise listInstancesTrafficPackagesAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstancePasswordsSetting(array $arguments = [])
 * @method \Http\Promise\Promise describeInstancePasswordsSettingAsync($arguments = [])
 * @method \Dew\Acs\Result installCloudMonitorAgent(array $arguments = [])
 * @method \Http\Promise\Promise installCloudMonitorAgentAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudMonitorAgentStatuses(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudMonitorAgentStatusesAsync($arguments = [])
 * @method \Dew\Acs\Result describeMonitorData(array $arguments = [])
 * @method \Http\Promise\Promise describeMonitorDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeSecurityAgentStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeSecurityAgentStatusAsync($arguments = [])
 * @method \Dew\Acs\Result rebootInstance(array $arguments = [])
 * @method \Http\Promise\Promise rebootInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result rebootInstances(array $arguments = [])
 * @method \Http\Promise\Promise rebootInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeInstance(array $arguments = [])
 * @method \Http\Promise\Promise upgradeInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result renewInstance(array $arguments = [])
 * @method \Http\Promise\Promise renewInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result resetSystem(array $arguments = [])
 * @method \Http\Promise\Promise resetSystemAsync($arguments = [])
 * @method \Dew\Acs\Result createInstanceKeyPair(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceKeyPairAsync($arguments = [])
 * @method \Dew\Acs\Result createKeyPair(array $arguments = [])
 * @method \Http\Promise\Promise createKeyPairAsync($arguments = [])
 * @method \Dew\Acs\Result uploadInstanceKeyPair(array $arguments = [])
 * @method \Http\Promise\Promise uploadInstanceKeyPairAsync($arguments = [])
 * @method \Dew\Acs\Result importKeyPair(array $arguments = [])
 * @method \Http\Promise\Promise importKeyPairAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceKeyPair(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceKeyPairAsync($arguments = [])
 * @method \Dew\Acs\Result listKeyPairs(array $arguments = [])
 * @method \Http\Promise\Promise listKeyPairsAsync($arguments = [])
 * @method \Dew\Acs\Result attachKeyPair(array $arguments = [])
 * @method \Http\Promise\Promise attachKeyPairAsync($arguments = [])
 * @method \Dew\Acs\Result detachKeyPair(array $arguments = [])
 * @method \Http\Promise\Promise detachKeyPairAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstanceKeyPair(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstanceKeyPairAsync($arguments = [])
 * @method \Dew\Acs\Result deleteKeyPairs(array $arguments = [])
 * @method \Http\Promise\Promise deleteKeyPairsAsync($arguments = [])
 * @method \Dew\Acs\Result createFirewallTemplate(array $arguments = [])
 * @method \Http\Promise\Promise createFirewallTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result describeFirewallTemplates(array $arguments = [])
 * @method \Http\Promise\Promise describeFirewallTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result createFirewallTemplateRules(array $arguments = [])
 * @method \Http\Promise\Promise createFirewallTemplateRulesAsync($arguments = [])
 * @method \Dew\Acs\Result applyFirewallTemplate(array $arguments = [])
 * @method \Http\Promise\Promise applyFirewallTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result modifyFirewallTemplate(array $arguments = [])
 * @method \Http\Promise\Promise modifyFirewallTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result describeFirewallTemplateApplyResults(array $arguments = [])
 * @method \Http\Promise\Promise describeFirewallTemplateApplyResultsAsync($arguments = [])
 * @method \Dew\Acs\Result describeFirewallTemplateRulesApplyResult(array $arguments = [])
 * @method \Http\Promise\Promise describeFirewallTemplateRulesApplyResultAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFirewallTemplateRules(array $arguments = [])
 * @method \Http\Promise\Promise deleteFirewallTemplateRulesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFirewallTemplates(array $arguments = [])
 * @method \Http\Promise\Promise deleteFirewallTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFirewallRules(array $arguments = [])
 * @method \Http\Promise\Promise deleteFirewallRulesAsync($arguments = [])
 * @method \Dew\Acs\Result createFirewallRule(array $arguments = [])
 * @method \Http\Promise\Promise createFirewallRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createFirewallRules(array $arguments = [])
 * @method \Http\Promise\Promise createFirewallRulesAsync($arguments = [])
 * @method \Dew\Acs\Result listFirewallRules(array $arguments = [])
 * @method \Http\Promise\Promise listFirewallRulesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyFirewallRule(array $arguments = [])
 * @method \Http\Promise\Promise modifyFirewallRuleAsync($arguments = [])
 * @method \Dew\Acs\Result enableFirewallRule(array $arguments = [])
 * @method \Http\Promise\Promise enableFirewallRuleAsync($arguments = [])
 * @method \Dew\Acs\Result disableFirewallRule(array $arguments = [])
 * @method \Http\Promise\Promise disableFirewallRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFirewallRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteFirewallRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createSnapshot(array $arguments = [])
 * @method \Http\Promise\Promise createSnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result listSnapshots(array $arguments = [])
 * @method \Http\Promise\Promise listSnapshotsAsync($arguments = [])
 * @method \Dew\Acs\Result updateSnapshotAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateSnapshotAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSnapshot(array $arguments = [])
 * @method \Http\Promise\Promise deleteSnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSnapshots(array $arguments = [])
 * @method \Http\Promise\Promise deleteSnapshotsAsync($arguments = [])
 * @method \Dew\Acs\Result updateDiskAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateDiskAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listDisks(array $arguments = [])
 * @method \Http\Promise\Promise listDisksAsync($arguments = [])
 * @method \Dew\Acs\Result resetDisk(array $arguments = [])
 * @method \Http\Promise\Promise resetDiskAsync($arguments = [])
 * @method \Dew\Acs\Result createCustomImage(array $arguments = [])
 * @method \Http\Promise\Promise createCustomImageAsync($arguments = [])
 * @method \Dew\Acs\Result listCustomImages(array $arguments = [])
 * @method \Http\Promise\Promise listCustomImagesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyImageShareStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyImageShareStatusAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCustomImage(array $arguments = [])
 * @method \Http\Promise\Promise deleteCustomImageAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCustomImages(array $arguments = [])
 * @method \Http\Promise\Promise deleteCustomImagesAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudAssistantAttributes(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudAssistantAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result updateCommandAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateCommandAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result invokeCommand(array $arguments = [])
 * @method \Http\Promise\Promise invokeCommandAsync($arguments = [])
 * @method \Dew\Acs\Result describeCommands(array $arguments = [])
 * @method \Http\Promise\Promise describeCommandsAsync($arguments = [])
 * @method \Dew\Acs\Result describeCommandInvocations(array $arguments = [])
 * @method \Http\Promise\Promise describeCommandInvocationsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCommand(array $arguments = [])
 * @method \Http\Promise\Promise deleteCommandAsync($arguments = [])
 * @method \Dew\Acs\Result createCommand(array $arguments = [])
 * @method \Http\Promise\Promise createCommandAsync($arguments = [])
 * @method \Dew\Acs\Result startTerminalSession(array $arguments = [])
 * @method \Http\Promise\Promise startTerminalSessionAsync($arguments = [])
 * @method \Dew\Acs\Result installCloudAssistant(array $arguments = [])
 * @method \Http\Promise\Promise installCloudAssistantAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudAssistantStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudAssistantStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeInvocationResult(array $arguments = [])
 * @method \Http\Promise\Promise describeInvocationResultAsync($arguments = [])
 * @method \Dew\Acs\Result runCommand(array $arguments = [])
 * @method \Http\Promise\Promise runCommandAsync($arguments = [])
 * @method \Dew\Acs\Result describeInvocations(array $arguments = [])
 * @method \Http\Promise\Promise describeInvocationsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDatabaseInstanceParameter(array $arguments = [])
 * @method \Http\Promise\Promise modifyDatabaseInstanceParameterAsync($arguments = [])
 * @method \Dew\Acs\Result stopDatabaseInstance(array $arguments = [])
 * @method \Http\Promise\Promise stopDatabaseInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result startDatabaseInstance(array $arguments = [])
 * @method \Http\Promise\Promise startDatabaseInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDatabaseInstanceDescription(array $arguments = [])
 * @method \Http\Promise\Promise modifyDatabaseInstanceDescriptionAsync($arguments = [])
 * @method \Dew\Acs\Result describeDatabaseSlowLogRecords(array $arguments = [])
 * @method \Http\Promise\Promise describeDatabaseSlowLogRecordsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDatabaseErrorLogs(array $arguments = [])
 * @method \Http\Promise\Promise describeDatabaseErrorLogsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDatabaseInstanceMetricData(array $arguments = [])
 * @method \Http\Promise\Promise describeDatabaseInstanceMetricDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDatabaseInstanceParameters(array $arguments = [])
 * @method \Http\Promise\Promise describeDatabaseInstanceParametersAsync($arguments = [])
 * @method \Dew\Acs\Result describeDatabaseInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeDatabaseInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result allocatePublicConnection(array $arguments = [])
 * @method \Http\Promise\Promise allocatePublicConnectionAsync($arguments = [])
 * @method \Dew\Acs\Result restartDatabaseInstance(array $arguments = [])
 * @method \Http\Promise\Promise restartDatabaseInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result resetDatabaseAccountPassword(array $arguments = [])
 * @method \Http\Promise\Promise resetDatabaseAccountPasswordAsync($arguments = [])
 * @method \Dew\Acs\Result releasePublicConnection(array $arguments = [])
 * @method \Http\Promise\Promise releasePublicConnectionAsync($arguments = [])
 * @method \Dew\Acs\Result listTagResources(array $arguments = [])
 * @method \Http\Promise\Promise listTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result untagResources(array $arguments = [])
 * @method \Http\Promise\Promise untagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result listRegions(array $arguments = [])
 * @method \Http\Promise\Promise listRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result listImages(array $arguments = [])
 * @method \Http\Promise\Promise listImagesAsync($arguments = [])
 * @method \Dew\Acs\Result listPlans(array $arguments = [])
 * @method \Http\Promise\Promise listPlansAsync($arguments = [])
 */
final class SWASOPENClient extends AcsClient
{
    //
}
