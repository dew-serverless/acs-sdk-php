<?php

declare(strict_types=1);

namespace Dew\Acs\Searchplat;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result deleteWorkspace(array $arguments = [])
 * @method \Http\Promise\Promise deleteWorkspaceAsync($arguments = [])
 * @method \Dew\Acs\Result createWorkspace(array $arguments = [])
 * @method \Http\Promise\Promise createWorkspaceAsync($arguments = [])
 * @method \Dew\Acs\Result getWorkspace(array $arguments = [])
 * @method \Http\Promise\Promise getWorkspaceAsync($arguments = [])
 * @method \Dew\Acs\Result listWorkspaces(array $arguments = [])
 * @method \Http\Promise\Promise listWorkspacesAsync($arguments = [])
 * @method \Dew\Acs\Result updateWorkspace(array $arguments = [])
 * @method \Http\Promise\Promise updateWorkspaceAsync($arguments = [])
 * @method \Dew\Acs\Result updateCredentials(array $arguments = [])
 * @method \Http\Promise\Promise updateCredentialsAsync($arguments = [])
 * @method \Dew\Acs\Result createCredentials(array $arguments = [])
 * @method \Http\Promise\Promise createCredentialsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCredentials(array $arguments = [])
 * @method \Http\Promise\Promise deleteCredentialsAsync($arguments = [])
 * @method \Dew\Acs\Result getCredentials(array $arguments = [])
 * @method \Http\Promise\Promise getCredentialsAsync($arguments = [])
 * @method \Dew\Acs\Result listCredentials(array $arguments = [])
 * @method \Http\Promise\Promise listCredentialsAsync($arguments = [])
 * @method \Dew\Acs\Result listAsyncTasks(array $arguments = [])
 * @method \Http\Promise\Promise listAsyncTasksAsync($arguments = [])
 * @method \Dew\Acs\Result getAsyncTask(array $arguments = [])
 * @method \Http\Promise\Promise getAsyncTaskAsync($arguments = [])
 * @method \Dew\Acs\Result createAsyncTask(array $arguments = [])
 * @method \Http\Promise\Promise createAsyncTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getExperienceData(array $arguments = [])
 * @method \Http\Promise\Promise getExperienceDataAsync($arguments = [])
 * @method \Dew\Acs\Result deleteExperienceData(array $arguments = [])
 * @method \Http\Promise\Promise deleteExperienceDataAsync($arguments = [])
 * @method \Dew\Acs\Result createExperienceData(array $arguments = [])
 * @method \Http\Promise\Promise createExperienceDataAsync($arguments = [])
 * @method \Dew\Acs\Result listExperienceData(array $arguments = [])
 * @method \Http\Promise\Promise listExperienceDataAsync($arguments = [])
 * @method \Dew\Acs\Result resumeFunctionInstance(array $arguments = [])
 * @method \Http\Promise\Promise resumeFunctionInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result updateFunctionInstance(array $arguments = [])
 * @method \Http\Promise\Promise updateFunctionInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result listFunctionInstances(array $arguments = [])
 * @method \Http\Promise\Promise listFunctionInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result ceaseFunctionInstance(array $arguments = [])
 * @method \Http\Promise\Promise ceaseFunctionInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result createFunctionInstance(array $arguments = [])
 * @method \Http\Promise\Promise createFunctionInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result createFunctionTask(array $arguments = [])
 * @method \Http\Promise\Promise createFunctionTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFunctionInstance(array $arguments = [])
 * @method \Http\Promise\Promise deleteFunctionInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result getFunctionInstance(array $arguments = [])
 * @method \Http\Promise\Promise getFunctionInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result listFunctionRestrictions(array $arguments = [])
 * @method \Http\Promise\Promise listFunctionRestrictionsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRagEvaluatorTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteRagEvaluatorTaskAsync($arguments = [])
 * @method \Dew\Acs\Result createRagEvaluatorTask(array $arguments = [])
 * @method \Http\Promise\Promise createRagEvaluatorTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getRagEvaluatorTask(array $arguments = [])
 * @method \Http\Promise\Promise getRagEvaluatorTaskAsync($arguments = [])
 * @method \Dew\Acs\Result listRagEvaluatorTasks(array $arguments = [])
 * @method \Http\Promise\Promise listRagEvaluatorTasksAsync($arguments = [])
 * @method \Dew\Acs\Result describeRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result getTableFields(array $arguments = [])
 * @method \Http\Promise\Promise getTableFieldsAsync($arguments = [])
 * @method \Dew\Acs\Result listServices(array $arguments = [])
 * @method \Http\Promise\Promise listServicesAsync($arguments = [])
 */
final class SearchplatClient extends AcsClient
{
    //
}
