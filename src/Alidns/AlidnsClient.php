<?php

declare(strict_types=1);

namespace Dew\Acs\Alidns;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result describeDnsProductInstance(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsProductInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsProductInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsProductInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result addDomain(array $arguments = [])
 * @method \Http\Promise\Promise addDomainAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDomain(array $arguments = [])
 * @method \Http\Promise\Promise deleteDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainInfoAsync($arguments = [])
 * @method \Dew\Acs\Result addDomainBackup(array $arguments = [])
 * @method \Http\Promise\Promise addDomainBackupAsync($arguments = [])
 * @method \Dew\Acs\Result changeDomainOfDnsProduct(array $arguments = [])
 * @method \Http\Promise\Promise changeDomainOfDnsProductAsync($arguments = [])
 * @method \Dew\Acs\Result modifyHichinaDomainDNS(array $arguments = [])
 * @method \Http\Promise\Promise modifyHichinaDomainDNSAsync($arguments = [])
 * @method \Dew\Acs\Result updateDomainRemark(array $arguments = [])
 * @method \Http\Promise\Promise updateDomainRemarkAsync($arguments = [])
 * @method \Dew\Acs\Result getMainDomainName(array $arguments = [])
 * @method \Http\Promise\Promise getMainDomainNameAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainNs(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainNsAsync($arguments = [])
 * @method \Dew\Acs\Result setDomainDnssecStatus(array $arguments = [])
 * @method \Http\Promise\Promise setDomainDnssecStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainDnssecInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainDnssecInfoAsync($arguments = [])
 * @method \Dew\Acs\Result bindInstanceDomains(array $arguments = [])
 * @method \Http\Promise\Promise bindInstanceDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result unbindInstanceDomains(array $arguments = [])
 * @method \Http\Promise\Promise unbindInstanceDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result operateBatchDomain(array $arguments = [])
 * @method \Http\Promise\Promise operateBatchDomainAsync($arguments = [])
 * @method \Dew\Acs\Result addDomainGroup(array $arguments = [])
 * @method \Http\Promise\Promise addDomainGroupAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainGroups(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDomainGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteDomainGroupAsync($arguments = [])
 * @method \Dew\Acs\Result updateDomainGroup(array $arguments = [])
 * @method \Http\Promise\Promise updateDomainGroupAsync($arguments = [])
 * @method \Dew\Acs\Result changeDomainGroup(array $arguments = [])
 * @method \Http\Promise\Promise changeDomainGroupAsync($arguments = [])
 * @method \Dew\Acs\Result transferDomain(array $arguments = [])
 * @method \Http\Promise\Promise transferDomainAsync($arguments = [])
 * @method \Dew\Acs\Result retrieveDomain(array $arguments = [])
 * @method \Http\Promise\Promise retrieveDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeTransferDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeTransferDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainStatisticsSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainStatisticsSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecordStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeRecordStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecordStatisticsSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeRecordStatisticsSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeDNSSLBSubDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeDNSSLBSubDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainLogs(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainLogsAsync($arguments = [])
 * @method \Dew\Acs\Result addDomainRecord(array $arguments = [])
 * @method \Http\Promise\Promise addDomainRecordAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDomainRecord(array $arguments = [])
 * @method \Http\Promise\Promise deleteDomainRecordAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSubDomainRecords(array $arguments = [])
 * @method \Http\Promise\Promise deleteSubDomainRecordsAsync($arguments = [])
 * @method \Dew\Acs\Result updateDomainRecord(array $arguments = [])
 * @method \Http\Promise\Promise updateDomainRecordAsync($arguments = [])
 * @method \Dew\Acs\Result updateDomainRecordRemark(array $arguments = [])
 * @method \Http\Promise\Promise updateDomainRecordRemarkAsync($arguments = [])
 * @method \Dew\Acs\Result setDomainRecordStatus(array $arguments = [])
 * @method \Http\Promise\Promise setDomainRecordStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRecordInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRecordInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainRecords(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainRecordsAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecordLogs(array $arguments = [])
 * @method \Http\Promise\Promise describeRecordLogsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSubDomainRecords(array $arguments = [])
 * @method \Http\Promise\Promise describeSubDomainRecordsAsync($arguments = [])
 * @method \Dew\Acs\Result getTxtRecordForVerify(array $arguments = [])
 * @method \Http\Promise\Promise getTxtRecordForVerifyAsync($arguments = [])
 * @method \Dew\Acs\Result addCustomLine(array $arguments = [])
 * @method \Http\Promise\Promise addCustomLineAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCustomLines(array $arguments = [])
 * @method \Http\Promise\Promise deleteCustomLinesAsync($arguments = [])
 * @method \Dew\Acs\Result updateCustomLine(array $arguments = [])
 * @method \Http\Promise\Promise updateCustomLineAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomLine(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomLineAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomLines(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomLinesAsync($arguments = [])
 * @method \Dew\Acs\Result describeSupportLines(array $arguments = [])
 * @method \Http\Promise\Promise describeSupportLinesAsync($arguments = [])
 * @method \Dew\Acs\Result setDNSSLBStatus(array $arguments = [])
 * @method \Http\Promise\Promise setDNSSLBStatusAsync($arguments = [])
 * @method \Dew\Acs\Result updateDNSSLBWeight(array $arguments = [])
 * @method \Http\Promise\Promise updateDNSSLBWeightAsync($arguments = [])
 * @method \Dew\Acs\Result describeBatchResultCount(array $arguments = [])
 * @method \Http\Promise\Promise describeBatchResultCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeBatchResultDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeBatchResultDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeTags(array $arguments = [])
 * @method \Http\Promise\Promise describeTagsAsync($arguments = [])
 * @method \Dew\Acs\Result listTagResources(array $arguments = [])
 * @method \Http\Promise\Promise listTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result untagResources(array $arguments = [])
 * @method \Http\Promise\Promise untagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result moveDomainResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise moveDomainResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result addDnsCacheDomain(array $arguments = [])
 * @method \Http\Promise\Promise addDnsCacheDomainAsync($arguments = [])
 * @method \Dew\Acs\Result updateDnsCacheDomain(array $arguments = [])
 * @method \Http\Promise\Promise updateDnsCacheDomainAsync($arguments = [])
 * @method \Dew\Acs\Result updateDnsCacheDomainRemark(array $arguments = [])
 * @method \Http\Promise\Promise updateDnsCacheDomainRemarkAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDnsCacheDomain(array $arguments = [])
 * @method \Http\Promise\Promise deleteDnsCacheDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsCacheDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsCacheDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result createCloudGtmInstanceConfig(array $arguments = [])
 * @method \Http\Promise\Promise createCloudGtmInstanceConfigAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmInstanceName(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmInstanceNameAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudGtmInstanceConfigFullInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudGtmInstanceConfigFullInfoAsync($arguments = [])
 * @method \Dew\Acs\Result listCloudGtmInstanceConfigs(array $arguments = [])
 * @method \Http\Promise\Promise listCloudGtmInstanceConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCloudGtmInstanceConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteCloudGtmInstanceConfigAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmInstanceConfigBasic(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmInstanceConfigBasicAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmInstanceConfigLbStrategy(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmInstanceConfigLbStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmInstanceConfigEnableStatus(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmInstanceConfigEnableStatusAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmInstanceConfigRemark(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmInstanceConfigRemarkAsync($arguments = [])
 * @method \Dew\Acs\Result listCloudGtmInstances(array $arguments = [])
 * @method \Http\Promise\Promise listCloudGtmInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result searchCloudGtmInstances(array $arguments = [])
 * @method \Http\Promise\Promise searchCloudGtmInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result searchCloudGtmInstanceConfigs(array $arguments = [])
 * @method \Http\Promise\Promise searchCloudGtmInstanceConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudGtmSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudGtmSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result createCloudGtmAddress(array $arguments = [])
 * @method \Http\Promise\Promise createCloudGtmAddressAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmAddress(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmAddressAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudGtmAddress(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudGtmAddressAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCloudGtmAddress(array $arguments = [])
 * @method \Http\Promise\Promise deleteCloudGtmAddressAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmAddressRemark(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmAddressRemarkAsync($arguments = [])
 * @method \Dew\Acs\Result listCloudGtmAddresses(array $arguments = [])
 * @method \Http\Promise\Promise listCloudGtmAddressesAsync($arguments = [])
 * @method \Dew\Acs\Result searchCloudGtmAddresses(array $arguments = [])
 * @method \Http\Promise\Promise searchCloudGtmAddressesAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudGtmAddressReference(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudGtmAddressReferenceAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmAddressEnableStatus(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmAddressEnableStatusAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmAddressManualAvailableStatus(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmAddressManualAvailableStatusAsync($arguments = [])
 * @method \Dew\Acs\Result createCloudGtmAddressPool(array $arguments = [])
 * @method \Http\Promise\Promise createCloudGtmAddressPoolAsync($arguments = [])
 * @method \Dew\Acs\Result listCloudGtmAddressPools(array $arguments = [])
 * @method \Http\Promise\Promise listCloudGtmAddressPoolsAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudGtmAddressPool(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudGtmAddressPoolAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCloudGtmAddressPool(array $arguments = [])
 * @method \Http\Promise\Promise deleteCloudGtmAddressPoolAsync($arguments = [])
 * @method \Dew\Acs\Result searchCloudGtmAddressPools(array $arguments = [])
 * @method \Http\Promise\Promise searchCloudGtmAddressPoolsAsync($arguments = [])
 * @method \Dew\Acs\Result replaceCloudGtmInstanceConfigAddressPool(array $arguments = [])
 * @method \Http\Promise\Promise replaceCloudGtmInstanceConfigAddressPoolAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmAddressPoolEnableStatus(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmAddressPoolEnableStatusAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmAddressPoolRemark(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmAddressPoolRemarkAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmAddressPoolLbStrategy(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmAddressPoolLbStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmAddressPoolBasicConfig(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmAddressPoolBasicConfigAsync($arguments = [])
 * @method \Dew\Acs\Result replaceCloudGtmAddressPoolAddress(array $arguments = [])
 * @method \Http\Promise\Promise replaceCloudGtmAddressPoolAddressAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudGtmAddressPoolReference(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudGtmAddressPoolReferenceAsync($arguments = [])
 * @method \Dew\Acs\Result searchCloudGtmMonitorTemplates(array $arguments = [])
 * @method \Http\Promise\Promise searchCloudGtmMonitorTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result createCloudGtmMonitorTemplate(array $arguments = [])
 * @method \Http\Promise\Promise createCloudGtmMonitorTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCloudGtmMonitorTemplate(array $arguments = [])
 * @method \Http\Promise\Promise deleteCloudGtmMonitorTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmMonitorTemplate(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmMonitorTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result listCloudGtmMonitorTemplates(array $arguments = [])
 * @method \Http\Promise\Promise listCloudGtmMonitorTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudGtmMonitorTemplate(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudGtmMonitorTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmMonitorTemplateRemark(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmMonitorTemplateRemarkAsync($arguments = [])
 * @method \Dew\Acs\Result listCloudGtmMonitorNodes(array $arguments = [])
 * @method \Http\Promise\Promise listCloudGtmMonitorNodesAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudGtmSystemLines(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudGtmSystemLinesAsync($arguments = [])
 * @method \Dew\Acs\Result listCloudGtmAlertLogs(array $arguments = [])
 * @method \Http\Promise\Promise listCloudGtmAlertLogsAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudGtmInstanceConfigAlert(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudGtmInstanceConfigAlertAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmGlobalAlert(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmGlobalAlertAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudGtmGlobalAlert(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudGtmGlobalAlertAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudGtmInstanceConfigAlert(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudGtmInstanceConfigAlertAsync($arguments = [])
 * @method \Dew\Acs\Result listCloudGtmAvailableAlertGroups(array $arguments = [])
 * @method \Http\Promise\Promise listCloudGtmAvailableAlertGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result setGtmAccessMode(array $arguments = [])
 * @method \Http\Promise\Promise setGtmAccessModeAsync($arguments = [])
 * @method \Dew\Acs\Result updateDnsGtmInstanceGlobalConfig(array $arguments = [])
 * @method \Http\Promise\Promise updateDnsGtmInstanceGlobalConfigAsync($arguments = [])
 * @method \Dew\Acs\Result updateGtmInstanceGlobalConfig(array $arguments = [])
 * @method \Http\Promise\Promise updateGtmInstanceGlobalConfigAsync($arguments = [])
 * @method \Dew\Acs\Result updateDnsGtmAccessStrategy(array $arguments = [])
 * @method \Http\Promise\Promise updateDnsGtmAccessStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmAddrAttributeInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmAddrAttributeInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmAvailableAlertGroup(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmAvailableAlertGroupAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmInstance(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmInstance(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmInstanceStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmInstanceStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmInstanceStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmInstanceStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmLogs(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmLogsAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmAvailableAlertGroup(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmAvailableAlertGroupAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmLogs(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmLogsAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmInstanceSystemCname(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmInstanceSystemCnameAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmInstanceSystemCname(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmInstanceSystemCnameAsync($arguments = [])
 * @method \Dew\Acs\Result copyGtmConfig(array $arguments = [])
 * @method \Http\Promise\Promise copyGtmConfigAsync($arguments = [])
 * @method \Dew\Acs\Result moveGtmResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise moveGtmResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result addGtmAddressPool(array $arguments = [])
 * @method \Http\Promise\Promise addGtmAddressPoolAsync($arguments = [])
 * @method \Dew\Acs\Result addDnsGtmAddressPool(array $arguments = [])
 * @method \Http\Promise\Promise addDnsGtmAddressPoolAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDnsGtmAddressPool(array $arguments = [])
 * @method \Http\Promise\Promise deleteDnsGtmAddressPoolAsync($arguments = [])
 * @method \Dew\Acs\Result deleteGtmAddressPool(array $arguments = [])
 * @method \Http\Promise\Promise deleteGtmAddressPoolAsync($arguments = [])
 * @method \Dew\Acs\Result updateDnsGtmAddressPool(array $arguments = [])
 * @method \Http\Promise\Promise updateDnsGtmAddressPoolAsync($arguments = [])
 * @method \Dew\Acs\Result updateGtmAddressPool(array $arguments = [])
 * @method \Http\Promise\Promise updateGtmAddressPoolAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmInstanceAddressPool(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmInstanceAddressPoolAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmInstanceAddressPools(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmInstanceAddressPoolsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmAddressPoolAvailableConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmAddressPoolAvailableConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmInstanceAddressPool(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmInstanceAddressPoolAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmInstanceAddressPools(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmInstanceAddressPoolsAsync($arguments = [])
 * @method \Dew\Acs\Result addDnsGtmMonitor(array $arguments = [])
 * @method \Http\Promise\Promise addDnsGtmMonitorAsync($arguments = [])
 * @method \Dew\Acs\Result addGtmMonitor(array $arguments = [])
 * @method \Http\Promise\Promise addGtmMonitorAsync($arguments = [])
 * @method \Dew\Acs\Result updateDnsGtmMonitor(array $arguments = [])
 * @method \Http\Promise\Promise updateDnsGtmMonitorAsync($arguments = [])
 * @method \Dew\Acs\Result updateGtmMonitor(array $arguments = [])
 * @method \Http\Promise\Promise updateGtmMonitorAsync($arguments = [])
 * @method \Dew\Acs\Result setDnsGtmMonitorStatus(array $arguments = [])
 * @method \Http\Promise\Promise setDnsGtmMonitorStatusAsync($arguments = [])
 * @method \Dew\Acs\Result setGtmMonitorStatus(array $arguments = [])
 * @method \Http\Promise\Promise setGtmMonitorStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmMonitorAvailableConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmMonitorAvailableConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmMonitorConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmMonitorConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmMonitorAvailableConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmMonitorAvailableConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmMonitorConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmMonitorConfigAsync($arguments = [])
 * @method \Dew\Acs\Result addDnsGtmAccessStrategy(array $arguments = [])
 * @method \Http\Promise\Promise addDnsGtmAccessStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result addGtmAccessStrategy(array $arguments = [])
 * @method \Http\Promise\Promise addGtmAccessStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDnsGtmAccessStrategy(array $arguments = [])
 * @method \Http\Promise\Promise deleteDnsGtmAccessStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result deleteGtmAccessStrategy(array $arguments = [])
 * @method \Http\Promise\Promise deleteGtmAccessStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result updateGtmAccessStrategy(array $arguments = [])
 * @method \Http\Promise\Promise updateGtmAccessStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result setDnsGtmAccessMode(array $arguments = [])
 * @method \Http\Promise\Promise setDnsGtmAccessModeAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmAccessStrategies(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmAccessStrategiesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmAccessStrategy(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmAccessStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnsGtmAccessStrategyAvailableConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeDnsGtmAccessStrategyAvailableConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmAccessStrategies(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmAccessStrategiesAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmAccessStrategy(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmAccessStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmAccessStrategyAvailableConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmAccessStrategyAvailableConfigAsync($arguments = [])
 * @method \Dew\Acs\Result switchDnsGtmInstanceStrategyMode(array $arguments = [])
 * @method \Http\Promise\Promise switchDnsGtmInstanceStrategyModeAsync($arguments = [])
 * @method \Dew\Acs\Result addGtmRecoveryPlan(array $arguments = [])
 * @method \Http\Promise\Promise addGtmRecoveryPlanAsync($arguments = [])
 * @method \Dew\Acs\Result deleteGtmRecoveryPlan(array $arguments = [])
 * @method \Http\Promise\Promise deleteGtmRecoveryPlanAsync($arguments = [])
 * @method \Dew\Acs\Result updateGtmRecoveryPlan(array $arguments = [])
 * @method \Http\Promise\Promise updateGtmRecoveryPlanAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmRecoveryPlan(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmRecoveryPlanAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmRecoveryPlanAvailableConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmRecoveryPlanAvailableConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeGtmRecoveryPlans(array $arguments = [])
 * @method \Http\Promise\Promise describeGtmRecoveryPlansAsync($arguments = [])
 * @method \Dew\Acs\Result executeGtmRecoveryPlan(array $arguments = [])
 * @method \Http\Promise\Promise executeGtmRecoveryPlanAsync($arguments = [])
 * @method \Dew\Acs\Result previewGtmRecoveryPlan(array $arguments = [])
 * @method \Http\Promise\Promise previewGtmRecoveryPlanAsync($arguments = [])
 * @method \Dew\Acs\Result rollbackGtmRecoveryPlan(array $arguments = [])
 * @method \Http\Promise\Promise rollbackGtmRecoveryPlanAsync($arguments = [])
 * @method \Dew\Acs\Result describeDohAccountStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeDohAccountStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDohDomainStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeDohDomainStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDohDomainStatisticsSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeDohDomainStatisticsSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeDohSubDomainStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeDohSubDomainStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDohSubDomainStatisticsSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeDohSubDomainStatisticsSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeDohUserInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDohUserInfoAsync($arguments = [])
 * @method \Dew\Acs\Result createPdnsAppKey(array $arguments = [])
 * @method \Http\Promise\Promise createPdnsAppKeyAsync($arguments = [])
 * @method \Dew\Acs\Result removePdnsAppKey(array $arguments = [])
 * @method \Http\Promise\Promise removePdnsAppKeyAsync($arguments = [])
 * @method \Dew\Acs\Result describePdnsAppKey(array $arguments = [])
 * @method \Http\Promise\Promise describePdnsAppKeyAsync($arguments = [])
 * @method \Dew\Acs\Result describePdnsAppKeys(array $arguments = [])
 * @method \Http\Promise\Promise describePdnsAppKeysAsync($arguments = [])
 * @method \Dew\Acs\Result validateDnsGtmCnameRrCanUse(array $arguments = [])
 * @method \Http\Promise\Promise validateDnsGtmCnameRrCanUseAsync($arguments = [])
 * @method \Dew\Acs\Result createPdnsUdpIpSegment(array $arguments = [])
 * @method \Http\Promise\Promise createPdnsUdpIpSegmentAsync($arguments = [])
 * @method \Dew\Acs\Result describePdnsUdpIpSegments(array $arguments = [])
 * @method \Http\Promise\Promise describePdnsUdpIpSegmentsAsync($arguments = [])
 * @method \Dew\Acs\Result removePdnsUdpIpSegment(array $arguments = [])
 * @method \Http\Promise\Promise removePdnsUdpIpSegmentAsync($arguments = [])
 * @method \Dew\Acs\Result describePdnsThreatStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describePdnsThreatStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describePdnsUserInfo(array $arguments = [])
 * @method \Http\Promise\Promise describePdnsUserInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describePdnsRequestStatistic(array $arguments = [])
 * @method \Http\Promise\Promise describePdnsRequestStatisticAsync($arguments = [])
 * @method \Dew\Acs\Result validatePdnsUdpIpSegment(array $arguments = [])
 * @method \Http\Promise\Promise validatePdnsUdpIpSegmentAsync($arguments = [])
 * @method \Dew\Acs\Result describePdnsThreatLogs(array $arguments = [])
 * @method \Http\Promise\Promise describePdnsThreatLogsAsync($arguments = [])
 * @method \Dew\Acs\Result describePdnsRequestStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describePdnsRequestStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describePdnsOperateLogs(array $arguments = [])
 * @method \Http\Promise\Promise describePdnsOperateLogsAsync($arguments = [])
 * @method \Dew\Acs\Result resumePdnsService(array $arguments = [])
 * @method \Http\Promise\Promise resumePdnsServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describePdnsAccountSummary(array $arguments = [])
 * @method \Http\Promise\Promise describePdnsAccountSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result pausePdnsService(array $arguments = [])
 * @method \Http\Promise\Promise pausePdnsServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describePdnsThreatStatistic(array $arguments = [])
 * @method \Http\Promise\Promise describePdnsThreatStatisticAsync($arguments = [])
 * @method \Dew\Acs\Result updateAppKeyState(array $arguments = [])
 * @method \Http\Promise\Promise updateAppKeyStateAsync($arguments = [])
 * @method \Dew\Acs\Result updateIspFlushCacheInstanceConfig(array $arguments = [])
 * @method \Http\Promise\Promise updateIspFlushCacheInstanceConfigAsync($arguments = [])
 * @method \Dew\Acs\Result submitIspFlushCacheTask(array $arguments = [])
 * @method \Http\Promise\Promise submitIspFlushCacheTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeIspFlushCacheRemainQuota(array $arguments = [])
 * @method \Http\Promise\Promise describeIspFlushCacheRemainQuotaAsync($arguments = [])
 * @method \Dew\Acs\Result describeIspFlushCacheInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeIspFlushCacheInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeIspFlushCacheTask(array $arguments = [])
 * @method \Http\Promise\Promise describeIspFlushCacheTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeIspFlushCacheTasks(array $arguments = [])
 * @method \Http\Promise\Promise describeIspFlushCacheTasksAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecordResolveStatisticsSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeRecordResolveStatisticsSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainResolveStatisticsSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainResolveStatisticsSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeInternetDnsLogs(array $arguments = [])
 * @method \Http\Promise\Promise describeInternetDnsLogsAsync($arguments = [])
 */
final class AlidnsClient extends AcsClient
{
    //
}
