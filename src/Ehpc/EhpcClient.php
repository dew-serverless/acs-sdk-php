<?php

declare(strict_types=1);

namespace Dew\Acs\Ehpc;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result describePrice(array $arguments = [])
 * @method \Http\Promise\Promise describePriceAsync($arguments = [])
 * @method \Dew\Acs\Result createCluster(array $arguments = [])
 * @method \Http\Promise\Promise createClusterAsync($arguments = [])
 * @method \Dew\Acs\Result describeCluster(array $arguments = [])
 * @method \Http\Promise\Promise describeClusterAsync($arguments = [])
 * @method \Dew\Acs\Result modifyClusterAttributes(array $arguments = [])
 * @method \Http\Promise\Promise modifyClusterAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result listClusters(array $arguments = [])
 * @method \Http\Promise\Promise listClustersAsync($arguments = [])
 * @method \Dew\Acs\Result listClustersMeta(array $arguments = [])
 * @method \Http\Promise\Promise listClustersMetaAsync($arguments = [])
 * @method \Dew\Acs\Result startCluster(array $arguments = [])
 * @method \Http\Promise\Promise startClusterAsync($arguments = [])
 * @method \Dew\Acs\Result stopCluster(array $arguments = [])
 * @method \Http\Promise\Promise stopClusterAsync($arguments = [])
 * @method \Dew\Acs\Result recoverCluster(array $arguments = [])
 * @method \Http\Promise\Promise recoverClusterAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCluster(array $arguments = [])
 * @method \Http\Promise\Promise deleteClusterAsync($arguments = [])
 * @method \Dew\Acs\Result createHybridCluster(array $arguments = [])
 * @method \Http\Promise\Promise createHybridClusterAsync($arguments = [])
 * @method \Dew\Acs\Result addLocalNodes(array $arguments = [])
 * @method \Http\Promise\Promise addLocalNodesAsync($arguments = [])
 * @method \Dew\Acs\Result getHybridClusterConfig(array $arguments = [])
 * @method \Http\Promise\Promise getHybridClusterConfigAsync($arguments = [])
 * @method \Dew\Acs\Result syncUsers(array $arguments = [])
 * @method \Http\Promise\Promise syncUsersAsync($arguments = [])
 * @method \Dew\Acs\Result listPreferredEcsTypes(array $arguments = [])
 * @method \Http\Promise\Promise listPreferredEcsTypesAsync($arguments = [])
 * @method \Dew\Acs\Result listAvailableEcsTypes(array $arguments = [])
 * @method \Http\Promise\Promise listAvailableEcsTypesAsync($arguments = [])
 * @method \Dew\Acs\Result getIfEcsTypeSupportHtConfig(array $arguments = [])
 * @method \Http\Promise\Promise getIfEcsTypeSupportHtConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listImages(array $arguments = [])
 * @method \Http\Promise\Promise listImagesAsync($arguments = [])
 * @method \Dew\Acs\Result describeEstackImage(array $arguments = [])
 * @method \Http\Promise\Promise describeEstackImageAsync($arguments = [])
 * @method \Dew\Acs\Result listCustomImages(array $arguments = [])
 * @method \Http\Promise\Promise listCustomImagesAsync($arguments = [])
 * @method \Dew\Acs\Result listCommunityImages(array $arguments = [])
 * @method \Http\Promise\Promise listCommunityImagesAsync($arguments = [])
 * @method \Dew\Acs\Result describeImagePrice(array $arguments = [])
 * @method \Http\Promise\Promise describeImagePriceAsync($arguments = [])
 * @method \Dew\Acs\Result addUsers(array $arguments = [])
 * @method \Http\Promise\Promise addUsersAsync($arguments = [])
 * @method \Dew\Acs\Result listUsers(array $arguments = [])
 * @method \Http\Promise\Promise listUsersAsync($arguments = [])
 * @method \Dew\Acs\Result listUsersAsync(array $arguments = [])
 * @method \Http\Promise\Promise listUsersAsyncAsync($arguments = [])
 * @method \Dew\Acs\Result modifyUserGroups(array $arguments = [])
 * @method \Http\Promise\Promise modifyUserGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyUserPasswords(array $arguments = [])
 * @method \Http\Promise\Promise modifyUserPasswordsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUsers(array $arguments = [])
 * @method \Http\Promise\Promise deleteUsersAsync($arguments = [])
 * @method \Dew\Acs\Result addNodes(array $arguments = [])
 * @method \Http\Promise\Promise addNodesAsync($arguments = [])
 * @method \Dew\Acs\Result applyNodes(array $arguments = [])
 * @method \Http\Promise\Promise applyNodesAsync($arguments = [])
 * @method \Dew\Acs\Result addExistedNodes(array $arguments = [])
 * @method \Http\Promise\Promise addExistedNodesAsync($arguments = [])
 * @method \Dew\Acs\Result listNodes(array $arguments = [])
 * @method \Http\Promise\Promise listNodesAsync($arguments = [])
 * @method \Dew\Acs\Result listNodesNoPaging(array $arguments = [])
 * @method \Http\Promise\Promise listNodesNoPagingAsync($arguments = [])
 * @method \Dew\Acs\Result startNodes(array $arguments = [])
 * @method \Http\Promise\Promise startNodesAsync($arguments = [])
 * @method \Dew\Acs\Result stopNodes(array $arguments = [])
 * @method \Http\Promise\Promise stopNodesAsync($arguments = [])
 * @method \Dew\Acs\Result resetNodes(array $arguments = [])
 * @method \Http\Promise\Promise resetNodesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteNodes(array $arguments = [])
 * @method \Http\Promise\Promise deleteNodesAsync($arguments = [])
 * @method \Dew\Acs\Result addQueue(array $arguments = [])
 * @method \Http\Promise\Promise addQueueAsync($arguments = [])
 * @method \Dew\Acs\Result listQueues(array $arguments = [])
 * @method \Http\Promise\Promise listQueuesAsync($arguments = [])
 * @method \Dew\Acs\Result updateQueueConfig(array $arguments = [])
 * @method \Http\Promise\Promise updateQueueConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listNodesByQueue(array $arguments = [])
 * @method \Http\Promise\Promise listNodesByQueueAsync($arguments = [])
 * @method \Dew\Acs\Result setQueue(array $arguments = [])
 * @method \Http\Promise\Promise setQueueAsync($arguments = [])
 * @method \Dew\Acs\Result deleteQueue(array $arguments = [])
 * @method \Http\Promise\Promise deleteQueueAsync($arguments = [])
 * @method \Dew\Acs\Result setSchedulerInfo(array $arguments = [])
 * @method \Http\Promise\Promise setSchedulerInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getSchedulerInfo(array $arguments = [])
 * @method \Http\Promise\Promise getSchedulerInfoAsync($arguments = [])
 * @method \Dew\Acs\Result listSoftwares(array $arguments = [])
 * @method \Http\Promise\Promise listSoftwaresAsync($arguments = [])
 * @method \Dew\Acs\Result installSoftware(array $arguments = [])
 * @method \Http\Promise\Promise installSoftwareAsync($arguments = [])
 * @method \Dew\Acs\Result listInstalledSoftware(array $arguments = [])
 * @method \Http\Promise\Promise listInstalledSoftwareAsync($arguments = [])
 * @method \Dew\Acs\Result uninstallSoftware(array $arguments = [])
 * @method \Http\Promise\Promise uninstallSoftwareAsync($arguments = [])
 * @method \Dew\Acs\Result listFileSystemWithMountTargets(array $arguments = [])
 * @method \Http\Promise\Promise listFileSystemWithMountTargetsAsync($arguments = [])
 * @method \Dew\Acs\Result listCpfsFileSystems(array $arguments = [])
 * @method \Http\Promise\Promise listCpfsFileSystemsAsync($arguments = [])
 * @method \Dew\Acs\Result getClusterVolumes(array $arguments = [])
 * @method \Http\Promise\Promise getClusterVolumesAsync($arguments = [])
 * @method \Dew\Acs\Result listVolumes(array $arguments = [])
 * @method \Http\Promise\Promise listVolumesAsync($arguments = [])
 * @method \Dew\Acs\Result updateClusterVolumes(array $arguments = [])
 * @method \Http\Promise\Promise updateClusterVolumesAsync($arguments = [])
 * @method \Dew\Acs\Result submitJob(array $arguments = [])
 * @method \Http\Promise\Promise submitJobAsync($arguments = [])
 * @method \Dew\Acs\Result createJobFile(array $arguments = [])
 * @method \Http\Promise\Promise createJobFileAsync($arguments = [])
 * @method \Dew\Acs\Result listJobs(array $arguments = [])
 * @method \Http\Promise\Promise listJobsAsync($arguments = [])
 * @method \Dew\Acs\Result describeJob(array $arguments = [])
 * @method \Http\Promise\Promise describeJobAsync($arguments = [])
 * @method \Dew\Acs\Result listJobsWithFilters(array $arguments = [])
 * @method \Http\Promise\Promise listJobsWithFiltersAsync($arguments = [])
 * @method \Dew\Acs\Result rerunJobs(array $arguments = [])
 * @method \Http\Promise\Promise rerunJobsAsync($arguments = [])
 * @method \Dew\Acs\Result stopJobs(array $arguments = [])
 * @method \Http\Promise\Promise stopJobsAsync($arguments = [])
 * @method \Dew\Acs\Result getJobLog(array $arguments = [])
 * @method \Http\Promise\Promise getJobLogAsync($arguments = [])
 * @method \Dew\Acs\Result deleteJobs(array $arguments = [])
 * @method \Http\Promise\Promise deleteJobsAsync($arguments = [])
 * @method \Dew\Acs\Result submitServerlessJob(array $arguments = [])
 * @method \Http\Promise\Promise submitServerlessJobAsync($arguments = [])
 * @method \Dew\Acs\Result listServerlessJobs(array $arguments = [])
 * @method \Http\Promise\Promise listServerlessJobsAsync($arguments = [])
 * @method \Dew\Acs\Result describeServerlessJobs(array $arguments = [])
 * @method \Http\Promise\Promise describeServerlessJobsAsync($arguments = [])
 * @method \Dew\Acs\Result stopServerlessJobs(array $arguments = [])
 * @method \Http\Promise\Promise stopServerlessJobsAsync($arguments = [])
 * @method \Dew\Acs\Result createJobTemplate(array $arguments = [])
 * @method \Http\Promise\Promise createJobTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result listJobTemplates(array $arguments = [])
 * @method \Http\Promise\Promise listJobTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result editJobTemplate(array $arguments = [])
 * @method \Http\Promise\Promise editJobTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result deleteJobTemplates(array $arguments = [])
 * @method \Http\Promise\Promise deleteJobTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result invokeShellCommand(array $arguments = [])
 * @method \Http\Promise\Promise invokeShellCommandAsync($arguments = [])
 * @method \Dew\Acs\Result listCommands(array $arguments = [])
 * @method \Http\Promise\Promise listCommandsAsync($arguments = [])
 * @method \Dew\Acs\Result listInvocationResults(array $arguments = [])
 * @method \Http\Promise\Promise listInvocationResultsAsync($arguments = [])
 * @method \Dew\Acs\Result listInvocationStatus(array $arguments = [])
 * @method \Http\Promise\Promise listInvocationStatusAsync($arguments = [])
 * @method \Dew\Acs\Result setPostScripts(array $arguments = [])
 * @method \Http\Promise\Promise setPostScriptsAsync($arguments = [])
 * @method \Dew\Acs\Result getPostScripts(array $arguments = [])
 * @method \Http\Promise\Promise getPostScriptsAsync($arguments = [])
 * @method \Dew\Acs\Result getVisualServiceStatus(array $arguments = [])
 * @method \Http\Promise\Promise getVisualServiceStatusAsync($arguments = [])
 * @method \Dew\Acs\Result modifyVisualServicePasswd(array $arguments = [])
 * @method \Http\Promise\Promise modifyVisualServicePasswdAsync($arguments = [])
 * @method \Dew\Acs\Result startVisualService(array $arguments = [])
 * @method \Http\Promise\Promise startVisualServiceAsync($arguments = [])
 * @method \Dew\Acs\Result stopVisualService(array $arguments = [])
 * @method \Http\Promise\Promise stopVisualServiceAsync($arguments = [])
 * @method \Dew\Acs\Result setAutoScaleConfig(array $arguments = [])
 * @method \Http\Promise\Promise setAutoScaleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeAutoScaleConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeAutoScaleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result getAutoScaleConfig(array $arguments = [])
 * @method \Http\Promise\Promise getAutoScaleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result runCloudMetricProfiling(array $arguments = [])
 * @method \Http\Promise\Promise runCloudMetricProfilingAsync($arguments = [])
 * @method \Dew\Acs\Result getCloudMetricProfiling(array $arguments = [])
 * @method \Http\Promise\Promise getCloudMetricProfilingAsync($arguments = [])
 * @method \Dew\Acs\Result listCloudMetricProfilings(array $arguments = [])
 * @method \Http\Promise\Promise listCloudMetricProfilingsAsync($arguments = [])
 * @method \Dew\Acs\Result getCloudMetricLogs(array $arguments = [])
 * @method \Http\Promise\Promise getCloudMetricLogsAsync($arguments = [])
 * @method \Dew\Acs\Result getAccountingReport(array $arguments = [])
 * @method \Http\Promise\Promise getAccountingReportAsync($arguments = [])
 * @method \Dew\Acs\Result listClusterLogs(array $arguments = [])
 * @method \Http\Promise\Promise listClusterLogsAsync($arguments = [])
 * @method \Dew\Acs\Result listCurrentClientVersion(array $arguments = [])
 * @method \Http\Promise\Promise listCurrentClientVersionAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeClient(array $arguments = [])
 * @method \Http\Promise\Promise upgradeClientAsync($arguments = [])
 * @method \Dew\Acs\Result listUpgradeClients(array $arguments = [])
 * @method \Http\Promise\Promise listUpgradeClientsAsync($arguments = [])
 * @method \Dew\Acs\Result queryServicePackAndPrice(array $arguments = [])
 * @method \Http\Promise\Promise queryServicePackAndPriceAsync($arguments = [])
 * @method \Dew\Acs\Result addSecurityGroup(array $arguments = [])
 * @method \Http\Promise\Promise addSecurityGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listSecurityGroups(array $arguments = [])
 * @method \Http\Promise\Promise listSecurityGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSecurityGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteSecurityGroupAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result listTagResources(array $arguments = [])
 * @method \Http\Promise\Promise listTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result unTagResources(array $arguments = [])
 * @method \Http\Promise\Promise unTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result listRegions(array $arguments = [])
 * @method \Http\Promise\Promise listRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result getCommonImage(array $arguments = [])
 * @method \Http\Promise\Promise getCommonImageAsync($arguments = [])
 * @method \Dew\Acs\Result getUserImage(array $arguments = [])
 * @method \Http\Promise\Promise getUserImageAsync($arguments = [])
 * @method \Dew\Acs\Result summaryImages(array $arguments = [])
 * @method \Http\Promise\Promise summaryImagesAsync($arguments = [])
 * @method \Dew\Acs\Result summaryImagesInfo(array $arguments = [])
 * @method \Http\Promise\Promise summaryImagesInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageGatewayConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeImageGatewayConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyImageGatewayConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyImageGatewayConfigAsync($arguments = [])
 * @method \Dew\Acs\Result pullImage(array $arguments = [])
 * @method \Http\Promise\Promise pullImageAsync($arguments = [])
 * @method \Dew\Acs\Result inspectImage(array $arguments = [])
 * @method \Http\Promise\Promise inspectImageAsync($arguments = [])
 * @method \Dew\Acs\Result listContainerImages(array $arguments = [])
 * @method \Http\Promise\Promise listContainerImagesAsync($arguments = [])
 * @method \Dew\Acs\Result describeImage(array $arguments = [])
 * @method \Http\Promise\Promise describeImageAsync($arguments = [])
 * @method \Dew\Acs\Result deleteLocalImage(array $arguments = [])
 * @method \Http\Promise\Promise deleteLocalImageAsync($arguments = [])
 * @method \Dew\Acs\Result deleteImage(array $arguments = [])
 * @method \Http\Promise\Promise deleteImageAsync($arguments = [])
 * @method \Dew\Acs\Result deleteContainerApps(array $arguments = [])
 * @method \Http\Promise\Promise deleteContainerAppsAsync($arguments = [])
 * @method \Dew\Acs\Result describeContainerApp(array $arguments = [])
 * @method \Http\Promise\Promise describeContainerAppAsync($arguments = [])
 * @method \Dew\Acs\Result listContainerApps(array $arguments = [])
 * @method \Http\Promise\Promise listContainerAppsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyContainerAppAttributes(array $arguments = [])
 * @method \Http\Promise\Promise modifyContainerAppAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result addContainerApp(array $arguments = [])
 * @method \Http\Promise\Promise addContainerAppAsync($arguments = [])
 * @method \Dew\Acs\Result listTasks(array $arguments = [])
 * @method \Http\Promise\Promise listTasksAsync($arguments = [])
 * @method \Dew\Acs\Result initializeEHPC(array $arguments = [])
 * @method \Http\Promise\Promise initializeEHPCAsync($arguments = [])
 * @method \Dew\Acs\Result updateCluster(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise updateClusterAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result installSoftwares(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise installSoftwaresAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result uninstallSoftwares(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise uninstallSoftwaresAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result installAddon(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise installAddonAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result unInstallAddon(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise unInstallAddonAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result attachSharedStorages(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise attachSharedStoragesAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result detachSharedStorages(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise detachSharedStoragesAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result listSharedStorages(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise listSharedStoragesAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result listInstalledSoftwares(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise listInstalledSoftwaresAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result listAvailableImages(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise listAvailableImagesAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result listAvailableFileSystems(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise listAvailableFileSystemsAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result listAddons(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise listAddonsAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result listAddonTemplates(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise listAddonTemplatesAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result getCluster(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise getClusterAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result getAddon(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise getAddonAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result describeAddonTemplate(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise describeAddonTemplateAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result createUsers(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise createUsersAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result updateUser(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise updateUserAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result createQueue(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise createQueueAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result createNodes(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise createNodesAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result updateQueue(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise updateQueueAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result updateNodes(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise updateNodesAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result getQueue(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise getQueueAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result deleteQueues(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise deleteQueuesAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result createJob(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise createJobAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result getJob(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise getJobAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result listCommonLogs(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise listCommonLogsAsync($arguments = []) {@since 2024-07-30}
 * @method \Dew\Acs\Result getCommonLogDetail(array $arguments = []) {@since 2024-07-30}
 * @method \Http\Promise\Promise getCommonLogDetailAsync($arguments = []) {@since 2024-07-30}
 */
final class EhpcClient extends AcsClient
{
    //
}
