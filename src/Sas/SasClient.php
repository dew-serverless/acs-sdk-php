<?php

declare(strict_types=1);

namespace Dew\Acs\Sas;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result listPublishBatch(array $arguments = [])
 * @method \Http\Promise\Promise listPublishBatchAsync($arguments = [])
 * @method \Dew\Acs\Result addPublishBatch(array $arguments = [])
 * @method \Http\Promise\Promise addPublishBatchAsync($arguments = [])
 * @method \Dew\Acs\Result updatePublishBatch(array $arguments = [])
 * @method \Http\Promise\Promise updatePublishBatchAsync($arguments = [])
 * @method \Dew\Acs\Result getPublishCron(array $arguments = [])
 * @method \Http\Promise\Promise getPublishCronAsync($arguments = [])
 * @method \Dew\Acs\Result updatePublishGraySwitch(array $arguments = [])
 * @method \Http\Promise\Promise updatePublishGraySwitchAsync($arguments = [])
 * @method \Dew\Acs\Result updatePublishCron(array $arguments = [])
 * @method \Http\Promise\Promise updatePublishCronAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeVersionByUuids(array $arguments = [])
 * @method \Http\Promise\Promise upgradeVersionByUuidsAsync($arguments = [])
 * @method \Dew\Acs\Result updatePublishAutoUpgrade(array $arguments = [])
 * @method \Http\Promise\Promise updatePublishAutoUpgradeAsync($arguments = [])
 * @method \Dew\Acs\Result updateHybridProxy(array $arguments = [])
 * @method \Http\Promise\Promise updateHybridProxyAsync($arguments = [])
 * @method \Dew\Acs\Result modifyHybridProxyCluster(array $arguments = [])
 * @method \Http\Promise\Promise modifyHybridProxyClusterAsync($arguments = [])
 * @method \Dew\Acs\Result modifyHybridProxyPolicy(array $arguments = [])
 * @method \Http\Promise\Promise modifyHybridProxyPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result unBindHybridProxy(array $arguments = [])
 * @method \Http\Promise\Promise unBindHybridProxyAsync($arguments = [])
 * @method \Dew\Acs\Result describeHybridProxyPolicy(array $arguments = [])
 * @method \Http\Promise\Promise describeHybridProxyPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeHybridProxyList(array $arguments = [])
 * @method \Http\Promise\Promise describeHybridProxyListAsync($arguments = [])
 * @method \Dew\Acs\Result describeHybridProxyClusterList(array $arguments = [])
 * @method \Http\Promise\Promise describeHybridProxyClusterListAsync($arguments = [])
 * @method \Dew\Acs\Result describeHybridProxyLinkedClientList(array $arguments = [])
 * @method \Http\Promise\Promise describeHybridProxyLinkedClientListAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHybridProxyCluster(array $arguments = [])
 * @method \Http\Promise\Promise deleteHybridProxyClusterAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHybridProxy(array $arguments = [])
 * @method \Http\Promise\Promise deleteHybridProxyAsync($arguments = [])
 * @method \Dew\Acs\Result createHybridProxyCluster(array $arguments = [])
 * @method \Http\Promise\Promise createHybridProxyClusterAsync($arguments = [])
 * @method \Dew\Acs\Result bindHybridProxy(array $arguments = [])
 * @method \Http\Promise\Promise bindHybridProxyAsync($arguments = [])
 * @method \Dew\Acs\Result describeDefaultProxyInstallVersion(array $arguments = [])
 * @method \Http\Promise\Promise describeDefaultProxyInstallVersionAsync($arguments = [])
 * @method \Dew\Acs\Result installHybridProxy(array $arguments = [])
 * @method \Http\Promise\Promise installHybridProxyAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomizeReportList(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomizeReportListAsync($arguments = [])
 * @method \Dew\Acs\Result describeReportExport(array $arguments = [])
 * @method \Http\Promise\Promise describeReportExportAsync($arguments = [])
 * @method \Dew\Acs\Result copyCustomizeReportConfig(array $arguments = [])
 * @method \Http\Promise\Promise copyCustomizeReportConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeChartList(array $arguments = [])
 * @method \Http\Promise\Promise describeChartListAsync($arguments = [])
 * @method \Dew\Acs\Result describeReportRecipientStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeReportRecipientStatusAsync($arguments = [])
 * @method \Dew\Acs\Result modifyProcessWhiteList(array $arguments = [])
 * @method \Http\Promise\Promise modifyProcessWhiteListAsync($arguments = [])
 * @method \Dew\Acs\Result updateWhiteListStrategyStatus(array $arguments = [])
 * @method \Http\Promise\Promise updateWhiteListStrategyStatusAsync($arguments = [])
 * @method \Dew\Acs\Result saveWhiteListStrategyAssets(array $arguments = [])
 * @method \Http\Promise\Promise saveWhiteListStrategyAssetsAsync($arguments = [])
 * @method \Dew\Acs\Result saveWhiteListStrategy(array $arguments = [])
 * @method \Http\Promise\Promise saveWhiteListStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result describeWhiteListStrategyUuidCount(array $arguments = [])
 * @method \Http\Promise\Promise describeWhiteListStrategyUuidCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeWhiteListStrategyStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeWhiteListStrategyStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeWhiteListStrategyList(array $arguments = [])
 * @method \Http\Promise\Promise describeWhiteListStrategyListAsync($arguments = [])
 * @method \Dew\Acs\Result describeWhiteListProcess(array $arguments = [])
 * @method \Http\Promise\Promise describeWhiteListProcessAsync($arguments = [])
 * @method \Dew\Acs\Result describeWhiteListEffectiveAssets(array $arguments = [])
 * @method \Http\Promise\Promise describeWhiteListEffectiveAssetsAsync($arguments = [])
 * @method \Dew\Acs\Result describeWhiteListAuthorize(array $arguments = [])
 * @method \Http\Promise\Promise describeWhiteListAuthorizeAsync($arguments = [])
 * @method \Dew\Acs\Result describeWhiteListAsset(array $arguments = [])
 * @method \Http\Promise\Promise describeWhiteListAssetAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMaliciousFileWhitelistConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteMaliciousFileWhitelistConfigAsync($arguments = [])
 * @method \Dew\Acs\Result batchDeleteMaliciousFileWhitelistConfig(array $arguments = [])
 * @method \Http\Promise\Promise batchDeleteMaliciousFileWhitelistConfigAsync($arguments = [])
 * @method \Dew\Acs\Result updateMaliciousFileWhitelistConfig(array $arguments = [])
 * @method \Http\Promise\Promise updateMaliciousFileWhitelistConfigAsync($arguments = [])
 * @method \Dew\Acs\Result batchUpdateMaliciousFileWhitelistConfig(array $arguments = [])
 * @method \Http\Promise\Promise batchUpdateMaliciousFileWhitelistConfigAsync($arguments = [])
 * @method \Dew\Acs\Result createMaliciousFileWhitelistConfig(array $arguments = [])
 * @method \Http\Promise\Promise createMaliciousFileWhitelistConfigAsync($arguments = [])
 * @method \Dew\Acs\Result getMaliciousFileWhitelistConfig(array $arguments = [])
 * @method \Http\Promise\Promise getMaliciousFileWhitelistConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listMaliciousFileWhitelistConfigs(array $arguments = [])
 * @method \Http\Promise\Promise listMaliciousFileWhitelistConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result createAgentlessScanTask(array $arguments = [])
 * @method \Http\Promise\Promise createAgentlessScanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMaliciousNote(array $arguments = [])
 * @method \Http\Promise\Promise deleteMaliciousNoteAsync($arguments = [])
 * @method \Dew\Acs\Result createMaliciousNote(array $arguments = [])
 * @method \Http\Promise\Promise createMaliciousNoteAsync($arguments = [])
 * @method \Dew\Acs\Result listAgentlessMaliciousFiles(array $arguments = [])
 * @method \Http\Promise\Promise listAgentlessMaliciousFilesAsync($arguments = [])
 * @method \Dew\Acs\Result retryAgentlessTask(array $arguments = [])
 * @method \Http\Promise\Promise retryAgentlessTaskAsync($arguments = [])
 * @method \Dew\Acs\Result listAgentlessRelateMalicious(array $arguments = [])
 * @method \Http\Promise\Promise listAgentlessRelateMaliciousAsync($arguments = [])
 * @method \Dew\Acs\Result listAgentlessRegion(array $arguments = [])
 * @method \Http\Promise\Promise listAgentlessRegionAsync($arguments = [])
 * @method \Dew\Acs\Result listAgentlessTask(array $arguments = [])
 * @method \Http\Promise\Promise listAgentlessTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getAgentlessTaskCount(array $arguments = [])
 * @method \Http\Promise\Promise getAgentlessTaskCountAsync($arguments = [])
 * @method \Dew\Acs\Result listAgentlessRiskUuid(array $arguments = [])
 * @method \Http\Promise\Promise listAgentlessRiskUuidAsync($arguments = [])
 * @method \Dew\Acs\Result listFileProtectPluginStatus(array $arguments = [])
 * @method \Http\Promise\Promise listFileProtectPluginStatusAsync($arguments = [])
 * @method \Dew\Acs\Result updateFileProtectEventStatus(array $arguments = [])
 * @method \Http\Promise\Promise updateFileProtectEventStatusAsync($arguments = [])
 * @method \Dew\Acs\Result getFileProtectDashboard(array $arguments = [])
 * @method \Http\Promise\Promise getFileProtectDashboardAsync($arguments = [])
 * @method \Dew\Acs\Result listFileProtectEvent(array $arguments = [])
 * @method \Http\Promise\Promise listFileProtectEventAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFileProtectRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteFileProtectRuleAsync($arguments = [])
 * @method \Dew\Acs\Result getFileProtectEventCount(array $arguments = [])
 * @method \Http\Promise\Promise getFileProtectEventCountAsync($arguments = [])
 * @method \Dew\Acs\Result updateFileProtectRemark(array $arguments = [])
 * @method \Http\Promise\Promise updateFileProtectRemarkAsync($arguments = [])
 * @method \Dew\Acs\Result getFileProtectEvent(array $arguments = [])
 * @method \Http\Promise\Promise getFileProtectEventAsync($arguments = [])
 * @method \Dew\Acs\Result updateFileProtectRule(array $arguments = [])
 * @method \Http\Promise\Promise updateFileProtectRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listFileProtectRule(array $arguments = [])
 * @method \Http\Promise\Promise listFileProtectRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createFileProtectRule(array $arguments = [])
 * @method \Http\Promise\Promise createFileProtectRuleAsync($arguments = [])
 * @method \Dew\Acs\Result getFileProtectRule(array $arguments = [])
 * @method \Http\Promise\Promise getFileProtectRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listClientAlertMode(array $arguments = [])
 * @method \Http\Promise\Promise listClientAlertModeAsync($arguments = [])
 * @method \Dew\Acs\Result updateClientAlertMode(array $arguments = [])
 * @method \Http\Promise\Promise updateClientAlertModeAsync($arguments = [])
 * @method \Dew\Acs\Result listContainerDefenseRuleClusters(array $arguments = [])
 * @method \Http\Promise\Promise listContainerDefenseRuleClustersAsync($arguments = [])
 * @method \Dew\Acs\Result listContainerDefenseRule(array $arguments = [])
 * @method \Http\Promise\Promise listContainerDefenseRuleAsync($arguments = [])
 * @method \Dew\Acs\Result getContainerDefenseRuleDetail(array $arguments = [])
 * @method \Http\Promise\Promise getContainerDefenseRuleDetailAsync($arguments = [])
 * @method \Dew\Acs\Result modifyContainerDefenseRule(array $arguments = [])
 * @method \Http\Promise\Promise modifyContainerDefenseRuleAsync($arguments = [])
 * @method \Dew\Acs\Result modifyContainerDefenseRuleSwitch(array $arguments = [])
 * @method \Http\Promise\Promise modifyContainerDefenseRuleSwitchAsync($arguments = [])
 * @method \Dew\Acs\Result deleteContainerDefenseRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteContainerDefenseRuleAsync($arguments = [])
 * @method \Dew\Acs\Result addContainerDefenseRule(array $arguments = [])
 * @method \Http\Promise\Promise addContainerDefenseRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listOpaClusterStrategyNew(array $arguments = [])
 * @method \Http\Promise\Promise listOpaClusterStrategyNewAsync($arguments = [])
 * @method \Dew\Acs\Result createOpaStrategyNew(array $arguments = [])
 * @method \Http\Promise\Promise createOpaStrategyNewAsync($arguments = [])
 * @method \Dew\Acs\Result getOpaStrategyDetailNew(array $arguments = [])
 * @method \Http\Promise\Promise getOpaStrategyDetailNewAsync($arguments = [])
 * @method \Dew\Acs\Result updateOpaStrategyNew(array $arguments = [])
 * @method \Http\Promise\Promise updateOpaStrategyNewAsync($arguments = [])
 * @method \Dew\Acs\Result deleteOpaStrategyNew(array $arguments = [])
 * @method \Http\Promise\Promise deleteOpaStrategyNewAsync($arguments = [])
 * @method \Dew\Acs\Result getOpaStrategyTemplateSummary(array $arguments = [])
 * @method \Http\Promise\Promise getOpaStrategyTemplateSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result createOpaClusterPlugin(array $arguments = [])
 * @method \Http\Promise\Promise createOpaClusterPluginAsync($arguments = [])
 * @method \Dew\Acs\Result getOpaPluginStatus(array $arguments = [])
 * @method \Http\Promise\Promise getOpaPluginStatusAsync($arguments = [])
 * @method \Dew\Acs\Result getOpaClusterLabelList(array $arguments = [])
 * @method \Http\Promise\Promise getOpaClusterLabelListAsync($arguments = [])
 * @method \Dew\Acs\Result getStrategyTemplateDetail(array $arguments = [])
 * @method \Http\Promise\Promise getStrategyTemplateDetailAsync($arguments = [])
 * @method \Dew\Acs\Result listCriteriaStrategy(array $arguments = [])
 * @method \Http\Promise\Promise listCriteriaStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result getOpaClusterImageList(array $arguments = [])
 * @method \Http\Promise\Promise getOpaClusterImageListAsync($arguments = [])
 * @method \Dew\Acs\Result getOpaClusterNamespaceList(array $arguments = [])
 * @method \Http\Promise\Promise getOpaClusterNamespaceListAsync($arguments = [])
 * @method \Dew\Acs\Result getOpaClusterBaseLineList(array $arguments = [])
 * @method \Http\Promise\Promise getOpaClusterBaseLineListAsync($arguments = [])
 * @method \Dew\Acs\Result listImageBuildRiskItem(array $arguments = [])
 * @method \Http\Promise\Promise listImageBuildRiskItemAsync($arguments = [])
 * @method \Dew\Acs\Result describeMatchedMaliciousNames(array $arguments = [])
 * @method \Http\Promise\Promise describeMatchedMaliciousNamesAsync($arguments = [])
 * @method \Dew\Acs\Result listAegisContainerPluginRule(array $arguments = [])
 * @method \Http\Promise\Promise listAegisContainerPluginRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listSasContainerWebDefenseRule(array $arguments = [])
 * @method \Http\Promise\Promise listSasContainerWebDefenseRuleAsync($arguments = [])
 * @method \Dew\Acs\Result getSasContainerWebDefenseRule(array $arguments = [])
 * @method \Http\Promise\Promise getSasContainerWebDefenseRuleAsync($arguments = [])
 * @method \Dew\Acs\Result operateSwitchStatus(array $arguments = [])
 * @method \Http\Promise\Promise operateSwitchStatusAsync($arguments = [])
 * @method \Dew\Acs\Result addSasContainerWebDefenseRule(array $arguments = [])
 * @method \Http\Promise\Promise addSasContainerWebDefenseRuleAsync($arguments = [])
 * @method \Dew\Acs\Result modifySasContainerWebDefenseRule(array $arguments = [])
 * @method \Http\Promise\Promise modifySasContainerWebDefenseRuleAsync($arguments = [])
 * @method \Dew\Acs\Result getSasContainerWebDefenseRuleApplication(array $arguments = [])
 * @method \Http\Promise\Promise getSasContainerWebDefenseRuleApplicationAsync($arguments = [])
 * @method \Dew\Acs\Result modifyClusterCnnfStatusUserConfirm(array $arguments = [])
 * @method \Http\Promise\Promise modifyClusterCnnfStatusUserConfirmAsync($arguments = [])
 * @method \Dew\Acs\Result getInterceptionSummary(array $arguments = [])
 * @method \Http\Promise\Promise getInterceptionSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result listInterceptionTargetPage(array $arguments = [])
 * @method \Http\Promise\Promise listInterceptionTargetPageAsync($arguments = [])
 * @method \Dew\Acs\Result listRuleTargetAll(array $arguments = [])
 * @method \Http\Promise\Promise listRuleTargetAllAsync($arguments = [])
 * @method \Dew\Acs\Result setClusterInterceptionConfig(array $arguments = [])
 * @method \Http\Promise\Promise setClusterInterceptionConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInterceptionTarget(array $arguments = [])
 * @method \Http\Promise\Promise modifyInterceptionTargetAsync($arguments = [])
 * @method \Dew\Acs\Result listClusterInterceptionConfig(array $arguments = [])
 * @method \Http\Promise\Promise listClusterInterceptionConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listClusterCnnfStatusDetail(array $arguments = [])
 * @method \Http\Promise\Promise listClusterCnnfStatusDetailAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInterceptionRule(array $arguments = [])
 * @method \Http\Promise\Promise modifyInterceptionRuleAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInterceptionRuleSwitch(array $arguments = [])
 * @method \Http\Promise\Promise modifyInterceptionRuleSwitchAsync($arguments = [])
 * @method \Dew\Acs\Result getClientRatioStatistic(array $arguments = [])
 * @method \Http\Promise\Promise getClientRatioStatisticAsync($arguments = [])
 * @method \Dew\Acs\Result modifyClientConfStrategy(array $arguments = [])
 * @method \Http\Promise\Promise modifyClientConfStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result describeClientConfStrategy(array $arguments = [])
 * @method \Http\Promise\Promise describeClientConfStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result modifyClientConfSetup(array $arguments = [])
 * @method \Http\Promise\Promise modifyClientConfSetupAsync($arguments = [])
 * @method \Dew\Acs\Result describeClientConfSetup(array $arguments = [])
 * @method \Http\Promise\Promise describeClientConfSetupAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstallCode(array $arguments = [])
 * @method \Http\Promise\Promise describeInstallCodeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstallCode(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstallCodeAsync($arguments = [])
 * @method \Dew\Acs\Result listPluginForUuid(array $arguments = [])
 * @method \Http\Promise\Promise listPluginForUuidAsync($arguments = [])
 * @method \Dew\Acs\Result addInstallCode(array $arguments = [])
 * @method \Http\Promise\Promise addInstallCodeAsync($arguments = [])
 * @method \Dew\Acs\Result operateAgentClientInstall(array $arguments = [])
 * @method \Http\Promise\Promise operateAgentClientInstallAsync($arguments = [])
 * @method \Dew\Acs\Result pauseClient(array $arguments = [])
 * @method \Http\Promise\Promise pauseClientAsync($arguments = [])
 * @method \Dew\Acs\Result unbindAegis(array $arguments = [])
 * @method \Http\Promise\Promise unbindAegisAsync($arguments = [])
 * @method \Dew\Acs\Result describeAgentInstallStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeAgentInstallStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeVendorList(array $arguments = [])
 * @method \Http\Promise\Promise describeVendorListAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstallCaptcha(array $arguments = [])
 * @method \Http\Promise\Promise describeInstallCaptchaAsync($arguments = [])
 * @method \Dew\Acs\Result sasInstallCode(array $arguments = [])
 * @method \Http\Promise\Promise sasInstallCodeAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstallCodes(array $arguments = [])
 * @method \Http\Promise\Promise describeInstallCodesAsync($arguments = [])
 * @method \Dew\Acs\Result listUninstallAegisMachines(array $arguments = [])
 * @method \Http\Promise\Promise listUninstallAegisMachinesAsync($arguments = [])
 * @method \Dew\Acs\Result describeClientProblemType(array $arguments = [])
 * @method \Http\Promise\Promise describeClientProblemTypeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSearchCondition(array $arguments = [])
 * @method \Http\Promise\Promise deleteSearchConditionAsync($arguments = [])
 * @method \Dew\Acs\Result startIdcProbeScan(array $arguments = [])
 * @method \Http\Promise\Promise startIdcProbeScanAsync($arguments = [])
 * @method \Dew\Acs\Result modifySearchCondition(array $arguments = [])
 * @method \Http\Promise\Promise modifySearchConditionAsync($arguments = [])
 * @method \Dew\Acs\Result getAssetDetailByUuid(array $arguments = [])
 * @method \Http\Promise\Promise getAssetDetailByUuidAsync($arguments = [])
 * @method \Dew\Acs\Result describeGroupStruct(array $arguments = [])
 * @method \Http\Promise\Promise describeGroupStructAsync($arguments = [])
 * @method \Dew\Acs\Result listCloudAssetInstances(array $arguments = [])
 * @method \Http\Promise\Promise listCloudAssetInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageInfoList(array $arguments = [])
 * @method \Http\Promise\Promise describeImageInfoListAsync($arguments = [])
 * @method \Dew\Acs\Result describeLogShipperStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeLogShipperStatusAsync($arguments = [])
 * @method \Dew\Acs\Result addUninstallClientsByUuids(array $arguments = [])
 * @method \Http\Promise\Promise addUninstallClientsByUuidsAsync($arguments = [])
 * @method \Dew\Acs\Result addTagWithUuid(array $arguments = [])
 * @method \Http\Promise\Promise addTagWithUuidAsync($arguments = [])
 * @method \Dew\Acs\Result getCloudAssetSummary(array $arguments = [])
 * @method \Http\Promise\Promise getCloudAssetSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result getCloudAssetDetail(array $arguments = [])
 * @method \Http\Promise\Promise getCloudAssetDetailAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAssetImportant(array $arguments = [])
 * @method \Http\Promise\Promise modifyAssetImportantAsync($arguments = [])
 * @method \Dew\Acs\Result modifyGroupProperty(array $arguments = [])
 * @method \Http\Promise\Promise modifyGroupPropertyAsync($arguments = [])
 * @method \Dew\Acs\Result describeOfflineMachines(array $arguments = [])
 * @method \Http\Promise\Promise describeOfflineMachinesAsync($arguments = [])
 * @method \Dew\Acs\Result checkUserHasEcs(array $arguments = [])
 * @method \Http\Promise\Promise checkUserHasEcsAsync($arguments = [])
 * @method \Dew\Acs\Result createOrUpdateAssetGroup(array $arguments = [])
 * @method \Http\Promise\Promise createOrUpdateAssetGroupAsync($arguments = [])
 * @method \Dew\Acs\Result refreshAssets(array $arguments = [])
 * @method \Http\Promise\Promise refreshAssetsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteGroupAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTagWithUuid(array $arguments = [])
 * @method \Http\Promise\Promise deleteTagWithUuidAsync($arguments = [])
 * @method \Dew\Acs\Result deleteLoginBaseConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteLoginBaseConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyTagWithUuid(array $arguments = [])
 * @method \Http\Promise\Promise modifyTagWithUuidAsync($arguments = [])
 * @method \Dew\Acs\Result modifyLoginSwitchConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyLoginSwitchConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyLoginBaseConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyLoginBaseConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyPushAllTask(array $arguments = [])
 * @method \Http\Promise\Promise modifyPushAllTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeAssetDetailByUuid(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise describeAssetDetailByUuidAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result describeGroupedInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeGroupedInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result queryGroupIdByGroupName(array $arguments = [])
 * @method \Http\Promise\Promise queryGroupIdByGroupNameAsync($arguments = [])
 * @method \Dew\Acs\Result describeAssetSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeAssetSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeAllEntity(array $arguments = [])
 * @method \Http\Promise\Promise describeAllEntityAsync($arguments = [])
 * @method \Dew\Acs\Result describeFieldStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeFieldStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeGroupedTags(array $arguments = [])
 * @method \Http\Promise\Promise describeGroupedTagsAsync($arguments = [])
 * @method \Dew\Acs\Result describeAllGroups(array $arguments = [])
 * @method \Http\Promise\Promise describeAllGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudProductFieldStatistics(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise describeCloudProductFieldStatisticsAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result describeDomainCount(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainList(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainListAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudCenterInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudCenterInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeSummaryInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeSummaryInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeSearchCondition(array $arguments = [])
 * @method \Http\Promise\Promise describeSearchConditionAsync($arguments = [])
 * @method \Dew\Acs\Result describeCriteria(array $arguments = [])
 * @method \Http\Promise\Promise describeCriteriaAsync($arguments = [])
 * @method \Dew\Acs\Result describeVpcList(array $arguments = [])
 * @method \Http\Promise\Promise describeVpcListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAssetDetailByUuids(array $arguments = [])
 * @method \Http\Promise\Promise describeAssetDetailByUuidsAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeImageStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeContainerStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeContainerStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAssetGroup(array $arguments = [])
 * @method \Http\Promise\Promise modifyAssetGroupAsync($arguments = [])
 * @method \Dew\Acs\Result installCloudMonitor(array $arguments = [])
 * @method \Http\Promise\Promise installCloudMonitorAsync($arguments = [])
 * @method \Dew\Acs\Result describeSasPmAgentList(array $arguments = [])
 * @method \Http\Promise\Promise describeSasPmAgentListAsync($arguments = [])
 * @method \Dew\Acs\Result listAssetCleanConfig(array $arguments = [])
 * @method \Http\Promise\Promise listAssetCleanConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAssetCleanConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyAssetCleanConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listAssetRefreshTaskConfig(array $arguments = [])
 * @method \Http\Promise\Promise listAssetRefreshTaskConfigAsync($arguments = [])
 * @method \Dew\Acs\Result changeAssetRefreshTaskConfig(array $arguments = [])
 * @method \Http\Promise\Promise changeAssetRefreshTaskConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listCloudVendorRegions(array $arguments = [])
 * @method \Http\Promise\Promise listCloudVendorRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result addCloudVendorAccountAK(array $arguments = [])
 * @method \Http\Promise\Promise addCloudVendorAccountAKAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCloudVendorAccountAK(array $arguments = [])
 * @method \Http\Promise\Promise deleteCloudVendorAccountAKAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudVendorAccountAKList(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudVendorAccountAKListAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudVendorTrialConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudVendorTrialConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCloudVendorTrialConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyCloudVendorTrialConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCloudVendorAccountAK(array $arguments = [])
 * @method \Http\Promise\Promise modifyCloudVendorAccountAKAsync($arguments = [])
 * @method \Dew\Acs\Result addCloudVendorTrialConfig(array $arguments = [])
 * @method \Http\Promise\Promise addCloudVendorTrialConfigAsync($arguments = [])
 * @method \Dew\Acs\Result getLocalDefaultRegion(array $arguments = [])
 * @method \Http\Promise\Promise getLocalDefaultRegionAsync($arguments = [])
 * @method \Dew\Acs\Result setSyncRefreshRegion(array $arguments = [])
 * @method \Http\Promise\Promise setSyncRefreshRegionAsync($arguments = [])
 * @method \Dew\Acs\Result getSupportedModules(array $arguments = [])
 * @method \Http\Promise\Promise getSupportedModulesAsync($arguments = [])
 * @method \Dew\Acs\Result describeAssetsScaProcessNum(array $arguments = [])
 * @method \Http\Promise\Promise describeAssetsScaProcessNumAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyUsageTop(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyUsageTopAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyScaProcessDetail(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyScaProcessDetailAsync($arguments = [])
 * @method \Dew\Acs\Result getPropertyScheduleConfig(array $arguments = [])
 * @method \Http\Promise\Promise getPropertyScheduleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result getAssetsPropertyItem(array $arguments = [])
 * @method \Http\Promise\Promise getAssetsPropertyItemAsync($arguments = [])
 * @method \Dew\Acs\Result getAssetsPropertyDetail(array $arguments = [])
 * @method \Http\Promise\Promise getAssetsPropertyDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyTypeScaItem(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyTypeScaItemAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyCronItem(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyCronItemAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyScaItem(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyScaItemAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyCronDetail(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyCronDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyCount(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyCountAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyPortDetail(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyPortDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyProcDetail(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyProcDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyPortItem(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyPortItemAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyProcItem(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyProcItemAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertySoftwareDetail(array $arguments = [])
 * @method \Http\Promise\Promise describePropertySoftwareDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyUsageNewest(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise describePropertyUsageNewestAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result describePropertySoftwareItem(array $arguments = [])
 * @method \Http\Promise\Promise describePropertySoftwareItemAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyUserDetail(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyUserDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyUserItem(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyUserItemAsync($arguments = [])
 * @method \Dew\Acs\Result describeModuleConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeModuleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyScaDetail(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyScaDetailAsync($arguments = [])
 * @method \Dew\Acs\Result modifyPropertyScheduleConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyPropertyScheduleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describePropertyScheduleConfig(array $arguments = [])
 * @method \Http\Promise\Promise describePropertyScheduleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result getSecurityScoreRule(array $arguments = [])
 * @method \Http\Promise\Promise getSecurityScoreRuleAsync($arguments = [])
 * @method \Dew\Acs\Result changeSecurityScoreRule(array $arguments = [])
 * @method \Http\Promise\Promise changeSecurityScoreRuleAsync($arguments = [])
 * @method \Dew\Acs\Result describeSecureSuggestion(array $arguments = [])
 * @method \Http\Promise\Promise describeSecureSuggestionAsync($arguments = [])
 * @method \Dew\Acs\Result describeExposedInstanceCriteria(array $arguments = [])
 * @method \Http\Promise\Promise describeExposedInstanceCriteriaAsync($arguments = [])
 * @method \Dew\Acs\Result describeExposedInstanceDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeExposedInstanceDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeExposedInstanceList(array $arguments = [])
 * @method \Http\Promise\Promise describeExposedInstanceListAsync($arguments = [])
 * @method \Dew\Acs\Result describeExposedStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeExposedStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeExposedStatisticsDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeExposedStatisticsDetailAsync($arguments = [])
 * @method \Dew\Acs\Result listUuidsByAppId(array $arguments = [])
 * @method \Http\Promise\Promise listUuidsByAppIdAsync($arguments = [])
 * @method \Dew\Acs\Result listMachineApps(array $arguments = [])
 * @method \Http\Promise\Promise listMachineAppsAsync($arguments = [])
 * @method \Dew\Acs\Result describeContainerTags(array $arguments = [])
 * @method \Http\Promise\Promise describeContainerTagsAsync($arguments = [])
 * @method \Dew\Acs\Result describeAssetsSecurityEventSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeAssetsSecurityEventSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeImage(array $arguments = [])
 * @method \Http\Promise\Promise describeImageAsync($arguments = [])
 * @method \Dew\Acs\Result describeClusterInfoList(array $arguments = [])
 * @method \Http\Promise\Promise describeClusterInfoListAsync($arguments = [])
 * @method \Dew\Acs\Result describeContainerCriteria(array $arguments = [])
 * @method \Http\Promise\Promise describeContainerCriteriaAsync($arguments = [])
 * @method \Dew\Acs\Result describeContainerInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeContainerInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageCriteria(array $arguments = [])
 * @method \Http\Promise\Promise describeImageCriteriaAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeImageInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageRepoDetailList(array $arguments = [])
 * @method \Http\Promise\Promise describeImageRepoDetailListAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageRepoCriteria(array $arguments = [])
 * @method \Http\Promise\Promise describeImageRepoCriteriaAsync($arguments = [])
 * @method \Dew\Acs\Result getClusterSuspEventStatistics(array $arguments = [])
 * @method \Http\Promise\Promise getClusterSuspEventStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result getClusterCheckItemWarningStatistics(array $arguments = [])
 * @method \Http\Promise\Promise getClusterCheckItemWarningStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeGroupedContainerInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeGroupedContainerInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result refreshContainerAssets(array $arguments = [])
 * @method \Http\Promise\Promise refreshContainerAssetsAsync($arguments = [])
 * @method \Dew\Acs\Result describeClusterNetwork(array $arguments = [])
 * @method \Http\Promise\Promise describeClusterNetworkAsync($arguments = [])
 * @method \Dew\Acs\Result findContainerNetworkConnect(array $arguments = [])
 * @method \Http\Promise\Promise findContainerNetworkConnectAsync($arguments = [])
 * @method \Dew\Acs\Result updateWhiteList(array $arguments = [])
 * @method \Http\Promise\Promise updateWhiteListAsync($arguments = [])
 * @method \Dew\Acs\Result getRegistryScanDayNum(array $arguments = [])
 * @method \Http\Promise\Promise getRegistryScanDayNumAsync($arguments = [])
 * @method \Dew\Acs\Result getDockerhubImageRiskStatistic(array $arguments = [])
 * @method \Http\Promise\Promise getDockerhubImageRiskStatisticAsync($arguments = [])
 * @method \Dew\Acs\Result listImageRegistryExtra(array $arguments = [])
 * @method \Http\Promise\Promise listImageRegistryExtraAsync($arguments = [])
 * @method \Dew\Acs\Result refreshRegistryToken(array $arguments = [])
 * @method \Http\Promise\Promise refreshRegistryTokenAsync($arguments = [])
 * @method \Dew\Acs\Result setBuildRiskDefineRuleConfig(array $arguments = [])
 * @method \Http\Promise\Promise setBuildRiskDefineRuleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result getBuildRiskDefineRuleConfig(array $arguments = [])
 * @method \Http\Promise\Promise getBuildRiskDefineRuleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listPrivateRegistryType(array $arguments = [])
 * @method \Http\Promise\Promise listPrivateRegistryTypeAsync($arguments = [])
 * @method \Dew\Acs\Result listPrivateRegistryList(array $arguments = [])
 * @method \Http\Promise\Promise listPrivateRegistryListAsync($arguments = [])
 * @method \Dew\Acs\Result describeCountNotScannedImage(array $arguments = [])
 * @method \Http\Promise\Promise describeCountNotScannedImageAsync($arguments = [])
 * @method \Dew\Acs\Result getImageScanNumInPeriod(array $arguments = [])
 * @method \Http\Promise\Promise getImageScanNumInPeriodAsync($arguments = [])
 * @method \Dew\Acs\Result setRegistryScanDayNum(array $arguments = [])
 * @method \Http\Promise\Promise setRegistryScanDayNumAsync($arguments = [])
 * @method \Dew\Acs\Result saveImageBaselineStrategy(array $arguments = [])
 * @method \Http\Promise\Promise saveImageBaselineStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result operateImageBaselineWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise operateImageBaselineWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageBaselineStrategy(array $arguments = [])
 * @method \Http\Promise\Promise describeImageBaselineStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageBaselineItemList(array $arguments = [])
 * @method \Http\Promise\Promise describeImageBaselineItemListAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageBaselineDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeImageBaselineDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageBaselineCheckResult(array $arguments = [])
 * @method \Http\Promise\Promise describeImageBaselineCheckResultAsync($arguments = [])
 * @method \Dew\Acs\Result describeAllImageBaseline(array $arguments = [])
 * @method \Http\Promise\Promise describeAllImageBaselineAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageListBySensitiveFile(array $arguments = [])
 * @method \Http\Promise\Promise describeImageListBySensitiveFileAsync($arguments = [])
 * @method \Dew\Acs\Result openSensitiveFileScan(array $arguments = [])
 * @method \Http\Promise\Promise openSensitiveFileScanAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageSensitiveFileList(array $arguments = [])
 * @method \Http\Promise\Promise describeImageSensitiveFileListAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageSensitiveFileByKey(array $arguments = [])
 * @method \Http\Promise\Promise describeImageSensitiveFileByKeyAsync($arguments = [])
 * @method \Dew\Acs\Result describeAffectedMaliciousFileImages(array $arguments = [])
 * @method \Http\Promise\Promise describeAffectedMaliciousFileImagesAsync($arguments = [])
 * @method \Dew\Acs\Result describeGroupedMaliciousFiles(array $arguments = [])
 * @method \Http\Promise\Promise describeGroupedMaliciousFilesAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageVulList(array $arguments = [])
 * @method \Http\Promise\Promise describeImageVulListAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageGroupedVulList(array $arguments = [])
 * @method \Http\Promise\Promise describeImageGroupedVulListAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageListWithBaselineName(array $arguments = [])
 * @method \Http\Promise\Promise describeImageListWithBaselineNameAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageFixTask(array $arguments = [])
 * @method \Http\Promise\Promise describeImageFixTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageScanAuthCount(array $arguments = [])
 * @method \Http\Promise\Promise describeImageScanAuthCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageBaselineCheckSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeImageBaselineCheckSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result publicPreCheckImageScanTask(array $arguments = [])
 * @method \Http\Promise\Promise publicPreCheckImageScanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result publicCreateImageScanTask(array $arguments = [])
 * @method \Http\Promise\Promise publicCreateImageScanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result publicSyncAndCreateImageScanTask(array $arguments = [])
 * @method \Http\Promise\Promise publicSyncAndCreateImageScanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeCountScannedImage(array $arguments = [])
 * @method \Http\Promise\Promise describeCountScannedImageAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCheckRule(array $arguments = [])
 * @method \Http\Promise\Promise modifyCheckRuleAsync($arguments = [])
 * @method \Dew\Acs\Result verifyCheckInstanceResult(array $arguments = [])
 * @method \Http\Promise\Promise verifyCheckInstanceResultAsync($arguments = [])
 * @method \Dew\Acs\Result verifyCheckResult(array $arguments = [])
 * @method \Http\Promise\Promise verifyCheckResultAsync($arguments = [])
 * @method \Dew\Acs\Result getCloudAssetCriteria(array $arguments = [])
 * @method \Http\Promise\Promise getCloudAssetCriteriaAsync($arguments = [])
 * @method \Dew\Acs\Result removeCheckResultWhiteList(array $arguments = [])
 * @method \Http\Promise\Promise removeCheckResultWhiteListAsync($arguments = [])
 * @method \Dew\Acs\Result addCheckResultWhiteList(array $arguments = [])
 * @method \Http\Promise\Promise addCheckResultWhiteListAsync($arguments = [])
 * @method \Dew\Acs\Result removeCheckInstanceResultWhiteList(array $arguments = [])
 * @method \Http\Promise\Promise removeCheckInstanceResultWhiteListAsync($arguments = [])
 * @method \Dew\Acs\Result addCheckInstanceResultWhiteList(array $arguments = [])
 * @method \Http\Promise\Promise addCheckInstanceResultWhiteListAsync($arguments = [])
 * @method \Dew\Acs\Result getCheckSummary(array $arguments = [])
 * @method \Http\Promise\Promise getCheckSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceCatalog(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceCatalogAsync($arguments = [])
 * @method \Dew\Acs\Result getCheckProcess(array $arguments = [])
 * @method \Http\Promise\Promise getCheckProcessAsync($arguments = [])
 * @method \Dew\Acs\Result submitCheck(array $arguments = [])
 * @method \Http\Promise\Promise submitCheckAsync($arguments = [])
 * @method \Dew\Acs\Result changeCheckConfig(array $arguments = [])
 * @method \Http\Promise\Promise changeCheckConfigAsync($arguments = [])
 * @method \Dew\Acs\Result getCheckConfig(array $arguments = [])
 * @method \Http\Promise\Promise getCheckConfigAsync($arguments = [])
 * @method \Dew\Acs\Result getCheckDetail(array $arguments = [])
 * @method \Http\Promise\Promise getCheckDetailAsync($arguments = [])
 * @method \Dew\Acs\Result getCheckCountStatistic(array $arguments = [])
 * @method \Http\Promise\Promise getCheckCountStatisticAsync($arguments = [])
 * @method \Dew\Acs\Result getCheckTimeDimensionStatistic(array $arguments = [])
 * @method \Http\Promise\Promise getCheckTimeDimensionStatisticAsync($arguments = [])
 * @method \Dew\Acs\Result listCheckInstanceResult(array $arguments = [])
 * @method \Http\Promise\Promise listCheckInstanceResultAsync($arguments = [])
 * @method \Dew\Acs\Result listCheckResult(array $arguments = [])
 * @method \Http\Promise\Promise listCheckResultAsync($arguments = [])
 * @method \Dew\Acs\Result listCheckStandard(array $arguments = [])
 * @method \Http\Promise\Promise listCheckStandardAsync($arguments = [])
 * @method \Dew\Acs\Result listCheckItem(array $arguments = [])
 * @method \Http\Promise\Promise listCheckItemAsync($arguments = [])
 * @method \Dew\Acs\Result startBaselineSecurityCheck(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise startBaselineSecurityCheckAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result modifySecurityCheckScheduleConfig(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise modifySecurityCheckScheduleConfigAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result describeRiskItemType(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise describeRiskItemTypeAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result describeRiskCheckSummary(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise describeRiskCheckSummaryAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result describeRiskCheckResult(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise describeRiskCheckResultAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result describeSecurityCheckScheduleConfig(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise describeSecurityCheckScheduleConfigAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result describeRiskCheckItemResult(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise describeRiskCheckItemResultAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result describeRiskListCheckResult(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise describeRiskListCheckResultAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result describeVersionConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeVersionConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listCheckRule(array $arguments = [])
 * @method \Http\Promise\Promise listCheckRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listCheckRuleInstance(array $arguments = [])
 * @method \Http\Promise\Promise listCheckRuleInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result listOperationCheck(array $arguments = [])
 * @method \Http\Promise\Promise listOperationCheckAsync($arguments = [])
 * @method \Dew\Acs\Result listOperationTask(array $arguments = [])
 * @method \Http\Promise\Promise listOperationTaskAsync($arguments = [])
 * @method \Dew\Acs\Result verifyCheckCustomConfig(array $arguments = [])
 * @method \Http\Promise\Promise verifyCheckCustomConfigAsync($arguments = [])
 * @method \Dew\Acs\Result deleteBackupSnapshot(array $arguments = [])
 * @method \Http\Promise\Promise deleteBackupSnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result createRestoreJob(array $arguments = [])
 * @method \Http\Promise\Promise createRestoreJobAsync($arguments = [])
 * @method \Dew\Acs\Result uninstallUniBackupAgent(array $arguments = [])
 * @method \Http\Promise\Promise uninstallUniBackupAgentAsync($arguments = [])
 * @method \Dew\Acs\Result startPreCheckDatabase(array $arguments = [])
 * @method \Http\Promise\Promise startPreCheckDatabaseAsync($arguments = [])
 * @method \Dew\Acs\Result startDiscoverDatabaseTask(array $arguments = [])
 * @method \Http\Promise\Promise startDiscoverDatabaseTaskAsync($arguments = [])
 * @method \Dew\Acs\Result queryPreCheckDatabase(array $arguments = [])
 * @method \Http\Promise\Promise queryPreCheckDatabaseAsync($arguments = [])
 * @method \Dew\Acs\Result queryDiscoverDatabase(array $arguments = [])
 * @method \Http\Promise\Promise queryDiscoverDatabaseAsync($arguments = [])
 * @method \Dew\Acs\Result modifyUniBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise modifyUniBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result installUniBackupAgent(array $arguments = [])
 * @method \Http\Promise\Promise installUniBackupAgentAsync($arguments = [])
 * @method \Dew\Acs\Result describeUniSupportRegion(array $arguments = [])
 * @method \Http\Promise\Promise describeUniSupportRegionAsync($arguments = [])
 * @method \Dew\Acs\Result describeUniRecoverableList(array $arguments = [])
 * @method \Http\Promise\Promise describeUniRecoverableListAsync($arguments = [])
 * @method \Dew\Acs\Result describeUniBackupPolicyDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeUniBackupPolicyDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeUniBackupPolicies(array $arguments = [])
 * @method \Http\Promise\Promise describeUniBackupPoliciesAsync($arguments = [])
 * @method \Dew\Acs\Result describeUniBackupDatabase(array $arguments = [])
 * @method \Http\Promise\Promise describeUniBackupDatabaseAsync($arguments = [])
 * @method \Dew\Acs\Result describeRestorePlans(array $arguments = [])
 * @method \Http\Promise\Promise describeRestorePlansAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUniBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise deleteUniBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result createUniRestorePlan(array $arguments = [])
 * @method \Http\Promise\Promise createUniRestorePlanAsync($arguments = [])
 * @method \Dew\Acs\Result createUniBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise createUniBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeSnapshots(array $arguments = [])
 * @method \Http\Promise\Promise describeSnapshotsAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupMachineStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupMachineStatusAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeBackupPolicyVersion(array $arguments = [])
 * @method \Http\Promise\Promise upgradeBackupPolicyVersionAsync($arguments = [])
 * @method \Dew\Acs\Result describeExcludeSystemPath(array $arguments = [])
 * @method \Http\Promise\Promise describeExcludeSystemPathAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result createBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise createBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result installBackupClient(array $arguments = [])
 * @method \Http\Promise\Promise installBackupClientAsync($arguments = [])
 * @method \Dew\Acs\Result getBackupStorageCount(array $arguments = [])
 * @method \Http\Promise\Promise getBackupStorageCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupClients(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupClientsAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupPolicies(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupPoliciesAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupFiles(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupFilesAsync($arguments = [])
 * @method \Dew\Acs\Result describeSupportRegion(array $arguments = [])
 * @method \Http\Promise\Promise describeSupportRegionAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserBackupMachines(array $arguments = [])
 * @method \Http\Promise\Promise describeUserBackupMachinesAsync($arguments = [])
 * @method \Dew\Acs\Result describeRestoreJobs(array $arguments = [])
 * @method \Http\Promise\Promise describeRestoreJobsAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupRestoreCount(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupRestoreCountAsync($arguments = [])
 * @method \Dew\Acs\Result modifyBackupPolicyStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyBackupPolicyStatusAsync($arguments = [])
 * @method \Dew\Acs\Result modifyBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise modifyBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result deleteBackupPolicyMachine(array $arguments = [])
 * @method \Http\Promise\Promise deleteBackupPolicyMachineAsync($arguments = [])
 * @method \Dew\Acs\Result deleteBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise deleteBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result uninstallBackupClient(array $arguments = [])
 * @method \Http\Promise\Promise uninstallBackupClientAsync($arguments = [])
 * @method \Dew\Acs\Result describeWebLockStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeWebLockStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeWebLockFileEvents(array $arguments = [])
 * @method \Http\Promise\Promise describeWebLockFileEventsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyWebLockDeleteConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyWebLockDeleteConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyWebLockCreateConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyWebLockCreateConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyWebLockUpdateConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyWebLockUpdateConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyWebLockStart(array $arguments = [])
 * @method \Http\Promise\Promise modifyWebLockStartAsync($arguments = [])
 * @method \Dew\Acs\Result describeWebLockConfigList(array $arguments = [])
 * @method \Http\Promise\Promise describeWebLockConfigListAsync($arguments = [])
 * @method \Dew\Acs\Result describeWebLockBindList(array $arguments = [])
 * @method \Http\Promise\Promise describeWebLockBindListAsync($arguments = [])
 * @method \Dew\Acs\Result modifyWebLockStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyWebLockStatusAsync($arguments = [])
 * @method \Dew\Acs\Result modifyWebLockUnbind(array $arguments = [])
 * @method \Http\Promise\Promise modifyWebLockUnbindAsync($arguments = [])
 * @method \Dew\Acs\Result operateWebLockFileEvents(array $arguments = [])
 * @method \Http\Promise\Promise operateWebLockFileEventsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyWebLockProcessStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyWebLockProcessStatusAsync($arguments = [])
 * @method \Dew\Acs\Result joinWebLockProcessWhiteList(array $arguments = [])
 * @method \Http\Promise\Promise joinWebLockProcessWhiteListAsync($arguments = [])
 * @method \Dew\Acs\Result describeWebLockTotalFileChangeCount(array $arguments = [])
 * @method \Http\Promise\Promise describeWebLockTotalFileChangeCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeWebLockProcessList(array $arguments = [])
 * @method \Http\Promise\Promise describeWebLockProcessListAsync($arguments = [])
 * @method \Dew\Acs\Result describeWebLockProcessBlockStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeWebLockProcessBlockStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeWebLockInclusiveFileType(array $arguments = [])
 * @method \Http\Promise\Promise describeWebLockInclusiveFileTypeAsync($arguments = [])
 * @method \Dew\Acs\Result describeWebLockFileTypeSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeWebLockFileTypeSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeWebLockFileChangeStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeWebLockFileChangeStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeWebLockExclusiveFileType(array $arguments = [])
 * @method \Http\Promise\Promise describeWebLockExclusiveFileTypeAsync($arguments = [])
 * @method \Dew\Acs\Result describeSuspiciousUUIDConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeSuspiciousUUIDConfigAsync($arguments = [])
 * @method \Dew\Acs\Result startVirusScanTask(array $arguments = [])
 * @method \Http\Promise\Promise startVirusScanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeLatestScanTask(array $arguments = [])
 * @method \Http\Promise\Promise describeLatestScanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result createVirusScanOnceTask(array $arguments = [])
 * @method \Http\Promise\Promise createVirusScanOnceTaskAsync($arguments = [])
 * @method \Dew\Acs\Result listVirusScanMachine(array $arguments = [])
 * @method \Http\Promise\Promise listVirusScanMachineAsync($arguments = [])
 * @method \Dew\Acs\Result getVirusScanLatestTaskStatistic(array $arguments = [])
 * @method \Http\Promise\Promise getVirusScanLatestTaskStatisticAsync($arguments = [])
 * @method \Dew\Acs\Result listVirusScanMachineEvent(array $arguments = [])
 * @method \Http\Promise\Promise listVirusScanMachineEventAsync($arguments = [])
 * @method \Dew\Acs\Result listVirusScanTask(array $arguments = [])
 * @method \Http\Promise\Promise listVirusScanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getVirusScanConfig(array $arguments = [])
 * @method \Http\Promise\Promise getVirusScanConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeScanTaskProgress(array $arguments = [])
 * @method \Http\Promise\Promise describeScanTaskProgressAsync($arguments = [])
 * @method \Dew\Acs\Result checkQuaraFileId(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise checkQuaraFileIdAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result operateSuspiciousTargetConfig(array $arguments = [])
 * @method \Http\Promise\Promise operateSuspiciousTargetConfigAsync($arguments = [])
 * @method \Dew\Acs\Result operateVirusEvents(array $arguments = [])
 * @method \Http\Promise\Promise operateVirusEventsAsync($arguments = [])
 * @method \Dew\Acs\Result describeGraph4InvestigationOnline(array $arguments = [])
 * @method \Http\Promise\Promise describeGraph4InvestigationOnlineAsync($arguments = [])
 * @method \Dew\Acs\Result describeSecurityEventMarkMissList(array $arguments = [])
 * @method \Http\Promise\Promise describeSecurityEventMarkMissListAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSecurityEventMarkMissList(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise deleteSecurityEventMarkMissListAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result exportSuspEvents(array $arguments = [])
 * @method \Http\Promise\Promise exportSuspEventsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSuspEventNode(array $arguments = [])
 * @method \Http\Promise\Promise deleteSuspEventNodeAsync($arguments = [])
 * @method \Dew\Acs\Result advanceSecurityEventOperations(array $arguments = [])
 * @method \Http\Promise\Promise advanceSecurityEventOperationsAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackUpExportInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeBackUpExportInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeLoginSwitchConfigs(array $arguments = [])
 * @method \Http\Promise\Promise describeLoginSwitchConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result describeWebPath(array $arguments = [])
 * @method \Http\Promise\Promise describeWebPathAsync($arguments = [])
 * @method \Dew\Acs\Result listUuidsByWebPath(array $arguments = [])
 * @method \Http\Promise\Promise listUuidsByWebPathAsync($arguments = [])
 * @method \Dew\Acs\Result modifyWebPath(array $arguments = [])
 * @method \Http\Promise\Promise modifyWebPathAsync($arguments = [])
 * @method \Dew\Acs\Result getAlarmMachineCount(array $arguments = [])
 * @method \Http\Promise\Promise getAlarmMachineCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeSuspEventExportInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeSuspEventExportInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeNsasSuspEventType(array $arguments = [])
 * @method \Http\Promise\Promise describeNsasSuspEventTypeAsync($arguments = [])
 * @method \Dew\Acs\Result describeAlarmEventStackInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeAlarmEventStackInfoAsync($arguments = [])
 * @method \Dew\Acs\Result handleMaliciousFiles(array $arguments = [])
 * @method \Http\Promise\Promise handleMaliciousFilesAsync($arguments = [])
 * @method \Dew\Acs\Result describeStrictEventName(array $arguments = [])
 * @method \Http\Promise\Promise describeStrictEventNameAsync($arguments = [])
 * @method \Dew\Acs\Result updateStrictEventName(array $arguments = [])
 * @method \Http\Promise\Promise updateStrictEventNameAsync($arguments = [])
 * @method \Dew\Acs\Result createSuspEventNote(array $arguments = [])
 * @method \Http\Promise\Promise createSuspEventNoteAsync($arguments = [])
 * @method \Dew\Acs\Result queryGroupedSecurityEventMarkMissList(array $arguments = [])
 * @method \Http\Promise\Promise queryGroupedSecurityEventMarkMissListAsync($arguments = [])
 * @method \Dew\Acs\Result operationCancelIgnoreSuspEvent(array $arguments = [])
 * @method \Http\Promise\Promise operationCancelIgnoreSuspEventAsync($arguments = [])
 * @method \Dew\Acs\Result createSimilarSecurityEventsQueryTask(array $arguments = [])
 * @method \Http\Promise\Promise createSimilarSecurityEventsQueryTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeAlarmEventDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeAlarmEventDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeSuspEvents(array $arguments = [])
 * @method \Http\Promise\Promise describeSuspEventsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSuspEventDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeSuspEventDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeSecurityEventOperations(array $arguments = [])
 * @method \Http\Promise\Promise describeSecurityEventOperationsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSimilarSecurityEvents(array $arguments = [])
 * @method \Http\Promise\Promise describeSimilarSecurityEventsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSuspEventQuaraFiles(array $arguments = [])
 * @method \Http\Promise\Promise describeSuspEventQuaraFilesAsync($arguments = [])
 * @method \Dew\Acs\Result describeSecurityEventOperationStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeSecurityEventOperationStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeSimilarEventScenarios(array $arguments = [])
 * @method \Http\Promise\Promise describeSimilarEventScenariosAsync($arguments = [])
 * @method \Dew\Acs\Result describeSecurityStatInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeSecurityStatInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeLoginBaseConfigs(array $arguments = [])
 * @method \Http\Promise\Promise describeLoginBaseConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result getSuspiciousStatistics(array $arguments = [])
 * @method \Http\Promise\Promise getSuspiciousStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result checkSecurityEventId(array $arguments = [])
 * @method \Http\Promise\Promise checkSecurityEventIdAsync($arguments = [])
 * @method \Dew\Acs\Result describeAttackAnalysisData(array $arguments = [])
 * @method \Http\Promise\Promise describeAttackAnalysisDataAsync($arguments = [])
 * @method \Dew\Acs\Result handleSimilarSecurityEvents(array $arguments = [])
 * @method \Http\Promise\Promise handleSimilarSecurityEventsAsync($arguments = [])
 * @method \Dew\Acs\Result rollbackSuspEventQuaraFile(array $arguments = [])
 * @method \Http\Promise\Promise rollbackSuspEventQuaraFileAsync($arguments = [])
 * @method \Dew\Acs\Result handleSecurityEvents(array $arguments = [])
 * @method \Http\Promise\Promise handleSecurityEventsAsync($arguments = [])
 * @method \Dew\Acs\Result operationSuspEvents(array $arguments = [])
 * @method \Http\Promise\Promise operationSuspEventsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCustomBlockRecord(array $arguments = [])
 * @method \Http\Promise\Promise modifyCustomBlockRecordAsync($arguments = [])
 * @method \Dew\Acs\Result enableCustomBlockRecord(array $arguments = [])
 * @method \Http\Promise\Promise enableCustomBlockRecordAsync($arguments = [])
 * @method \Dew\Acs\Result enableBruteForceRecord(array $arguments = [])
 * @method \Http\Promise\Promise enableBruteForceRecordAsync($arguments = [])
 * @method \Dew\Acs\Result disableBruteForceRecord(array $arguments = [])
 * @method \Http\Promise\Promise disableBruteForceRecordAsync($arguments = [])
 * @method \Dew\Acs\Result disableCustomBlockRecord(array $arguments = [])
 * @method \Http\Promise\Promise disableCustomBlockRecordAsync($arguments = [])
 * @method \Dew\Acs\Result describeBruteForceRecords(array $arguments = [])
 * @method \Http\Promise\Promise describeBruteForceRecordsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCustomBlockRecord(array $arguments = [])
 * @method \Http\Promise\Promise deleteCustomBlockRecordAsync($arguments = [])
 * @method \Dew\Acs\Result createCustomBlockRecord(array $arguments = [])
 * @method \Http\Promise\Promise createCustomBlockRecordAsync($arguments = [])
 * @method \Dew\Acs\Result createAntiBruteForceRule(array $arguments = [])
 * @method \Http\Promise\Promise createAntiBruteForceRuleAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAntiBruteForceRule(array $arguments = [])
 * @method \Http\Promise\Promise modifyAntiBruteForceRuleAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceAntiBruteForceRule(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceAntiBruteForceRuleAsync($arguments = [])
 * @method \Dew\Acs\Result describeBruteForceSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeBruteForceSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceAntiBruteForceRules(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceAntiBruteForceRulesAsync($arguments = [])
 * @method \Dew\Acs\Result describeAntiBruteForceRules(array $arguments = [])
 * @method \Http\Promise\Promise describeAntiBruteForceRulesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAntiBruteForceRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteAntiBruteForceRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listVulGlobalConfig(array $arguments = [])
 * @method \Http\Promise\Promise listVulGlobalConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyRefreshProcessInfo(array $arguments = [])
 * @method \Http\Promise\Promise modifyRefreshProcessInfoAsync($arguments = [])
 * @method \Dew\Acs\Result operateImageVul(array $arguments = [])
 * @method \Http\Promise\Promise operateImageVulAsync($arguments = [])
 * @method \Dew\Acs\Result modifyVulTarget(array $arguments = [])
 * @method \Http\Promise\Promise modifyVulTargetAsync($arguments = [])
 * @method \Dew\Acs\Result modifyVulConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyVulConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyConcernNecessity(array $arguments = [])
 * @method \Http\Promise\Promise modifyConcernNecessityAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAutoDelConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyAutoDelConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAppVulScanCycle(array $arguments = [])
 * @method \Http\Promise\Promise modifyAppVulScanCycleAsync($arguments = [])
 * @method \Dew\Acs\Result describeVulTargetStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeVulTargetStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeVulTargetConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeVulTargetConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeVulNumStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeVulNumStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeVulListPage(array $arguments = [])
 * @method \Http\Promise\Promise describeVulListPageAsync($arguments = [])
 * @method \Dew\Acs\Result describeVulCheckTaskStatusDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeVulCheckTaskStatusDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeTaskErrorLog(array $arguments = [])
 * @method \Http\Promise\Promise describeTaskErrorLogAsync($arguments = [])
 * @method \Dew\Acs\Result describeTarget(array $arguments = [])
 * @method \Http\Promise\Promise describeTargetAsync($arguments = [])
 * @method \Dew\Acs\Result describeMachineCanReboot(array $arguments = [])
 * @method \Http\Promise\Promise describeMachineCanRebootAsync($arguments = [])
 * @method \Dew\Acs\Result describeEmgUserAgreement(array $arguments = [])
 * @method \Http\Promise\Promise describeEmgUserAgreementAsync($arguments = [])
 * @method \Dew\Acs\Result describeClusterVulStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeClusterVulStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeAppVulScanCycle(array $arguments = [])
 * @method \Http\Promise\Promise describeAppVulScanCycleAsync($arguments = [])
 * @method \Dew\Acs\Result describeVulConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeVulConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeVulFixStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeVulFixStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeUuidsByVulNames(array $arguments = [])
 * @method \Http\Promise\Promise describeUuidsByVulNamesAsync($arguments = [])
 * @method \Dew\Acs\Result listVulAutoRepairConfig(array $arguments = [])
 * @method \Http\Promise\Promise listVulAutoRepairConfigAsync($arguments = [])
 * @method \Dew\Acs\Result createVulAutoRepairConfig(array $arguments = [])
 * @method \Http\Promise\Promise createVulAutoRepairConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceRebootStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceRebootStatusAsync($arguments = [])
 * @method \Dew\Acs\Result rebootMachine(array $arguments = [])
 * @method \Http\Promise\Promise rebootMachineAsync($arguments = [])
 * @method \Dew\Acs\Result modifyVulTargetConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyVulTargetConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyStartVulScan(array $arguments = [])
 * @method \Http\Promise\Promise modifyStartVulScanAsync($arguments = [])
 * @method \Dew\Acs\Result modifyEmgVulSubmit(array $arguments = [])
 * @method \Http\Promise\Promise modifyEmgVulSubmitAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCreateVulWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise modifyCreateVulWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result getVulWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise getVulWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result deleteVulWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise deleteVulWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result modifyOperateVul(array $arguments = [])
 * @method \Http\Promise\Promise modifyOperateVulAsync($arguments = [])
 * @method \Dew\Acs\Result describeVulList(array $arguments = [])
 * @method \Http\Promise\Promise describeVulListAsync($arguments = [])
 * @method \Dew\Acs\Result describeEmgVulItem(array $arguments = [])
 * @method \Http\Promise\Promise describeEmgVulItemAsync($arguments = [])
 * @method \Dew\Acs\Result describeGroupedVul(array $arguments = [])
 * @method \Http\Promise\Promise describeGroupedVulAsync($arguments = [])
 * @method \Dew\Acs\Result describeAutoDelConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeAutoDelConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeConcernNecessity(array $arguments = [])
 * @method \Http\Promise\Promise describeConcernNecessityAsync($arguments = [])
 * @method \Dew\Acs\Result describeVulDetails(array $arguments = [])
 * @method \Http\Promise\Promise describeVulDetailsAsync($arguments = [])
 * @method \Dew\Acs\Result describeVulWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise describeVulWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result exportVul(array $arguments = [])
 * @method \Http\Promise\Promise exportVulAsync($arguments = [])
 * @method \Dew\Acs\Result describeVulExportInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeVulExportInfoAsync($arguments = [])
 * @method \Dew\Acs\Result operateVuls(array $arguments = [])
 * @method \Http\Promise\Promise operateVulsAsync($arguments = [])
 * @method \Dew\Acs\Result getVulStatistics(array $arguments = [])
 * @method \Http\Promise\Promise getVulStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyVulWhitelistTarget(array $arguments = [])
 * @method \Http\Promise\Promise modifyVulWhitelistTargetAsync($arguments = [])
 * @method \Dew\Acs\Result describeFrontVulPatchList(array $arguments = [])
 * @method \Http\Promise\Promise describeFrontVulPatchListAsync($arguments = [])
 * @method \Dew\Acs\Result listBaselineCheckWhiteRecord(array $arguments = [])
 * @method \Http\Promise\Promise listBaselineCheckWhiteRecordAsync($arguments = [])
 * @method \Dew\Acs\Result listCheckItemWarningSummary(array $arguments = [])
 * @method \Http\Promise\Promise listCheckItemWarningSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result listCheckItemWarningMachine(array $arguments = [])
 * @method \Http\Promise\Promise listCheckItemWarningMachineAsync($arguments = [])
 * @method \Dew\Acs\Result describeWarningExportInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeWarningExportInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeHcExportInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeHcExportInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeRisks(array $arguments = [])
 * @method \Http\Promise\Promise describeRisksAsync($arguments = [])
 * @method \Dew\Acs\Result describeCheckWarningMachines(array $arguments = [])
 * @method \Http\Promise\Promise describeCheckWarningMachinesAsync($arguments = [])
 * @method \Dew\Acs\Result describeCheckFixDetails(array $arguments = [])
 * @method \Http\Promise\Promise describeCheckFixDetailsAsync($arguments = [])
 * @method \Dew\Acs\Result ignoreCheckItems(array $arguments = [])
 * @method \Http\Promise\Promise ignoreCheckItemsAsync($arguments = [])
 * @method \Dew\Acs\Result describeExposedCheckWarning(array $arguments = [])
 * @method \Http\Promise\Promise describeExposedCheckWarningAsync($arguments = [])
 * @method \Dew\Acs\Result getCheckRiskStatistics(array $arguments = [])
 * @method \Http\Promise\Promise getCheckRiskStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyStrategy(array $arguments = [])
 * @method \Http\Promise\Promise modifyStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result modifyStrategyTarget(array $arguments = [])
 * @method \Http\Promise\Promise modifyStrategyTargetAsync($arguments = [])
 * @method \Dew\Acs\Result describeCheckWarningSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeCheckWarningSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeRiskType(array $arguments = [])
 * @method \Http\Promise\Promise describeRiskTypeAsync($arguments = [])
 * @method \Dew\Acs\Result describeCheckWarnings(array $arguments = [])
 * @method \Http\Promise\Promise describeCheckWarningsAsync($arguments = [])
 * @method \Dew\Acs\Result describeCheckWarningDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeCheckWarningDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeWarningMachines(array $arguments = [])
 * @method \Http\Promise\Promise describeWarningMachinesAsync($arguments = [])
 * @method \Dew\Acs\Result describeStrategyExecDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeStrategyExecDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeCheckEcsWarnings(array $arguments = [])
 * @method \Http\Promise\Promise describeCheckEcsWarningsAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserBaselineAuthorization(array $arguments = [])
 * @method \Http\Promise\Promise describeUserBaselineAuthorizationAsync($arguments = [])
 * @method \Dew\Acs\Result describeStrategyDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeStrategyDetailAsync($arguments = [])
 * @method \Dew\Acs\Result exportWarning(array $arguments = [])
 * @method \Http\Promise\Promise exportWarningAsync($arguments = [])
 * @method \Dew\Acs\Result describeStrategy(array $arguments = [])
 * @method \Http\Promise\Promise describeStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result describeStrategyTarget(array $arguments = [])
 * @method \Http\Promise\Promise describeStrategyTargetAsync($arguments = [])
 * @method \Dew\Acs\Result deleteStrategy(array $arguments = [])
 * @method \Http\Promise\Promise deleteStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result validateHcWarnings(array $arguments = [])
 * @method \Http\Promise\Promise validateHcWarningsAsync($arguments = [])
 * @method \Dew\Acs\Result fixCheckWarnings(array $arguments = [])
 * @method \Http\Promise\Promise fixCheckWarningsAsync($arguments = [])
 * @method \Dew\Acs\Result addBaselineCheckWhiteRecord(array $arguments = [])
 * @method \Http\Promise\Promise addBaselineCheckWhiteRecordAsync($arguments = [])
 * @method \Dew\Acs\Result ignoreHcCheckWarnings(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise ignoreHcCheckWarningsAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result describeCustomizedStrategyTargets(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomizedStrategyTargetsAsync($arguments = [])
 * @method \Dew\Acs\Result listCheckTypes(array $arguments = [])
 * @method \Http\Promise\Promise listCheckTypesAsync($arguments = [])
 * @method \Dew\Acs\Result createDynamicDict(array $arguments = [])
 * @method \Http\Promise\Promise createDynamicDictAsync($arguments = [])
 * @method \Dew\Acs\Result updateBaselineCheckWhiteRecord(array $arguments = [])
 * @method \Http\Promise\Promise updateBaselineCheckWhiteRecordAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCustomizedDict(array $arguments = [])
 * @method \Http\Promise\Promise deleteCustomizedDictAsync($arguments = [])
 * @method \Dew\Acs\Result describeDefaultKeyInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDefaultKeyInfoAsync($arguments = [])
 * @method \Dew\Acs\Result createUserSetting(array $arguments = [])
 * @method \Http\Promise\Promise createUserSettingAsync($arguments = [])
 * @method \Dew\Acs\Result execStrategy(array $arguments = [])
 * @method \Http\Promise\Promise execStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result deleteBaselineCheckWhiteRecord(array $arguments = [])
 * @method \Http\Promise\Promise deleteBaselineCheckWhiteRecordAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAccessKeyLeakDeal(array $arguments = [])
 * @method \Http\Promise\Promise modifyAccessKeyLeakDealAsync($arguments = [])
 * @method \Dew\Acs\Result describeAccesskeyLeakList(array $arguments = [])
 * @method \Http\Promise\Promise describeAccesskeyLeakListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAccessKeyLeakDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeAccessKeyLeakDetailAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHoneypotProbeBind(array $arguments = [])
 * @method \Http\Promise\Promise deleteHoneypotProbeBindAsync($arguments = [])
 * @method \Dew\Acs\Result getHoneypotAttackStatistics(array $arguments = [])
 * @method \Http\Promise\Promise getHoneypotAttackStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result getHoneypotStatistics(array $arguments = [])
 * @method \Http\Promise\Promise getHoneypotStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result listAvailableHoneypot(array $arguments = [])
 * @method \Http\Promise\Promise listAvailableHoneypotAsync($arguments = [])
 * @method \Dew\Acs\Result createHoneypotNode(array $arguments = [])
 * @method \Http\Promise\Promise createHoneypotNodeAsync($arguments = [])
 * @method \Dew\Acs\Result updateHoneypotNode(array $arguments = [])
 * @method \Http\Promise\Promise updateHoneypotNodeAsync($arguments = [])
 * @method \Dew\Acs\Result listHoneypotNode(array $arguments = [])
 * @method \Http\Promise\Promise listHoneypotNodeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHoneypotNode(array $arguments = [])
 * @method \Http\Promise\Promise deleteHoneypotNodeAsync($arguments = [])
 * @method \Dew\Acs\Result getHoneypotNode(array $arguments = [])
 * @method \Http\Promise\Promise getHoneypotNodeAsync($arguments = [])
 * @method \Dew\Acs\Result createHoneypot(array $arguments = [])
 * @method \Http\Promise\Promise createHoneypotAsync($arguments = [])
 * @method \Dew\Acs\Result updateHoneypot(array $arguments = [])
 * @method \Http\Promise\Promise updateHoneypotAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHoneypot(array $arguments = [])
 * @method \Http\Promise\Promise deleteHoneypotAsync($arguments = [])
 * @method \Dew\Acs\Result listHoneypot(array $arguments = [])
 * @method \Http\Promise\Promise listHoneypotAsync($arguments = [])
 * @method \Dew\Acs\Result createHoneypotPreset(array $arguments = [])
 * @method \Http\Promise\Promise createHoneypotPresetAsync($arguments = [])
 * @method \Dew\Acs\Result updateHoneypotPreset(array $arguments = [])
 * @method \Http\Promise\Promise updateHoneypotPresetAsync($arguments = [])
 * @method \Dew\Acs\Result getHoneypotPreset(array $arguments = [])
 * @method \Http\Promise\Promise getHoneypotPresetAsync($arguments = [])
 * @method \Dew\Acs\Result listHoneypotPreset(array $arguments = [])
 * @method \Http\Promise\Promise listHoneypotPresetAsync($arguments = [])
 * @method \Dew\Acs\Result createHoneypotProbe(array $arguments = [])
 * @method \Http\Promise\Promise createHoneypotProbeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHoneypotProbe(array $arguments = [])
 * @method \Http\Promise\Promise deleteHoneypotProbeAsync($arguments = [])
 * @method \Dew\Acs\Result updateHoneypotProbe(array $arguments = [])
 * @method \Http\Promise\Promise updateHoneypotProbeAsync($arguments = [])
 * @method \Dew\Acs\Result listHoneypotProbe(array $arguments = [])
 * @method \Http\Promise\Promise listHoneypotProbeAsync($arguments = [])
 * @method \Dew\Acs\Result getHoneypotProbe(array $arguments = [])
 * @method \Http\Promise\Promise getHoneypotProbeAsync($arguments = [])
 * @method \Dew\Acs\Result listHoneypotAlarmEvents(array $arguments = [])
 * @method \Http\Promise\Promise listHoneypotAlarmEventsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHoneypotPreset(array $arguments = [])
 * @method \Http\Promise\Promise deleteHoneypotPresetAsync($arguments = [])
 * @method \Dew\Acs\Result addVpcHoneyPot(array $arguments = [])
 * @method \Http\Promise\Promise addVpcHoneyPotAsync($arguments = [])
 * @method \Dew\Acs\Result deleteVpcHoneyPot(array $arguments = [])
 * @method \Http\Promise\Promise deleteVpcHoneyPotAsync($arguments = [])
 * @method \Dew\Acs\Result modifyVpcHoneyPot(array $arguments = []) {@deprecated 2018-12-03}
 * @method \Http\Promise\Promise modifyVpcHoneyPotAsync($arguments = []) {@deprecated 2018-12-03}
 * @method \Dew\Acs\Result describeHoneyPotAuth(array $arguments = [])
 * @method \Http\Promise\Promise describeHoneyPotAuthAsync($arguments = [])
 * @method \Dew\Acs\Result describeHoneyPotSuspStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeHoneyPotSuspStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeVpcHoneyPotCriteria(array $arguments = [])
 * @method \Http\Promise\Promise describeVpcHoneyPotCriteriaAsync($arguments = [])
 * @method \Dew\Acs\Result describeVpcHoneyPotList(array $arguments = [])
 * @method \Http\Promise\Promise describeVpcHoneyPotListAsync($arguments = [])
 * @method \Dew\Acs\Result getLogMeta(array $arguments = [])
 * @method \Http\Promise\Promise getLogMetaAsync($arguments = [])
 * @method \Dew\Acs\Result getUserLang(array $arguments = [])
 * @method \Http\Promise\Promise getUserLangAsync($arguments = [])
 * @method \Dew\Acs\Result changeUserLang(array $arguments = [])
 * @method \Http\Promise\Promise changeUserLangAsync($arguments = [])
 * @method \Dew\Acs\Result modifyLogMetaStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyLogMetaStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeLogMeta(array $arguments = [])
 * @method \Http\Promise\Promise describeLogMetaAsync($arguments = [])
 * @method \Dew\Acs\Result modifyOpenLogShipper(array $arguments = [])
 * @method \Http\Promise\Promise modifyOpenLogShipperAsync($arguments = [])
 * @method \Dew\Acs\Result describeLogstoreStorage(array $arguments = [])
 * @method \Http\Promise\Promise describeLogstoreStorageAsync($arguments = [])
 * @method \Dew\Acs\Result modifyClearLogstoreStorage(array $arguments = [])
 * @method \Http\Promise\Promise modifyClearLogstoreStorageAsync($arguments = [])
 * @method \Dew\Acs\Result dingTalkOnlineTest(array $arguments = [])
 * @method \Http\Promise\Promise dingTalkOnlineTestAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDingTalk(array $arguments = [])
 * @method \Http\Promise\Promise deleteDingTalkAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDingTalkStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyDingTalkStatusAsync($arguments = [])
 * @method \Dew\Acs\Result createOrUpdateDingTalk(array $arguments = [])
 * @method \Http\Promise\Promise createOrUpdateDingTalkAsync($arguments = [])
 * @method \Dew\Acs\Result modifyNoticeConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyNoticeConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeDingTalk(array $arguments = [])
 * @method \Http\Promise\Promise describeDingTalkAsync($arguments = [])
 * @method \Dew\Acs\Result describeNoticeConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeNoticeConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataSource(array $arguments = [])
 * @method \Http\Promise\Promise describeDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result createOrUpdateAutoTagRule(array $arguments = [])
 * @method \Http\Promise\Promise createOrUpdateAutoTagRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listAutoTagRules(array $arguments = [])
 * @method \Http\Promise\Promise listAutoTagRulesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAutoTagRules(array $arguments = [])
 * @method \Http\Promise\Promise deleteAutoTagRulesAsync($arguments = [])
 * @method \Dew\Acs\Result ignoreIdcProbeScanResult(array $arguments = [])
 * @method \Http\Promise\Promise ignoreIdcProbeScanResultAsync($arguments = [])
 * @method \Dew\Acs\Result addIdcProbe(array $arguments = [])
 * @method \Http\Promise\Promise addIdcProbeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteIdcProbe(array $arguments = [])
 * @method \Http\Promise\Promise deleteIdcProbeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyIdcProbe(array $arguments = [])
 * @method \Http\Promise\Promise modifyIdcProbeAsync($arguments = [])
 * @method \Dew\Acs\Result describeCommonOverallConfigList(array $arguments = [])
 * @method \Http\Promise\Promise describeCommonOverallConfigListAsync($arguments = [])
 * @method \Dew\Acs\Result describeCommonTargetConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeCommonTargetConfigAsync($arguments = [])
 * @method \Dew\Acs\Result batchOperateCommonOverallConfig(array $arguments = [])
 * @method \Http\Promise\Promise batchOperateCommonOverallConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeCommonTargetResultList(array $arguments = [])
 * @method \Http\Promise\Promise describeCommonTargetResultListAsync($arguments = [])
 * @method \Dew\Acs\Result operateSuspiciousOverallConfig(array $arguments = [])
 * @method \Http\Promise\Promise operateSuspiciousOverallConfigAsync($arguments = [])
 * @method \Dew\Acs\Result operateCommonOverallConfig(array $arguments = [])
 * @method \Http\Promise\Promise operateCommonOverallConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeCommonOverallConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeCommonOverallConfigAsync($arguments = [])
 * @method \Dew\Acs\Result operateCommonTargetConfig(array $arguments = [])
 * @method \Http\Promise\Promise operateCommonTargetConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeSuspiciousOverallConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeSuspiciousOverallConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeExportInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeExportInfoAsync($arguments = [])
 * @method \Dew\Acs\Result exportRecord(array $arguments = [])
 * @method \Http\Promise\Promise exportRecordAsync($arguments = [])
 * @method \Dew\Acs\Result createServiceLinkedRole(array $arguments = [])
 * @method \Http\Promise\Promise createServiceLinkedRoleAsync($arguments = [])
 * @method \Dew\Acs\Result describeServiceLinkedRoleStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeServiceLinkedRoleStatusAsync($arguments = [])
 * @method \Dew\Acs\Result getFileDetectApiInvokeInfo(array $arguments = [])
 * @method \Http\Promise\Promise getFileDetectApiInvokeInfoAsync($arguments = [])
 * @method \Dew\Acs\Result createFileDetectUploadUrl(array $arguments = [])
 * @method \Http\Promise\Promise createFileDetectUploadUrlAsync($arguments = [])
 * @method \Dew\Acs\Result createFileDetect(array $arguments = [])
 * @method \Http\Promise\Promise createFileDetectAsync($arguments = [])
 * @method \Dew\Acs\Result getFileDetectResult(array $arguments = [])
 * @method \Http\Promise\Promise getFileDetectResultAsync($arguments = [])
 * @method \Dew\Acs\Result listCompressFileDetectResult(array $arguments = [])
 * @method \Http\Promise\Promise listCompressFileDetectResultAsync($arguments = [])
 * @method \Dew\Acs\Result deleteOssScanConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteOssScanConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listOssScanConfig(array $arguments = [])
 * @method \Http\Promise\Promise listOssScanConfigAsync($arguments = [])
 * @method \Dew\Acs\Result createOssBucketScanTask(array $arguments = [])
 * @method \Http\Promise\Promise createOssBucketScanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getObjectScanEvent(array $arguments = [])
 * @method \Http\Promise\Promise getObjectScanEventAsync($arguments = [])
 * @method \Dew\Acs\Result listObjectScanEvent(array $arguments = [])
 * @method \Http\Promise\Promise listObjectScanEventAsync($arguments = [])
 * @method \Dew\Acs\Result operateBucketScanTask(array $arguments = [])
 * @method \Http\Promise\Promise operateBucketScanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getOssBucketScanStatistic(array $arguments = [])
 * @method \Http\Promise\Promise getOssBucketScanStatisticAsync($arguments = [])
 * @method \Dew\Acs\Result listOssBucketScanInfo(array $arguments = [])
 * @method \Http\Promise\Promise listOssBucketScanInfoAsync($arguments = [])
 * @method \Dew\Acs\Result updateOssScanConfig(array $arguments = [])
 * @method \Http\Promise\Promise updateOssScanConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listOssBucket(array $arguments = [])
 * @method \Http\Promise\Promise listOssBucketAsync($arguments = [])
 * @method \Dew\Acs\Result createOssScanConfig(array $arguments = [])
 * @method \Http\Promise\Promise createOssScanConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listSupportObjectSuffix(array $arguments = [])
 * @method \Http\Promise\Promise listSupportObjectSuffixAsync($arguments = [])
 * @method \Dew\Acs\Result refreshOssBucketScanInfo(array $arguments = [])
 * @method \Http\Promise\Promise refreshOssBucketScanInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getOssScanConfig(array $arguments = [])
 * @method \Http\Promise\Promise getOssScanConfigAsync($arguments = [])
 * @method \Dew\Acs\Result createCycleTask(array $arguments = [])
 * @method \Http\Promise\Promise createCycleTaskAsync($arguments = [])
 * @method \Dew\Acs\Result generateOnceTask(array $arguments = [])
 * @method \Http\Promise\Promise generateOnceTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCycleTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteCycleTaskAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCycleTask(array $arguments = [])
 * @method \Http\Promise\Promise modifyCycleTaskAsync($arguments = [])
 * @method \Dew\Acs\Result cancelOnceTask(array $arguments = [])
 * @method \Http\Promise\Promise cancelOnceTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeOnceTask(array $arguments = [])
 * @method \Http\Promise\Promise describeOnceTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeCycleTaskList(array $arguments = [])
 * @method \Http\Promise\Promise describeCycleTaskListAsync($arguments = [])
 * @method \Dew\Acs\Result getOnceTaskResultInfo(array $arguments = [])
 * @method \Http\Promise\Promise getOnceTaskResultInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getLastOnceTaskInfo(array $arguments = [])
 * @method \Http\Promise\Promise getLastOnceTaskInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeOnceTaskLeafRecordPage(array $arguments = [])
 * @method \Http\Promise\Promise describeOnceTaskLeafRecordPageAsync($arguments = [])
 * @method \Dew\Acs\Result listSystemRuleAggregationTypes(array $arguments = [])
 * @method \Http\Promise\Promise listSystemRuleAggregationTypesAsync($arguments = [])
 * @method \Dew\Acs\Result listClientUserDefineRules(array $arguments = [])
 * @method \Http\Promise\Promise listClientUserDefineRulesAsync($arguments = [])
 * @method \Dew\Acs\Result listSystemClientRuleTypes(array $arguments = [])
 * @method \Http\Promise\Promise listSystemClientRuleTypesAsync($arguments = [])
 * @method \Dew\Acs\Result listSystemClientRules(array $arguments = [])
 * @method \Http\Promise\Promise listSystemClientRulesAsync($arguments = [])
 * @method \Dew\Acs\Result listSystemAggregationRules(array $arguments = [])
 * @method \Http\Promise\Promise listSystemAggregationRulesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyClientUserDefineRule(array $arguments = [])
 * @method \Http\Promise\Promise modifyClientUserDefineRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listClientUserDefineRuleTypes(array $arguments = [])
 * @method \Http\Promise\Promise listClientUserDefineRuleTypesAsync($arguments = [])
 * @method \Dew\Acs\Result getRulesCount(array $arguments = [])
 * @method \Http\Promise\Promise getRulesCountAsync($arguments = [])
 * @method \Dew\Acs\Result getClientUserDefineRule(array $arguments = [])
 * @method \Http\Promise\Promise getClientUserDefineRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteClientUserDefineRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteClientUserDefineRuleAsync($arguments = [])
 * @method \Dew\Acs\Result addClientUserDefineRule(array $arguments = [])
 * @method \Http\Promise\Promise addClientUserDefineRuleAsync($arguments = [])
 * @method \Dew\Acs\Result updateSelectionKeyByType(array $arguments = [])
 * @method \Http\Promise\Promise updateSelectionKeyByTypeAsync($arguments = [])
 * @method \Dew\Acs\Result createAssetSelectionConfig(array $arguments = [])
 * @method \Http\Promise\Promise createAssetSelectionConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listAssetSelectionSelectedTarget(array $arguments = [])
 * @method \Http\Promise\Promise listAssetSelectionSelectedTargetAsync($arguments = [])
 * @method \Dew\Acs\Result listAssetSelectionTarget(array $arguments = [])
 * @method \Http\Promise\Promise listAssetSelectionTargetAsync($arguments = [])
 * @method \Dew\Acs\Result getAssetSelectionConfig(array $arguments = [])
 * @method \Http\Promise\Promise getAssetSelectionConfigAsync($arguments = [])
 * @method \Dew\Acs\Result addAssetSelectionCriteria(array $arguments = [])
 * @method \Http\Promise\Promise addAssetSelectionCriteriaAsync($arguments = [])
 * @method \Dew\Acs\Result createSoarStrategyTask(array $arguments = [])
 * @method \Http\Promise\Promise createSoarStrategyTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSoarStrategyTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteSoarStrategyTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeSoarStrategies(array $arguments = [])
 * @method \Http\Promise\Promise describeSoarStrategiesAsync($arguments = [])
 * @method \Dew\Acs\Result describeSoarStrategyParam(array $arguments = [])
 * @method \Http\Promise\Promise describeSoarStrategyParamAsync($arguments = [])
 * @method \Dew\Acs\Result describeSoarStrategyTaskDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeSoarStrategyTaskDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeSoarStrategyTasks(array $arguments = [])
 * @method \Http\Promise\Promise describeSoarStrategyTasksAsync($arguments = [])
 * @method \Dew\Acs\Result modifySoarStrategySubscribe(array $arguments = [])
 * @method \Http\Promise\Promise modifySoarStrategySubscribeAsync($arguments = [])
 * @method \Dew\Acs\Result describeSoarSubscribedStrategy(array $arguments = [])
 * @method \Http\Promise\Promise describeSoarSubscribedStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result describeSyncAssetTaskList(array $arguments = [])
 * @method \Http\Promise\Promise describeSyncAssetTaskListAsync($arguments = [])
 * @method \Dew\Acs\Result describeSyncAssetTaskLogDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeSyncAssetTaskLogDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeSoarPlaybookTaskDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeSoarPlaybookTaskDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeSoarStrategyTaskParams(array $arguments = [])
 * @method \Http\Promise\Promise describeSoarStrategyTaskParamsAsync($arguments = [])
 * @method \Dew\Acs\Result processSoarStrategyTask(array $arguments = [])
 * @method \Http\Promise\Promise processSoarStrategyTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeSoarStrategyTaskResult(array $arguments = [])
 * @method \Http\Promise\Promise describeSoarStrategyTaskResultAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainSecureVulList(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainSecureVulListAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainSecureRiskList(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainSecureRiskListAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainSecureAlarmList(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainSecureAlarmListAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainSecureStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainSecureStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainSecureScore(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainSecureScoreAsync($arguments = [])
 * @method \Dew\Acs\Result getAttackTypeList(array $arguments = [])
 * @method \Http\Promise\Promise getAttackTypeListAsync($arguments = [])
 * @method \Dew\Acs\Result getModuleConfigStatus(array $arguments = [])
 * @method \Http\Promise\Promise getModuleConfigStatusAsync($arguments = [])
 * @method \Dew\Acs\Result finishGuidTask(array $arguments = [])
 * @method \Http\Promise\Promise finishGuidTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeVolDingdingMessage(array $arguments = [])
 * @method \Http\Promise\Promise describeVolDingdingMessageAsync($arguments = [])
 * @method \Dew\Acs\Result describeAllRegionsStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeAllRegionsStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result installPmAgent(array $arguments = [])
 * @method \Http\Promise\Promise installPmAgentAsync($arguments = [])
 * @method \Dew\Acs\Result bindAuthToMachine(array $arguments = [])
 * @method \Http\Promise\Promise bindAuthToMachineAsync($arguments = [])
 * @method \Dew\Acs\Result getModuleConfig(array $arguments = [])
 * @method \Http\Promise\Promise getModuleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeClusterBasicInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeClusterBasicInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeQuaraFileDownloadInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeQuaraFileDownloadInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeAffectedAssets(array $arguments = [])
 * @method \Http\Promise\Promise describeAffectedAssetsAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventOnStage(array $arguments = [])
 * @method \Http\Promise\Promise describeEventOnStageAsync($arguments = [])
 * @method \Dew\Acs\Result describeScanTaskStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeScanTaskStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSuspEventUserSetting(array $arguments = [])
 * @method \Http\Promise\Promise describeSuspEventUserSettingAsync($arguments = [])
 * @method \Dew\Acs\Result describeTraceInfoNode(array $arguments = [])
 * @method \Http\Promise\Promise describeTraceInfoNodeAsync($arguments = [])
 * @method \Dew\Acs\Result describeTraceInfoDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeTraceInfoDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventLevelCount(array $arguments = [])
 * @method \Http\Promise\Promise describeEventLevelCountAsync($arguments = [])
 * @method \Dew\Acs\Result saveSuspEventUserSetting(array $arguments = [])
 * @method \Http\Promise\Promise saveSuspEventUserSettingAsync($arguments = [])
 * @method \Dew\Acs\Result confirmVirusEvents(array $arguments = [])
 * @method \Http\Promise\Promise confirmVirusEventsAsync($arguments = [])
 * @method \Dew\Acs\Result modifySecurityEventMarkMissIndividually(array $arguments = [])
 * @method \Http\Promise\Promise modifySecurityEventMarkMissIndividuallyAsync($arguments = [])
 * @method \Dew\Acs\Result createContainerScanTask(array $arguments = [])
 * @method \Http\Promise\Promise createContainerScanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeTotalStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeTotalStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageLatestScanTask(array $arguments = [])
 * @method \Http\Promise\Promise describeImageLatestScanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageRepoList(array $arguments = [])
 * @method \Http\Promise\Promise describeImageRepoListAsync($arguments = [])
 * @method \Dew\Acs\Result createJenkinsImageRegistry(array $arguments = [])
 * @method \Http\Promise\Promise createJenkinsImageRegistryAsync($arguments = [])
 * @method \Dew\Acs\Result pageImageRegistry(array $arguments = [])
 * @method \Http\Promise\Promise pageImageRegistryAsync($arguments = [])
 * @method \Dew\Acs\Result queryJenkinsImageRegistryPersistenceDay(array $arguments = [])
 * @method \Http\Promise\Promise queryJenkinsImageRegistryPersistenceDayAsync($arguments = [])
 * @method \Dew\Acs\Result updateJenkinsImageRegistryName(array $arguments = [])
 * @method \Http\Promise\Promise updateJenkinsImageRegistryNameAsync($arguments = [])
 * @method \Dew\Acs\Result updateJenkinsImageRegistryPersistenceDay(array $arguments = [])
 * @method \Http\Promise\Promise updateJenkinsImageRegistryPersistenceDayAsync($arguments = [])
 * @method \Dew\Acs\Result getInterceptionTargetDetail(array $arguments = [])
 * @method \Http\Promise\Promise getInterceptionTargetDetailAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInterceptionRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteInterceptionRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInterceptionTarget(array $arguments = [])
 * @method \Http\Promise\Promise deleteInterceptionTargetAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomBlockRecords(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomBlockRecordsAsync($arguments = [])
 * @method \Dew\Acs\Result listInterceptionRulePage(array $arguments = [])
 * @method \Http\Promise\Promise listInterceptionRulePageAsync($arguments = [])
 * @method \Dew\Acs\Result listInterceptionHistory(array $arguments = [])
 * @method \Http\Promise\Promise listInterceptionHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result createInterceptionRule(array $arguments = [])
 * @method \Http\Promise\Promise createInterceptionRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createInterceptionTarget(array $arguments = [])
 * @method \Http\Promise\Promise createInterceptionTargetAsync($arguments = [])
 * @method \Dew\Acs\Result getInterceptionRuleDetail(array $arguments = [])
 * @method \Http\Promise\Promise getInterceptionRuleDetailAsync($arguments = [])
 * @method \Dew\Acs\Result listImageRegistryRegion(array $arguments = [])
 * @method \Http\Promise\Promise listImageRegistryRegionAsync($arguments = [])
 * @method \Dew\Acs\Result getAppNetwork(array $arguments = [])
 * @method \Http\Promise\Promise getAppNetworkAsync($arguments = [])
 * @method \Dew\Acs\Result addPrivateRegistry(array $arguments = [])
 * @method \Http\Promise\Promise addPrivateRegistryAsync($arguments = [])
 * @method \Dew\Acs\Result deletePrivateRegistry(array $arguments = [])
 * @method \Http\Promise\Promise deletePrivateRegistryAsync($arguments = [])
 * @method \Dew\Acs\Result getClusterRuleSummary(array $arguments = [])
 * @method \Http\Promise\Promise getClusterRuleSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result listPodRisk(array $arguments = [])
 * @method \Http\Promise\Promise listPodRiskAsync($arguments = [])
 * @method \Dew\Acs\Result listImageRisk(array $arguments = [])
 * @method \Http\Promise\Promise listImageRiskAsync($arguments = [])
 * @method \Dew\Acs\Result changeCheckCustomConfig(array $arguments = [])
 * @method \Http\Promise\Promise changeCheckCustomConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listQueryRaspAppInfo(array $arguments = [])
 * @method \Http\Promise\Promise listQueryRaspAppInfoAsync($arguments = [])
 * @method \Dew\Acs\Result deleteServiceTrail(array $arguments = [])
 * @method \Http\Promise\Promise deleteServiceTrailAsync($arguments = [])
 * @method \Dew\Acs\Result getServiceTrail(array $arguments = [])
 * @method \Http\Promise\Promise getServiceTrailAsync($arguments = [])
 * @method \Dew\Acs\Result createServiceTrail(array $arguments = [])
 * @method \Http\Promise\Promise createServiceTrailAsync($arguments = [])
 * @method \Dew\Acs\Result deleteBinarySecurityPolicy(array $arguments = [])
 * @method \Http\Promise\Promise deleteBinarySecurityPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeMonitorAccounts(array $arguments = [])
 * @method \Http\Promise\Promise describeMonitorAccountsAsync($arguments = [])
 * @method \Dew\Acs\Result addImageVulWhiteList(array $arguments = [])
 * @method \Http\Promise\Promise addImageVulWhiteListAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageVulWhiteList(array $arguments = [])
 * @method \Http\Promise\Promise describeImageVulWhiteListAsync($arguments = [])
 * @method \Dew\Acs\Result queryAttackCount(array $arguments = [])
 * @method \Http\Promise\Promise queryAttackCountAsync($arguments = [])
 * @method \Dew\Acs\Result getSwitchRegionDetail(array $arguments = [])
 * @method \Http\Promise\Promise getSwitchRegionDetailAsync($arguments = [])
 * @method \Dew\Acs\Result getAuthVersionStatistic(array $arguments = [])
 * @method \Http\Promise\Promise getAuthVersionStatisticAsync($arguments = [])
 * @method \Dew\Acs\Result updateImageVulWhitelistTarget(array $arguments = [])
 * @method \Http\Promise\Promise updateImageVulWhitelistTargetAsync($arguments = [])
 * @method \Dew\Acs\Result deleteImageVulWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise deleteImageVulWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result describeContainerScanConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeContainerScanConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyContainerScanConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyContainerScanConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeCanFixVulList(array $arguments = [])
 * @method \Http\Promise\Promise describeCanFixVulListAsync($arguments = [])
 * @method \Dew\Acs\Result modifyImageFixCycleConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyImageFixCycleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageFixCycleConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeImageFixCycleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result createContainerScanTaskByAppName(array $arguments = [])
 * @method \Http\Promise\Promise createContainerScanTaskByAppNameAsync($arguments = [])
 * @method \Dew\Acs\Result getCommonSwitchConfig(array $arguments = [])
 * @method \Http\Promise\Promise getCommonSwitchConfigAsync($arguments = [])
 * @method \Dew\Acs\Result createHoneypotProbeBind(array $arguments = [])
 * @method \Http\Promise\Promise createHoneypotProbeBindAsync($arguments = [])
 * @method \Dew\Acs\Result listHoneypotProbeUuid(array $arguments = [])
 * @method \Http\Promise\Promise listHoneypotProbeUuidAsync($arguments = [])
 * @method \Dew\Acs\Result stopHoneypot(array $arguments = [])
 * @method \Http\Promise\Promise stopHoneypotAsync($arguments = [])
 * @method \Dew\Acs\Result updateHoneypotProbeBind(array $arguments = [])
 * @method \Http\Promise\Promise updateHoneypotProbeBindAsync($arguments = [])
 * @method \Dew\Acs\Result listHoneypotEvents(array $arguments = [])
 * @method \Http\Promise\Promise listHoneypotEventsAsync($arguments = [])
 * @method \Dew\Acs\Result updateAlarmEvent(array $arguments = [])
 * @method \Http\Promise\Promise updateAlarmEventAsync($arguments = [])
 * @method \Dew\Acs\Result retryInstallProbe(array $arguments = [])
 * @method \Http\Promise\Promise retryInstallProbeAsync($arguments = [])
 * @method \Dew\Acs\Result listHoneypotAttackerPortrait(array $arguments = [])
 * @method \Http\Promise\Promise listHoneypotAttackerPortraitAsync($arguments = [])
 * @method \Dew\Acs\Result getHoneypotEventTrend(array $arguments = [])
 * @method \Http\Promise\Promise getHoneypotEventTrendAsync($arguments = [])
 * @method \Dew\Acs\Result listHoneypotAttackerSource(array $arguments = [])
 * @method \Http\Promise\Promise listHoneypotAttackerSourceAsync($arguments = [])
 * @method \Dew\Acs\Result updateCommonSwitchConfig(array $arguments = [])
 * @method \Http\Promise\Promise updateCommonSwitchConfigAsync($arguments = [])
 * @method \Dew\Acs\Result createFileUploadLimit(array $arguments = [])
 * @method \Http\Promise\Promise createFileUploadLimitAsync($arguments = [])
 * @method \Dew\Acs\Result getFileUploadLimit(array $arguments = [])
 * @method \Http\Promise\Promise getFileUploadLimitAsync($arguments = [])
 * @method \Dew\Acs\Result updateFileUploadLimit(array $arguments = [])
 * @method \Http\Promise\Promise updateFileUploadLimitAsync($arguments = [])
 * @method \Dew\Acs\Result getFileDetectReport(array $arguments = [])
 * @method \Http\Promise\Promise getFileDetectReportAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageEventOperationPage(array $arguments = [])
 * @method \Http\Promise\Promise describeImageEventOperationPageAsync($arguments = [])
 * @method \Dew\Acs\Result getImageEventOperation(array $arguments = [])
 * @method \Http\Promise\Promise getImageEventOperationAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageEventOperationCondition(array $arguments = [])
 * @method \Http\Promise\Promise describeImageEventOperationConditionAsync($arguments = [])
 * @method \Dew\Acs\Result updateImageEventOperation(array $arguments = [])
 * @method \Http\Promise\Promise updateImageEventOperationAsync($arguments = [])
 * @method \Dew\Acs\Result deleteImageEventOperation(array $arguments = [])
 * @method \Http\Promise\Promise deleteImageEventOperationAsync($arguments = [])
 * @method \Dew\Acs\Result setSensitiveDefineRuleConfig(array $arguments = [])
 * @method \Http\Promise\Promise setSensitiveDefineRuleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result setImageSensitiveFileStatus(array $arguments = [])
 * @method \Http\Promise\Promise setImageSensitiveFileStatusAsync($arguments = [])
 * @method \Dew\Acs\Result addImageEventOperation(array $arguments = [])
 * @method \Http\Promise\Promise addImageEventOperationAsync($arguments = [])
 * @method \Dew\Acs\Result getSensitiveDefineRuleConfig(array $arguments = [])
 * @method \Http\Promise\Promise getSensitiveDefineRuleConfigAsync($arguments = [])
 * @method \Dew\Acs\Result getHoneypotNodeMetricList(array $arguments = [])
 * @method \Http\Promise\Promise getHoneypotNodeMetricListAsync($arguments = [])
 * @method \Dew\Acs\Result getAegisContainerPluginRuleCriteria(array $arguments = [])
 * @method \Http\Promise\Promise getAegisContainerPluginRuleCriteriaAsync($arguments = [])
 * @method \Dew\Acs\Result operateApplication(array $arguments = [])
 * @method \Http\Promise\Promise operateApplicationAsync($arguments = [])
 * @method \Dew\Acs\Result getSasContainerWebDefenseRuleCriteria(array $arguments = [])
 * @method \Http\Promise\Promise getSasContainerWebDefenseRuleCriteriaAsync($arguments = [])
 * @method \Dew\Acs\Result describeContainerApps(array $arguments = [])
 * @method \Http\Promise\Promise describeContainerAppsAsync($arguments = [])
 * @method \Dew\Acs\Result listGroups(array $arguments = [])
 * @method \Http\Promise\Promise listGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceRiskNum(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceRiskNumAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceRiskLevels(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceRiskLevelsAsync($arguments = [])
 * @method \Dew\Acs\Result getCheckSale(array $arguments = [])
 * @method \Http\Promise\Promise getCheckSaleAsync($arguments = [])
 * @method \Dew\Acs\Result getModuleTrialAuthInfo(array $arguments = [])
 * @method \Http\Promise\Promise getModuleTrialAuthInfoAsync($arguments = [])
 * @method \Dew\Acs\Result addSasModuleTrial(array $arguments = [])
 * @method \Http\Promise\Promise addSasModuleTrialAsync($arguments = [])
 * @method \Dew\Acs\Result enableCustomInstanceBlockRecord(array $arguments = [])
 * @method \Http\Promise\Promise enableCustomInstanceBlockRecordAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomBlockInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomBlockInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result getHoneyPotUploadPolicyInfo(array $arguments = [])
 * @method \Http\Promise\Promise getHoneyPotUploadPolicyInfoAsync($arguments = [])
 * @method \Dew\Acs\Result uploadedHoneyPotFile(array $arguments = [])
 * @method \Http\Promise\Promise uploadedHoneyPotFileAsync($arguments = [])
 * @method \Dew\Acs\Result listHoneypotEventFlows(array $arguments = [])
 * @method \Http\Promise\Promise listHoneypotEventFlowsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyImageRegistry(array $arguments = [])
 * @method \Http\Promise\Promise modifyImageRegistryAsync($arguments = [])
 * @method \Dew\Acs\Result deleteK8sAccessInfo(array $arguments = [])
 * @method \Http\Promise\Promise deleteK8sAccessInfoAsync($arguments = [])
 * @method \Dew\Acs\Result addContainerPluginRule(array $arguments = [])
 * @method \Http\Promise\Promise addContainerPluginRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteContainerPluginRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteContainerPluginRuleAsync($arguments = [])
 * @method \Dew\Acs\Result modifyContainerPluginRule(array $arguments = [])
 * @method \Http\Promise\Promise modifyContainerPluginRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSasContainerWebDefenseRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteSasContainerWebDefenseRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listK8sAccessInfo(array $arguments = [])
 * @method \Http\Promise\Promise listK8sAccessInfoAsync($arguments = [])
 * @method \Dew\Acs\Result generateK8sAccessInfo(array $arguments = [])
 * @method \Http\Promise\Promise generateK8sAccessInfoAsync($arguments = [])
 * @method \Dew\Acs\Result listClusterPluginInfo(array $arguments = [])
 * @method \Http\Promise\Promise listClusterPluginInfoAsync($arguments = [])
 * @method \Dew\Acs\Result markMonitorAccounts(array $arguments = [])
 * @method \Http\Promise\Promise markMonitorAccountsAsync($arguments = [])
 * @method \Dew\Acs\Result unMarkMonitorAccounts(array $arguments = [])
 * @method \Http\Promise\Promise unMarkMonitorAccountsAsync($arguments = [])
 * @method \Dew\Acs\Result queryIncidentTracingJudge(array $arguments = [])
 * @method \Http\Promise\Promise queryIncidentTracingJudgeAsync($arguments = [])
 * @method \Dew\Acs\Result queryIncidentVertexExtendInfo(array $arguments = [])
 * @method \Http\Promise\Promise queryIncidentVertexExtendInfoAsync($arguments = [])
 * @method \Dew\Acs\Result queryIncidentVertexNodes(array $arguments = [])
 * @method \Http\Promise\Promise queryIncidentVertexNodesAsync($arguments = [])
 * @method \Dew\Acs\Result queryIncidentSubNodesCount(array $arguments = [])
 * @method \Http\Promise\Promise queryIncidentSubNodesCountAsync($arguments = [])
 * @method \Dew\Acs\Result queryIncidentTracingDetail(array $arguments = [])
 * @method \Http\Promise\Promise queryIncidentTracingDetailAsync($arguments = [])
 * @method \Dew\Acs\Result getClusterStrategyCount(array $arguments = [])
 * @method \Http\Promise\Promise getClusterStrategyCountAsync($arguments = [])
 * @method \Dew\Acs\Result listUnfinishedOnceTask(array $arguments = [])
 * @method \Http\Promise\Promise listUnfinishedOnceTaskAsync($arguments = [])
 * @method \Dew\Acs\Result queryIncidentIconList(array $arguments = [])
 * @method \Http\Promise\Promise queryIncidentIconListAsync($arguments = [])
 * @method \Dew\Acs\Result listBackupRecord(array $arguments = [])
 * @method \Http\Promise\Promise listBackupRecordAsync($arguments = [])
 * @method \Dew\Acs\Result resetHoneypot(array $arguments = [])
 * @method \Http\Promise\Promise resetHoneypotAsync($arguments = [])
 * @method \Dew\Acs\Result startHoneypot(array $arguments = [])
 * @method \Http\Promise\Promise startHoneypotAsync($arguments = [])
 * @method \Dew\Acs\Result deleteVulAutoRepairConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteVulAutoRepairConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeFixUsedCount(array $arguments = [])
 * @method \Http\Promise\Promise describeFixUsedCountAsync($arguments = [])
 * @method \Dew\Acs\Result createAttestor(array $arguments = [])
 * @method \Http\Promise\Promise createAttestorAsync($arguments = [])
 * @method \Dew\Acs\Result createBinarySecurityPolicy(array $arguments = [])
 * @method \Http\Promise\Promise createBinarySecurityPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAttestor(array $arguments = [])
 * @method \Http\Promise\Promise deleteAttestorAsync($arguments = [])
 * @method \Dew\Acs\Result describeAttestors(array $arguments = [])
 * @method \Http\Promise\Promise describeAttestorsAsync($arguments = [])
 * @method \Dew\Acs\Result describeBinarySecurityPolicies(array $arguments = [])
 * @method \Http\Promise\Promise describeBinarySecurityPoliciesAsync($arguments = [])
 * @method \Dew\Acs\Result describeClusterHostSecuritySummary(array $arguments = [])
 * @method \Http\Promise\Promise describeClusterHostSecuritySummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeClusterImageSecuritySummary(array $arguments = [])
 * @method \Http\Promise\Promise describeClusterImageSecuritySummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeContainerServiceK8sClusters(array $arguments = [])
 * @method \Http\Promise\Promise describeContainerServiceK8sClustersAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomizedDictUploadInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomizedDictUploadInfoAsync($arguments = [])
 * @method \Dew\Acs\Result checkStsTokenAuth(array $arguments = [])
 * @method \Http\Promise\Promise checkStsTokenAuthAsync($arguments = [])
 * @method \Dew\Acs\Result describeVulDefendCountStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeVulDefendCountStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeVulMetaCountStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeVulMetaCountStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result createCustomizedDict(array $arguments = [])
 * @method \Http\Promise\Promise createCustomizedDictAsync($arguments = [])
 * @method \Dew\Acs\Result describeContainerFieldStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeContainerFieldStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeContainerGroupedFieldDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeContainerGroupedFieldDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeContainerServiceK8sClusterKritisStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeContainerServiceK8sClusterKritisStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeContainerServiceK8sClusterNamespaces(array $arguments = [])
 * @method \Http\Promise\Promise describeContainerServiceK8sClusterNamespacesAsync($arguments = [])
 * @method \Dew\Acs\Result createJenkinsImageScanTask(array $arguments = [])
 * @method \Http\Promise\Promise createJenkinsImageScanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeHoneypotNode(array $arguments = [])
 * @method \Http\Promise\Promise upgradeHoneypotNodeAsync($arguments = [])
 * @method \Dew\Acs\Result getAuthSummary(array $arguments = [])
 * @method \Http\Promise\Promise getAuthSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result queryGuidTaskList(array $arguments = [])
 * @method \Http\Promise\Promise queryGuidTaskListAsync($arguments = [])
 * @method \Dew\Acs\Result createSasTrial(array $arguments = [])
 * @method \Http\Promise\Promise createSasTrialAsync($arguments = [])
 * @method \Dew\Acs\Result getCanTrySas(array $arguments = [])
 * @method \Http\Promise\Promise getCanTrySasAsync($arguments = [])
 * @method \Dew\Acs\Result receiveFunctionTrialRewardByAliUid(array $arguments = [])
 * @method \Http\Promise\Promise receiveFunctionTrialRewardByAliUidAsync($arguments = [])
 * @method \Dew\Acs\Result queryAssetDetailByUUID(array $arguments = [])
 * @method \Http\Promise\Promise queryAssetDetailByUUIDAsync($arguments = [])
 * @method \Dew\Acs\Result describeAgentlessSensitiveFileByKey(array $arguments = [])
 * @method \Http\Promise\Promise describeAgentlessSensitiveFileByKeyAsync($arguments = [])
 * @method \Dew\Acs\Result getCheckStructure(array $arguments = [])
 * @method \Http\Promise\Promise getCheckStructureAsync($arguments = [])
 * @method \Dew\Acs\Result describeDynamicDictUploadInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDynamicDictUploadInfoAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCustomizeReport(array $arguments = [])
 * @method \Http\Promise\Promise deleteCustomizeReportAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomizeReportConfigDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomizeReportConfigDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeDynamicDict(array $arguments = [])
 * @method \Http\Promise\Promise describeDynamicDictAsync($arguments = [])
 * @method \Dew\Acs\Result describeIdcProbeScanResultList(array $arguments = [])
 * @method \Http\Promise\Promise describeIdcProbeScanResultListAsync($arguments = [])
 * @method \Dew\Acs\Result describeSupervisonInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeSupervisonInfoAsync($arguments = [])
 * @method \Dew\Acs\Result exportCustomizeReport(array $arguments = [])
 * @method \Http\Promise\Promise exportCustomizeReportAsync($arguments = [])
 * @method \Dew\Acs\Result generateDynamicDict(array $arguments = [])
 * @method \Http\Promise\Promise generateDynamicDictAsync($arguments = [])
 * @method \Dew\Acs\Result getDefenceCount(array $arguments = [])
 * @method \Http\Promise\Promise getDefenceCountAsync($arguments = [])
 * @method \Dew\Acs\Result operationCustomizeReportChart(array $arguments = [])
 * @method \Http\Promise\Promise operationCustomizeReportChartAsync($arguments = [])
 * @method \Dew\Acs\Result saveCustomizeReportConfig(array $arguments = [])
 * @method \Http\Promise\Promise saveCustomizeReportConfigAsync($arguments = [])
 * @method \Dew\Acs\Result sendCustomizeReport(array $arguments = [])
 * @method \Http\Promise\Promise sendCustomizeReportAsync($arguments = [])
 * @method \Dew\Acs\Result updateCustomizeReportStatus(array $arguments = [])
 * @method \Http\Promise\Promise updateCustomizeReportStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeUniBackupStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeUniBackupStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserSetting(array $arguments = [])
 * @method \Http\Promise\Promise describeUserSettingAsync($arguments = [])
 * @method \Dew\Acs\Result getDataTrend(array $arguments = [])
 * @method \Http\Promise\Promise getDataTrendAsync($arguments = [])
 * @method \Dew\Acs\Result resetLogShipper(array $arguments = [])
 * @method \Http\Promise\Promise resetLogShipperAsync($arguments = [])
 * @method \Dew\Acs\Result listLogShipperRegions(array $arguments = [])
 * @method \Http\Promise\Promise listLogShipperRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result updateTargetListByBatch(array $arguments = [])
 * @method \Http\Promise\Promise updateTargetListByBatchAsync($arguments = [])
 * @method \Dew\Acs\Result describeScreenScoreThread(array $arguments = [])
 * @method \Http\Promise\Promise describeScreenScoreThreadAsync($arguments = [])
 * @method \Dew\Acs\Result describeChartData(array $arguments = [])
 * @method \Http\Promise\Promise describeChartDataAsync($arguments = [])
 * @method \Dew\Acs\Result modifyPostPayModuleSwitch(array $arguments = [])
 * @method \Http\Promise\Promise modifyPostPayModuleSwitchAsync($arguments = [])
 * @method \Dew\Acs\Result openBackupAutoConfig(array $arguments = [])
 * @method \Http\Promise\Promise openBackupAutoConfigAsync($arguments = [])
 * @method \Dew\Acs\Result getBackupAutoConfigStatus(array $arguments = [])
 * @method \Http\Promise\Promise getBackupAutoConfigStatusAsync($arguments = [])
 * @method \Dew\Acs\Result getAegisContainerPluginRule(array $arguments = [])
 * @method \Http\Promise\Promise getAegisContainerPluginRuleAsync($arguments = [])
 * @method \Dew\Acs\Result submitOperationTask(array $arguments = [])
 * @method \Http\Promise\Promise submitOperationTaskAsync($arguments = [])
 * @method \Dew\Acs\Result checkTrialFixCount(array $arguments = [])
 * @method \Http\Promise\Promise checkTrialFixCountAsync($arguments = [])
 * @method \Dew\Acs\Result createMonitorAccount(array $arguments = [])
 * @method \Http\Promise\Promise createMonitorAccountAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMonitorAccount(array $arguments = [])
 * @method \Http\Promise\Promise deleteMonitorAccountAsync($arguments = [])
 * @method \Dew\Acs\Result enableServiceAccessResourceDirectory(array $arguments = [])
 * @method \Http\Promise\Promise enableServiceAccessResourceDirectoryAsync($arguments = [])
 * @method \Dew\Acs\Result listAccountsInResourceDirectory(array $arguments = [])
 * @method \Http\Promise\Promise listAccountsInResourceDirectoryAsync($arguments = [])
 * @method \Dew\Acs\Result modifyWebLockRefresh(array $arguments = [])
 * @method \Http\Promise\Promise modifyWebLockRefreshAsync($arguments = [])
 * @method \Dew\Acs\Result describeCheckResult(array $arguments = [])
 * @method \Http\Promise\Promise describeCheckResultAsync($arguments = [])
 * @method \Dew\Acs\Result triggerCheck(array $arguments = [])
 * @method \Http\Promise\Promise triggerCheckAsync($arguments = [])
 * @method \Dew\Acs\Result createRdDefaultSyncList(array $arguments = [])
 * @method \Http\Promise\Promise createRdDefaultSyncListAsync($arguments = [])
 * @method \Dew\Acs\Result listRdDefaultSyncList(array $arguments = [])
 * @method \Http\Promise\Promise listRdDefaultSyncListAsync($arguments = [])
 * @method \Dew\Acs\Result getRdTree(array $arguments = [])
 * @method \Http\Promise\Promise getRdTreeAsync($arguments = [])
 * @method \Dew\Acs\Result describeIdcAssetCriteria(array $arguments = [])
 * @method \Http\Promise\Promise describeIdcAssetCriteriaAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageListByBuildRisk(array $arguments = [])
 * @method \Http\Promise\Promise describeImageListByBuildRiskAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageBuildRiskList(array $arguments = [])
 * @method \Http\Promise\Promise describeImageBuildRiskListAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageBuildRiskByKey(array $arguments = [])
 * @method \Http\Promise\Promise describeImageBuildRiskByKeyAsync($arguments = [])
 * @method \Dew\Acs\Result describeCanTrySas(array $arguments = [])
 * @method \Http\Promise\Promise describeCanTrySasAsync($arguments = [])
 * @method \Dew\Acs\Result describeNeedAsyncQuery(array $arguments = [])
 * @method \Http\Promise\Promise describeNeedAsyncQueryAsync($arguments = [])
 * @method \Dew\Acs\Result listPrivateK8s(array $arguments = [])
 * @method \Http\Promise\Promise listPrivateK8sAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAttestor(array $arguments = [])
 * @method \Http\Promise\Promise modifyAttestorAsync($arguments = [])
 * @method \Dew\Acs\Result describeCheckWarningCount(array $arguments = [])
 * @method \Http\Promise\Promise describeCheckWarningCountAsync($arguments = [])
 * @method \Dew\Acs\Result getAccountLabel(array $arguments = [])
 * @method \Http\Promise\Promise getAccountLabelAsync($arguments = [])
 * @method \Dew\Acs\Result listAssetInfoPublish(array $arguments = [])
 * @method \Http\Promise\Promise listAssetInfoPublishAsync($arguments = [])
 * @method \Dew\Acs\Result getCurrentVersionPublish(array $arguments = [])
 * @method \Http\Promise\Promise getCurrentVersionPublishAsync($arguments = [])
 * @method \Dew\Acs\Result batchCreateMaliciousNote(array $arguments = [])
 * @method \Http\Promise\Promise batchCreateMaliciousNoteAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceVulStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceVulStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result setImageBuildRiskStatus(array $arguments = [])
 * @method \Http\Promise\Promise setImageBuildRiskStatusAsync($arguments = [])
 * @method \Dew\Acs\Result submitTenantCheck(array $arguments = [])
 * @method \Http\Promise\Promise submitTenantCheckAsync($arguments = [])
 * @method \Dew\Acs\Result getTenantCheckAvailable(array $arguments = [])
 * @method \Http\Promise\Promise getTenantCheckAvailableAsync($arguments = [])
 * @method \Dew\Acs\Result listOperationProcessDetail(array $arguments = [])
 * @method \Http\Promise\Promise listOperationProcessDetailAsync($arguments = [])
 * @method \Dew\Acs\Result listOperationProcess(array $arguments = [])
 * @method \Http\Promise\Promise listOperationProcessAsync($arguments = [])
 * @method \Dew\Acs\Result describeCanAccessVpcSale(array $arguments = [])
 * @method \Http\Promise\Promise describeCanAccessVpcSaleAsync($arguments = [])
 * @method \Dew\Acs\Result describeDomainSecureSuggests(array $arguments = [])
 * @method \Http\Promise\Promise describeDomainSecureSuggestsAsync($arguments = [])
 * @method \Dew\Acs\Result describeIdcProbeList(array $arguments = [])
 * @method \Http\Promise\Promise describeIdcProbeListAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageRiskLevelStatistic(array $arguments = [])
 * @method \Http\Promise\Promise describeImageRiskLevelStatisticAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageSecurityScanCount(array $arguments = [])
 * @method \Http\Promise\Promise describeImageSecurityScanCountAsync($arguments = [])
 * @method \Dew\Acs\Result getDockerhubImageRiskRankInfo(array $arguments = [])
 * @method \Http\Promise\Promise getDockerhubImageRiskRankInfoAsync($arguments = [])
 * @method \Dew\Acs\Result listDockerhubImage(array $arguments = [])
 * @method \Http\Promise\Promise listDockerhubImageAsync($arguments = [])
 * @method \Dew\Acs\Result listUserVpc(array $arguments = [])
 * @method \Http\Promise\Promise listUserVpcAsync($arguments = [])
 * @method \Dew\Acs\Result createBatchUploadUrl(array $arguments = [])
 * @method \Http\Promise\Promise createBatchUploadUrlAsync($arguments = [])
 * @method \Dew\Acs\Result getFunctionTrialStatus(array $arguments = [])
 * @method \Http\Promise\Promise getFunctionTrialStatusAsync($arguments = [])
 * @method \Dew\Acs\Result listTargetByBatch(array $arguments = [])
 * @method \Http\Promise\Promise listTargetByBatchAsync($arguments = [])
 * @method \Dew\Acs\Result getConsoleFuncGrayStatus(array $arguments = [])
 * @method \Http\Promise\Promise getConsoleFuncGrayStatusAsync($arguments = [])
 * @method \Dew\Acs\Result getInstanceAlarmStatistics(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceAlarmStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result addProtectVpcList(array $arguments = [])
 * @method \Http\Promise\Promise addProtectVpcListAsync($arguments = [])
 * @method \Dew\Acs\Result grantSwitchAgreement(array $arguments = [])
 * @method \Http\Promise\Promise grantSwitchAgreementAsync($arguments = [])
 * @method \Dew\Acs\Result listAgentlessAsset(array $arguments = [])
 * @method \Http\Promise\Promise listAgentlessAssetAsync($arguments = [])
 * @method \Dew\Acs\Result getServerlessAppAuthDetail(array $arguments = [])
 * @method \Http\Promise\Promise getServerlessAppAuthDetailAsync($arguments = [])
 * @method \Dew\Acs\Result modifyServerlessAuthToMachine(array $arguments = [])
 * @method \Http\Promise\Promise modifyServerlessAuthToMachineAsync($arguments = [])
 * @method \Dew\Acs\Result getServerlessAuthSummary(array $arguments = [])
 * @method \Http\Promise\Promise getServerlessAuthSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result modifyBinarySecurityPolicy(array $arguments = [])
 * @method \Http\Promise\Promise modifyBinarySecurityPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result getInstallCodeForUuid(array $arguments = [])
 * @method \Http\Promise\Promise getInstallCodeForUuidAsync($arguments = [])
 * @method \Dew\Acs\Result updatePostPaidBindRel(array $arguments = [])
 * @method \Http\Promise\Promise updatePostPaidBindRelAsync($arguments = [])
 */
final class SasClient extends AcsClient
{
    //
}
