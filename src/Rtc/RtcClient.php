<?php

declare(strict_types=1);

namespace Dew\Acs\Rtc;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result modifyApp(array $arguments = [])
 * @method \Http\Promise\Promise modifyAppAsync($arguments = [])
 * @method \Dew\Acs\Result describeApps(array $arguments = [])
 * @method \Http\Promise\Promise describeAppsAsync($arguments = [])
 * @method \Dew\Acs\Result describeAppKey(array $arguments = [])
 * @method \Http\Promise\Promise describeAppKeyAsync($arguments = [])
 * @method \Dew\Acs\Result createAppLayout(array $arguments = [])
 * @method \Http\Promise\Promise createAppLayoutAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAppLayout(array $arguments = [])
 * @method \Http\Promise\Promise modifyAppLayoutAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAppLayout(array $arguments = [])
 * @method \Http\Promise\Promise deleteAppLayoutAsync($arguments = [])
 * @method \Dew\Acs\Result describeAppLayouts(array $arguments = [])
 * @method \Http\Promise\Promise describeAppLayoutsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSystemLayoutList(array $arguments = [])
 * @method \Http\Promise\Promise describeSystemLayoutListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAppCallStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeAppCallStatusAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAppCallbackStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyAppCallbackStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeAllCallback(array $arguments = [])
 * @method \Http\Promise\Promise describeAllCallbackAsync($arguments = [])
 * @method \Dew\Acs\Result describeCallbacks(array $arguments = [])
 * @method \Http\Promise\Promise describeCallbacksAsync($arguments = [])
 * @method \Dew\Acs\Result describeAppCallbackSecretKey(array $arguments = [])
 * @method \Http\Promise\Promise describeAppCallbackSecretKeyAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCallbackMeta(array $arguments = [])
 * @method \Http\Promise\Promise modifyCallbackMetaAsync($arguments = [])
 * @method \Dew\Acs\Result startCategoryCallback(array $arguments = [])
 * @method \Http\Promise\Promise startCategoryCallbackAsync($arguments = [])
 * @method \Dew\Acs\Result stopCategoryCallback(array $arguments = [])
 * @method \Http\Promise\Promise stopCategoryCallbackAsync($arguments = [])
 * @method \Dew\Acs\Result describeChannels(array $arguments = [])
 * @method \Http\Promise\Promise describeChannelsAsync($arguments = [])
 * @method \Dew\Acs\Result stopChannel(array $arguments = [])
 * @method \Http\Promise\Promise stopChannelAsync($arguments = [])
 * @method \Dew\Acs\Result describeChannelAllUsers(array $arguments = [])
 * @method \Http\Promise\Promise describeChannelAllUsersAsync($arguments = [])
 * @method \Dew\Acs\Result describeChannelUser(array $arguments = [])
 * @method \Http\Promise\Promise describeChannelUserAsync($arguments = [])
 * @method \Dew\Acs\Result describeChannel(array $arguments = [])
 * @method \Http\Promise\Promise describeChannelAsync($arguments = [])
 * @method \Dew\Acs\Result removeUsers(array $arguments = [])
 * @method \Http\Promise\Promise removeUsersAsync($arguments = [])
 * @method \Dew\Acs\Result describeAppRecordStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeAppRecordStatusAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAppRecordStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyAppRecordStatusAsync($arguments = [])
 * @method \Dew\Acs\Result createAppRecordTemplate(array $arguments = [])
 * @method \Http\Promise\Promise createAppRecordTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAppRecordTemplate(array $arguments = [])
 * @method \Http\Promise\Promise modifyAppRecordTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAppRecordTemplate(array $arguments = [])
 * @method \Http\Promise\Promise deleteAppRecordTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result describeAppRecordTemplates(array $arguments = [])
 * @method \Http\Promise\Promise describeAppRecordTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result describeAppRecordingFiles(array $arguments = [])
 * @method \Http\Promise\Promise describeAppRecordingFilesAsync($arguments = [])
 * @method \Dew\Acs\Result startCloudRecord(array $arguments = [])
 * @method \Http\Promise\Promise startCloudRecordAsync($arguments = [])
 * @method \Dew\Acs\Result updateCloudRecord(array $arguments = [])
 * @method \Http\Promise\Promise updateCloudRecordAsync($arguments = [])
 * @method \Dew\Acs\Result stopCloudRecord(array $arguments = [])
 * @method \Http\Promise\Promise stopCloudRecordAsync($arguments = [])
 * @method \Dew\Acs\Result describeAppLiveStreamStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeAppLiveStreamStatusAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAppLiveStreamStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyAppLiveStreamStatusAsync($arguments = [])
 * @method \Dew\Acs\Result createAppStreamingOutTemplate(array $arguments = [])
 * @method \Http\Promise\Promise createAppStreamingOutTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAppStreamingOutTemplate(array $arguments = [])
 * @method \Http\Promise\Promise modifyAppStreamingOutTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAppStreamingOutTemplate(array $arguments = [])
 * @method \Http\Promise\Promise deleteAppStreamingOutTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result describeAppStreamingOutTemplates(array $arguments = [])
 * @method \Http\Promise\Promise describeAppStreamingOutTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result describeStreamingOutStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeStreamingOutStatusAsync($arguments = [])
 * @method \Dew\Acs\Result startStreamingOut(array $arguments = [])
 * @method \Http\Promise\Promise startStreamingOutAsync($arguments = [])
 * @method \Dew\Acs\Result updateStreamingOut(array $arguments = [])
 * @method \Http\Promise\Promise updateStreamingOutAsync($arguments = [])
 * @method \Dew\Acs\Result stopStreamingOut(array $arguments = [])
 * @method \Http\Promise\Promise stopStreamingOutAsync($arguments = [])
 * @method \Dew\Acs\Result describeCallList(array $arguments = [])
 * @method \Http\Promise\Promise describeCallListAsync($arguments = [])
 * @method \Dew\Acs\Result describeCall(array $arguments = [])
 * @method \Http\Promise\Promise describeCallAsync($arguments = [])
 * @method \Dew\Acs\Result describePubUserListBySubUser(array $arguments = [])
 * @method \Http\Promise\Promise describePubUserListBySubUserAsync($arguments = [])
 * @method \Dew\Acs\Result describeEndPointEventList(array $arguments = [])
 * @method \Http\Promise\Promise describeEndPointEventListAsync($arguments = [])
 * @method \Dew\Acs\Result describeEndPointMetricData(array $arguments = [])
 * @method \Http\Promise\Promise describeEndPointMetricDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeQoeMetricData(array $arguments = [])
 * @method \Http\Promise\Promise describeQoeMetricDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeChannelOverallData(array $arguments = [])
 * @method \Http\Promise\Promise describeChannelOverallDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeChannelDistributionStatData(array $arguments = [])
 * @method \Http\Promise\Promise describeChannelDistributionStatDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeChannelAreaDistributionStatData(array $arguments = [])
 * @method \Http\Promise\Promise describeChannelAreaDistributionStatDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeChannelTopPubUserList(array $arguments = [])
 * @method \Http\Promise\Promise describeChannelTopPubUserListAsync($arguments = [])
 * @method \Dew\Acs\Result describeChannelUserMetrics(array $arguments = [])
 * @method \Http\Promise\Promise describeChannelUserMetricsAsync($arguments = [])
 * @method \Dew\Acs\Result describeUsageOverallData(array $arguments = [])
 * @method \Http\Promise\Promise describeUsageOverallDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeUsageDistributionStatData(array $arguments = [])
 * @method \Http\Promise\Promise describeUsageDistributionStatDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeUsageAreaDistributionStatData(array $arguments = [])
 * @method \Http\Promise\Promise describeUsageAreaDistributionStatDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeUsageOsSdkVersionDistributionStatData(array $arguments = [])
 * @method \Http\Promise\Promise describeUsageOsSdkVersionDistributionStatDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeQualityOverallData(array $arguments = [])
 * @method \Http\Promise\Promise describeQualityOverallDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeQualityDistributionStatData(array $arguments = [])
 * @method \Http\Promise\Promise describeQualityDistributionStatDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeQualityAreaDistributionStatData(array $arguments = [])
 * @method \Http\Promise\Promise describeQualityAreaDistributionStatDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeQualityOsSdkVersionDistributionStatData(array $arguments = [])
 * @method \Http\Promise\Promise describeQualityOsSdkVersionDistributionStatDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeFaultDiagnosisOverallData(array $arguments = [])
 * @method \Http\Promise\Promise describeFaultDiagnosisOverallDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeFaultDiagnosisFactorDistributionStat(array $arguments = [])
 * @method \Http\Promise\Promise describeFaultDiagnosisFactorDistributionStatAsync($arguments = [])
 * @method \Dew\Acs\Result describeFaultDiagnosisUserList(array $arguments = [])
 * @method \Http\Promise\Promise describeFaultDiagnosisUserListAsync($arguments = [])
 * @method \Dew\Acs\Result describeFaultDiagnosisUserDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeFaultDiagnosisUserDetailAsync($arguments = [])
 * @method \Dew\Acs\Result createEventSubscribe(array $arguments = [])
 * @method \Http\Promise\Promise createEventSubscribeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteEventSubscribe(array $arguments = [])
 * @method \Http\Promise\Promise deleteEventSubscribeAsync($arguments = [])
 * @method \Dew\Acs\Result createAutoLiveStreamRule(array $arguments = [])
 * @method \Http\Promise\Promise createAutoLiveStreamRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAutoLiveStreamRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteAutoLiveStreamRuleAsync($arguments = [])
 * @method \Dew\Acs\Result disableAutoLiveStreamRule(array $arguments = [])
 * @method \Http\Promise\Promise disableAutoLiveStreamRuleAsync($arguments = [])
 * @method \Dew\Acs\Result enableAutoLiveStreamRule(array $arguments = [])
 * @method \Http\Promise\Promise enableAutoLiveStreamRuleAsync($arguments = [])
 * @method \Dew\Acs\Result updateAutoLiveStreamRule(array $arguments = [])
 * @method \Http\Promise\Promise updateAutoLiveStreamRuleAsync($arguments = [])
 * @method \Dew\Acs\Result describeAutoLiveStreamRule(array $arguments = [])
 * @method \Http\Promise\Promise describeAutoLiveStreamRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteChannel(array $arguments = [])
 * @method \Http\Promise\Promise deleteChannelAsync($arguments = [])
 * @method \Dew\Acs\Result describeChannelParticipants(array $arguments = [])
 * @method \Http\Promise\Promise describeChannelParticipantsAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserInfoInChannel(array $arguments = [])
 * @method \Http\Promise\Promise describeUserInfoInChannelAsync($arguments = [])
 * @method \Dew\Acs\Result describeChannelUsers(array $arguments = [])
 * @method \Http\Promise\Promise describeChannelUsersAsync($arguments = [])
 * @method \Dew\Acs\Result removeTerminals(array $arguments = [])
 * @method \Http\Promise\Promise removeTerminalsAsync($arguments = [])
 * @method \Dew\Acs\Result addRecordTemplate(array $arguments = [])
 * @method \Http\Promise\Promise addRecordTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRecordTemplate(array $arguments = [])
 * @method \Http\Promise\Promise deleteRecordTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result updateRecordTemplate(array $arguments = [])
 * @method \Http\Promise\Promise updateRecordTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result startRecordTask(array $arguments = [])
 * @method \Http\Promise\Promise startRecordTaskAsync($arguments = [])
 * @method \Dew\Acs\Result stopRecordTask(array $arguments = [])
 * @method \Http\Promise\Promise stopRecordTaskAsync($arguments = [])
 * @method \Dew\Acs\Result updateRecordTask(array $arguments = [])
 * @method \Http\Promise\Promise updateRecordTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecordTemplates(array $arguments = [])
 * @method \Http\Promise\Promise describeRecordTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecordFiles(array $arguments = [])
 * @method \Http\Promise\Promise describeRecordFilesAsync($arguments = [])
 * @method \Dew\Acs\Result startMPUTask(array $arguments = [])
 * @method \Http\Promise\Promise startMPUTaskAsync($arguments = [])
 * @method \Dew\Acs\Result stopMPUTask(array $arguments = [])
 * @method \Http\Promise\Promise stopMPUTaskAsync($arguments = [])
 * @method \Dew\Acs\Result updateMPUTask(array $arguments = [])
 * @method \Http\Promise\Promise updateMPUTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getMPUTaskStatus(array $arguments = [])
 * @method \Http\Promise\Promise getMPUTaskStatusAsync($arguments = [])
 * @method \Dew\Acs\Result createMPULayout(array $arguments = [])
 * @method \Http\Promise\Promise createMPULayoutAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMPULayout(array $arguments = [])
 * @method \Http\Promise\Promise deleteMPULayoutAsync($arguments = [])
 * @method \Dew\Acs\Result modifyMPULayout(array $arguments = [])
 * @method \Http\Promise\Promise modifyMPULayoutAsync($arguments = [])
 * @method \Dew\Acs\Result describeMPULayoutInfoList(array $arguments = [])
 * @method \Http\Promise\Promise describeMPULayoutInfoListAsync($arguments = [])
 * @method \Dew\Acs\Result describeRtcDurationData(array $arguments = [])
 * @method \Http\Promise\Promise describeRtcDurationDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeRtcUserCntData(array $arguments = [])
 * @method \Http\Promise\Promise describeRtcUserCntDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeRtcPeakChannelCntData(array $arguments = [])
 * @method \Http\Promise\Promise describeRtcPeakChannelCntDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeRtcChannelList(array $arguments = [])
 * @method \Http\Promise\Promise describeRtcChannelListAsync($arguments = [])
 * @method \Dew\Acs\Result describeRtcChannelMetric(array $arguments = [])
 * @method \Http\Promise\Promise describeRtcChannelMetricAsync($arguments = [])
 */
final class RtcClient extends AcsClient
{
    //
}
