<?php

declare(strict_types=1);

namespace Dew\Acs\Privatelink;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result openPrivateLinkService(array $arguments = [])
 * @method \Http\Promise\Promise openPrivateLinkServiceAsync($arguments = [])
 * @method \Dew\Acs\Result checkProductOpen(array $arguments = [])
 * @method \Http\Promise\Promise checkProductOpenAsync($arguments = [])
 * @method \Dew\Acs\Result describeRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result describeZones(array $arguments = [])
 * @method \Http\Promise\Promise describeZonesAsync($arguments = [])
 * @method \Dew\Acs\Result createVpcEndpointService(array $arguments = [])
 * @method \Http\Promise\Promise createVpcEndpointServiceAsync($arguments = [])
 * @method \Dew\Acs\Result updateVpcEndpointServiceAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateVpcEndpointServiceAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result getVpcEndpointServiceAttribute(array $arguments = [])
 * @method \Http\Promise\Promise getVpcEndpointServiceAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listVpcEndpointServices(array $arguments = [])
 * @method \Http\Promise\Promise listVpcEndpointServicesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteVpcEndpointService(array $arguments = [])
 * @method \Http\Promise\Promise deleteVpcEndpointServiceAsync($arguments = [])
 * @method \Dew\Acs\Result addUserToVpcEndpointService(array $arguments = [])
 * @method \Http\Promise\Promise addUserToVpcEndpointServiceAsync($arguments = [])
 * @method \Dew\Acs\Result listVpcEndpointServiceUsers(array $arguments = [])
 * @method \Http\Promise\Promise listVpcEndpointServiceUsersAsync($arguments = [])
 * @method \Dew\Acs\Result removeUserFromVpcEndpointService(array $arguments = [])
 * @method \Http\Promise\Promise removeUserFromVpcEndpointServiceAsync($arguments = [])
 * @method \Dew\Acs\Result updateVpcEndpointServiceResourceAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateVpcEndpointServiceResourceAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result attachResourceToVpcEndpointService(array $arguments = [])
 * @method \Http\Promise\Promise attachResourceToVpcEndpointServiceAsync($arguments = [])
 * @method \Dew\Acs\Result listVpcEndpointServiceResources(array $arguments = [])
 * @method \Http\Promise\Promise listVpcEndpointServiceResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result detachResourceFromVpcEndpointService(array $arguments = [])
 * @method \Http\Promise\Promise detachResourceFromVpcEndpointServiceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteVpcEndpoint(array $arguments = [])
 * @method \Http\Promise\Promise deleteVpcEndpointAsync($arguments = [])
 * @method \Dew\Acs\Result createVpcEndpoint(array $arguments = [])
 * @method \Http\Promise\Promise createVpcEndpointAsync($arguments = [])
 * @method \Dew\Acs\Result updateVpcEndpointAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateVpcEndpointAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listVpcEndpoints(array $arguments = [])
 * @method \Http\Promise\Promise listVpcEndpointsAsync($arguments = [])
 * @method \Dew\Acs\Result getVpcEndpointAttribute(array $arguments = [])
 * @method \Http\Promise\Promise getVpcEndpointAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listVpcEndpointServicesByEndUser(array $arguments = [])
 * @method \Http\Promise\Promise listVpcEndpointServicesByEndUserAsync($arguments = [])
 * @method \Dew\Acs\Result enableVpcEndpointConnection(array $arguments = [])
 * @method \Http\Promise\Promise enableVpcEndpointConnectionAsync($arguments = [])
 * @method \Dew\Acs\Result updateVpcEndpointConnectionAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateVpcEndpointConnectionAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result listVpcEndpointConnections(array $arguments = [])
 * @method \Http\Promise\Promise listVpcEndpointConnectionsAsync($arguments = [])
 * @method \Dew\Acs\Result disableVpcEndpointConnection(array $arguments = [])
 * @method \Http\Promise\Promise disableVpcEndpointConnectionAsync($arguments = [])
 * @method \Dew\Acs\Result addZoneToVpcEndpoint(array $arguments = [])
 * @method \Http\Promise\Promise addZoneToVpcEndpointAsync($arguments = [])
 * @method \Dew\Acs\Result listVpcEndpointZones(array $arguments = [])
 * @method \Http\Promise\Promise listVpcEndpointZonesAsync($arguments = [])
 * @method \Dew\Acs\Result removeZoneFromVpcEndpoint(array $arguments = [])
 * @method \Http\Promise\Promise removeZoneFromVpcEndpointAsync($arguments = [])
 * @method \Dew\Acs\Result disableVpcEndpointZoneConnection(array $arguments = [])
 * @method \Http\Promise\Promise disableVpcEndpointZoneConnectionAsync($arguments = [])
 * @method \Dew\Acs\Result enableVpcEndpointZoneConnection(array $arguments = [])
 * @method \Http\Promise\Promise enableVpcEndpointZoneConnectionAsync($arguments = [])
 * @method \Dew\Acs\Result updateVpcEndpointZoneConnectionResourceAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateVpcEndpointZoneConnectionResourceAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result attachSecurityGroupToVpcEndpoint(array $arguments = [])
 * @method \Http\Promise\Promise attachSecurityGroupToVpcEndpointAsync($arguments = [])
 * @method \Dew\Acs\Result listVpcEndpointSecurityGroups(array $arguments = [])
 * @method \Http\Promise\Promise listVpcEndpointSecurityGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result detachSecurityGroupFromVpcEndpoint(array $arguments = [])
 * @method \Http\Promise\Promise detachSecurityGroupFromVpcEndpointAsync($arguments = [])
 * @method \Dew\Acs\Result untagResources(array $arguments = [])
 * @method \Http\Promise\Promise untagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result listTagResources(array $arguments = [])
 * @method \Http\Promise\Promise listTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result changeResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise changeResourceGroupAsync($arguments = [])
 */
final class PrivatelinkClient extends AcsClient
{
    //
}
