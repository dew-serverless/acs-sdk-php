<?php

declare(strict_types=1);

namespace Dew\Acs\Dyvmsapi;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result singleCallByVoice(array $arguments = [])
 * @method \Http\Promise\Promise singleCallByVoiceAsync($arguments = [])
 * @method \Dew\Acs\Result singleCallByTts(array $arguments = [])
 * @method \Http\Promise\Promise singleCallByTtsAsync($arguments = [])
 * @method \Dew\Acs\Result createCallTask(array $arguments = [])
 * @method \Http\Promise\Promise createCallTaskAsync($arguments = [])
 * @method \Dew\Acs\Result listCallTask(array $arguments = [])
 * @method \Http\Promise\Promise listCallTaskAsync($arguments = [])
 * @method \Dew\Acs\Result executeCallTask(array $arguments = [])
 * @method \Http\Promise\Promise executeCallTaskAsync($arguments = [])
 * @method \Dew\Acs\Result listCallTaskDetail(array $arguments = [])
 * @method \Http\Promise\Promise listCallTaskDetailAsync($arguments = [])
 * @method \Dew\Acs\Result addVirtualNumberRelation(array $arguments = [])
 * @method \Http\Promise\Promise addVirtualNumberRelationAsync($arguments = [])
 * @method \Dew\Acs\Result queryVirtualNumber(array $arguments = [])
 * @method \Http\Promise\Promise queryVirtualNumberAsync($arguments = [])
 * @method \Dew\Acs\Result queryVirtualNumberRelation(array $arguments = [])
 * @method \Http\Promise\Promise queryVirtualNumberRelationAsync($arguments = [])
 * @method \Dew\Acs\Result queryVoiceFileAuditInfo(array $arguments = [])
 * @method \Http\Promise\Promise queryVoiceFileAuditInfoAsync($arguments = [])
 * @method \Dew\Acs\Result queryCallDetailByCallId(array $arguments = [])
 * @method \Http\Promise\Promise queryCallDetailByCallIdAsync($arguments = [])
 * @method \Dew\Acs\Result ivrCall(array $arguments = [])
 * @method \Http\Promise\Promise ivrCallAsync($arguments = [])
 * @method \Dew\Acs\Result smartCall(array $arguments = [])
 * @method \Http\Promise\Promise smartCallAsync($arguments = [])
 * @method \Dew\Acs\Result smartCallOperate(array $arguments = [])
 * @method \Http\Promise\Promise smartCallOperateAsync($arguments = [])
 * @method \Dew\Acs\Result createRobotTask(array $arguments = [])
 * @method \Http\Promise\Promise createRobotTaskAsync($arguments = [])
 * @method \Dew\Acs\Result batchRobotSmartCall(array $arguments = [])
 * @method \Http\Promise\Promise batchRobotSmartCallAsync($arguments = [])
 * @method \Dew\Acs\Result startRobotTask(array $arguments = [])
 * @method \Http\Promise\Promise startRobotTaskAsync($arguments = [])
 * @method \Dew\Acs\Result stopRobotTask(array $arguments = [])
 * @method \Http\Promise\Promise stopRobotTaskAsync($arguments = [])
 * @method \Dew\Acs\Result cancelOrderRobotTask(array $arguments = [])
 * @method \Http\Promise\Promise cancelOrderRobotTaskAsync($arguments = [])
 * @method \Dew\Acs\Result cancelRobotTask(array $arguments = [])
 * @method \Http\Promise\Promise cancelRobotTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRobotTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteRobotTaskAsync($arguments = [])
 * @method \Dew\Acs\Result queryRobotv2AllList(array $arguments = [])
 * @method \Http\Promise\Promise queryRobotv2AllListAsync($arguments = [])
 * @method \Dew\Acs\Result queryRobotTaskList(array $arguments = [])
 * @method \Http\Promise\Promise queryRobotTaskListAsync($arguments = [])
 * @method \Dew\Acs\Result queryCallDetailByTaskId(array $arguments = [])
 * @method \Http\Promise\Promise queryCallDetailByTaskIdAsync($arguments = [])
 * @method \Dew\Acs\Result queryRobotTaskDetail(array $arguments = [])
 * @method \Http\Promise\Promise queryRobotTaskDetailAsync($arguments = [])
 * @method \Dew\Acs\Result queryRobotTaskCallList(array $arguments = [])
 * @method \Http\Promise\Promise queryRobotTaskCallListAsync($arguments = [])
 * @method \Dew\Acs\Result queryRobotInfoList(array $arguments = [])
 * @method \Http\Promise\Promise queryRobotInfoListAsync($arguments = [])
 * @method \Dew\Acs\Result queryRobotTaskCallDetail(array $arguments = [])
 * @method \Http\Promise\Promise queryRobotTaskCallDetailAsync($arguments = [])
 * @method \Dew\Acs\Result uploadRobotTaskCalledFile(array $arguments = [])
 * @method \Http\Promise\Promise uploadRobotTaskCalledFileAsync($arguments = [])
 * @method \Dew\Acs\Result getHotlineQualificationByOrder(array $arguments = [])
 * @method \Http\Promise\Promise getHotlineQualificationByOrderAsync($arguments = [])
 * @method \Dew\Acs\Result listHotlineTransferRegisterFile(array $arguments = [])
 * @method \Http\Promise\Promise listHotlineTransferRegisterFileAsync($arguments = [])
 * @method \Dew\Acs\Result submitHotlineTransferRegister(array $arguments = [])
 * @method \Http\Promise\Promise submitHotlineTransferRegisterAsync($arguments = [])
 * @method \Dew\Acs\Result setTransferCalleePoolConfig(array $arguments = [])
 * @method \Http\Promise\Promise setTransferCalleePoolConfigAsync($arguments = [])
 * @method \Dew\Acs\Result queryCallInPoolTransferConfig(array $arguments = [])
 * @method \Http\Promise\Promise queryCallInPoolTransferConfigAsync($arguments = [])
 * @method \Dew\Acs\Result queryCallInTransferRecord(array $arguments = [])
 * @method \Http\Promise\Promise queryCallInTransferRecordAsync($arguments = [])
 * @method \Dew\Acs\Result sendVerification(array $arguments = [])
 * @method \Http\Promise\Promise sendVerificationAsync($arguments = [])
 * @method \Dew\Acs\Result singleCallByVideo(array $arguments = [])
 * @method \Http\Promise\Promise singleCallByVideoAsync($arguments = [])
 * @method \Dew\Acs\Result playVideoFile(array $arguments = [])
 * @method \Http\Promise\Promise playVideoFileAsync($arguments = [])
 * @method \Dew\Acs\Result pauseVideoFile(array $arguments = [])
 * @method \Http\Promise\Promise pauseVideoFileAsync($arguments = [])
 * @method \Dew\Acs\Result resumeVideoFile(array $arguments = [])
 * @method \Http\Promise\Promise resumeVideoFileAsync($arguments = [])
 * @method \Dew\Acs\Result queryVideoPlayProgress(array $arguments = [])
 * @method \Http\Promise\Promise queryVideoPlayProgressAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeVideoFile(array $arguments = [])
 * @method \Http\Promise\Promise upgradeVideoFileAsync($arguments = [])
 * @method \Dew\Acs\Result degradeVideoFile(array $arguments = [])
 * @method \Http\Promise\Promise degradeVideoFileAsync($arguments = [])
 * @method \Dew\Acs\Result skipVideoFile(array $arguments = [])
 * @method \Http\Promise\Promise skipVideoFileAsync($arguments = [])
 * @method \Dew\Acs\Result getCallMediaType(array $arguments = [])
 * @method \Http\Promise\Promise getCallMediaTypeAsync($arguments = [])
 * @method \Dew\Acs\Result getTemporaryFileUrl(array $arguments = [])
 * @method \Http\Promise\Promise getTemporaryFileUrlAsync($arguments = [])
 * @method \Dew\Acs\Result getToken(array $arguments = [])
 * @method \Http\Promise\Promise getTokenAsync($arguments = [])
 * @method \Dew\Acs\Result recoverCallInConfig(array $arguments = [])
 * @method \Http\Promise\Promise recoverCallInConfigAsync($arguments = [])
 * @method \Dew\Acs\Result stopCallInConfig(array $arguments = [])
 * @method \Http\Promise\Promise stopCallInConfigAsync($arguments = [])
 */
final class DyvmsapiClient extends AcsClient
{
    //
}
