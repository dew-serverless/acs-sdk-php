<?php

declare(strict_types=1);

namespace Dew\Acs\Clickhouse;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result describeRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result createDBInstance(array $arguments = [])
 * @method \Http\Promise\Promise createDBInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDBCluster(array $arguments = [])
 * @method \Http\Promise\Promise deleteDBClusterAsync($arguments = [])
 * @method \Dew\Acs\Result describeDBClusters(array $arguments = [])
 * @method \Http\Promise\Promise describeDBClustersAsync($arguments = [])
 * @method \Dew\Acs\Result describeDBClusterAttribute(array $arguments = [])
 * @method \Http\Promise\Promise describeDBClusterAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result describeDBClusterConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeDBClusterConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDBClusterConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyDBClusterConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeDBConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeDBConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDBCluster(array $arguments = [])
 * @method \Http\Promise\Promise modifyDBClusterAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDBClusterDescription(array $arguments = [])
 * @method \Http\Promise\Promise modifyDBClusterDescriptionAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDBClusterMaintainTime(array $arguments = [])
 * @method \Http\Promise\Promise modifyDBClusterMaintainTimeAsync($arguments = [])
 * @method \Dew\Acs\Result describeAllDataSources(array $arguments = [])
 * @method \Http\Promise\Promise describeAllDataSourcesAsync($arguments = [])
 * @method \Dew\Acs\Result describeAllDataSource(array $arguments = [])
 * @method \Http\Promise\Promise describeAllDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result describeSchemas(array $arguments = [])
 * @method \Http\Promise\Promise describeSchemasAsync($arguments = [])
 * @method \Dew\Acs\Result describeTables(array $arguments = [])
 * @method \Http\Promise\Promise describeTablesAsync($arguments = [])
 * @method \Dew\Acs\Result describeColumns(array $arguments = [])
 * @method \Http\Promise\Promise describeColumnsAsync($arguments = [])
 * @method \Dew\Acs\Result restartInstance(array $arguments = [])
 * @method \Http\Promise\Promise restartInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result checkScaleOutBalanced(array $arguments = [])
 * @method \Http\Promise\Promise checkScaleOutBalancedAsync($arguments = [])
 * @method \Dew\Acs\Result createOSSStorage(array $arguments = [])
 * @method \Http\Promise\Promise createOSSStorageAsync($arguments = [])
 * @method \Dew\Acs\Result describeOSSStorage(array $arguments = [])
 * @method \Http\Promise\Promise describeOSSStorageAsync($arguments = [])
 * @method \Dew\Acs\Result checkClickhouseToRDS(array $arguments = [])
 * @method \Http\Promise\Promise checkClickhouseToRDSAsync($arguments = [])
 * @method \Dew\Acs\Result describeSynDbs(array $arguments = [])
 * @method \Http\Promise\Promise describeSynDbsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSynDbTables(array $arguments = [])
 * @method \Http\Promise\Promise describeSynDbTablesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSyndb(array $arguments = [])
 * @method \Http\Promise\Promise deleteSyndbAsync($arguments = [])
 * @method \Dew\Acs\Result describeTransferHistory(array $arguments = [])
 * @method \Http\Promise\Promise describeTransferHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result transferVersion(array $arguments = [])
 * @method \Http\Promise\Promise transferVersionAsync($arguments = [])
 * @method \Dew\Acs\Result createServiceLinkedRole(array $arguments = [])
 * @method \Http\Promise\Promise createServiceLinkedRoleAsync($arguments = [])
 * @method \Dew\Acs\Result killProcess(array $arguments = [])
 * @method \Http\Promise\Promise killProcessAsync($arguments = [])
 * @method \Dew\Acs\Result describeSlowLogRecords(array $arguments = [])
 * @method \Http\Promise\Promise describeSlowLogRecordsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDBClusterPerformance(array $arguments = [])
 * @method \Http\Promise\Promise describeDBClusterPerformanceAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeMinorVersion(array $arguments = [])
 * @method \Http\Promise\Promise upgradeMinorVersionAsync($arguments = [])
 * @method \Dew\Acs\Result describeDBClusterConfigInXML(array $arguments = [])
 * @method \Http\Promise\Promise describeDBClusterConfigInXMLAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDBClusterConfigInXML(array $arguments = [])
 * @method \Http\Promise\Promise modifyDBClusterConfigInXMLAsync($arguments = [])
 * @method \Dew\Acs\Result checkModifyConfigNeedRestart(array $arguments = [])
 * @method \Http\Promise\Promise checkModifyConfigNeedRestartAsync($arguments = [])
 * @method \Dew\Acs\Result describeConfigHistory(array $arguments = [])
 * @method \Http\Promise\Promise describeConfigHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result describeConfigVersionDifference(array $arguments = [])
 * @method \Http\Promise\Promise describeConfigVersionDifferenceAsync($arguments = [])
 * @method \Dew\Acs\Result createRDSToClickhouseDb(array $arguments = [])
 * @method \Http\Promise\Promise createRDSToClickhouseDbAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDBConfig(array $arguments = [])
 * @method \Http\Promise\Promise modifyDBConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyRDSToClickhouseDb(array $arguments = [])
 * @method \Http\Promise\Promise modifyRDSToClickhouseDbAsync($arguments = [])
 * @method \Dew\Acs\Result describeProcessList(array $arguments = [])
 * @method \Http\Promise\Promise describeProcessListAsync($arguments = [])
 * @method \Dew\Acs\Result createBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise createBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result modifyBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise modifyBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackups(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupsAsync($arguments = [])
 * @method \Dew\Acs\Result createPortsForClickHouse(array $arguments = [])
 * @method \Http\Promise\Promise createPortsForClickHouseAsync($arguments = [])
 * @method \Dew\Acs\Result releaseClusterPublicConnection(array $arguments = [])
 * @method \Http\Promise\Promise releaseClusterPublicConnectionAsync($arguments = [])
 * @method \Dew\Acs\Result allocateClusterPublicConnection(array $arguments = [])
 * @method \Http\Promise\Promise allocateClusterPublicConnectionAsync($arguments = [])
 * @method \Dew\Acs\Result describeDBClusterNetInfoItems(array $arguments = [])
 * @method \Http\Promise\Promise describeDBClusterNetInfoItemsAsync($arguments = [])
 * @method \Dew\Acs\Result describeAccounts(array $arguments = [])
 * @method \Http\Promise\Promise describeAccountsAsync($arguments = [])
 * @method \Dew\Acs\Result createAccount(array $arguments = [])
 * @method \Http\Promise\Promise createAccountAsync($arguments = [])
 * @method \Dew\Acs\Result createSQLAccount(array $arguments = [])
 * @method \Http\Promise\Promise createSQLAccountAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAccount(array $arguments = [])
 * @method \Http\Promise\Promise deleteAccountAsync($arguments = [])
 * @method \Dew\Acs\Result resetAccountPassword(array $arguments = [])
 * @method \Http\Promise\Promise resetAccountPasswordAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAccountDescription(array $arguments = [])
 * @method \Http\Promise\Promise modifyAccountDescriptionAsync($arguments = [])
 * @method \Dew\Acs\Result createAccountAndAuthority(array $arguments = [])
 * @method \Http\Promise\Promise createAccountAndAuthorityAsync($arguments = [])
 * @method \Dew\Acs\Result describeAccountAuthority(array $arguments = [])
 * @method \Http\Promise\Promise describeAccountAuthorityAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAccountAuthority(array $arguments = [])
 * @method \Http\Promise\Promise modifyAccountAuthorityAsync($arguments = [])
 * @method \Dew\Acs\Result describeDBClusterAccessWhiteList(array $arguments = [])
 * @method \Http\Promise\Promise describeDBClusterAccessWhiteListAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDBClusterAccessWhiteList(array $arguments = [])
 * @method \Http\Promise\Promise modifyDBClusterAccessWhiteListAsync($arguments = [])
 * @method \Dew\Acs\Result createMonitorDataReport(array $arguments = [])
 * @method \Http\Promise\Promise createMonitorDataReportAsync($arguments = [])
 * @method \Dew\Acs\Result checkMonitorAlert(array $arguments = [])
 * @method \Http\Promise\Promise checkMonitorAlertAsync($arguments = [])
 * @method \Dew\Acs\Result checkServiceLinkedRole(array $arguments = [])
 * @method \Http\Promise\Promise checkServiceLinkedRoleAsync($arguments = [])
 * @method \Dew\Acs\Result modifyMinorVersionGreadeType(array $arguments = [])
 * @method \Http\Promise\Promise modifyMinorVersionGreadeTypeAsync($arguments = [])
 * @method \Dew\Acs\Result listClusters(array $arguments = []) {@since 2022-01-01}
 * @method \Http\Promise\Promise listClustersAsync($arguments = []) {@since 2022-01-01}
 * @method \Dew\Acs\Result deleteDBInstance(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise deleteDBInstanceAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result startDBInstance(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise startDBInstanceAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result restartDBInstance(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise restartDBInstanceAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result stopDBInstance(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise stopDBInstanceAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result modifyDBInstanceClass(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise modifyDBInstanceClassAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result modifyDBInstanceAttribute(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise modifyDBInstanceAttributeAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result describeDBInstances(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise describeDBInstancesAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result describeDBInstanceAttribute(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise describeDBInstanceAttributeAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result createDB(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise createDBAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result deleteDB(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise deleteDBAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result describeDBInstanceDataSources(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise describeDBInstanceDataSourcesAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result createEndpoint(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise createEndpointAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result deleteEndpoint(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise deleteEndpointAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result modifyDBInstanceConnectionString(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise modifyDBInstanceConnectionStringAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result modifySecurityIPList(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise modifySecurityIPListAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result describeSecurityIPList(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise describeSecurityIPListAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result describeEndpoints(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise describeEndpointsAsync($arguments = []) {@since 2023-05-22}
 * @method \Dew\Acs\Result describeSlowLogTrend(array $arguments = []) {@since 2023-05-22}
 * @method \Http\Promise\Promise describeSlowLogTrendAsync($arguments = []) {@since 2023-05-22}
 */
final class ClickhouseClient extends AcsClient
{
    //
}
