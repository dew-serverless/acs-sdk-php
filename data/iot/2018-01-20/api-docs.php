<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'RPC',
    'product' => 'Iot',
    'version' => '2018-01-20',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 184536,
      'title' => '实例迁移',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'BatchGrayMigrationDevice',
      ),
    ),
    1 => 
    array (
      'id' => 96338,
      'title' => '产品管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateProduct',
        1 => 'QueryProduct',
        2 => 'QueryProductList',
        3 => 'UpdateProduct',
        4 => 'DeleteProduct',
        5 => 'CreateProductTags',
        6 => 'UpdateProductTags',
        7 => 'DeleteProductTags',
        8 => 'ListProductTags',
        9 => 'ListProductByTags',
        10 => 'UpdateProductFilterConfig',
        11 => 'QueryProductCertInfo',
        12 => 'SetProductCertInfo',
        13 => 'ReleaseProduct',
        14 => 'CancelReleaseProduct',
      ),
    ),
    2 => 
    array (
      'id' => 96475,
      'title' => '设备管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'RegisterDevice',
        1 => 'QueryClientIds',
        2 => 'TransformClientId',
        3 => 'DeleteClientIds',
        4 => 'QueryDeviceInfo',
        5 => 'QueryDeviceDetail',
        6 => 'BatchQueryDeviceDetail',
        7 => 'QueryDevice',
        8 => 'DeleteDevice',
        9 => 'GetDeviceStatus',
        10 => 'BatchGetDeviceState',
        11 => 'DisableThing',
        12 => 'EnableThing',
        13 => 'ResetThing',
        14 => 'BatchCheckDeviceNames',
        15 => 'BatchRegisterDeviceWithApplyId',
        16 => 'BatchRegisterDevice',
        17 => 'BatchUpdateDeviceNickname',
        18 => 'QueryBatchRegisterDeviceStatus',
        19 => 'QueryPageByApplyId',
        20 => 'GetGatewayBySubDevice',
        21 => 'QueryDeviceProp',
        22 => 'SaveDeviceProp',
        23 => 'DeleteDeviceProp',
        24 => 'QueryDeviceByTags',
        25 => 'GetThingTopo',
        26 => 'NotifyAddThingTopo',
        27 => 'BatchAddThingTopo',
        28 => 'RemoveThingTopo',
        29 => 'QueryDeviceStatistics',
        30 => 'QueryLoRaJoinPermissions',
        31 => 'CreateLoRaNodesTask',
        32 => 'GetLoraNodesTask',
        33 => 'QueryDeviceFileList',
        34 => 'QueryDeviceFile',
        35 => 'DeleteDeviceFile',
        36 => 'QueryDeviceCert',
        37 => 'QueryCertUrlByApplyId',
        38 => 'QueryDeviceByStatus',
        39 => 'QueryDeviceBySQL',
        40 => 'ImportDevice',
        41 => 'BatchImportDevice',
        42 => 'QueryImportedDeviceByApplyId',
        43 => 'BatchCheckImportDevice',
        44 => 'BatchImportVehicleDevice',
        45 => 'BatchCheckVehicleDevice',
        46 => 'QueryVehicleDevice',
      ),
    ),
    3 => 
    array (
      'id' => 169156,
      'title' => '设备分发',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateDeviceDistributeJob',
        1 => 'CreateProductDistributeJob',
        2 => 'QueryDeviceDistributeDetail',
        3 => 'QueryDeviceDistributeJob',
        4 => 'ListDeviceDistributeJob',
        5 => 'DeleteDeviceDistributeJob',
        6 => 'ListDistributedDevice',
        7 => 'ListDistributedProduct',
        8 => 'QueryDeviceProvisioning',
      ),
    ),
    4 => 
    array (
      'id' => 169267,
      'title' => '安全隧道管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateDeviceTunnel',
        1 => 'CloseDeviceTunnel',
        2 => 'DeleteDeviceTunnel',
        3 => 'QueryDeviceTunnel',
      ),
    ),
    5 => 
    array (
      'id' => 96467,
      'title' => '分组管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateDeviceGroup',
        1 => 'CreateDeviceDynamicGroup',
        2 => 'UpdateDeviceGroup',
        3 => 'DeleteDeviceGroup',
        4 => 'DeleteDeviceDynamicGroup',
        5 => 'BatchAddDeviceGroupRelations',
        6 => 'BatchDeleteDeviceGroupRelations',
        7 => 'QueryDeviceGroupInfo',
        8 => 'QueryDynamicGroupDevices',
        9 => 'QueryDeviceGroupList',
        10 => 'SetDeviceGroupTags',
        11 => 'QueryDeviceGroupTagList',
        12 => 'QueryDeviceGroupByDevice',
        13 => 'QuerySuperDeviceGroup',
        14 => 'QueryDeviceListByDeviceGroup',
        15 => 'QueryDeviceGroupByTags',
      ),
    ),
    6 => 
    array (
      'id' => 96372,
      'title' => '物模型管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateThingModel',
        1 => 'UpdateThingModel',
        2 => 'QueryThingModel',
        3 => 'CopyThingModel',
        4 => 'PublishThingModel',
        5 => 'DeleteThingModel',
        6 => 'ListThingTemplates',
        7 => 'GetThingTemplate',
        8 => 'ListThingModelVersion',
        9 => 'GetThingModelTsl',
        10 => 'ImportThingModelTsl',
        11 => 'QueryThingModelPublished',
        12 => 'GetThingModelTslPublished',
        13 => 'QueryThingModelExtendConfig',
        14 => 'QueryThingModelExtendConfigPublished',
        15 => 'CreateThingScript',
        16 => 'UpdateThingScript',
        17 => 'GetThingScript',
      ),
    ),
    7 => 
    array (
      'id' => 169268,
      'title' => '物模型使用',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'SetDeviceProperty',
        1 => 'SetDevicesProperty',
        2 => 'InvokeThingService',
        3 => 'InvokeThingsService',
        4 => 'QueryDevicePropertyData',
        5 => 'QueryDevicePropertiesData',
        6 => 'QueryDeviceEventData',
        7 => 'QueryDeviceServiceData',
        8 => 'SetDeviceDesiredProperty',
        9 => 'QueryDeviceDesiredProperty',
        10 => 'QueryDevicePropertyStatus',
        11 => 'QueryDeviceOriginalPropertyStatus',
        12 => 'QueryDeviceOriginalPropertyData',
        13 => 'QueryDeviceOriginalEventData',
        14 => 'QueryDeviceOriginalServiceData',
        15 => 'ClearDeviceDesiredProperty',
      ),
    ),
    8 => 
    array (
      'id' => 96358,
      'title' => '任务管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateJob',
        1 => 'GenerateFileUploadURL',
        2 => 'UpdateJob',
        3 => 'QueryJob',
        4 => 'ListJob',
        5 => 'CancelJob',
        6 => 'DeleteJob',
        7 => 'ListTask',
        8 => 'QueryTask',
        9 => 'QueryJobStatistics',
        10 => 'RerunJob',
      ),
    ),
    9 => 
    array (
      'id' => 169157,
      'title' => 'Topic管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateProductTopic',
        1 => 'UpdateProductTopic',
        2 => 'QueryProductTopic',
        3 => 'DeleteProductTopic',
        4 => 'CreateTopicRouteTable',
        5 => 'QueryTopicRouteTable',
        6 => 'QueryTopicReverseRouteTable',
        7 => 'DeleteTopicRouteTable',
      ),
    ),
    10 => 
    array (
      'id' => 96441,
      'title' => '云产品流转（旧版）',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateRule',
        1 => 'CreateRuleAction',
        2 => 'DeleteRule',
        3 => 'DeleteRuleAction',
        4 => 'GetRule',
        5 => 'GetRuleAction',
        6 => 'ListRule',
        7 => 'ListRuleActions',
        8 => 'StartRule',
        9 => 'StopRule',
        10 => 'UpdateRule',
        11 => 'UpdateRuleAction',
      ),
    ),
    11 => 
    array (
      'id' => 169348,
      'title' => '云产品流转（新版）',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateParser',
        1 => 'UpdateParser',
        2 => 'ListParser',
        3 => 'GetParser',
        4 => 'DeleteParser',
        5 => 'CreateParserDataSource',
        6 => 'UpdateParserDataSource',
        7 => 'ListParserDataSource',
        8 => 'GetParserDataSource',
        9 => 'DeleteParserDataSource',
        10 => 'CreateDataSourceItem',
        11 => 'ListDataSourceItem',
        12 => 'DeleteDataSourceItem',
        13 => 'CreateDestination',
        14 => 'UpdateDestination',
        15 => 'ListDestination',
        16 => 'DeleteDestination',
        17 => 'GetDestination',
        18 => 'AttachParserDataSource',
        19 => 'AttachDestination',
        20 => 'DetachParserDataSource',
        21 => 'DetachDestination',
        22 => 'ListParserDestination',
        23 => 'PublishScript',
        24 => 'SaveScript',
        25 => 'StartParser',
        26 => 'StopParser',
      ),
    ),
    12 => 
    array (
      'id' => 96431,
      'title' => '数据服务',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListAnalyticsData',
        1 => 'WriteDevicesHotStorageData',
        2 => 'QueryDevicesHotStorageDataStatus',
        3 => 'QueryDevicesHotStorageData',
        4 => 'ResetDeviceTimeline',
        5 => 'CreateDataAPIService',
        6 => 'GetDataAPIServiceDetail',
        7 => 'InvokeDataAPIService',
        8 => 'AddDataForApiSource',
        9 => 'BatchAddDataForApiSource',
        10 => 'CreateDownloadDataJob',
        11 => 'GetDownloadFile',
      ),
    ),
    13 => 
    array (
      'id' => 169269,
      'title' => '消息通信',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'BatchPub',
        1 => 'Pub',
        2 => 'PubBroadcast',
        3 => 'RRpc',
        4 => 'AsyncRRpc',
        5 => 'QueryMessageInfo',
        6 => 'SubscribeTopic',
        7 => 'QueryDeviceSubTopic',
        8 => 'UpdateTopicConfig',
      ),
    ),
    14 => 
    array (
      'id' => 96326,
      'title' => '服务端订阅',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateSubscribeRelation',
        1 => 'UpdateSubscribeRelation',
        2 => 'QuerySubscribeRelation',
        3 => 'DeleteSubscribeRelation',
        4 => 'CreateConsumerGroup',
        5 => 'UpdateConsumerGroup',
        6 => 'QueryConsumerGroupByGroupId',
        7 => 'QueryConsumerGroupList',
        8 => 'QueryConsumerGroupStatus',
        9 => 'ResetConsumerGroupPosition',
        10 => 'DeleteConsumerGroup',
        11 => 'CreateConsumerGroupSubscribeRelation',
        12 => 'DeleteConsumerGroupSubscribeRelation',
      ),
    ),
    15 => 
    array (
      'id' => 169270,
      'title' => '设备影子',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'GetDeviceShadow',
        1 => 'UpdateDeviceShadow',
      ),
    ),
    16 => 
    array (
      'id' => 96400,
      'title' => 'OTA升级',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'GenerateOTAUploadURL',
        1 => 'GenerateDeviceNameListURL',
        2 => 'CreateOTAFirmware',
        3 => 'ModifyOTAFirmware',
        4 => 'DeleteOTAFirmware',
        5 => 'ListOTAFirmware',
        6 => 'QueryOTAFirmware',
        7 => 'CreateOTAVerifyJob',
        8 => 'CreateOTAStaticUpgradeJob',
        9 => 'CreateOTADynamicUpgradeJob',
        10 => 'ListOTAJobByFirmware',
        11 => 'ListOTAJobByDevice',
        12 => 'ListOTATaskByJob',
        13 => 'QueryOTAJob',
        14 => 'CancelOTAStrategyByJob',
        15 => 'CancelOTATaskByJob',
        16 => 'CancelOTATaskByDevice',
        17 => 'CreateOTAModule',
        18 => 'UpdateOTAModule',
        19 => 'DeleteOTAModule',
        20 => 'ListOTAModuleByProduct',
        21 => 'ConfirmOTATask',
        22 => 'ListOTAUnfinishedTaskByDevice',
        23 => 'ReupgradeOTATask',
        24 => 'ListOTAModuleVersionsByDevice',
      ),
    ),
    17 => 
    array (
      'id' => 96313,
      'title' => '开通服务',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'OpenIotService',
      ),
    ),
    18 => 
    array (
      'id' => 169425,
      'title' => '增值服务',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 169428,
          'title' => '音视频通信服务',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'BindLicenseProduct',
            1 => 'UnbindLicenseProduct',
            2 => 'BindLicenseDevice',
            3 => 'CheckBindLicenseDeviceProgress',
            4 => 'QueryLicenseDeviceList',
            5 => 'ReBindLicenseDevice',
          ),
        ),
        1 => 
        array (
          'id' => 184548,
          'title' => 'IoT孪生引擎',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ImportDTData',
          ),
        ),
        2 => 
        array (
          'id' => 169427,
          'title' => '寄雁传书服务',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'PrintByTemplate',
          ),
        ),
        3 => 
        array (
          'id' => 169430,
          'title' => '位置服务',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'GisQueryDeviceLocation',
            1 => 'GisSearchDeviceTrace',
          ),
        ),
        4 => 
        array (
          'id' => 169426,
          'title' => '千里传音',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateSpeech',
            1 => 'UpdateSpeech',
            2 => 'QuerySpeechLicenseAvailableQuota',
            3 => 'GetSpeechVoice',
            4 => 'TestSpeech',
            5 => 'QuerySpeech',
            6 => 'QuerySpeechList',
            7 => 'PushSpeech',
            8 => 'DeleteSpeech',
            9 => 'QuerySolutionDeviceGroupPage',
            10 => 'QuerySpeechPushJob',
            11 => 'QuerySpeechPushJobDevice',
            12 => 'QuerySpeechPushJobSpeech',
            13 => 'SpeechByCombination',
            14 => 'SyncSpeechByCombination',
            15 => 'SpeechBySynthesis',
            16 => 'QuerySpeechDevice',
            17 => 'QueryDeviceSpeech',
            18 => 'GetSpeechDeviceDetail',
            19 => 'DeleteDeviceSpeech',
            20 => 'GetShareTaskByDeviceOpen',
            21 => 'GetShareSpeechModelAudio',
            22 => 'GetSpeechLicenseDeviceStatistics',
            23 => 'QuerySpeechLicenseDeviceList',
            24 => 'AddShareTaskDevice',
            25 => 'DeleteShareTaskDevice',
            26 => 'QueryProjectShareDeviceList',
            27 => 'QueryShareTaskDeviceList',
            28 => 'ShareSpeechByCombination',
            29 => 'PageQuerySharedSpeechOpen',
            30 => 'CountSpeechBroadcastHour',
            31 => 'PageQuerySpeechBroadcastHour',
            32 => 'CreateSharePromotionActivity',
            33 => 'QuerySharePromotionActivityAuditResult',
            34 => 'AddDeviceToSharePromotion',
            35 => 'CreateSharePromotionSpeechModel',
            36 => 'QueryShareProductNameByProductKey',
          ),
        ),
        5 => 
        array (
          'id' => 169429,
          'title' => '声码服务',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateSoundCode',
            1 => 'DeleteSoundCode',
            2 => 'QuerySoundCodeList',
            3 => 'GetSoundCodeAudio',
            4 => 'CreateSoundCodeSchedule',
            5 => 'UpdateSoundCodeSchedule',
            6 => 'DeleteSoundCodeSchedule',
            7 => 'QuerySoundCodeScheduleList',
            8 => 'GetSoundCodeSchedule',
            9 => 'UpdateSchedulePeriod',
            10 => 'CreateSchedulePeriod',
            11 => 'DeleteSchedulePeriod',
            12 => 'QuerySchedulePeriodList',
            13 => 'CreateSoundCodeLabel',
            14 => 'UpdateSoundCodeLabel',
            15 => 'DeleteSoundCodeLabel',
            16 => 'QuerySoundCodeLabelList',
            17 => 'BatchCreateSoundCodeLabel',
            18 => 'BatchCreateSoundCodeLabelWithLabels',
            19 => 'QuerySoundCodeLabelBatchList',
            20 => 'QuerySoundCodeLabelBatchFailedResult',
            21 => 'PackageSoundCodeLabelBatchAudio',
            22 => 'RetrySoundCodeLabelBatch',
            23 => 'UpdateSoundCode',
          ),
        ),
        6 => 
        array (
          'id' => 169431,
          'title' => '图文识别服务',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'RecognizeCarNum',
            1 => 'RecognizePictureGeneral',
          ),
        ),
      ),
    ),
    19 => 
    array (
      'id' => 96332,
      'title' => '场景联动',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateSceneRule',
        1 => 'DeleteSceneRule',
        2 => 'UpdateSceneRule',
        3 => 'GetSceneRule',
        4 => 'QuerySceneRule',
        5 => 'EnableSceneRule',
        6 => 'DisableSceneRule',
        7 => 'TriggerSceneRule',
        8 => 'QuerySummarySceneRuleLog',
        9 => 'QueryDetailSceneRuleLog',
      ),
    ),
    20 => 
    array (
      'id' => 96543,
      'title' => '边缘实例管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateEdgeInstance',
        1 => 'DeleteEdgeInstance',
        2 => 'UpdateEdgeInstance',
        3 => 'GetEdgeInstance',
        4 => 'QueryEdgeInstance',
        5 => 'BindGatewayToEdgeInstance',
        6 => 'QueryEdgeInstanceGateway',
        7 => 'BindDriverToEdgeInstance',
        8 => 'UnbindDriverFromEdgeInstance',
        9 => 'QueryEdgeInstanceDriver',
        10 => 'SetEdgeInstanceDriverConfigs',
        11 => 'ClearEdgeInstanceDriverConfigs',
        12 => 'BatchGetEdgeInstanceDriverConfigs',
        13 => 'BatchBindDeviceToEdgeInstanceWithDriver',
        14 => 'BatchUnbindDeviceFromEdgeInstance',
        15 => 'QueryEdgeInstanceDevice',
        16 => 'BatchSetEdgeInstanceDeviceConfig',
        17 => 'BatchClearEdgeInstanceDeviceConfig',
        18 => 'BatchGetEdgeInstanceDeviceConfig',
        19 => 'CreateEdgeInstanceDeployment',
        20 => 'CloseEdgeInstanceDeployment',
        21 => 'GetEdgeInstanceDeployment',
        22 => 'QueryEdgeInstanceHistoricDeployment',
      ),
    ),
    21 => 
    array (
      'id' => 96388,
      'title' => '边缘计算新增API',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateEdgeDriver',
        1 => 'DeleteEdgeDriver',
        2 => 'BatchGetEdgeDriver',
        3 => 'QueryEdgeDriver',
        4 => 'CreateEdgeDriverVersion',
        5 => 'DeleteEdgeDriverVersion',
        6 => 'UpdateEdgeDriverVersion',
        7 => 'GetEdgeDriverVersion',
        8 => 'QueryEdgeDriverVersion',
        9 => 'CreateEdgeOssPreSignedAddress',
        10 => 'BindApplicationToEdgeInstance',
        11 => 'UnbindApplicationFromEdgeInstance',
        12 => 'CreateEdgeInstanceChannel',
        13 => 'BatchDeleteEdgeInstanceChannel',
        14 => 'UpdateEdgeInstanceChannel',
        15 => 'BatchGetEdgeInstanceChannel',
        16 => 'QueryEdgeInstanceChannel',
        17 => 'BatchSetEdgeInstanceDeviceChannel',
        18 => 'BatchGetEdgeInstanceDeviceChannel',
        19 => 'QueryEdgeInstanceDeviceByDriver',
        20 => 'BatchGetEdgeInstanceDeviceDriver',
        21 => 'BatchGetDeviceBindStatus',
        22 => 'ReplaceEdgeInstanceGateway',
        23 => 'ReleaseEdgeDriverVersion',
        24 => 'BindRoleToEdgeInstance',
        25 => 'UnbindRoleFromEdgeInstance',
      ),
    ),
    22 => 
    array (
      'id' => 169271,
      'title' => '边缘计算-场景联动',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'BindSceneRuleToEdgeInstance',
        1 => 'UnbindSceneRuleFromEdgeInstance',
        2 => 'QueryEdgeInstanceSceneRule',
      ),
    ),
    23 => 
    array (
      'id' => 169434,
      'title' => '边缘计算-远程运维',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'EnableDeviceTunnel',
        1 => 'GetDeviceTunnelStatus',
        2 => 'DisableDeviceTunnel',
        3 => 'GetDeviceTunnelShareStatus',
        4 => 'EnableDeviceTunnelShare',
        5 => 'DisableDeviceTunnelShare',
        6 => 'RefreshDeviceTunnelSharePassword',
      ),
    ),
    24 => 
    array (
      'id' => 169435,
      'title' => '边缘计算-消息路由',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateEdgeInstanceMessageRouting',
        1 => 'DeleteEdgeInstanceMessageRouting',
        2 => 'UpdateEdgeInstanceMessageRouting',
        3 => 'GetEdgeInstanceMessageRouting',
        4 => 'QueryEdgeInstanceMessageRouting',
        5 => 'QueryEdgeInstanceMessageRouting',
      ),
    ),
    25 => 
    array (
      'id' => 169158,
      'title' => '物联网应用开发API管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'BatchBindProductsIntoProject',
        1 => 'BatchUnbindProjectProducts',
        2 => 'BatchBindDevicesIntoProject',
        3 => 'BatchUnbindProjectDevices',
        4 => 'QueryStudioProjectList',
        5 => 'SetStudioProjectCooperation',
        6 => 'QueryStudioAppList',
        7 => 'QueryStudioAppPageListOpen',
        8 => 'QueryStudioAppDomainListOpen',
        9 => 'DeleteStudioAppDomainOpen',
        10 => 'CreateStudioAppDomainOpen',
        11 => 'SetupStudioAppAuthModeOpen',
        12 => 'GetStudioAppTokenOpen',
        13 => 'RefreshStudioAppTokenOpen',
        14 => 'PublishStudioApp',
      ),
    ),
    26 => 
    array (
      'id' => 186351,
      'title' => '其他',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'TestSwitch',
        1 => 'CreateTopicConfig',
        2 => 'DeleteTopicConfig',
        3 => 'QueryTopicConfig',
      ),
    ),
    27 => 
    array (
      'id' => 0,
      'title' => '其它',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DeleteUserDefineTableDataByPrimaryKey',
        1 => 'AddPowerStation',
        2 => 'DeletePowerStation',
        3 => 'ListPowerStation',
        4 => 'ModifyPowerStation',
        5 => 'StartPTDetection',
        6 => 'UpdateOTAJob',
        7 => 'QueryCustomTimelineTableStatus',
        8 => 'CopyThingModelAsync',
        9 => 'GetThingModelStatusInner',
        10 => 'PublishThingModelAsync',
        11 => 'PublishThingModelAsyncInner',
        12 => 'UnsubscribeTopic',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
    ),
  ),
  'apis' => 
  array (
    'BatchGrayMigrationDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        1 => 
        array (
          'name' => 'DeviceNames',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待灰度迁移的设备名称列表。

单次调用本接口，最多传入10个设备名称。超出10个的设备名称会被直接丢弃。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'light',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的迁移结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'Details' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'item' => 
                      array (
                        'description' => '返回的设备迁移状态信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '设备迁移状态。

- **DEVICE_SUCCEEDED**：成功。
- **DEVICE_FAILED**：失败。',
                              'type' => 'string',
                              'example' => 'SUCCEEDED',
                            ),
                            'Code' => 
                            array (
                              'description' => '迁移失败返回的错误码。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '500',
                            ),
                            'Message' => 
                            array (
                              'description' => '迁移失败，返回的出错信息。',
                              'type' => 'string',
                              'example' => '系统错误',
                            ),
                            'DeviceName' => 
                            array (
                              'description' => '设备名称。',
                              'type' => 'string',
                              'example' => 'light',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.device.InvalidParams',
            'errorMessage' => 'The parameter is invalid。',
          ),
          1 => 
          array (
            'errorCode' => 'iot.provisioning.TaskNotExist',
            'errorMessage' => 'Task not exists.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.provisioning.InvalidDistributionStatus',
            'errorMessage' => 'The  distribution status is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Details\\": {\\n      \\"item\\": [\\n        {\\n          \\"Status\\": \\"SUCCEEDED\\",\\n          \\"Code\\": 500,\\n          \\"Message\\": \\"系统错误\\",\\n          \\"DeviceName\\": \\"light\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<BatchGrayMigrationDeviceResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <Details>\\n        <item>\\n            <Status>DEVICE_SUCCEEDED</Status>\\n            <DeviceName>light</DeviceName>\\n        </item>\\n    </Details>\\n</Data>\\n<Success>true</Success>\\n</BatchGrayMigrationDeviceResponse>","errorExample":""}]',
      'title' => 'BatchGrayMigrationDevice',
      'summary' => '调用该接口持续灰度迁移新增设备。',
      'description' => '## 使用说明
实例迁移时，如果有新增设备未灰度迁移，可以调用本接口持续灰度迁移增量设备。

调用本接口前，已在[物联网平台控制台](https://iot.console.aliyun.com/)创建灰度迁移任务，并灰度验证完成，任务已处于灰度完成状态。具体操作，请参见[实例迁移](~~353160~~)。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateProduct' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。
',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-***-v64***',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '为新建产品命名。
产品名称长度为4~30个字符，可以包含中文、英文字母、数字和下划线（_）。一个中文算2个字符。

><notice> 产品名称在当前实例下需保持唯一。
></notice>',
            'type' => 'string',
            'required' => true,
            'example' => 'Light',
          ),
        ),
        2 => 
        array (
          'name' => 'NodeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的节点类型，取值：

- **0**：设备。设备不能挂载子设备。可以直连物联网平台，也可以作为网关的子设备连接物联网平台。作为网关子设备时，必须同时传入**ProtocolType**。
- **1**：网关。网关可以挂载子设备，具有子设备管理模块，维持子设备的拓扑关系，和将拓扑关系同步到物联网平台。

<props="china">
><notice>MQTT型实例下，设备需作为直连设备接入物联网平台，**NodeType**必须传入**0.**。
></notice></props>',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        3 => 
        array (
          'name' => 'DataFormat',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据格式。可选值：

- **0**：透传/自定义格式（CUSTOM_FORMAT）。
- **1**：Alink协议（ALINK_FORMAT）。

<props="china">
><notice>MQTT型实例下，设备通信的数据格式为原始自定义格式，**DataFormat**必须传入**0**。
></notice></props>',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '为新建产品添加描述信息。长度不超过100个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'Product test',
          ),
        ),
        5 => 
        array (
          'name' => 'AliyunCommodityCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品版本类型。 

- 不传入此参数：表示默认创建基础版产品，不支持使用物模型。
- 传入此参数：仅支持输入**iothub_senior**，表示创建使用物模型的产品。此时需要同时传入参数**DataFormat**。

<props="china">
><notice>
- MQTT型实例下，不支持使用物模型，无需传入此参数。
- 对于基础版产品，不支持在物联网平台控制台使用**在线调试**和**事件响应**功能。

></notice></props>

<props="intl">
><notice>对于基础版产品，不支持在物联网平台控制台使用**在线调试**功能。
></notice></props>
',
            'type' => 'string',
            'required' => false,
            'example' => 'iothub_senior',
          ),
        ),
        6 => 
        array (
          'name' => 'Id2',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '<props="china">是否使用ID²认证。可选值：</props>

<props="china">
- **true**：开通ID²认证。
- **false**：不开通ID²认证。

</props>

<props="china">不传入此参数，则默认为**false**，不开通ID²认证。</props>

<props="china">
> 仅华东2（上海）地域支持ID²认证方式。如果此参数值设置为**true**，但传入的**AuthType**参数值不是**id2**，系统将以**AuthType**参数值为准。</props>

<props="intl">无需传入。</props>
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'ProtocolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备接入网关的协议类型。
使用物模型的产品（**AliyunCommodityCode**=**iothub_senior**），且产品下的设备需通过网关接入物联网平台，需传入此参数。

可选值：

- **modbus**：Modbus协议。
- **opc-ua**：OPC UA协议。
- **customize**：自定义协议。
- **ble**：BLE协议。
- **zigbee**：ZigBee协议。',
            'type' => 'string',
            'required' => false,
            'example' => 'modbus',
          ),
        ),
        8 => 
        array (
          'name' => 'NetType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连网方式。
产品下的设备为网关设备或直连设备时，需传入此参数。

可选值：

<props="china">- **LORA**：LoRaWAN。</props>
- **WIFI**： Wi-Fi。
- **CELLULAR**：蜂窝网。
- **ETHERNET**：以太网。
- **OTHER**：其他。

若不传入此参数，则默认为Wi-Fi。

<props="china">
><notice>MQTT型实例下，**NetType**不支持传入**LORA**。
></notice></props>
',
            'type' => 'string',
            'required' => false,
            'example' => 'WIFI',
          ),
        ),
        9 => 
        array (
          'name' => 'JoinPermissionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '<props="china">LoRaWAN入网凭证ID。连网方式**NetType**选择为**LORA**时，该参数必需。</props>

<props="china">请调用[QueryLoRaJoinPermissions](~~109293~~)查询您账号下的LoRaWAN入网凭证的**JoinPermissionId**。</props>

<props="china">如果您还没有LoRaWAN入网凭证，请访问[物联网络管理平台](https://linkwan.console.aliyun.com/join-permission-authorization)创建。</props>

<props="intl">无需传入。</props>
',
            'type' => 'string',
            'required' => false,
            'example' => '8***',
          ),
        ),
        10 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

><notice>
- 目前，物联网平台仅支持实例维度的资源组管理。请求参数**ResourceGroupId**配置已无效，无需再传入。
- 历史调用本API设置的资源组仍有效。

></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph***',
          ),
        ),
        11 => 
        array (
          'name' => 'AuthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品下的设备接入物联网平台的认证方式。

<props="china">
- **secret**：使用设备密钥进行设备身份认证。更多信息，请参见[MQTT-TCP连接通信](~~73742~~)。

- **id2**：使用物联网设备身份认证ID²。

    > 仅华东2（上海）地域支持ID²认证方式。连网方式**NetType**为**LORA**的产品不支持ID²认证方式。 选择使用ID²认证，需购买ID²服务。

   更多信息，请参见[使用ID²认证](~~141661~~)。

- **one-party**：需要将设备认证信息（UserName、Password、SN）导入物联网平台，物联网平台基于设备认证信息对设备进行身份认证。

    > 仅MQTT型实例下，**AuthType**可以且必须传入**one-party**。


</props>


<props="china">若不传入此参数，默认值为**secret**。</props>

<props="intl">无需传入此参数。默认值为**secret**，表示使用设备密钥进行设备身份认证。更多信息，请参见[MQTT-TCP连接通信](~~73742~~)。</props>
',
            'type' => 'string',
            'required' => false,
            'example' => 'secret',
          ),
        ),
        12 => 
        array (
          'name' => 'CategoryKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品品类的标识符。如果传入此参数，创建的产品将使用指定品类的物模型；不传入，则不使用任何品类的标准物模型。
调用[ListThingTemplates](~~150316~~)，从返回结果中查看物联网平台预定义的品类信息，获取CategoryKey的取值。',
            'type' => 'string',
            'required' => false,
            'example' => 'Lighting',
          ),
        ),
        13 => 
        array (
          'name' => 'PublishAuto',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否在产品创建后自动发布物模型。

- **true**：发布。
- **false**：不发布。

不传入此参数，取默认值为**true**。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        14 => 
        array (
          'name' => 'ValidateType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据校验级别。不传入此参数时，默认为弱校验。可取值：

- **1**：弱校验。只校验设备数据的idetifier和dataType字段，不校验其他字段，可流转全量数据。

 校验通过的数据展示在物联网平台控制台对应设备的**设备详情**页**物模型数据**页签。校验不通过的数据则不展示。

 通过流转数据中的参数**checkFailedData**，可查看校验不通过的数据。更多信息，请参见[数据格式](~~73736~~)。

- **2**：免校验。对上报的数据不进行校验，流转全量数据。

 数据不展示在物联网平台控制台对应设备的**设备详情**页**物模型数据**页签。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => '200',
              ),
              'ProductKey' => 
              array (
                'description' => '产品的**ProductKey**，物联网平台为产品颁发的唯一标识符。',
                'type' => 'string',
                'example' => 'a1FlqIQ****',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的新建产品信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'AuthType' => 
                  array (
                    'description' => '产品下的设备接入物联网平台的认证方式。

<props="china">
- **secret**：使用设备密钥进行设备身份认证。
- **id2**：使用物联网设备身份认证ID²。
- **one-party**：使用自定义认证信息（Username、Password、SN）认证。

</props>',
                    'type' => 'string',
                    'example' => 'secret',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => '物联网平台为新建产品颁发的全局唯一标识。

> 请妥善保管新建产品的**ProductKey**。在其他操作中会用到该信息。',
                    'type' => 'string',
                    'example' => 'a1FlqIQ****',
                  ),
                  'ProductName' => 
                  array (
                    'description' => '产品的名称。',
                    'type' => 'string',
                    'example' => 'Test',
                  ),
                  'NodeType' => 
                  array (
                    'description' => '产品的节点类型，取值：

- **0**：设备。设备不能挂载子设备。可以直连物联网平台，也可以作为网关的子设备连接物联网平台。
- **1**：网关。网关可以挂载子设备，具有子设备管理模块，维持子设备的拓扑关系，和将拓扑关系同步到物联网平台。

> 此参数为使用物模型的产品（AliyunCommodityCode=iothub_senior）特有参数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Description' => 
                  array (
                    'description' => '产品描述信息。',
                    'type' => 'string',
                    'example' => 'Product test',
                  ),
                  'Id2' => 
                  array (
                    'description' => '是否使用ID²认证。

- **true**：开通ID²认证。
- **false**：不开通ID²认证。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'ProductSecret' => 
                  array (
                    'description' => '产品密钥。',
                    'type' => 'string',
                    'example' => 'U5tW7i44uilc****',
                  ),
                  'ProtocolType' => 
                  array (
                    'description' => '设备接入网关协议类型。

> 此参数为使用物模型的产品（AliyunCommodityCode=iothub_senior）特有参数。',
                    'type' => 'string',
                    'example' => 'modbus',
                  ),
                  'DataFormat' => 
                  array (
                    'description' => '产品类型数据格式。

- **0**：透传/自定义格式（CUSTOM_FORMAT）。
- **1**：Alink协议（ALINK_FORMAT）。

> 此参数为使用物模型的产品（AliyunCommodityCode=iothub_senior）特有参数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'AliyunCommodityCode' => 
                  array (
                    'description' => '产品类型。

- **iothub_senior**：使用物模型。
- **iothub**：不使用物模型。',
                    'type' => 'string',
                    'example' => 'iothub_senior',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"ProductKey\\": \\"a1FlqIQ****\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"AuthType\\": \\"secret\\",\\n    \\"ProductKey\\": \\"a1FlqIQ****\\",\\n    \\"ProductName\\": \\"Test\\",\\n    \\"NodeType\\": 0,\\n    \\"Description\\": \\"Product test\\",\\n    \\"Id2\\": false,\\n    \\"ProductSecret\\": \\"U5tW7i44uilc****\\",\\n    \\"ProtocolType\\": \\"modbus\\",\\n    \\"DataFormat\\": 1,\\n    \\"AliyunCommodityCode\\": \\"iothub_senior\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<CreateProductResponse>\\n    <Data>\\n        <Description>Product test</Description>\\n        <DataFormat>1</DataFormat>\\n        <ProtocolType>modbus</ProtocolType>\\n        <ProductKey>a1FlqIQ****</ProductKey>\\n        <ProductSecret>U5tW7i44uilc****</ProductSecret>\\n        <NodeType>0</NodeType>\\n        <ProductName>Test</ProductName>\\n        <AliyunCommodityCode>iothub_senior</AliyunCommodityCode>\\n        <AuthType>secret</AuthType>\\n        <ResourceGroupId>rg-acfmxazb4ph****</ResourceGroupId>\\n    </Data>\\n    <ProductKey>a1FlqIQ****</ProductKey>\\n    <RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n    <Success>true</Success>\\n</CreateProductResponse>","errorExample":""}]',
      'title' => '新建产品',
      'summary' => '调用该接口创建产品。',
      'description' => '## 使用说明
<props="china">
- 若产品需要使用物模型功能，必选传入请求参数**AliyunCommodityCode**和**DataFormat**，且**AliyunCommodityCode**值为**iothub_senior**。详细说明，请参见下文**请求参数**表。
- 在MQTT型实例下仅支持创建一个产品。

</props>

<props="intl">若产品需要使用物模型功能，必选传入请求参数**AliyunCommodityCode**和**DataFormat**，且**AliyunCommodityCode**值为**iothub_senior**。详细说明，请参见下文**请求参数**表。</props>

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

 > 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。

',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryProduct' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的产品的ProductKey。ProductKey是物联网平台为新建产品颁发的全局唯一标识符。您可以在物联网平台控制台或调用[QueryProductList](~~69271~~)，查看当前账号下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4F94B97-1D64-4080-BFD2-67461667AA43',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：表示调用成功。

- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的产品信息详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'Owner' => 
                  array (
                    'description' => '调用者是否是产品的拥有者。

- **true**：是。

- **false**：不是。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'ProductName' => 
                  array (
                    'description' => '产品名称。',
                    'type' => 'string',
                    'example' => '路灯',
                  ),
                  'ProductSecret' => 
                  array (
                    'description' => '产品密钥。',
                    'type' => 'string',
                    'example' => 'U5tW7i44uilc****',
                  ),
                  'DataFormat' => 
                  array (
                    'description' => '设备与云端之间的数据通信协议类型。该参数为使用物模型的产品（AliyunCommodityCode=iothub_senior）的特有参数。
取值：

- **0**：透传模式。使用自定义的串口数据格式。该模式下，设备可以上报原始数据（如二进制数据流）。阿里云物联网平台会运行您配置在云端的数据解析脚本，将原始数据转换成Alink JSON标准数据格式。

- **1**：Alink JSON。阿里云物联网平台定义的设备与云端的数据交换协议，采用 JSON 格式。

',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'CategoryName' => 
                  array (
                    'description' => '产品所属品类的名称。
产品使用了物联网平台预定义的标准品类物模型会返回此参数。
该参数为使用物模型的产品（AliyunCommodityCode=iothub_senior）的特有参数。',
                    'type' => 'string',
                    'example' => '路灯照明',
                  ),
                  'ProductStatus' => 
                  array (
                    'description' => '产品的状态。

- **DEVELOPMENT_STATUS**：开发中。

- **RELEASE_STATUS**：产品已发布。',
                    'type' => 'string',
                    'example' => 'DEVELOPMENT_STATUS',
                  ),
                  'AliyunCommodityCode' => 
                  array (
                    'description' => '产品类型，决定是否使用物模型功能。
取值：

- **iothub_senior**：使用物模型。
- **iothub**：不使用物模型。

',
                    'type' => 'string',
                    'example' => 'iothub_senior',
                  ),
                  'DeviceCount' => 
                  array (
                    'description' => '该产品下的设备数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'AuthType' => 
                  array (
                    'description' => '产品下的设备接入物联网平台的认证方式。

- **secret**：使用设备密钥进行设备身份认证。

- **id2**：使用物联网设备身份认证ID²。

- **x509**：使用设备X.509证书进行设备身份认证。',
                    'type' => 'string',
                    'example' => 'secret',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => '产品的ProductKey。创建产品时，物联网平台为该产品颁发的全局唯一标识。',
                    'type' => 'string',
                    'example' => 'a1T27vz****',
                  ),
                  'NodeType' => 
                  array (
                    'description' => '产品的节点类型。该参数为使用物模型的产品（AliyunCommodityCode=iothub_senior）的特有参数。取值：

- **0**：设备。设备不能挂载子设备，可以直连IoT Hub，也可以作为网关的子设备连接IoT Hub。

- **1**：网关。网关可以挂载子设备，具有子设备管理模块，维持子设备的拓扑关系，并且可以将拓扑关系同步到云端。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Description' => 
                  array (
                    'description' => '产品描述。',
                    'type' => 'string',
                    'example' => '智能路灯',
                  ),
                  'ValidateType' => 
                  array (
                    'description' => '数据校验级别。可取值：

- **2**：免校验。对上报的数据不进行校验，流转全量数据。

    数据不展示在物联网平台控制台对应设备的设备详情页物模型数据页签。

- **1**：弱校验。只校验设备数据的idetifier和dataType字段，不校验其他字段，流转全量数据。


- **0**：强校验。校验所有字段，仅流转校验通过的数据。
    
对于2020年10月14日之前（不含当日）创建的产品，仅支持强校验。

对于2020年10月14日（含当日）之后创建的产品，支持弱校验和免校验。

强校验和弱校验后：

- 校验通过的数据展示在物联网平台控制台对应设备的**设备详情**页**物模型数据**页签。校验不通过的数据则不展示。

- 通过流转数据中的参数**checkFailedData**，可查看校验不通过的数据，请参见[数据格式](~~73736~~)。

',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Id2' => 
                  array (
                    'description' => '该产品是否使用ID²认证。取值：

- **true**：使用ID²认证。

- **false**：不使用ID²认证。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'NetType' => 
                  array (
                    'description' => '产品下设备的联网方式。取值：

- **3**：Wi-Fi。

- **6**：Cellular（2G/3G/4G/5G）蜂窝网。

- **7**：Ethernet以太网。

- **8**：其他。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '该产品的创建时间。毫秒级时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1581595942000',
                  ),
                  'ProtocolType' => 
                  array (
                    'description' => '子设备接入网关的协议类型。
此参数为使用物模型的产品（AliyunCommodityCode=iothub_senior），且产品节点类型为要接入网关的设备的特有参数。取值：

- **modbus**：Modbus协议。

- **opc-ua**：OPC UA协议。

- **customize**：自定义协议。

- **ble**：BLE协议。

- **zigbee**：ZigBee协议。',
                    'type' => 'string',
                    'example' => 'modbus',
                  ),
                  'CategoryKey' => 
                  array (
                    'description' => '产品所属品类的标识符。
产品使用了物联网平台预定义的标准品类物模型会返回此参数。
该参数为使用物模型的产品（AliyunCommodityCode=iothub_senior）的特有参数。
',
                    'type' => 'string',
                    'example' => 'Lighting',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4F94B97-1D64-4080-BFD2-67461667AA43\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Owner\\": true,\\n    \\"ProductName\\": \\"路灯\\",\\n    \\"ProductSecret\\": \\"U5tW7i44uilc****\\",\\n    \\"DataFormat\\": 1,\\n    \\"CategoryName\\": \\"路灯照明\\",\\n    \\"ProductStatus\\": \\"DEVELOPMENT_STATUS\\",\\n    \\"AliyunCommodityCode\\": \\"iothub_senior\\",\\n    \\"DeviceCount\\": 0,\\n    \\"AuthType\\": \\"secret\\",\\n    \\"ProductKey\\": \\"a1T27vz****\\",\\n    \\"NodeType\\": 0,\\n    \\"Description\\": \\"智能路灯\\",\\n    \\"ValidateType\\": 1,\\n    \\"Id2\\": false,\\n    \\"NetType\\": 3,\\n    \\"GmtCreate\\": 1581595942000,\\n    \\"ProtocolType\\": \\"modbus\\",\\n    \\"CategoryKey\\": \\"Lighting\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryProductResponse>\\n<Data>\\n    <Owner>true</Owner>\\n    <CategoryName>路灯照明</CategoryName>\\n    <DataFormat>1</DataFormat>\\n    <ProductKey>a1BwAGV****</ProductKey>\\n    <ProductStatus>DEVELOPMENT_STATUS</ProductStatus>\\n    <GmtCreate>1581595942000</GmtCreate>\\n    <ProductSecret>U5tW7i44uilc****</ProductSecret>\\n    <NodeType>0</NodeType>\\n    <ProductName>路灯</ProductName>\\n    <ValidateType>1</ValidateType>\\n    <DeviceCount>0</DeviceCount>\\n    <NetType>3</NetType>\\n    <AuthType>secret</AuthType>\\n    <CategoryKey>Lighting</CategoryKey>\\n    <Id2>false</Id2>\\n    <AliyunCommodityCode>iothub_senior</AliyunCommodityCode>\\n</Data>\\n<RequestId>DA5A3C45-D457-48ED-9A20-AEDEA8503401</RequestId>\\n<Success>true</Success>\\n</QueryProductResponse>","errorExample":""}]',
      'title' => '查询指定产品的详细信息',
      'summary' => '调用该接口查询指定产品的详细信息。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。

    

    ',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryProductList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的产品数量，最大值是200。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '2',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

><notice>目前，物联网平台仅支持实例维度的资源组管理。请求参数**ResourceGroupId**配置已无效，无需再传入。
></notice>
',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph****',
          ),
        ),
        3 => 
        array (
          'name' => 'AliyunCommodityCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查看的产品类型，取值：

- **iothub_senior**：使用物模型版产品。

- **iothub**：不使用物模型版产品。

> 如果不传入该参数，则返回所有产品的列表。',
            'type' => 'string',
            'required' => false,
            'example' => 'iothub_senior',
          ),
        ),
        4 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '4B4ECF2C-6222-42EC-A4B5-C12202E71CEA',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：表示调用成功。

- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的产品信息。具体信息请参见以下参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页号。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示的产品数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'Total' => 
                  array (
                    'description' => '产品总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '184',
                  ),
                  'PageCount' => 
                  array (
                    'description' => '总页数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '92',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ProductInfo' => 
                      array (
                        'description' => '产品信息列表。

> 返回的产品信息按照产品创建时间倒序排列。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AuthType' => 
                            array (
                              'description' => '产品下的设备接入物联网平台的认证方式。

- **secret**：使用设备密钥进行设备身份认证。

- **id2**：使用物联网设备身份认证ID²。

- **x509**：使用设备X.509证书进行设备身份认证。',
                              'type' => 'string',
                              'example' => 'secret',
                            ),
                            'ProductKey' => 
                            array (
                              'description' => '产品的ProductKey。创建产品时，物联网平台为该产品颁发的全局唯一标识。',
                              'type' => 'string',
                              'example' => 'a1T27vz****',
                            ),
                            'ProductName' => 
                            array (
                              'description' => '产品名称。',
                              'type' => 'string',
                              'example' => '路灯',
                            ),
                            'Description' => 
                            array (
                              'description' => '产品描述。',
                              'type' => 'string',
                              'example' => 'This is a test product.',
                            ),
                            'NodeType' => 
                            array (
                              'description' => '产品的节点类型。该参数为使用物模型的产品（AliyunCommodityCode=iothub_senior）的特有参数。取值：

- **0**：设备。设备不能挂载子设备，可以直连IoT Hub，也可以作为网关的子设备连接IoT Hub。

- **1**：网关。网关可以挂载子设备，具有子设备管理模块，维持子设备的拓扑关系，并且可以将拓扑关系同步到云端。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '0',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '该产品的创建时间。毫秒值时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1581595942000',
                            ),
                            'DataFormat' => 
                            array (
                              'description' => '设备与云端之间的数据通信协议类型。该参数为使用物模型的产品（AliyunCommodityCode=iothub_senior）的特有参数。
取值：

- **0**：透传模式。使用自定义的串口数据格式。该模式下，设备可以上报原始数据（如二进制数据流）。阿里云物联网平台会运行您配置在云端的数据解析脚本，将原始数据转换成Alink JSON标准数据格式。

- **1**：Alink JSON。阿里云物联网平台定义的设备与云端的数据交换协议，采用JSON格式。
',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'DeviceCount' => 
                            array (
                              'description' => '产品下的设备数量。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '128',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"4B4ECF2C-6222-42EC-A4B5-C12202E71CEA\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 2,\\n    \\"Total\\": 184,\\n    \\"PageCount\\": 92,\\n    \\"List\\": {\\n      \\"ProductInfo\\": [\\n        {\\n          \\"AuthType\\": \\"secret\\",\\n          \\"ProductKey\\": \\"a1T27vz****\\",\\n          \\"ProductName\\": \\"路灯\\",\\n          \\"Description\\": \\"This is a test product.\\",\\n          \\"NodeType\\": 0,\\n          \\"GmtCreate\\": 1581595942000,\\n          \\"DataFormat\\": 1,\\n          \\"DeviceCount\\": 128\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<QueryProductListResponse>\\n<Data>\\n    <PageCount>92</PageCount>\\n    <PageSize>2</PageSize>\\n    <List>\\n        <ProductInfo>\\n            <DataFormat>1</DataFormat>\\n            <ProductKey>a1A0D4t****</ProductKey>\\n            <NodeType>0</NodeType>\\n            <ProductName>路灯产品</ProductName>\\n            <DeviceCount>1</DeviceCount>\\n            <GmtCreate>1569233025000</GmtCreate>\\n            <AuthType>secret</AuthType>\\n        </ProductInfo>\\n        <ProductInfo>\\n            <DataFormat>1</DataFormat>\\n            <ProductKey>a1dEvuQ****</ProductKey>\\n            <NodeType>0</NodeType>\\n            <ProductName>子设备custom</ProductName>\\n            <DeviceCount>0</DeviceCount>\\n            <GmtCreate>1568690432000</GmtCreate>\\n            <AuthType>secret</AuthType>\\n        </ProductInfo>\\n    </List>\\n    <CurrentPage>1</CurrentPage>\\n    <Total>184</Total>\\n</Data>\\n<RequestId>4B4ECF2C-6222-42EC-A4B5-C12202E71CEA</RequestId>\\n<Success>true</Success>\\n</QueryProductListResponse>","errorExample":""}]',
      'title' => '查看所有产品列表',
      'summary' => '调用该接口查看所有产品列表。',
      'description' => '## QPS限制

- 单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
    > 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。

- 当请求参数**CurrentPage**与**PageSize**的值相乘结果大于或等于100000时，会降低调用该接口的QPS。
    此时，单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。




',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateProduct' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述产品信息。长度不超过100个字符。一个中文算一个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '第二代路灯产品。',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的**ProductKey**，物联网平台为产品颁发的全局唯一标识符。

您可以在物联网平台控制台或调用[QueryProductList](~~69271~~)接口，查看当前账号下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改后的产品名称。
产品名称长度为4~30个字符，可以包含中文、英文字母、数字和下划线（_）。一个中文汉字算2个字符。

><notice> 产品名称在当前实例下需保持唯一。
></notice>',
            'type' => 'string',
            'required' => true,
            'example' => '路灯',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateProductResponse>\\n<RequestId>C4FDA54C-4201-487F-92E9-022F42387458</RequestId>\\n<Success>true</Success>\\n</UpdateProductResponse>","errorExample":""}]',
      'title' => '修改指定产品的信息',
      'summary' => '调用该接口修改指定产品的信息。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteProduct' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-64***',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的产品的ProductKey。ProductKey是物联网平台为新建产品颁发的产品Key，作为其全局唯一标识符。您可以在物联网平台控制台查看或调用[QueryProductList](~~69271~~)查看当前账号下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n <DeleteDeviceResponse>\\n      <RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n      <Success>true</Success>\\n  </DeleteDeviceResponse>","errorExample":""}]',
      'title' => '删除指定产品',
      'summary' => '调用该接口删除指定产品。',
      'description' => '## 使用说明
产品删除后，产品Key（ProductKey）将失效，与产品关联的其他信息也一并删除，您将无法执行与该产品关联的任何操作。


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateProductTags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的ProductKey。ProductKey是物联网平台为新建产品颁发的产品Key，作为其全局唯一标识符。您可以在物联网平台控制台查看或调用[QueryProductList](~~69271~~)查看当前账号下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductTag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '产品标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'TagValue' => 
                array (
                  'description' => '产品标签值（Value）。长度不可超过128字符，可包含中文、英文字母、数字、下划线（_）和短划线（-）。一个中文汉字算2个字符。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
                'TagKey' => 
                array (
                  'description' => '产品标签键（Key）。长度不可超过30个字符，可包含英文大小写字母，数字和半角句号（.）。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'room',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功，表示产品绑定标签成功。
- **false**：调用失败，表示产品绑定标签失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'InvalidProductTags' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ProductTag' => 
                  array (
                    'description' => '调用失败时，返回不合法的产品标签列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TagValue' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => '123$',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'room',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"InvalidProductTags\\": {\\n    \\"ProductTag\\": [\\n      {\\n        \\"TagValue\\": \\"123$\\",\\n        \\"TagKey\\": \\"room\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateProductTagsResponse>\\n    <RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n    <Success>true</Success>\\n</CreateProductTagsResponse>","errorExample":""}]',
      'title' => 'CreateProductTags',
      'summary' => '调用该接口为指定产品创建标签。',
      'description' => '## 使用说明

- 单次调用该接口最多能为指定产品创建10个标签。

- 单个产品的标签总数不超过100个。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateProductTags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的ProductKey。ProductKey是物联网平台为新建产品颁发的产品Key，作为其全局唯一标识符。您可以在物联网平台控制台查看或调用[QueryProductList](~~69271~~)查看当前账号下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductTag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '产品标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'TagValue' => 
                array (
                  'description' => '更新后的标签值（value）。长度不可超过128字符，可包含中文、英文字母、数字、下划线（_）和短划线（-）。一个中文汉字算2个字符。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '202',
                ),
                'TagKey' => 
                array (
                  'description' => '产品标签键（key）。长度不可超过30个字符，可包含英文大小写字母，数字和英文句号（.）。

> 传入标签的TagKey必须是已存在的标签key。传入标签的TagKey不能重复。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'room',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'InvalidProductTags' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ProductTag' => 
                  array (
                    'description' => '调用失败时，返回不合法的产品标签列表（**ProductTag**）。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TagValue' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => '123',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'room',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"InvalidProductTags\\": {\\n    \\"ProductTag\\": [\\n      {\\n        \\"TagValue\\": \\"123\\",\\n        \\"TagKey\\": \\"room\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<UpdateProductTagsResponse>\\n    <RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n    <Success>true</Success>\\n</UpdateProductTagsResponse>","errorExample":""}]',
      'title' => 'UpdateProductTags',
      'summary' => '调用该接口更新产品标签。',
      'description' => '## 使用说明

单次调用该接口最多可更新10个标签。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteProductTags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64***',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的ProductKey。ProductKey是物联网平台为新建产品颁发的产品Key，作为其全局唯一标识符。您可以在物联网平台控制台查看或调用[QueryProductList](~~69271~~)查看当前账号下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductTagKey',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要删除的标签键列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'room',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteProductTagsResponse>\\n<RequestId>E7E8456E-EDD7-41D3-83B1-62FF4F5ED6BD</RequestId>\\n<Success>true</Success>\\n</DeleteProductTagsResponse>","errorExample":""}]',
      'title' => '删除产品标签',
      'summary' => '调用该接口删除产品标签。',
      'description' => '## 使用说明

单次调用该接口最多可删除10个标签。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListProductTags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64***',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的ProductKey。ProductKey是物联网平台为新建产品颁发的产品Key，作为其全局唯一标识符。您可以在物联网平台控制台查看或调用[QueryProductList](~~69271~~)查看当前账号下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ProductTag' => 
                  array (
                    'description' => '调用成功时，返回产品标签信息列表，具体信息，请参见**ProductTag**包含的参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TagValue' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => '102',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'room',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ProductTag\\": [\\n      {\\n        \\"TagValue\\": \\"102\\",\\n        \\"TagKey\\": \\"room\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<ListProductTagsResponse>\\n    <Data>\\n        <ProductTag>\\n            <TagValue>alterTable</TagValue>\\n            <TagKey>binary</TagKey>\\n        </ProductTag>\\n        <ProductTag>\\n            <TagValue>json2</TagValue>\\n            <TagKey>extt</TagKey>\\n        </ProductTag>\\n        <ProductTag>\\n            <TagValue>1234</TagValue>\\n            <TagKey>Lock</TagKey>\\n        </ProductTag>\\n        <ProductTag>\\n            <TagValue>support</TagValue>\\n            <TagKey>Lockk</TagKey>\\n        </ProductTag>\\n        <ProductTag>\\n            <TagValue>reen</TagValue>\\n            <TagKey>Reen</TagKey>\\n        </ProductTag>\\n        <ProductTag>\\n            <TagValue>try</TagValue>\\n            <TagKey>Reenn</TagKey>\\n        </ProductTag>\\n        <ProductTag>\\n            <TagValue>DropTable</TagValue>\\n            <TagKey>roc</TagKey>\\n        </ProductTag>\\n    </Data>\\n    <RequestId>7FBE60F8-4AB5-4A8C-AFCB-F4F38851F01F</RequestId>\\n    <Success>true</Success>\\n</ListProductTagsResponse>","errorExample":""}]',
      'title' => '查询指定产品的所有标签',
      'summary' => '调用该接口查询指定产品的所有标签。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListProductByTags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64***',
          ),
        ),
        1 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的记录数量。最大值是50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductTag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '产品标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'TagValue' => 
                array (
                  'description' => '产品标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '102',
                ),
                'TagKey' => 
                array (
                  'description' => '产品标签键。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'room',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ProductInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ProductInfo' => 
                  array (
                    'description' => '调用成功时，返回产品信息列表（**ProductInfo**）。

> 返回的产品信息按照产品创建时间倒序排列。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ProductKey' => 
                        array (
                          'description' => '产品的ProductKey。是物联网平台为新建产品颁发的全局唯一标识符。',
                          'type' => 'string',
                          'example' => 'a1BwAGV****',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '产品名称。',
                          'type' => 'string',
                          'example' => '路灯',
                        ),
                        'NodeType' => 
                        array (
                          'description' => '产品的节点类型，取值：
- **0**：设备。设备不能挂载子设备。可以直连物联网平台，也可以作为网关的子设备连接物联网平台。
- **1**：网关。网关可以挂载子设备，具有子设备管理模块，维持子设备的拓扑关系，和将拓扑关系同步到物联网平台。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'Description' => 
                        array (
                          'description' => '产品描述。',
                          'type' => 'string',
                          'example' => 'This is a test product.',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '产品创建时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1545355537000',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"ProductInfos\\": {\\n    \\"ProductInfo\\": [\\n      {\\n        \\"ProductKey\\": \\"a1BwAGV****\\",\\n        \\"ProductName\\": \\"路灯\\",\\n        \\"NodeType\\": 0,\\n        \\"Description\\": \\"This is a test product.\\",\\n        \\"CreateTime\\": 1545355537000\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListProductByTagsResponse>\\n<RequestId>09AA366E-81EC-4CF0-B49E-61BCD7C95338</RequestId>\\n<Success>true</Success>\\n<ProductInfos>\\n    <ProductInfo>\\n        <ProductKey>a1BwAGV****</ProductKey>\\n        <NodeType>0</NodeType>\\n        <CreateTime>1581595942000</CreateTime>\\n        <ProductName>路灯</ProductName>\\n    </ProductInfo>\\n    <ProductInfo>\\n        <ProductKey>a1PO***</ProductKey>\\n        <NodeType>0</NodeType>\\n        <CreateTime>1580898565000</CreateTime>\\n        <ProductName>传感器</ProductName>\\n    </ProductInfo>\\n</ProductInfos>\\n</ListProductByTagsResponse>","errorExample":""}]',
      'title' => 'ListProductByTags',
      'summary' => '调用该接口根据标签分页查询产品列表。',
      'description' => '## 使用说明
- 支持按照TagKey和TagValue组合，或只按照TagKey来搜索。

- 传入多个ProductTag是**或**的关系。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。
 > RAM用户共享阿里云账号配额。

',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。

',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateProductFilterConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的ProductKey。ProductKey是物联网平台为新建产品颁发的产品Key，作为其全局唯一标识符。
您可以在物联网平台控制台查看或调用[QueryProductList](~~69271~~)查看当前账号下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'PropertyTimestampFilter',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否根据属性上报时间进行消息去重。可选值：

- **true**：对设备上报的时间戳相同的属性消息进行去重。

- **false**：不根据时间戳进行消息去重。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'PropertyValueFilter',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否根据属性值进行消息去重。可选值：

- **true**：对设备上报相同属性值的消息进行去重。

- **false**：不根据属性值进行消息去重。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateProductFilterConfigResponse>\\n<RequestId>2E19BDAF-0FD0-4608-9F41-82D230CFEE38</RequestId>\\n<Success>true</Success>\\n</UpdateProductFilterConfigResponse>","errorExample":""}]',
      'title' => '更新产品设备上报属性消息去重规则',
      'summary' => '更新产品下设备上报属性消息的去重规则。即时生效。',
      'description' => '## 使用说明
消息去重规则：物联网平台根据您设置的去重规则，决定是否通过您设置的规则引擎云产品流转或服务端订阅，将设备上报的属性数据流转至指定目的地。

规则触发条件之间是和（AND）关系。例如您设置了PropertyValueFilter=true和PropertyTimestampFilter=true，那么必须这两个条件都满足时，才会触发规则，去掉重复的消息。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryProductCertInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a2YwD23****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'MissingProductKey',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'ProductKey is mandatory for this action.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '57b144cf-09fc-4916-a272-a62902d5b207',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：表示调用成功。

- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ProductCertInfo' => 
              array (
                'description' => '返回的证书信息（**IssueModel**）。',
                'type' => 'object',
                'properties' => 
                array (
                  'IssueModel' => 
                  array (
                    'description' => '证书颁发模式。

- **1**：物联网平台颁发的X.509证书。

- **3**：第三方平台颁发的X.509证书。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"MissingProductKey\\",\\n  \\"ErrorMessage\\": \\"ProductKey is mandatory for this action.\\",\\n  \\"RequestId\\": \\"57b144cf-09fc-4916-a272-a62902d5b207\\",\\n  \\"Success\\": true,\\n  \\"ProductCertInfo\\": {\\n    \\"IssueModel\\": 1\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryProductCertInfo>\\n<RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n<Success>true</Success>\\n<ProductCertInfo>\\n    <IssueModel>1</IssueModel>\\n</ProductCertInfo>\\n</QueryProductCertInfo>","errorExample":""}]',
      'title' => '获取产品的X.509证书信息',
      'summary' => '调用该接口获取产品的X.509证书信息。',
      'description' => '## QPS限制


单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为30。

> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。 ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetProductCertInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'aS2dewS****',
          ),
        ),
        2 => 
        array (
          'name' => 'IssueModel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '证书颁发模式。

- **1**：由物联网平台颁发X.509证书。

- **3**：由第三方平台颁发X.509证书。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'MissingProductKey',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'ProductKey is mandatory for this action.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '57b144cf-09fc-4916-a272-a62902d5b207',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：表示调用成功。

- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"MissingProductKey\\",\\n  \\"ErrorMessage\\": \\"ProductKey is mandatory for this action.\\",\\n  \\"RequestId\\": \\"57b144cf-09fc-4916-a272-a62902d5b207\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SetProductCertInfo>\\n<RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n<Success>true</Success>\\n</SetProductCertInfo>","errorExample":""}]',
      'title' => '设置产品的X.509证书信息',
      'summary' => '调用该接口设置产品的X.509证书信息。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为30。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ReleaseProduct' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64***',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待发布产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4F94B97-1D64-4080-BFD2-67461667AA43',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E4F94B97-1D64-4080-BFD2-67461667AA43\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ReleaseProductResponse>\\r\\n        <RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\r\\n        <Success>true</Success>\\r\\n</ReleaseProductResponse>","errorExample":""}]',
      'title' => '产品发布',
      'summary' => '指定产品的发布。',
      'description' => '## 使用说明

产品发布成功后，不可调用接口[CreateThingModel](~~150323~~)、[UpdateThingModel](~~151240~~)、[ImportThingModelTSL](~~150320~~)、[PublishThingModel](~~150311~~)、[DeleteThingModel](~~150312~~)、[CopyThingModel](~~150322~~)编辑物模型。如需编辑，请先调用接口[CancelReleaseProduct](~~213875~~)取消产品发布。
 
## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CancelReleaseProduct' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待取消发布产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CancelReleaseProductResponse>\\r\\n  <RequestId>5573D217-8E3E-47AD-9331-2083B88E64B2</RequestId>\\r\\n  <Success>true</Success>\\r\\n</CancelReleaseProductResponse>","errorExample":""}]',
      'title' => '取消指定产品的发布',
      'summary' => '调用该接口取消指定产品的发布。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RegisterDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待注册设备所隶属的产品的ProductKey。ProductKey是物联网平台为新建产品颁发的产品Key，作为其全局唯一标识符。
您可以在物联网平台控制台查看或调用[QueryProductList](~~69271~~)查看当前账号下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '为待注册的设备命名。设备名称长度为4~32个字符，可以包含英文字母、数字和特殊字符：短划线（-）、下划线（_）、at（@）、半角句号（.）、半角冒号（:）。

DeviceName通常与ProductKey组合使用，用作设备标识。

> 如果不传入该参数，则由系统随机生成设备名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'DevEui',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'LoRaWAN设备的DevEUI。

创建LoRaWAN设备时，该参数必传。',
            'type' => 'string',
            'required' => false,
            'example' => 'e8SDdgeIlk3nED****',
          ),
        ),
        4 => 
        array (
          'name' => 'Nickname',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '为待注册的设备设置备注名称。备注名称长度为4~64个字符，可包含中文汉字、英文字母、数字和下划线（_）。一个中文汉字算2个字符。

> 如果不传入该参数，系统不会为设备生成备注名称。',
            'type' => 'string',
            'required' => false,
            'example' => '园区灯',
          ),
        ),
        5 => 
        array (
          'name' => 'PinCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'LoRaWAN设备的PIN Code，用于校验DevEUI的合法性。

创建LoRaWAN设备时，**LoraNodeType**为**ALIYUNDEFINED**，该参数必传。',
            'type' => 'string',
            'required' => false,
            'example' => 'DIe80dfeg*****',
          ),
        ),
        6 => 
        array (
          'name' => 'JoinEui',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'LoRaWAN设备的入网凭证JoinEui。

创建LoRaWAN设备时，**LoraNodeType**为**USERDEFINED**，该参数必传。',
            'type' => 'string',
            'required' => false,
            'example' => 'Ede4tde8erth****',
          ),
        ),
        7 => 
        array (
          'name' => 'AppKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'LoRaWAN设备的AppKey。

创建LoRaWAN设备时，**LoraNodeType**为**USERDEFINED**，该参数必传。',
            'type' => 'string',
            'required' => false,
            'example' => '674f***',
          ),
        ),
        8 => 
        array (
          'name' => 'LoraNodeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'LoRaWAN设备类型。可取值：

- **ALIYUNDEFINED**：阿里云颁发类型，需同时传入**DevEui**和**PinCode**。
- **USERDEFINED**：用户自定义类型，需同时传入**DevEui**、**JoinEui**和**AppKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'ALIYUNDEFINED',
            'default' => 'ALIYUNDEFINED',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回注册的设备信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'ProductKey' => 
                  array (
                    'description' => '设备所属产品的ProductKey。',
                    'type' => 'string',
                    'example' => 'a1BwAGV****',
                  ),
                  'DevEui' => 
                  array (
                    'description' => 'LoRaWAN设备的DevEUI。仅LoRaWAN设备才会返回该参数。',
                    'type' => 'string',
                    'example' => 'e8SDdgeIlk3nED****',
                  ),
                  'DeviceName' => 
                  array (
                    'description' => '设备名称。

><notice> 请妥善保管，勿泄露。
></notice> ',
                    'type' => 'string',
                    'example' => 'light',
                  ),
                  'JoinEui' => 
                  array (
                    'description' => 'LoRaWAN设备的入网凭证 JoinEUI。仅LoRaWAN设备才会返回该参数。',
                    'type' => 'string',
                    'example' => 'Ede4tde8erth****',
                  ),
                  'DeviceSecret' => 
                  array (
                    'description' => '设备密钥。

><notice> 请妥善保管，勿泄露。
></notice> ',
                    'type' => 'string',
                    'example' => 'mz2Canp4GB7qRVf1OYPNtRqB2anu****',
                  ),
                  'Nickname' => 
                  array (
                    'description' => '设备的备注名称。
若您没有为该设备设置备注名称，则该参数返回为空。',
                    'type' => 'string',
                    'example' => '园区灯',
                  ),
                  'IotId' => 
                  array (
                    'description' => '物联网平台为该设备颁发的设备ID，作为该设备的唯一标识符。

><notice> 请妥善保管，勿泄露。
></notice> ',
                    'type' => 'string',
                    'example' => '1O4YPNtRqB2anumz2Canp4GB7q****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ProductKey\\": \\"a1BwAGV****\\",\\n    \\"DevEui\\": \\"e8SDdgeIlk3nED****\\",\\n    \\"DeviceName\\": \\"light\\",\\n    \\"JoinEui\\": \\"Ede4tde8erth****\\",\\n    \\"DeviceSecret\\": \\"mz2Canp4GB7qRVf1OYPNtRqB2anu****\\",\\n    \\"Nickname\\": \\"园区灯\\",\\n    \\"IotId\\": \\"1O4YPNtRqB2anumz2Canp4GB7q****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RegisterDeviceResponse>\\n<RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n<Success>true</Success>\\n<Data>\\n    <DeviceName>device1</DeviceName>\\n    <ProductKey>a1rYuVF****</ProductKey>\\n    <DeviceSecret>tXHf4ezGEHcwdyMwoCDHGBmk9avi****</DeviceSecret>\\n    <IotId>CqXL5h5ysRTA4NxjABjj0010fa****</IotId>\\n    <Nickname>detectors_in_beijing</Nickname>\\n</Data>\\n</RegisterDeviceResponse>","errorExample":""}]',
      'title' => '在指定产品下注册设备',
      'summary' => '调用该接口在指定产品下注册设备。',
      'description' => '## 接口说明
注册设备指在物联网平台产品下添加设备。在指定产品下成功注册设备后，阿里云物联网平台为设备颁发全局唯一的设备ID（IotId），用来标识该设备。在进行与设备相关的操作时，您可能需要提供目标设备的IotId。

您也可以使用ProductKey和DeviceName组合来标识一个设备。其中ProductKey是新建产品时，物联网平台为产品颁发的ProductKey，DeviceName是注册设备时，由您指定或由系统随机生成的设备名称。IotId的优先级高于ProductKey和DeviceName组合。

如需在同一产品下，批量注册多个设备，请参见[BatchRegisterDeviceWithApplyId接口的使用说明](~~69514~~)。

## QPS限制


单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为30。

> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryClientIds' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备ID。您可调用[QueryDeviceInfo](~~257184~~)接口查询**IotId**。',
            'type' => 'string',
            'required' => true,
            'example' => 'y4u2weAIrpp****WHMle1234',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-a****13l',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。
',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。
',
                'type' => 'string',
                'example' => '89F22330-BAEE-****-****-41BA46D6E267',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '设备包含标识ID时，返回的标识列表。详细内容，请参见**DynamicRegClientIds**信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'IotId' => 
                  array (
                    'description' => '设备ID。',
                    'type' => 'string',
                    'example' => 'y4u2weAI********HMle1234',
                  ),
                  'DynamicRegClientIds' => 
                  array (
                    'description' => '设备标识列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreateTime' => 
                        array (
                          'description' => '设备标识创建时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1636514022424',
                        ),
                        'ClientId' => 
                        array (
                          'description' => '设备标识。',
                          'type' => 'string',
                          'example' => '9rSzYt4js92********f000112',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"89F22330-BAEE-****-****-41BA46D6E267\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"IotId\\": \\"y4u2weAI********HMle1234\\",\\n    \\"DynamicRegClientIds\\": [\\n      {\\n        \\"CreateTime\\": 1636514022424,\\n        \\"ClientId\\": \\"9rSzYt4js92********f000112\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryClientIdsResponse>\\n<RequestId>CA991E7C-BDE7-5887-B3B7-E08C68C0D346</RequestId>\\n<Data>\\n    <IotId>kRLP***0000</IotId>\\n    <DynamicRegClientIds>\\n        <CreateTime>1635847637823</CreateTime>\\n        <ClientId>K19uYV***000100</ClientId>\\n    </DynamicRegClientIds>\\n    <DynamicRegClientIds>\\n        <CreateTime>1635846982286</CreateTime>\\n        <ClientId>bpQwyW***000100</ClientId>\\n    </DynamicRegClientIds>\\n    <DynamicRegClientIds>\\n        <CreateTime>1635847426368</CreateTime>\\n        <ClientId>ntnIvez***000100</ClientId>\\n    </DynamicRegClientIds>\\n</Data>\\n<Success>true</Success>\\n</QueryClientIdsResponse>","errorExample":""}]',
      'title' => 'QueryClientIds',
      'summary' => '一型一密免注册场景下，调用该接口查看单个设备的标识列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。

',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TransformClientId' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'BXPV9Ks3bxwM9fD****0000101',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备标识ID。',
            'type' => 'string',
            'required' => true,
            'example' => '9rSz********UNMWj33f000112',
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-02****43',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。错误码详情，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。
',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。
',
                'type' => 'string',
                'example' => '89F22330-BAEE-****-****-41BA46D6E267',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"89F22330-BAEE-****-****-41BA46D6E267\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<TransformClientIdResponse>\\n<RequestId>89F22330-BAEE-****-****-41BA46D6E267</RequestId>\\n<Code>Success</Code>\\n<Success>true</Success>\\n</TransformClientIdResponse>","errorExample":""}]',
      'title' => 'TransformClientId',
      'summary' => '一型一密免注册场景下，若设备包含多个设备标识，需调用该接口指定一个正确的设备标识，以防止非法的设备登录。',
      'description' => '## 使用说明
您可调用[QueryClientIds](~~371985~~)接口，查看设备的设备标识列表。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteClientIds' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备ID。
',
            'type' => 'string',
            'required' => true,
            'example' => 'BXPV9Ks3bxwM9fD****0000101',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-12****78',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。错误码详情，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '89F22330-BAEE-****-****-41BA46D6E267',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"89F22330-BAEE-****-****-41BA46D6E267\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteClientIdsResponse>\\n<RequestId>89F22330-BAEE-****-****-41BA46D6E267</RequestId>\\n<Code>Success</Code>\\n<Success>true</Success>\\n</DeleteClientIdsResponse>","errorExample":""}]',
      'title' => 'DeleteClientIds',
      'summary' => '一型一密免注册场景下，若单个设备的标识个数超出限制（5个），可调用该接口删除设备下的所有标识。',
      'description' => '## 使用说明
- 您可调用[QueryClientIds](~~371985~~)接口，查看设备的设备标识列表，得出该设备的标识个数。
- 调用本接口会清空设备下所有标识，且不可恢复。此时，您可为设备重新注册设备标识。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64***',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备所属产品的ProductKey。

><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备的设备名称。

><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备的设备ID。


><notice> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**的组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**的组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回设备的基本信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Nickname' => 
                  array (
                    'description' => '设备的备注名称。',
                    'type' => 'string',
                    'example' => 'detectors_in_beijing',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => '设备所属产品的ProductKey。',
                    'type' => 'string',
                    'example' => 'a1rYuVF****',
                  ),
                  'DeviceName' => 
                  array (
                    'description' => '设备名称。',
                    'type' => 'string',
                    'example' => 'light',
                  ),
                  'DeviceSecret' => 
                  array (
                    'description' => '设备密钥。',
                    'type' => 'string',
                    'example' => 'mz2Canp4GB7qRVf1OYPNtRqB2anu****',
                  ),
                  'IotId' => 
                  array (
                    'description' => '物联网平台为该设备颁发的ID，作为该设备的唯一标识符。',
                    'type' => 'string',
                    'example' => 'Q7uOhVRdZRRlDnTLv****00100',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Iot.Device.NotExistedDevice',
            'errorMessage' => 'The device does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'Iot.common.QueryDeviceActionError',
            'errorMessage' => 'An error occurred while querying the device.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.device.InvalidFormattedDeviceNameInNameArray',
            'errorMessage' => 'The DeviceName list contains an invalid DeviceName.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.common.InvalidTenant',
            'errorMessage' => 'The tenant is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.device.InvalidFormattedDeviceName',
            'errorMessage' => 'The DeviceName format is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'Iot.digitaltwin.DTInstanceInvalidThingType',
            'errorMessage' => 'The digital twin operation is not supported.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.gateway.BackEndServiceInvalid',
            'errorMessage' => 'Request has failed due to invalid backend server',
          ),
          7 => 
          array (
            'errorCode' => 'Iot.device.InvalidIoTId',
            'errorMessage' => 'The specified device ID is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'iot.device.NullDeviceName',
            'errorMessage' => 'The deviceName is empty.',
          ),
          9 => 
          array (
            'errorCode' => 'iot.device.DeviceInstanceInconsistency',
            'errorMessage' => 'The instance of devices is inconsistency.',
          ),
          10 => 
          array (
            'errorCode' => 'iot.prod.NotExistedProduct',
            'errorMessage' => 'The specified product does not exist.',
          ),
          11 => 
          array (
            'errorCode' => 'iot.prod.NullProductKey',
            'errorMessage' => 'The productKey is empty.',
          ),
          12 => 
          array (
            'errorCode' => 'iot.common.QueryDevicePropertyActionError',
            'errorMessage' => 'An error occurred while querying the device property.',
          ),
          13 => 
          array (
            'errorCode' => 'iot.common.QueryManyDevicesActionError',
            'errorMessage' => 'An error occurred while querying the devices',
          ),
          14 => 
          array (
            'errorCode' => 'iot.Sre.IotInstanceStatusForbidden',
            'errorMessage' => 'Instance status forbidden.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Nickname\\": \\"detectors_in_beijing\\",\\n    \\"ProductKey\\": \\"a1rYuVF****\\",\\n    \\"DeviceName\\": \\"light\\",\\n    \\"DeviceSecret\\": \\"mz2Canp4GB7qRVf1OYPNtRqB2anu****\\",\\n    \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv****00100\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceInfoResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <IotId>Q7uOhVRdZRRlDnTLv****00100</IotId>\\n    <DeviceSecret>mz2Canp4GB7qRVf1OYPNtRqB2anu****</DeviceSecret>\\n    <ProductKey>a1rYuVF****</ProductKey>\\n    <Nickname>detectors_in_beijing</Nickname>\\n    <DeviceName>light</DeviceName>\\n</Data>\\n<Success>true</Success>\\n</QueryDeviceInfoResponse>","errorExample":""}]',
      'title' => '查询设备信息',
      'summary' => '查询指定设备的基本信息（设备ID、设备证书和备注名称）。',
      'description' => '## QPS限制


单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

   > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceDetail' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64***',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备所隶属的产品Key。
> 如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询的设备的名称。
> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备ID。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回设备的详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '设备状态。取值：

- **ONLINE**：设备在线。

- **OFFLINE**：设备离线。

- **UNACTIVE**：设备未激活。

- **DISABLE**：设备已禁用。',
                    'type' => 'string',
                    'example' => 'ONLINE',
                  ),
                  'Owner' => 
                  array (
                    'description' => 'API调用者是否是该设备的拥有者。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'UtcActive' => 
                  array (
                    'description' => '设备的激活时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2018-08-06T02:48:41.000Z',
                  ),
                  'ProductName' => 
                  array (
                    'description' => '设备所属产品的名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'DeviceName' => 
                  array (
                    'description' => '设备名称。',
                    'type' => 'string',
                    'example' => 'light',
                  ),
                  'UtcCreate' => 
                  array (
                    'description' => '设备的创建时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2018-08-06T02:47:50.000Z',
                  ),
                  'FirmwareVersion' => 
                  array (
                    'description' => '设备默认（default）OTA模块的版本号。

如果需要查询设备上报过的其他OTA模块版本信息，请参见[ListOTAModuleVersionsByDevice](~~190622~~)。',
                    'type' => 'string',
                    'example' => 'V1.0.0.0',
                  ),
                  'GmtOnline' => 
                  array (
                    'description' => '设备最近一次上线的时间，GMT格式。',
                    'type' => 'string',
                    'example' => '2018-08-06 13:43:12',
                  ),
                  'UtcOnline' => 
                  array (
                    'description' => '设备最近一次上线的时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2018-08-06T05:43:12.000Z',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => '设备所属产品的ProductKey。',
                    'type' => 'string',
                    'example' => 'a1rYuVF****',
                  ),
                  'IpAddress' => 
                  array (
                    'description' => '设备的IP地址。',
                    'type' => 'string',
                    'example' => '10.0.0.1',
                  ),
                  'NodeType' => 
                  array (
                    'description' => '节点类型，取值：
- **0**：设备。设备不能挂载子设备。可以直连物联网平台，也可以作为网关的子设备连接物联网平台。
- **1**：网关。网关可以挂载子设备，具有子设备管理模块，维持子设备的拓扑关系，和将拓扑关系同步到物联网平台。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Region' => 
                  array (
                    'description' => '设备所在地区（与控制台上的物联网地平台服务地域对应）。',
                    'type' => 'string',
                    'example' => 'cn-shanghai',
                  ),
                  'DeviceSecret' => 
                  array (
                    'description' => '设备密钥。',
                    'type' => 'string',
                    'example' => 'mz2Canp4GB7qRVf1OYPNtRqB2anu****',
                  ),
                  'GmtActive' => 
                  array (
                    'description' => '设备的激活时间，GMT格式。',
                    'type' => 'string',
                    'example' => '2018-08-06 10:48:41',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '设备的创建时间，GMT格式。',
                    'type' => 'string',
                    'example' => '2018-08-06 10:47:50',
                  ),
                  'Nickname' => 
                  array (
                    'description' => '设备的备注名称。',
                    'type' => 'string',
                    'example' => 'detectors_in_beijing',
                  ),
                  'IotId' => 
                  array (
                    'description' => '物联网平台为该设备颁发的ID，作为该设备的唯一标识符。',
                    'type' => 'string',
                    'example' => 'Q7uOhVRdZRRlDnTLv****00100',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Status\\": \\"ONLINE\\",\\n    \\"Owner\\": true,\\n    \\"UtcActive\\": \\"2018-08-06T02:48:41.000Z\\",\\n    \\"ProductName\\": \\"test\\",\\n    \\"DeviceName\\": \\"light\\",\\n    \\"UtcCreate\\": \\"2018-08-06T02:47:50.000Z\\",\\n    \\"FirmwareVersion\\": \\"V1.0.0.0\\",\\n    \\"GmtOnline\\": \\"2018-08-06 13:43:12\\",\\n    \\"UtcOnline\\": \\"2018-08-06T05:43:12.000Z\\",\\n    \\"ProductKey\\": \\"a1rYuVF****\\",\\n    \\"IpAddress\\": \\"10.0.0.1\\",\\n    \\"NodeType\\": 0,\\n    \\"Region\\": \\"cn-shanghai\\",\\n    \\"DeviceSecret\\": \\"mz2Canp4GB7qRVf1OYPNtRqB2anu****\\",\\n    \\"GmtActive\\": \\"2018-08-06 10:48:41\\",\\n    \\"GmtCreate\\": \\"2018-08-06 10:47:50\\",\\n    \\"Nickname\\": \\"detectors_in_beijing\\",\\n    \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv****00100\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceDetailResponse>\\n<Data>\\n    <Owner>true</Owner>\\n    <GmtActive>2020-01-16 13:33:37</GmtActive>\\n    <DeviceName>Humidity</DeviceName>\\n    <ProductKey>a1ttsqu****</ProductKey>\\n    <DeviceSecret>sLefbFmN9SYfnWLJTePG893XNuRV****</DeviceSecret>\\n    <IpAddress>42.120.75.144</IpAddress>\\n    <GmtCreate>2020-01-08 14:47:08</GmtCreate>\\n    <UtcCreate>2020-01-08T06:47:08.000Z</UtcCreate>\\n    <IotId>dwnS41bhNxjslDAIF****00100</IotId>\\n    <Status>OFFLINE</Status>\\n    <UtcOnline>2020-01-17T08:19:11.091Z</UtcOnline>\\n    <Region>cn-shanghai</Region>\\n    <UtcActive>2020-01-16T05:33:37.830Z</UtcActive>\\n    <Nickname>温湿度</Nickname>\\n    <NodeType>0</NodeType>\\n    <GmtOnline>2020-01-17 16:19:11</GmtOnline>\\n    <ProductName>光照温湿度传感器</ProductName>\\n</Data>\\n<RequestId>D2D2DE90-DD0F-44EA-9F56-63F07A59F65B</RequestId>\\n<Success>true</Success>\\n</QueryDeviceDetailResponse>","errorExample":""}]',
      'title' => '查询指定设备的详细信息',
      'summary' => '调用该接口查询指定设备的详细信息。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchQueryDeviceDetail' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '**DeviceName.N**中设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64***',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要查询的设备名称列表。最多可包含100个设备名称。

> 查询的设备必须在同一产品下。
',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'light',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Data' => 
                  array (
                    'description' => '调用成功时，返回设备的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '设备状态。取值：
- **ONLINE**：设备在线。
- **OFFLINE**：设备离线。
- **UNACTIVE**：设备未激活。
- **DISABLE**：设备已禁用。',
                          'type' => 'string',
                          'example' => 'ONLINE',
                        ),
                        'UtcActive' => 
                        array (
                          'description' => '​设备的激活时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-06-21T12:31:42.000Z',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '设备所属产品的名称。',
                          'type' => 'string',
                          'example' => '路灯产品',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'light',
                        ),
                        'UtcCreate' => 
                        array (
                          'description' => '​设备的创建时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-06-21T12:31:42.000Z',
                        ),
                        'FirmwareVersion' => 
                        array (
                          'description' => '设备的固件版本号。',
                          'type' => 'string',
                          'example' => 'V1.0.0.0',
                        ),
                        'ProductKey' => 
                        array (
                          'description' => '设备所属产品的**ProductKey**。',
                          'type' => 'string',
                          'example' => 'a1BwAGV****',
                        ),
                        'NodeType' => 
                        array (
                          'description' => '节点类型，取值：
- **0**：设备。设备不能挂载子设备。可以直连物联网平台，也可以作为网关的子设备连接物联网平台。
- **1**：网关。网关可以挂载子设备，具有子设备管理模块，维持子设备的拓扑关系，和将拓扑关系同步到物联网平台。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'Region' => 
                        array (
                          'description' => '设备所在地域（与控制台上物联网平台服务地域对应）。',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                        'DeviceSecret' => 
                        array (
                          'description' => '设备密钥。',
                          'type' => 'string',
                          'example' => 'mz2Canp4GB7qRVf1OYPNtRqB2anu****',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '设备的创建时间，GMT格式。',
                          'type' => 'string',
                          'example' => '2019-06-21 20:31:42',
                        ),
                        'GmtActive' => 
                        array (
                          'description' => '设备的激活时间，GMT格式。',
                          'type' => 'string',
                          'example' => '2019-06-21 20:33:00',
                        ),
                        'Nickname' => 
                        array (
                          'description' => '设备的备注名称。',
                          'type' => 'string',
                          'example' => '智能路灯',
                        ),
                        'IotId' => 
                        array (
                          'description' => '物联网平台为该设备颁发的ID，设备的唯一标识符。',
                          'type' => 'string',
                          'example' => 'Q7uOhVRdZRRlDnTLv****00100',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Data\\": [\\n      {\\n        \\"Status\\": \\"ONLINE\\",\\n        \\"UtcActive\\": \\"2019-06-21T12:31:42.000Z\\",\\n        \\"ProductName\\": \\"路灯产品\\",\\n        \\"DeviceName\\": \\"light\\",\\n        \\"UtcCreate\\": \\"2019-06-21T12:31:42.000Z\\",\\n        \\"FirmwareVersion\\": \\"V1.0.0.0\\",\\n        \\"ProductKey\\": \\"a1BwAGV****\\",\\n        \\"NodeType\\": 0,\\n        \\"Region\\": \\"cn-shanghai\\",\\n        \\"DeviceSecret\\": \\"mz2Canp4GB7qRVf1OYPNtRqB2anu****\\",\\n        \\"GmtCreate\\": \\"2019-06-21 20:31:42\\",\\n        \\"GmtActive\\": \\"2019-06-21 20:33:00\\",\\n        \\"Nickname\\": \\"智能路灯\\",\\n        \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv****00100\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<BatchQueryDeviceDetailResponse>\\n<Data>\\n    <Data>\\n        <DeviceName>Humidity</DeviceName>\\n        <GmtActive>2020-01-16 13:33:37</GmtActive>\\n        <ProductKey>a1ttsqu****</ProductKey>\\n        <DeviceSecret>sLefbFmN9SYfnWLJTePG893XNuRV****</DeviceSecret>\\n        <GmtCreate>2020-01-08 14:47:08</GmtCreate>\\n        <UtcCreate>2020-01-08T06:47:08.000Z</UtcCreate>\\n        <IotId>dwnS41bhNxjslDAIF****00100</IotId>\\n        <Status>OFFLINE</Status>\\n        <UtcActive>2020-01-08T06:47:08.000Z</UtcActive>\\n        <Region>cn-shanghai</Region>\\n        <Nickname>温湿度</Nickname>\\n        <NodeType>0</NodeType>\\n        <ProductName>光照温湿度传感器</ProductName>\\n    </Data>\\n    <Data>\\n        <Status>OFFLINE</Status>\\n        <GmtActive>2020-01-17 16:23:15</GmtActive>\\n        <DeviceName>TH_sensor</DeviceName>\\n        <Region>cn-shanghai</Region>\\n        <UtcActive>2020-01-17T03:39:14.000Z</UtcActive>\\n        <ProductKey>a1ttsqu****</ProductKey>\\n        <NodeType>0</NodeType>\\n        <DeviceSecret>dCYdTU3gw5Z77bsHjPk6lPHPVnBT****</DeviceSecret>\\n        <ProductName>光照温湿度传感器</ProductName>\\n        <GmtCreate>2020-01-17 11:39:14</GmtCreate>\\n        <UtcCreate>2020-01-17T03:39:14.000Z</UtcCreate>\\n        <IotId>RKYkCRstfGBh5SZXL****00100</IotId>\\n    </Data>\\n</Data>\\n<RequestId>D4C12DD8-4390-4877-B1DC-4049CF4868BC</RequestId>\\n<Success>true</Success>\\n</BatchQueryDeviceDetailResponse>","errorExample":""}]',
      'title' => '批量查询设备详情',
      'summary' => '查询指定产品下多个设备的详细信息。',
      'description' => '## 使用说明

- 单次调用最多能查询100个设备。
- 只能批量查询当前阿里云账号下的设备详情。如果传入的设备信息中，有设备不属于当前账号，则直接返回失败结果。
- 若传入的设备信息中，包含不存在的设备，则只返回存在的设备详情。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的记录数量，最大值是50。默认值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页的内容。默认值是 1。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页标识，首次查询无需传入。后续查询需使用的**NextToken**，要从上一次查询的返回结果中获取。



当**PageSize**×**CurrentPage**值大于10,000时，必须传入**NextToken**。否则，无法返回数据。


><notice>
如果传入**NextToken**值，则**PageSize**×**CurrentPage**值必须小于1,000,000。否则，无法返回数据。

></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'TGlzdFJlc291cm***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '下一页标识。可在下次请求时传入，来获取下一页数据。

如果**NextToken**值为空，表示没有下一页数据。',
                'type' => 'string',
                'example' => 'TGlzdFJlc291cm***',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的设备数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => '设备总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Page' => 
              array (
                'description' => '当前页面号。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DeviceInfo' => 
                  array (
                    'description' => '调用成功时，返回设备信息列表（**DeviceInfo**）。
> 返回的设备信息按照设备创建时间倒序排列。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'light',
                        ),
                        'DeviceId' => 
                        array (
                          'description' => '设备ID（旧版参数）。

> 该参数是旧版本遗留参数，已无实际作用，不能用来标识设备。目前，有效的设备标识符为**IotId**和**ProductKey**与**DeviceName**组合。',
                          'type' => 'string',
                          'example' => 'dwnS41bhNxjslDAI****',
                        ),
                        'DeviceType' => 
                        array (
                          'description' => '设备所属产品的品类。

> 目前不返回此参数。',
                          'type' => 'string',
                          'example' => 'Lighting',
                        ),
                        'UtcCreate' => 
                        array (
                          'description' => '设备创建时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-02-20T02:16:09.000Z',
                        ),
                        'DeviceStatus' => 
                        array (
                          'description' => '设备状态。取值：
- **ONLINE**：设备在线。
- **OFFLINE**：设备离线。
- **UNACTIVE**：设备未激活。
- **DISABLE**：设备已禁用。',
                          'type' => 'string',
                          'example' => 'ONLINE',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '设备信息最后一次更新时的时间，GMT格式。',
                          'type' => 'string',
                          'example' => 'Wed, 20-Feb-2019 02:16:09 GMT',
                        ),
                        'ProductKey' => 
                        array (
                          'description' => '设备所隶属的产品ProductKey。',
                          'type' => 'string',
                          'example' => 'a1BwAGV****',
                        ),
                        'UtcModified' => 
                        array (
                          'description' => '设备信息最后一次更新时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-02-20T02:16:09.000Z',
                        ),
                        'DeviceSecret' => 
                        array (
                          'description' => '设备密钥。',
                          'type' => 'string',
                          'example' => 'sLefbFmN9SYfnWLJTePG893XNuRV****',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '设备创建时间，GMT格式。',
                          'type' => 'string',
                          'example' => 'Wed, 20-Feb-2019 02:16:09 GMT',
                        ),
                        'Nickname' => 
                        array (
                          'description' => '设备的备注名称。',
                          'type' => 'string',
                          'example' => '智能灯设备',
                        ),
                        'IotId' => 
                        array (
                          'description' => '设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。',
                          'type' => 'string',
                          'example' => 'Q7uOhVRdZRRlDnTLv****00100',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"TGlzdFJlc291cm***\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"PageCount\\": 1,\\n  \\"Total\\": 2,\\n  \\"Page\\": 1,\\n  \\"Data\\": {\\n    \\"DeviceInfo\\": [\\n      {\\n        \\"DeviceName\\": \\"light\\",\\n        \\"DeviceId\\": \\"dwnS41bhNxjslDAI****\\",\\n        \\"DeviceType\\": \\"Lighting\\",\\n        \\"UtcCreate\\": \\"2019-02-20T02:16:09.000Z\\",\\n        \\"DeviceStatus\\": \\"ONLINE\\",\\n        \\"GmtModified\\": \\"Wed, 20-Feb-2019 02:16:09 GMT\\",\\n        \\"ProductKey\\": \\"a1BwAGV****\\",\\n        \\"UtcModified\\": \\"2019-02-20T02:16:09.000Z\\",\\n        \\"DeviceSecret\\": \\"sLefbFmN9SYfnWLJTePG893XNuRV****\\",\\n        \\"GmtCreate\\": \\"Wed, 20-Feb-2019 02:16:09 GMT\\",\\n        \\"Nickname\\": \\"智能灯设备\\",\\n        \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv****00100\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceResponse>\\n<PageCount>1</PageCount>\\n<NextToken>TGlzdFJlc291cm***</NextToken>\\n<Data>\\n    <DeviceInfo>\\n        <DeviceId>Av8NGHGtwPrH9BYG****</DeviceId>\\n        <DeviceName>Av8NGHGtwPrH9BYGLMBi</DeviceName>\\n        <ProductKey>a1dafDE****</ProductKey>\\n        <DeviceSecret>d7GYhf5hfcPHDe1bXSd3n9MjO1G3****</DeviceSecret>\\n        <UtcModified>2019-02-20T02:16:09.000Z</UtcModified>\\n        <GmtCreate>Wed, 20-Feb-2019 02:16:09 GMT</GmtCreate>\\n        <UtcCreate>2019-02-20T02:16:09.000Z</UtcCreate>\\n        <GmtModified>Wed, 20-Feb-2019 02:16:09 GMT</GmtModified>\\n        <IotId>Av8NGHGtwPrH9BYGLMBi00****</IotId>\\n        <DeviceStatus>UNACTIVE</DeviceStatus>\\n        <Nickname>SensorInShanghai</Nickname>\\n    </DeviceInfo>\\n    <DeviceInfo>\\n        <DeviceId>zNIcSmWQ9BPJlmkj****</DeviceId>\\n        <DeviceName>zNIcSmWQ9BPJlmkjn3H1</DeviceName>\\n        <ProductKey>a1dafDE****</ProductKey>\\n        <DeviceSecret>C27XXmC18yLIEDXvUj6FSlvgO7ag****</DeviceSecret>\\n        <UtcModified>2019-02-20T02:16:09.000Z</UtcModified>\\n        <GmtCreate>Wed, 20-Feb-2019 02:16:09 GMT</GmtCreate>\\n        <UtcCreate>2019-02-20T02:16:09.000Z</UtcCreate>\\n        <GmtModified>Wed, 20-Feb-2019 02:16:09 GMT</GmtModified>\\n        <IotId>zNIcSmWQ9BPJlmkjn3H100****</IotId>\\n        <DeviceStatus>UNACTIVE</DeviceStatus>\\n        <Nickname>DriverInShanghai</Nickname>\\n    </DeviceInfo>\\n</Data>\\n<Page>1</Page>\\n<PageSize>10</PageSize>\\n<RequestId>CD9E5F99-A095-4A05-9256-D924EA3075E8</RequestId>\\n<Success>true</Success>\\n<Total>2</Total>\\n</QueryDeviceResponse>","errorExample":""}]',
      'title' => '查询指定产品下的所有设备列表',
      'summary' => '调用该接口查询指定产品下的所有设备列表。',
      'description' => '## 使用说明
调用该接口，单次最多查询到100万个设备。

## QPS限制

- 单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
    > RAM用户共享阿里云账号配额。

- 当请求参数**CurrentPage**与**PageSize**的值相乘结果大于或等于100,000时，会降低调用该接口的QPS。
    此时，单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的设备所属的产品**ProductKey**。

><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1FlqIQ****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要删除的设备的名称。

><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的设备ID。

><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'MpEKNuEUJzIORNANAWJX0010929900*****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.prod.NullProductKey',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '入参产品ID没有赋值。',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '57b144cf-09fc-4916-a272-a62902d5b207',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'false',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.prod.NullProductKey\\",\\n  \\"ErrorMessage\\": \\"入参产品ID没有赋值。\\",\\n  \\"RequestId\\": \\"57b144cf-09fc-4916-a272-a62902d5b207\\",\\n  \\"Success\\": false\\n}","errorExample":""},{"type":"xml","example":"<DeleteDeviceResponse>\\n<RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n<Success>true</Success>\\n</DeleteDeviceResponse>","errorExample":""}]',
      'title' => 'DeleteDevice',
      'summary' => 'Deletes a device. You can also call this operation to delete the topological relationships between a gateway and the sub-devices that are connected to the gateway.',
      'description' => '## 使用说明
**调用本接口前须知**

- 使用主账号登录时，物联网平台会进行短信验证，以确认是您本人操作。
- 使用RAM用户账号时，物联网平台默认无需短信验证。为保障设备安全，您可创建自定义权限策略进行精细化权限管理。具体内容，请参见[IoT授权映射表](~~47485~~)和[自定义权限](~~47495~~)。

><warning>
- 设备删除后，设备ID（**IotId**）将失效，与设备关联的其他信息也一并删除，您将无法执行与该设备关联的任何操作。
- 在物联网平台控制台删除设备前，对应的真实设备必须离线。否则，在物联网平台删除该设备后，真实设备会一直向物联网平台发起建连请求，发起请求数超出限制后，触发物联网平台的限流机制，会影响您当前账号下设备的正常接入。
- 设备删除后，该设备证书会失效，且不能恢复。请谨慎操作。

></warning>

**调用本接口时**

- 传入请求参数时，需传入**IotId**或**ProductKey**与**DeviceName**组合，用于指定设备。
- 如果指定设备是网关设备，且其子设备数量超过2000个，调用本接口会创建删除设备拓扑关系的设备任务，以异步方式删除拓扑关系，并返回参数**JobId** （任务ID）。<props="china"><ph>您可通过调用接口[QueryJob](~~198577~~)，查看任务执行结果。</ph></props>


## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDeviceStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属产品的ProductKey。
> 如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。
> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回设备状态信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '设备状态。取值：
- **ONLINE**：设备在线。
- **OFFLINE**：设备离线。
- **UNACTIVE**：设备未激活。
- **DISABLE**：设备已禁用。',
                    'type' => 'string',
                    'example' => 'ONLINE',
                  ),
                  'Timestamp' => 
                  array (
                    'description' => '设备状态变更时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1557062301656',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Status\\": \\"ONLINE\\",\\n    \\"Timestamp\\": 1557062301656\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetDeviceStatusResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <Status>ONLINE</Status>\\n    <Timestamp>1557062301656</Timestamp>\\n</Data>\\n<Success>true</Success>\\n</GetDeviceStatusResponse>","errorExample":""}]',
      'title' => '查看指定设备的运行状态',
      'summary' => '调用该接口查看指定设备的运行状态。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchGetDeviceState' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查看运行状态的设备所属的产品**ProductKey**。
><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要查看运行状态的设备的名称列表。
><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>
',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'light',
            'maxItems' => 51,
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要查看运行状态的设备ID列表。
><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
            'maxItems' => 51,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DeviceStatusList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DeviceStatus' => 
                  array (
                    'description' => '调用成功时，返回设备状态信息列表，请参见**DeviceStatus**下的参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '设备状态。取值：
- **ONLINE**：设备在线。
- **OFFLINE**：设备离线。
- **UNACTIVE**：设备未激活。
- **DISABLE**：设备已禁用。',
                          'type' => 'string',
                          'example' => 'OFFLINE',
                        ),
                        'LastOnlineTime' => 
                        array (
                          'description' => '设备最后一次上线的时间。',
                          'type' => 'string',
                          'example' => '2020-01-17 16:19:11',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'light',
                        ),
                        'DeviceId' => 
                        array (
                          'description' => '设备ID（旧版参数）。

> 该参数是旧版本遗留参数，已无实际作用，不能用来标识设备。目前，有效的设备标识符为**IotId**和**ProductKey**与**DeviceName**组合。',
                          'type' => 'string',
                          'example' => 'dwnS41bhNxjslDAI****',
                        ),
                        'Timestamp' => 
                        array (
                          'description' => '设备状态变更时间。单位为毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1557062301656',
                        ),
                        'AsAddress' => 
                        array (
                          'description' => '设备IP地址。',
                          'type' => 'string',
                          'example' => '192.0.2.1',
                        ),
                        'IotId' => 
                        array (
                          'description' => '设备ID，物联网平台为设备颁发的唯一标识。',
                          'type' => 'string',
                          'example' => 'dwnS41bhNxjslDAI****000100',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"DeviceStatusList\\": {\\n    \\"DeviceStatus\\": [\\n      {\\n        \\"Status\\": \\"OFFLINE\\",\\n        \\"LastOnlineTime\\": \\"2020-01-17 16:19:11\\",\\n        \\"DeviceName\\": \\"light\\",\\n        \\"DeviceId\\": \\"dwnS41bhNxjslDAI****\\",\\n        \\"Timestamp\\": 1557062301656,\\n        \\"AsAddress\\": \\"192.0.2.1\\",\\n        \\"IotId\\": \\"dwnS41bhNxjslDAI****000100\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<BatchGetDeviceStateResponse>\\n<DeviceStatusList>\\n    <DeviceStatus>\\n        <Status>OFFLINE</Status>\\n        <DeviceId>dwnS41bhNxjslDAI****</DeviceId>\\n        <DeviceName>Humidity</DeviceName>\\n        <AsAddress>192.0.2.1</AsAddress>\\n        <LastOnlineTime>2020-01-17 16:19:11</LastOnlineTime>\\n        <Timestamp>1557062301656</Timestamp>\\n        <IotId>dwnS41bhNxjslDAI****000100</IotId>\\n    </DeviceStatus>\\n</DeviceStatusList>\\n<RequestId>3258D872-EDC5-4039-B564-C27ED7176741</RequestId>\\n<Success>true</Success>\\n</BatchGetDeviceStateResponse>","errorExample":""}]',
      'title' => '批量查看同一产品下指定设备的运行状态',
      'summary' => '调用该接口批量查看同一产品下指定设备的运行状态。',
      'description' => '## 使用说明
调用本接口时：
- 请求参数同时传入**ProductKey**和多个**DeviceName**：查询同一产品多个设备的运行状态。
- 请求参数传入多个**IotId**：可传入不同产品下设备的**IotId**，查询不同产品下设备的运行状态。

><notice>单次调用本接口最多可查询50个设备的运行状态。
></notice>

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
 > 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableThing' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属的产品**ProductKey**。
> 如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。
> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要禁用设备的ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DisableThingResponse>\\n<RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n<Success>true</Success>\\n</DisableThingResponse>","errorExample":""}]',
      'title' => '禁用指定设备',
      'summary' => '调用该接口禁用指定设备。',
      'description' => '## 使用说明
设备被禁用后将不能接入物联网平台，您将无法执行与设备有关的操作，但与设备关联的信息依然保留。您可以调用[EnableThing](~~69603~~)接口重新接入被禁用的设备。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。
 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableThing' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解除禁用的设备所属的产品ProductKey。
> 如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解除禁用的设备名称。
> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解除禁用设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<EnableThingResponse>\\n<RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n<Success>true</Success>\\n</EnableThingResponse>","errorExample":""}]',
      'title' => '启用指定设备',
      'summary' => '调用该接口解除指定设备的禁用状态，即启用被禁用的设备。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ResetThing' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要重置的设备所属的产品ProductKey。

> 如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1KiV******',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定重置的设备的名称。

> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'device1',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要重置的设备ID。

> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，与**ProductKey**和**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'SR8FiTu1R9tlUR2V1bmi0010a5****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '57b144cf-09fc-4916-a272-a62902d5b207',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。**true**表示调用成功，**false**表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'JobId' => 
              array (
                'description' => '设备任务ID，设备任务的全局唯一标识符。',
                'type' => 'string',
                'example' => '450407b***',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"57b144cf-09fc-4916-a272-a62902d5b207\\",\\n  \\"Success\\": true,\\n  \\"JobId\\": \\"450407b***\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\'1.0\' encoding=\'utf-8\'?>\\r\\n<ResetThingResponse>\\r\\n    <RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\r\\n    <Success>true</Success>\\r\\n</ResetThingResponse>","errorExample":""}]',
      'title' => '重置设备',
      'summary' => '重置指定设备，重置直连设备一型一密状态，同时删除当前设备的拓扑关系。',
      'description' => '## 使用说明

- 如果直连设备通过动态注册获取设备证书信息（ProductKey、DeviceName和DeviceSecret）并激活后，您可调用本接口，重置设备的动态注册状态为未注册，然后再次通过动态注册获取设备证书信息。
    > 调用本接口是重置设备动态注册状态，不是重置设备激活状态，即物联网平台控制台对应设备的状态不会重置为未激活。

- 如果指定设备是网关设备，且其子设备数量超过2000个，调用本接口会创建删除设备拓扑关系的设备任务，以异步方式删除拓扑关系，并返回参数**JobId** （任务ID）。<props="china"><ph>您可通过调用接口[QueryJob](~~198577~~)，查看任务执行结果。</ph></props>


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。
> RAM用户共享阿里云账号配额。


',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchCheckDeviceNames' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要注册的设备所属的产品ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10000,
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceNameList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'DeviceNickname' => 
                array (
                  'type' => 'string',
                  'required' => false,
                ),
                'DeviceName' => 
                array (
                  'type' => 'string',
                  'required' => false,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。
',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'ApplyId' => 
                  array (
                    'description' => '调用成功时，系统返回的申请批次ID。使用该ApplyId，调用[BatchRegisterDeviceWithApplyId](~~69514~~)接口来批量创建设备。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1295006',
                  ),
                  'InvalidDetailList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'InvalidDetailList' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'NickName' => 
                            array (
                              'type' => 'string',
                            ),
                            'ErrorMsg' => 
                            array (
                              'type' => 'string',
                            ),
                            'DeviceName' => 
                            array (
                              'type' => 'string',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'RepeatedDeviceNameList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'RepeatDevieNameList' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                  'InvalidDeviceNameList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'InvalidDeviceName' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '调用失败时，返回的不合法设备名称列表。',
                          'type' => 'string',
                          'example' => '{ "InvalidDeviceName": [ "APT$", "aw" ] }',
                        ),
                      ),
                    ),
                  ),
                  'InvalidDeviceNicknameList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'InvalidDeviceNickname' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '调用失败时，返回的不合法设备备注名称列表。',
                          'type' => 'string',
                          'example' => '{ "InvalidDeviceNickname": [ "APT$", "aw" ] }',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ApplyId\\": 1295006,\\n    \\"InvalidDetailList\\": {\\n      \\"InvalidDetailList\\": [\\n        {\\n          \\"NickName\\": \\"\\",\\n          \\"ErrorMsg\\": \\"\\",\\n          \\"DeviceName\\": \\"\\"\\n        }\\n      ]\\n    },\\n    \\"RepeatedDeviceNameList\\": {\\n      \\"RepeatDevieNameList\\": [\\n        \\"\\"\\n      ]\\n    },\\n    \\"InvalidDeviceNameList\\": {\\n      \\"InvalidDeviceName\\": [\\n        \\"{ \\\\\\"InvalidDeviceName\\\\\\": [ \\\\\\"APT$\\\\\\", \\\\\\"aw\\\\\\" ] }\\"\\n      ]\\n    },\\n    \\"InvalidDeviceNicknameList\\": {\\n      \\"InvalidDeviceNickname\\": [\\n        \\"{ \\\\\\"InvalidDeviceNickname\\\\\\": [ \\\\\\"APT$\\\\\\", \\\\\\"aw\\\\\\" ] }\\"\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<BatchCheckDeviceNamesResponse>\\n<Data>\\n    <ApplyId>1234567</ApplyId>\\n</Data>\\n<RequestId>E976E36B-6874-4FA4-8BC0-55F9BEC5E2EF</RequestId>\\n<Success>true</Success>\\n</BatchCheckDeviceNamesResponse>","errorExample":""}]',
      'title' => 'BatchCheckDeviceNames',
      'summary' => '调用该接口在指定产品下批量自定义设备名称。物联网平台将检查名称的合法性。',
      'description' => '## 使用说明
该接口和**BatchRegisterDeviceWithApplyId**接口结合使用，在一个产品下批量注册多个设备，并且为每个设备单独命名。
批量注册设备流程：

1. 调用本接口，传入要批量注册的设备的名称，物联网平台返回申请批次ID（**ApplyId**）。返回成功结果，表示批量校验设备名称的申请已经提交成功。实际的校验是异步执行的，会有一个过程。
2. 调用[QueryBatchRegisterDeviceStatus](~~69483~~)查看名称设置结果。
3.  调用[BatchRegisterDeviceWithApplyId](~~69514~~)批量注册设备。
4. （可选）调用[QueryBatchRegisterDeviceStatus](~~69483~~)查看设备注册结果。
5. 调用[QueryPageByApplyId](~~69518~~)查看批量注册的设备信息。

## 使用限制
单次调用，最多能定义1,0000 个设备名称。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享该阿里云账号配额。

',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchRegisterDeviceWithApplyId' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要批量注册的设备所属的产品**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'ApplyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要批量注册的设备的申请批次ID。申请批次ID由调用[BatchCheckDeviceNames](~~69482~~)接口生成。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1295006',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据，详情请参见以下参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'ApplyId' => 
                  array (
                    'description' => '申请批次ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1295006',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ApplyId\\": 1295006\\n  }\\n}","errorExample":""},{"type":"xml","example":"<BatchRegisterDeviceWithApplyIdResponse>\\n<Data>\\n    <ApplyId>1234567</ApplyId>\\n</Data>\\n<RequestId>82C16DC1-41B5-45F8-9AFD-1FB42448D405</RequestId>\\n<Success>true</Success>\\n</BatchRegisterDeviceWithApplyIdResponse>","errorExample":""}]',
      'title' => '批量注册设备',
      'summary' => '根据申请批次ID（ApplyId）批量注册设备。',
      'description' => '## 使用说明
批量注册设备有两种方式：
- 由系统随机生成设备名称：请调用[BatchRegisterDevice](~~69473~~)接口。
- 自定义设备名称：需本接口与**BatchCheckDeviceNames**等接口结合实现。请按以下流程操作：
    1. 调用[BatchCheckDeviceNames](~~69482~~)接口，传入要批量注册的设备的名称。物联网平台检查您提交的设备名称符合要求后，返回申请批次ID（**ApplyId**）。**ApplyId**将用于设备名称校验结果查询、批量设备注册和设备信息查询。
    2. 调用[QueryBatchRegisterDeviceStatus](~~69483~~)接口，根据申请批次ID，查看名称校验结果。请确保自定义设备名称全部校验通过，再执行后续操作完成设备注册。    
        > 如果有校验失败的设备名称，请根据错误信息提示进行修正，然后重新调用[BatchCheckDeviceNames](~~69482~~)接口获取新的申请批次ID（**ApplyId**）后，再次调用[QueryBatchRegisterDeviceStatus](~~69483~~)接口确认全部设备名称校验通过。

    3. 调用本接口批量注册设备。本接口调用返回的成功结果，仅表示批量注册的申请已经提交成功。实际的注册会有一个过程。
    4. （可选）调用[QueryBatchRegisterDeviceStatus](~~69483~~)查看设备注册结果。
    5. 调用[QueryPageByApplyId](~~69518~~)查看批量注册的设备信息。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchRegisterDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要批量注册的设备所隶属的产品ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'Count',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要注册的设备数量。

> 单次调用，最多可创建10,000个设备。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'ApplyId' => 
                  array (
                    'description' => '调用成功时，系统返回的申请批次ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1295006',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ApplyId\\": 1295006\\n  }\\n}","errorExample":""},{"type":"xml","example":"<BatchRegisterDeviceResponse>\\n<Data>\\n    <ApplyId>12345678</ApplyId>\\n</Data>\\n<RequestId>92C67DC1-41B5-45F8-9AFD-1FB42448D405</RequestId>\\n<Success>true</Success>\\n</BatchRegisterDeviceResponse>","errorExample":""}]',
      'title' => '批量注册设备',
      'summary' => '指定产品下批量注册多个设备（随机生成设备名）。',
      'description' => '## 批量注册设备方式说明
批量注册设备有两种方式：

- 由系统随机生成设备名称：调用本接口。
建议按照以下流程注册设备和查看结果。

    1. 调用本接口批量注册设备。返回成功结果，表示批量注册的申请已经提交成功。实际的注册是异步执行，会有一个过程。

    2. 调用[QueryBatchRegisterDeviceStatus](~~69483~~)查看设备注册结果。

    3. 调用[QueryPageByApplyId](~~69518~~)查看批量注册的设备信息（DeviceName、DeviceSecret、IotId）。

- 自定义设备名称：请参见[BatchRegisterDeviceWithApplyId](~~69514~~)。

## 使用说明
单次调用，最多可创建1,0000个设备。
## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchUpdateDeviceNickname' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'DeviceNicknameInfo',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要修改备注名称的设备列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ProductKey' => 
                array (
                  'description' => '要修改备注名称的设备所隶属的产品ProductKey。
> 如果传入该参数，需同时传入**DeviceName**。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'a1BwAGV****',
                ),
                'DeviceName' => 
                array (
                  'description' => '要修改备注名称的设备名称。
> 如果传入该参数，需同时传入**ProductKey**。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'light',
                ),
                'Nickname' => 
                array (
                  'description' => '新的设备备注名称。备注名称长度为4~32个字符，可包含中文汉字、英文字母、数字和下划线（_）。一个中文汉字算2个字符。

> 若不传入该参数，则删除该设备原有的备注名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'AliyunDataCenter',
                ),
                'IotId' => 
                array (
                  'description' => '要修改备注名称的设备ID。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Q7uOhVRdZRRlDnTLv****00100',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchUpdateDeviceNicknameResponse>\\n<RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n<Success>true</Success>\\n</BatchUpdateDeviceNicknameResponse>","errorExample":""}]',
      'title' => 'BatchUpdateDeviceNickname',
      'summary' => '调用该接口批量修改设备备注名称。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryBatchRegisterDeviceStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备所属的产品**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'ApplyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的申请批次ID。

申请批次ID在成功调用[BatchCheckDeviceNames](~~69482~~)或[BatchRegisterDevice](~~69473~~)接口的返回结果中。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1295006',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。

> 目前仅华东2（cn-shanghai）地域支持设备X.509证书，如果地域不是华东2（cn-shanghai），则不能生成X.509证书，返回错误码iot.device.RegionNotSupportX509。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的状态信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '申请单的处理状态和结果，取值：

- **CHECK**：正在校验设备名称。

- **CHECK_SUCCESS**：申请单中的所有设备名称校验成功。

- **CHECK_FAILED**：申请单中有设备名称校验失败。

- **CREATE**：正在创建设备。

- **CREATE_SUCCESS**：申请单中的所有设备创建成功。
    > 当设备所属产品的认证类型是X.509证书时，表示所有设备和对应的X.509证书都创建成功。

- **CREATE_FAILED**：申请单中有设备创建失败。

    > 当设备所属产品的认证类型是X.509时，只要当前批次中，任意一个设备或X.509证书创建失败，则返回创建失败。',
                    'type' => 'string',
                    'example' => 'CREATE_SUCCESS',
                  ),
                  'InvalidDetailList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'invalidDetailList' => 
                      array (
                        'description' => '- 当返回**Status**参数值为**CHECK_FAILED**或**CREATE_FAILED**时，表示有设备创建失败，该参数返回创建失败的设备的详情集合。
- 当返回**Status**参数值为**CHECK_SUCCESS**或**CREATE_SUCCESS**时，表示所有设备创建成功，无需返回失败详情，该参数为空数组。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ErrorMsg' => 
                            array (
                              'description' => '创建设备失败，返回的出错信息。

> 多个出错信息间使用竖线（|）隔开。',
                              'type' => 'string',
                              'example' => 'The nick name is illegal.',
                            ),
                            'NickName' => 
                            array (
                              'description' => '设备的备注名称。',
                              'type' => 'string',
                              'example' => '园区灯-1',
                            ),
                            'DeviceName' => 
                            array (
                              'description' => '设备名称。',
                              'type' => 'string',
                              'example' => 'light',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'InvalidList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Name' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '- 当返回**Status**参数值为**CHECK_FAILED**或**CREATE_FAILED**时，表示有设备创建失败，该参数返回创建失败的设备名称集合。
- 当返回**Status**参数值为**CHECK_SUCCESS**或**CREATE_SUCCESS**时，表示所有设备创建成功，无需返回设备列表，该参数为空数组。',
                          'type' => 'string',
                          'example' => '{ "Name": ["Elec_instrument"] }',
                        ),
                      ),
                    ),
                  ),
                  'ValidList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Name' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '- 当返回**Status**参数值为**CHECK_FAILED**或**CREATE_FAILED**时，表示有设备创建失败，该参数返回创建成功的设备名称集合。
- 当返回**Status**参数值为**CHECK_SUCCESS**或**CREATE_SUCCESS**时，表示所有设备创建成功，无需返回设备列表，该参数为空数组。',
                          'type' => 'string',
                          'example' => '{ "Name": ["light3"] }',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Status\\": \\"CREATE_SUCCESS\\",\\n    \\"InvalidDetailList\\": {\\n      \\"invalidDetailList\\": [\\n        {\\n          \\"ErrorMsg\\": \\"The nick name is illegal.\\",\\n          \\"NickName\\": \\"园区灯-1\\",\\n          \\"DeviceName\\": \\"light\\"\\n        }\\n      ]\\n    },\\n    \\"InvalidList\\": {\\n      \\"Name\\": [\\n        \\"{ \\\\\\"Name\\\\\\": [\\\\\\"Elec_instrument\\\\\\"] }\\"\\n      ]\\n    },\\n    \\"ValidList\\": {\\n      \\"Name\\": [\\n        \\"{ \\\\\\"Name\\\\\\": [\\\\\\"light3\\\\\\"] }\\"\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryBatchCheckDeviceNamesStatusResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <Status>CREATE_SUCCESS</Status>\\n    <InvalidDetailList>\\n        <invalidDetailList>\\n            <ErrorMsg>The nick name is illegal. | The nick name is illegal.</ErrorMsg>\\n            <NickName>园区灯-1</NickName>\\n            <DeviceName>Elec_instrument</DeviceName>\\n        </invalidDetailList>\\n    </InvalidDetailList>\\n    <ValidList>\\n        <Name>light3</Name>\\n    </ValidList>\\n    <InvalidList>\\n        <Name>Elec_instrument</Name>\\n    </InvalidList>\\n</Data>\\n<Code/>\\n<Success>true</Success>\\n</QueryBatchCheckDeviceNamesStatusResponse>","errorExample":""}]',
      'title' => '查询批量注册设备申请的处理状态和结果',
      'summary' => '调用该接口查询批量注册设备申请的处理状态和结果。',
      'description' => '## 使用说明

批量注册设备时，可调用本接口根据申请批次ID（**ApplyId**），查看设备名称校验结果或注册结果。

使用自定义设备名称批量注册设备时，必须先调用本接口确保自定义设备名称全部校验通过，再调用[BatchRegisterDeviceWithApplyId](~~69514~~)接口根据对应申请批次ID完成设备注册。

> - 如果有校验失败的设备名称，请根据错误信息提示进行修正，然后重新调用[BatchCheckDeviceNames](~~69482~~)接口获取新的申请批次ID（**ApplyId**）后，再次调用**QueryBatchRegisterDeviceStatus**接口确认全部设备名称校验通过。
- 如果返回的**Status**为**CHECK**，请耐心等待。批量注册设备有一个过程，您可再次调用本接口查看**Status**确认全部设备名称校验通过。

使用自定义设备名称批量注册设备的完整流程，请参见[BatchCheckDeviceNames](~~69482~~)的**使用说明**。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为30。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryPageByApplyId' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的记录数量。数量限制：每页最多可显示50条。默认值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ApplyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的申请批次ID。申请批次ID可在[BatchRegisterDeviceWithApplyId](~~69514~~)和[BatchRegisterDevice](~~69473~~)接口返回结果中查看。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1295006',
          ),
        ),
        3 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。默认值是1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的设备数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '该批次的设备总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PageCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Page' => 
              array (
                'description' => '当前页面号。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'ApplyDeviceList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ApplyDeviceInfo' => 
                  array (
                    'description' => '调用成功时，生成的已注册的设备列表（**ApplyDeviceInfo**）。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'light',
                        ),
                        'DeviceId' => 
                        array (
                          'description' => '设备ID（旧版参数）。

> 该参数是旧版本遗留参数，已无实际作用，不能用来标识设备。目前有效的设备标识符为**IotId**和**ProductKey**与**DeviceName**组合。',
                          'type' => 'string',
                          'example' => 'gQG2GJ2y10m6hIk8****',
                        ),
                        'IotId' => 
                        array (
                          'description' => '设备ID，物联网平台为该设备颁发的唯一标识符。',
                          'type' => 'string',
                          'example' => 'vWxNur6BUApsqjv9****000100',
                        ),
                        'DeviceSecret' => 
                        array (
                          'description' => '设备密钥。',
                          'type' => 'string',
                          'example' => 'SkfeXXKrTgp1DbDxYr74mfJ5cnui****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 2,\\n  \\"PageCount\\": 1,\\n  \\"Page\\": 1,\\n  \\"ApplyDeviceList\\": {\\n    \\"ApplyDeviceInfo\\": [\\n      {\\n        \\"DeviceName\\": \\"light\\",\\n        \\"DeviceId\\": \\"gQG2GJ2y10m6hIk8****\\",\\n        \\"IotId\\": \\"vWxNur6BUApsqjv9****000100\\",\\n        \\"DeviceSecret\\": \\"SkfeXXKrTgp1DbDxYr74mfJ5cnui****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryPageByApplyIdResponse>\\n<PageCount>1</PageCount>\\n<ApplyDeviceList>\\n    <ApplyDeviceInfo>\\n        <DeviceId>vWxNur6BUApsqjv9****</DeviceId>\\n        <DeviceName>APItest</DeviceName>\\n        <DeviceSecret>tXXEtily4XuV7WS1fosJoDkhRIIU****</DeviceSecret>\\n        <IotId>vWxNur6BUApsqjv****4000100</IotId>\\n    </ApplyDeviceInfo>\\n    <ApplyDeviceInfo>\\n        <DeviceId>hoiwszKPYmHk074H****</DeviceId>\\n        <DeviceName>awfg</DeviceName>\\n        <DeviceSecret>BYpg1b2nmuq21BO7fxOogYQQZd9z****</DeviceSecret>\\n        <IotId>hoiwszKPYmHk074HA****000100</IotId>\\n    </ApplyDeviceInfo>\\n</ApplyDeviceList>\\n<Page>1</Page>\\n<PageSize>10</PageSize>\\n<RequestId>762F7AAD-8B87-4C65-BBF3-4575B002B384</RequestId>\\n<Success>true</Success>\\n<Total>2</Total>\\n</QueryPageByApplyIdResponse>","errorExample":""}]',
      'title' => '查询批量注册的设备信息',
      'summary' => '调用该接口查询批量注册的设备信息。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetGatewayBySubDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '子设备所隶属的产品ProductKey。
> 如果传入该参数，需同时传入**DeviceName**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '子设备名称。
> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '子设备ID。物联网平台为该子设备颁发的ID，设备的唯一标识符。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的网关设备的详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '网关设备状态。取值：
- **online**：设备在线。
- **offline**：设备离线。
- **unactive**：设备未激活。
- **disable**：设备已禁用',
                    'type' => 'string',
                    'example' => 'online',
                  ),
                  'UtcActive' => 
                  array (
                    'description' => '网关设备的激活时间，UTC格式，世界标准时间。用户所在地实际时间，可根据当地时差计算。',
                    'type' => 'string',
                    'example' => '2019-12-18T15:25:30.176Z',
                  ),
                  'ProductName' => 
                  array (
                    'description' => '网关设备隶属的产品名称。',
                    'type' => 'string',
                    'example' => 'LinkIoT',
                  ),
                  'DeviceName' => 
                  array (
                    'description' => '网关设备名称。',
                    'type' => 'string',
                    'example' => 'gateway',
                  ),
                  'FirmwareVersion' => 
                  array (
                    'description' => '网关设备的固件版本号。',
                    'type' => 'string',
                    'example' => 'V1.0.1',
                  ),
                  'UtcCreate' => 
                  array (
                    'description' => '网关设备的创建时间，UTC格式，世界标准时间。用户所在地实际时间，可根据当地时差计算。',
                    'type' => 'string',
                    'example' => '2019-12-18T08:58:33.000Z',
                  ),
                  'region' => 
                  array (
                    'description' => '网关设备所在地域（与控制台上的地域对应）。',
                    'type' => 'string',
                    'example' => 'cn-shanghai',
                  ),
                  'GmtOnline' => 
                  array (
                    'description' => '网关设备最近一次上线的时间，GMT格式，是用户所在地的当地时间。',
                    'type' => 'string',
                    'example' => '2020-01-20 17:41:04',
                  ),
                  'iotId' => 
                  array (
                    'description' => '物联网平台为该网关设备颁发的ID，作为该设备的唯一标识符。',
                    'type' => 'string',
                    'example' => 'WuyjPSDQE1L22z1d****000100',
                  ),
                  'UtcOnline' => 
                  array (
                    'description' => '网关设备最近一次上线的时间，UTC格式，世界标准时间。用户所在地实际时间，可根据当地时差计算。',
                    'type' => 'string',
                    'example' => '2020-01-20T09:41:04.879Z',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => '网关设备隶属的产品**ProductKey**。',
                    'type' => 'string',
                    'example' => 'a1BwAGV****',
                  ),
                  'IpAddress' => 
                  array (
                    'description' => '网关设备的IP地址。',
                    'type' => 'string',
                    'example' => '106.**.1**.**',
                  ),
                  'NodeType' => 
                  array (
                    'description' => '节点类型，取值为1，表示该设备为网关设备。',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'DeviceSecret' => 
                  array (
                    'description' => '网关设备密钥。',
                    'type' => 'string',
                    'example' => 'dCYdTU3gw5Z77bsHjPk6lPHPVnBT****',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '网关设备的创建时间，GMT格式，是用户所在地的当地时间。',
                    'type' => 'string',
                    'example' => '2019-12-18 16:58:33',
                  ),
                  'GmtActive' => 
                  array (
                    'description' => '网关设备的激活时间，GMT格式，是用户所在地的当地时间。',
                    'type' => 'string',
                    'example' => '2019-12-18 23:25:30',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Status\\": \\"online\\",\\n    \\"UtcActive\\": \\"2019-12-18T15:25:30.176Z\\",\\n    \\"ProductName\\": \\"LinkIoT\\",\\n    \\"DeviceName\\": \\"gateway\\",\\n    \\"FirmwareVersion\\": \\"V1.0.1\\",\\n    \\"UtcCreate\\": \\"2019-12-18T08:58:33.000Z\\",\\n    \\"region\\": \\"cn-shanghai\\",\\n    \\"GmtOnline\\": \\"2020-01-20 17:41:04\\",\\n    \\"iotId\\": \\"WuyjPSDQE1L22z1d****000100\\",\\n    \\"UtcOnline\\": \\"2020-01-20T09:41:04.879Z\\",\\n    \\"ProductKey\\": \\"a1BwAGV****\\",\\n    \\"IpAddress\\": \\"106.**.1**.**\\",\\n    \\"NodeType\\": \\"1\\",\\n    \\"DeviceSecret\\": \\"dCYdTU3gw5Z77bsHjPk6lPHPVnBT****\\",\\n    \\"GmtCreate\\": \\"2019-12-18 16:58:33\\",\\n    \\"GmtActive\\": \\"2019-12-18 23:25:30\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetGatewayBySubDeviceResponse>\\n<Data>\\n    <region>cn-shanghai</region>\\n    <DeviceName>gateway_04</DeviceName>\\n    <GmtActive>2019-12-18 23:25:30</GmtActive>\\n    <ProductKey>a1vL7cp****</ProductKey>\\n    <IpAddress>106.**.1**.**</IpAddress>\\n    <GmtCreate>2019-12-18 16:58:33</GmtCreate>\\n    <UtcCreate>2019-12-18T08:58:33.000Z</UtcCreate>\\n    <UtcOnline>2020-01-20T09:41:04.879Z</UtcOnline>\\n    <UtcActive>2019-12-18T15:25:30.176Z</UtcActive>\\n    <Status>online</Status>\\n    <NodeType>1</NodeType>\\n    <GmtOnline>2020-01-20 17:41:04</GmtOnline>\\n    <ProductName>LinkIoTEdge_Gateway</ProductName>\\n    <iotId>WuyjPSDQE1L22z1****000100</iotId>\\n</Data>\\n<RequestId>0377D5A9-BDE1-48C2-96C9-BDC048899186</RequestId>\\n<Success>true</Success>\\n</GetGatewayBySubDeviceResponse>","errorExample":""}]',
      'title' => '查询网关设备信息',
      'summary' => '根据挂载的子设备信息查询对应的网关设备信息。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

 > RAM用户共享该阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceProp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备所隶属的产品ProductKey。
> 如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备名称。
> 如果传入该参数，需同时传入**ProductKey**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Props' => 
              array (
                'description' => '调用成功时，返回的设备标签信息列表，JSON String格式。',
                'type' => 'string',
                'example' => '{"coordinate":"104.07086:30.549169"}',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Props\\": \\"{\\\\\\"coordinate\\\\\\":\\\\\\"104.07086:30.549169\\\\\\"}\\",\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<QueryDevicePropResponse>\\n<RequestId>D8CEF5E7-1484-4164-A242-C06BA3A54E0F</RequestId>\\n<Props>{\\"coordinate\\":\\"104.07086:30.549169\\"}</Props>\\n<Success>true</Success>\\n</QueryDevicePropResponse>","errorExample":""}]',
      'title' => '查询指定设备的标签列表',
      'summary' => '调用该接口查询指定设备的标签列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SaveDeviceProp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属的产品ProductKey。
> 如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。
> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'Props',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要设置的设备标签，支持设置多个标签。

设备标签是JSON格式，每个标签的具体结构为：**Key:Value**。**Key**是标签名称，**Value**是对应的标签值。

多个标签使用半角逗号隔开，例如**Props={"color":"red","shape":"round"}**。

 ><notice> 
- **Props**的总大小不超过5 KB。
- `abc`为物联网平台系统保留的标签**Key**，即标签**Key**不能设置为abc。若设置`Key=abc`，使用标签检索时会直接被过滤。

></notice>',
            'type' => 'string',
            'required' => true,
            'example' => '{"color":"red"}',
          ),
        ),
        4 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SaveDevicePropResponse>\\n<RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n<Success>true</Success>\\n</SaveDevicePropResponse>","errorExample":""}]',
      'title' => '为指定设备设置标签',
      'summary' => '调用该接口为指定设备设置标签。',
      'description' => '## 使用说明

 - 单个设备的设备标签总数不超过100个。
 - 单次修改或新增的设备标签数不超过100个。


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDeviceProp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签所属设备隶属的产品ProductKey。
> 如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签所属设备的名称。
> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'PropKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的设备标签键值（Key）。

> 物联网平台在目标设备的标签中检索您提供的Key值，并删除与之对应的标签。如果目标设备的标签中没有与您提供的Key值对应的记录，则不执行任何操作。',
            'type' => 'string',
            'required' => true,
            'example' => 'room',
          ),
        ),
        4 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标签所属设备的ID
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteDevicePropResponse>\\n<RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n<Success>true</Success>\\n</DeleteDevicePropResponse>","errorExample":""}]',
      'title' => '删除设备下的指定标签',
      'summary' => '调用该接口删除设备下的指定标签。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceByTags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。默认值是1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的设备记录数量，最大值是50。默认值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'TagValue' => 
                array (
                  'description' => '设备标签的值。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '101',
                ),
                'TagKey' => 
                array (
                  'description' => '设备标签的Key。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'room',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的记录数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '总记录数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Page' => 
              array (
                'description' => '当前页面号。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SimpleDeviceInfo' => 
                  array (
                    'description' => '调用成功时，返回的设备信息列表（**SimpleDeviceInfo**）。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ProductKey' => 
                        array (
                          'description' => '设备所属产品的ProductKey。',
                          'type' => 'string',
                          'example' => 'a1BwAGV****',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '产品名称。',
                          'type' => 'string',
                          'example' => 'lamp',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'light1',
                        ),
                        'IotId' => 
                        array (
                          'description' => '物联网平台为该设备颁发的ID，作为该设备的唯一标识符。',
                          'type' => 'string',
                          'example' => 'Q7uOhVRdZRRlDnTLv****00100',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 1,\\n  \\"PageCount\\": 1,\\n  \\"Page\\": 1,\\n  \\"Data\\": {\\n    \\"SimpleDeviceInfo\\": [\\n      {\\n        \\"ProductKey\\": \\"a1BwAGV****\\",\\n        \\"ProductName\\": \\"lamp\\",\\n        \\"DeviceName\\": \\"light1\\",\\n        \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv****00100\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceByTags>\\n<PageCount>1</PageCount>\\n<Data>\\n    <SimpleDeviceInfo>\\n        <DeviceName>1102jichu02</DeviceName>\\n        <ProductKey>a1SM5S1****</ProductKey>\\n        <IotId>GookTiUcwqRbHosp9Ta10****3a00</IotId>\\n        <ProductName>TEST</ProductName>\\n    </SimpleDeviceInfo>\\n</Data>\\n<PageSize>10</PageSize>\\n<Page>1</Page>\\n<RequestId>2B5091E4-32D5-4884-A5B2-2E8E713D84AF</RequestId>\\n<Success>true</Success>\\n<Total>1</Total>\\n</QueryDeviceByTags>","errorExample":""}]',
      'title' => 'QueryDeviceByTags',
      'summary' => '调用该接口通过标签查询设备。',
      'description' => '## 使用说明
单次调用，最多可输入10个标签。
## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetThingTopo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数量。最大值不超过50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关设备所属的产品**ProductKey**。
> 如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关设备的名称。
> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '从返回结果中的第几页开始显示。

查询数据最多不能超过10,000条，**PageNo**值不能超过数据能显示的页数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关设备ID。物联网平台为该网关设备颁发的ID，设备的唯一标识符。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。详情请参见以下参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示的记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'PageCount' => 
                  array (
                    'description' => '总页数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'Total' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'deviceInfo' => 
                      array (
                        'description' => '子设备信息集合（**deviceInfo**）。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ProductKey' => 
                            array (
                              'description' => '子设备所属的产品ProductKey。',
                              'type' => 'string',
                              'example' => 'a1BwAGV****',
                            ),
                            'DeviceName' => 
                            array (
                              'description' => '子设备名称。',
                              'type' => 'string',
                              'example' => 'light',
                            ),
                            'IotId' => 
                            array (
                              'description' => '子设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。',
                              'type' => 'string',
                              'example' => 'Q7uOhVRdZRRlDnTLv****00100',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextToken\\": \\"TGlzdFJlc291***\\",\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"PageCount\\": 1,\\n    \\"Total\\": 1,\\n    \\"List\\": {\\n      \\"deviceInfo\\": [\\n        {\\n          \\"ProductKey\\": \\"a1BwAGV****\\",\\n          \\"DeviceName\\": \\"light\\",\\n          \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv****00100\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetThingTopoResponse>\\n<Data>\\n    <PageCount>1</PageCount>\\n    <PageSize>2</PageSize>\\n    <CurrentPage>1</CurrentPage>\\n    <NextToken>TGlzdFJlc291***</NextToken>\\n    <List>\\n        <deviceInfo>\\n            <DeviceName>APItest</DeviceName>\\n            <ProductKey>a1T27vz****</ProductKey>\\n            <IotId>vWxNur6BUApsqjv****000100</IotId>\\n        </deviceInfo>\\n    </List>\\n    <Total>1</Total>\\n</Data>\\n<RequestId>93F05C63-9FD1-4CC8-B0FF-6D6C1A6632D1</RequestId>\\n<Success>true</Success>\\n</GetThingTopoResponse>","errorExample":""}]',
      'title' => '查询指定设备的拓扑关系',
      'summary' => '调用该接口查询指定网关设备的子设备列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

> RAM用户共享阿里云账号配额。




',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'NotifyAddThingTopo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'DeviceListStr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要挂载在目标网关设备上的子设备数组，为JSON字符串形式的子设备标识信息，可使用**ProductKey**和**DeviceName**或**IotId**指代设备，例如**[{"productKey":"a1BwAGxxx","deviceName":"device1"},{"IotId":"Q7uOhxxx"}]**。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"productKey":"a1BwAGV****","deviceName":"device1"},{"IotId":"Q7uOhVRdZRRlDnTLv****00100"}]',
          ),
        ),
        2 => 
        array (
          'name' => 'GwIotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
',
            'type' => 'string',
            'required' => false,
            'example' => 'vWxNur6BUApsqjv****4000100',
          ),
        ),
        3 => 
        array (
          'name' => 'GwProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关设备所隶属的产品ProductKey。
> 如果传入该参数，需同时传入**DeviceName**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'a1T27vz****',
          ),
        ),
        4 => 
        array (
          'name' => 'GwDeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关设备名称。
> 如果传入该参数，需同时传入**ProductKey**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'gateway',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'MessageId' => 
                  array (
                    'description' => '云端向网关设备下发增加拓扑关系的消息ID。',
                    'type' => 'string',
                    'example' => '5443123',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"MessageId\\": \\"5443123\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<NotifyAddThingTopoResponse>\\n<RequestId>419A3FC1-B517-4958-9414-5546765FA51F</RequestId>\\n<Success>true</Success>\\n<Data>\\n    <MessageId>2345123</MessageId>\\n</Data>\\n</NotifyAddThingTopoResponse>","errorExample":""}]',
      'title' => '通知网关设备增加拓扑关系',
      'summary' => '调用该接口通知网关设备增加拓扑关系。',
      'description' => '## 使用说明
返回的成功结果只表示添加拓扑关系的指令成功下发给网关，并不表示网关成功添加拓扑关系。
开发网关设备端时，需订阅通知添加拓扑关系消息的Topic。具体Topic和消息格式，请参见[管理拓扑关系](~~89299~~)。
## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchAddThingTopo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'GwProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关设备所属的产品的ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1vL7cp****',
          ),
        ),
        2 => 
        array (
          'name' => 'GwDeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关设备的名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'gateway',
          ),
        ),
        3 => 
        array (
          'name' => 'TopoAddItem',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '添加的的设备拓扑关系列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ProductKey' => 
                array (
                  'description' => '要接入网关的子设备所属的产品ProductKey。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'a1BwAGV****',
                ),
                'DeviceName' => 
                array (
                  'description' => '要接入网关的子设备名称。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'light',
                ),
                'Sign' => 
                array (
                  'description' => '添加拓扑关系的签名。
根据签名计算方式**SignMethod(deviceSecret,content)**，计算出的结果作为Sign的取值。

其中，**content**是将所有提交给服务器的子设备参数（Sign、SignMethod除外），按照英文字母升序，依次排序拼接（无拼接符号）的结果。

例如，如果传入的设备参数为**ClientId=868575026974305、DeviceName=868575026974305、ProductKey=a1PB5fp1234、SignMethod=hmacmd5，且deviceSecret=1234**，那么签名计算为`hmacmd5(1234, clientId868575026974305deviceName868575026974305productKeya1PB5fpX1234)`；签名计算结果为`C1C1606D61884C5F16C9EA6622E5****`。
> 示例中的**ClientId**为设备的客户端ID，您可自定义。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'C1C1606D61884C5F16C9EA6622E5****',
                ),
                'Timestamp' => 
                array (
                  'description' => 'UTC时间戳。非必选。如果传入该参数，则需包含到签名计算中。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '1579335899000',
                ),
                'SignMethod' => 
                array (
                  'description' => '签名方法。支持**hmacSha1**、**hmacSha256**、**hmacMd5**和**Sha256**（大小写不敏感）。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'hmacMd5',
                ),
                'ClientId' => 
                array (
                  'description' => '设备端ID，可使用设备的SN码或MAC地址。非必选参数。如果传入该参数，则需包含到签名计算中。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'a1BwAGV****device1',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchAddThingTopoResponse>\\n<RequestId>2E19BDAF-0FD0-4608-9F41-82D230CFEE38</RequestId>\\n<Success>true</Success>\\n</BatchAddThingTopoResponse>","errorExample":""}]',
      'title' => 'BatchAddThingTopo',
      'summary' => '调用该接口批量添加设备拓扑关系。',
      'description' => '## 使用说明

- 单次调用最多可为一个网关添加10个子设备。

- 接口调用者必须是网关的所有者（Owner）。

- 单个阿里云账号调用该接口的QPS限流为5。

- 如果传入的子设备已存在拓扑关系，则会将子设备原有的网关替换为当前网关。

- 任意一个子设备与网关的拓扑关系建立失败时，系统回滚，传入的所有子设备与当前网关建立拓扑关系失败。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RemoveThingTopo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除拓扑关系的设备所属的产品**ProductKey**。
> 如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除拓扑关系的设备名称。
> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除拓扑关系的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'Data' => 
              array (
                'description' => '删除拓扑关系的结果。

- **true**：删除成功。
- **false**：删除失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Data\\": true,\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"JobId\\": \\"450407b***\\",\\n  \\"Code\\": \\"iot.system.SystemException\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveThingTopoResponse>\\n<Data>true</Data>\\n<RequestId>098BEEF4-58F4-4181-A891-5D37DB6C4C3B</RequestId>\\n<Success>true</Success>\\n</RemoveThingTopoResponse>","errorExample":""}]',
      'title' => '移除网关与子设备的拓扑关系',
      'summary' => '调用该接口移除网关与子设备的拓扑关系。',
      'description' => '## 使用说明
- 如果传入的设备信息是网关设备，则移除该网关与其下所有子设备的拓扑关系。
- 如果传入的设备信息是子设备，则移除该子设备与其关联网关的拓扑关系。
<props="china">- 如果网关设备的子设备数量超过2000个，调用本接口会创建删除设备拓扑关系的设备任务，以异步方式删除拓扑关系，并返回参数**JobId** （任务ID）。您可通过调用接口[QueryJob](~~198577~~)，查看任务执行结果。</props>

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

  > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备所属的产品ProductKey。
- 传入此参数，返回该产品下的设备统计数据。如果同时传入**GroupId**，返回指定分组下该产品的设备统计数据。
- 不传入此参数和**GroupId**，则返回当前账号下所有设备统计数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备所属的分组ID。

- 传入此参数，返回该分组下的设备统计数据。如果同时传入**ProductKey**，返回该分组下指定产品的设备统计数据。
- 不传入此参数和**ProductKey**，返回当前账号下所有设备统计数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'W16X8Tvdosec****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的设备统计信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'deviceCount' => 
                  array (
                    'description' => '设备总数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '100',
                  ),
                  'activeCount' => 
                  array (
                    'description' => '已激活的设备数量。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '10',
                  ),
                  'onlineCount' => 
                  array (
                    'description' => '在线的设备数量。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '10',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"deviceCount\\": 100,\\n    \\"activeCount\\": 10,\\n    \\"onlineCount\\": 10\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceStatisticsResponse>\\n<Data>\\n    <deviceCount>2</deviceCount>\\n    <activeCount>2</activeCount>\\n    <onlineCount>0</onlineCount>\\n</Data>\\n<RequestId>8AC026D2-6F16-4719-A396-969D63DCA138</RequestId>\\n<Success>true</Success>\\n</QueryDeviceStatisticsResponse>","errorExample":""}]',
      'title' => '查询设备统计数据',
      'summary' => '调用该接口查询设备统计数据，包括在线设备数、已激活设备数和已创建的设备总数。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryLoRaJoinPermissions' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。

> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ProductKey' => 
              array (
                'description' => '使用该凭证的设备所属产品的ProductKey。',
                'type' => 'string',
                'example' => 'a1BwAGV****',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'JoinPermissions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'JoinPermission' => 
                  array (
                    'description' => '调用成功时，返回的入网凭证数据（**JoinPermission**）。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Enabled' => 
                        array (
                          'description' => '入网凭证的启停用状态。取值：

- **true**：启用。
- **false**：停用。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'JoinPermissionType' => 
                        array (
                          'description' => '入网凭证的类型。取值：

- **LOCAL**：专用凭证。
- **ROAMING**：漫游凭证。',
                          'type' => 'string',
                          'example' => 'LOCAL',
                        ),
                        'JoinPermissionId' => 
                        array (
                          'description' => '入网凭证ID，入网凭证的唯一标识。',
                          'type' => 'string',
                          'example' => '80***',
                        ),
                        'JoinPermissionName' => 
                        array (
                          'description' => '入网凭证名称。',
                          'type' => 'string',
                          'example' => 'ForTest',
                        ),
                        'OwnerAliyunPk' => 
                        array (
                          'description' => '入网凭证创建者的阿里云账号ID。',
                          'type' => 'string',
                          'example' => '1375364789****',
                        ),
                        'ClassMode' => 
                        array (
                          'description' => '入网凭证采用的通信模式。取值：

- **A**：终端设备允许双向通信。
- **B**：终端设备会在预设时间中开放接收窗口。
- **C**：终端设备持续开放接收窗口，只在传输时关闭。',
                          'type' => 'string',
                          'example' => 'A',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ProductKey\\": \\"a1BwAGV****\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"JoinPermissions\\": {\\n    \\"JoinPermission\\": [\\n      {\\n        \\"Enabled\\": true,\\n        \\"JoinPermissionType\\": \\"LOCAL\\",\\n        \\"JoinPermissionId\\": \\"80***\\",\\n        \\"JoinPermissionName\\": \\"ForTest\\",\\n        \\"OwnerAliyunPk\\": \\"1375364789****\\",\\n        \\"ClassMode\\": \\"A\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryLoRaJoinPermissions>\\n<RequestId>1C1BD4E7-2FD3-4535-9D97-DE51803192AD</RequestId>\\n<Success>true</Success>\\n<JoinPermissions>\\n    <JoinPermission>\\n        <Enabled>true</Enabled>\\n        <JoinPermissionType>LOCAL</JoinPermissionType>\\n        <JoinPermissionId>50***</JoinPermissionId>\\n        <OwnerAliyunPk>198426864326****</OwnerAliyunPk>\\n        <ClassMode>A</ClassMode>\\n        <JoinPermissionName>给开发者B使用</JoinPermissionName>\\n    </JoinPermission>\\n</JoinPermissions>\\n</QueryLoRaJoinPermissions>","errorExample":""}]',
      'title' => '查询LoRaWAN入网凭证列表',
      'summary' => '调用该接口查询LoRaWAN入网凭证列表。',
      'description' => '## 限制说明


单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateLoRaNodesTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所隶属产品的ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceInfo',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'LoRaWAN设备列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'DevEui' => 
                array (
                  'description' => 'LoRaWAN设备的DevEUI，其全球唯一标识。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'd896e0efff00****',
                ),
                'PinCode' => 
                array (
                  'description' => 'LoRaWAN设备的PIN Code，用于校验DevEUI的合法性。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '123***',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 1000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'TaskId' => 
              array (
                'description' => '调用成功时，返回的任务ID。

> 请妥善保管该ID。查询设备创建的状态时需使用该ID。',
                'type' => 'string',
                'example' => '62146',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"TaskId\\": \\"62146\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateLoRaNodesTask>\\n<RequestId>38D5FDA5-19B9-445D-8713-213B743266DE</RequestId>\\n<TaskId>62146</TaskId>\\n<Success>true</Success>\\n</CreateLoRaNodesTask>","errorExample":""}]',
      'title' => 'CreateLoRaNodesTask',
      'summary' => '调用该接口生成批量注册LoRaWAN设备的任务。',
      'description' => '## 使用说明
单次调用最多可添加500个设备。
## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetLoraNodesTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。

> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '注册LoRaWAN设备任务的ID，即调用[CreateLoRaNodesTask](~~109299~~)创建任务后，返回的**TaskId**。',
            'type' => 'string',
            'required' => true,
            'example' => '623***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。

- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TaskState' => 
              array (
                'description' => '任务执行状态。

- **RUNNING**：任务正在执行中。

- **FINISH**：任务已执行完毕。',
                'type' => 'string',
                'example' => 'RUNNING',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'SuccessCount' => 
              array (
                'description' => '注册成功的数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
              'TotalCount' => 
              array (
                'description' => '任务中待注册设备的总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '200',
              ),
              'TaskId' => 
              array (
                'description' => '调用成功时，返回的任务ID。',
                'type' => 'string',
                'example' => '625***',
              ),
              'SuccessDevEuis' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SuccessDevEui' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '注册成功的设备的DevEUI列表。',
                      'type' => 'string',
                      'example' => '[ "d896e0ffff01****","d896e0ffff01****"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"TaskState\\": \\"RUNNING\\",\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"SuccessCount\\": 100,\\n  \\"TotalCount\\": 200,\\n  \\"TaskId\\": \\"625***\\",\\n  \\"SuccessDevEuis\\": {\\n    \\"SuccessDevEui\\": [\\n      \\"[ \\\\\\"d896e0ffff01****\\\\\\",\\\\\\"d896e0ffff01****\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetLoraNodesTask>\\n<TotalCount>2</TotalCount>\\n<RequestId>1C0BBCD4-A271-4853-A5B0-3C246565E68C</RequestId>\\n<SuccessCount>2</SuccessCount>\\n<SuccessDevEuis>\\n    <SuccessDevEui>d896e0ffff01****</SuccessDevEui>\\n    <SuccessDevEui>d896e0ffff01****</SuccessDevEui>\\n</SuccessDevEuis>\\n<TaskId>156***</TaskId>\\n<Success>true</Success>\\n<TaskState>FINISH</TaskState>\\n</GetLoraNodesTask>","errorExample":""}]',
      'title' => '查询批量注册LoRaWAN设备任务状态',
      'summary' => '调用该接口查询批量注册LoRaWAN设备任务的状态。',
      'description' => '## 限制说明

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceFileList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的文件记录数量。最大取值200，默认值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备所隶属的产品ProductKey。
> 如果传入该参数，需同时传入**DeviceName**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备名称。
> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        4 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        5 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '显示返回结果中的第几页。最小取值1，默认值 1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CurrentPage' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的文件个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '文件总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PageCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'FileSummary' => 
                  array (
                    'description' => '调用成功时，返回的文件信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'UtcCreatedOn' => 
                        array (
                          'description' => '文件创建时间。',
                          'type' => 'string',
                          'example' => '2019-03-21T08:45:42.000Z',
                        ),
                        'Name' => 
                        array (
                          'description' => '文件名称。',
                          'type' => 'string',
                          'example' => 'testFile2.txt',
                        ),
                        'Size' => 
                        array (
                          'description' => '文件大小，单位：KB。',
                          'type' => 'string',
                          'example' => '1024000',
                        ),
                        'FileId' => 
                        array (
                          'description' => '文件ID，文件的唯一标识符。',
                          'type' => 'string',
                          'example' => 'xL0G67MBLBDtkR7GCfT******',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CurrentPage\\": 1,\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 2,\\n  \\"PageCount\\": 1,\\n  \\"Data\\": {\\n    \\"FileSummary\\": [\\n      {\\n        \\"UtcCreatedOn\\": \\"2019-03-21T08:45:42.000Z\\",\\n        \\"Name\\": \\"testFile2.txt\\",\\n        \\"Size\\": \\"1024000\\",\\n        \\"FileId\\": \\"xL0G67MBLBDtkR7GCfT******\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceFileListResponse>\\n<PageCount>1</PageCount>\\n<Data>\\n    <FileStoreSummary>\\n        <Name>testFile2.txt</Name>\\n        <FileId>xL0G67MBLBDtkR7GCfT******</FileId>\\n        <UtcCreatedOn>2019-03-21T08:45:42.000Z</UtcCreatedOn>\\n        <Size>102400</Size>\\n    </FileStoreSummary>\\n    <FileStoreSummary>\\n        <Name>testFile3.txt</Name>\\n        <FileId>6UCo1SqbqnQEoh9aKqD******</FileId>\\n        <UtcCreatedOn>2019-03-21T08:45:42.000Z</UtcCreatedOn>\\n        <Size>102400</Size>\\n    </FileStoreSummary>\\n    <FileStoreSummary>\\n        <Name>testFile1.txt</Name>\\n        <FileId>IhXXww3Eeu6uzSOSCyu******</FileId>\\n        <UtcCreatedOn>2019-03-21T08:45:40.000Z</UtcCreatedOn>\\n        <Size>102400</Size>\\n    </FileStoreSummary>\\n</Data>\\n<PageSize>10</PageSize>\\n<RequestId>7C7BA526-826D-46AA-A45E-55D21E6D1583</RequestId>\\n<CurrentPage>1</CurrentPage>\\n<Success>true</Success>\\n<Total>3</Total>\\n</QueryDeviceFileListResponse>","errorExample":""}]',
      'title' => '查询设备上传到物联网平台文件列表',
      'summary' => '查询指定设备上传到物联网平台的所有文件列表。',
      'description' => '## 使用说明
调用该接口返回的文件信息中，不包括文件下载地址。如需获取文件下载地址，请调用[QueryDeviceFile](~~112002~~)查询。
## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceFile' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备所隶属的产品ProductKey。
> 如果传入该参数，需同时传入**DeviceName**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备名称。
> 如果传入该参数，需同时传入**ProductKey**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        4 => 
        array (
          'name' => 'FileId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件标识符。您可以调用[QueryDeviceFileList](~~112001~~)，从返回结果中查看文件ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'xL0G67MBLBDtkR7GCfT******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。
',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的文件信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'UtcCreatedOn' => 
                  array (
                    'description' => '文件创建时间。',
                    'type' => 'string',
                    'example' => '2019-03-21T08:45:42.000Z',
                  ),
                  'Name' => 
                  array (
                    'description' => '文件名称。',
                    'type' => 'string',
                    'example' => 'testFile3.txt',
                  ),
                  'DownloadUrl' => 
                  array (
                    'description' => '文件下载URL。',
                    'type' => 'string',
                    'example' => 'http://iotx-file-store.oss-cn-shanghai.aliyuncs.com/device_file/A849E4E5CFF64804A18D9384AC9D****/aGEKIpp5NAGxdP2oo90000****/testFile3.txt?Expires=1553162075&OSSAccessKeyId=LTAIYLScbHiV****&Signature=%2F88xdEFPukJ****%2F8****%2Bdv3io%3D',
                  ),
                  'Size' => 
                  array (
                    'description' => '文件大小，单位：KB。',
                    'type' => 'string',
                    'example' => '102400',
                  ),
                  'FileId' => 
                  array (
                    'description' => '文件标识符。',
                    'type' => 'string',
                    'example' => '6UCo1SqbqnQEoh9aKqDQ01****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"UtcCreatedOn\\": \\"2019-03-21T08:45:42.000Z\\",\\n    \\"Name\\": \\"testFile3.txt\\",\\n    \\"DownloadUrl\\": \\"http://iotx-file-store.oss-cn-shanghai.aliyuncs.com/device_file/A849E4E5CFF64804A18D9384AC9D****/aGEKIpp5NAGxdP2oo90000****/testFile3.txt?Expires=1553162075&OSSAccessKeyId=LTAIYLScbHiV****&Signature=%2F88xdEFPukJ****%2F8****%2Bdv3io%3D\\",\\n    \\"Size\\": \\"102400\\",\\n    \\"FileId\\": \\"6UCo1SqbqnQEoh9aKqDQ01****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceFileResponse>\\n<RequestId>93C5276D-5C8A-40D9-BFD6-4BD5B8C1A08F</RequestId>\\n<Data>\\n    <Name>testFile3.txt</Name>\\n    <DownloadUrl>http://iotx-file-store.oss-cn-shanghai.aliyuncs.com/device_file/A849E4E5CFF64804A18D9384AC9D****/aGEKIpp5NAGxdP2oo90000****/testFile3.txt?Expires=1553162075&amp;OSSAccessKeyId=LTAIYLScbHiV****&amp;Signature=%2F88xdEFPukJ****%2F8****%2Bdv3io%3D</DownloadUrl>\\n    <FileId>6UCo1SqbqnQEoh9aKqDQ01****</FileId>\\n    <UtcCreatedOn>2019-03-21T08:45:42.000Z</UtcCreatedOn>\\n    <Size>102400</Size>\\n</Data>\\n<Success>true</Success>\\n</QueryDeviceFileResponse>","errorExample":""}]',
      'title' => '查询设备文件信息',
      'summary' => '查询指定设备上传到物联网平台的指定文件信息。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

 > RAM用户共享阿里云账号配额。

',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDeviceFile' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除文件所属的设备所隶属的产品ProductKey。
> 如果传入该参数，需同时传入**DeviceName**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除文件所属的设备名称。
> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除文件所属的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        4 => 
        array (
          'name' => 'FileId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的文件ID。可调用[QueryDeviceFileList](~~112001~~)，从返回结果中查看对应文件ID。',
            'type' => 'string',
            'required' => true,
            'example' => '6UCo1SqbqnQEoh9aK4561****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteDeviceFileResponse>\\n<RequestId>C25255EA-9F6E-4E04-85FE-AC1E9C136EBB</RequestId>\\n<Success>true</Success>\\n</DeleteDeviceFileResponse>","errorExample":""}]',
      'title' => '删除指定设备上传到物联网平台的指定文件',
      'summary' => '调用该接口删除指定设备上传到物联网平台的指定文件。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceCert' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。

> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属产品的ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'light',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。
',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DeviceCertInfo' => 
              array (
                'description' => '返回的证书信息列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '证书生成状态。

- **0**：生成中。

- **1**：生成失败。

- **2**：生成成功。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'Certificate' => 
                  array (
                    'description' => 'X.509证书。',
                    'type' => 'string',
                    'example' => 'tXHf4ezGEHcwdyMwoCDHGBmk9avi****',
                  ),
                  'PrivateKey' => 
                  array (
                    'description' => 'X.509证书密钥。',
                    'type' => 'string',
                    'example' => 'CqXL5h5ysRTA4NxjABjj0010fa****',
                  ),
                  'CertSN' => 
                  array (
                    'description' => 'X.509证书ID。',
                    'type' => 'string',
                    'example' => '636217374433****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"DeviceCertInfo\\": {\\n    \\"Status\\": 2,\\n    \\"Certificate\\": \\"tXHf4ezGEHcwdyMwoCDHGBmk9avi****\\",\\n    \\"PrivateKey\\": \\"CqXL5h5ysRTA4NxjABjj0010fa****\\",\\n    \\"CertSN\\": \\"636217374433****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceCertResponse>\\n<RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n<Success>true</Success>\\n<DeviceCertInfo>\\n    <Status>2</Status>\\n    <Certificate>tXHf4ezGEHcwdyMwoCDHGBmk9avi****</Certificate>\\n    <PrivateKey>CqXL5h5ysRTA4NxjABjj0010fa****</PrivateKey>\\n    <CertSN>636217374433****</CertSN>\\n</DeviceCertInfo>\\n</QueryDeviceCertResponse>","errorExample":""}]',
      'title' => '查询设备的X.509证书',
      'summary' => '调用该接口查询设备的X.509证书。',
      'description' => '## 限制说明

- 仅支持地域为华东2（上海），且认证方式为X.509证书的设备。


- 单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

    > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryCertUrlByApplyId' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。

> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ApplyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的申请批次ID。申请批次ID可在[BatchRegisterDeviceWithApplyId](~~69514~~)和[BatchRegisterDevice](~~69473~~)接口返回结果中查看。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1234567',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CertUrl' => 
              array (
                'description' => '该批次设备的X.509证书下载链接。',
                'type' => 'string',
                'example' => 'https://****',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CertUrl\\": \\"https://****\\",\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<QueryCertUrlByApplyIdResponse>\\n<RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n<Success>true</Success>\\n<CertUrl>https://****</CertUrl>\\n</QueryCertUrlByApplyIdResponse>","errorExample":""}]',
      'title' => '获取批量注册设备X.509证书下载链接',
      'summary' => '获取批量注册设备的X.509证书下载链接。',
      'description' => '## 限制说明

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceByStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属的产品**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备状态。 可选值：

- **0**：未激活。
- **1**：在线。
- **3**：离线。
- **8**：已禁用。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的记录数量，最大值是50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

><notice>目前，物联网平台仅支持实例维度的资源组管理。请求参数**ResourceGroupId**配置已无效，无需再传入。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm4l5tcwd***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的设备数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '查询到的设备总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PageCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Page' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SimpleDeviceInfo' => 
                  array (
                    'description' => '调用成功时，返回的设备信息列表（**SimpleDeviceInfo**）。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '设备状态。 取值：

- **UNACTIVE**：未激活。

- **ONLINE**：在线。

- **OFFLINE**：离线。

- **DISABLE**：已禁用。',
                          'type' => 'string',
                          'example' => 'ONLINE',
                        ),
                        'ProductKey' => 
                        array (
                          'description' => '设备所属产品的ProductKey。',
                          'type' => 'string',
                          'example' => 'a1BwAGV****',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'light',
                        ),
                        'UtcModified' => 
                        array (
                          'description' => '设备信息最后一次修改时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2021-02-18T02:46:32.000Z',
                        ),
                        'DeviceSecret' => 
                        array (
                          'description' => '设备密钥。',
                          'type' => 'string',
                          'example' => 'sLefbFmN9SYfnWLJTePG893XNuRV****',
                        ),
                        'UtcCreate' => 
                        array (
                          'description' => '设备创建时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2021-02-18T02:46:32.000Z',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '设备创建时的时间，GMT格式。',
                          'type' => 'string',
                          'example' => '2021-02-18 10:46:32',
                        ),
                        'Nickname' => 
                        array (
                          'description' => '设备的备注名称。',
                          'type' => 'string',
                          'example' => 'SensorInShanghai',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '设备信息最后一次修改时的时间，GMT格式。',
                          'type' => 'string',
                          'example' => '2021-02-18 10:46:32',
                        ),
                        'IotId' => 
                        array (
                          'description' => '设备ID。',
                          'type' => 'string',
                          'example' => 'Av8NGHGtwPrH9BYGLMBi00****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 2,\\n  \\"PageCount\\": 1,\\n  \\"Page\\": 1,\\n  \\"Data\\": {\\n    \\"SimpleDeviceInfo\\": [\\n      {\\n        \\"Status\\": \\"ONLINE\\",\\n        \\"ProductKey\\": \\"a1BwAGV****\\",\\n        \\"DeviceName\\": \\"light\\",\\n        \\"UtcModified\\": \\"2021-02-18T02:46:32.000Z\\",\\n        \\"DeviceSecret\\": \\"sLefbFmN9SYfnWLJTePG893XNuRV****\\",\\n        \\"UtcCreate\\": \\"2021-02-18T02:46:32.000Z\\",\\n        \\"GmtCreate\\": \\"2021-02-18 10:46:32\\",\\n        \\"Nickname\\": \\"SensorInShanghai\\",\\n        \\"GmtModified\\": \\"2021-02-18 10:46:32\\",\\n        \\"IotId\\": \\"Av8NGHGtwPrH9BYGLMBi00****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceByStatusResponse>\\n    <RequestId>CD9E5F99-A095-4A05-9256-D924EA3075E8</RequestId>\\n    <Success>true</Success>\\n    <CurrentPage>1</CurrentPage>\\n    <PageSize>10</PageSize>\\n    <TotalPageCount>1</TotalPageCount>\\n    <TotalCount>2</TotalCount>\\n    <Data>\\n        <SimpleDeviceInfo>\\n            <IotId>Av8NGHGtwPrH9BYGLMBi00****</IotId>\\n            <DeviceName>Av8NGHG***</DeviceName>\\n            <ProductKey>a1dafDE****</ProductKey>\\n            <DeviceSecret>d7GYhf5hfcPHDe1bXSd3n9MjO1G3****</DeviceSecret>\\n            <UtcModified>2021-02-18T02:46:32.000Z</UtcModified>\\n            <GmtCreate>2021-02-18 10:46:32</GmtCreate>\\n            <UtcCreate>2021-02-18T02:46:32.000Z</UtcCreate>\\n            <GmtModified>2021-02-18 10:46:32</GmtModified>\\n            <Status>UNACTIVE</Status>\\n            <Nickname>SensorInShanghai</Nickname>\\n        </SimpleDeviceInfo>\\n        <SimpleDeviceInfo>\\n            <IotId>zNIcSmWQ9BPJlmkjn3H100****</IotId>\\n            <DeviceName>zNIcSmWQ***</DeviceName>\\n            <ProductKey>a1dafDE****</ProductKey>\\n            <DeviceSecret>C27XXmC18yLIEDXvUj6FSlvgO7ag****</DeviceSecret>\\n            <UtcModified>2021-02-09T09:44:55.000Z</UtcModified>\\n            <GmtCreate>2021-02-09 17:44:55</GmtCreate>\\n            <UtcCreate>2021-02-09T09:44:55.000Z</UtcCreate>\\n            <GmtModified>2021-02-09 17:44:55</GmtModified>\\n            <DeviceStatus>UNACTIVE</DeviceStatus>\\n            <Nickname>DriverInShanghai</Nickname>\\n        </SimpleDeviceInfo>\\n    </Data>\\n</QueryDeviceByStatusResponse>","errorExample":""}]',
      'title' => '根据设备状态查询设备列表',
      'summary' => '调用该接口根据设备状态查询设备列表。',
      'description' => '## 使用说明
设备状态变更后，新的状态数据会在变更后10秒内生效。变更数据生效后，才能根据新状态查询到该设备；变更数据生效前，根据原状态仍能查询到该设备。
## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceBySQL' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'SQL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询设备的类SQL语句。具体要求和示例见下文请求参数补充说明。',
            'type' => 'string',
            'required' => true,
            'example' => 'SELECT * FROM device where product_key = "a1*********" limit 100, 20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'TotalCount' => 
              array (
                'description' => '当SELECT子句为`SELECT count(*) FROM device`时，返回的count计数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的设备信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => '设备状态。返回值：

- **ONLINE**：在线。
- **OFFLINE**：离线。
- **UNACTIVE**：未激活。
- **DISABLE**：已禁用。
',
                      'type' => 'string',
                      'example' => 'ONLINE',
                    ),
                    'ProductKey' => 
                    array (
                      'description' => '设备所属产品**ProductKey**。',
                      'type' => 'string',
                      'example' => 'a1BwAGV****	',
                    ),
                    'DeviceName' => 
                    array (
                      'description' => '设备名称。',
                      'type' => 'string',
                      'example' => 'light',
                    ),
                    'GmtCreate' => 
                    array (
                      'description' => '设备创建时间，GMT格式。',
                      'type' => 'string',
                      'example' => '2020-04-04 16:38:17.000',
                    ),
                    'Nickname' => 
                    array (
                      'description' => '设备的备注名称。',
                      'type' => 'string',
                      'example' => '智能灯设备',
                    ),
                    'ActiveTime' => 
                    array (
                      'description' => '设备激活时间，GMT格式。',
                      'type' => 'string',
                      'example' => '2020-04-04 16:38:18.607',
                    ),
                    'GmtModified' => 
                    array (
                      'description' => '设备信息最后一次更新时间，GMT格式。',
                      'type' => 'string',
                      'example' => '2020-04-04 16:38:19.000',
                    ),
                    'IotId' => 
                    array (
                      'description' => '设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。',
                      'type' => 'string',
                      'example' => 'Q7uOhVRdZRRlDnTLv****00100	',
                    ),
                    'Groups' => 
                    array (
                      'description' => '设备分组信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'GroupId' => 
                          array (
                            'description' => '分组ID。',
                            'type' => 'string',
                            'example' => 'a1d21d2fas',
                          ),
                        ),
                      ),
                    ),
                    'Tags' => 
                    array (
                      'description' => '设备标签信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'TagName' => 
                          array (
                            'description' => '标签名。',
                            'type' => 'string',
                            'example' => 'Color',
                          ),
                          'TagValue' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'Red',
                          ),
                        ),
                      ),
                    ),
                    'OTAModules' => 
                    array (
                      'description' => '设备的模块固件信息列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'ModuleName' => 
                          array (
                            'description' => 'OTA模块名称。
',
                            'type' => 'string',
                            'example' => 'SomeSampleModule',
                          ),
                          'FirmwareVersion' => 
                          array (
                            'description' => 'OTA模块版本号。',
                            'type' => 'string',
                            'example' => 'a1-dads2-dad2',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"TotalCount\\": 100,\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"Status\\": \\"ONLINE\\",\\n      \\"ProductKey\\": \\"a1BwAGV****\\\\t\\",\\n      \\"DeviceName\\": \\"light\\",\\n      \\"GmtCreate\\": \\"2020-04-04 16:38:17.000\\",\\n      \\"Nickname\\": \\"智能灯设备\\",\\n      \\"ActiveTime\\": \\"2020-04-04 16:38:18.607\\",\\n      \\"GmtModified\\": \\"2020-04-04 16:38:19.000\\",\\n      \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv****00100\\\\t\\",\\n      \\"Groups\\": [\\n        {\\n          \\"GroupId\\": \\"a1d21d2fas\\"\\n        }\\n      ],\\n      \\"Tags\\": [\\n        {\\n          \\"TagName\\": \\"Color\\",\\n          \\"TagValue\\": \\"Red\\"\\n        }\\n      ],\\n      \\"OTAModules\\": [\\n        {\\n          \\"ModuleName\\": \\"SomeSampleModule\\",\\n          \\"FirmwareVersion\\": \\"a1-dads2-dad2\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceBySQLResponse>\\n<RequestId>501CFABA-2C48-468D-B88C-3AA8E3B3A8F3</RequestId>\\n<Data>\\n    <Status>OFFLINE</Status>\\n    <IotId>ii1*******</IotId>\\n    <GmtCreate>2020-04-04 16:38:17.000</GmtCreate>\\n    <ActiveTime>2020-04-04 16:38:18.607</ActiveTime>\\n    <GmtModified>2020-04-04 16:38:19.000</GmtModified>\\n    <ProductKey>a1*********</ProductKey>\\n    <DeviceName>testDevcieae7f3a</DeviceName>\\n</Data>\\n<Data>\\n    <Status>UNACTIVE</Status>\\n    <IotId>5wt*******</IotId>\\n    <GmtCreate>2020-04-04 16:37:32.000</GmtCreate>\\n    <Groups>\\n        <GroupId>Ix4*******</GroupId>\\n    </Groups>\\n    <Groups>\\n        <GroupId>Xrn*******</GroupId>\\n    </Groups>\\n    <Groups>\\n        <GroupId>J9l*******</GroupId>\\n    </Groups>\\n    <OTAModules>\\n        <ModuleName>SomeSampleModule</ModuleName>\\n        <FirmwareVersion>a1-dads2-dad2</FirmwareVersion>\\n    </OTAModules>\\n    <OTAModules>\\n        <ModuleName>SampleModule</ModuleName>\\n        <FirmwareVersion>a1-dads2-dad1</FirmwareVersion>\\n    </OTAModules>\\n    <GmtModified>2020-04-04 16:37:32.000</GmtModified>\\n    <ProductKey>a1*********</ProductKey>\\n    <DeviceName>testDevcie676a22</DeviceName>\\n</Data>\\n<Success>true</Success>\\n</QueryDeviceBySQLResponse>","errorExample":""}]',
      'title' => '通过类SQL语句搜索设备',
      'summary' => '通过类SQL语句快速搜索满足指定条件的设备。',
      'description' => '## 使用说明

- 仅支持搜索华东2（上海）<props="china"><ph>、华北2（北京）、华南1（深圳）</ph></props><props="intl"><ph>、日本（东京）</ph></props>地域企业版实例中的设备。
- 调用该接口，单次最多查询到10,000个设备。使用说明，请参见下文SQL语句的`LIMIT`子句说明。


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '使用QueryDeviceBySQL进行设备高级搜索时，类SQL语句由SELECT子句、WHERE子句、ORDER BY子句（可选）、LIMIT子句（可选）组成。长度限制400个字符。
示例：
`SELECT * FROM device WHERE product_key = "a1*********" order by active_time limit 0,10`
|SQL子句|说明 |
|------------- |------------   |
|SELECT子句|`SELECT [field]/[count(*)] FROM device`<br>其中field为需要获取的字段，请参见下面的检索字段说明。也可填\\*，获取所有字段。<br>如果需要获取count计数，则填count(*)。|
|WHERE子句|`WHERE [condition1] AND [condition2]`<br>最多使用5个condition，且不支持嵌套，请参见下面的检索字段说明、运算符说明。<br>连接词支持AND、OR，最多使用5个连接词。|
|ORDER BY子句（可选）|ORDER BY子句用于实现自定义排序，可自定义排序的字段包括gmt\\_create、gmt\\_modified、active\\_time。<br>该子句可不填，不填时随机排序。|
|LIMIT子句（可选）|LIMIT子句用于控制查询的偏移量，有两种用法，参见下表“LIMIT子句使用方法”。<br>如果不填LIMIT子句，则默认为`limit 20`。|

LIMIT子句使用方法：
|方法|说明 |
|------------- |------------   |
|limit k|限制k<=50，即单页最大为50。示例：  <br>`SELECT * FROM device WHERE product_key = "a1*****" limit 10`|
|limit n,k|限制n\\+k<=10000且k<=50，即最大偏移量为10000且单页最大为50。示例：  <br>`SELECT * FROM device WHERE product_key = "a1*****" limit 40,10`|



**检索字段说明**

|字段名|类型 |说明|
|------------- |------------   |------------   |
|product_key|text|设备所属产品ProductKey。|
|iot_id|text|设备标识符。默认返回iot_id。|
|name|text|设备名称。|
|active_time|date|设备激活时间。格式为yyyy-MM-dd HH:mm:ss.SSS，精确到毫秒。|
|nickname|text|设备备注名称。|
|gmt_create|date|设备创建时间。格式为yyyy-MM-dd HH:mm:ss.SSS，精确到毫秒。|
|gmt_modified|date|设备信息最后一次更新时间。格式为yyyy-MM-dd HH:mm:ss.SSS，精确到毫秒。|
|status|text|设备状态，取值：<br>ONLINE：在线。<br>OFFLINE：离线。<br>UNACTIVE：未激活。<br>DISABLE：已禁用。|
|group.group_id|text|设备分组ID。|
|tag.tag_name|text|设备标签名。|
|tag.tag_value|text|设备标签值。|
|ota\\_module.name|text|OTA模块名称。<br>与ota\\_module.version配合使用，用于指定设备当前OTA版本号对应的OTA模块。<br>ota\\_module.version可不传入，不传入时，将不能根据模块名称检索设备。|
|ota\\_module.version|text|OTA固件版本。|

**运算符说明**

|运算符|支持的字段数值类型|
| ------------- |------------   |
|=|number、date、text|
|!=|number、date、text|
|> |number、date|
|<|number、date|
|LIKE|text|

其中：
- =和!=：使用时，支持检索字段值取值为null。
- LIKE：使用时，支持前缀匹配，不支持后缀匹配或通配符匹配。前缀不得少于4个字符，且不能包含任何特殊字符，例如反斜线（\\）、正斜线（/）、and（&）、加号（+）、短划线（-）、感叹号（!）、半角圆括号（()）、半角冒号（:）、波浪线（~）、大括号（{}）、星号（*）、半角问号（?）等。前缀填写完成后，必须固定以`%` 结尾。

     示例：`SELECT * FROM device where product_key = "a1*********" and name LIKE "test%" limit 10`  


调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ImportDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属云网关产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备的名称。

设备名称支持英文字母、数字、短划线（-）、下划线（_）、at（@）、英文句号（.）和英文冒号（:），长度限制为4~32个字符。

设备名称在产品维度下不可重复。',
            'type' => 'string',
            'required' => true,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'Nickname',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备的备注名称。

备注名称支持英文字母、数字和下划线（_），长度限制为1~64个字符。

> 如果不传入该参数，系统不会为设备生成备注名称。',
            'type' => 'string',
            'required' => false,
            'example' => '园区灯',
          ),
        ),
        4 => 
        array (
          'name' => 'Sn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备的序列号。

序列号支持英文字母、数字和下划线（_），长度限制为1~64个字符。

> 如果不传入该参数，系统不会为设备生成序列号。',
            'type' => 'string',
            'required' => false,
            'example' => 'QC4******001',
          ),
        ),
        5 => 
        array (
          'name' => 'DeviceSecret',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备的密钥。

设备密钥支持英文字母、数字、短划线（-）、下划线（_）、at（@）、英文句号（.）和英文冒号（:），长度限制为1~32个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'b4d43f7******10ba5e5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回导入的设备信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'ProductKey' => 
                  array (
                    'description' => '设备所属产品的**ProductKey**。',
                    'type' => 'string',
                    'example' => 'a1BwAGV****',
                  ),
                  'Sn' => 
                  array (
                    'description' => '设备序列号。

> 若您没有为设备传入序列号，则该参数返回为空。',
                    'type' => 'string',
                    'example' => 'QC4******001',
                  ),
                  'DeviceName' => 
                  array (
                    'description' => '设备名称。

><notice>
请妥善保管，勿泄露。
></notice>',
                    'type' => 'string',
                    'example' => 'light',
                  ),
                  'DeviceSecret' => 
                  array (
                    'description' => '设备密钥。
><notice>
请妥善保管，勿泄露。
></notice>',
                    'type' => 'string',
                    'example' => 'b4d43f7******10ba5e5',
                  ),
                  'Nickname' => 
                  array (
                    'description' => '设备的备注名称。

> 若您没有为该设备传入备注名称，则该参数返回为空。',
                    'type' => 'string',
                    'example' => '园区灯',
                  ),
                  'IotId' => 
                  array (
                    'description' => '物联网平台为该设备颁发的设备ID，作为该设备的唯一标识符。

><notice>
请妥善保管，勿泄露。
></notice>',
                    'type' => 'string',
                    'example' => '1O4YPNtRqB2anumz2Canp4GB7*****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.device.CreateDeviceFailed',
            'errorMessage' => 'An error occurred while creating the device.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.device.AlreadyExistedDeviceName',
            'errorMessage' => 'The DeviceName already exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ProductKey\\": \\"a1BwAGV****\\",\\n    \\"Sn\\": \\"QC4******001\\",\\n    \\"DeviceName\\": \\"light\\",\\n    \\"DeviceSecret\\": \\"b4d43f7******10ba5e5\\",\\n    \\"Nickname\\": \\"园区灯\\",\\n    \\"IotId\\": \\"1O4YPNtRqB2anumz2Canp4GB7*****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ImportDeviceResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Data>\\n    <IotId>1O4YPNtRqB2anumz2Canp4GB7*****</IotId>\\n    <DeviceSecret>b4d43f7******10ba5e5</DeviceSecret>\\n    <Sn>QC4******001</Sn>\\n    <ProductKey>a1BwAGV****</ProductKey>\\n    <Nickname>园区灯</Nickname>\\n    <DeviceName>light</DeviceName>\\n</Data>\\n<Success>true</Success>\\n</ImportDeviceResponse>","errorExample":""}]',
      'title' => 'MQTT云网关产品下单个导入设备',
      'summary' => '调用该接口在MQTT云网关产品下单个导入设备。',
      'description' => '## 使用说明

调用该接口前，请先添加MQTT云网关并成功创建云网关产品，获取产品的**Productkey**。具体操作，请参见[创建云网关产品（MQTT）](~~433804~~)。


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchImportDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属云网关产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待批量导入的设备列表。

> 单次调用该接口，最多能传入10,000个设备。超过该限制的数据会被丢弃。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '设备信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Sn' => 
                array (
                  'description' => '设备的序列号。

序列号支持英文字母、数字和下划线（_），长度限制为1~64个字符。

> 单次调用该接口，最多能传入10,000个设备序列号。超过该限制的数据会被丢弃。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'QC4******001',
                ),
                'DeviceName' => 
                array (
                  'description' => '设备的名称。

设备名称支持英文字母、数字、短划线（-）、下划线（_）、at（@）、英文句号（.）和英文冒号（:），长度限制为4~32个字符。

设备名称在产品维度下不可重复。

> 单次调用该接口，最多能传入10,000个设备名称。超过该限制的数据会被丢弃。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'device1',
                ),
                'DeviceSecret' => 
                array (
                  'description' => '设备的密钥。

设备密钥支持英文字母、数字、短划线（-）、下划线（_）、at（@）、英文句号（.）和英文冒号（:），长度限制为1~32个字符。

> 单次调用该接口，最多能传入10,000个设备密钥。超过该限制的数据会被丢弃。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'b4d43f7******10ba5e5',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'ApplyId' => 
                  array (
                    'description' => '调用成功时，系统返回的申请批次ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1295006',
                  ),
                  'InvalidDetailList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'InvalidDetailList' => 
                      array (
                        'description' => '导入设备失败时，不合法设备列表的详细信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '导入设备失败时，不合法设备的详细信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ErrorMsg' => 
                            array (
                              'description' => '导入设备失败时，返回的出错信息。',
                              'type' => 'string',
                              'example' => 'The device name is illegal.',
                            ),
                            'Sn' => 
                            array (
                              'description' => '设备SN码。',
                              'type' => 'string',
                              'example' => 'QC4001#',
                            ),
                            'DeviceName' => 
                            array (
                              'description' => '设备名称。',
                              'type' => 'string',
                              'example' => 'light%',
                            ),
                            'DeviceSecret' => 
                            array (
                              'description' => '设备密钥。',
                              'type' => 'string',
                              'example' => '^67$',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'RepeatedDeviceNameList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'repeatedDeviceName' => 
                      array (
                        'description' => '调用失败时，返回的重复设备名称的列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '调用失败时，返回的重复设备名称。',
                          'type' => 'string',
                          'example' => '{ "RepeatedDeviceNameList": [ "abcd", "asdf" ] }',
                        ),
                      ),
                    ),
                  ),
                  'InvalidSnList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'invalidSn' => 
                      array (
                        'description' => '调用失败时，返回的不合法设备SN码的列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '调用失败时，返回的不合法设备SN码。',
                          'type' => 'string',
                          'example' => '{ "InvalidSnList": [ "" ] }',
                        ),
                      ),
                    ),
                  ),
                  'InvalidDeviceSecretList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'invalidDeviceSecret' => 
                      array (
                        'description' => '调用失败时，返回的不合法设备密钥的列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '调用失败时，返回的不合法设备密钥。',
                          'type' => 'string',
                          'example' => '{ "InvalidDeviceSecretList": [ "^67$", "1" ] }',
                        ),
                      ),
                    ),
                  ),
                  'InvalidDeviceNameList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'invalidDeviceName' => 
                      array (
                        'description' => '调用失败时，返回的不合法设备名称的列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '调用失败时，返回的不合法设备名称。',
                          'type' => 'string',
                          'example' => '{ "InvalidDeviceNameList": [ "APT$", "aw" ] }',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.device.TooManyDeviceNamesPerRequest',
            'errorMessage' => 'The devices you query exceed the maximum number.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.device.ApplyManyDevicesFailed',
            'errorMessage' => 'An error occurred while creating multiple devices.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.device.DeviceNumerExceedTenant',
            'errorMessage' => 'The device total number beyond limit.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ApplyId\\": 1295006,\\n    \\"InvalidDetailList\\": {\\n      \\"InvalidDetailList\\": [\\n        {\\n          \\"ErrorMsg\\": \\"The device name is illegal.\\",\\n          \\"Sn\\": \\"QC4001#\\",\\n          \\"DeviceName\\": \\"light%\\",\\n          \\"DeviceSecret\\": \\"^67$\\"\\n        }\\n      ]\\n    },\\n    \\"RepeatedDeviceNameList\\": {\\n      \\"repeatedDeviceName\\": [\\n        \\"{ \\\\\\"RepeatedDeviceNameList\\\\\\": [ \\\\\\"abcd\\\\\\", \\\\\\"asdf\\\\\\" ] }\\"\\n      ]\\n    },\\n    \\"InvalidSnList\\": {\\n      \\"invalidSn\\": [\\n        \\"{ \\\\\\"InvalidSnList\\\\\\": [ \\\\\\"\\\\\\" ] }\\"\\n      ]\\n    },\\n    \\"InvalidDeviceSecretList\\": {\\n      \\"invalidDeviceSecret\\": [\\n        \\"{ \\\\\\"InvalidDeviceSecretList\\\\\\": [ \\\\\\"^67$\\\\\\", \\\\\\"1\\\\\\" ] }\\"\\n      ]\\n    },\\n    \\"InvalidDeviceNameList\\": {\\n      \\"invalidDeviceName\\": [\\n        \\"{ \\\\\\"InvalidDeviceNameList\\\\\\": [ \\\\\\"APT$\\\\\\", \\\\\\"aw\\\\\\" ] }\\"\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<BatchImportDeviceResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Data>\\n    <ApplyId>1295006</ApplyId>\\n</Data>\\n<Success>true</Success>\\n</BatchImportDeviceResponse>","errorExample":""}]',
      'title' => '在MQTT云网关产品下批量导入设备',
      'summary' => '调用该接口在MQTT型实例或MQTT云网关产品下批量导入设备。',
      'description' => '## 使用说明
若添加MQTT云网关设备，调用该接口前，请先添加MQTT云网关并成功创建云网关产品，获取产品的**Productkey**。具体操作，请参见[创建云网关产品（MQTT）](~~433804~~)。


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryImportedDeviceByApplyId' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的记录数量，默认值为10，最大值不超过50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '1000',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ApplyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备的申请批次ID。申请批次ID可在[BatchImportDevice](~~433878~~)接口返回结果中查看。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '100000000000000000',
            'minimum' => '1',
            'example' => '1295006',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页，取值范围为1~10,000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '100000',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ProductKey' => 
              array (
                'description' => '设备所属产品的**ProductKey**。',
                'type' => 'string',
                'example' => 'a1BwAGV****',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageNo' => 
              array (
                'description' => '显示返回结果中的第几页。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPage' => 
              array (
                'description' => '返回结果的总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'PageSize' => 
              array (
                'description' => '返回结果中每页显示的记录数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'DeviceList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'device' => 
                  array (
                    'description' => '返回的设备列表信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ProductKey' => 
                        array (
                          'description' => '设备所属产品的**ProductKey**。',
                          'type' => 'string',
                          'example' => 'a1BwAGV****',
                        ),
                        'Sn' => 
                        array (
                          'description' => '设备序列号。

> 若您没有为设备传入序列号，则该参数返回为空。',
                          'type' => 'string',
                          'example' => 'QC4******001',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。

><notice>
请妥善保管，勿泄露。
></notice>',
                          'type' => 'string',
                          'example' => 'light',
                        ),
                        'DeviceSecret' => 
                        array (
                          'description' => '设备密钥。

><notice>
请妥善保管，勿泄露。
></notice>',
                          'type' => 'string',
                          'example' => 'b4d43f7******10ba5e5',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.device.DeviceApplyIsNotFound',
            'errorMessage' => 'The application ID for the device does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ProductKey\\": \\"a1BwAGV****\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageNo\\": 1,\\n  \\"TotalPage\\": 100,\\n  \\"PageSize\\": 10,\\n  \\"DeviceList\\": {\\n    \\"device\\": [\\n      {\\n        \\"ProductKey\\": \\"a1BwAGV****\\",\\n        \\"Sn\\": \\"QC4******001\\",\\n        \\"DeviceName\\": \\"light\\",\\n        \\"DeviceSecret\\": \\"b4d43f7******10ba5e5\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryImportedDeviceByApplyIdResponse>\\n<TotalPage>100</TotalPage>\\n<PageSize>10</PageSize>\\n<PageNo>1</PageNo>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<ProductKey>a1BwAGV****</ProductKey>\\n<DeviceList>\\n    <device>\\n        <DeviceSecret>b4d43f7******10ba5e5</DeviceSecret>\\n        <Sn>QC4******001</Sn>\\n        <ProductKey>a1BwAGV****</ProductKey>\\n        <DeviceName>light</DeviceName>\\n    </device>\\n</DeviceList>\\n<Success>true</Success>\\n</QueryImportedDeviceByApplyIdResponse>","errorExample":""}]',
      'title' => '查询批量导入的设备列表',
      'summary' => '调用该接口根据申请批次ID（ApplyId）查询批量导入的设备列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchCheckImportDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属云网关产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '批量校验的设备列表。

> 单次调用该接口，最多能传入10,000个设备的信息。超过该限制的数据会被丢弃。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '设备信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Sn' => 
                array (
                  'description' => '设备的序列号。

序列号支持英文字母、数字和下划线（_），长度限制为1~64个字符。

> 单次调用该接口，最多能传入10,000个设备序列号。超过该限制的数据会被丢弃。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'QC4******001',
                ),
                'DeviceName' => 
                array (
                  'description' => '设备的名称。

设备名称支持英文字母、数字、短划线（-）、下划线（_）、at（@）、英文句号（.）和英文冒号（:），长度限制为4~32个字符。

设备名称在产品维度下不可重复。

> 单次调用该接口，最多能传入10,000个设备名称。超过该限制的数据会被丢弃。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'light',
                ),
                'DeviceSecret' => 
                array (
                  'description' => '设备的密钥。

设备密钥支持英文字母、数字、短划线（-）、下划线（_）、at（@）、英文句号（.）和英文冒号（:），长度限制为1~32个字符。

> 单次调用该接口，最多能传入10,000个设备密钥。超过该限制的数据会被丢弃。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'b4d43f7******10ba5e5',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，如果有校验失败的数据，则返回对应的失败信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'InvalidDetailList' => 
                  array (
                    'description' => '不合法设备列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '不合法设备信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ErrorMsg' => 
                        array (
                          'description' => '导入设备失败时，返回的出错信息。',
                          'type' => 'string',
                          'example' => 'The device name is illegal.',
                        ),
                        'Sn' => 
                        array (
                          'description' => '设备SN码。',
                          'type' => 'string',
                          'example' => 'QC4001#',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'light%',
                        ),
                        'DeviceSecret' => 
                        array (
                          'description' => '设备密钥。',
                          'type' => 'string',
                          'example' => '	^67$',
                        ),
                      ),
                    ),
                  ),
                  'RepeatedDeviceNameList' => 
                  array (
                    'description' => '设备信息校验失败时，返回的重复设备名称的列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '设备信息校验失败时，返回的重复设备名称。',
                      'type' => 'string',
                      'example' => '{ "RepeatedDeviceNameList": [ "abcd", "asdf" ] }',
                    ),
                  ),
                  'InvalidSnList' => 
                  array (
                    'description' => '设备信息校验失败时，返回的不合法设备序列号的列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '设备信息校验失败时，返回的不合法设备序列号。',
                      'type' => 'string',
                      'example' => '{ "InvalidSnList": [ "" ] }',
                    ),
                  ),
                  'InvalidDeviceSecretList' => 
                  array (
                    'description' => '设备信息校验失败时，返回的不合法设备密钥的列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '设备信息校验失败时，返回的不合法设备密钥。',
                      'type' => 'string',
                      'example' => '{ "InvalidDeviceSecretList": [ "^67$", "1" ] }',
                    ),
                  ),
                  'InvalidDeviceNameList' => 
                  array (
                    'description' => '设备信息校验失败时，返回的不合法设备名称的列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '设备信息校验失败时，返回的不合法设备名称。',
                      'type' => 'string',
                      'example' => '{ "InvalidDeviceNameList": [ "APT$", "aw" ] }',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.device.TooManyDeviceNamesPerRequest',
            'errorMessage' => 'The devices you query exceed the maximum number.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.device.NoneDeviceNameElement',
            'errorMessage' => 'The DeviceName list is empty.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.device.InvalidDeviceParams',
            'errorMessage' => 'The request parameters are invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"InvalidDetailList\\": [\\n      {\\n        \\"ErrorMsg\\": \\"The device name is illegal.\\",\\n        \\"Sn\\": \\"QC4001#\\",\\n        \\"DeviceName\\": \\"light%\\",\\n        \\"DeviceSecret\\": \\"\\\\t^67$\\"\\n      }\\n    ],\\n    \\"RepeatedDeviceNameList\\": [\\n      \\"{ \\\\\\"RepeatedDeviceNameList\\\\\\": [ \\\\\\"abcd\\\\\\", \\\\\\"asdf\\\\\\" ] }\\"\\n    ],\\n    \\"InvalidSnList\\": [\\n      \\"{ \\\\\\"InvalidSnList\\\\\\": [ \\\\\\"\\\\\\" ] }\\"\\n    ],\\n    \\"InvalidDeviceSecretList\\": [\\n      \\"{ \\\\\\"InvalidDeviceSecretList\\\\\\": [ \\\\\\"^67$\\\\\\", \\\\\\"1\\\\\\" ] }\\"\\n    ],\\n    \\"InvalidDeviceNameList\\": [\\n      \\"{ \\\\\\"InvalidDeviceNameList\\\\\\": [ \\\\\\"APT$\\\\\\", \\\\\\"aw\\\\\\" ] }\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<BatchCheckImportDeviceResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</BatchCheckImportDeviceResponse>","errorExample":""}]',
      'title' => '批量校验导入的设备',
      'summary' => '调用该接口批量校验导入的设备。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为100。

> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchImportVehicleDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属云网关产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Bw****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'DeviceName' => 
                array (
                  'type' => 'string',
                  'required' => false,
                ),
                'DeviceId' => 
                array (
                  'type' => 'string',
                  'required' => false,
                ),
                'DeviceSecret' => 
                array (
                  'type' => 'string',
                  'required' => false,
                ),
                'DeviceModel' => 
                array (
                  'type' => 'string',
                  'required' => false,
                ),
                'Manufacturer' => 
                array (
                  'type' => 'string',
                  'required' => false,
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。

设备导入失败时，会返回以下信息：

- **InvalidDeviceIdList**：不合法设备ID的列表。
- **InvalidDeviceModelList**：不合法设备型号的列表。
- **InvalidManufacturerList**：不合法设备厂商ID的列表。
- **RepeatedDeviceIdList**：重复设备ID的列表。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'ApplyId' => 
                  array (
                    'description' => '调用成功时，系统返回的申请批次ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1295006',
                  ),
                  'InvalidDetailList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'InvalidDetailList' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ErrorMsg' => 
                            array (
                              'type' => 'string',
                            ),
                            'DeviceModel' => 
                            array (
                              'type' => 'string',
                            ),
                            'DeviceName' => 
                            array (
                              'type' => 'string',
                            ),
                            'DeviceId' => 
                            array (
                              'type' => 'string',
                            ),
                            'Manufacturer' => 
                            array (
                              'type' => 'string',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'InvalidManufacturerList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'invalidManufacturerList' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                  'RepeatedDeviceIdList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'repeatedDeviceIdList' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                  'RepeatedDeviceNameList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'RepeatedDeviceNameList' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                  'InvalidDeviceIdList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'invalidDeviceIdList' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                  'InvalidDeviceModelList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'invalidDeviceModelList' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                  'InvalidDeviceNameList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'InvalidDeviceNameList' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.device.TooManyDeviceNamesPerRequest',
            'errorMessage' => 'The devices you query exceed the maximum number.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.device.ApplyManyDevicesFailed',
            'errorMessage' => 'An error occurred while creating multiple devices.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.common.InvalidTenant',
            'errorMessage' => 'the device tenantId is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.device.InvalidFormattedDeviceNameInNameArray',
            'errorMessage' => 'The DeviceName list contains an invalid DeviceName.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.prod.InvalidProductAuthType',
            'errorMessage' => 'The product authentication type is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.prod.InvalidFormattedProductkey',
            'errorMessage' => 'The ProductKey format is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ApplyId\\": 1295006,\\n    \\"InvalidDetailList\\": {\\n      \\"InvalidDetailList\\": [\\n        {\\n          \\"ErrorMsg\\": \\"\\",\\n          \\"DeviceModel\\": \\"\\",\\n          \\"DeviceName\\": \\"\\",\\n          \\"DeviceId\\": \\"\\",\\n          \\"Manufacturer\\": \\"\\"\\n        }\\n      ]\\n    },\\n    \\"InvalidManufacturerList\\": {\\n      \\"invalidManufacturerList\\": [\\n        \\"\\"\\n      ]\\n    },\\n    \\"RepeatedDeviceIdList\\": {\\n      \\"repeatedDeviceIdList\\": [\\n        \\"\\"\\n      ]\\n    },\\n    \\"RepeatedDeviceNameList\\": {\\n      \\"RepeatedDeviceNameList\\": [\\n        \\"\\"\\n      ]\\n    },\\n    \\"InvalidDeviceIdList\\": {\\n      \\"invalidDeviceIdList\\": [\\n        \\"\\"\\n      ]\\n    },\\n    \\"InvalidDeviceModelList\\": {\\n      \\"invalidDeviceModelList\\": [\\n        \\"\\"\\n      ]\\n    },\\n    \\"InvalidDeviceNameList\\": {\\n      \\"InvalidDeviceNameList\\": [\\n        \\"\\"\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<BatchImportVehicleDeviceResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Data>\\n    <ApplyId>1295006</ApplyId>\\n</Data>\\n<Code/>\\n<Success>true</Success>\\n</BatchImportVehicleDeviceResponse>","errorExample":""}]',
      'title' => 'BatchImportVehicleDevice',
      'summary' => '调用该接口在云网关产品下批量导入设备。',
      'description' => '## 使用说明
本接口用于批量导入JT/T 808协议云网关设备。


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchCheckVehicleDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属云网关产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Bw****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '批量校验的设备列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '设备信息。',
              'type' => 'object',
              'properties' => 
              array (
                'DeviceName' => 
                array (
                  'description' => '校验导入的GB/T 32960协议云网关设备时，需传入的设备名称。

设备名称支持英文字母和数字，长度限制为4~17个字符。

> 单次调用该接口，最多能传入10,000个设备名称。超过该限制的数据会被丢弃。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'vin0001',
                ),
                'DeviceId' => 
                array (
                  'description' => '校验导入的JT/T 808协议云网关设备时，需传入的设备ID。

设备ID支持英文字母、数字、短划线（-），长度限制为4~30个字符。

> 单次调用该接口，最多能传入10,000个设备ID。超过该限制的数据会被丢弃。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'di0001',
                ),
                'DeviceSecret' => 
                array (
                  'type' => 'string',
                  'required' => false,
                ),
                'DeviceModel' => 
                array (
                  'description' => '校验导入的JT/T 808协议云网关设备时，需传入的设备型号。

设备型号支持英文字母、数字、短划线（-），长度限制为4~30个字符。

> 单次调用该接口，最多能传入10,000个设备型号。超过该限制的数据会被丢弃。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'dm0001',
                ),
                'Manufacturer' => 
                array (
                  'description' => '校验导入的JT/T 808协议云网关设备时，需传入的设备厂商ID。

设备厂商ID支持英文字母、数字、短划线（-），长度限制为4~11个字符。

> 单次调用该接口，最多能传入10,000个设备厂商ID。超过该限制的数据会被丢弃。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'mf0001',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，如果有校验失败的数据，则返回对应的失败信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'InvalidDetailList' => 
                  array (
                    'description' => '不合法设备列表信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '不合法设备信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ErrorMsg' => 
                        array (
                          'description' => '设备校验失败，返回的出错信息。',
                          'type' => 'string',
                          'example' => 'The device name is illegal.',
                        ),
                        'DeviceModel' => 
                        array (
                          'description' => 'JT/T 808协议云网关设备的设备型号。',
                          'type' => 'string',
                          'example' => 'dm_*0001',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => 'GB/T 32960协议云网关设备的设备名称。',
                          'type' => 'string',
                          'example' => 'device_*0001',
                        ),
                        'DeviceId' => 
                        array (
                          'description' => 'JT/T 808协议云网关设备的设备ID。',
                          'type' => 'string',
                          'example' => 'di_*0001',
                        ),
                        'Manufacturer' => 
                        array (
                          'description' => 'JT/T 808协议云网关设备的设备厂商ID。',
                          'type' => 'string',
                          'example' => 'mf_*0001',
                        ),
                      ),
                    ),
                  ),
                  'InvalidManufacturerList' => 
                  array (
                    'description' => 'JT/T 808协议云网关设备信息校验失败时，不合法设备厂商ID的列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'JT/T 808协议云网关设备信息校验失败时，返回的不合法设备厂商ID的列表。',
                      'type' => 'string',
                      'example' => '{ "InvalidManufacturerList": [ "manufacturer#&_", "aw" ] }',
                    ),
                  ),
                  'RepeatedDeviceIdList' => 
                  array (
                    'description' => 'JT/T 808协议云网关设备信息校验失败时，重复设备ID的列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'JT/T 808协议云网关设备信息校验失败时，返回的重复设备ID的列表。',
                      'type' => 'string',
                      'example' => '{ "InvalidDeviceIdList": [ "deviceId01", "deviceId02" ] }',
                    ),
                  ),
                  'RepeatedDeviceNameList' => 
                  array (
                    'description' => 'GB/T 32960协议云网关设备信息校验失败时，返回的重复设备名称的列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'GB/T 32960协议云网关设备信息校验失败时，返回的重复设备名称的列表。',
                      'type' => 'string',
                      'example' => '{ "RepeatedDeviceNameList": [ "abcd", "asdf" ] }',
                    ),
                  ),
                  'InvalidDeviceIdList' => 
                  array (
                    'description' => 'JT/T 808协议云网关设备信息校验失败时，不合法设备ID的列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'JT/T 808协议云网关设备信息校验失败时，返回的不合法设备ID的列表。',
                      'type' => 'string',
                      'example' => '{ "InvalidDeviceIdList": [ "DEVIC^*$" ] }',
                    ),
                  ),
                  'InvalidDeviceModelList' => 
                  array (
                    'description' => 'JT/T 808协议云网关设备信息校验失败时，不合法设备型号的列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'JT/T 808协议云网关设备信息校验失败时，返回的不合法设备型号的列表。',
                      'type' => 'string',
                      'example' => '{ "InvalidDeviceModelList": [ "DEM$", "DE" ] }',
                    ),
                  ),
                  'InvalidDeviceNameList' => 
                  array (
                    'description' => 'GB/T 32960协议云网关设备信息校验失败时，返回的不合法设备名称的列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'GB/T 32960协议云网关设备信息校验失败时，返回的不合法设备名称的列表。',
                      'type' => 'string',
                      'example' => '{ "InvalidDeviceNameList": [ "APT$", "aw" ] }',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.device.TooManyDeviceNamesPerRequest',
            'errorMessage' => 'The devices you query exceed the maximum number.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.device.NoneDeviceNameElement',
            'errorMessage' => 'The DeviceName list is empty.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.device.InvalidDeviceParams',
            'errorMessage' => 'The request parameters are invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"InvalidDetailList\\": [\\n      {\\n        \\"ErrorMsg\\": \\"The device name is illegal.\\",\\n        \\"DeviceModel\\": \\"dm_*0001\\",\\n        \\"DeviceName\\": \\"device_*0001\\",\\n        \\"DeviceId\\": \\"di_*0001\\",\\n        \\"Manufacturer\\": \\"mf_*0001\\"\\n      }\\n    ],\\n    \\"InvalidManufacturerList\\": [\\n      \\"{ \\\\\\"InvalidManufacturerList\\\\\\": [ \\\\\\"manufacturer#&_\\\\\\", \\\\\\"aw\\\\\\" ] }\\"\\n    ],\\n    \\"RepeatedDeviceIdList\\": [\\n      \\"{ \\\\\\"InvalidDeviceIdList\\\\\\": [ \\\\\\"deviceId01\\\\\\", \\\\\\"deviceId02\\\\\\" ] }\\"\\n    ],\\n    \\"RepeatedDeviceNameList\\": [\\n      \\"{ \\\\\\"RepeatedDeviceNameList\\\\\\": [ \\\\\\"abcd\\\\\\", \\\\\\"asdf\\\\\\" ] }\\"\\n    ],\\n    \\"InvalidDeviceIdList\\": [\\n      \\"{ \\\\\\"InvalidDeviceIdList\\\\\\": [ \\\\\\"DEVIC^*$\\\\\\" ] }\\"\\n    ],\\n    \\"InvalidDeviceModelList\\": [\\n      \\"{ \\\\\\"InvalidDeviceModelList\\\\\\": [ \\\\\\"DEM$\\\\\\", \\\\\\"DE\\\\\\" ] }\\"\\n    ],\\n    \\"InvalidDeviceNameList\\": [\\n      \\"{ \\\\\\"InvalidDeviceNameList\\\\\\": [ \\\\\\"APT$\\\\\\", \\\\\\"aw\\\\\\" ] }\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<BatchCheckVehicleDeviceResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Code/>\\n<Success>true</Success>\\n</BatchCheckVehicleDeviceResponse>","errorExample":""}]',
      'title' => 'BatchCheckVehicleDevice',
      'summary' => '调用该接口批量校验导入的云网关设备。',
      'description' => '## 使用说明
本接口适用于批量校验导入的JT/T 808协议和GB/T 32960协议的云网关设备。


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为100。

> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryVehicleDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属云网关产品的**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1Bw****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的设备信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'ProductKey' => 
                  array (
                    'description' => '设备所属云网关产品的**ProductKey**。',
                    'type' => 'string',
                    'example' => 'a1BwAGV****',
                  ),
                  'ModifiedTime' => 
                  array (
                    'description' => '设备更新时间的时间戳。单位为毫秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1657062301656',
                  ),
                  'DeviceName' => 
                  array (
                    'description' => '设备名称。',
                    'type' => 'string',
                    'example' => 'light',
                  ),
                  'Protocol' => 
                  array (
                    'description' => '云网关协议类型。取值：

- **gb32960**：GB/T 32960协议。
- **jt808**：JT/T 808协议。
- **sl651**：SL 651协议。',
                    'type' => 'string',
                    'example' => 'gb32960',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '设备创建时间的时间戳。单位为毫秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1557062301656',
                  ),
                  'IotId' => 
                  array (
                    'description' => '物联网平台为该设备颁发的ID，设备的唯一标识符。',
                    'type' => 'string',
                    'example' => 'dm0001',
                  ),
                  'JtProtocolDeviceData' => 
                  array (
                    'description' => '仅JT/T 808协议云网关设备返回的注册认证信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Status' => 
                      array (
                        'description' => '设备状态。可取值：

- **create**：设备已创建。
- **register**：设备已注册。
- **unregister**：设备已注销。',
                        'type' => 'string',
                        'example' => 'create',
                      ),
                      'RegisterTime' => 
                      array (
                        'description' => '设备注册时间的时间戳。单位为毫秒。',
                        'type' => 'string',
                        'format' => 'int64',
                        'example' => '1517062301656',
                      ),
                      'AuthCode' => 
                      array (
                        'description' => '设备认证的鉴权码。',
                        'type' => 'string',
                        'example' => '*******',
                      ),
                      'VehicleColour' => 
                      array (
                        'description' => '车牌颜色。取值符合标准JT/T 808协议要求即可。详细说明，请参见[JT/T 808的2019版本协议](https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/file-manage-files/zh-CN/20221220/mdsf/JT-T%20808-2019.pdf)。',
                        'type' => 'string',
                        'example' => '1',
                      ),
                      'DeviceId' => 
                      array (
                        'description' => '设备ID。',
                        'type' => 'string',
                        'example' => 'di0001',
                      ),
                      'VehicleNumber' => 
                      array (
                        'description' => '车牌号。',
                        'type' => 'string',
                        'example' => '浙A****',
                      ),
                      'City' => 
                      array (
                        'description' => '设备注册的城市。',
                        'type' => 'string',
                        'example' => '杭州',
                      ),
                      'DeviceModel' => 
                      array (
                        'description' => '设备型号。',
                        'type' => 'string',
                        'example' => 'dm0001',
                      ),
                      'Manufacturer' => 
                      array (
                        'description' => '设备厂商ID。',
                        'type' => 'string',
                        'example' => 'mf0001',
                      ),
                      'Province' => 
                      array (
                        'description' => '设备注册的省。',
                        'type' => 'string',
                        'example' => '浙江',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Iot.Device.NotExistedDevice',
            'errorMessage' => 'The device does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.device.NullDeviceName',
            'errorMessage' => 'The ProductKey or DeviceName parameter cannot be empty.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.device.NoPermission',
            'errorMessage' => 'The Operation has not permission to the device.',
          ),
          3 => 
          array (
            'errorCode' => 'Iot.Device.NoVehicleProtocolDevice',
            'errorMessage' => 'The device non vehicle protocol data.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ProductKey\\": \\"a1BwAGV****\\",\\n    \\"ModifiedTime\\": 1657062301656,\\n    \\"DeviceName\\": \\"light\\",\\n    \\"Protocol\\": \\"gb32960\\",\\n    \\"CreateTime\\": 1557062301656,\\n    \\"IotId\\": \\"dm0001\\",\\n    \\"JtProtocolDeviceData\\": {\\n      \\"Status\\": \\"create\\",\\n      \\"RegisterTime\\": 1517062301656,\\n      \\"AuthCode\\": \\"*******\\",\\n      \\"VehicleColour\\": \\"1\\",\\n      \\"DeviceId\\": \\"di0001\\",\\n      \\"VehicleNumber\\": \\"浙A****\\",\\n      \\"City\\": \\"杭州\\",\\n      \\"DeviceModel\\": \\"dm0001\\",\\n      \\"Manufacturer\\": \\"mf0001\\",\\n      \\"Province\\": \\"浙江\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryVehicleDeviceResponse>\\n<RequestId>CF291A12-EBB7-5A38-A087-C8A04450913E</RequestId>\\n<Data>\\n    <IotId>ERfsXh***************wk05dm0</IotId>\\n    <ModifiedTime>1695274556000</ModifiedTime>\\n    <CreateTime>1695274556000</CreateTime>\\n    <Protocol>gb32960</Protocol>\\n    <ProductKey>k05d******</ProductKey>\\n    <DeviceName>Device01</DeviceName>\\n</Data>\\n<Success>true</Success>\\n</QueryVehicleDeviceResponse>","errorExample":""}]',
      'title' => 'QueryVehicleDevice',
      'summary' => '调用该接口查询云网关设备信息。',
      'description' => '## 使用说明
本接口适用于查询JT/T 808协议、GB/T 32960协议和SL 651协议云网关设备的信息。

使用云网关协议接入设备的具体流程和通信说明，请参见[JT/T 808协议云网关概述](~~474256~~)、[GB/T 32960协议云网关概述](~~2248990~~)和[SL 651协议云网关概述](~~2636038~~)。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateDeviceDistributeJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待分发的设备名称列表。最多包含1000个设备名称。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => true,
            'example' => 'RepeatList',
            'maxItems' => 10000,
          ),
        ),
        1 => 
        array (
          'name' => 'TargetInstanceConfig',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '目标实例配置列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'TargetInstanceId' => 
                array (
                  'description' => '设备分发的目标实例配置。实例ID详情，请参见参数**SourceInstanceId**描述。

- 当参数**Strategy**为**1**时，此处可传入多个实例ID。
- 当参数**Strategy**为**0**时，此处传入一个实例ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'iot-cn-6ja***',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10,
          ),
        ),
        2 => 
        array (
          'name' => 'SourceInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属的源实例ID。

- 各地域公共实例ID：

    - 华东2（上海）：iotx-oxssharez200。
    - 日本：iotx-oxssharez300。
    - 新加坡：iotx-oxssharez400。
    - 美国（硅谷）：iotx-oxssharez500。
    - 美国（弗吉尼亚）：iotx-oxssharez600。
    - 德国（法兰克福）：iotx-oxssharez700。

- 企业版实例ID：
    
    1. 登录物联网平台控制台，从顶部导航栏左上方的下拉菜单选择地域。
    
    2. 在**实例概览**页面，单击实例名称，在**实例详情**页面的**实例基本信息**中查看**实例ID**。
',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-060***',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        4 => 
        array (
          'name' => 'TargetUid',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属的阿里云账号ID。可登录物联网平台控制台，单击账号头像，跳转至**安全设置**页面查看。

**TargetUid**与**TargetAliyunId**参数至少传入一个。',
            'type' => 'string',
            'required' => false,
            'example' => '198***',
          ),
        ),
        5 => 
        array (
          'name' => 'TargetAliyunId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属的阿里云账号。可登录物联网平台控制台，单击账号头像，跳转至**安全设置**页面查看。

**TargetUid**与**TargetAliyunId**参数至少传入一个。',
            'type' => 'string',
            'required' => false,
            'example' => ' io****@example.com',
          ),
        ),
        6 => 
        array (
          'name' => 'Strategy',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '分发策略。默认值为0。

- **0**：指定地域，将设备分发到指定地域的一个实例中。
- **1**：就近接入，配置多个地域的实例ID，设备将根据设备的IP位置动态接入其中距离最近的地域。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'JobId' => 
              array (
                'description' => '调用成功后，返回的任务ID。任务的全局唯一标识符。',
                'type' => 'string',
                'example' => 'UbmsMHmkqv0PiAG****010001',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"JobId\\": \\"UbmsMHmkqv0PiAG****010001\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateDeviceDistributeJobResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<JobId>UbmsMHmkqv0PiAG****010001</JobId>\\n<Success>true</Success>\\n</CreateDeviceDistributeJobResponse>","errorExample":""}]',
      'title' => 'CreateDeviceDistributeJob',
      'summary' => '调用该接口创建设备分发任务，默认同时分发设备所属产品。',
      'description' => '## 使用说明

您可参考以下步骤，完成设备分发。

1. 调用本接口发起设备分发任务（异步调用），获取返回参数**JobId**。

2. 将上一步的返回参数**JobId**作为请求参数，重复调用接口[QueryDeviceDistributeJob](~~199536~~)，查看返回参数**Status**。
   
    > 您需根据接口的QPS限制，控制重复调用接口的频率。
    
    **Status**值如下，表示分发任务已处于最终态：
    - **2**：设备分发任务正常执行完成。此时，不代表所有设备分发成功，每个设备的具体分发结果，请执行下一步获取。
    - **3**：分发异常中断。处理异常流后，可重新发起设备分发任务。


3. 将第一步的返回参数**JobId**作为请求参数，调用接口[QueryDeviceDistributeDetail](~~199533~~)，获取返回参数**File**，即分发结果的文件URL。

    > 文件URL的有效期为10分钟。

4. 通过文件URL获取分发结果详情，其中每个设备对应一个分发结果**Code**，当**Code**为200时，表示该设备分发成功。
    
    如果设备分发失败，您可按照以上操作，重新进行设备分发。



## 限制说明

- 调用云服务的接入地址**Endpoint**仅支持华东2（上海），即`iot.cn-shanghai.aliyuncs.com`。

- 不支持调用本接口创建跨账号的分发任务。

- 单个阿里云账号下，产品分发和设备分发的任务总数不超过10个。创建产品分发任务，请参见[CreateProductDistributeJob](~~199383~~)。

- 单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。

    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateProductDistributeJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SourceInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品所属的源实例ID。

- 各地域公共实例ID：

    - 华东2（上海）：iotx-oxssharez200。
    - 日本：iotx-oxssharez300。
    - 新加坡：iotx-oxssharez400。
    - 美国（硅谷）：iotx-oxssharez500。
    - 美国（弗吉尼亚）：iotx-oxssharez600。
    - 德国（法兰克福）：iotx-oxssharez700。

- 企业版实例ID：
    
    1. 登录物联网平台控制台，从顶部导航栏左上方的下拉菜单选择地域。
    
    2. 在**实例概览**页面，单击实例名称，在**实例详情**页面的**实例基本信息**中查看**实例ID**。

    ',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-cn-st2***',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待分发产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'TargetInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品分发的目标实例ID。实例ID详情，请参见参数**SourceInstanceId**描述。',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-cn-6ja***',
          ),
        ),
        3 => 
        array (
          'name' => 'TargetUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品所属的阿里云账号ID。可登录物联网平台控制台，单击账号头像，跳转至**基本信息**页面查看**账号ID**。

**TargetUid**与**TargetAliyunId**参数至少传入一个。',
            'type' => 'string',
            'required' => false,
            'example' => '198***',
          ),
        ),
        4 => 
        array (
          'name' => 'TargetAliyunId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品所属的阿里云账号。可登录物联网平台控制台，单击账号头像，跳转至**基本信息**页面查看**登录账号**。

**TargetUid**与**TargetAliyunId**参数至少传入一个。',
            'type' => 'string',
            'required' => false,
            'example' => ' io****@example.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'JobId' => 
              array (
                'description' => '调用成功后，返回的任务ID。任务的全局唯一标识符。',
                'type' => 'string',
                'example' => 'UbmsMHmkqv0PiAG****010001',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"JobId\\": \\"UbmsMHmkqv0PiAG****010001\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateProductDistributeJobResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<JobId>UbmsMHmkqv0PiAG****010001</JobId>\\n<Success>true</Success>\\n</CreateProductDistributeJobResponse>","errorExample":""}]',
      'title' => '创建产品分发任务',
      'summary' => '调用该接口创建产品分发任务，将指定产品分发到指定的目标实例。',
      'description' => '## 使用说明

- 调用云服务的接入地址**Endpoint**仅支持华东2（上海），即`iot.cn-shanghai.aliyuncs.com`。

- 不支持调用本接口创建跨账号的分发任务。

- 产品分发任务不会同步分发产品下设备。

- 产品分发完成后，不支持修改产品的物模型及相关脚本信息。

- 单个阿里云账号下，产品分发和设备分发的任务总数不超过10个。创建设备分发任务，请参见[CreateDeviceDistributeJob](~~199390~~)。

- 单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。

    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceDistributeDetail' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分发任务ID。任务的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'UbmsMHmkqv0PiAG****010001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'File' => 
              array (
                'description' => '分发结果的文件URL，即文件在对象存储（OSS）上的存储地址，有效期为10分钟。
',
                'type' => 'string',
                'example' => 'https://iotx-***.oss-cn-shanghai.aliyuncs.com/job***/7u***',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"File\\": \\"https://iotx-***.oss-cn-shanghai.aliyuncs.com/job***/7u***\\"\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceDistributeDetailResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<File>https://iotx-***.oss-cn-shanghai.aliyuncs.com/job***/7u***</File>\\n<Success>true</Success>\\n</QueryDeviceDistributeDetailResponse>","errorExample":""}]',
      'title' => '获取设备分发任务执行完成后的结果信息',
      'summary' => '调用该接口获取设备分发任务执行完成后的结果信息。',
      'description' => '## 使用说明

- 调用云服务的接入地址**Endpoint**仅支持华东2（上海），即`iot.cn-shanghai.aliyuncs.com`。

- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceDistributeJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分发任务ID。任务的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'UbmsMHmkqv0PiAG****010001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => ' E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功后，返回的设备分发任务详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'Strategy' => 
                  array (
                    'description' => '分发策略。

- **0**：指定地域，将设备分发到指定地域的指定实例。
- **1**：就近接入，配置了多个地域的实例ID，设备将根据设备的IP位置动态接入其中距离最近的地域。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Status' => 
                  array (
                    'description' => '分发任务状态。

- **0**：任务初始化。

- **1**：任务执行中。
 
- **2**：任务完成。该状态仅表示分发任务执行完成，不表示所有产品和设备都分发成功。获取分发结果详情，请调用[QueryDeviceDistributeDetail](~~199533~~)。

- **3**：任务异常中断。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => '设备所属产品的**ProductKey**。',
                    'type' => 'string',
                    'example' => 'a1BwAGV****',
                  ),
                  'TargetUid' => 
                  array (
                    'description' => '阿里云账号ID。',
                    'type' => 'string',
                    'example' => '198***',
                  ),
                  'JobId' => 
                  array (
                    'description' => '分发任务的ID。',
                    'type' => 'string',
                    'example' => 'UbmsMHmkqv0PiAG****010001',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '分发任务的创建时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1581595942000',
                  ),
                  'SourceUid' => 
                  array (
                    'description' => '阿里云账号ID。',
                    'type' => 'string',
                    'example' => '198***',
                  ),
                  'Total' => 
                  array (
                    'description' => '分发任务中的设备总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'SourceInstanceId' => 
                  array (
                    'description' => '源实例ID。',
                    'type' => 'string',
                    'example' => 'iot-cn-6ja***',
                  ),
                  'TargetInstanceConfigs' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'targetInstanceConfigs' => 
                      array (
                        'description' => '目标实例ID列表。

- 当参数**Strategy**为**1**时，列表可有多个实例ID。
- 当参数**Strategy**为**0**时，列表有一个实例ID。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TargetInstanceId' => 
                            array (
                              'description' => '目标实例ID。',
                              'type' => 'string',
                              'example' => 'iot-cn-6ja***',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\" E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Strategy\\": 0,\\n    \\"Status\\": 1,\\n    \\"ProductKey\\": \\"a1BwAGV****\\",\\n    \\"TargetUid\\": \\"198***\\",\\n    \\"JobId\\": \\"UbmsMHmkqv0PiAG****010001\\",\\n    \\"GmtCreate\\": 1581595942000,\\n    \\"SourceUid\\": \\"198***\\",\\n    \\"Total\\": 5,\\n    \\"SourceInstanceId\\": \\"iot-cn-6ja***\\",\\n    \\"TargetInstanceConfigs\\": {\\n      \\"targetInstanceConfigs\\": [\\n        {\\n          \\"TargetInstanceId\\": \\"iot-cn-6ja***\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceDistributeJobResponse>\\n<RequestId> E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <Status>1</Status>\\n    <GmtCreate>1581595942000</GmtCreate>\\n    <SourceUid>198***</SourceUid>\\n    <Total>5</Total>\\n    <Strategy>0</Strategy>\\n    <TargetUid>198***</TargetUid>\\n    <SourceInstanceId>iot-cn-6ja***</SourceInstanceId>\\n    <TargetInstanceConfigs>\\n        <targetInstanceConfigs>\\n            <TargetInstanceId>iot-cn-6ja***</TargetInstanceId>\\n        </targetInstanceConfigs>\\n    </TargetInstanceConfigs>\\n    <ProductKey>a1BwAGV****</ProductKey>\\n    <JobId>UbmsMHmkqv0PiAG****010001</JobId>\\n</Data>\\n<Success>true</Success>\\n</QueryDeviceDistributeJobResponse>","errorExample":""}]',
      'title' => '获取设备分发任务的详细信息',
      'summary' => '调用该接口获取设备分发任务的详细信息。',
      'description' => '## 使用说明

- 调用云服务的接入地址**Endpoint**仅支持华东2（上海），即`iot.cn-shanghai.aliyuncs.com`。

- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDeviceDistributeJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TargetUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备分发的目标阿里云账号ID。',
            'type' => 'string',
            'required' => false,
            'example' => '198***',
          ),
        ),
        1 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。默认值是1。

**NextToken**与**CurrentPage**是设置显示结果的条件参数，可任选一个传入。如果同时传入，则**NextToken**优先级更高。

**NextToken**参数的使用说明，请参见**NextToken**描述。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的分发任务数量。最大不超过200条。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备分发任务的状态。

- **0**：任务初始化。

- **1**：任务执行中。
 
- **2**：任务完成。该状态仅表示分发任务执行完成，不表示所有产品和设备都分发成功。获取分发结果详情，请调用[QueryDeviceDistributeDetail](~~199533~~)。

- **3**：任务异常中断。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'JobId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备分发任务的ID。任务的全局唯一标识符。',
            'type' => 'string',
            'required' => false,
            'example' => 'UbmsMHmkqv0PiAG****010001',
          ),
        ),
        5 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页标识，首次查询无需传入。

**NextToken**与**CurrentPage**是设置显示结果的条件参数，可任选一个传入。如果同时传入，则**NextToken**优先级更高。

><notice>
定义查询结果的偏移数量为：**PageSize**×（**CurrentPage**-1）。

当偏移数量大于10,000时，必须传入上一次调用本接口返回的**NextToken**值，才会返回**Data**数据。否则，接口请求会被中断，无法返回**Data**数据。

></notice>

',
            'type' => 'string',
            'required' => false,
            'example' => 'TGlzdFJlc291***',
          ),
        ),
        6 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所隶属的产品ProductKey。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1T27vz****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功后，返回的设备分发任务列表，详情参见**JobInfo**下信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Total' => 
                  array (
                    'description' => '返回的设备分发任务总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'NextToken' => 
                  array (
                    'description' => '下一页标识。可在下次请求时传入，来获取下一页数据。

如果返回值为空，则表示没有下一页数据了。',
                    'type' => 'string',
                    'example' => 'TGlzdFJlc291***',
                  ),
                  'JobInfo' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'items' => 
                      array (
                        'description' => '任务的信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Strategy' => 
                            array (
                              'description' => '分发策略。

- **0**（默认）：指定地域，将设备分发到指定地域的指定实例。
- **1**：就近接入，即设备分发任务中，配置了多个地域的实例ID，设备根据设备的IP位置，分发到距离其最近地域的实例中。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '0',
                            ),
                            'Status' => 
                            array (
                              'description' => '任务状态。

- **0**：任务初始化。

- **1**：任务执行中。
 
- **2**：任务完成。该状态仅表示分发任务执行完成，不表示所有产品和设备都分发成功。获取分发结果详情，请调用[QueryDeviceDistributeDetail](~~199533~~)。

- **3**：任务异常中断。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'ProductKey' => 
                            array (
                              'description' => '设备所属产品的**ProductKey**。',
                              'type' => 'string',
                              'example' => 'a1BwAGV****',
                            ),
                            'TargetUid' => 
                            array (
                              'description' => '目标阿里云账号ID。',
                              'type' => 'string',
                              'example' => '198***',
                            ),
                            'JobId' => 
                            array (
                              'description' => '任务的ID。',
                              'type' => 'string',
                              'example' => 'UbmsMHmkqv0PiAG****010001',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '任务的创建时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1581595942000',
                            ),
                            'SourceInstanceName' => 
                            array (
                              'description' => '源实例名称。',
                              'type' => 'string',
                              'example' => '实例调试1',
                            ),
                            'SourceUid' => 
                            array (
                              'description' => '源阿里云账号ID。',
                              'type' => 'string',
                              'example' => '198***',
                            ),
                            'Total' => 
                            array (
                              'description' => '分发任务中的设备总数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5',
                            ),
                            'SourceRegion' => 
                            array (
                              'description' => '源实例所在地域。',
                              'type' => 'string',
                              'example' => 'cn-shanghai',
                            ),
                            'SourceInstanceId' => 
                            array (
                              'description' => '源实例ID。',
                              'type' => 'string',
                              'example' => 'iot-cn-6ja***',
                            ),
                            'TargetInstanceConfigs' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'targetInstanceConfigs' => 
                                array (
                                  'description' => '目标实例ID列表。

- 当参数**Strategy**为**1**时，列表可有多个实例ID。
- 当参数**Strategy**为**0**时，列表有一个实例ID。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'TargetInstanceName' => 
                                      array (
                                        'description' => '目标实例名称。',
                                        'type' => 'string',
                                        'example' => '实例调试2',
                                      ),
                                      'TargetRegion' => 
                                      array (
                                        'description' => '目标实例所在地域。',
                                        'type' => 'string',
                                        'example' => 'cn-shanghai',
                                      ),
                                      'TargetInstanceId' => 
                                      array (
                                        'description' => '目标实例ID。',
                                        'type' => 'string',
                                        'example' => 'iot-cn-6ja***',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Total\\": 10,\\n    \\"NextToken\\": \\"TGlzdFJlc291***\\",\\n    \\"JobInfo\\": {\\n      \\"items\\": [\\n        {\\n          \\"Strategy\\": 0,\\n          \\"Status\\": 1,\\n          \\"ProductKey\\": \\"a1BwAGV****\\",\\n          \\"TargetUid\\": \\"198***\\",\\n          \\"JobId\\": \\"UbmsMHmkqv0PiAG****010001\\",\\n          \\"GmtCreate\\": 1581595942000,\\n          \\"SourceInstanceName\\": \\"实例调试1\\",\\n          \\"SourceUid\\": \\"198***\\",\\n          \\"Total\\": 5,\\n          \\"SourceRegion\\": \\"cn-shanghai\\",\\n          \\"SourceInstanceId\\": \\"iot-cn-6ja***\\",\\n          \\"TargetInstanceConfigs\\": {\\n            \\"targetInstanceConfigs\\": [\\n              {\\n                \\"TargetInstanceName\\": \\"实例调试2\\",\\n                \\"TargetRegion\\": \\"cn-shanghai\\",\\n                \\"TargetInstanceId\\": \\"iot-cn-6ja***\\"\\n              }\\n            ]\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListDeviceDistributeJobResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <NextToken>TGlzdFJlc291***</NextToken>\\n    <Total>10</Total>\\n    <JobInfo>\\n        <items>\\n            <Status>1</Status>\\n            <SourceInstanceName>实例调试1</SourceInstanceName>\\n            <GmtCreate>1581595942000</GmtCreate>\\n            <SourceUid>198***</SourceUid>\\n            <Total>5</Total>\\n            <Strategy>0</Strategy>\\n            <TargetUid>198***</TargetUid>\\n            <SourceRegion>cn-shanghai</SourceRegion>\\n            <SourceInstanceId>iot-cn-6ja***</SourceInstanceId>\\n            <ProductKey>a1BwAGV****</ProductKey>\\n            <JobId>UbmsMHmkqv0PiAG****010001</JobId>\\n            <TargetInstanceConfigs>\\n                <targetInstanceConfigs>\\n                    <TargetRegion>cn-shanghai</TargetRegion>\\n                    <TargetInstanceName>实例调试2</TargetInstanceName>\\n                    <TargetInstanceId>iot-cn-6ja***</TargetInstanceId>\\n                </targetInstanceConfigs>\\n            </TargetInstanceConfigs>\\n        </items>\\n    </JobInfo>\\n</Data>\\n<Success>true</Success>\\n</ListDeviceDistributeJobResponse>","errorExample":""}]',
      'title' => 'ListDeviceDistributeJob',
      'summary' => '调用该接口获取设备分发任务列表。',
      'description' => '## 使用说明

- <props="china">如果在企业版实例中调用该接口，请求参数**IotInstanceId**必须填写。否则，调用接口会失败。</props>
 
- <props="china">单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。</props>

<props="intl">单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。</props>

   > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDeviceDistributeJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分发任务ID。任务的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'UbmsMHmkqv0PiAG****010001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteDeviceDistributeJobResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Success>true</Success>\\n</DeleteDeviceDistributeJobResponse>","errorExample":""}]',
      'title' => '删除设备分发任务',
      'summary' => '调用该接口删除设备分发任务。',
      'description' => '## 使用说明

- 调用云服务的接入地址**Endpoint**仅支持华东2（上海），即`iot.cn-shanghai.aliyuncs.com`。

- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。

    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDistributedDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的设备数量。最大不超过200条。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '5',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'mydevice',
          ),
        ),
        3 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。默认值是1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'TargetUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阿里云账号ID。可登录物联网平台控制台，单击账号头像，跳转至**基本信息**页面查看**账号ID**。',
            'type' => 'string',
            'required' => false,
            'example' => '198***',
          ),
        ),
        5 => 
        array (
          'name' => 'SourceInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属的源实例ID。

- 各地域公共实例ID：

    - 华东2（上海）：iotx-oxssharez200。
    - 日本：iotx-oxssharez300。
    - 新加坡：iotx-oxssharez400。
    - 美国（硅谷）：iotx-oxssharez500。
    - 美国（弗吉尼亚）：iotx-oxssharez600。
    - 德国（法兰克福）：iotx-oxssharez700。

- 企业版实例ID：
    
    1. 登录物联网平台控制台，从顶部导航栏左上方的下拉菜单选择地域。
    
    2. 在**实例概览**页面，单击实例名称，在**实例详情**页面的**实例基本信息**中查看**实例ID**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-060***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的设备列表，详情请参见**Info**下信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Total' => 
                  array (
                    'description' => '返回的设备总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Info' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'items' => 
                      array (
                        'description' => '设备的信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DeviceName' => 
                            array (
                              'description' => '设备名称。',
                              'type' => 'string',
                              'example' => 'mydevice',
                            ),
                            'TargetAliyunId' => 
                            array (
                              'description' => '接收设备的目标阿里云账号。',
                              'type' => 'string',
                              'example' => 'io****@example.com',
                            ),
                            'SourceUid' => 
                            array (
                              'description' => '分发设备的源阿里云账号ID。

目前仅支持同一阿里云账号下跨地域和跨实例分发设备，此参数与**TargetUid**值相同。',
                              'type' => 'string',
                              'example' => '198***',
                            ),
                            'GmtModified' => 
                            array (
                              'description' => '分发任务的修改时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1581595942222',
                            ),
                            'TargetInstanceId' => 
                            array (
                              'description' => '设备的目标实例ID。',
                              'type' => 'string',
                              'example' => 'iot-cn-09k***',
                            ),
                            'TargetUid' => 
                            array (
                              'description' => '接收设备的目标阿里云账号ID。

目前仅支持同一阿里云账号下跨地域和跨实例分发设备，此参数与**SourceUid**值相同。',
                              'type' => 'string',
                              'example' => '198***',
                            ),
                            'ProductKey' => 
                            array (
                              'description' => '设备所属产品的**ProductKey**。',
                              'type' => 'string',
                              'example' => 'a1BwAGV***',
                            ),
                            'TargetRegion' => 
                            array (
                              'description' => '设备的目标地域。',
                              'type' => 'string',
                              'example' => 'cn-shenzhen',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '设备所属分发任务的创建时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1581595942000',
                            ),
                            'TargetInstanceName' => 
                            array (
                              'description' => '设备的目标实例名称。',
                              'type' => 'string',
                              'example' => 'newinstance',
                            ),
                            'SourceInstanceName' => 
                            array (
                              'description' => '设备的源实例名称。',
                              'type' => 'string',
                              'example' => 'myproInstance',
                            ),
                            'SourceRegion' => 
                            array (
                              'description' => '设备所属的源地域。',
                              'type' => 'string',
                              'example' => 'cn-shanghai',
                            ),
                            'SourceInstanceId' => 
                            array (
                              'description' => '设备的源实例ID。',
                              'type' => 'string',
                              'example' => 'iot-cn-6ja***',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Total\\": 10,\\n    \\"Info\\": {\\n      \\"items\\": [\\n        {\\n          \\"DeviceName\\": \\"mydevice\\",\\n          \\"TargetAliyunId\\": \\"io****@example.com\\",\\n          \\"SourceUid\\": \\"198***\\",\\n          \\"GmtModified\\": 1581595942222,\\n          \\"TargetInstanceId\\": \\"iot-cn-09k***\\",\\n          \\"TargetUid\\": \\"198***\\",\\n          \\"ProductKey\\": \\"a1BwAGV***\\",\\n          \\"TargetRegion\\": \\"cn-shenzhen\\",\\n          \\"GmtCreate\\": 1581595942000,\\n          \\"TargetInstanceName\\": \\"newinstance\\",\\n          \\"SourceInstanceName\\": \\"myproInstance\\",\\n          \\"SourceRegion\\": \\"cn-shanghai\\",\\n          \\"SourceInstanceId\\": \\"iot-cn-6ja***\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListDistributedDeviceResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <Total>10</Total>\\n    <Info>\\n        <items>\\n            <TargetRegion>cn-shenzhen</TargetRegion>\\n            <SourceInstanceName>myproInstance</SourceInstanceName>\\n            <TargetAliyunId>io****@example.com</TargetAliyunId>\\n            <SourceUid>198***</SourceUid>\\n            <GmtModified>1581595942222</GmtModified>\\n            <TargetInstanceId>iot-cn-09k***</TargetInstanceId>\\n            <TargetUid>198***</TargetUid>\\n            <SourceRegion>cn-shanghai</SourceRegion>\\n            <SourceInstanceId>iot-cn-6ja***</SourceInstanceId>\\n            <GmtCreate>1581595942000</GmtCreate>\\n            <TargetInstanceName>newinstance</TargetInstanceName>\\n            <ProductKey>a1BwAGV***</ProductKey>\\n            <DeviceName>mydevice</DeviceName>\\n        </items>\\n    </Info>\\n</Data>\\n<Success>true</Success>\\n</ListDistributedDeviceResponse>","errorExample":""}]',
      'title' => '查询已分发的设备列表',
      'summary' => '调用该接口查询已分发的设备列表。',
      'description' => '## 使用说明

- 调用云服务的接入地址**Endpoint**仅支持华东2（上海），即`iot.cn-shanghai.aliyuncs.com`。

- 单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

    > RAM用户共享阿里云账号配额。

- 多个阿里云账号同时调用该接口的QPS最大限制为200。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDistributedProduct' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的产品数量。最大不超过200条。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '5',
          ),
        ),
        1 => 
        array (
          'name' => 'SourceInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品所属的源实例ID。

- 各地域公共实例ID：

    - 华东2（上海）：iotx-oxssharez200。
    - 日本：iotx-oxssharez300。
    - 新加坡：iotx-oxssharez400。
    - 美国（硅谷）：iotx-oxssharez500。
    - 美国（弗吉尼亚）：iotx-oxssharez600。
    - 德国（法兰克福）：iotx-oxssharez700。

- 查看企业版实例ID的步骤：
    
    1. 登录[物联网平台控制台](https://iot.console.aliyun.com/)，从顶部导航栏左上方的下拉菜单选择地域。
    
    2. 在**实例概览**页面，找到目标实例，查看**ID**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-060***',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'TargetInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品分发的目标实例ID。实例ID详情，请参见参数**SourceInstanceId**描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-6ja***',
          ),
        ),
        4 => 
        array (
          'name' => 'TargetUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品所属的阿里云账号ID。可登录物联网平台控制台，单击账号头像，跳转至**基本信息**页面查看**账号ID**。',
            'type' => 'string',
            'required' => false,
            'example' => '198***',
          ),
        ),
        5 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。默认值是1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的产品列表，详情请参见**Info**下信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Total' => 
                  array (
                    'description' => '返回的产品总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Info' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'items' => 
                      array (
                        'description' => '产品的信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TargetRegion' => 
                            array (
                              'description' => '产品分发的目标地域。',
                              'type' => 'string',
                              'example' => 'cn-shenzhen',
                            ),
                            'ProductKey' => 
                            array (
                              'description' => '产品的**ProductKey**。',
                              'type' => 'string',
                              'example' => 'a1BwAGV****',
                            ),
                            'TargetUid' => 
                            array (
                              'description' => '接收产品的目标阿里云账号ID。

目前仅支持同一阿里云账号下跨地域和跨实例分发设备，此参数与**SourceUid**值相同。',
                              'type' => 'string',
                              'example' => '198***',
                            ),
                            'TargetInstanceName' => 
                            array (
                              'description' => '产品分发的目标实例名称。',
                              'type' => 'string',
                              'example' => 'newinstance',
                            ),
                            'TargetAliyunId' => 
                            array (
                              'description' => '接收产品的目标阿里云账号。',
                              'type' => 'string',
                              'example' => 'io****@example.com',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '产品所属分发任务的创建时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1581595942',
                            ),
                            'SourceInstanceName' => 
                            array (
                              'description' => '产品的源实例名称。',
                              'type' => 'string',
                              'example' => 'myproInstance',
                            ),
                            'SourceUid' => 
                            array (
                              'description' => '分发产品的源阿里云账号ID。目前仅支持同一阿里云账号下跨地域和跨实例分发产品，此参数与**TargetUid**值相同。',
                              'type' => 'string',
                              'example' => '198***',
                            ),
                            'TargetInstanceId' => 
                            array (
                              'description' => '产品分发的目标实例ID。',
                              'type' => 'string',
                              'example' => 'iot-cn-09k***',
                            ),
                            'SourceRegion' => 
                            array (
                              'description' => '产品所属的源地域。',
                              'type' => 'string',
                              'example' => 'cn-shanghai',
                            ),
                            'SourceInstanceId' => 
                            array (
                              'description' => '产品的源实例ID。',
                              'type' => 'string',
                              'example' => 'iot-cn-6ja***',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Total\\": 10,\\n    \\"Info\\": {\\n      \\"items\\": [\\n        {\\n          \\"TargetRegion\\": \\"cn-shenzhen\\",\\n          \\"ProductKey\\": \\"a1BwAGV****\\",\\n          \\"TargetUid\\": \\"198***\\",\\n          \\"TargetInstanceName\\": \\"newinstance\\",\\n          \\"TargetAliyunId\\": \\"io****@example.com\\",\\n          \\"GmtCreate\\": 1581595942,\\n          \\"SourceInstanceName\\": \\"myproInstance\\",\\n          \\"SourceUid\\": \\"198***\\",\\n          \\"TargetInstanceId\\": \\"iot-cn-09k***\\",\\n          \\"SourceRegion\\": \\"cn-shanghai\\",\\n          \\"SourceInstanceId\\": \\"iot-cn-6ja***\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListDistributedProductResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <Total>10</Total>\\n    <Info>\\n        <items>\\n            <TargetRegion>cn-shenzhen</TargetRegion>\\n            <SourceInstanceName>myproInstance</SourceInstanceName>\\n            <TargetAliyunId>io****@example.com</TargetAliyunId>\\n            <GmtCreate>1581595942</GmtCreate>\\n            <SourceUid>198***</SourceUid>\\n            <TargetInstanceName>newinstance</TargetInstanceName>\\n            <TargetInstanceId>iot-cn-09k***</TargetInstanceId>\\n            <TargetUid>198***</TargetUid>\\n            <SourceRegion>cn-shanghai</SourceRegion>\\n            <SourceInstanceId>iot-cn-6ja***</SourceInstanceId>\\n            <ProductKey>a1BwAGV****</ProductKey>\\n        </items>\\n    </Info>\\n</Data>\\n<Success>true</Success>\\n</ListDistributedProductResponse>","errorExample":""}]',
      'title' => '获取分布式产品列表',
      'summary' => '调用该接口查询已分发的产品列表。',
      'description' => '## 使用说明
调用云服务的接入地址**Endpoint**仅支持华东2（上海），即`iot.cn-shanghai.aliyuncs.com`。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceProvisioning' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1ji*****',
          ),
        ),
        1 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'testDevcieBwT3Un',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '- 调用成功时，返回**success**。
- 调用失败，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功后，返回的设备分发结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'TargetRegion' => 
                  array (
                    'description' => '设备所属的目标地域。',
                    'type' => 'string',
                    'example' => 'ap-southeast-1',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => '设备所属产品的**ProductKey**。',
                    'type' => 'string',
                    'example' => 'a1ji*****',
                  ),
                  'DeviceName' => 
                  array (
                    'description' => '设备名称。',
                    'type' => 'string',
                    'example' => 'testDevcieBwT3Un',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '设备所属分发任务的创建时间（毫秒级时间戳）。

如果设备未分发，则返回当前服务器时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1676297683000',
                  ),
                  'TargetIotInstanceId' => 
                  array (
                    'description' => '设备所属的目标实例ID。',
                    'type' => 'string',
                    'example' => 'iot-09k****',
                  ),
                  'SourceIotInstanceId' => 
                  array (
                    'description' => '设备所属的源实例ID。',
                    'type' => 'string',
                    'example' => 'iot-6ja****',
                  ),
                  'AliyunUid' => 
                  array (
                    'description' => '设备当前所属阿里云账号。',
                    'type' => 'string',
                    'example' => 'io****@example.com',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '设备所属分发任务的修改时间（毫秒级时间戳）。

如果设备未分发，则返回当前服务器时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1676297683000',
                  ),
                  'SourceRegion' => 
                  array (
                    'description' => '设备所属的源地域。',
                    'type' => 'string',
                    'example' => 'cn-shanghai',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.common.APINotSupportedInInstance',
            'errorMessage' => 'This API operation is not supported in this instance.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.common.RamActionPermissionDeny',
            'errorMessage' => 'You do not have the RAM permission.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.common.InvalidTenant',
            'errorMessage' => 'The Invalid tenant.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.common.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TargetRegion\\": \\"ap-southeast-1\\",\\n    \\"ProductKey\\": \\"a1ji*****\\",\\n    \\"DeviceName\\": \\"testDevcieBwT3Un\\",\\n    \\"GmtCreate\\": 1676297683000,\\n    \\"TargetIotInstanceId\\": \\"iot-09k****\\",\\n    \\"SourceIotInstanceId\\": \\"iot-6ja****\\",\\n    \\"AliyunUid\\": \\"io****@example.com\\",\\n    \\"GmtModified\\": 1676297683000,\\n    \\"SourceRegion\\": \\"cn-shanghai\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceProvisioningResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <TargetRegion>ap-southeast-1</TargetRegion>\\n    <GmtCreate>1676297683000</GmtCreate>\\n    <TargetIotInstanceId>iot-09k****</TargetIotInstanceId>\\n    <AliyunUid>io****@example.com</AliyunUid>\\n    <GmtModified>1676297683000</GmtModified>\\n    <SourceIotInstanceId>iot-6ja****</SourceIotInstanceId>\\n    <SourceRegion>cn-shanghai</SourceRegion>\\n    <ProductKey>a1ji*****</ProductKey>\\n    <DeviceName>testDevcieBwT3Un</DeviceName>\\n</Data>\\n<Code>success</Code>\\n<Success>true</Success>\\n</QueryDeviceProvisioningResponse>","errorExample":""}]',
      'title' => 'QueryDeviceProvisioning',
      'summary' => '调用该接口查询指定设备的分发结果。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateDeviceTunnel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定设备的设备ID。

><notice>如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**的组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**的组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv***00100',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全隧道的描述信息。内容长度不超过1024个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '用于远程登录到摄像头。',
          ),
        ),
        2 => 
        array (
          'name' => 'Udi',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送给设备的自定义信息，数据格式自定义，长度不超过4096个字符。

会在通知设备创建安全隧道时发送给设备。

',
            'type' => 'string',
            'required' => false,
            'example' => 'reboot',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定设备所属产品的**ProductKey**。

><notice>如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV***',
          ),
        ),
        4 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定设备的设备名称。
><notice>如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        5 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-***-v64***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => '	iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回安全隧道的基本信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'TunnelId' => 
                  array (
                    'description' => '安全隧道ID。',
                    'type' => 'string',
                    'example' => 'd4098041-***',
                  ),
                  'SourceURI' => 
                  array (
                    'description' => '通过安全隧道访问对应设备，建立WebSocket的URL。',
                    'type' => 'string',
                    'example' => 'wss://secure-tunnel-ws.iot.aliyun.test/tunnel/1834248a-37b7-4fd2-***/source',
                  ),
                  'SourceAccessToken' => 
                  array (
                    'description' => '通过安全隧道访问对应设备的认证Token，用于WebSocket建连的认证阶段，详细说明，请参见[安全隧道使用流程](~~312333~~)。',
                    'type' => 'string',
                    'example' => '521c43e4-a6da-***',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.securetunnel.ParamInvalid',
            'errorMessage' => 'The parameter is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.securetunnel.DescriptionTooLong',
            'errorMessage' => 'The description of the device tunnel has exceeded the maximum length.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.securetunnel.UdiTooLong',
            'errorMessage' => 'The Udi of the device tunnel has exceeded the maximum length.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.securetunnel.TunnelAmountExceedByDevice',
            'errorMessage' => 'The tunnel amount of the device has exceeded the limit.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.securetunnel.TunnelAmountExceedByInstance',
            'errorMessage' => 'The tunnel amount for the instance has exceeded the limit.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.securetunnel.DeviceNotExist',
            'errorMessage' => 'The device does not exist.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.securetunnel.DeviceNotOnline',
            'errorMessage' => 'The device must be online.',
          ),
          7 => 
          array (
            'errorCode' => 'iot.securetunnel.DeviceNotSpecified',
            'errorMessage' => 'The device is not specified.',
          ),
          8 => 
          array (
            'errorCode' => 'iot.securetunnel.InstanceIdMismatch',
            'errorMessage' => 'The instanceId does not match the parameter.',
          ),
          9 => 
          array (
            'errorCode' => 'iot.securetunnel.TunnelQuotaExhausted',
            'errorMessage' => 'The quota for secure tunnel has been exhausted.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"\\\\tiot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TunnelId\\": \\"d4098041-***\\",\\n    \\"SourceURI\\": \\"wss://secure-tunnel-ws.iot.aliyun.test/tunnel/1834248a-37b7-4fd2-***/source\\",\\n    \\"SourceAccessToken\\": \\"521c43e4-a6da-***\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateDeviceTunnelResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <SourceURI>wss://secure-tunnel-ws.iot.aliyun.test/tunnel/1834248a-37b7-4fd2-***/source</SourceURI>\\n    <SourceAccessToken>521c43e4-a6da-***</SourceAccessToken>\\n    <TunnelId>d4098041-***</TunnelId>\\n</Data>\\n<Success>true</Success>\\n</CreateDeviceTunnelResponse>","errorExample":""}]',
      'title' => '创建设备安全隧道',
      'summary' => '为指定设备创建安全隧道。',
      'description' => '## 使用说明

调用本接口创建安全隧道成功后，该安全隧道状态默认为**已打开**。
- 创建24小时后，安全隧道状态自动更新为**已关闭**。
- 创建30天后，安全隧道会被系统自动删除。

## 使用限制

- 单个设备最多包含10个安全隧道。
- 单个实例下最多包含1,000个安全隧道。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CloseDeviceTunnel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TunnelId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要关闭的安全隧道的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'd4098041-a560-***',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-***-v6***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.securetunnel.TunnelNotExist',
            'errorMessage' => 'The device tunnel does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.securetunnel.InstanceIdMismatch',
            'errorMessage' => 'The instanceId does not match the parameter.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CloseDeviceTunnelResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Success>true</Success>\\n</CloseDeviceTunnelResponse>","errorExample":""}]',
      'title' => '关闭状态为已打开的安全隧道',
      'summary' => '安全隧道在创建并使用完毕后，可以关闭状态为已打开的安全隧道。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDeviceTunnel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TunnelId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的安全隧道的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'd4098041-a560-***',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-***-v6***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.securetunnel.InstanceIdMismatch',
            'errorMessage' => 'The instanceId does not match the parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.securetunnel.TunnelNotExist',
            'errorMessage' => 'The device tunnel does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.securetunnel.IllegalState',
            'errorMessage' => 'The tunnel state does not meet the requirement.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteDeviceTunnelResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Success>true</Success>\\n</DeleteDeviceTunnelResponse>","errorExample":""}]',
      'title' => '删除设备安全隧道',
      'summary' => '已经关闭的安全隧道，可以调用该PI进行删除。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceTunnel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TunnelId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询安全隧道的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'd4098041-a560-***',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-***-v6***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回安全隧道的信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'ProductName' => 
                  array (
                    'description' => '设备所属产品的名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'DeviceName' => 
                  array (
                    'description' => '设备名称。',
                    'type' => 'string',
                    'example' => 'light',
                  ),
                  'UtcClosed' => 
                  array (
                    'description' => '安全隧道关闭的UTC时间。',
                    'type' => 'string',
                    'example' => '2021-09-22T12:44:12.000Z',
                  ),
                  'DeviceConnState' => 
                  array (
                    'description' => '设备端连接状态。

- **CONNECTED**：已连接。
- **DISCONNECTED**：未连接。',
                    'type' => 'string',
                    'example' => 'CONNECTED',
                  ),
                  'UtcCreated' => 
                  array (
                    'description' => '安全隧道创建的UTC时间。',
                    'type' => 'string',
                    'example' => '2021-09-22T12:44:12.000Z',
                  ),
                  'SourceConnState' => 
                  array (
                    'description' => '访问端连接状态。

- **CONNECTED**：已连接。
- **DISCONNECTED**：未连接。',
                    'type' => 'string',
                    'example' => 'DISCONNECTED',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => '设备所属产品的**ProductKey**。',
                    'type' => 'string',
                    'example' => 'a1rYuVF***',
                  ),
                  'Description' => 
                  array (
                    'description' => '安全隧道的描述信息。',
                    'type' => 'string',
                    'example' => '用于远程登录到摄像头。',
                  ),
                  'TunnelId' => 
                  array (
                    'description' => '安全隧道的ID。',
                    'type' => 'string',
                    'example' => ' d4098041-a560-***',
                  ),
                  'TunnelState' => 
                  array (
                    'description' => '安全隧道的状态。

- **OPEN**：已打开，支持通过安全隧道访问对应设备。
- **CLOSED**：已关闭，不支持通过安全隧道访问对应设备了。',
                    'type' => 'string',
                    'example' => 'OPEN',
                  ),
                  'IotId' => 
                  array (
                    'description' => '物联网平台为该设备颁发的ID，作为该设备的唯一标识符。',
                    'type' => 'string',
                    'example' => 'Q7uOhVRdZRRlDnTLv***00100',
                  ),
                  'Udi' => 
                  array (
                    'description' => '推送给设备的自定义信息。',
                    'type' => 'string',
                    'example' => 'reboot',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.securetunnel.InstanceIdMismatch',
            'errorMessage' => 'The instanceId does not match the parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.securetunnel.TunnelNotExist',
            'errorMessage' => 'The device tunnel does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ProductName\\": \\"test\\",\\n    \\"DeviceName\\": \\"light\\",\\n    \\"UtcClosed\\": \\"2021-09-22T12:44:12.000Z\\",\\n    \\"DeviceConnState\\": \\"CONNECTED\\",\\n    \\"UtcCreated\\": \\"2021-09-22T12:44:12.000Z\\",\\n    \\"SourceConnState\\": \\"DISCONNECTED\\",\\n    \\"ProductKey\\": \\"a1rYuVF***\\",\\n    \\"Description\\": \\"用于远程登录到摄像头。\\",\\n    \\"TunnelId\\": \\" d4098041-a560-***\\",\\n    \\"TunnelState\\": \\"OPEN\\",\\n    \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv***00100\\",\\n    \\"Udi\\": \\"reboot\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceTunnelResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <IotId>Q7uOhVRdZRRlDnTLv***00100</IotId>\\n    <Description>用于远程登录到摄像头。</Description>\\n    <UtcClosed>2021-09-22T12:44:12.000Z</UtcClosed>\\n    <UtcCreated>2021-09-22T12:44:12.000Z</UtcCreated>\\n    <DeviceConnState>CONNECTED</DeviceConnState>\\n    <TunnelState>OPEN</TunnelState>\\n    <SourceConnState>DISCONNECTED</SourceConnState>\\n    <Udi>reboot</Udi>\\n    <TunnelId>d4098041-a560-***</TunnelId>\\n    <ProductKey>a1rYuVF***</ProductKey>\\n    <ProductName>test</ProductName>\\n    <DeviceName>light</DeviceName>\\n</Data>\\n<Success>true</Success>\\n</QueryDeviceTunnelResponse>","errorExample":""}]',
      'title' => '查询单个安全隧道的详细信息',
      'summary' => '查询单个安全隧道的详细信息，包括安全隧道的所属设备、创建时间、ID、连接状态等。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateDeviceGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'SuperGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '父组ID。

若要创建的是一级分组，则不传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'SuperGroupId1',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupDesc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组描述。长度不超过100个字符，一个中文汉字占一个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'Group test',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组名称。名称长度为4~30个字符，可包含中文汉字、英文字母、数字和下划线（_）。一个中文汉字占两个字符。
',
            'type' => 'string',
            'required' => true,
            'example' => 'grouptest',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '4D6D7F71-1C94-4160-8511-EFF4B8F0634D',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的分组信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'GroupId' => 
                  array (
                    'description' => '分组ID，系统为分组生成的全局唯一标识符。',
                    'type' => 'string',
                    'example' => 'HtMLECKbdJQL****',
                  ),
                  'GroupName' => 
                  array (
                    'description' => '分组名称。',
                    'type' => 'string',
                    'example' => 'grouptest',
                  ),
                  'GroupDesc' => 
                  array (
                    'description' => '分组描述。',
                    'type' => 'string',
                    'example' => 'Group test',
                  ),
                  'UtcCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2018-10-17T11:19:31.000Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"4D6D7F71-1C94-4160-8511-EFF4B8F0634D\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"GroupId\\": \\"HtMLECKbdJQL****\\",\\n    \\"GroupName\\": \\"grouptest\\",\\n    \\"GroupDesc\\": \\"Group test\\",\\n    \\"UtcCreate\\": \\"2018-10-17T11:19:31.000Z\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<CreateDeviceGroupResponse>\\r\\n    <Data>\\r\\n        <GroupDesc>Group test</GroupDesc>\\r\\n        <GroupName>grouptest</GroupName>\\r\\n        <UtcCreate>2018-10-17T11:19:31.000Z</UtcCreate>\\r\\n        <GroupId>HtMLECKbdJQL****</GroupId>\\r\\n    </Data>\\r\\n    <RequestId>4D6D7F71-1C94-4160-8511-EFF4B8F0634D</RequestId>\\r\\n    <Success>true</Success>\\r\\n</CreateDeviceGroupResponse>","errorExample":""}]',
      'title' => '创建设备分组',
      'summary' => '新建设备分组。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。
  > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateDeviceDynamicGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-***',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupDesc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组描述。长度不超过100个字符，一个中文占一个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组名称。名称长度为4~30个字符，可包含中文、英文字母、数字和下划线（_）。一个中文占两个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'grouptest',
          ),
        ),
        3 => 
        array (
          'name' => 'DynamicGroupExpression',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '动态分组规则，用于查询并动态匹配设备到分组。规则表达式编写方法，请参见[类SQL语法说明](~~185713~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'product_key = "a1***" and name LIKE "test%"',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '4D6D7F71-1C94-4160-8511-EFF4B8F0634D',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的分组信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'DynamicGroupExpression' => 
                  array (
                    'description' => '动态分组规则。',
                    'type' => 'string',
                    'example' => 'product_key = "a1***" and name LIKE "test%"',
                  ),
                  'GroupName' => 
                  array (
                    'description' => '分组名称。',
                    'type' => 'string',
                    'example' => 'grouptest',
                  ),
                  'GroupId' => 
                  array (
                    'description' => '分组ID，系统为分组生成的全局唯一标识符。',
                    'type' => 'string',
                    'example' => 'HtMLECKbdJQL***',
                  ),
                  'GroupDesc' => 
                  array (
                    'description' => '分组描述。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'UtcCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2021-10-17T11:19:31.000Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.group.DynamicGroupMatchedDeviceCountExceedMax',
            'errorMessage' => 'The maximum number of device matched by dynamic group condition is exceeded.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.group.GroupCountExceedMax',
            'errorMessage' => 'The number of device groups exceeds the limit.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.devicesearch.InvalidSQLError',
            'errorMessage' => 'The SQL statement is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.devicesearch.InvalidSQLOffsetError',
            'errorMessage' => 'The SQL offset is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.devicesearch.InvalidSQLFieldError',
            'errorMessage' => 'The SQL statement contains invalid field names.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.devicesearch.InvalidSQLConditionError',
            'errorMessage' => 'The SQL statement contains too many conditions.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.devicesearch.InvalidSQLOrderError',
            'errorMessage' => 'The SQL statement contains invalid ORDER BY conditions.',
          ),
          7 => 
          array (
            'errorCode' => 'iot.devicesearch.InvalidSQLOperatorTypeError',
            'errorMessage' => 'The operator and data type in the SQL statement do not match.',
          ),
          8 => 
          array (
            'errorCode' => 'iot.devicesearch.InvalidSQLParamError',
            'errorMessage' => 'The SQL syntax is unsupported.',
          ),
          9 => 
          array (
            'errorCode' => 'iot.devicesearch.InvalidSQLIdentfierError',
            'errorMessage' => 'The TSL identifier is not configured.',
          ),
          10 => 
          array (
            'errorCode' => 'iot.group.InvalidGroupName',
            'errorMessage' => 'The specified device group name is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'iot.group.LongGroupDescError',
            'errorMessage' => 'The group description exceeds the length limit.',
          ),
          12 => 
          array (
            'errorCode' => 'iot.group.SuperGroupUnsupport',
            'errorMessage' => 'The super groups do not support subGroups.',
          ),
          13 => 
          array (
            'errorCode' => 'iot.common.APINotSupportedInInstance',
            'errorMessage' => 'This API operation is not supported in this instance.',
          ),
          14 => 
          array (
            'errorCode' => 'iot.group.GroupNameExisted',
            'errorMessage' => 'The specified device group name already exists.',
          ),
          15 => 
          array (
            'errorCode' => 'iot.group.CreateGroupFailed',
            'errorMessage' => 'An error occurred while creating a device group.',
          ),
          16 => 
          array (
            'errorCode' => 'iot.device.RegionNotSupportDynamicGroup',
            'errorMessage' => 'The region does not currently support the dynamic group feature.',
          ),
          17 => 
          array (
            'errorCode' => 'MissingDynamicGroupExpression',
            'errorMessage' => 'DynamicGroupExpression is mandatory for this action.',
          ),
          18 => 
          array (
            'errorCode' => 'iot.databus.SearchIndexConfigNotFound',
            'errorMessage' => 'The search index config is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"4D6D7F71-1C94-4160-8511-EFF4B8F0634D\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"DynamicGroupExpression\\": \\"product_key = \\\\\\"a1***\\\\\\" and name LIKE \\\\\\"test%\\\\\\"\\",\\n    \\"GroupName\\": \\"grouptest\\",\\n    \\"GroupId\\": \\"HtMLECKbdJQL***\\",\\n    \\"GroupDesc\\": \\"test\\",\\n    \\"UtcCreate\\": \\"2021-10-17T11:19:31.000Z\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateDeviceDynamicGroupResponse>\\n<RequestId>4D6D7F71-1C94-4160-8511-EFF4B8F0634D</RequestId>\\n<Data>\\n    <GroupName>grouptest</GroupName>\\n    <UtcCreate>2021-10-17T11:19:31.000Z</UtcCreate>\\n    <GroupDesc>test</GroupDesc>\\n    <DynamicGroupExpression>product_key = \\"a1***\\" and name LIKE \\"test%\\"</DynamicGroupExpression>\\n    <GroupId>HtMLECKbdJQL***</GroupId>\\n</Data>\\n<Success>true</Success>\\n</CreateDeviceDynamicGroupResponse>","errorExample":""}]',
      'title' => '创建动态分组',
      'summary' => '创建动态分组，将符合动态分组条件的设备加入分组。',
      'description' => '## 限制说明

- 目前仅华东2（上海）地域下，企业版实例和新版公共实例，支持创建动态分组。实例详细说明，请参见[实例管理](~~147356~~)。

- 单个阿里云账号下最多可创建10个动态分组。

- 单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为1。

    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDeviceGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID。分组的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'W16X8Tvdosec****',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupDesc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改后的分组描述。长度不超过100个字符，一个中文汉字占一个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test2',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组类型。

传入**LINK_PLATFORM_DYNAMIC**时，表示动态分组。不传入时，默认为静态分组。',
            'type' => 'string',
            'required' => false,
            'example' => 'LINK_PLATFORM_DYNAMIC',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'B78B4FD1-AE89-417B-AD55-367EBB0C6759',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"B78B4FD1-AE89-417B-AD55-367EBB0C6759\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\r\\n<UpdateDeviceGroupResponse>\\r\\n    <RequestId>B78B4FD1-AE89-417B-AD55-367EBB0C6759</RequestId>\\r\\n    <Success>true</Success>\\r\\n</UpdateDeviceGroupResponse>","errorExample":""}]',
      'title' => '修改分组信息',
      'summary' => '调用该接口修改分组信息。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDeviceGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID，分组的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'tDQvBJqbUyHs****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'B78B4FD1-AE89-417B-AD55-367EBB0C6759',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"B78B4FD1-AE89-417B-AD55-367EBB0C6759\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<DeleteDeviceGroupResponse>\\r\\n    <RequestId>B78B4FD1-AE89-417B-AD55-367EBB0C6759</RequestId>\\r\\n    <Success>true</Success>\\r\\n</DeleteDeviceGroupResponse>","errorExample":""}]',
      'title' => '删除指定分组',
      'summary' => '调用该接口删除指定分组。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDeviceDynamicGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-***-v6***',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID，分组的全局唯一标识符。

您可调用[QueryDeviceGroupList](~~93356~~)接口查询分组ID（**GroupId**）。',
            'type' => 'string',
            'required' => true,
            'example' => 'tDQvBJqbUyHs***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'B78B4FD1-AE89-417B-AD55-367EBB0C6759',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.group.NullGroupId',
            'errorMessage' => 'You must specify the device group ID.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.group.NotExistedGroup',
            'errorMessage' => 'The specified device group does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.common.RamActionPermissionDeny',
            'errorMessage' => 'You do not have the RAM permission.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.common.InvalidTenant',
            'errorMessage' => 'The tenant is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.group.QueryGroupInfoFailed',
            'errorMessage' => 'An error occurred while querying the device group details.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.group.DeleteGroupFailed',
            'errorMessage' => 'An error occurred while deleting the device group.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.common.APINotSupportedInInstance',
            'errorMessage' => 'This API operation is not supported in this instance.',
          ),
          7 => 
          array (
            'errorCode' => 'iot.device.RegionNotSupportDynamicGroup',
            'errorMessage' => 'The region does not currently support the dynamic group feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"B78B4FD1-AE89-417B-AD55-367EBB0C6759\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteDeviceDynamicGroupResponse>\\n<RequestId>B78B4FD1-AE89-417B-AD55-367EBB0C6759</RequestId>\\n<Success>true</Success>\\n</DeleteDeviceDynamicGroupResponse>","errorExample":""}]',
      'title' => '删除指定的动态分组',
      'summary' => '逻辑删除设备动态分组，删除分组下设备分组关系。',
      'description' => '## 限制说明

- 目前仅华东2（上海）地域下，企业版实例和新版公共实例，支持创建动态分组。公共实例说明，请参见[公共实例](~~147356~~)。

- 单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为1。

    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchAddDeviceGroupRelations' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID，分组的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => '6VfhebLg5iUe****',
          ),
        ),
        2 => 
        array (
          'name' => 'Device',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要添加到分组的设备列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ProductKey' => 
                array (
                  'description' => '要添加到分组的设备所属的产品ProductKey，最多可传入200个。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'a1kORrK****',
                ),
                'DeviceName' => 
                array (
                  'description' => '要添加到分组的设备名称，最多可传入200个。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ZHuPo6sZzv7pOzYh****',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 200,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '671D0F8F-FDC7-4B12-93FA-336C079C965A',
              ),
              'ExceedTenGroupDeviceCount' => 
              array (
                'description' => '请求参数中，已经添加到10个或者10个以上分组的设备数量（一个设备最多添加到10个分组）。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'AlreadyRelatedGroupDeviceCount' => 
              array (
                'description' => '原已经添加到此分组的设备数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ValidDeviceCount' => 
              array (
                'description' => '请求参数中合法的设备数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'SuccessAddedDeviceCount' => 
              array (
                'description' => '成功添加到分组的设备数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"671D0F8F-FDC7-4B12-93FA-336C079C965A\\",\\n  \\"ExceedTenGroupDeviceCount\\": 0,\\n  \\"AlreadyRelatedGroupDeviceCount\\": 0,\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ValidDeviceCount\\": 2,\\n  \\"SuccessAddedDeviceCount\\": 2\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<BatchAddDeviceGroupRelationsResponse>\\r\\n    <SuccessAddedDeviceCount>2</SuccessAddedDeviceCount>\\r\\n    <ExceedTenGroupDeviceCount>0</ExceedTenGroupDeviceCount>\\r\\n    <ErrorMessage>2 devices have been added, and 0 devices failed to be added.</ErrorMessage>\\r\\n    <ValidDeviceCount>2</ValidDeviceCount>\\r\\n    <AlreadyRelatedGroupDeviceCount>0</AlreadyRelatedGroupDeviceCount>\\r\\n    <RequestId>671D0F8F-FDC7-4B12-93FA-336C079C965A</RequestId>\\r\\n    <Success>true</Success>\\r\\n</BatchAddDeviceGroupRelationsResponse>","errorExample":""}]',
      'title' => 'BatchAddDeviceGroupRelations',
      'summary' => '调用该接口添加设备到某一分组（可批量添加设备）。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchDeleteDeviceGroupRelations' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID，分组的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'W16X8Tvdosec****',
          ),
        ),
        2 => 
        array (
          'name' => 'Device',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要从分组中删除的设备列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ProductKey' => 
                array (
                  'description' => '要从分组中删除的设备所属产品的ProductKey，最多可传入200个。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'a1kORrK****',
                ),
                'DeviceName' => 
                array (
                  'description' => '要从分组中删除的设备名称，最多可传入200个。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'ZHuPo6sZzv7pOzYh****',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 200,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SuccessDeviceCount' => 
              array (
                'description' => '成功从分组中删除的设备数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '8739385E-143F-4389-B900-B7DF9174CE0D',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'AlreadyRelatedGroupDeviceCount' => 
              array (
                'description' => '删除前，已添加到此分组的设备数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ValidDeviceCount' => 
              array (
                'description' => '请求参数中要删除的设备中，有效的设备数量（即可删除的设备数量）。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"SuccessDeviceCount\\": 2,\\n  \\"RequestId\\": \\"8739385E-143F-4389-B900-B7DF9174CE0D\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"AlreadyRelatedGroupDeviceCount\\": 2,\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ValidDeviceCount\\": 2\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<BatchDeleteDeviceGroupRelationsResponse>\\r\\n    <SuccessDeviceCount>2</SuccessDeviceCount>\\r\\n    <ValidDeviceCount>2</ValidDeviceCount>\\r\\n    <AlreadyRelatedGroupDeviceCount>2</AlreadyRelatedGroupDeviceCount>\\r\\n    <RequestId>8739385E-143F-4389-B900-B7DF9174CE0D</RequestId>\\r\\n    <Success>true</Success>\\r\\n</BatchDeleteDeviceGroupRelationsResponse>","errorExample":""}]',
      'title' => 'BatchDeleteDeviceGroupRelations',
      'summary' => '调用BatchDeleteDeviceGroupRelations接口批量删除指定分组中的设备。该操作仅删除设备与分组的关联关系，不会删除设备本身。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceGroupInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID，分组的全局唯一标识符。

您可调用[QueryDeviceGroupList](~~93356~~)接口查询分组ID（**GroupId**）。',
            'type' => 'string',
            'required' => true,
            'example' => 'tDQvBJqbUyHs****',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组类型。

目前仅支持传入**LINK_PLATFORM_DYNAMIC**，表示动态分组。不传入时，默认为静态分组。

',
            'type' => 'string',
            'required' => false,
            'example' => 'LINK_PLATFORM_DYNAMIC',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '7411716B-A488-4EEB-9AA0-6DB05AD2491F',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的分组详细信息数据，包含以下参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'GroupId' => 
                  array (
                    'description' => '分组ID。',
                    'type' => 'string',
                    'example' => 'tDQvBJqbUyHs****',
                  ),
                  'GroupName' => 
                  array (
                    'description' => '分组名称。',
                    'type' => 'string',
                    'example' => 'aliyun',
                  ),
                  'DeviceActive' => 
                  array (
                    'description' => '激活设备数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'UtcCreate' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2018-09-14T14:35:51.000Z',
                  ),
                  'DynamicGroupExpression' => 
                  array (
                    'description' => '动态分组规则，仅动态分组返回该参数信息。',
                    'type' => 'string',
                    'example' => 'product_key = "a1***" and name LIKE "test%"',
                  ),
                  'DeviceOnline' => 
                  array (
                    'description' => '在线设备数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'GroupDesc' => 
                  array (
                    'description' => '分组描述。',
                    'type' => 'string',
                    'example' => 'usefulGroup',
                  ),
                  'DeviceCount' => 
                  array (
                    'description' => '设备总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"7411716B-A488-4EEB-9AA0-6DB05AD2491F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"GroupId\\": \\"tDQvBJqbUyHs****\\",\\n    \\"GroupName\\": \\"aliyun\\",\\n    \\"DeviceActive\\": 1,\\n    \\"UtcCreate\\": \\"2018-09-14T14:35:51.000Z\\",\\n    \\"DynamicGroupExpression\\": \\"product_key = \\\\\\"a1***\\\\\\" and name LIKE \\\\\\"test%\\\\\\"\\",\\n    \\"DeviceOnline\\": 0,\\n    \\"GroupDesc\\": \\"usefulGroup\\",\\n    \\"DeviceCount\\": 10\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceGroupInfoResponse>\\n<RequestId>7411716B-A488-4EEB-9AA0-6DB05AD2491F</RequestId>\\n<Data>\\n    <GroupName>aliyun</GroupName>\\n    <UtcCreate>2021-10-14T14:35:51.000Z</UtcCreate>\\n    <DeviceOnline>0</DeviceOnline>\\n    <GroupDesc>usefulGroup</GroupDesc>\\n    <DeviceActive>1</DeviceActive>\\n    <DynamicGroupExpression>product_key = \\"a1***\\" and name LIKE \\"test%\\"</DynamicGroupExpression>\\n    <DeviceCount>10</DeviceCount>\\n    <GroupId>tDQvBJqbUyHs****</GroupId>\\n</Data>\\n<Success>true</Success>\\n</QueryDeviceGroupInfoResponse>","errorExample":""}]',
      'title' => '查询分组详情',
      'summary' => '调用该接口查询分组详情。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为30。

> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDynamicGroupDevices' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。
您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-***-v6***',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID，分组的全局唯一标识符。

您可调用[QueryDeviceGroupList](~~93356~~)接口查询分组ID（**GroupId**）。',
            'type' => 'string',
            'required' => true,
            'example' => 'tDQvBJqbUyHs***',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数，最大值是200，默认值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV***',
          ),
        ),
        4 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。

传入此参数时，若**FuzzyName**同时传入**true**，会模糊搜索设备，**DeviceName**值为设备名称的前缀字符串，长度必须大于4个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        5 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页标识，首次查询无需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'TGlzdFJlc291***',
          ),
        ),
        6 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。默认值是1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
            'default' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备状态。取值：

- **ONLINE**：设备在线。
- **OFFLINE**：设备离线。
- **UNACTIVE**：设备未激活。
- **DISABLE**：设备已禁用。',
            'type' => 'string',
            'required' => false,
            'example' => 'OFFLINE',
          ),
        ),
        8 => 
        array (
          'name' => 'FuzzyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否根据**DeviceName**值，模糊搜索设备。
- **true**：模糊搜索。
- **false**（默认）：不模糊搜索。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '下一页标识。可在下次请求时传入，来获取下一页数据。

如果返回值为空，则表示没有下一页数据。',
                'type' => 'string',
                'example' => 'TGlzdFJlc291***',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页所显示的设备数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '设备总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '24',
              ),
              'PageCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Page' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SimpleDeviceInfo' => 
                  array (
                    'description' => '调用成功后，返回的设备列表，详情参见**SimpleDeviceInfo**下信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '设备状态。取值：

- **ONLINE**：设备在线。
- **OFFLINE**：设备离线。
- **UNACTIVE**：设备未激活。
- **DISABLE**：设备已禁用。',
                          'type' => 'string',
                          'example' => 'ONLINE',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '设备所属产品的名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'light',
                        ),
                        'UtcActiveTime' => 
                        array (
                          'description' => '设备的激活时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2018-08-06T02:48:41.000Z',
                        ),
                        'ActiveTime' => 
                        array (
                          'description' => '设备的激活时间。',
                          'type' => 'string',
                          'example' => '2018-08-06 10:48:41',
                        ),
                        'ProductKey' => 
                        array (
                          'description' => '设备所属产品的**ProductKey**。',
                          'type' => 'string',
                          'example' => 'a1rYuVF***',
                        ),
                        'LastOnlineTime' => 
                        array (
                          'description' => '设备最近一次上线时间。',
                          'type' => 'string',
                          'example' => '2018-08-06 13:43:12',
                        ),
                        'NodeType' => 
                        array (
                          'description' => '产品的节点类型。取值：

- **0**：设备。设备不能挂载子设备，可以直连物联网平台，也可以作为网关的子设备连接物联网平台。
- **1**：网关。网关可以挂载子设备，具有子设备管理模块，维持子设备的拓扑关系，和将拓扑关系同步到物联网平台。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'UtcLastOnlineTime' => 
                        array (
                          'description' => '设备最近一次上线的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2018-08-06T05:43:12.000Z',
                        ),
                        'Nickname' => 
                        array (
                          'description' => '设备的备注名称。',
                          'type' => 'string',
                          'example' => 'detectors_in_beijing',
                        ),
                        'CategoryKey' => 
                        array (
                          'description' => '产品所属品类的标识符。

产品使用了物联网平台预定义的标准品类物模型会返回此参数。',
                          'type' => 'string',
                          'example' => 'Lighting',
                        ),
                        'IotId' => 
                        array (
                          'description' => '物联网平台为该设备颁发的ID，作为该设备的唯一标识符。',
                          'type' => 'string',
                          'example' => 'Q7uOhVRdZRRlDnTLv****00100',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.group.NotExistedGroup',
            'errorMessage' => 'The specified device group does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.device.FuzzyRuntimeSearchMinLengthLimit',
            'errorMessage' => 'Fuzzy runtime search length must exceed 4.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.device.RegionNotSupportDynamicGroup',
            'errorMessage' => 'The region does not currently support the dynamic group feature.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.common.APINotSupportedInInstance',
            'errorMessage' => 'This API operation is not supported in this instance.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"TGlzdFJlc291***\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 24,\\n  \\"PageCount\\": 2,\\n  \\"Page\\": 1,\\n  \\"Data\\": {\\n    \\"SimpleDeviceInfo\\": [\\n      {\\n        \\"Status\\": \\"ONLINE\\",\\n        \\"ProductName\\": \\"test\\",\\n        \\"DeviceName\\": \\"light\\",\\n        \\"UtcActiveTime\\": \\"2018-08-06T02:48:41.000Z\\",\\n        \\"ActiveTime\\": \\"2018-08-06 10:48:41\\",\\n        \\"ProductKey\\": \\"a1rYuVF***\\",\\n        \\"LastOnlineTime\\": \\"2018-08-06 13:43:12\\",\\n        \\"NodeType\\": 0,\\n        \\"UtcLastOnlineTime\\": \\"2018-08-06T05:43:12.000Z\\",\\n        \\"Nickname\\": \\"detectors_in_beijing\\",\\n        \\"CategoryKey\\": \\"Lighting\\",\\n        \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv****00100\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDynamicGroupDevicesResponse>\\n<NextToken>TGlzdFJlc291***</NextToken>\\n<PageCount>2</PageCount>\\n<PageSize>10</PageSize>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Total>24</Total>\\n<Page>1</Page>\\n<Data>\\n    <SimpleDeviceInfo>\\n        <LastOnlineTime>2018-08-06 13:43:12</LastOnlineTime>\\n        <UtcActiveTime>2018-08-06T02:48:41.000Z</UtcActiveTime>\\n        <Status>ONLINE</Status>\\n        <IotId>Q7uOhVRdZRRlDnTLv****00100</IotId>\\n        <CategoryKey>Lighting</CategoryKey>\\n        <ProductName>test</ProductName>\\n        <UtcLastOnlineTime>2018-08-06T05:43:12.000Z</UtcLastOnlineTime>\\n        <ActiveTime>2018-08-06 10:48:41</ActiveTime>\\n        <NodeType>0</NodeType>\\n        <ProductKey>a1rYuVF***</ProductKey>\\n        <Nickname>detectors_in_beijing</Nickname>\\n        <DeviceName>light</DeviceName>\\n    </SimpleDeviceInfo>\\n</Data>\\n<Success>true</Success>\\n</QueryDynamicGroupDevicesResponse>","errorExample":""}]',
      'title' => '查询动态分组下设备',
      'summary' => '查询动态分组下的设备列表。',
      'description' => '## 限制说明

- 目前仅华东2（上海）地域下，企业版实例和新版公共实例，支持动态分组功能。实例详细说明，请参见[实例管理](~~147356~~)。

- 单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceGroupList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数。最大值是200。默认值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'SuperGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '父组ID。查询某父组下的子分组列表时，需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => '8vDubXr4nUvZkNgk9mle010200',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组名称。

- 传入分组名称，则根据名称进行查询。不支持分组名称模糊查询。
- 若不传入此参数，则进行全量分组查询。',
            'type' => 'string',
            'required' => false,
            'example' => 'GroupName1',
          ),
        ),
        4 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'GroupTypes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待查询的分组类型。

目前仅支持传入一个，且为**LINK_PLATFORM_DYNAMIC**，表示动态分组。不传入时，默认为静态分组。


',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'LINK_PLATFORM_DYNAMIC',
            'maxItems' => 2,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CurrentPage' => 
              array (
                'description' => '当前页号。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BEFCA316-D6C7-470C-81ED-1FF4FFD4AA0D',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页记录数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '总记录数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '24',
              ),
              'PageCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'GroupInfo' => 
                  array (
                    'description' => '调用成功时，返回的分组信息。请参见GroupInfo。

> 返回的分组信息按照分组创建时间倒序排列。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GroupName' => 
                        array (
                          'description' => '分组名称。',
                          'type' => 'string',
                          'example' => 'test1',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '分组ID。',
                          'type' => 'string',
                          'example' => 'Kzt9FD8wje8o****',
                        ),
                        'GroupType' => 
                        array (
                          'description' => '分组类型。',
                          'type' => 'string',
                          'example' => 'LINK_PLATFORM_DYNAMIC',
                        ),
                        'GroupDesc' => 
                        array (
                          'description' => '分组描述。',
                          'type' => 'string',
                          'example' => 'usefulGroup',
                        ),
                        'UtcCreate' => 
                        array (
                          'description' => '分组创建时间。',
                          'type' => 'string',
                          'example' => '2018-10-09T02:58:34.000Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CurrentPage\\": 1,\\n  \\"RequestId\\": \\"BEFCA316-D6C7-470C-81ED-1FF4FFD4AA0D\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 24,\\n  \\"PageCount\\": 3,\\n  \\"Data\\": {\\n    \\"GroupInfo\\": [\\n      {\\n        \\"GroupName\\": \\"test1\\",\\n        \\"GroupId\\": \\"Kzt9FD8wje8o****\\",\\n        \\"GroupType\\": \\"LINK_PLATFORM_DYNAMIC\\",\\n        \\"GroupDesc\\": \\"usefulGroup\\",\\n        \\"UtcCreate\\": \\"2018-10-09T02:58:34.000Z\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceGroupListResponse>\\n<PageCount>3</PageCount>\\n<Data>\\n    <GroupInfo>\\n        <GroupName>test1</GroupName>\\n        <UtcCreate>2021-10-01T02:58:34.000Z</UtcCreate>\\n        <GroupId>Kzt9FD8wje8o***</GroupId>\\n        <GroupType>LINK_PLATFORM_DYNAMIC</GroupType>\\n    </GroupInfo>\\n    <GroupInfo>\\n        <GroupName>test2</GroupName>\\n        <UtcCreate>2021-10-01T02:56:40.000Z</UtcCreate>\\n        <GroupId>0ayrSQ3DSd7***</GroupId>\\n        <GroupType>LINK_PLATFORM_DYNAMIC</GroupType>\\n    </GroupInfo>\\n    <GroupInfo>\\n        <GroupDesc>Test</GroupDesc>\\n        <GroupName>test3</GroupName>\\n        <UtcCreate>2021-10-01T05:38:27.000Z</UtcCreate>\\n        <GroupId>oWXlIQeFZtzC***</GroupId>\\n        <GroupType>LINK_PLATFORM_DYNAMIC</GroupType>\\n    </GroupInfo>\\n    <GroupInfo>\\n        <GroupName>ylv0915</GroupName>\\n        <UtcCreate>2021-10-01T04:51:56.000Z</UtcCreate>\\n        <GroupId>SfEiVapLPUjB***</GroupId>\\n        <GroupType>LINK_PLATFORM_DYNAMIC</GroupType>\\n    </GroupInfo>\\n    <GroupInfo>\\n        <GroupName>ydlv</GroupName>\\n        <UtcCreate>2021-10-01T14:35:51.000Z</UtcCreate>\\n        <GroupId>z2S2h9NsDTZm***</GroupId>\\n        <GroupType>LINK_PLATFORM_DYNAMIC</GroupType>\\n    </GroupInfo>\\n    <GroupInfo>\\n        <GroupName>ldh_group_3</GroupName>\\n        <UtcCreate>2021-10-01T12:26:20.000Z</UtcCreate>\\n        <GroupId>chn5fkjin***</GroupId>\\n        <GroupType>LINK_PLATFORM_DYNAMIC</GroupType>\\n    </GroupInfo>\\n    <GroupInfo>\\n        <GroupDesc>ddd</GroupDesc>\\n        <GroupName>ylvgisbim</GroupName>\\n        <UtcCreate>2021-10-01T11:41:20.000Z</UtcCreate>\\n        <GroupId>ncUZ8DjWYaB9***</GroupId>\\n        <GroupType>LINK_PLATFORM_DYNAMIC</GroupType>\\n    </GroupInfo>\\n    <GroupInfo>\\n        <GroupName>abc</GroupName>\\n        <UtcCreate>2021-10-01T09:14:30.000Z</UtcCreate>\\n        <GroupId>zpdvwxzBdt4F***</GroupId>\\n        <GroupType>LINK_PLATFORM_DYNAMIC</GroupType>\\n    </GroupInfo>\\n    <GroupInfo>\\n        <GroupName>test11</GroupName>\\n        <UtcCreate>2021-10-01T07:22:39.000Z</UtcCreate>\\n        <GroupId>BTaudF16X2xK***</GroupId>\\n        <GroupType>LINK_PLATFORM_DYNAMIC</GroupType>\\n    </GroupInfo>\\n    <GroupInfo>\\n        <GroupName>testy</GroupName>\\n        <UtcCreate>2021-10-01T01:58:06.000Z</UtcCreate>\\n        <GroupId>PrTm3VOeggPw***</GroupId>\\n        <GroupType>LINK_PLATFORM_DYNAMIC</GroupType>\\n    </GroupInfo>\\n</Data>\\n<PageSize>10</PageSize>\\n<RequestId>BEFCA316-D6C7-470C-81ED-1FF4FFD4AA0D</RequestId>\\n<CurrentPage>1</CurrentPage>\\n<Success>true</Success>\\n<Total>24</Total>\\n</QueryDeviceGroupListResponse>","errorExample":""}]',
      'title' => '查询分组列表',
      'summary' => '调用该接口分页查询分组列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为100。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetDeviceGroupTags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID，分组的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'W16X8Tvdosec****',
          ),
        ),
        2 => 
        array (
          'name' => 'TagString',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JSON格式的标签数据。TagString由标签的**tagKey**和**tagValue**组成，**tagKey**和**tagValue**均不能为空。
- **tagKey**：标签键。可包含英文大小写字母，数字和英文句号（.），长度在2~30字符之间。
- **tagValue**：标签值。可包含中文、英文字母、数字、下划线（_）和短划线（-）。长度不可超过128个字符。一个中文汉字算2个字符。

多个标签以英文逗号间隔。例如`[{"tagKey":"h1","tagValue":"rr"},{"tagKey":"7h","tagValue":"rr"}]`。

若更新已有标签，新的标签Value值将覆盖原来的值。

若要删除某个标签，则不传入该标签的Key和Value即可。

><notice>`abc`为物联网平台系统保留的标签Key，即**tagKey**不能设置为abc。若设置`tagKey=abc`，使用标签检索时会直接被过滤。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '[{"tagKey":"h1","tagValue":"rr"},{"tagKey":"7h","tagValue":"rr"}]',
          ),
        ),
        3 => 
        array (
          'name' => 'GroupType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组类型。

<props="china">传入**LINK_PLATFORM_DYNAMIC**时，表示动态分组。不传入时，默认为静态分组。</props>

<props="intl">无需传入。</props>
',
            'type' => 'string',
            'required' => false,
            'example' => 'LINK_PLATFORM_DYNAMIC',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '12CFDAF1-99D9-42E0-8C2F-F281DA5E8953',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"12CFDAF1-99D9-42E0-8C2F-F281DA5E8953\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<SetDeviceGroupTagsResponse>\\r\\n    <RequestId>12CFDAF1-99D9-42E0-8C2F-F281DA5E8953</RequestId>\\r\\n    <Success>true</Success>\\r\\n</SetDeviceGroupTagsResponse>","errorExample":""}]',
      'title' => '添加、更新、或删除分组标签',
      'summary' => '批量增加、更新或者删除设备分组标签。',
      'description' => '## 使用说明
单个分组最多可有100个标签。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceGroupTagList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID，分组的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'W16X8Tvdosec****',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组类型。

传入**LINK_PLATFORM_DYNAMIC**时，表示动态分组。不传入时，默认为静态分组。',
            'type' => 'string',
            'required' => false,
            'example' => 'LINK_PLATFORM_DYNAMIC',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '214154FF-9D47-4E3F-AAAD-F4CE67F41060',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'GroupTagInfo' => 
                  array (
                    'description' => '调用成功时，返回的标签信息。请参见以下**GroupTagInfo**。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TagValue' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'bulb',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'room1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"214154FF-9D47-4E3F-AAAD-F4CE67F41060\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"GroupTagInfo\\": [\\n      {\\n        \\"TagValue\\": \\"bulb\\",\\n        \\"TagKey\\": \\"room1\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<QueryDeviceGroupTagListResponse>\\r\\n    <Data>\\r\\n        <GroupTagInfo>\\r\\n            <TagValue>bulb</TagValue>\\r\\n            <TagKey>room1</TagKey>\\r\\n        </GroupTagInfo>\\r\\n    </Data>\\r\\n    <RequestId>214154FF-9D47-4E3F-AAAD-F4CE67F41060</RequestId>\\r\\n    <Success>true</Success>\\r\\n</QueryDeviceGroupTagListResponse>","errorExample":""}]',
      'title' => '查询分组标签列表',
      'summary' => '调用该接口查询分组标签列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceGroupByDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属产品的ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1SKk9K****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'test456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '7941C8CD-7764-4A94-8CD9-E2762D4A73AC',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'GroupInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'GroupInfo' => 
                  array (
                    'description' => '调用成功时，返回的分组信息。详情请参见以下GroupInfo。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GroupName' => 
                        array (
                          'description' => '分组名称。',
                          'type' => 'string',
                          'example' => 'father1543152336554',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '分组ID。',
                          'type' => 'string',
                          'example' => '6a3FF2XE2BKa****',
                        ),
                        'GroupType' => 
                        array (
                          'description' => '分组类型。',
                          'type' => 'string',
                          'example' => 'LINK_PLATFORM_DYNAMIC',
                        ),
                        'GroupDesc' => 
                        array (
                          'description' => '分组描述。',
                          'type' => 'string',
                          'example' => 'father desc',
                        ),
                        'UtcCreate' => 
                        array (
                          'description' => '分组的创建时间。',
                          'type' => 'string',
                          'example' => '2018-11-25T13:25:37.000Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"7941C8CD-7764-4A94-8CD9-E2762D4A73AC\\",\\n  \\"Success\\": true,\\n  \\"GroupInfos\\": {\\n    \\"GroupInfo\\": [\\n      {\\n        \\"GroupName\\": \\"father1543152336554\\",\\n        \\"GroupId\\": \\"6a3FF2XE2BKa****\\",\\n        \\"GroupType\\": \\"LINK_PLATFORM_DYNAMIC\\",\\n        \\"GroupDesc\\": \\"father desc\\",\\n        \\"UtcCreate\\": \\"2018-11-25T13:25:37.000Z\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceGroupByDeviceResponse>\\n<RequestId>7941C8CD-7764-4A94-8CD9-E2762D4A73AC</RequestId>\\n<GroupInfos>\\n    <GroupInfo>\\n        <GroupDesc>father desc</GroupDesc>\\n        <GroupName>father1543152336554</GroupName>\\n        <UtcCreate>2018-11-25T13:25:37.000Z</UtcCreate>\\n        <GroupId>6a3FF2XE2BKa***</GroupId>\\n        <GroupType>LINK_PLATFORM_DYNAMIC</GroupType>\\n    </GroupInfo>\\n</GroupInfos>\\n<Success>true</Success>\\n</QueryDeviceGroupByDeviceResponse>","errorExample":""}]',
      'title' => '查询某一设备所在的分组列表',
      'summary' => '调用该接口查询某一设备所在的分组列表。',
      'description' => '## 使用说明
一个设备最多能被添加到10个分组中 。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySuperDeviceGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '子分组ID，分组的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'DMoI2Kby5m62****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '7411716B-A488-4EEB-9AA0-6DB05AD2491F',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'GroupInfo' => 
                  array (
                    'description' => '调用成功时，返回的父分组信息数据。请参见以下**GroupInfo**。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GroupId' => 
                        array (
                          'description' => '子分组所属的父分组ID。',
                          'type' => 'string',
                          'example' => 'tDQvBJqbUyHskDse',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '子分组所属的父分组名称。',
                          'type' => 'string',
                          'example' => 'IOTTEST',
                        ),
                        'GroupDesc' => 
                        array (
                          'description' => '父分组描述。',
                          'type' => 'string',
                          'example' => 'A test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"7411716B-A488-4EEB-9AA0-6DB05AD2491F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"GroupInfo\\": [\\n      {\\n        \\"GroupId\\": \\"tDQvBJqbUyHskDse\\",\\n        \\"GroupName\\": \\"IOTTEST\\",\\n        \\"GroupDesc\\": \\"A test\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<QuerySuperDeviceGroupResponse>\\r\\n    <Data>\\r\\n        <GroupName>IOTTEST</GroupName>\\r\\n        <GroupId>tDQvBJqbUyHskDse</GroupId>\\r\\n        <GroupDesc>A test.</GroupDesc>\\r\\n    </Data>\\r\\n    <RequestId>7411716B-A488-4EEB-9AA0-6DB05AD2491F</RequestId>\\r\\n    <Success>true</Success>\\r\\n</QuerySuperDeviceGroupResponse>","errorExample":""}]',
      'title' => '根据子分组ID查询父分组信息',
      'summary' => '调用该接口根据子分组ID查询父分组信息。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceListByDeviceGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID，分组的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => '7DIgqIl1Ijnh****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中，每页显示的设备数量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定显示查询结果中的第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'B1A921D9-1061-4D45-9F12-EA6B0FDEDE30',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页所显示的设备数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '设备总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'PageCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Page' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SimpleDeviceInfo' => 
                  array (
                    'description' => '调用成功时，返回的设备列表信息数据。详情请参见以下**SimpleDeviceInfo**。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ProductKey' => 
                        array (
                          'description' => '设备所属的产品Key。',
                          'type' => 'string',
                          'example' => 'a1hWjHD****',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '设备所属的产品名称。',
                          'type' => 'string',
                          'example' => 'WIFIdevice',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'ios_1207_08',
                        ),
                        'IotId' => 
                        array (
                          'description' => '物联网平台为该设备颁发的ID，作为该设备的唯一标识符。',
                          'type' => 'string',
                          'example' => 'TfmUAeJjQQhCPH84UVNn0010c6****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B1A921D9-1061-4D45-9F12-EA6B0FDEDE30\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 3,\\n  \\"PageCount\\": 1,\\n  \\"Page\\": 1,\\n  \\"Data\\": {\\n    \\"SimpleDeviceInfo\\": [\\n      {\\n        \\"ProductKey\\": \\"a1hWjHD****\\",\\n        \\"ProductName\\": \\"WIFIdevice\\",\\n        \\"DeviceName\\": \\"ios_1207_08\\",\\n        \\"IotId\\": \\"TfmUAeJjQQhCPH84UVNn0010c6****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\r\\n<QueryDeviceListByDeviceGroupResponse>\\r\\n    <PageCount>1</PageCount>\\r\\n    <Data>\\r\\n        <SimpleDeviceInfo>\\r\\n            <DeviceName>ios_1207_08</DeviceName>\\r\\n            <ProductKey>a1hWjHD****</ProductKey>\\r\\n            <ProductName>WIFIdevice</ProductName>\\r\\n            <IotId>TfmUAeJjQQhCPH84UVNn0010c6****</IotId>\\r\\n        </SimpleDeviceInfo>\\r\\n        <SimpleDeviceInfo>\\r\\n            <DeviceName>ios_1207_07</DeviceName>\\r\\n            <ProductKey>a1hWjHD****</ProductKey>\\r\\n            <ProductName>WIFIgateway</ProductName>\\r\\n            <IotId>wVPeAksaboXBlRgvZNHQ001031****</IotId>\\r\\n        </SimpleDeviceInfo>\\r\\n        <SimpleDeviceInfo>\\r\\n            <DeviceName>E1IPK25iL4CTOwnuI2yt</DeviceName>\\r\\n            <ProductKey>a1mV8bK****</ProductKey>\\r\\n            <ProductName>yanlv</ProductName>\\r\\n            <IotId>E1IPK25iL4CTOwnuI2yt001059****</IotId>\\r\\n        </SimpleDeviceInfo>\\r\\n    </Data>\\r\\n    <PageSize>10</PageSize>\\r\\n    <Page>1</Page>\\r\\n    <RequestId>B1A921D9-1061-4D45-9F12-EA6B0FDEDE30</RequestId>\\r\\n    <Success>true</Success>\\r\\n    <Total>3</Total>\\r\\n</QueryDeviceListByDeviceGroupResponse>","errorExample":""}]',
      'title' => '查询分组中的设备列表',
      'summary' => '调用该接口查询分组中的设备列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceGroupByTags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定显示查询结果的第几页。默认值是1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定每页显示的记录数。默认值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'TagValue' => 
                array (
                  'description' => '分组标签值（value）。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'tag',
                ),
                'TagKey' => 
                array (
                  'description' => '分组标签键（key）。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'group',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '9599EE98-1642-4FCD-BFC4-039E458A4693',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的记录数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '总记录数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Page' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DeviceGroup' => 
                  array (
                    'description' => '调用成功时，返回分组信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GroupName' => 
                        array (
                          'description' => '分组名称。',
                          'type' => 'string',
                          'example' => 'test11',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '分组ID。',
                          'type' => 'string',
                          'example' => 'Z0ElGF5aqc0t****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9599EE98-1642-4FCD-BFC4-039E458A4693\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 1,\\n  \\"PageCount\\": 1,\\n  \\"Page\\": 1,\\n  \\"Data\\": {\\n    \\"DeviceGroup\\": [\\n      {\\n        \\"GroupName\\": \\"test11\\",\\n        \\"GroupId\\": \\"Z0ElGF5aqc0t****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\r\\n<QueryDeviceGroupByTagsResponse> \\r\\n  <PageCount>1</PageCount>  \\r\\n  <Data> \\r\\n    <DeviceGroup> \\r\\n      <GroupName>test11</GroupName>  \\r\\n      <GroupId>Z0ElGF5aqc0t****</GroupId> \\r\\n    </DeviceGroup> \\r\\n  </Data>  \\r\\n  <Page>1</Page>  \\r\\n  <PageSize>10</PageSize>  \\r\\n  <RequestId>9599EE98-1642-4FCD-BFC4-039E458A4693</RequestId>  \\r\\n  <Success>true</Success>  \\r\\n  <Total>1</Total> \\r\\n</QueryDeviceGroupByTagsResponse>","errorExample":""}]',
      'title' => 'QueryDeviceGroupByTags',
      'summary' => '调用该接口根据标签查询设备分组。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateThingModel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的**ProductKey**，物联网平台为产品颁发的全局唯一标识符。

您可以在物联网平台控制台或调用[QueryProductList](~~69271~~)接口，查看当前账号下所有产品的信息。


',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'ThingModelJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新增的功能定义详情。最多能包含10个功能的定义信息。

在**ThingModelJson**每个property结构中，可以使用**extendConfig**来描述扩展物模型的数据。更多信息，请参见[ThingModelJson数据说明](~~150457~~)。

><notice>此处参数**ThingModelJson**的值不可传入完整的物模型TSL数据，只需传入JSON格式的物模型**properties**、**services**和**events**字段数据。
></notice>

以下示例值为包含多种数据类型的属性数据，例如**STRUCT**、**ARRAY**。
```
{
  "properties": [
    {
      "custom": true,
      "dataSpecsList": [
        {
          "childDataType": "TEXT",
          "childName": "设备SIM卡的CCID",
          "dataSpecs": {
            "custom": true,
            "dataType": "TEXT",
            "length": 20
          },
          "dataType": "STRUCT",
          "identifier": "CCID",
          "name": "设备SIM卡的CCID"
        },
        {
          "childDataType": "INT",
          "childName": "电池电量",
          "dataSpecs": {
            "custom": true,
            "dataType": "INT",
            "max": "60000",
            "min": "0",
            "step": "1"
          },
          "dataType": "STRUCT",
          "identifier": "battery",
          "name": "电池电量"
        },
        {
          "childDataType": "TEXT",
          "childName": "其他信息",
          "dataSpecs": {
            "custom": true,
            "dataType": "TEXT",
            "length": 1024
          },
          "dataType": "STRUCT",
          "identifier": "other_info",
          "name": "其他信息"
        }
      ],
      "dataType": "STRUCT",
      "identifier": "DEV_INFO",
      "name": "设备信息",
      "productKey": "a1T***",
      "propertyId": 18786548,
      "required": false,
      "rwFlag": "READ_ONLY"
    },
    {
      "custom": true,
      "dataSpecs": {
        "childDataType": "INT",
        "custom": true,
        "dataType": "ARRAY",
        "size": 1,
        "dataSpecs": {
          "custom": true,
          "dataType": "INT",
          "max": "65535",
          "min": "0",
          "step": "1",
          "unit": "ppm",
          "unitName": "百万分率"
        }
      },
      "dataType": "ARRAY",
      "identifier": "airRH_SR",
      "name": "除湿机湿度",
      "productKey": "a1T***",
      "propertyId": 18786551,
      "required": false,
      "rwFlag": "READ_ONLY"
    }
  ],
  "services": [...],
  "events": [...]
}
```







',
            'type' => 'string',
            'required' => false,
            'example' => '{   "properties":[     {       "identifier": "SimCardType",       "extendConfig":"{...}",       "dataSpecs": {         "max": "1",         "dataType": "INT",         "unit": "mmHg",         "min": "0",         "step": "1"       },       "std": false,       "custom": true,       "dataType": "INT",       "rwFlag": "READ_ONLY",       "productKey": "a1bPo9p****",       "required": false,       "customFlag": true,       "name": "sim卡类型"     }   ]，   "services":[...],   "events":[...] }',
          ),
        ),
        3 => 
        array (
          'name' => 'FunctionBlockId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型自定义模块标识符，在产品中具有唯一性。支持英文大小写字母、数字和下划线（_），不超过30个字符。

需与**FunctionBlockName**结合使用。不传入此参数时，新增功能导入默认模块。',
            'type' => 'string',
            'required' => false,
            'example' => 'BatteryModule',
          ),
        ),
        4 => 
        array (
          'name' => 'FunctionBlockName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型的自定义模块名称。支持中文、英文字母、日文、数字和下划线（_），长度限制为4～30个字符，一个中文、一个日文算1个字符。

需与**FunctionBlockId**结合使用。不传入此参数时，新增功能导入默认模块。',
            'type' => 'string',
            'required' => false,
            'example' => '电池模块',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateThingModelResponse>\\n<RequestId>9E76053E-26ED-4AB4-AE58-8AFC3F1E7E8E</RequestId>\\n<Success>true</Success>\\n</CreateThingModelResponse>","errorExample":""}]',
      'title' => '为物模型新增功能',
      'summary' => '为指定产品的物模型新增功能，支持同时新增物模型扩展描述。',
      'description' => '
## 使用说明

- 如果指定产品已发布，需先调用接口[CancelReleaseProduct](~~213875~~)取消该产品发布，才能调用本接口新增物模型功能。

- 调用接口前，您可通过[json-schema](https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb)对**ThingModelJson**中的入参进行预校验，请参见[ThingModelJson数据说明](~~150457~~)中的“校验”。

- 单次调用最多可新增10个功能，即新增属性、服务和事件的数量总计不超过10。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享阿里云账号配额。

',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateThingModel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的**ProductKey**。

可以在物联网平台控制台产品页查看，或调用[QueryProductList](~~69271~~)查看ProductKey的取值。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'Identifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '功能原有的标识符。

您可调用[GetThingModelTsl](~~150319~~)，从返回参数**TslStr**中查看具体功能的**identifier**。',
            'type' => 'string',
            'required' => false,
            'example' => 'Temperature',
          ),
        ),
        3 => 
        array (
          'name' => 'ThingModelJson',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新的功能定义详情。

- **Identifier**不为空时，表示更新功能的标识符，最多能包含1个功能的标识符定义信息。
- **Identifier**为空时，表示更新一个服务或事件下，输入或输出参数的定义，可包含多个参数的定义信息，最多不超过50个。

ThingModelJson的编写指导，请参见[ThingModelJson数据说明](~~150457~~)。
',
            'type' => 'string',
            'required' => false,
            'example' => '{   "properties":[     {       "identifier": "SimCardType",       "extendConfig":"{...}",       "dataSpecs": {         "max": "1",         "dataType": "INT",         "unit": "mmHg",         "min": "0",         "step": "1"       },       "std": false,       "custom": true,       "dataType": "INT",       "rwFlag": "READ_ONLY",       "productKey": "a1Jw4i****",       "required": false,       "customFlag": true,       "name": "sim卡类型＂    }   ] }',
          ),
        ),
        4 => 
        array (
          'name' => 'FunctionBlockId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型自定义模块标识符，在产品中具有唯一性。

此参数和**FunctionBlockName**均不传入时，更新默认模块中功能。',
            'type' => 'string',
            'required' => false,
            'example' => 'BatteryModule',
          ),
        ),
        5 => 
        array (
          'name' => 'FunctionBlockName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型的自定义模块名称。支持中文、英文字母、日文、数字和下划线（_），长度限制为4～30个字符，一个中文、一个日文算1个字符。

-  此参数和**FunctionBlockId**均不传入时，更新默认模块中功能。

-  如果传入此参数，必须与**FunctionBlockId**结合使用，可修改**FunctionBlockId**对应的自定义模块名称。

> 不支持修改默认模块名称。
',
            'type' => 'string',
            'required' => false,
            'example' => '电池模块',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateThingModelResponse>\\n<RequestId>5573D217-8E3E-47AD-9331-2083B88E64B2</RequestId>\\n<Success>true</Success>\\n</UpdateThingModelResponse>","errorExample":""}]',
      'title' => '更新产品物模型功能',
      'summary' => '更新指定产品物模型中的单个功能，支持更新物模型扩展描述。',
      'description' => '## 使用说明

- 如果指定产品已发布，需先调用接口[CancelReleaseProduct](~~213875~~)取消该产品发布，才能调用本接口更新物模型功能。

- 如需更新功能定义信息，您可通过[json-schema](https://github.com/everit-org/json-schema?spm=a2c4g.11186623.2.23.575832d9zD7fZb)对**ThingModelJson**中的入参进行预校验，请参见[ThingModelJson数据说明](~~150457~~)中的“校验”。


- 单次调用最多可更新1个功能，即更新1个属性、服务或事件的定义信息。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryThingModel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

><notice>目前，物联网平台仅支持实例维度的资源组管理。请求参数**ResourceGroupId**配置已无效，无需再传入。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm4l5tcwd****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'ModelVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查看的物模型版本号。
可调用[ListThingModelVersion](~~150318~~)查看产品下的物模型版本号。

不传入此参数，则查询草稿状态的物模型功能定义；传入此参数，则查询指定版本的物模型功能定义。',
            'type' => 'string',
            'required' => false,
            'example' => 'v1.0.0',
          ),
        ),
        4 => 
        array (
          'name' => 'FunctionBlockId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型自定义模块标识符，在产品中具有唯一性。

不传入此参数时，查询默认模块数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'BatteryModule',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ProductKey' => 
              array (
                'description' => '产品的**ProductKey**。',
                'type' => 'string',
                'example' => 'a1BwAGV****',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'ThingModelJson' => 
                  array (
                    'description' => '物模型的功能定义。默认模块和自定义模块的物模型数据格式不同。

ThingModelJson取值的数据格式说明，请参见[ThingModelJson数据说明](~~150457~~)。',
                    'type' => 'string',
                    'example' => '{   "productKey":"a1Jw4id***",   "_ppk":{      "version":"1.1",      "description":"xxx"   },   "properties":[     {       "identifier": "SimCardType",       "dataSpecs": {         "max": "1",         "dataType": "INT",         "unit": "mmHg",         "min": "0",         "step": "1"       },       "std": false,       "custom": true,       "dataType": "INT",       "rwFlag": "READ_ONLY",       "productKey": "a1Jw4idFWHX",       "required": false,       "customFlag": true,       "name": "sim卡类型"     }   ],   "services":[],   "events":[]  }',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ProductKey\\": \\"a1BwAGV****\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ThingModelJson\\": \\"{   \\\\\\"productKey\\\\\\":\\\\\\"a1Jw4id***\\\\\\",   \\\\\\"_ppk\\\\\\":{      \\\\\\"version\\\\\\":\\\\\\"1.1\\\\\\",      \\\\\\"description\\\\\\":\\\\\\"xxx\\\\\\"   },   \\\\\\"properties\\\\\\":[     {       \\\\\\"identifier\\\\\\": \\\\\\"SimCardType\\\\\\",       \\\\\\"dataSpecs\\\\\\": {         \\\\\\"max\\\\\\": \\\\\\"1\\\\\\",         \\\\\\"dataType\\\\\\": \\\\\\"INT\\\\\\",         \\\\\\"unit\\\\\\": \\\\\\"mmHg\\\\\\",         \\\\\\"min\\\\\\": \\\\\\"0\\\\\\",         \\\\\\"step\\\\\\": \\\\\\"1\\\\\\"       },       \\\\\\"std\\\\\\": false,       \\\\\\"custom\\\\\\": true,       \\\\\\"dataType\\\\\\": \\\\\\"INT\\\\\\",       \\\\\\"rwFlag\\\\\\": \\\\\\"READ_ONLY\\\\\\",       \\\\\\"productKey\\\\\\": \\\\\\"a1Jw4idFWHX\\\\\\",       \\\\\\"required\\\\\\": false,       \\\\\\"customFlag\\\\\\": true,       \\\\\\"name\\\\\\": \\\\\\"sim卡类型\\\\\\"     }   ],   \\\\\\"services\\\\\\":[],   \\\\\\"events\\\\\\":[]  }\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryThingModelResponse>\\n  <RequestId>1F9041A2-ED5B-4A5A-9C44-598E28C0B434</RequestId>\\n  <Data>\\n    <ThingModelJson>{\\"_ppk\\":{\\"version\\":\\"1594253010934\\"},\\"events\\":[],\\"productKey\\":\\"a114xeJ****\\",\\"properties\\":[{\\"configCode\\":\\"8C03F0EEC63D4897BF2637F89AE36B011594227294067\\",\\"custom\\":true,\\"customFlag\\":true,\\"dataSpecs\\":{\\"custom\\":true,\\"dataType\\":\\"INT\\",\\"max\\":\\"1\\",\\"min\\":\\"0\\",\\"step\\":\\"1\\",\\"unit\\":\\"ppb\\"},\\"dataType\\":\\"INT\\",\\"description\\":\\"1\\",\\"extendConfig\\":\\"{\\\\\\"originalDataType\\\\\\":{\\\\\\"specs\\\\\\":{\\\\\\"registerCount\\\\\\":1,\\\\\\"reverseRegister\\\\\\":0,\\\\\\"swap16\\\\\\":0},\\\\\\"type\\\\\\":\\\\\\"bool\\\\\\"},\\\\\\"identifier\\\\\\":\\\\\\"WakeUpData\\\\\\",\\\\\\"registerAddress\\\\\\":\\\\\\"0x04\\\\\\",\\\\\\"scaling\\\\\\":1,\\\\\\"writeFunctionCode\\\\\\":0,\\\\\\"operateType\\\\\\":\\\\\\"inputStatus\\\\\\",\\\\\\"pollingTime\\\\\\":1000,\\\\\\"trigger\\\\\\":1}\\",\\"identifier\\":\\"WakeUpData\\",\\"name\\":\\"唤醒数据\\",\\"productKey\\":\\"a114xeJGj2p\\",\\"required\\":false,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":false}],\\"services\\":[]}</ThingModelJson>\\n  </Data>\\n  <Success>true</Success>\\n</QueryThingModelResponse>","errorExample":""}]',
      'title' => '查看指定产品的物模型中的功能定义详情',
      'summary' => '调用该接口查看指定产品物模型中的功能定义详情。',
      'description' => '## 使用说明
物模型的功能定义详情中包含物模型中的所有属性、服务和事件定义。

如果产品物模型中添加了自定义模块，请求参数**FunctionBlockId**的值为空时，可获取到自定义模块列表；不为空时，可获取指定自定义模块的功能定义。
返回参数**ThingModelJson**取值的数据格式说明，请参见[ThingModelJson数据说明](~~150457~~)。

## QPS限制



单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

   > 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。

',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CopyThingModel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

><notice>目前，物联网平台仅支持实例维度的资源组管理。请求参数**ResourceGroupId**配置已无效，无需再传入。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm4l5tcwd****',
          ),
        ),
        2 => 
        array (
          'name' => 'SourceProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要复制的物模型所属产品的ProductKey。
可以在物联网平台控制台产品页查看，或调用[QueryProductList](~~69271~~)查看ProductKey的取值。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'TargetProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标产品的**ProductKey**。
可以在物联网平台控制台产品页查看，或调用[QueryProductList](~~69271~~)查看**ProductKey**的取值。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwwG0****',
          ),
        ),
        4 => 
        array (
          'name' => 'SourceModelVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要复制的物模型版本号。
可以调用[ListThingModelVersion](~~150318~~)，查看源物模型的版本号。',
            'type' => 'string',
            'required' => false,
            'example' => 'V1.0.0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CopyThingModelResponse>\\n<RequestId>9E76053E-26ED-4AB4-AE58-8AFC3F1E7E8E</RequestId>\\n<Success>true</Success>\\n</CopyThingModelResponse>","errorExample":""}]',
      'title' => '复制指定产品的物模型到目标产品',
      'summary' => '调用该接口复制指定产品的物模型到目标产品。',
      'description' => '## 使用说明
- 如果目标产品已发布，需先调用接口[CancelReleaseProduct](~~213875~~)取消该产品发布，才能调用本接口复制物模型。
- 目标产品和物模型源产品的品类（**CategoryKey**）必须相同。您可调用[QueryProduct](~~69272~~)接口，从返回结果中查看产品的**CategoryKey**。
- 要复制的物模型版本号必须传入，即必须传入请求参数**SourceModelVersion**的值，否则调用接口会失败。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。


',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PublishThingModel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

><notice>目前，物联网平台仅支持实例维度的资源组管理。请求参数**ResourceGroupId**配置已无效，无需再传入。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm4l5tcwd****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的ProductKey。
可以在物联网平台控制台产品页查看，或调用[QueryProductList](~~69271~~)查看ProductKey的取值。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'ModelVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置物模型的版本号。
版本号支持英文大、小字母、数字和英文句号（.），长度范围不超过16个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'v1.0.0',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型版本的描述。',
            'type' => 'string',
            'required' => false,
            'example' => '第二版',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PublishThingModelResponse>\\n<RequestId>5252CC6E-9E4B-4DB1-B1D8-7EEA190A5B3E</RequestId>\\n<Success>true</Success>\\n</PublishThingModelResponse>","errorExample":""}]',
      'title' => '发布指定产品的物模型',
      'summary' => '调用该接口发布指定产品的物模型。',
      'description' => '## 使用说明
如果指定产品已发布，需先调用接口[CancelReleaseProduct](~~213875~~)取消该产品发布，才能调用本接口发布物模型。
## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。



',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteThingModel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm4l5tcwd****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的ProductKey。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'FunctionBlockId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型自定义模块标识符，在产品中具有唯一性。

- **PropertyIdentifier.N**、**ServiceIdentifier.N**或**EventIdentifier.N**不为空时，传入此参数，删除自定义模块下指定功能；不传入此参数，删除默认模块下指定功能。

- **PropertyIdentifier.N**、**ServiceIdentifier.N**和**EventIdentifier.N**都为空时，传入此参数，删除该模块及其下所有功能定义。',
            'type' => 'string',
            'required' => false,
            'example' => 'BatteryModule',
          ),
        ),
        4 => 
        array (
          'name' => 'PropertyIdentifier',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '需要删除的属性标识符列表。最多传入10个属性标识符。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '需要删除的属性标识符。',
              'type' => 'string',
              'required' => false,
              'example' => 'Temperature',
            ),
            'required' => false,
            'example' => 'Temperature',
            'maxItems' => 100,
          ),
        ),
        5 => 
        array (
          'name' => 'ServiceIdentifier',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '需要删除的服务标识符列表。最多传入10个服务标识符。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '需要删除的服务标识符。',
              'type' => 'string',
              'required' => false,
              'example' => 'Set',
            ),
            'required' => false,
            'example' => 'Set',
            'maxItems' => 100,
          ),
        ),
        6 => 
        array (
          'name' => 'EventIdentifier',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '需要删除的事件标识符列表。最多传入10个事件标识符。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '需要删除的事件标识符。',
              'type' => 'string',
              'required' => false,
              'example' => 'OfflineAlert',
            ),
            'required' => false,
            'example' => 'OfflineAlert',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteThingModelResponse>\\n<RequestId>9E76053E-26ED-4AB4-AE58-8AFC3F1E7E8E</RequestId>\\n<Success>true</Success>\\n</DeleteThingModelResponse>","errorExample":""}]',
      'title' => '删除指定产品下物模型中的指定功能',
      'summary' => '调用该接口删除指定产品下物模型中的指定功能。',
      'description' => '## 使用说明
- 如果指定产品已发布，需先调用接口[CancelReleaseProduct](~~213875~~)取消该产品发布，才能调用本接口删除物模型中功能。
- 如果产品下有未发布的新增物模型功能定义或物模型自定义模块，也可调用该接口进行删除。
- 调用该接口时，必须传入请求参数**ProductKey**和指定的物模型（**FunctionBlockId**、**PropertyIdentifier.N**、**ServiceIdentifier.N**或**EventIdentifier.N**）。删除指定产品下物模型功能定义逻辑如下：
    - 仅传入**ProductKey**和**FunctionBlockId**：删除指定产品下指定的物模型自定义模块。
    - 传入**ProductKey**，及指定的**PropertyIdentifier.N**、**ServiceIdentifier.N**或**EventIdentifier.N**：删除指定产品下物模型默认模块中指定的功能定义。此时，仅删除已传入且存在的指定功能定义。若传入的**PropertyIdentifier.N**、**ServiceIdentifier.N**和**EventIdentifier.N**在默认模块中都不存在，调用本接口会报错，提示功能定义不存在的错误码信息。
    - 传入**ProductKey**和**FunctionBlockId**，及指定的**PropertyIdentifier.N**、**ServiceIdentifier.N**或**EventIdentifier.N**：删除指定产品下物模型自定义模块中指定的功能定义。此时，仅删除已传入且存在的指定功能定义。若传入的**PropertyIdentifier.N**、**ServiceIdentifier.N**和**EventIdentifier.N**在自定义模块中都不存在，调用本接口会报错，提示功能定义不存在的错误码信息。
    > 请求参数**PropertyIdentifier.N**、**ServiceIdentifier.N**和**EventIdentifier.N**，最多各传入10个标识符。
     
- 调用该接口删除物模型功能后，必须调用[PublishThingModel](~~150311~~)接口重新发布对应产品的物模型，删除物模型功能的操作才能生效。


## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享该阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListThingTemplates' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的标准品类列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CategoryName' => 
                    array (
                      'description' => '品类的名称。',
                      'type' => 'string',
                      'example' => '路灯照明',
                    ),
                    'CategoryKey' => 
                    array (
                      'description' => '品类的标识符。',
                      'type' => 'string',
                      'example' => 'lighting',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"CategoryName\\": \\"路灯照明\\",\\n      \\"CategoryKey\\": \\"lighting\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListThingTemplatesResponse>\\n<RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n<Success>true</Success>\\n<Data>\\n    <CategoryName>智能后视镜</CategoryName>\\n    <CategoryKey>SmartRearviewMirror</CategoryKey>\\n</Data>\\n<Data>\\n    <CategoryName>智能车机</CategoryName>\\n    <CategoryKey>SmartTox</CategoryKey>\\n</Data>\\n</ListThingTemplatesResponse>","errorExample":""}]',
      'title' => '获取物联网平台预定义的标准产品品类列表',
      'summary' => '调用该接口获取物联网平台预定义的标准产品品类列表。',
      'description' => '## 使用说明
物联网平台提供已定义了物模型的产品品类供您使用，例如路灯照明、车辆定位卡、水浸检测等。

您调用[CreateProduct](~~69123~~)接口创建产品时，可以传入参数CategoryKey指定品类，创建的产品将引用该品类的标准物模型。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetThingTemplate' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

><notice>目前，物联网平台仅支持实例维度的资源组管理。请求参数**ResourceGroupId**配置已无效，无需再传入。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm4l5tcwd****',
          ),
        ),
        2 => 
        array (
          'name' => 'CategoryKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的品类的标识符。
可以从调用[ListThingTemplates](~~150316~~)的返回数据中，查看各品类的CategoryKey。',
            'type' => 'string',
            'required' => false,
            'example' => 'Lighting',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ThingModelJSON' => 
              array (
                'description' => '调用成功时，返回的物模型功能定义，格式为：

```
{
  "properties":[],//属性列表
  "services":[],//服务列表
  "events":[]//事件列表
}
```

功能信息中包含的具体参数结构，请参见[物模型格式](~~73727~~)。',
                'type' => 'string',
                'example' => '{ "properties":[],"services":[], "events":[]}',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ThingModelJSON\\": \\"{ \\\\\\"properties\\\\\\":[],\\\\\\"services\\\\\\":[], \\\\\\"events\\\\\\":[]}\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetThingTemplateResponse>\\n<ThingModelJSON>{\\"services\\":[{\\"callType\\":\\"ASYNC\\",\\"custom\\":false,\\"description\\":\\"\\",\\"identifier\\":\\"TimeReset\\",\\"inputParams\\":[{\\"custom\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"TEXT\\",\\"length\\":255},\\"dataType\\":\\"TEXT\\",\\"direction\\":\\"PARAM_INPUT\\",\\"identifier\\":\\"TimeReset\\",\\"name\\":\\"TimeReset\\",\\"paraOrder\\":0}],\\"outputParams\\":[],\\"required\\":false,\\"serviceName\\":\\"设备校时服务\\"},{\\"callType\\":\\"ASYNC\\",\\"custom\\":false,\\"description\\":\\"\\",\\"identifier\\":\\"SetTimerTask\\",\\"inputParams\\":[],\\"outputParams\\":[{\\"custom\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"TEXT\\",\\"length\\":255},\\"dataType\\":\\"TEXT\\",\\"direction\\":\\"PARAM_OUTPUT\\",\\"identifier\\":\\"SetTimer\\",\\"name\\":\\"SetTimer\\",\\"paraOrder\\":0}],\\"required\\":false,\\"serviceName\\":\\"时间任务下发\\"}],\\"properties\\":[{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"打开\\",\\"value\\":1},{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"关闭\\",\\"value\\":0}],\\"dataType\\":\\"BOOL\\",\\"description\\":\\"\\",\\"identifier\\":\\"LightStatus\\",\\"name\\":\\"工作状态\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"INT\\",\\"max\\":\\"100\\",\\"min\\":\\"0\\",\\"precise\\":0,\\"step\\":\\"1\\",\\"unit\\":\\"%\\",\\"unitName\\":\\"百分比\\"},\\"dataType\\":\\"INT\\",\\"description\\":\\"调光等级采用百分比表示\\",\\"identifier\\":\\"LightAdjustLevel\\",\\"name\\":\\"调光等级\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"FLOAT\\",\\"max\\":\\"4\\",\\"min\\":\\"0\\",\\"precise\\":7,\\"step\\":\\"0.1\\",\\"unit\\":\\"V\\",\\"unitName\\":\\"伏特\\"},\\"dataType\\":\\"FLOAT\\",\\"description\\":\\"显示设备电压；电参数采用4个字节浮点型数据\\",\\"identifier\\":\\"LightVolt\\",\\"name\\":\\"工作电压\\",\\"required\\":true,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"FLOAT\\",\\"max\\":\\"9\\",\\"min\\":\\"0\\",\\"precise\\":7,\\"step\\":\\"0.1\\",\\"unit\\":\\"A\\",\\"unitName\\":\\"安培\\"},\\"dataType\\":\\"FLOAT\\",\\"description\\":\\"电参数采用4个字节浮点型数据\\",\\"identifier\\":\\"LightCurrent\\",\\"name\\":\\"工作电流\\",\\"required\\":true,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"FLOAT\\",\\"max\\":\\"1000\\",\\"min\\":\\"0\\",\\"precise\\":7,\\"step\\":\\"0.1\\",\\"unit\\":\\"W\\",\\"unitName\\":\\"瓦特\\"},\\"dataType\\":\\"FLOAT\\",\\"description\\":\\"电参数采用4个字节浮点型数据\\",\\"identifier\\":\\"ActivePower\\",\\"name\\":\\"有功功率值\\",\\"required\\":true,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"FLOAT\\",\\"max\\":\\"1\\",\\"min\\":\\"0.01\\",\\"precise\\":7,\\"step\\":\\"0.1\\",\\"unit\\":\\"pF\\",\\"unitName\\":\\"皮法\\"},\\"dataType\\":\\"FLOAT\\",\\"description\\":\\"电参数采用4个字节浮点型数据\\",\\"identifier\\":\\"PowerRatio\\",\\"name\\":\\"功率因数\\",\\"required\\":true,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"FLOAT\\",\\"max\\":\\"2147483647\\",\\"min\\":\\"0\\",\\"precise\\":7,\\"step\\":\\"0.1\\",\\"unit\\":\\"kW·h\\",\\"unitName\\":\\"千瓦·时\\"},\\"dataType\\":\\"FLOAT\\",\\"description\\":\\"耗电量；电参数采用4个字节浮点型数据\\",\\"identifier\\":\\"PowerConsumption\\",\\"name\\":\\"用电量\\",\\"required\\":true,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"FLOAT\\",\\"max\\":\\"400\\",\\"min\\":\\"0\\",\\"precise\\":7,\\"step\\":\\"0.1\\",\\"unit\\":\\"V\\",\\"unitName\\":\\"伏特\\"},\\"dataType\\":\\"FLOAT\\",\\"description\\":\\"电参数采用4个字节浮点型数据\\",\\"identifier\\":\\"DrainVoltage\\",\\"name\\":\\"漏电压\\",\\"required\\":true,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"INT\\",\\"max\\":\\"90\\",\\"min\\":\\"0\\",\\"precise\\":0,\\"step\\":\\"1\\",\\"unit\\":\\"°\\",\\"unitName\\":\\"度\\"},\\"dataType\\":\\"INT\\",\\"description\\":\\"路灯的倾斜角度；采用1个字节16进制数\\",\\"identifier\\":\\"TiltValue\\",\\"name\\":\\"倾斜角度值\\",\\"required\\":true,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"INT\\",\\"max\\":\\"1000\\",\\"min\\":\\"0\\",\\"precise\\":0,\\"step\\":\\"1\\",\\"unit\\":\\"W\\",\\"unitName\\":\\"瓦特\\"},\\"dataType\\":\\"INT\\",\\"description\\":\\"故障功率门限\\",\\"identifier\\":\\"ErrorPowerThreshold\\",\\"name\\":\\"故障功率门限\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"FLOAT\\",\\"max\\":\\"9\\",\\"min\\":\\"0.1\\",\\"precise\\":7,\\"step\\":\\"0.1\\",\\"unit\\":\\"A\\",\\"unitName\\":\\"安培\\"},\\"dataType\\":\\"FLOAT\\",\\"description\\":\\"\\",\\"identifier\\":\\"ErrorCurrentThreshold\\",\\"name\\":\\"故障电流门限\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"INT\\",\\"max\\":\\"90\\",\\"min\\":\\"0\\",\\"precise\\":0,\\"step\\":\\"1\\",\\"unit\\":\\"°\\",\\"unitName\\":\\"度\\"},\\"dataType\\":\\"INT\\",\\"description\\":\\"\\",\\"identifier\\":\\"TiltThreshold\\",\\"name\\":\\"倾斜阈值\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"INT\\",\\"max\\":\\"400\\",\\"min\\":\\"0\\",\\"precise\\":0,\\"step\\":\\"1\\",\\"unit\\":\\"V\\",\\"unitName\\":\\"伏特\\"},\\"dataType\\":\\"INT\\",\\"description\\":\\"\\",\\"identifier\\":\\"UnderVoltThreshold\\",\\"name\\":\\"欠压阈值\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"INT\\",\\"max\\":\\"9\\",\\"min\\":\\"0\\",\\"precise\\":0,\\"step\\":\\"1\\",\\"unit\\":\\"A\\",\\"unitName\\":\\"安培\\"},\\"dataType\\":\\"INT\\",\\"description\\":\\"\\",\\"identifier\\":\\"OverCurrentThreshold\\",\\"name\\":\\"过流阈值\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"INT\\",\\"max\\":\\"400\\",\\"min\\":\\"0\\",\\"precise\\":0,\\"step\\":\\"1\\",\\"unit\\":\\"V\\",\\"unitName\\":\\"伏特\\"},\\"dataType\\":\\"INT\\",\\"description\\":\\"\\",\\"identifier\\":\\"OverVoltThreshold\\",\\"name\\":\\"过压阈值\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"打开\\",\\"value\\":1},{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"关闭\\",\\"value\\":0}],\\"dataType\\":\\"BOOL\\",\\"description\\":\\"1：打开，0：关闭\\",\\"identifier\\":\\"LightErrorEnable\\",\\"name\\":\\"灯具故障使能\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"打开\\",\\"value\\":1},{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"关闭\\",\\"value\\":0}],\\"dataType\\":\\"BOOL\\",\\"description\\":\\"1：打开，0：关闭\\",\\"identifier\\":\\"OverCurrentEnable\\",\\"name\\":\\"过流告警使能\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"打开\\",\\"value\\":1},{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"关闭\\",\\"value\\":0}],\\"dataType\\":\\"BOOL\\",\\"description\\":\\"1：打开，0：关闭\\",\\"identifier\\":\\"OverVoltEnable\\",\\"name\\":\\"过压告警使能\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"打开\\",\\"value\\":1},{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"关闭\\",\\"value\\":0}],\\"dataType\\":\\"BOOL\\",\\"description\\":\\"1：打开，0：关闭\\",\\"identifier\\":\\"UnderVoltEnable\\",\\"name\\":\\"欠压告警使能\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"打开\\",\\"value\\":1},{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"关闭\\",\\"value\\":0}],\\"dataType\\":\\"BOOL\\",\\"description\\":\\"1：打开，0：关闭\\",\\"identifier\\":\\"LeakageEnable\\",\\"name\\":\\"漏电告警使能\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"打开\\",\\"value\\":1},{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"关闭\\",\\"value\\":0}],\\"dataType\\":\\"BOOL\\",\\"description\\":\\"1：打开，0：关闭\\",\\"identifier\\":\\"OverTiltEnable\\",\\"name\\":\\"倾斜告警使能\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"告警\\",\\"value\\":1},{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"正常\\",\\"value\\":0}],\\"dataType\\":\\"BOOL\\",\\"description\\":\\"1-告警；0-正常\\",\\"identifier\\":\\"LampError\\",\\"name\\":\\"灯具故障告警\\",\\"required\\":true,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"告警\\",\\"value\\":1},{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"正常\\",\\"value\\":0}],\\"dataType\\":\\"BOOL\\",\\"description\\":\\"1-告警；0-正常\\",\\"identifier\\":\\"OverCurrentError\\",\\"name\\":\\"过流告警\\",\\"required\\":true,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"告警\\",\\"value\\":1},{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"正常\\",\\"value\\":0}],\\"dataType\\":\\"BOOL\\",\\"description\\":\\"1-告警；0-正常\\",\\"identifier\\":\\"OverVoltError\\",\\"name\\":\\"过压告警\\",\\"required\\":true,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"告警\\",\\"value\\":1},{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"正常\\",\\"value\\":0}],\\"dataType\\":\\"BOOL\\",\\"description\\":\\"1-告警；0-正常\\",\\"identifier\\":\\"UnderVoltError\\",\\"name\\":\\"欠压告警\\",\\"required\\":true,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"告警\\",\\"value\\":1},{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"正常\\",\\"value\\":0}],\\"dataType\\":\\"BOOL\\",\\"description\\":\\"1-告警；0-正常\\",\\"identifier\\":\\"OverTiltError\\",\\"name\\":\\"倾斜告警\\",\\"required\\":true,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"告警\\",\\"value\\":1},{\\"dataType\\":\\"BOOL\\",\\"name\\":\\"正常\\",\\"value\\":0}],\\"dataType\\":\\"BOOL\\",\\"description\\":\\"1-告警；0-正常\\",\\"identifier\\":\\"LeakageError\\",\\"name\\":\\"漏电告警\\",\\"required\\":true,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecsList\\":[{\\"childDataType\\":\\"DOUBLE\\",\\"childName\\":\\"经度\\",\\"childSpecsDTO\\":{\\"dataType\\":\\"DOUBLE\\",\\"max\\":\\"180\\",\\"min\\":\\"-180\\",\\"precise\\":7,\\"step\\":\\"0.01\\",\\"unit\\":\\"°\\",\\"unitName\\":\\"度\\"},\\"dataSpecs\\":{\\"$ref\\":\\"$.properties[27].dataSpecsList[0].childSpecsDTO\\"},\\"dataSpecsObject\\":{\\"unit\\":\\"°\\",\\"min\\":\\"-180\\",\\"unitName\\":\\"度\\",\\"max\\":\\"180\\",\\"dataType\\":\\"double\\",\\"step\\":\\"0.01\\",\\"precise\\":7},\\"dataType\\":\\"STRUCT\\",\\"identifier\\":\\"longitude\\",\\"name\\":\\"地理位置\\"},{\\"childDataType\\":\\"DOUBLE\\",\\"childName\\":\\"纬度\\",\\"childSpecsDTO\\":{\\"dataType\\":\\"DOUBLE\\",\\"max\\":\\"180\\",\\"min\\":\\"-180\\",\\"precise\\":7,\\"step\\":\\"0.01\\",\\"unit\\":\\"°\\",\\"unitName\\":\\"度\\"},\\"dataSpecs\\":{\\"$ref\\":\\"$.properties[27].dataSpecsList[1].childSpecsDTO\\"},\\"dataSpecsObject\\":{\\"unit\\":\\"°\\",\\"min\\":\\"-180\\",\\"unitName\\":\\"度\\",\\"max\\":\\"180\\",\\"dataType\\":\\"double\\",\\"step\\":\\"0.01\\",\\"precise\\":7},\\"dataType\\":\\"STRUCT\\",\\"identifier\\":\\"latitude\\",\\"name\\":\\"地理位置\\"},{\\"childDataType\\":\\"DOUBLE\\",\\"childName\\":\\"高度\\",\\"childSpecsDTO\\":{\\"dataType\\":\\"DOUBLE\\",\\"max\\":\\"9999\\",\\"min\\":\\"0\\",\\"precise\\":7,\\"step\\":\\"0.01\\",\\"unit\\":\\"m\\",\\"unitName\\":\\"米\\"},\\"dataSpecs\\":{\\"$ref\\":\\"$.properties[27].dataSpecsList[2].childSpecsDTO\\"},\\"dataSpecsObject\\":{\\"unit\\":\\"m\\",\\"min\\":\\"0\\",\\"unitName\\":\\"米\\",\\"max\\":\\"9999\\",\\"dataType\\":\\"double\\",\\"step\\":\\"0.01\\",\\"precise\\":7},\\"dataType\\":\\"STRUCT\\",\\"identifier\\":\\"altitude\\",\\"name\\":\\"地理位置\\"},{\\"childDataType\\":\\"ENUM\\",\\"childEnumSpecsDTO\\":[{\\"dataType\\":\\"ENUM\\",\\"name\\":\\"WGS_84\\",\\"value\\":1},{\\"dataType\\":\\"ENUM\\",\\"name\\":\\"GCJ_02\\",\\"value\\":2}],\\"childName\\":\\"坐标系统\\",\\"dataSpecsArray\\":[{\\"dataType\\":\\"enum\\",\\"name\\":\\"WGS_84\\",\\"value\\":\\"1\\"},{\\"dataType\\":\\"enum\\",\\"name\\":\\"GCJ_02\\",\\"value\\":\\"2\\"}],\\"dataSpecsList\\":[{\\"dataType\\":\\"ENUM\\",\\"name\\":\\"WGS_84\\",\\"value\\":1},{\\"dataType\\":\\"ENUM\\",\\"name\\":\\"GCJ_02\\",\\"value\\":2}],\\"dataType\\":\\"STRUCT\\",\\"identifier\\":\\"CoordinateSystem\\",\\"name\\":\\"地理位置\\"}],\\"dataType\\":\\"STRUCT\\",\\"description\\":\\"\\",\\"identifier\\":\\"GeoLocation\\",\\"name\\":\\"地理位置\\",\\"required\\":true,\\"rwFlag\\":\\"READ_WRITE\\",\\"std\\":true},{\\"custom\\":false,\\"customFlag\\":false,\\"dataSpecs\\":{\\"dataType\\":\\"INT\\",\\"max\\":\\"65535\\",\\"min\\":\\"0\\",\\"precise\\":0,\\"step\\":\\"1\\",\\"unit\\":\\"LUX\\",\\"unitName\\":\\"照度\\"},\\"dataType\\":\\"INT\\",\\"description\\":\\"\\",\\"identifier\\":\\"LightLux\\",\\"name\\":\\"光照值\\",\\"required\\":false,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":true}],\\"events\\":[]}</ThingModelJSON>\\n<RequestId>B79DEAAF-74F3-4AFF-95C3-FC8CDB8B831A</RequestId>\\n<Success>true</Success>\\n</GetThingTemplateResponse>","errorExample":""}]',
      'title' => '查询指定品类的物模型信息',
      'summary' => '调用该接口查询指定品类的物模型信息。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
 > 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListThingModelVersion' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的ProductKey。
可以在物联网平台控制台产品页查看，或调用[QueryProductList](~~69271~~)查看ProductKey的取值。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'ModelVersions' => 
                  array (
                    'description' => '物模型版本列表。按照物模型发布时间倒序排列。第一个为当前使用的版本。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GmtCreate' => 
                        array (
                          'description' => '该版本物模型发布时的时间戳，格式为GMT毫秒值。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1579235657535',
                        ),
                        'Description' => 
                        array (
                          'description' => '物模型版本的描述。',
                          'type' => 'string',
                          'example' => '增加一个light属性',
                        ),
                        'ModelVersion' => 
                        array (
                          'description' => '物模型版本号。',
                          'type' => 'string',
                          'example' => 'V1.0.0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ModelVersions\\": [\\n      {\\n        \\"GmtCreate\\": 1579235657535,\\n        \\"Description\\": \\"增加一个light属性\\",\\n        \\"ModelVersion\\": \\"V1.0.0\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListThingModelVersionResponse>\\n<Data>\\n    <ModelVersions>\\n        <ModelVersion>V3.0.0</ModelVersion>\\n        <GmtCreate>1579235682421</GmtCreate>\\n        <Description>new properties</Description>\\n    </ModelVersions>\\n    <ModelVersions>\\n        <ModelVersion>V2.0.0</ModelVersion>\\n        <GmtCreate>1579235657535</GmtCreate>\\n        <Description>new properties</Description>\\n    </ModelVersions>\\n    <ModelVersions>\\n        <ModelVersion>V1.0.0</ModelVersion>\\n        <GmtCreate>1579235637994</GmtCreate>\\n        <Description>Lighting</Description>\\n    </ModelVersions>\\n</Data>\\n<RequestId>9BA34AE5-2D94-4BDE-BD78-E7D3FC7985BC</RequestId>\\n<Success>true</Success>\\n</ListThingModelVersionResponse>","errorExample":""}]',
      'title' => '获取指定产品的物模型版本列表',
      'summary' => '调用该接口获取指定产品的物模型版本列表。',
      'description' => '## 使用说明
物模型已实现版本化管理，您导入物模型（[ImportThingModelTsl](~~150320~~)）、复制其他产品物模型（[CopyThingModel](~~150322~~)）或编辑更新物模型后，需调用[PublishThingModel](~~150311~~)将物模型发布后才能被使用。一个产品的物模型每发布一次，生成一个版本。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetThingModelTsl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的ProductKey。
可以在物联网平台控制台产品页查看，或调用[QueryProductList](~~69271~~)查看ProductKey的取值。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'ModelVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的物模型版本号。

不传入此参数，则将返回未发布上线的草稿版物模型TSL。',
            'type' => 'string',
            'required' => false,
            'example' => 'v1.0.0',
          ),
        ),
        3 => 
        array (
          'name' => 'Simple',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否获取精简版物模型信息。

- **true**：获取精简版物模型TSL。

    精简版物模型TSL中仅包含属性、服务、事件及入参和出参的标识符（**identifier**）和数据类型（**dataType**），可供设备端开发人员参考。

- **false**：获取完整的物模型TSL。

    完整物模型TSL中包含属性、服务和事件定义的所有参数和取值，可供云端应用开发人员参考。

不传入此参数，则默认为false，获取完整的物模型信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'FunctionBlockId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型自定义模块标识符，在产品中具有唯一性。

不传入此参数时，查询默认模块数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'BatteryModule',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的物模型信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'TslUri' => 
                  array (
                    'description' => '物模型数据在对象存储（OSS）上的存储地址URI。返回的URI有效期为60分钟。',
                    'type' => 'string',
                    'example' => 'https://iotx-pop-dsl.oss-cn-shanghai.aliyuncs.com/thing/a14TeWI****/model.json?Expires=1581947119&OSSAccessKeyId=LTAIuFOwFSR9****&Signature=5i389hacjdj3t%2FnrHmQpEUfnxw****',
                  ),
                  'TslStr' => 
                  array (
                    'description' => '物模型的TSL字符串。',
                    'type' => 'string',
                    'example' => '{\\"schema\\":\\"https://iotx-tsl.oss-ap-southeast-1.aliyuncs.com/schema.json\\",\\"profile\\":{\\"productKey\\":\\"a14TeWI****\\"},\\"properties\\":[{\\"identifier\\":\\"Humidity\\"}]}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TslUri\\": \\"https://iotx-pop-dsl.oss-cn-shanghai.aliyuncs.com/thing/a14TeWI****/model.json?Expires=1581947119&OSSAccessKeyId=LTAIuFOwFSR9****&Signature=5i389hacjdj3t%2FnrHmQpEUfnxw****\\",\\n    \\"TslStr\\": \\"{\\\\\\\\\\\\\\"schema\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"https://iotx-tsl.oss-ap-southeast-1.aliyuncs.com/schema.json\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"productKey\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"a14TeWI****\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"identifier\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Humidity\\\\\\\\\\\\\\"}]}\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetThingModelTslResponse>\\n<Data>\\n    <TslUri>https://iotx-pop-dsl.oss-cn-shanghai.aliyuncs.com/thing/a14TeWI****/model.json?Expires=1581947119&amp;OSSAccessKeyId=LTAIuFOwFSR9****&amp;Signature=5i389hacjdj3t%2FnrHmQpEUfnx****</TslUri>\\n    <TslStr>{\\"schema\\":\\"https://iotx-tsl.oss-ap-southeast-1.aliyuncs.com/schema.json\\",\\"profile\\":{\\"productKey\\":\\"a14T***\\"},\\"properties\\":[{\\"identifier\\":\\"Humidity\\",\\"name\\":\\"湿度\\",\\"accessMode\\":\\"rw\\",\\"required\\":false,\\"dataType\\":{\\"type\\":\\"int\\",\\"specs\\":{\\"min\\":\\"55\\",\\"max\\":\\"60\\",\\"unit\\":\\"%\\",\\"step\\":\\"1\\"}}},{\\"identifier\\":\\"Temperature\\",\\"name\\":\\"温度\\",\\"accessMode\\":\\"rw\\",\\"required\\":false,\\"dataType\\":{\\"type\\":\\"float\\",\\"specs\\":{\\"min\\":\\"26\\",\\"max\\":\\"28\\",\\"unit\\":\\"°C\\",\\"step\\":\\"0.01\\"}}}],\\"events\\":[{\\"identifier\\":\\"post\\",\\"name\\":\\"post\\",\\"type\\":\\"info\\",\\"required\\":true,\\"desc\\":\\"属性上报\\",\\"method\\":\\"thing.event.property.post\\",\\"outputData\\":[{\\"identifier\\":\\"Humidity\\",\\"name\\":\\"湿度\\",\\"dataType\\":{\\"type\\":\\"int\\",\\"specs\\":{\\"min\\":\\"55\\",\\"max\\":\\"60\\",\\"unit\\":\\"%\\",\\"step\\":\\"1\\"}}},{\\"identifier\\":\\"Temperature\\",\\"name\\":\\"温度\\",\\"dataType\\":{\\"type\\":\\"float\\",\\"specs\\":{\\"min\\":\\"26\\",\\"max\\":\\"28\\",\\"unit\\":\\"°C\\",\\"step\\":\\"0.01\\"}}}]}],\\"services\\":[{\\"identifier\\":\\"set\\",\\"name\\":\\"set\\",\\"required\\":true,\\"callType\\":\\"async\\",\\"desc\\":\\"属性设置\\",\\"method\\":\\"thing.service.property.set\\",\\"inputData\\":[{\\"identifier\\":\\"Humidity\\",\\"name\\":\\"湿度\\",\\"dataType\\":{\\"type\\":\\"int\\",\\"specs\\":{\\"min\\":\\"55\\",\\"max\\":\\"60\\",\\"unit\\":\\"%\\",\\"step\\":\\"1\\"}}},{\\"identifier\\":\\"Temperature\\",\\"name\\":\\"温度\\",\\"dataType\\":{\\"type\\":\\"float\\",\\"specs\\":{\\"min\\":\\"26\\",\\"max\\":\\"28\\",\\"unit\\":\\"°C\\",\\"step\\":\\"0.01\\"}}}],\\"outputData\\":[]},{\\"identifier\\":\\"get\\",\\"name\\":\\"get\\",\\"required\\":true,\\"callType\\":\\"async\\",\\"desc\\":\\"属性获取\\",\\"method\\":\\"thing.service.property.get\\",\\"inputData\\":[\\"Humidity\\",\\"Temperature\\"],\\"outputData\\":[{\\"identifier\\":\\"Humidity\\",\\"name\\":\\"湿度\\",\\"dataType\\":{\\"type\\":\\"int\\",\\"specs\\":{\\"min\\":\\"55\\",\\"max\\":\\"60\\",\\"unit\\":\\"%\\",\\"step\\":\\"1\\"}}},{\\"identifier\\":\\"Temperature\\",\\"name\\":\\"温度\\",\\"dataType\\":{\\"type\\":\\"float\\",\\"specs\\":{\\"min\\":\\"26\\",\\"max\\":\\"28\\",\\"unit\\":\\"°C\\",\\"step\\":\\"0.01\\"}}}]}]}</TslStr>\\n</Data>\\n<RequestId>C4371E68-F6DB-4D7B-8AD0-D38336E1DF94</RequestId>\\n<Success>true</Success>\\n</GetThingModelTslResponse>","errorExample":""}]',
      'title' => '查询指定产品的物模型TSL',
      'summary' => '调用该接口查询指定产品的物模型TSL。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ImportThingModelTsl' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

><notice>目前，物联网平台仅支持实例维度的资源组管理。请求参数**ResourceGroupId**配置已无效，无需再传入。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm4l5tcwd****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的ProductKey。
可以在物联网平台控制台产品页查看，或调用[QueryProductList](~~69271~~)查看ProductKey的取值。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'TslStr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '您编辑的物模型（TSL）。JSON格式的字符串。产品的物模型（TSL）包含属性、服务和事件的定义。
**TslStr**格式需为标准的物模型数据格式，请参见[物模型格式](~~73727~~)。

> 目前该参数为必填参数，只能通过**TslStr**导入物模型。',
            'type' => 'string',
            'required' => false,
            'example' => '{"schema":"https://iotx-tsl.oss-ap-southeast-1.aliyuncs.com/schema.json","profile":{"productKey":"a14TeW****"},"properties":[]}',
          ),
        ),
        4 => 
        array (
          'name' => 'TslUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型数据在对象存储（OSS）上的存储地址URI。

> 目前该参数暂时无效，请传入**TslStr**导入物模型。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://iotx-pop-dsl.oss-cn-shanghai.aliyuncs.com/thing/a14TeWI****/model.json?Expires=1581947119...',
          ),
        ),
        5 => 
        array (
          'name' => 'FunctionBlockId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型自定义模块标识符，在产品中具有唯一性。支持英文大小写字母、数字和下划线（_），不超过30个字符。

需与**FunctionBlockName**结合使用。不传入此参数时，导入默认模块。',
            'type' => 'string',
            'required' => false,
            'example' => 'BatteryModule',
          ),
        ),
        6 => 
        array (
          'name' => 'FunctionBlockName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型的自定义模块名称。支持中文、英文字母、日文、数字和下划线（_），长度限制为4～30个字符，一个中文、一个日文算1个字符。

需与**FunctionBlockId**结合使用。不传入此参数时，导入默认模块。',
            'type' => 'string',
            'required' => false,
            'example' => '电池模块',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ImportThingModelTslResponse>\\n<RequestId>9E76053E-26ED-4AB4-AE58-8AFC3F1E7E8E</RequestId>\\n<Success>true</Success>\\n</ImportThingModelTslResponse>","errorExample":""}]',
      'title' => '为指定产品导入物模型',
      'summary' => '调用该接口为指定产品导入物模型。',
      'description' => '
## 使用说明
如果指定产品已发布，需先调用接口[CancelReleaseProduct](~~213875~~)取消该产品发布，才能调用本接口导入物模型。
 
## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。



',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryThingModelPublished' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

> 目前不传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm4l5tcwd***',
          ),
        ),
        3 => 
        array (
          'name' => 'ModelVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型版本号。

可调用[ListThingModelVersion](~~150318~~)查看产品下的物模型版本号。

为空时返回已发布的最新版本。
',
            'type' => 'string',
            'required' => false,
            'example' => 'v1.0.0',
          ),
        ),
        4 => 
        array (
          'name' => 'FunctionBlockId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型自定义模块标识符，在产品中具有唯一性。

不传入此参数时，查询默认模块数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'BatteryModule',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ProductKey' => 
              array (
                'description' => '产品的ProductKey。',
                'type' => 'string',
                'example' => 'a1BwAGV****',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'ThingModelJson' => 
                  array (
                    'description' => '物模型的功能定义。ThingModelJson取值的数据格式说明，请参见[ThingModelJson数据说明](~~150457~~)。',
                    'type' => 'string',
                    'example' => '{\\"_ppk\\":{\\"version\\":\\"1594253010934\\"},\\"events\\":[],\\"productKey\\":\\"a1BwAGV****\\",\\"properties\\":[{\\"configCode\\":\\"8C03F0EEC63D4897BF2637F89AE36B011594227294067\\",\\"custom\\":true,\\"customFlag\\":true,\\"dataSpecs\\":{\\"custom\\":true,\\"dataType\\":\\"INT\\",\\"max\\":\\"1\\",\\"min\\":\\"0\\",\\"step\\":\\"1\\",\\"unit\\":\\"ppb\\"},\\"dataType\\":\\"INT\\",\\"description\\":\\"1\\",\\"extendConfig\\":\\"{\\\\\\"originalDataType\\\\\\":{\\\\\\"specs\\\\\\":{\\\\\\"registerCount\\\\\\":1,\\\\\\"reverseRegister\\\\\\":0,\\\\\\"swap16\\\\\\":0},\\\\\\"type\\\\\\":\\\\\\"bool\\\\\\"},\\\\\\"identifier\\\\\\":\\\\\\"WakeUpData\\\\\\",\\\\\\"registerAddress\\\\\\":\\\\\\"0x04\\\\\\",\\\\\\"scaling\\\\\\":1,\\\\\\"writeFunctionCode\\\\\\":0,\\\\\\"operateType\\\\\\":\\\\\\"inputStatus\\\\\\",\\\\\\"pollingTime\\\\\\":1000,\\\\\\"trigger\\\\\\":1}\\",\\"identifier\\":\\"WakeUpData\\",\\"name\\":\\"唤醒数据\\",\\"productKey\\":\\"a114xeJGj2p\\",\\"required\\":false,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":false}],\\"services\\":[]}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ProductKey\\": \\"a1BwAGV****\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ThingModelJson\\": \\"{\\\\\\\\\\\\\\"_ppk\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"version\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1594253010934\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"events\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"productKey\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"a1BwAGV****\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"configCode\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"8C03F0EEC63D4897BF2637F89AE36B011594227294067\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"custom\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"customFlag\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"dataSpecs\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"custom\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"dataType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"INT\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"max\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"min\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"step\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"unit\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"ppb\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"dataType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"INT\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"extendConfig\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"originalDataType\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"specs\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"registerCount\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"reverseRegister\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"swap16\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":0},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"bool\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"identifier\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"WakeUpData\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"registerAddress\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"0x04\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"scaling\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"writeFunctionCode\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"operateType\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"inputStatus\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"pollingTime\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":1000,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"trigger\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":1}\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"identifier\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"WakeUpData\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"唤醒数据\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"productKey\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"a114xeJGj2p\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\":false,\\\\\\\\\\\\\\"rwFlag\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"READ_ONLY\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"std\\\\\\\\\\\\\\":false}],\\\\\\\\\\\\\\"services\\\\\\\\\\\\\\":[]}\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryThingModelPublishedResponse>\\n  <RequestId>1F9041A2-ED5B-4A5A-9C44-598E28C0B434</RequestId>\\n  <Data>\\n    <ThingModelJson>{\\"_ppk\\":{\\"version\\":\\"1594253010934\\"},\\"events\\":[],\\"productKey\\":\\"a1BwAGV****\\",\\"properties\\":[{\\"configCode\\":\\"8C03F0EEC63D4897BF2637F89AE36B011594227294067\\",\\"custom\\":true,\\"customFlag\\":true,\\"dataSpecs\\":{\\"custom\\":true,\\"dataType\\":\\"INT\\",\\"max\\":\\"1\\",\\"min\\":\\"0\\",\\"step\\":\\"1\\",\\"unit\\":\\"ppb\\"},\\"dataType\\":\\"INT\\",\\"description\\":\\"1\\",\\"extendConfig\\":\\"{\\\\\\"originalDataType\\\\\\":{\\\\\\"specs\\\\\\":{\\\\\\"registerCount\\\\\\":1,\\\\\\"reverseRegister\\\\\\":0,\\\\\\"swap16\\\\\\":0},\\\\\\"type\\\\\\":\\\\\\"bool\\\\\\"},\\\\\\"identifier\\\\\\":\\\\\\"WakeUpData\\\\\\",\\\\\\"registerAddress\\\\\\":\\\\\\"0x04\\\\\\",\\\\\\"scaling\\\\\\":1,\\\\\\"writeFunctionCode\\\\\\":0,\\\\\\"operateType\\\\\\":\\\\\\"inputStatus\\\\\\",\\\\\\"pollingTime\\\\\\":1000,\\\\\\"trigger\\\\\\":1}\\",\\"identifier\\":\\"WakeUpData\\",\\"name\\":\\"唤醒数据\\",\\"productKey\\":\\"a114xeJ****\\",\\"required\\":false,\\"rwFlag\\":\\"READ_ONLY\\",\\"std\\":false}],\\"services\\":[]}</ThingModelJson>\\n  </Data>\\n  <Success>true</Success>\\n</QueryThingModelPublishedResponse>","errorExample":""}]',
      'title' => 'QueryThingModelPublished',
      'summary' => '调用该接口查看指定产品的已发布物模型中的功能定义详情。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetThingModelTslPublished' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

><notice>目前，物联网平台仅支持实例维度的资源组管理。请求参数**ResourceGroupId**配置已无效，无需再传入。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm4l5tcwd****',
          ),
        ),
        3 => 
        array (
          'name' => 'Simple',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否获取精简版物模型信息。

- **true**：获取精简版物模型TSL。精简版物模型TSL中仅包含属性、服务、事件及入参、出参的标识符（**identifier**）、数据类型（**dataType**），可供设备端开发人员参考。

- **false**（默认）：获取完整的物模型TSL。完整物模型TSL中包含属性、服务和事件定义的所有参数和取值，可供云端应用开发人员参考。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'ModelVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型版本号。

可调用[ListThingModelVersion](~~150318~~)查看产品下的物模型版本号。

为空时返回已发布的最新版本。
',
            'type' => 'string',
            'required' => false,
            'example' => 'v1.0.0',
          ),
        ),
        5 => 
        array (
          'name' => 'FunctionBlockId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型自定义模块标识符，在产品中具有唯一性。

不传入此参数时，查询默认模块数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'BatteryModule',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'TslUri' => 
                  array (
                    'description' => '物模型数据在对象存储（OSS）上的存储地址URI。返回的URI有效期为60分钟。',
                    'type' => 'string',
                    'example' => 'https://iotx-pop-dsl.oss-cn-shanghai.aliyuncs.com/thing/a14TeWI****/model.json?Expires=1581947119&OSSAccessKeyId=LTAIuFOwFSR9****&Signature=5i389hacjdj3t%2FnrHmQpEUfnxw****',
                  ),
                  'TslStr' => 
                  array (
                    'description' => '物模型的TSL字符串。',
                    'type' => 'string',
                    'example' => '{\\"schema\\":\\"https://iotx-tsl.oss-ap-southeast-1.aliyuncs.com/schema.json\\",\\"profile\\":{\\"productKey\\":\\"a14TeWI****\\"},\\"properties\\":[{\\"identifier\\":\\"Humidity\\"}]}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"TslUri\\": \\"https://iotx-pop-dsl.oss-cn-shanghai.aliyuncs.com/thing/a14TeWI****/model.json?Expires=1581947119&OSSAccessKeyId=LTAIuFOwFSR9****&Signature=5i389hacjdj3t%2FnrHmQpEUfnxw****\\",\\n    \\"TslStr\\": \\"{\\\\\\\\\\\\\\"schema\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"https://iotx-tsl.oss-ap-southeast-1.aliyuncs.com/schema.json\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"productKey\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"a14TeWI****\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"identifier\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Humidity\\\\\\\\\\\\\\"}]}\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetThingModelTslPublishedResponse>\\r\\n  <Data>\\r\\n        <TslUri>https://iotx-pop-dsl.oss-cn-shanghai.aliyuncs.com/thing/a14TeWI****/model.json?Expires=1581947119&amp;OSSAccessKeyId=LTAIuFOwFSR9****&amp;Signature=5i389hacjdj3t%2FnrHmQpEUfnx****</TslUri>\\r\\n        <TslStr>{\\"schema\\":\\"https://iotx-tsl.oss-ap-southeast-1.aliyuncs.com/schema.json\\",\\"profile\\":{\\"productKey\\":\\"a14TeWI****\\"},\\"properties\\":[{\\"identifier\\":\\"Humidity\\",\\"name\\":\\"湿度\\",\\"accessMode\\":\\"rw\\",\\"required\\":false,\\"dataType\\":{\\"type\\":\\"int\\",\\"specs\\":{\\"min\\":\\"55\\",\\"max\\":\\"60\\",\\"unit\\":\\"%\\",\\"step\\":\\"1\\"}}},{\\"identifier\\":\\"Temperature\\",\\"name\\":\\"温度\\",\\"accessMode\\":\\"rw\\",\\"required\\":false,\\"dataType\\":{\\"type\\":\\"float\\",\\"specs\\":{\\"min\\":\\"26\\",\\"max\\":\\"28\\",\\"unit\\":\\"°C\\",\\"step\\":\\"0.01\\"}}}],\\"events\\":[{\\"identifier\\":\\"post\\",\\"name\\":\\"post\\",\\"type\\":\\"info\\",\\"required\\":true,\\"desc\\":\\"属性上报\\",\\"method\\":\\"thing.event.property.post\\",\\"outputData\\":[{\\"identifier\\":\\"Humidity\\",\\"name\\":\\"湿度\\",\\"dataType\\":{\\"type\\":\\"int\\",\\"specs\\":{\\"min\\":\\"55\\",\\"max\\":\\"60\\",\\"unit\\":\\"%\\",\\"step\\":\\"1\\"}}},{\\"identifier\\":\\"Temperature\\",\\"name\\":\\"温度\\",\\"dataType\\":{\\"type\\":\\"float\\",\\"specs\\":{\\"min\\":\\"26\\",\\"max\\":\\"28\\",\\"unit\\":\\"°C\\",\\"step\\":\\"0.01\\"}}}]}],\\"services\\":[{\\"identifier\\":\\"set\\",\\"name\\":\\"set\\",\\"required\\":true,\\"callType\\":\\"async\\",\\"desc\\":\\"属性设置\\",\\"method\\":\\"thing.service.property.set\\",\\"inputData\\":[{\\"identifier\\":\\"Humidity\\",\\"name\\":\\"湿度\\",\\"dataType\\":{\\"type\\":\\"int\\",\\"specs\\":{\\"min\\":\\"55\\",\\"max\\":\\"60\\",\\"unit\\":\\"%\\",\\"step\\":\\"1\\"}}},{\\"identifier\\":\\"Temperature\\",\\"name\\":\\"温度\\",\\"dataType\\":{\\"type\\":\\"float\\",\\"specs\\":{\\"min\\":\\"26\\",\\"max\\":\\"28\\",\\"unit\\":\\"°C\\",\\"step\\":\\"0.01\\"}}}],\\"outputData\\":[]},{\\"identifier\\":\\"get\\",\\"name\\":\\"get\\",\\"required\\":true,\\"callType\\":\\"async\\",\\"desc\\":\\"属性获取\\",\\"method\\":\\"thing.service.property.get\\",\\"inputData\\":[\\"Humidity\\",\\"Temperature\\"],\\"outputData\\":[{\\"identifier\\":\\"Humidity\\",\\"name\\":\\"湿度\\",\\"dataType\\":{\\"type\\":\\"int\\",\\"specs\\":{\\"min\\":\\"55\\",\\"max\\":\\"60\\",\\"unit\\":\\"%\\",\\"step\\":\\"1\\"}}},{\\"identifier\\":\\"Temperature\\",\\"name\\":\\"温度\\",\\"dataType\\":{\\"type\\":\\"float\\",\\"specs\\":{\\"min\\":\\"26\\",\\"max\\":\\"28\\",\\"unit\\":\\"°C\\",\\"step\\":\\"0.01\\"}}}]}]}</TslStr>\\r\\n  </Data>\\r\\n  <RequestId>C4371E68-F6DB-4D7B-8AD0-D38336E1DF94</RequestId>\\r\\n  <Success>true</Success>\\r\\n</GetThingModelTslPublishedResponse>","errorExample":""}]',
      'title' => '查询指定产品的已发布物模型TSL',
      'summary' => '调用该接口查询指定产品的已发布物模型TSL。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。

   > 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。

',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryThingModelExtendConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1T27vz****',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

><notice>目前，物联网平台仅支持实例维度的资源组管理。请求参数**ResourceGroupId**配置已无效，无需再传入。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '123***',
          ),
        ),
        3 => 
        array (
          'name' => 'ModelVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型版本号。

可调用[ListThingModelVersion](~~150318~~)查看产品下的物模型版本号。

为空时返回已发布的最新版本。',
            'type' => 'string',
            'required' => false,
            'example' => 'v1.0.0',
          ),
        ),
        4 => 
        array (
          'name' => 'FunctionBlockId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型自定义模块标识符，在产品中具有唯一性。

不传入此参数时，导出默认模块数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'BatteryModule',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Configuration' => 
                  array (
                    'description' => '物模型扩展描述配置。参数含义请参见[CreateThingModel](~~150323~~)的extendConfig说明。',
                    'type' => 'string',
                    'example' => '{\\"profile\\":{\\"productKey\\":\\"a114x******\\"},\\"properties\\":[{\\"originalDataType\\":{\\"specs\\":{\\"registerCount\\":1,\\"reverseRegister\\":0,\\"swap16\\":0},\\"type\\":\\"bool\\"},\\"identifier\\":\\"WakeUpData\\",\\"registerAddress\\":\\"0x04\\",\\"scaling\\":1,\\"writeFunctionCode\\":0,\\"operateType\\":\\"inputStatus\\",\\"pollingTime\\":1000,\\"trigger\\":1}]}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Configuration\\": \\"{\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"productKey\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"a114x******\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"originalDataType\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"specs\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"registerCount\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\"reverseRegister\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"swap16\\\\\\\\\\\\\\":0},\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"bool\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"identifier\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"WakeUpData\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"registerAddress\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"0x04\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"scaling\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\"writeFunctionCode\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"operateType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"inputStatus\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"pollingTime\\\\\\\\\\\\\\":1000,\\\\\\\\\\\\\\"trigger\\\\\\\\\\\\\\":1}]}\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryThingModelExtendConfigResponse>\\n  <Data>\\n    <Configuration>{\\"profile\\":{\\"productKey\\":\\"a114x******\\"},\\"properties\\":[{\\"originalDataType\\":{\\"specs\\":{\\"registerCount\\":1,\\"reverseRegister\\":0,\\"swap16\\":0},\\"type\\":\\"bool\\"},\\"identifier\\":\\"WakeUpData\\",\\"registerAddress\\":\\"0x04\\",\\"scaling\\":1,\\"writeFunctionCode\\":0,\\"operateType\\":\\"inputStatus\\",\\"pollingTime\\":1000,\\"trigger\\":1}]}</Configuration>\\n  </Data>\\n  <RequestId>6DDF9D04-24C3-40D8-B490-2A528E59EA67</RequestId>\\n  <Success>true</Success>\\n</QueryThingModelExtendConfigResponse>","errorExample":""}]',
      'title' => '导出指定产品物模型扩展描述配置',
      'summary' => '查询物模型扩展描述配置。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。

   > 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryThingModelExtendConfigPublished' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的**ProductKey**。

可以在物联网平台控制台产品页查看，或调用[QueryProductList](~~69271~~)查看ProductKey的取值。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'ModelVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要获取的物模型版本号。不传入此参数，则返回已发布的最新版本。',
            'type' => 'string',
            'required' => false,
            'example' => 'v1.0.0',
          ),
        ),
        3 => 
        array (
          'name' => 'FunctionBlockId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型自定义模块标识符，在产品中具有唯一性。

不传入此参数时，导出默认模块数据。

',
            'type' => 'string',
            'required' => false,
            'example' => 'BatteryModule',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Configuration' => 
                  array (
                    'description' => '物模型扩展描述配置。参数含义请参见[CreateThingModel](~~150323~~)的extendConfig说明。

更多信息，请参见[ThingModelJson数据说明](~~150457~~)。',
                    'type' => 'string',
                    'example' => '{\\"profile\\":{\\"productKey\\":\\"a114x******\\"},\\"properties\\":[{\\"originalDataType\\":{\\"specs\\":{\\"registerCount\\":1,\\"reverseRegister\\":0,\\"swap16\\":0},\\"type\\":\\"bool\\"},\\"identifier\\":\\"WakeUpData\\",\\"registerAddress\\":\\"0x04\\",\\"scaling\\":1,\\"writeFunctionCode\\":0,\\"operateType\\":\\"inputStatus\\",\\"pollingTime\\":1000,\\"trigger\\":1}]}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Configuration\\": \\"{\\\\\\\\\\\\\\"profile\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"productKey\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"a114x******\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"originalDataType\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"specs\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"registerCount\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\"reverseRegister\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"swap16\\\\\\\\\\\\\\":0},\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"bool\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"identifier\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"WakeUpData\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"registerAddress\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"0x04\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"scaling\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\"writeFunctionCode\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"operateType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"inputStatus\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"pollingTime\\\\\\\\\\\\\\":1000,\\\\\\\\\\\\\\"trigger\\\\\\\\\\\\\\":1}]}\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryThingModelExtendConfigPublishedResponse>\\n<Data>\\n    <Configuration>{\\"profile\\":{\\"productKey\\":\\"a114x******\\"},\\"properties\\":[{\\"originalDataType\\":{\\"specs\\":{\\"registerCount\\":1,\\"reverseRegister\\":0,\\"swap16\\":0},\\"type\\":\\"bool\\"},\\"identifier\\":\\"WakeUpData\\",\\"registerAddress\\":\\"0x04\\",\\"scaling\\":1,\\"writeFunctionCode\\":0,\\"operateType\\":\\"inputStatus\\",\\"pollingTime\\":1000,\\"trigger\\":1}]}</Configuration>\\n</Data>\\n<RequestId>6DDF9D04-24C3-40D8-B490-2A528E59EA67</RequestId>\\n<Success>true</Success>\\n</QueryThingModelExtendConfigPublishedResponse>","errorExample":""}]',
      'title' => '获取已发布物模型的扩展描述配置',
      'summary' => '调用该接口获取已发布物模型的扩展描述配置。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。

   > RAM用户共享阿里云账号配额。

',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateThingScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ScriptContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '脚本内容。不允许为空。

脚本示例的更多信息，请参见[什么是数据解析](~~68702~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '"function protocolToRawData(jsonObj) {return rawdata; }function rawDataToProtocol(rawData) {return jsonObj; }"',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品**ProductKey**。

可以在物联网平台控制台产品页查看，或调用[QueryProductList](~~69271~~)查看**ProductKey**的取值。
',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Q5XoY****',
          ),
        ),
        3 => 
        array (
          'name' => 'ScriptType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '脚本类型。取值：

- JavaScript
- Python_27：表示Python 2.7
- PHP_72：表示PHP 7.2',
            'type' => 'string',
            'required' => true,
            'example' => 'JavaScript',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BB71E443-4447-4024-A000-EDE09922891E',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"BB71E443-4447-4024-A000-EDE09922891E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateThingScriptResponse>\\r\\n  <RequestId>BB71E443-4447-4024-A000-EDE09922891E</RequestId>\\r\\n  <Success>true</Success>\\r\\n</CreateThingScriptResponse>","errorExample":""}]',
      'title' => 'CreateThingScript',
      'summary' => '调用该接口为指定产品提交数据解析脚本。',
      'description' => '## 使用说明
数据解析脚本用于将设备上报的自定义格式数据转换为JSON结构体。脚本类型支持JavaScript、Python 2.7、PHP 7.2，更多信息，请参见[提交数据解析脚本](~~149963~~)。
><notice>若设备数据格式为**ICA标准数据格式（Alink JSON）**，不支持使用接口CreateThingScript。
></notice>

## QPS限制
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。


',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateThingScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ScriptContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '脚本内容。不允许为空。

脚本示例的更多信息，请参见[什么是数据解析](~~68702~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '"function protocolToRawData(jsonObj) {return rawdata; }function rawDataToProtocol(rawData) {return jsonObj; }"',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品**ProductKey**。

可以在物联网平台控制台产品页查看，或调用[QueryProductList](~~69271~~)查看**ProductKey**的取值。
',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Q5XoY****',
          ),
        ),
        3 => 
        array (
          'name' => 'ScriptType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '脚本类型。取值：

- JavaScript
- Python_27：表示Python 2.7
- PHP_72：表示PHP 7.2',
            'type' => 'string',
            'required' => true,
            'example' => 'JavaScript',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BB71E443-4447-4024-A000-EDE09922891E',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"BB71E443-4447-4024-A000-EDE09922891E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateThingScriptResponse>\\r\\n  <RequestId>BB71E443-4447-4024-A000-EDE09922891E</RequestId>\\r\\n  <Success>true</Success>\\r\\n</UpdateThingScriptResponse>","errorExample":""}]',
      'title' => '修改指定产品的数据解析脚本',
      'summary' => '调用该接口修改指定产品的数据解析脚本。',
      'description' => '## 使用说明
数据解析脚本用于将设备上报的自定义格式数据转换为JSON结构体。脚本类型支持JavaScript、Python 2.7、PHP 7.2，更多信息，请参见[提交数据解析脚本](~~149963~~)。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。

',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetThingScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品**ProductKey**。

可以在物联网平台控制台产品页查看，或调用[QueryProductList](~~69271~~)查看**ProductKey**的取值。
',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Q5XoY****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BB71E443-4447-4024-A000-EDE09922891E',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'ScriptType' => 
                  array (
                    'description' => '脚本类型。返回值：

- JavaScript
- Python_27：表示Python 2.7
- PHP_72：表示PHP 7.2',
                    'type' => 'string',
                    'example' => 'JavaScript',
                  ),
                  'ScriptUrl' => 
                  array (
                    'description' => '脚本内容的URL下载地址。',
                    'type' => 'string',
                    'example' => 'http://***',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"BB71E443-4447-4024-A000-EDE09922891E\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ScriptType\\": \\"JavaScript\\",\\n    \\"ScriptUrl\\": \\"http://***\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetThingScriptResponse>\\n<Data>\\n    <ScriptType>JavaScript</ScriptType>\\n    <ScriptUrl>http://***</ScriptUrl>\\n</Data>\\n<RequestId>6DDF9D04-24C3-40D8-B490-2A528E59EA67</RequestId>\\n<Success>true</Success>\\n</GetThingScriptResponse>","errorExample":""}]',
      'title' => '查询指定产品的数据解析脚本',
      'summary' => '调用该接口查询指定产品的数据解析脚本。',
      'description' => '## 使用说明
数据解析脚本用于将设备上报的自定义格式数据转换为JSON结构体。脚本类型支持JavaScript、Python 2.7、PHP 7.2，更多信息，请参见[提交数据解析脚本](~~149963~~)。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。

',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetDeviceProperty' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64*****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属的产品**ProductKey**。
><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。
><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        4 => 
        array (
          'name' => 'Items',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要设置的属性信息，数据格式为JSON。

每个属性信息由标识符与属性值 (key:value) 构成，多个属性用英文逗号隔开。

例如，设置智能灯的如下两个属性：

- 标识符为**Switch**的开关属性，数据类型为**Bool**，设置值为**1**（开）。

- 标识符为**Color**的灯颜色属性，数据类型为**String**，设置值为**blue**。

那么要设置的属性信息，JSON格式如下：

`Items={"Switch":1,"Color":"blue"}`

> 如果设置自定义模块testFb（非默认模块）的属性，则格式为：`Items={"testFb:Switch":1,"testFb:Color":"blue"}`',
            'type' => 'string',
            'required' => true,
            'example' => '{"Switch":1,"Color":"blue"}',
          ),
        ),
        5 => 
        array (
          'name' => 'Qos',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定调用本接口时，消息的发送方式。取值：

- **0**（默认）：最多发送一次。
- **1**：最少发送一次。如果QoS=1消息未接收到PUBACK消息，会在设备重连时，重新推送给设备。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '1',
            'minimum' => '0',
            'example' => '1',
            'default' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'MessageId' => 
                  array (
                    'description' => '云端给设备下发属性设置的消息ID。',
                    'type' => 'string',
                    'example' => 'abcabc123',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"MessageId\\": \\"abcabc123\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<SetDevicePropertyResponse>\\n<RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\n<Success>true</Success>\\n<Data>\\n    <MessageId>abcabc123</MessageId>\\n</Data>\\n</SetDevicePropertyResponse>","errorExample":""}]',
      'title' => '为指定设备设置属性值',
      'summary' => '调用该接口为指定设备设置属性值。',
      'description' => '因为云端下发属性设置命令和设备收到并执行该命令是异步的，所以调用该接口时，返回的成功结果只表示云端下发属性设置的请求成功，不能保证设备端收到并执行了该请求。即需设备端SDK成功响应云端设置设备属性值的请求，设备属性值才能真正设置成功。

><notice>物模型功能定义数据类型为float或double时，对应参数值（即使值为整数）至少携带一位小数位。例如10.0、11.1。
></notice>

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

 > RAM用户共享阿里云账号配额。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetDevicesProperty' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要设置属性值的设备所属的产品**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'Qos',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '1',
            'minimum' => '0',
            'default' => '0',
          ),
        ),
        3 => 
        array (
          'name' => 'Items',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要设置的属性信息，数据格式为JSON。

每个属性信息由**标识符与属性值（key:value）**构成，多个属性用英文逗号隔开。

例如，设置智能灯的两个属性：
- 标识符为**Switch**的开关属性，数据类型为**Bool**，设置值为**1**（开）。
- 标识符为**Color**的灯颜色属性，数据类型为**String**，设置值为**blue**。

那么要设置的属性信息，JSON格式如下：

`Items={"Switch":1,"Color":"blue"}`

> 如果设置自定义模块testFb（非默认模块）的属性，则格式为：`Items={"testFb:Switch":1,"testFb:Color":"blue"}`',
            'type' => 'string',
            'required' => true,
            'example' => '{"Switch":1,"Color":"blue"}',
          ),
        ),
        4 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要设置属性值的设备名称列表。设备名称的个数范围为1~100个。

',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'light',
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SetDevicesPropertyResponse>\\n<RequestId>2E19BDAF-0FD0-4608-9F41-82D230CFEE38</RequestId>\\n<Success>true</Success>\\n</SetDevicesPropertyResponse>","errorExample":""}]',
      'title' => '批量设置设备属性值',
      'summary' => '调用该接口批量设置设备属性值。',
      'description' => '## 使用说明
物模型功能定义数据类型为float或double时，对应参数值（即使值为整数）至少携带一位小数位。例如10.0、11.1。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InvokeThingService' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有**ID**值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要调用服务的设备所属的产品ProductKey。
><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要调用服务所属设备的DeviceName。
><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>
',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'Identifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务的标识符。

设备的服务**Identifier**的查看方式：

- 登录[物联网平台控制台](https://iot.console.aliyun.com/)，在设备所属产品的**功能定义**中查看。
- 调用接口[QueryThingModel](~~150321~~)，从返回的物模型信息中查看。

> 如果是自定义（非默认）模块**testFb**下服务**testService**，则参数值为**testFb:testService**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Set',
          ),
        ),
        4 => 
        array (
          'name' => 'Args',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要启用服务的入参信息，数据格式为JSON String，例如**Args={"param1":1}**。
若此参数为空时，需传入 **Args={}** 。

><notice>物模型功能定义数据类型为float或double时，对应参数值（即使值为整数）至少携带一位小数位。例如10.0、11.1。
></notice>',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{"param1":1}',
          ),
        ),
        5 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要调用服务的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>
',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        6 => 
        array (
          'name' => 'Qos',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '1',
            'minimum' => '0',
            'default' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功，但不代表调用的服务执行成功。执行情况，以设备端日志为准。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Result' => 
                  array (
                    'description' => '同步调用服务，返回的调用结果。
异步调用服务，不返回此参数。',
                    'type' => 'string',
                    'example' => '{"param1":1}',
                  ),
                  'MessageId' => 
                  array (
                    'description' => '云端向设备下发服务调用的消息ID。',
                    'type' => 'string',
                    'example' => 'abcabcabc1234****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Result\\": \\"{\\\\\\"param1\\\\\\":1}\\",\\n    \\"MessageId\\": \\"abcabcabc1234****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<InvokeThingServiceResponse>\\n<Data>\\n    <Result>{\\"code\\":200,\\"data\\":{},\\"id\\":\\"100686\\",\\"message\\":\\"success\\",\\"version\\":\\"1.0\\"}</Result>\\n    <MessageId>abcabc123</MessageId>\\n</Data>\\n<RequestId>A44C818E-FA7F-4765-B1E7-01D14AE01C6A</RequestId>\\n<Success>true</Success>\\n</InvokeThingServiceResponse>","errorExample":""}]',
      'title' => '在一个设备上调用指定服务',
      'summary' => '调用该接口在单个设备上调用指定服务。',
      'description' => '## 使用说明

定义产品物模型服务时，已设置服务调用方式。因此，调用本接口时，物联网平台会根据请求参数**Identifier**值，选择服务对应的调用方式。
- 同步方式：物联网平台直接使用RRPC同步方式下行推送请求，设备返回RRPC响应消息。RRPC使用详情，请参见[什么是RRPC](~~90567~~)。
- 异步方式：物联网平台采用异步方式下行推送请求，设备采用异步方式返回结果。订阅的Topic详情，请参见[设备服务调用](~~89301~~)。

><notice>若创建产品时，设置物模型校验类型为**免校验**，调用本接口会默认为异步调用方式。
></notice>

调用服务到设备端后，设备会返回调用结果给接口的调用方。设备端响应逻辑及响应结果，需您在设备端完成开发。设备返回结果的数据格式必须符合标准的Alink协议，Alink JSON格式如下：
```
{
	"id": "58***89",
	"code": 200,
	"data": {},
	"message": "success",
	"localizedMsg": "localizedMsg"
}
```
> - **id**为物联网平台生成的唯一ID，设备从服务调用请求中获取，并原文返回。
- **code**为整型数字，会返回给接口调用方，用于判断服务调用结果。
- **data**为调用设备服务的结果数据，会返回给接口调用方。数据必须为JSON格式，由用户自行定义返回内容。
- **message**、**localizedMsg**根据业务需要进行返回。
例如物联网平台的设备接入C Link SDK提供了物模型使用示例，详细内容，请参见[调用服务](~~258239~~)。


## 使用限制
同步调用服务，最大超时时间为8秒。若8秒内服务器未收到回复，则返回超时错误。异步调用服务无最大超时时间限制。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。
 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InvokeThingsService' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要调用服务的设备所隶属的产品**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'Qos',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '1',
            'minimum' => '0',
            'default' => '0',
          ),
        ),
        3 => 
        array (
          'name' => 'Identifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务的标识符。

设备的服务**Identifier**的查看方式：

- 登录物联网平台控制台，在设备所属产品的**功能定义**中查看。
- 调用接口[QueryThingModel](~~150321~~)，从返回的物模型信息中查看。

> 如果是自定义（非默认）模块**testFb**下服务**testService**，则参数值为**testFb:testService**。',
            'type' => 'string',
            'required' => true,
            'example' => 'Set',
          ),
        ),
        4 => 
        array (
          'name' => 'Args',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要启用服务的入参信息，数据格式为JSON String，例如**Args={"param1":1}**。
若此参数为空时，需传入**Args={} **。

><notice>物模型功能定义数据类型为float或double时，对应参数值（即使值为整数）至少携带一位小数位。例如10.0、11.1。
></notice>',
            'type' => 'string',
            'required' => true,
            'example' => '{"param1":1}',
          ),
        ),
        5 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要调用服务的设备的名称列表。最多支持传入100个设备名称。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'device1',
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功，但不代表调用的服务执行成功。执行情况，以设备端日志为准。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<InvokeThingsServiceResponse>\\n<RequestId>059C3274-6197-4BEC-95E4-49A076330E57</RequestId>\\n<Success>true</Success>\\n</InvokeThingsServiceResponse>","errorExample":""}]',
      'title' => '批量调用设备服务',
      'summary' => '调用该接口批量调用设备服务。',
      'description' => '## 使用说明
目前只支持异步调用该接口。
调用服务到设备端后，设备会返回调用结果给接口的调用方。设备端响应逻辑及响应结果，需您在设备端完成开发。设备返回结果的数据格式必须符合标准的Alink协议，Alink JSON格式如下：
```
{
	"id": "58***89",
	"code": 200,
	"data": {},
	"message": "success",
	"localizedMsg": "localizedMsg"
}
```
> - **id**为物联网平台生成的唯一ID，设备从服务调用请求中获取，并原文返回。
- **code**为整型数字，会返回给接口调用方，用于判断服务调用结果。
- **data**为调用设备服务的结果数据，会返回给接口调用方。数据必须为JSON格式，由用户自行定义返回内容。
- **message**、**localizedMsg**根据业务需要进行返回。
例如物联网平台的设备接入C Link SDK提供了物模型使用示例，详细内容，请参见[调用服务](~~258239~~)。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享该阿里云账号配额。
',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。更多信息，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDevicePropertyData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数。数量限制：每页最多可显示50条。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备所属的产品ProductKey。

><notice>
如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备的名称。

><notice>
 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'airconditioning',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的属性记录的开始时间，必须小于结束时间**EndTime**。取值为毫秒值时间戳，例如：1579249499000。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1579249499000',
          ),
        ),
        5 => 
        array (
          'name' => 'Identifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的属性标识符。

<props="china">
- 设备的属性**Identifier**，可在物联网平台控制台中设备所属的产品的功能定义中查看，或调用[QueryThingModel](~~150321~~)，从返回的物模型数据中查看。
- 数字孪生节点的属性**Identifier**，可在物联网平台控制台中数字孪生工作台下的孪生节点的功能属性中查看。具体操作，请参见[孪生节点的功能属性](~~278729~~)。

</props>

<props="intl">设备的属性**Identifier**，可在物联网平台控制台中设备所属的产品的功能定义中查看，或调用[QueryThingModel](~~150321~~)，从返回的物模型数据中查看。</props>

> 如果设备的属性是自定义（非默认）模块**testFb**下属性**temperature**，则参数值为**testFb:temperature**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'temperature',
          ),
        ),
        6 => 
        array (
          'name' => 'Asc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中属性记录的排序方式，取值：

- **0**：倒序。
- **1**：正序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询属性所属的设备ID<props="china"><ph>或数字孪生节点ID</ph></props>：

<props="china">
- 调用[QueryDeviceInfo](~~257184~~)接口，可查询指定设备的**IotId**。
- 在物联网平台控制台的**数字孪生体详情**页面，单击孪生节点，可查看**节点ID**。

</props>

<props="intl">调用[QueryDeviceInfo](~~257184~~)接口，可查询指定设备的**IotId**。</props>

><notice>**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        8 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的属性记录的结束时间，必须大于起始时间**StartTime**。取值为毫秒值时间戳，例如：1579249499000。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1579249499000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的设备属性记录。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextTime' => 
                  array (
                    'description' => '下一页面中的属性记录的起始时间。

- 当属性记录的排序方式为倒序（入参**Asc**为**0**），调用本接口查询下一页属性记录时，该值可作为下次查询的入参**EndTime**的值。
- 当属性记录的排序方式为正序（入参**Asc**为**1**），调用本接口查询下一页属性记录时，该值可作为下次查询的入参**StartTime**的值。
',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1579249499000',
                  ),
                  'NextValid' => 
                  array (
                    'description' => '是否有下一页属性记录。

- **true**：有，返回**NextTime**。详细说明，请参见**NextTime**描述。
- **false**：没有。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PropertyInfo' => 
                      array (
                        'description' => '属性数据列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Value' => 
                            array (
                              'description' => '属性值。',
                              'type' => 'string',
                              'example' => '2',
                            ),
                            'Time' => 
                            array (
                              'description' => '属性修改时间。',
                              'type' => 'string',
                              'example' => '1516541885630',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextTime\\": 1579249499000,\\n    \\"NextValid\\": true,\\n    \\"List\\": {\\n      \\"PropertyInfo\\": [\\n        {\\n          \\"Value\\": \\"2\\",\\n          \\"Time\\": \\"1516541885630\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDevicePropertyDataResponse>\\n<Data>\\n    <NextValid>false</NextValid>\\n    <NextTime>1579249151177</NextTime>\\n    <List>\\n        <PropertyInfo>\\n            <Value>32.46</Value>\\n            <Time>1579249151178</Time>\\n        </PropertyInfo>\\n    </List>\\n</Data>\\n<RequestId>45391E10-446B-4986-863E-1BA8CC44748F</RequestId>\\n<Success>true</Success>\\n</QueryDevicePropertyDataResponse>","errorExample":""}]',
      'title' => '查询指定设备的属性记录',
      'summary' => '调用该接口查询指定设备或数字孪生节点，在指定时间段内，单个属性的数据。',
      'description' => '## 使用说明
<props="intl">若设备或数字孪生节点有多个属性，您可以多次调用本接口，一次输入一个**Identifier**进行查询，也可以直接调用接口[QueryDevicePropertiesData](~~99237~~)，一次输入多个**Identifier**进行查询。</props>

<props="china">
- 若设备或数字孪生节点有多个属性，您可以多次调用本接口，一次输入一个**Identifier**进行查询，也可以直接调用接口[QueryDevicePropertiesData](~~99237~~)，一次输入多个**Identifier**进行查询。
- 若查询数字孪生节点的属性数据，必须传入参数**IotId**，且取值为孪生节点ID。

</props>

## 使用限制
<props="intl">仅可查询最近30天内的属性数据。</props>

<props="china">
- 华东2（上海）、华北2（北京）和华南1（深圳）地域的标准型和尊享型企业版实例：仅可查询存储时效内的数据。数据存储时效，请参见[存储配置](~~464050~~)。
- 其他地域和实例：仅可查询最近30天内的属性数据。

</props>

> 数据存储时间从属性时间戳表示的时间当日开始计算。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDevicePropertiesData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '单个属性可返回的数据记录数量。最大值为100。
任意一个属性返回的数据记录数量不超过该值。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备所属的产品ProductKey。

><notice>
 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备名称。

><notice>
 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'airconditioning',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '属性记录的开始时间。取值为13位毫秒值时间戳，例如：1579249499000。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1579249499000',
          ),
        ),
        5 => 
        array (
          'name' => 'Asc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中，属性记录按时间排序的方式。取值：

- **0**：倒序。倒序查询时，**StartTime**必须大于**EndTime**。
- **1**：正序。正序查询时，**StartTime**必须小于**EndTime**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        6 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询属性所属的设备ID<props="china"><ph>或数字孪生节点ID</ph></props>：

<props="china">
- 调用[QueryDeviceInfo](~~257184~~)接口，可查询指定设备的**IotId**。
- 在物联网平台控制台的**数字孪生体详情**页面，单击孪生节点，可查看**节点ID**。

</props>

<props="intl">调用[QueryDeviceInfo](~~257184~~)接口，可查询指定设备的**IotId**。</props>

><notice>**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        7 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '属性记录的结束时间。取值为13位毫秒值时间戳，例如：1579249499000。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1579249499000',
          ),
        ),
        8 => 
        array (
          'name' => 'Identifier',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '属性的标识符列表。
不可输入重复的属性Identifier。
<props="china">
- 设备的属性**Identifier**，可在物联网平台控制台中设备所属的产品的功能定义中查看，或调用[QueryThingModel](~~150321~~)，从返回的物模型数据中查看。
- 数字孪生节点的属性**Identifier**，可在物联网平台控制台的数字孪生工作台下的孪生节点的功能属性中查看。具体操作，请参见[孪生节点的功能属性](~~278729~~)。

</props>

<props="intl">设备的属性**Identifier**，可在物联网平台控制台中设备所属的产品的功能定义中查看，或调用[QueryThingModel](~~150321~~)，从返回的物模型数据中查看。</props>

> 如果设备的属性是自定义（非默认）模块**testFb**下属性**temperature**，则参数值为**testFb:temperature**。
',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'temperature',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextValid' => 
              array (
                'description' => '目前本接口不支持分页查询，请忽略此参数返回值。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'NextTime' => 
              array (
                'description' => '目前本接口不支持分页查询，请忽略此参数返回值。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1579249499000',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PropertyDataInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PropertyDataInfo' => 
                  array (
                    'description' => '调用成功时，返回的属性信息列表（**PropertyDataInfo**）。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Identifier' => 
                        array (
                          'description' => '属性的标识符。',
                          'type' => 'string',
                          'example' => 'temperature',
                        ),
                        'List' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PropertyInfo' => 
                            array (
                              'description' => '属性数据列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Value' => 
                                  array (
                                    'description' => '属性值。',
                                    'type' => 'string',
                                    'example' => '21.3',
                                  ),
                                  'Time' => 
                                  array (
                                    'description' => '属性上报时间。取值为毫秒值时间戳，例如：1579249499000。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1579249499000',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextValid\\": true,\\n  \\"NextTime\\": 1579249499000,\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PropertyDataInfos\\": {\\n    \\"PropertyDataInfo\\": [\\n      {\\n        \\"Identifier\\": \\"temperature\\",\\n        \\"List\\": {\\n          \\"PropertyInfo\\": [\\n            {\\n              \\"Value\\": \\"21.3\\",\\n              \\"Time\\": 1579249499000\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDevicePropertiesData>\\n<NextValid>false</NextValid>\\n<RequestId>CC4CAC00-ED4C-4004-9E8D-E8B4A78552FA</RequestId>\\n<PropertyDataInfos>\\n    <PropertyDataInfo>\\n        <List>\\n            <PropertyInfo>\\n                <Value>32.46</Value>\\n                <Time>1579249151178</Time>\\n            </PropertyInfo>\\n        </List>\\n        <Identifier>Temperature</Identifier>\\n    </PropertyDataInfo>\\n    <PropertyDataInfo>\\n        <List>\\n            <PropertyInfo>\\n                <Value>48</Value>\\n                <Time>1579249151178</Time>\\n            </PropertyInfo>\\n        </List>\\n        <Identifier>Humidity</Identifier>\\n    </PropertyDataInfo>\\n</PropertyDataInfos>\\n<Success>true</Success>\\n</QueryDevicePropertiesData>","errorExample":""}]',
      'title' => '批量查询指定设备的属性上报数据',
      'summary' => '调用该接口查询指定设备或数字孪生节点，在指定时间段内，多个属性的数据。',
      'description' => '## 使用说明
<props="china">
- 若查询数字孪生节点的属性数据，必须传入参数**IotId**，且取值为孪生节点ID。
- 目前本接口已不支持分页查询。调用本接口时，如果在指定时间段内，没有返回**PageSize**条记录，返回的**NextTime**和**NextValid**也是无效的。您可多次调用接口[QueryDevicePropertyData](~~69539~~)，一次输入一个**Identifier**进行查询。

</props>

<props="intl">目前本接口已不支持分页查询。调用本接口时，如果在指定时间段内，没有返回**PageSize**条记录，返回的**NextTime**和**NextValid**也是无效的。您可多次调用接口[QueryDevicePropertyData](~~69539~~)，一次输入一个**Identifier**进行查询。</props>

## 使用限制

- 一次调用下，最多查询10个属性的历史数据，最多返回100条数据。
- 标准型和尊享型企业版实例：仅可查询存储时效内的数据。数据存储时效，请参见[存储配置](~~464050~~)。
- 其他实例：仅可查询最近30天内的属性数据。    

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。

',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceEventData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数。数量限制：每页最多可显示50条。默认值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备所属的产品**ProductKey**。
><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备名称。
><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的事件记录的开始时间。格式为毫秒级的13位时间戳，例如：1516538300303。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1516541900303',
          ),
        ),
        5 => 
        array (
          'name' => 'Identifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的事件标识符。设备的事件**Identifier**，可在控制台中设备所属的产品的功能定义中查看；也可以调用[QueryThingModel](~~150321~~)，从返回的物模型信息中查看。

> 如果是自定义（非默认）模块**testFb**下事件**PowerOff**，则参数值为**testFb:PowerOff**。

不传入此参数时，查询默认模块和自定义模块下的所有事件数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'PowerOff',
          ),
        ),
        6 => 
        array (
          'name' => 'EventType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的事件类型。取值：

- **info**：信息。

- **alert**：告警。

- **error**：故障。',
            'type' => 'string',
            'required' => false,
            'example' => 'info',
          ),
        ),
        7 => 
        array (
          'name' => 'Asc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中事件记录的排序方式，取值：

- **0**（默认）：倒序。
- **1**：正序。

> 不传入此参数时，使用默认值**0**，按照倒序进行排序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        8 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        9 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的事件记录的结束时间。格式为毫秒级的13位时间戳，例如：1516541900303。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1516541900303',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的设备事件记录。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextValid' => 
                  array (
                    'description' => '是否有下一页事件记录。

- **true**：有，返回**NextTime**。详细说明，请参见**NextTime**描述。
- **false**：没有。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'NextTime' => 
                  array (
                    'description' => '下一页面中的事件记录的起始时间。毫秒级时间戳。

- 当事件记录的排序方式为倒序（入参**Asc**为0或不传入），调用本接口查询下一页事件记录时，该值可作为下次查询的入参**EndTime**的值。
- 当事件记录的排序方式为正序（入参**Asc**为1），调用本接口查询下一页事件记录时，该值可作为下次查询的入参**StartTime**的值。

',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1579163099000',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'EventInfo' => 
                      array (
                        'description' => '事件集合。每个元素代表一个事件。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Identifier' => 
                            array (
                              'description' => '事件标识符。',
                              'type' => 'string',
                              'example' => 'PowerOff',
                            ),
                            'OutputData' => 
                            array (
                              'description' => '事件的输出参数，map格式的字符串。',
                              'type' => 'string',
                              'example' => '{"structArgs":{"structchildFLOATf71c20e":1.23}}',
                            ),
                            'Time' => 
                            array (
                              'description' => '事件发生时间。毫秒级时间戳。',
                              'type' => 'string',
                              'example' => '1579163099000',
                            ),
                            'EventType' => 
                            array (
                              'description' => '事件类型。
- **info**：信息。
- **alert**：告警。
- **error**：故障。',
                              'type' => 'string',
                              'example' => 'info',
                            ),
                            'Name' => 
                            array (
                              'description' => '事件名称。',
                              'type' => 'string',
                              'example' => '设备关机',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextValid\\": true,\\n    \\"NextTime\\": 1579163099000,\\n    \\"List\\": {\\n      \\"EventInfo\\": [\\n        {\\n          \\"Identifier\\": \\"PowerOff\\",\\n          \\"OutputData\\": \\"{\\\\\\"structArgs\\\\\\":{\\\\\\"structchildFLOATf71c20e\\\\\\":1.23}}\\",\\n          \\"Time\\": \\"1579163099000\\",\\n          \\"EventType\\": \\"info\\",\\n          \\"Name\\": \\"设备关机\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceEventDataResponse>\\n<Data>\\n    <NextValid>false</NextValid>\\n    <NextTime>1579249151177</NextTime>\\n    <List>\\n        <EventInfo>\\n            <Name>testEventInfoName</Name>\\n            <Time>1516517974638</Time>\\n            <OutputData>{\\"structArgs\\":{\\"structchildFLOATf71c20e\\":1.23,\\"structchildINT6b6b626\\":3,\\"structchildDATE663436a\\":\\"1516517966152\\",\\"structchildDOUBLE08d0f74\\":1.23,\\"structchildTEXTdc764f9\\":\\"07b68264b0ba42c18e5f\\",\\"structchildBOOLd260729\\":0,\\"structchildENUMbe62590\\":1},\\"enumArgs\\":0,\\"boolArgs\\":0,\\"floatArgs\\":2.3,\\"dateArgs\\":\\"1516517966152\\",\\"intArgs\\":1,\\"doubleArgs\\":2.3,\\"textArgs\\":\\"dV56zbkzjBjw1Ti1dA52\\"}</OutputData>\\n            <EventType>info</EventType>\\n            <Identifier>testEventInfo</Identifier>\\n        </EventInfo>\\n    </List>\\n</Data>\\n<RequestId>45391E10-446B-4986-863E-1BA8CC44748F</RequestId>\\n<Success>true</Success>\\n</QueryDeviceEventDataResponse>","errorExample":""}]',
      'title' => '查询指定设备的事件记录',
      'summary' => '调用该接口查询指定设备的事件记录。',
      'description' => '## 使用说明
<props="intl">仅可查询最近30天内的事件记录数据。</props>

<props="china">
- 华东2（上海）、华北2（北京）和华南1（深圳）地域的标准型和尊享型企业版实例：仅可查询存储时效内的数据。数据存储时效，请参见[存储配置](~~464050~~)。
- 其他地域和实例：仅可查询最近30天内的事件记录数据。

</props>

 >  数据存储时间从事件生成当日起开始计算。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceServiceData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数。数量限制：每页最多可显示50条。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备所属的产品**ProductKey**。
><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备名称。
><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的服务调用记录的开始时间。取值为毫秒值时间戳，例如：1579249499000。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1579249499000',
          ),
        ),
        5 => 
        array (
          'name' => 'Identifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的服务标识符。设备的服务**Identifier**。可在控制台中，设备所属的产品的功能定义中查看；或调用[QueryThingModel](~~150321~~)。

> 如果是自定义（非默认）模块**testFb**下服务**testService**，则参数值为**testFb:testService**。

不传入此参数时，查询默认模块和自定义模块下的所有服务数据。
',
            'type' => 'string',
            'required' => false,
            'example' => 'Set',
          ),
        ),
        6 => 
        array (
          'name' => 'Asc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中，服务调用记录按时间排序的方式。取值：

- **0**：倒序。
- **1**：正序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>
',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        8 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的服务调用记录的结束时间。取值为毫秒值时间戳，例如：1579249499000。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1579249499000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的设备服务调用记录。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextValid' => 
                  array (
                    'description' => '是否有下一页服务调用记录。
- **true**：有。
- **false**：没有。

返回**NextValid**为**true**时，可以将**NextTime**的值作为下次查询的**StartTime**，继续查询本次查询不显示的数据。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'NextTime' => 
                  array (
                    'description' => '下一页面中的服务调用记录的起始时间。
调用本接口查询下一页服务调用记录时，该值可作为请求**StartTime**的值。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1579335899000',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ServiceInfo' => 
                      array (
                        'description' => '服务调用记录集合。每个元素代表一个服务执调用录。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Identifier' => 
                            array (
                              'description' => '服务标识符。',
                              'type' => 'string',
                              'example' => 'Set',
                            ),
                            'OutputData' => 
                            array (
                              'description' => '服务的输出参数，MAP格式的字符串，结构为`key:value`。',
                              'type' => 'string',
                              'example' => '{\\"code\\":200,\\"data\\":{},\\"id\\":\\"100686\\",\\"message\\":\\"success\\",\\"version\\":\\"1.0\\"}',
                            ),
                            'Time' => 
                            array (
                              'description' => '调用服务的时间。',
                              'type' => 'string',
                              'example' => '1579249499000',
                            ),
                            'InputData' => 
                            array (
                              'description' => '服务的输入参数，MAP格式的字符串，结构为`key:value`。',
                              'type' => 'string',
                              'example' => '{\\"LightAdjustLevel\\":123}',
                            ),
                            'Name' => 
                            array (
                              'description' => '服务名称。',
                              'type' => 'string',
                              'example' => '设置温度',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextValid\\": true,\\n    \\"NextTime\\": 1579335899000,\\n    \\"List\\": {\\n      \\"ServiceInfo\\": [\\n        {\\n          \\"Identifier\\": \\"Set\\",\\n          \\"OutputData\\": \\"{\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\":200,\\\\\\\\\\\\\\"data\\\\\\\\\\\\\\":{},\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"100686\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"message\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"success\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"version\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1.0\\\\\\\\\\\\\\"}\\",\\n          \\"Time\\": \\"1579249499000\\",\\n          \\"InputData\\": \\"{\\\\\\\\\\\\\\"LightAdjustLevel\\\\\\\\\\\\\\":123}\\",\\n          \\"Name\\": \\"设置温度\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceServiceDataResponse>\\n<Data>\\n    <NextValid>true</NextValid>\\n    <NextTime>1517315865197</NextTime>\\n    <List>\\n        <ServiceInfo>\\n            <Name>set</Name>\\n            <Time>1517315865198</Time>\\n            <OutputData>{\\"code\\":200,\\"data\\":{},\\"id\\":\\"100686\\",\\"message\\":\\"success\\",\\"version\\":\\"1.0\\"}</OutputData>\\n            <InputData>{\\"LightAdjustLevel\\":123}</InputData>\\n            <Identifier>set</Identifier>\\n        </ServiceInfo>\\n    </List>\\n</Data>\\n<RequestId>A44C818E-FA7F-4765-B1E7-01D14AE01C6A</RequestId>\\n<Success>true</Success>\\n</QueryDeviceServiceDataResponse>","errorExample":""}]',
      'title' => '查询指定设备的服务调用记录',
      'summary' => '调用该接口查询指定设备的服务调用记录。',
      'description' => '## 使用说明

<props="intl">仅能查询最近30天内的服务数据。</props>

<props="china">
- 华东2（上海）、华北2（北京）和华南1（深圳）地域的标准型和尊享型企业版实例：仅可查询存储时效内的数据。数据存储时效，请参见[存储配置](~~464050~~)。
- 其他地域和实例：仅可查询最近30天内的服务数据。

</props>

> 数据存储时间从调用服务当日开始计算。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享该阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetDeviceDesiredProperty' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要设置期望属性值的设备所隶属的产品ProductKey。
><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要设置期望属性值的设备名称。
><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>
',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要设置期望属性值的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>
',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        4 => 
        array (
          'name' => 'Versions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前期望属性值版本，组成为Key:Value，数据格式为JSON String，例如{"Temperature":2}。

- **Key**取值为属性的标识符（identifier）。可在控制台中，设备所属产品的功能定义中查看属性的identifier。

    > 一次调用中，key的取值（即属性的identifier）不能重复。

- **Value**取值为当前期望属性值的版本号。

    首次设置期望属性值时，指定该参数值为0。首次设置期望属性值后，期望值版本号为1。以后每次设置期望值后，物联网平台自动将期望值版本加1（即第二次设置期望属性值时，指定该参数值为1。设置成功后，版本号自动变为2；第三次设置时，指定该参数值为2。设置成功后，版本号自动变为3；以此类推）。
    > 如果传入的版本号与当前版本不符，服务器将拒绝此次请求。若您不确定当前期望值的版本号，可以不传入版本号，但仍需传入有效的JSON，即传入{}。',
            'type' => 'string',
            'required' => true,
            'example' => '{"Temperature":2}',
          ),
        ),
        5 => 
        array (
          'name' => 'Items',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要设置的期望属性值，组成为属性的**Key:Value**，数据格式为JSON String，例如**{"Temperature":35}**。最多可输入10个期望属性值。

- **Key**取值为属性的标识符（**identifier**）。可在控制台中，设备所属产品的**功能定义**中查看；或调用[QueryThingModel](~~150321~~)，从返回的物模型数据中查看。

    如果是自定义（非默认）模块testFb下属性temperature，则参数值为**{"testFb:temperature":35}**。

    > 指定属性必须是读写型。如果您指定了一个只读型的属性，设置将会失败。并且， 一次调用中，不能传入重复的属性标识符。
  


- **Value**取值为要设置的期望属性值。取值需符合您为该属性定义的数据类型和取值范围。

    > 若属性值设置为null，则表示清空期望属性值。
',
            'type' => 'string',
            'required' => true,
            'example' => '{"Temperature":35}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。详情请参见以下参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'MessageId' => 
                  array (
                    'description' => '云端下发给设备的设置期望属性值的消息ID。',
                    'type' => 'string',
                    'example' => '300511751',
                  ),
                  'Versions' => 
                  array (
                    'description' => '本次设置期望属性值后，期望属性值的当前版本号。',
                    'type' => 'string',
                    'example' => '{\\"Temperature\\":2}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"MessageId\\": \\"300511751\\",\\n    \\"Versions\\": \\"{\\\\\\\\\\\\\\"Temperature\\\\\\\\\\\\\\":2}\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<SetDeviceDesiredPropertyResponse>\\n<Data>\\n    <MessageId>300511751</MessageId>\\n    <Versions>{\\"LightAdjustLevel\\":2}</Versions>\\n</Data>\\n<RequestId>AADE79D2-B328-4FC6-A3E0-34BB23BCA440</RequestId>\\n<Success>true</Success>\\n</SetDeviceDesiredPropertyResponse>","errorExample":""}]',
      'title' => '为指定设备批量设置期望属性值',
      'summary' => '调用该接口为指定设备批量设置期望属性值。',
      'description' => '## 使用说明

- 只读属性不支持设置期望属性值。
- 一次调用最多可设置10个期望属性值。
- 设备创建后，期望属性值的版本（**Version**）为**0**。首次设置期望属性值时，如果指定**Version**参数，则需指定**Version**值为**0**。

><notice>物模型功能定义数据类型为float或double时，对应参数值（即使值为整数）至少携带一位小数位。例如10.0、11.1。
></notice>

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceDesiredProperty' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备所隶属的产品ProductKey。
> 如果传入该参数，需同时传入**DeviceName**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备名称。
> 如果传入该参数，需同时传入**ProductKey**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        4 => 
        array (
          'name' => 'FunctionBlockId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型自定义模块标识符，在产品中具有唯一性。

不传入此参数时，查询默认模块的数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'BatteryModule',
          ),
        ),
        5 => 
        array (
          'name' => 'Identifier',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要查询期望值的属性的标识符（identifier）列表。

设备的属性identifier，可在控制台中，设备所属产品的功能定义中查看。

- 单次调用，最多能传入10个标识符。
- 不可输入重复的属性标识符。
- 若不传入此参数，将返回该设备所有属性的期望值。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'Temperature',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据（**List**）。',
                'type' => 'object',
                'properties' => 
                array (
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'DesiredPropertyInfo' => 
                      array (
                        'description' => '返回的期望属性信息（**DesiredPropertyInfo**）。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Time' => 
                            array (
                              'description' => '期望属性值的修改时间，单位是毫秒。',
                              'type' => 'string',
                              'example' => '1579335899000',
                            ),
                            'Value' => 
                            array (
                              'description' => '期望属性值。

> 如果已调用[ClearDeviceDesiredProperty](~~477431~~)接口清空对应属性的期望值，则不会返回参数**Value**。',
                              'type' => 'string',
                              'example' => '34',
                            ),
                            'DataType' => 
                            array (
                              'description' => '属性数据类型。',
                              'type' => 'string',
                              'example' => 'int',
                            ),
                            'Version' => 
                            array (
                              'description' => '当前期望属性值的版本号。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1',
                            ),
                            'Unit' => 
                            array (
                              'description' => '属性单位。',
                              'type' => 'string',
                              'example' => '℃',
                            ),
                            'Identifier' => 
                            array (
                              'description' => '属性标识符。',
                              'type' => 'string',
                              'example' => 'Temperature',
                            ),
                            'Name' => 
                            array (
                              'description' => '属性名称。',
                              'type' => 'string',
                              'example' => 'airconditioning',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"List\\": {\\n      \\"DesiredPropertyInfo\\": [\\n        {\\n          \\"Time\\": \\"1579335899000\\",\\n          \\"Value\\": \\"34\\",\\n          \\"DataType\\": \\"int\\",\\n          \\"Version\\": 1,\\n          \\"Unit\\": \\"℃\\",\\n          \\"Identifier\\": \\"Temperature\\",\\n          \\"Name\\": \\"airconditioning\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceDesiredPropertyResponse>\\n<Data>\\n    <List>\\n        <DesiredPropertyInfo>\\n            <Name>温度</Name>\\n            <Value>35</Value>\\n            <Time>1581778567154</Time>\\n            <DataType>float</DataType>\\n            <Version>1</Version>\\n            <Identifier>Temperature</Identifier>\\n            <Unit>°C</Unit>\\n        </DesiredPropertyInfo>\\n    </List>\\n</Data>\\n<RequestId>F0B1F7C8-A799-44C3-BDF8-1B8F9E91E675</RequestId>\\n<Success>true</Success>\\n</QueryDeviceDesiredPropertyResponse>","errorExample":""}]',
      'title' => '查询指定设备的期望属性值',
      'summary' => '调用该接口查询指定设备的期望属性值。',
      'description' => '## 使用说明

- 只读属性不支持查询期望属性值。

- 一次调用最多能查询10个属性的期望值。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDevicePropertyStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备所属的产品ProductKey。

><notice>
如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备名称。

><notice>
如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询属性所属的设备ID或IoT孪生节点ID：

- 调用[QueryDeviceInfo](~~257184~~)接口，可查询指定设备的**IotId**。
- 在物联网平台控制台的**孪生实体图**页面，单击孪生节点，可查看**节点ID**。

><notice>
**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        4 => 
        array (
          'name' => 'FunctionBlockId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物模型自定义模块标识符，在产品中具有唯一性。

不传入此参数时，查询默认模块的数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'BatteryModule',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据，详情请参见**List**包含的参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PropertyStatusInfo' => 
                      array (
                        'description' => '返回的属性集合信息（**PropertyStatusInfo**）。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Time' => 
                            array (
                              'description' => '属性修改的时间，单位是毫秒。',
                              'type' => 'string',
                              'example' => '1517553572362',
                            ),
                            'Value' => 
                            array (
                              'description' => '属性值。',
                              'type' => 'string',
                              'example' => '25',
                            ),
                            'DataType' => 
                            array (
                              'description' => '属性格式类型，取值：

- **int**：整型。
- **float**：单精度浮点型。
- **double**：双精度浮点型。
- **enum**：枚举型。
- **bool**：布尔型。
- **text**：字符型。
- **date**：时间型（String类型的UTC时间戳，单位是毫秒）。
- **array**：数组型。
- **struct**：结构体类型。',
                              'type' => 'string',
                              'example' => 'int',
                            ),
                            'Unit' => 
                            array (
                              'description' => '属性值的单位。',
                              'type' => 'string',
                              'example' => '°C',
                            ),
                            'Identifier' => 
                            array (
                              'description' => '属性标识符。',
                              'type' => 'string',
                              'example' => 'Temperature',
                            ),
                            'Name' => 
                            array (
                              'description' => '属性名称。',
                              'type' => 'string',
                              'example' => 'temperature',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"List\\": {\\n      \\"PropertyStatusInfo\\": [\\n        {\\n          \\"Time\\": \\"1517553572362\\",\\n          \\"Value\\": \\"25\\",\\n          \\"DataType\\": \\"int\\",\\n          \\"Unit\\": \\"°C\\",\\n          \\"Identifier\\": \\"Temperature\\",\\n          \\"Name\\": \\"temperature\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDevicePropertyStatusResponse>\\n<Data>\\n    <List>\\n        <PropertyStatusInfo>\\n            <Name>湿度</Name>\\n            <Value>48</Value>\\n            <Time>1579249151178</Time>\\n            <DataType>int</DataType>\\n            <Identifier>Humidity</Identifier>\\n            <Unit>%</Unit>\\n        </PropertyStatusInfo>\\n        <PropertyStatusInfo>\\n            <Name>温度</Name>\\n            <Value>32.46</Value>\\n            <Time>1579249151178</Time>\\n            <DataType>float</DataType>\\n            <Identifier>Temperature</Identifier>\\n            <Unit>°C</Unit>\\n        </PropertyStatusInfo>\\n    </List>\\n</Data>\\n<RequestId>84BAD25B-9879-4BA1-9213-F576C6558D77</RequestId>\\n<Success>true</Success>\\n</QueryDevicePropertyStatusResponse>","errorExample":""}]',
      'title' => '查询指定设备的属性快照',
      'summary' => '调用该接口查询指定设备或数字孪生节点的所有属性快照。',
      'description' => '## 使用说明
若查询IoT孪生节点的属性数据，必须传入参数**IotId**，且取值为孪生节点ID。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为200。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceOriginalPropertyStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的记录数。数量限制：每页最多可显示50条。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备所属的产品**ProductKey**。

> 如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备名称。

> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        4 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页标识。如果存在下一页，服务会返回此token，下次请求带上即可。',
            'type' => 'string',
            'required' => false,
            'example' => 'Bo***x44Qx',
          ),
        ),
        5 => 
        array (
          'name' => 'Asc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定查询属性数据的时间排序方式。取值：
- 0：倒序。
- 1：正序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        6 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。

> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.common.InvalidPageParams',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- true：调用成功。
- false：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据，更多信息，请参见List包含的参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextPageToken' => 
                  array (
                    'description' => '下一页标识。',
                    'type' => 'string',
                    'example' => 'Bo***x44Qx',
                  ),
                  'NextValid' => 
                  array (
                    'description' => '是否有下一页属性记录。

- **true**：有。
- **false**：没有。

返回**NextValid**为**true**时，可以将**NextPageToken**的值作为下次查询的**NextPageToken**，继续查询本次查询不显示的数据。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PropertyStatusDataInfo' => 
                      array (
                        'description' => '返回的属性集合信息（**PropertyStatusInfo**）。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Identifier' => 
                            array (
                              'description' => '属性标识符。',
                              'type' => 'string',
                              'example' => 'Temperture',
                            ),
                            'Value' => 
                            array (
                              'description' => '属性值。',
                              'type' => 'string',
                              'example' => '26',
                            ),
                            'Time' => 
                            array (
                              'description' => '属性修改的时间，单位是毫秒。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1517553572362',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.common.InvalidPageParams\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextPageToken\\": \\"Bo***x44Qx\\",\\n    \\"NextValid\\": true,\\n    \\"List\\": {\\n      \\"PropertyStatusDataInfo\\": [\\n        {\\n          \\"Identifier\\": \\"Temperture\\",\\n          \\"Value\\": \\"26\\",\\n          \\"Time\\": 1517553572362\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceOriginalPropertyStatusResponse>\\n<Data>\\n    <NextValid>false</NextValid>\\n    <nextPageToken>Bo***x44Qx</nextPageToken>\\n    <List>\\n        <PropertyStatusInfo>\\n            <Value>48</Value>\\n            <Time>1579249151178</Time>\\n            <Identifier>Humidity</Identifier>\\n        </PropertyStatusInfo>\\n        <PropertyStatusInfo>\\n            <Value>32.46</Value>\\n            <Time>1579249151178</Time>\\n            <Identifier>Temperature</Identifier>\\n        </PropertyStatusInfo>\\n    </List>\\n</Data>\\n<RequestId>84BAD25B-9879-4BA1-9213-F576C6558D77</RequestId>\\n<Success>true</Success>\\n</QueryDeviceOriginalPropertyStatusResponse>","errorExample":""}]',
      'title' => '查询设备上报的原始属性',
      'summary' => '查询指定设备本身上报的原始属性（通过和未通过物模型校验的所有属性）快照。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceOriginalPropertyData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '单个属性可返回的数据记录数量。最大值为100。

任意一个属性返回的数据记录数量不超过该值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备所属的产品**ProductKey**。
><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备名称。

><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        4 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页标识。如果存在下一页，服务会返回此token，下次请求带上即可。',
            'type' => 'string',
            'required' => false,
            'example' => 'Bo***x44Qx',
          ),
        ),
        5 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的属性记录的开始时间。取值为毫秒值时间戳。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1569249488000',
          ),
        ),
        6 => 
        array (
          'name' => 'Identifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '属性的标识符。

- 对于弱校验，设备的属性**Identifier**，可在控制台中设备所属的产品的功能定义中查看；也可以调用[QueryThingModel](~~150321~~)，从返回的物模型信息中查看。
- 对于免校验，必须与设备属性上报时自定义的**identifier**一致。
',
            'type' => 'string',
            'required' => true,
            'example' => 'temperature',
          ),
        ),
        7 => 
        array (
          'name' => 'Asc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中，属性记录按时间排序的方式。取值：

- 0：倒序。
- 1：正序。

> **StartTime**必须小于**EndTime**，系统会根据排序方式自动转换。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        8 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。

><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        9 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '属性记录的结束时间。取值为13位毫秒值时间戳。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1579249499000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.device.InvalidIoTId',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的设备属性记录。',
                'type' => 'object',
                'properties' => 
                array (
                  'nextPageToken' => 
                  array (
                    'description' => '下一页标识。',
                    'type' => 'string',
                    'example' => 'Bo***x44Qx',
                  ),
                  'NextValid' => 
                  array (
                    'description' => '是否有下一页属性记录。

- **true**：有。
- **false**：没有。

返回**NextValid**为**true**时，可以将**NextPageToken**的值作为下次查询的**NextPageToken**，继续查询本次查询不显示的数据。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PropertyInfo' => 
                      array (
                        'description' => '属性集合。每个元素代表一个属性。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Value' => 
                            array (
                              'description' => '属性值。',
                              'type' => 'string',
                              'example' => '{\\"data\\":32.49}',
                            ),
                            'Time' => 
                            array (
                              'description' => '属性修改时间。',
                              'type' => 'string',
                              'example' => '1516541885630',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.device.InvalidIoTId\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"nextPageToken\\": \\"Bo***x44Qx\\",\\n    \\"NextValid\\": true,\\n    \\"List\\": {\\n      \\"PropertyInfo\\": [\\n        {\\n          \\"Value\\": \\"{\\\\\\\\\\\\\\"data\\\\\\\\\\\\\\":32.49}\\",\\n          \\"Time\\": \\"1516541885630\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceOriginalPropertyDataResponse>\\n<RequestId>DD8EE383-F007-5647-8B6B-0C52FAC3E7F2</RequestId>\\n<Data>\\n    <NextValid>true</NextValid>\\n    <nextPageToken>MTcxMjc0N***********</nextPageToken>\\n    <List>\\n        <PropertyInfo>\\n            <Value>{\\"data\\":31.26}</Value>\\n            <Time>1712747043556</Time>\\n        </PropertyInfo>\\n        <PropertyInfo>\\n            <Value>{\\"data\\":32.43}</Value>\\n            <Time>1712747043108</Time>\\n        </PropertyInfo>\\n        <PropertyInfo>\\n            <Value>{\\"data\\":30.58}</Value>\\n            <Time>1712747042619</Time>\\n        </PropertyInfo>\\n        <PropertyInfo>\\n            <Value>{\\"data\\":32.49}</Value>\\n            <Time>1712747042182</Time>\\n        </PropertyInfo>\\n        <PropertyInfo>\\n            <Value>{\\"data\\":30.66}</Value>\\n            <Time>1712747041731</Time>\\n        </PropertyInfo>\\n    </List>\\n</Data>\\n<Code/>\\n<Success>true</Success>\\n</QueryDeviceOriginalPropertyDataResponse>","errorExample":""}]',
      'title' => '查询指定设备的原始属性记录',
      'summary' => '调用该接口查询指定设备本身上报的原始属性（通过和未通过物模型校验的所有属性）记录。',
      'description' => '## 使用说明
<props="intl">仅可查询最近30天内的原始属性数据。</props>

<props="china">
- 华东2（上海）、华北2（北京）和华南1（深圳）地域的标准型和尊享型企业版实例：仅可查询存储时效内的数据。数据存储时效，请参见[存储配置](~~464050~~)。
- 其他地域和实例：仅可查询最近30天内的原始属性数据。

</props>

 > 数据存储时间从属性时间戳表示的时间当日开始计算。

## QPS限制
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceOriginalEventData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数。数量限制：每页最多可显示50条。默认值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备所属的产品**ProductKey**。

><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备名称。

><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        4 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页标识。如果存在下一页，服务会返回此token，下次请求带上即可。',
            'type' => 'string',
            'required' => false,
            'example' => 'Bo***x44Qx',
          ),
        ),
        5 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的事件记录的开始时间。格式为毫秒级的13位时间戳。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1516538300303',
          ),
        ),
        6 => 
        array (
          'name' => 'Identifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的事件标识符。

- 对于弱校验，设备的事件**Identifier**，可在控制台中设备所属的产品的功能定义中查看；也可以调用[QueryThingModel](~~150321~~)，从返回的物模型信息中查看。
- 对于免校验，必须与设备事件上报时自定义的**identifier**一致。',
            'type' => 'string',
            'required' => true,
            'example' => 'PowerOff',
          ),
        ),
        7 => 
        array (
          'name' => 'Asc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中事件记录的排序方式，取值：

- 0：倒序。
- 1：正序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        8 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。

><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        9 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的事件记录的结束时间。格式为毫秒级的13位时间戳。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1516541900303',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.device.InvalidIoTId',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- true：调用成功。
- false：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的设备事件记录。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextPageToken' => 
                  array (
                    'description' => '下一页标识。',
                    'type' => 'string',
                    'example' => 'Bo***x44Qx',
                  ),
                  'NextValid' => 
                  array (
                    'description' => '是否有下一页属性记录。

- **true**：有。
- **false**：没有。

返回**NextValid**为**true**时，可以将**NextPageToken**的值作为下次查询的**NextPageToken**，继续查询本次查询不显示的数据。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'EventInfo' => 
                      array (
                        'description' => '事件集合。每个元素代表一个事件。事件详情请参见**EventInfo**下参数。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Identifier' => 
                            array (
                              'description' => '事件标识符。',
                              'type' => 'string',
                              'example' => 'PowerOff',
                            ),
                            'OutputData' => 
                            array (
                              'description' => '事件的输出参数，MAP格式的字符串。',
                              'type' => 'string',
                              'example' => '{"structArgs":{"structchildFLOATf71c20e":1.23}}',
                            ),
                            'Time' => 
                            array (
                              'description' => '事件发生时间。毫秒级的13位时间戳。',
                              'type' => 'string',
                              'example' => '1579163099000',
                            ),
                            'EventType' => 
                            array (
                              'description' => '事件类型。

- info：信息。
- alert：告警。
- error：故障。',
                              'type' => 'string',
                              'example' => 'info',
                            ),
                            'Name' => 
                            array (
                              'description' => '事件名称。',
                              'type' => 'string',
                              'example' => '设备关机',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.device.InvalidIoTId\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextPageToken\\": \\"Bo***x44Qx\\",\\n    \\"NextValid\\": true,\\n    \\"List\\": {\\n      \\"EventInfo\\": [\\n        {\\n          \\"Identifier\\": \\"PowerOff\\",\\n          \\"OutputData\\": \\"{\\\\\\"structArgs\\\\\\":{\\\\\\"structchildFLOATf71c20e\\\\\\":1.23}}\\",\\n          \\"Time\\": \\"1579163099000\\",\\n          \\"EventType\\": \\"info\\",\\n          \\"Name\\": \\"设备关机\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceOriginalEventDataResponse>\\n<Data>\\n    <NextValid>false</NextValid>\\n    <NextTime>Bo***x44Qx</NextTime>\\n    <List>\\n        <EventInfo>\\n            <Name>testEventInfoName</Name>\\n            <Time>1516517974638</Time>\\n            <OutputData>{\\"structArgs\\":{\\"structchildFLOATf71c20e\\":1.23,\\"structchildINT6b6b626\\":3,\\"structchildDATE663436a\\":\\"1516517966152\\",\\"structchildDOUBLE08d0f74\\":1.23,\\"structchildTEXTdc764f9\\":\\"07b68264b0ba42c18e5f\\",\\"structchildBOOLd260729\\":0,\\"structchildENUMbe62590\\":1},\\"enumArgs\\":0,\\"boolArgs\\":0,\\"floatArgs\\":2.3,\\"dateArgs\\":\\"1516517966152\\",\\"intArgs\\":1,\\"doubleArgs\\":2.3,\\"textArgs\\":\\"dV56zbkzjBjw1Ti1dA52\\"}</OutputData>\\n            <EventType>info</EventType>\\n            <Identifier>testEventInfo</Identifier>\\n        </EventInfo>\\n    </List>\\n</Data>\\n<RequestId>45391E10-446B-4986-863E-1BA8CC44748F</RequestId>\\n<Success>true</Success>\\n</QueryDeviceOriginalEventDataResponse>","errorExample":""}]',
      'title' => '查询设备上报的原始事件',
      'summary' => '查询指定设备本身上报的原始事件（通过和未通过物模型校验的所有事件）记录。',
      'description' => '## 使用说明
<props="intl">仅可查询最近30天内的事件记录数据。</props>

<props="china">
- 华东2（上海）、华北2（北京）和华南1（深圳）地域的标准型和尊享型企业版实例：仅可查询存储时效内的数据。数据存储时效，请参见[存储配置](~~464050~~)。
- 其他地域和实例：仅可查询最近30天内的事件记录数据。

</props>

 > 数据存储时间从事件生成当日起开始计算。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceOriginalServiceData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数。数量限制：每页最多可显示50条。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备所属的产品**ProductKey**。

><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备名称。

><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        4 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页标识。第一次请求，服务会返回此Token，第二次请求带上即可。',
            'type' => 'string',
            'required' => false,
            'example' => 'Bo***x44Qx',
          ),
        ),
        5 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的服务调用记录的开始时间。取值为毫秒值时间戳。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1579249498000',
          ),
        ),
        6 => 
        array (
          'name' => 'Identifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的服务标识符。

- 对于弱校验，设备的服务**Identifier**，可在控制台中设备所属的产品的功能定义中查看；也可以调用[QueryThingModel](~~150321~~)，从返回的物模型信息中查看。
- 对于免校验，必须与设备服务上报时自定义的**identifier**一致。',
            'type' => 'string',
            'required' => true,
            'example' => 'Set',
          ),
        ),
        7 => 
        array (
          'name' => 'Asc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中，服务调用记录按时间排序的方式。取值：

- 0：倒序。
- 1：正序。

> **StartTime**必须小于**EndTime**，系统会根据排序方式自动转换。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        8 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。

><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        9 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的服务调用记录的结束时间。取值为毫秒值时间戳。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1579249499000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.device.InvalidIoTId',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的设备服务调用记录。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextPageToken' => 
                  array (
                    'description' => '下一页标识。',
                    'type' => 'string',
                    'example' => 'Bo***x44Qx',
                  ),
                  'NextValid' => 
                  array (
                    'description' => '是否有下一页属性记录。

- **true**：有。
- **false**：没有。

返回**NextValid**为**true**时，可以将**NextPageToken**的值作为下次查询的**NextPageToken**，继续查询本次查询不显示的数据。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ServiceInfo' => 
                      array (
                        'description' => '服务调用记录集合。每个元素代表一个服务调用记录。服务信息请参见**ServiceInfo**下参数。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Identifier' => 
                            array (
                              'description' => '服务标识符。',
                              'type' => 'string',
                              'example' => 'Set',
                            ),
                            'OutputData' => 
                            array (
                              'description' => '服务的输出参数，MAP格式的字符串，结构为`key:value`。',
                              'type' => 'string',
                              'example' => '{\\"code\\":200,\\"data\\":{},\\"id\\":\\"100686\\",\\"message\\":\\"success\\",\\"version\\":\\"1.0\\"}',
                            ),
                            'Time' => 
                            array (
                              'description' => '调用服务的时间。',
                              'type' => 'string',
                              'example' => '1579249499000',
                            ),
                            'InputData' => 
                            array (
                              'description' => '服务的输入参数，MAP格式的字符串，结构为`key:value`。',
                              'type' => 'string',
                              'example' => '{\\"LightAdjustLevel\\":123}',
                            ),
                            'Name' => 
                            array (
                              'description' => '服务名称。',
                              'type' => 'string',
                              'example' => '设置温度',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.device.InvalidIoTId\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextPageToken\\": \\"Bo***x44Qx\\",\\n    \\"NextValid\\": true,\\n    \\"List\\": {\\n      \\"ServiceInfo\\": [\\n        {\\n          \\"Identifier\\": \\"Set\\",\\n          \\"OutputData\\": \\"{\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\":200,\\\\\\\\\\\\\\"data\\\\\\\\\\\\\\":{},\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"100686\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"message\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"success\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"version\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1.0\\\\\\\\\\\\\\"}\\",\\n          \\"Time\\": \\"1579249499000\\",\\n          \\"InputData\\": \\"{\\\\\\\\\\\\\\"LightAdjustLevel\\\\\\\\\\\\\\":123}\\",\\n          \\"Name\\": \\"设置温度\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceOriginalServiceDataResponse>\\n<Data>\\n    <NextValid>true</NextValid>\\n    <NextPageToken>Bo***x44Qx</NextPageToken>\\n    <List>\\n        <ServiceInfo>\\n            <Name>set</Name>\\n            <Time>1517315865198</Time>\\n            <OutputData>{\\"code\\":200,\\"data\\":{},\\"id\\":\\"100686\\",\\"message\\":\\"success\\",\\"version\\":\\"1.0\\"}</OutputData>\\n            <InputData>{\\"LightAdjustLevel\\":123}</InputData>\\n            <Identifier>set</Identifier>\\n        </ServiceInfo>\\n    </List>\\n</Data>\\n<RequestId>A44C818E-FA7F-4765-B1E7-01D14AE01C6A</RequestId>\\n<Success>true</Success>\\n</QueryDeviceOriginalServiceDataResponse>","errorExample":""}]',
      'title' => '查询设备本身调用的原始服务',
      'summary' => '查询指定设备本身调用的原始服务（通过和未通过物模型校验的所有服务）记录。',
      'description' => '## 使用说明
<props="intl">仅可查询最近30天内的服务数据。</props>

<props="china">
- 华东2（上海）、华北2（北京）和华南1（深圳）地域的标准型和尊享型企业版实例：仅可查询存储时效内的数据。数据存储时效，请参见[存储配置](~~464050~~)。
- 其他地域和实例：仅可查询最近30天内的服务数据。

</props>

> 数据存储时间从调用服务当日开始计算。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ClearDeviceDesiredProperty' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要清空期望属性值的设备所属的产品**ProductKey**。
> 如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要清空期望属性值的设备名称。
> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要清空期望属性值的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。
> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        4 => 
        array (
          'name' => 'Identifies',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要清空期望属性值的属性标识符列表。属性标识符个数不能超过10个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'temperature',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Versions' => 
                  array (
                    'description' => '本次清空期望属性值后，对应属性的期望属性值的最新版本号。',
                    'type' => 'string',
                    'example' => '{\\"temperature\\":0}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.device.InvalidFormattedDeviceName',
            'errorMessage' => 'The DeviceName format is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.device.NotSupportExemptionValidateType',
            'errorMessage' => 'The feature does not support the specified verification type.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.prod.NotExistedProduct',
            'errorMessage' => 'The specified product does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.prod.QueryProductPropertyFailed',
            'errorMessage' => 'An error occurred while querying the product property.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.check.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'Iot.digitaltwin.DTInstanceInvalidThingType',
            'errorMessage' => 'The digital twin operation is not supported.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.check.NullParameter',
            'errorMessage' => 'Specify parameter is null.',
          ),
          7 => 
          array (
            'errorCode' => 'iot.device.CanNotSetReadOnlyProperty',
            'errorMessage' => 'Cannot set read only property.',
          ),
          8 => 
          array (
            'errorCode' => 'iot.device.DeviceIsDisable',
            'errorMessage' => 'The specified device has been disabled.',
          ),
          9 => 
          array (
            'errorCode' => 'iot.device.InvalidIoTId',
            'errorMessage' => 'The specified device ID is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'iot.device.NullDeviceName',
            'errorMessage' => 'The DeviceName parameter cannot be empty.',
          ),
          11 => 
          array (
            'errorCode' => 'iot.prod.NullProductKey',
            'errorMessage' => 'The ProductKey parameter cannot be empty.',
          ),
          12 => 
          array (
            'errorCode' => 'iot.prod.InvalidFormattedProductkey',
            'errorMessage' => 'The ProductKey format is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'iot.common.InvalidTenant',
            'errorMessage' => 'The Invalid tenant.',
          ),
          14 => 
          array (
            'errorCode' => 'iot.prod.QueryPropertyNotFound',
            'errorMessage' => 'Query property not found.',
          ),
          15 => 
          array (
            'errorCode' => 'iot.device.ClearPropertyDesiredFailed',
            'errorMessage' => 'Failed to clear desired value of property.',
          ),
          16 => 
          array (
            'errorCode' => 'iot.prod.QueryProductAbilitiesNotFound',
            'errorMessage' => 'query product abilities not found.',
          ),
          17 => 
          array (
            'errorCode' => 'iot.Device.NotExistedDevice',
            'errorMessage' => 'This device does not exist.',
          ),
          18 => 
          array (
            'errorCode' => 'iot.prod.NullAbilityIdentifier',
            'errorMessage' => 'You must specify a feature identifier.',
          ),
          19 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Versions\\": \\"{\\\\\\\\\\\\\\"temperature\\\\\\\\\\\\\\":0}\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ClearDeviceDesiredPropertyResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <Versions>{\\"temperature\\":0}</Versions>\\n</Data>\\n<Code/>\\n<Success>true</Success>\\n</ClearDeviceDesiredPropertyResponse>","errorExample":""}]',
      'title' => 'ClearDeviceDesiredProperty',
      'summary' => '调用该接口清空设备已设置的期望属性值。',
      'description' => '## 使用说明
- 调用本接口时，必须传入要清空的属性标识符（**Identifies**）。如果不传入**Identifies**，调用会失败。
- 单次调用本接口，**Identifies**最多可传入10个属性标识符。
- 调用本接口清空期望属性值成功后，调用[QueryDeviceDesiredProperty](~~107566~~)接口查询期望属性值时，会返回对应参数**Identifier**（属性标识符），不会返回对应参数**Value**了。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务的描述信息。长度不超过100个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'jobDescription',
          ),
        ),
        2 => 
        array (
          'name' => 'JobDocument',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下发给设备的任务执行规则文件。数据格式为JSON，长度不超过65536个字符。

更多信息，请参见下文“JobDocument定义”。',
            'type' => 'string',
            'required' => true,
            'example' => '{ "serviceIdentifier": "test_service", "params": { "key1": "value1", "key2": "value2" } } ',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务类型。取值：
- **INVOKE_SERVICE**：设备批量服务调用任务。
- **SET_PROPERTY**：设备批量属性设置任务。
- **PUB**：Pub批量消息推送任务。
- **CUSTOM_JOB**：自定义任务。
',
            'type' => 'string',
            'required' => true,
            'example' => 'INVOKE_SERVICE',
          ),
        ),
        4 => 
        array (
          'name' => 'JobFile',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '自定义任务中下发给设备的文件。

仅**Type**为**CUSTOM_JOB**时，可传入此参数，且为非必传参数。

更多信息，请参见下文“JobFile定义”。

',
            'type' => 'object',
            'required' => false,
            'example' => '{   "fileKey":"5cc34***f9/tazJ***s",   "signMethod":"Sha256",   "sign":"***" }',
          ),
        ),
        5 => 
        array (
          'name' => 'JobName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务名称。支持中文、英文字母、数字和下划线（_），长度范围为4~30个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'oneJob',
          ),
        ),
        6 => 
        array (
          'name' => 'TimeoutConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '任务下作业执行的超时配置，数据格式为JSON，长度不超过8192个字符。

更多信息，请参见下文“TimeoutConfig定义”。',
            'type' => 'object',
            'required' => false,
            'example' => '{"inProgressTimeoutInMinutes": 60}',
          ),
        ),
        7 => 
        array (
          'name' => 'RolloutConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '任务下作业推送速率配置，数据格式为JSON，长度不超过8192个字符。

更多信息，请参见下文“RolloutConfig定义”。',
            'type' => 'object',
            'required' => false,
            'example' => '{"maximumPerMinute": 1000}',
          ),
        ),
        8 => 
        array (
          'name' => 'TargetConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '设备任务的目标设备配置。

更多信息，请参见下文“TargetConfig”。',
            'type' => 'object',
            'required' => true,
            'example' => '{"targetType":"PRODUCT_KEY","targetProduct":"a1j***3d"}',
          ),
        ),
        9 => 
        array (
          'name' => 'ScheduledTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务调度时间的毫秒数。取值范围：当前时间的10分钟后到7天之间。

- 不传入此参数：任务创建后，立即初始化并调度执行。
- 传入此参数：任务创建后，先初始化，等到设置的调度时间后，才开始调度执行。 ',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1557062301656',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'JobId' => 
              array (
                'description' => '任务ID。任务的全局唯一标识符。',
                'type' => 'string',
                'example' => 'XUbmsMHmkqv0PiAG****010001',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"JobId\\": \\"XUbmsMHmkqv0PiAG****010001\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateJobResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<JobId>XUbmsMHmkqv0PiAG****010001</JobId>\\n<Success>true</Success>\\n</CreateJobResponse>","errorExample":""}]',
      'title' => '创建任务',
      'summary' => '调用该接口创建设备任务。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

  > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '**TargetConfig定义**

|名称|类型|描述|
|------|------|------|
|TargetType|String|目标设备的配置类型，可选值：<br>**DEVICE\\_LIST**，表示设备列表。<br>**GROUP\\_ID**，表示设备分组ID。<br>**PRODUCT\\_KEY**，表示设备所属产品的**ProductKey**。|
|TargetDevices|List|设备任务的目标设备。仅**TargetType**为**DEVICE\\_LIST**时，传入此参数。<br>此参数最多传入200个设备。<br>更多信息，请参见下文“TargetDevice定义”。|
|TargetGroup|String|设备任务的目标设备，所属设备分组的标识符（GroupID）。仅**TargetType**为**GROUP\\_ID**时，传入此参数。<br>不支持设置为设备动态分组的ID。<br>此设备分组中最多包含10万个设备。|
|TargetProduct|String|设备任务的目标设备，所属产品的**ProductKey**。仅**TargetType**为**PRODUCT\\_KEY**时，传入此参数。<br>此产品下最多包含10万个设备。|

**TargetDevice定义**
|名称|类型|描述|
|------|------|------|
|IotId|String|目标设备的设备ID。|
|ProductKey|String|目标设备所属产品的**ProductKey**。<br>如果传入该参数，需同时传入**DeviceName**。|
|DeviceName|String|目标设备名称。<br>如果传入该参数，需同时传入**ProductKey**。|

示例1
```
{
	"TargetDevices":
	[
		{
			"IotId":"OPx***00101",
			"ProductKey":"a1A***n",
			"DeviceName":"devicenew"
		}
	],
	"TargetType":"DEVICE_LIST"
}
```
示例2
```
{
	"targetGroup":"rY2***01",
	"targetType":"GROUP_ID"
}
```
示例3
```
{
	"targetType":"PRODUCT_KEY",
	"targetProduct":"a1j***3d"
}
```


**RolloutConfig定义**
|名称|类型|描述|
|------|------|------|
|maximumPerMinute|Integer|任务下每分钟推送的作业数量。默认值是1000。取值范围为50~1000。|
|messageQoS|String|发送消息类型，仅对自定义任务和Pub批量消息推送任务生效。可取值：<br>**QoS0**，表示最多发送一次。<br>**QoS1**，表示最少发送一次。如果QoS1消息未接收到PUBACK消息，会在设备重连时，重新推送给设备。|

示例
```
{
  "maximumPerMinute": 1000,
  "messageQoS":"QoS1"
}
```

**TimeoutConfig定义**
|名称|类型|描述|
|------|------|------|
|inProgressTimeoutInMinutes|Integer|任务下作业执行的超时时间，单位为分钟。<br>该参数仅对自定义任务生效。<br>从任务开始执行（状态更新为**IN\\_PROGRESS**）时计算，如果超过了超时时间，任务下作业仍未执行完成，将被自动设置为TIMED\\_OUT状态。<br>取值范围：<br>**INVOKE\\_SERVICE**类型任务：最大值为5，最小值为1，默认值为1。<br>**SET\\_PROPERTY**类型任务：最大值为5，最小值为1，默认值为1。<br>**CUSTOM\\_JOB**类型任务：最大值为3600，最小值为1，默认值为60。|

示例
```
{
  "inProgressTimeoutInMinutes": 60
}
```

**JobDocument定义**
**INVOKE\\_SERVICE**类型的任务用于批量调用设备服务，功能与[InvokeThingsService](~~96242~~)相似。
|名称|类型|描述|
|------|------|------|
|serviceIdentifier|String|服务的标识符Identifier。<br>您可在物联网平台控制台对应实例下，单击**设备管理 > 产品**，找到设备所属产品，在产品详情的**功能定义**中查看。|
|params|Object|要调用服务的入参信息。更多信息，请参见下文“params定义”。|

**params定义**
|名称|类型|描述|
|------|------|------|
|key|String|输入参数的标识符。您在创建该服务时，设置的输入参数的标识符。<br>您可在物联网平台控制台，设备所属产品的功能定义页面，从该产品的物模型，或单击该服务对应的编辑按钮，查看您设置的输入参数。|
|value|String|指定参数值。该值需在您设置的输入参数的取值范围内。|

示例
```
{
	"serviceIdentifier": "test_service",
	"params": {
		"key1": "value1",
		"key2": "value2"
	}
}
```

**SET\\_PROPERTY**类型的Job用于批量设置设备属性值，功能与[SetDevicesProperty](~~96243~~)相似。
|名称|类型|描述|
|------|------|------|
|params|Object|要设置的属性信息，组成为key:value。更多信息，请参见下文“params定义”。|

**params定义**
|名称|类型|描述|
|------|------|------|
|key|String|要设置属性的标识符identifier。您可在物联网平台控制台中，设备所属产品的功能定义中查看。<br>设置的属性必需是读写型。如果您指定了一个只读型的属性，设置将会失败。|
|value|String|属性值。取值需和您定义属性的数据类型和取值范围保持一致。|

```
{
	"params": {
			"key1": "value1",
			"key2": "value2"
	 }
}
```

**CUSTOM_JOB**为自定义任务。
|名称|类型|描述|
|------|------|------|
|key|String|自定义属性。|
|value|String|自定义属性值。|


```
{
  "key":"value"
}
```

**JobFile定义**
|名称|类型|描述|
|------|------|------|
|fileKey|String|使用**GenerateFileUploadURL**接口生成的文件**Key**。<br>创建任务前，必须先上传文件。具体操作，请参见[GenerateFileUploadURL](~~198575~~)的“使用说明”。<br>创建任务时会校验文件是否已经上传。|
|signMethod|String|签名方法，可取值MD5和SHA256。|
|sign|String|签名，通过URL上传的文件的根据相应的签名方法生成的签名参数。|

示例
```
{
  "fileKey":"5cc34***/tazJff***",
  "signMethod":"",
  "sign":""
}
```


调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GenerateFileUploadURL' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。

> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'FileSuffix',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件扩展名。可选：**bin**、**apk**、**tar**、**gz**、**tar.gz**、**zip**、**gzip**。
',
            'type' => 'string',
            'required' => true,
            'example' => 'bin',
          ),
        ),
        2 => 
        array (
          'name' => 'BizCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件所属的业务场景编码。

设备任务文件使用**DEVICE_JOB_FILE**。',
            'type' => 'string',
            'required' => true,
            'example' => 'DEVICE_JOB_FILE',
          ),
        ),
        3 => 
        array (
          'name' => 'FileName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件名称。名称不可包含短划线（-）、英文句号（.）、星号（*）、正斜线（/）、井号（#）、百分号（%）、and（&）、at（@）、反斜线（\\），长度不可超过64个字符。

如果不传入该参数，系统将为文件自动生成随机字符串作为文件名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'file1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的文件上传信息。详情参见以下参数信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Key' => 
                  array (
                    'description' => '调用OSS的PostObject接口上传对象（即文件）的名称，包含OSS对象的完整路径。',
                    'type' => 'string',
                    'example' => 'subpath/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.suffix',
                  ),
                  'OssAccessKeyId' => 
                  array (
                    'description' => 'OSS Bucket拥有者的AccessKey ID。

该OSS Bucket将存储文件。',
                    'type' => 'string',
                    'example' => 'cS8uRRy54Rsz****',
                  ),
                  'Signature' => 
                  array (
                    'description' => '根据**AccessKey Secret**和**Policy**计算出的签名信息。调用OSS API时，OSS验证该签名信息，从而确认Post请求的合法性。',
                    'type' => 'string',
                    'example' => 'v6lViO4FBvfquajQjg20K5hK****',
                  ),
                  'Host' => 
                  array (
                    'description' => 'OSS的接入域名。',
                    'type' => 'string',
                    'example' => 'https://iotx-bucket-name.oss-***.aliyuncs.com',
                  ),
                  'Policy' => 
                  array (
                    'description' => 'OSS通过该参数验证请求表单域的合法性。',
                    'type' => 'string',
                    'example' => 'eyJleHBpcmF****',
                  ),
                  'ObjectStorage' => 
                  array (
                    'description' => '对象存储类型。默认为OSS。',
                    'type' => 'string',
                    'example' => 'OSS',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Key\\": \\"subpath/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.suffix\\",\\n    \\"OssAccessKeyId\\": \\"cS8uRRy54Rsz****\\",\\n    \\"Signature\\": \\"v6lViO4FBvfquajQjg20K5hK****\\",\\n    \\"Host\\": \\"https://iotx-bucket-name.oss-***.aliyuncs.com\\",\\n    \\"Policy\\": \\"eyJleHBpcmF****\\",\\n    \\"ObjectStorage\\": \\"OSS\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GenerateFileUploadURLResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <Policy>eyJleHBpcmF****</Policy>\\n    <Signature>v6lViO4FBvfquajQjg20K5hK****</Signature>\\n    <ObjectStorage>OSS</ObjectStorage>\\n    <Host>https://iotx-bucket-name.oss-***.aliyuncs.com</Host>\\n    <OssAccessKeyId>cS8uRRy54Rsz****</OssAccessKeyId>\\n    <Key>subpath/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.suffix</Key>\\n</Data>\\n<Success>true</Success>\\n</GenerateFileUploadURLResponse>","errorExample":""}]',
      'title' => '生成文件上传到OSS的信息',
      'summary' => '调用该接口生成文件上传到OSS的信息。',
      'description' => '## 使用说明

该接口为阿里云物联网平台中，设备管理相关业务通用的文件上传接口，文件上传完成后，请按照对应业务接口的要求传递文件的信息。

步骤如下：

1. 调用本接口生成文件上传到对象存储（OSS）的信息。
本接口的返回参数是调用OSS [PostObject](~~31988~~)上传文件的请求参数，包含**Key**、**OSSAccessKeyId**、**Signature**和**Policy**。

2. 请在本接口返回结果后的1分钟之内，使用[OSS SDK](~~52834~~)调用[PostObject](~~31988~~)接口上传文件。上传文件的代码示例，请参见下文“返回参数的用途”。

    > 本接口返回的参数信息有效期为1分钟，请在1分钟内上传文件。上传的文件大小不能超过1,000 MB。


3. 文件上传完成后，请在60分钟内，调用对应业务接口，否则上传的文件将被系统定期自动清理。

例如，创建自定义类型的设备任务时，如果需要传入设备文件，请先使用该接口上传文件，再把相关的文件信息作为请求参数，来调用[CreateJob](~~198574~~)接口。
    

## 限制说明

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

  > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => '## 返回参数的用途

调用OSS [PostObject](~~31988~~)接口时，使用本接口的返回参数值作为请求参数值，将您编辑好的文件上传到对象存储（OSS）。

关于上传文件的SDK示例，请参见[文件上传](~~84788~~)。

以下是向对象存储OSS上传文件的Java代码示例。

- 在pom.xml中添加以下依赖。
```<dependency>
  <groupId>org.apache.httpcomponents</groupId>
  <artifactId>httpclient</artifactId>
  <version>4.5.3</version>
</dependency>

<dependency>
  <groupId>org.apache.httpcomponents</groupId>
  <artifactId>httpmime</artifactId>
  <version>4.5.10</version>
</dependency>
```

- 上传文件的代码如下。
```
public static boolean postObject(String key,
                                  String host,
                                  String policy,
                                  String ossAccessKeyId,
                                  String signature,
                                  String data) throws IOException {
  CloseableHttpClient httpClient = HttpClients.createDefault();
  HttpPost uploadFile = new HttpPost(host);

  MultipartEntityBuilder builder = MultipartEntityBuilder.create();
  builder.addTextBody("key", key, ContentType.TEXT_PLAIN);
  builder.addTextBody("policy", policy, ContentType.TEXT_PLAIN);
  builder.addTextBody("OSSAccessKeyId", ossAccessKeyId, ContentType.TEXT_PLAIN);
  builder.addTextBody("signature", signature, ContentType.TEXT_PLAIN);
  builder.addTextBody("success_action_status", "200", ContentType.TEXT_PLAIN);
  builder.addBinaryBody("file", data.getBytes());

  HttpEntity multipart = builder.build();
  uploadFile.setEntity(multipart);
  CloseableHttpResponse response = httpClient.execute(uploadFile);

  if (response.getStatusLine().getStatusCode() == 200) {
    return true;
  }

  return false;
}
```',
      'extraInfo' => ' ',
    ),
    'UpdateJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。

> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务描述信息。长度不超过100个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'jobDescription',
          ),
        ),
        2 => 
        array (
          'name' => 'TimeoutConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '任务下作业执行的超时时间。

更多信息，请参见下文“TimeoutConfig定义”。
',
            'type' => 'object',
            'required' => false,
            'example' => '{"inProgressTimeoutInMinutes": 60}',
          ),
        ),
        3 => 
        array (
          'name' => 'RolloutConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '任务下每分钟推送的作业数量。取值范围为50~1000。',
            'type' => 'object',
            'required' => false,
            'example' => '{"maximumPerMinute": 1000}',
          ),
        ),
        4 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。任务的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'XUbmsMHmkqv0PiAG****010001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。 
',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateJobResponse>\\r\\n <RequestId>B78B4FD1-AE89-417B-AD55-367EBB0C6759</RequestId>\\r\\n <Success>true</Success>\\r\\n</UpdateJobResponse>","errorExample":""}]',
      'title' => '更新作业',
      'summary' => '调用该接口更新任务下作业配置。',
      'description' => '## 使用说明

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '**RolloutConfig定义**
|名称|类型|描述|
|------|------|------|
|maximumPerMinute|Integer|任务下每分钟推送的作业数量。默认值是1000。取值范围为50~1000。|
|messageQoS|String|发送消息类型，仅对自定义任务和Pub批量消息推送任务生效。可取值：<br>**QoS0**，表示最多发送一次。<br>**QoS1**，表示最少发送一次。如果QoS1消息未接收到PUBACK消息，会在设备重连时，重新推送给设备。|

示例
```
{
  "maximumPerMinute": 1000,
  "messageQos":"Qos1"
}
```

**TimeoutConfig定义**
|名称|类型|描述|
|------|------|------|
|inProgressTimeoutInMinutes|Integer|任务下作业执行的超时时间，单位为分钟。<br>该参数仅对自定义任务生效。<br>从任务开始执行（状态更新为**IN\\_PROGRESS**）时计算，如果超过了超时时间，任务下作业仍未执行完成，将被自动设置为TIMED\\_OUT状态。<br>取值范围：最大值为3600，最小值为1，默认值为60。|

示例
```
{
  "inProgressTimeoutInMinutes": 60
}
```
 
调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。任务的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => '450407b***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'A6BEAB33-03E6-4CE0-A94F-9E24C5512BAD',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的任务详情信息，请参见以下参数说明。',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => '任务类型。取值：
- **INVOKE_SERVICE**：设备批量服务调用任务。
- **SET_PROPERTY**：设备批量属性设置任务。
- **PUB**：Pub批量消息推送任务。
- **CUSTOM_JOB**：自定义任务。',
                    'type' => 'string',
                    'example' => 'SET_PROPERTY',
                  ),
                  'Status' => 
                  array (
                    'description' => '任务状态。取值范围：

- **INITIALIZING**：初始化。
- **WAITING**：待调度。
- **IN_PROGRESS**：执行中。
- **COMPLETED**：已完成。
- **CANCELLING**：取消中。
- **CANCELLED**：已取消。
- **REMOVING**：删除中。
- **TIMED_OUT**：已超时。',
                    'type' => 'string',
                    'example' => 'CANCELLED',
                  ),
                  'Description' => 
                  array (
                    'description' => '任务的描述信息。',
                    'type' => 'string',
                    'example' => 'jobDescription',
                  ),
                  'JobName' => 
                  array (
                    'description' => '任务名称。',
                    'type' => 'string',
                    'example' => 'tes',
                  ),
                  'UtcModified' => 
                  array (
                    'description' => '任务信息修改时间。',
                    'type' => 'string',
                    'example' => '2020-12-13T04:10:00.000Z',
                  ),
                  'JobId' => 
                  array (
                    'description' => '任务ID。任务的全局唯一标识符。',
                    'type' => 'string',
                    'example' => '450407b***',
                  ),
                  'UtcCreate' => 
                  array (
                    'description' => '任务创建时间。',
                    'type' => 'string',
                    'example' => '2020-12-13T04:09:51.000Z',
                  ),
                  'ScheduledTime' => 
                  array (
                    'description' => '任务调度时间的毫秒数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1557062301656',
                  ),
                  'JobDocument' => 
                  array (
                    'description' => '下发给设备的任务执行规则文件',
                    'type' => 'string',
                    'example' => '{ "serviceIdentifier": "test_service", "params": { "key1": "value1", "key2": "value2" } } ',
                  ),
                  'RolloutConfig' => 
                  array (
                    'description' => '任务下作业推送速率配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MaximumPerMinute' => 
                      array (
                        'description' => '任务下每分钟作业推送数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '10',
                      ),
                      'MessageQoS' => 
                      array (
                        'description' => '发送消息类型，仅对自定义任务和Pub批量消息推送任务包含该参数。可取值：

- **QoS0**，表示最多发送一次。
- **QoS1**，表示最少发送一次。如果QoS1消息未接收到PUBACK消息，会在设备重连时，重新推送给设备。',
                        'type' => 'string',
                        'example' => 'Qos1',
                      ),
                    ),
                  ),
                  'TimeoutConfig' => 
                  array (
                    'description' => '任务下作业执行的超时配置',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'InProgressTimeoutInMinutes' => 
                      array (
                        'description' => '任务下作业执行的超时时间，单位为分钟。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                    ),
                  ),
                  'JobFile' => 
                  array (
                    'description' => '任务文件的下载信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'FileUrl' => 
                      array (
                        'description' => '任务文件的下载地址，地址有效时间为30分钟。',
                        'type' => 'string',
                        'example' => 'https://iotx-***.oss-cn-shanghai.aliyuncs.com/job***/7u***.sh?Expires=16***&OSSAccessKeyId=LTA***&Signature=TTTejn***',
                      ),
                      'SignMethod' => 
                      array (
                        'description' => '签名方法，可取值MD5和SHA256。',
                        'type' => 'string',
                        'example' => 'SHA256',
                      ),
                      'Sign' => 
                      array (
                        'description' => '签名，通过URL上传的文件，根据相应的签名方法生成的签名参数。

',
                        'type' => 'string',
                        'example' => 'TTTejn***',
                      ),
                    ),
                  ),
                  'TargetConfig' => 
                  array (
                    'description' => '设备任务的目标设备配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'TargetProduct' => 
                      array (
                        'description' => '目标设备所属产品的ProductKey。',
                        'type' => 'string',
                        'example' => 'nCwfSBzc***',
                      ),
                      'TargetGroup' => 
                      array (
                        'description' => '目标设备所属设备分组的标识符（GroupID）。',
                        'type' => 'string',
                        'example' => '1234',
                      ),
                      'TargetType' => 
                      array (
                        'description' => '目标设备的配置类型，取值：   
- DEVICE_LIST：设备列表。
- GROUP_ID：设备分组ID。
- PRODUCT_KEY：产品ProductKey。',
                        'type' => 'string',
                        'example' => 'DEVICE_LIST',
                      ),
                      'TargetDevices' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'targetDevices' => 
                          array (
                            'description' => '目标设备列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'DeviceName' => 
                                array (
                                  'description' => '设备名称。',
                                  'type' => 'string',
                                  'example' => 'a1Ix***',
                                ),
                                'ProductKey' => 
                                array (
                                  'description' => '设备所属产品的ProductKey。',
                                  'type' => 'string',
                                  'example' => 'nCwfSBzc***',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"A6BEAB33-03E6-4CE0-A94F-9E24C5512BAD\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Type\\": \\"SET_PROPERTY\\",\\n    \\"Status\\": \\"CANCELLED\\",\\n    \\"Description\\": \\"jobDescription\\",\\n    \\"JobName\\": \\"tes\\",\\n    \\"UtcModified\\": \\"2020-12-13T04:10:00.000Z\\",\\n    \\"JobId\\": \\"450407b***\\",\\n    \\"UtcCreate\\": \\"2020-12-13T04:09:51.000Z\\",\\n    \\"ScheduledTime\\": 1557062301656,\\n    \\"JobDocument\\": \\"{ \\\\\\"serviceIdentifier\\\\\\": \\\\\\"test_service\\\\\\", \\\\\\"params\\\\\\": { \\\\\\"key1\\\\\\": \\\\\\"value1\\\\\\", \\\\\\"key2\\\\\\": \\\\\\"value2\\\\\\" } } \\",\\n    \\"RolloutConfig\\": {\\n      \\"MaximumPerMinute\\": 10,\\n      \\"MessageQoS\\": \\"Qos1\\"\\n    },\\n    \\"TimeoutConfig\\": {\\n      \\"InProgressTimeoutInMinutes\\": 5\\n    },\\n    \\"JobFile\\": {\\n      \\"FileUrl\\": \\"https://iotx-***.oss-cn-shanghai.aliyuncs.com/job***/7u***.sh?Expires=16***&OSSAccessKeyId=LTA***&Signature=TTTejn***\\",\\n      \\"SignMethod\\": \\"SHA256\\",\\n      \\"Sign\\": \\"TTTejn***\\"\\n    },\\n    \\"TargetConfig\\": {\\n      \\"TargetProduct\\": \\"nCwfSBzc***\\",\\n      \\"TargetGroup\\": \\"1234\\",\\n      \\"TargetType\\": \\"DEVICE_LIST\\",\\n      \\"TargetDevices\\": {\\n        \\"targetDevices\\": [\\n          {\\n            \\"DeviceName\\": \\"a1Ix***\\",\\n            \\"ProductKey\\": \\"nCwfSBzc***\\"\\n          }\\n        ]\\n      }\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryJobResponse>\\n  <RequestId>A6BEAB33-03E6-4CE0-A94F-9E24C5512BAD</RequestId>\\n  <Data>\\n        <Status>CANCELLED</Status>\\n\\t\\t<ScheduledTime>1557062301656</ScheduledTime>\\n        <Type>SET_PROPERTY</Type>\\n        <TimeoutConfig>\\n              <InProgressTimeoutInMinutes>5</InProgressTimeoutInMinutes>\\n        </TimeoutConfig>\\n        <Description>jobDescription</Description>\\n        <UtcCreate>2020-12-13T04:09:51.000Z</UtcCreate>\\n        <JobFile>\\n              <FileUrl>https://iotx-***.oss-cn-shanghai.aliyuncs.com/job***/7u***.sh?Expires=16***&amp;OSSAccessKeyId=LTA***&amp;Signature=TTTejn***</FileUrl>\\n              <Sign>1235</Sign>\\n              <SignMethod>SHA256</SignMethod>\\n        </JobFile>\\n        <JobDocument>{}</JobDocument>\\n        <JobName>test</JobName>\\n        <UtcModified>2020-12-13T04:10:00.000Z</UtcModified>\\n        <JobId>450407b***</JobId>\\n        <TargetConfig>\\n              <TargetDevices>\\n                    <targetDevices>\\n                          <ProductKey>nCwf***</ProductKey>\\n                          <DeviceName>a1IxS***</DeviceName>\\n                    </targetDevices>\\n                    <targetDevices>\\n                          <ProductKey>24VI***</ProductKey>\\n                          <DeviceName>a1***</DeviceName>\\n                    </targetDevices>\\n                    <targetDevices>\\n                          <ProductKey>6NDWQ***</ProductKey>\\n                          <DeviceName>a1I***</DeviceName>\\n                    </targetDevices>\\n                    <targetDevices>\\n                          <ProductKey>EQtTJT***</ProductKey>\\n                          <DeviceName>a1IxS***</DeviceName>\\n                    </targetDevices>\\n                    <targetDevices>\\n                          <ProductKey>rUdc33Vr***</ProductKey>\\n                          <DeviceName>a1IxS***</DeviceName>\\n                    </targetDevices>\\n              </TargetDevices>\\n              <TargetType>DEVICE_LIST</TargetType>\\n        </TargetConfig>\\n  </Data>\\n  <Success>true</Success>\\n</QueryJobResponse>","errorExample":""}]',
      'title' => '任务管理',
      'summary' => '查询任务详情。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。

> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务状态。取值范围：

- **INITIALIZING**：初始化。
- **WAITING**：待调度。
- **IN_PROGRESS**：执行中。
- **COMPLETED**：已完成。
- **CANCELLING**：取消中。
- **CANCELLED**：已取消。
- **REMOVING**：删除中。
- **TIMED_OUT**：已超时。',
            'type' => 'string',
            'required' => false,
            'example' => 'IN_PROGRESS',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页展示的任务个数。最大值为50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BF449394-1C7D-4144-B7C4-9C3FA29F8B64',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '当前页码任务个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'Total' => 
              array (
                'description' => '返回的任务总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'Page' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'data' => 
                  array (
                    'description' => '调用成功时，返回的任务详情信息，请参见以下参数说明。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '任务类型。',
                          'type' => 'string',
                          'example' => 'CUSTOM_JOB',
                        ),
                        'Status' => 
                        array (
                          'description' => '任务状态。',
                          'type' => 'string',
                          'example' => 'COMPLETED',
                        ),
                        'JobName' => 
                        array (
                          'description' => '任务名称。',
                          'type' => 'string',
                          'example' => 'MyTestJobOEfwJN',
                        ),
                        'Description' => 
                        array (
                          'description' => '任务的描述信息。',
                          'type' => 'string',
                          'example' => 'TestDescription',
                        ),
                        'UtcModified' => 
                        array (
                          'description' => '任务信息修改时间。',
                          'type' => 'string',
                          'example' => '2019-05-21T17:15:46.000Z',
                        ),
                        'JobId' => 
                        array (
                          'description' => '任务ID。任务的全局唯一标识符。',
                          'type' => 'string',
                          'example' => 'Z20nyanW5****010001',
                        ),
                        'UtcCreate' => 
                        array (
                          'description' => '任务创建时间。',
                          'type' => 'string',
                          'example' => '2019-05-21T11:45:37.000Z',
                        ),
                        'ScheduledTime' => 
                        array (
                          'description' => '任务调度时间的毫秒数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1557062301656',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BF449394-1C7D-4144-B7C4-9C3FA29F8B64\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 5,\\n  \\"Total\\": 20,\\n  \\"Page\\": 1,\\n  \\"Data\\": {\\n    \\"data\\": [\\n      {\\n        \\"Type\\": \\"CUSTOM_JOB\\",\\n        \\"Status\\": \\"COMPLETED\\",\\n        \\"JobName\\": \\"MyTestJobOEfwJN\\",\\n        \\"Description\\": \\"TestDescription\\",\\n        \\"UtcModified\\": \\"2019-05-21T17:15:46.000Z\\",\\n        \\"JobId\\": \\"Z20nyanW5****010001\\",\\n        \\"UtcCreate\\": \\"2019-05-21T11:45:37.000Z\\",\\n        \\"ScheduledTime\\": 1557062301656\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListJobResponse>\\n<PageSize>5</PageSize>\\n<RequestId>BF449394-1C7D-4144-B7C4-9C3FA29F8B64</RequestId>\\n<Total>20</Total>\\n<Page>1</Page>\\n<Data>\\n    <data>\\n        <Status>COMPLETED</Status>\\n        <Type>CUSTOM_JOB</Type>\\n        <ScheduledTime>1557062301656</ScheduledTime>\\n        <Description>TestDescription</Description>\\n        <UtcCreate>2019-05-21T13:03:52.000Z</UtcCreate>\\n        <JobName>MyTestJobIax6Eq</JobName>\\n        <UtcModified>2019-05-21T17:39:10.000Z</UtcModified>\\n        <JobId>sGWotg***4F010001</JobId>\\n    </data>\\n    <data>\\n        <Status>COMPLETED</Status>\\n        <Type>CUSTOM_JOB</Type>\\n        <ScheduledTime>1557064501656</ScheduledTime>\\n        <Description>TestDescription</Description>\\n        <UtcCreate>2019-05-21T11:45:37.000Z</UtcCreate>\\n        <JobName>MyTestJobOEfwJN</JobName>\\n        <UtcModified>2019-05-21T17:15:46.000Z</UtcModified>\\n        <JobId>Z20nyanW5***010001</JobId>\\n    </data>\\n</Data>\\n<Success>true</Success>\\n</ListJobResponse>","errorExample":""}]',
      'title' => '获取任务列表',
      'summary' => '调用该接口查询阿里云账号下的任务列表。',
      'description' => '## 使用说明

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CancelJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。

> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。任务的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'XUbmsMHmkqv0PiAG****010001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C25255EA-9F6E-4E04-85FE-AC1E9C136EBB',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"C25255EA-9F6E-4E04-85FE-AC1E9C136EBB\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CancelJobResponse>\\n<RequestId>C25255EA-9F6E-4E04-85FE-AC1E9C136EBB</RequestId>\\n<Success>true</Success>\\n</CancelJobResponse>","errorExample":""}]',
      'title' => '取消任务',
      'summary' => '调用该接口取消任务的执行。',
      'description' => '## 使用说明



- 取消任务过程中，任务处于**CANCELLING**状态。如果对该状态任务，重复调用CancelJob，系统直接返回失败。

- 单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
 
    > RAM用户共享阿里云账号配额。 ',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。

> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。任务的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'XUbmsMHmkqv0PiAG****010001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常 ',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C25255EA-9F6E-4E04-85FE-AC1E9C136EBB',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常 \\",\\n  \\"RequestId\\": \\"C25255EA-9F6E-4E04-85FE-AC1E9C136EBB\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteJobResponse>\\n<RequestId>C25255EA-9F6E-4E04-85FE-AC1E9C136EBB</RequestId>\\n<Success>true</Success>\\n</DeleteJobResponse>","errorExample":""}]',
      'title' => '删除任务',
      'summary' => '调用该接口删除任务。',
      'description' => '## 使用说明

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。

> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'Limit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示的记录数。默认值为10，最大值为50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。任务的全局唯一标识符。

> 如果传入Device参数，此参数不传。',
            'type' => 'string',
            'required' => false,
            'example' => 'sGWotgRk***010001',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页标识。首次查询可不传入值。如果存在下一页，服务会返回NextToken值，下次请求时传入。

NextToken值有效时间为1分钟。失效后，将返回对应的错误码。',
            'type' => 'string',
            'required' => false,
            'example' => '22dhgg***',
          ),
        ),
        4 => 
        array (
          'name' => 'Device',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '设备信息。更多信息，请参见下文“Device定义”。

> 如果传入JobId参数，此参数不传。',
            'type' => 'object',
            'required' => false,
            'example' => '{}',
          ),
        ),
        5 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务作业的状态。取值范围：

- **QUEUED**：待调度。
- **SENT**：已调度。
- **IN_PROGRESS**：执行中。
- **FAILED**：失败。
- **REJECTED**：已拒绝。
- **TIMED_OUT**：已超时。
- **SUCCEEDED**：已成功。
- **CANCELLED**：已取消。',
            'type' => 'string',
            'required' => false,
            'example' => 'QUEUED',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'NextToken' => 
              array (
                'description' => '下一页标识。如果存在下一页，服务会返回NextToken值，下次请求时传入。

NextToken值有效时间为1分钟。失效后，将返回对应的错误码。',
                'type' => 'string',
                'example' => '223sdf***',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '512FF8FD-A97F-4AAF-B0A2-7BE3D3A19BB3',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'data' => 
                  array (
                    'description' => '调用成功时，返回任务下作业详情，请参见以下参数说明。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '任务作业的状态。

- **QUEUED**：待调度。
- **SENT**：已调度。
- **IN_PROGRESS**：执行中。
- **FAILED**：失败。
- **REJECTED**：已拒绝。
- **TIMED_OUT**：已超时。
- **SUCCEEDED**：成功。
- **CANCELLED**：已取消。
',
                          'type' => 'string',
                          'example' => 'SUCCEEDED',
                        ),
                        'UtcQueueTime' => 
                        array (
                          'description' => '作业的排队时间。',
                          'type' => 'string',
                          'example' => '2019-05-21T13:03:53.000Z',
                        ),
                        'ProductKey' => 
                        array (
                          'description' => '设备所属产品的ProductKey。',
                          'type' => 'string',
                          'example' => 'a1S0OM***',
                        ),
                        'Progress' => 
                        array (
                          'description' => '任务下作业执行进度。',
                          'type' => 'string',
                          'example' => '80',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'mydevice',
                        ),
                        'JobName' => 
                        array (
                          'description' => '任务名称。',
                          'type' => 'string',
                          'example' => 'MyTestJobIax6Eq',
                        ),
                        'UtcModified' => 
                        array (
                          'description' => '作业信息的修改时间。',
                          'type' => 'string',
                          'example' => '2019-05-21T13:03:56.000Z',
                        ),
                        'JobId' => 
                        array (
                          'description' => '任务ID。任务的全局唯一标识符。',
                          'type' => 'string',
                          'example' => 'sGWotg***010001',
                        ),
                        'TaskId' => 
                        array (
                          'description' => '任务下作业的ID。作业的全局唯一标识符。',
                          'type' => 'string',
                          'example' => 'MSnT9wl***q010101',
                        ),
                        'IotId' => 
                        array (
                          'description' => '物联网平台为该设备颁发的ID，作为该设备的唯一标识符。',
                          'type' => 'string',
                          'example' => 'BDjhIC***i000101',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"NextToken\\": \\"223sdf***\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"512FF8FD-A97F-4AAF-B0A2-7BE3D3A19BB3\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"data\\": [\\n      {\\n        \\"Status\\": \\"SUCCEEDED\\",\\n        \\"UtcQueueTime\\": \\"2019-05-21T13:03:53.000Z\\",\\n        \\"ProductKey\\": \\"a1S0OM***\\",\\n        \\"Progress\\": \\"80\\",\\n        \\"DeviceName\\": \\"mydevice\\",\\n        \\"JobName\\": \\"MyTestJobIax6Eq\\",\\n        \\"UtcModified\\": \\"2019-05-21T13:03:56.000Z\\",\\n        \\"JobId\\": \\"sGWotg***010001\\",\\n        \\"TaskId\\": \\"MSnT9wl***q010101\\",\\n        \\"IotId\\": \\"BDjhIC***i000101\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListTaskResponse>\\n<NextToken>223sdf***</NextToken>\\n<RequestId>512FF8FD-A97F-4AAF-B0A2-7BE3D3A19BB3</RequestId>\\n<Data>\\n    <data>\\n        <Status>SUCCEEDED</Status>\\n        <IotId>BDjhIC***i000101</IotId>\\n        <Progress>80</Progress>\\n        <TaskId>MSnT9wl***q010101</TaskId>\\n        <JobName>MyTestJobIax6Eq</JobName>\\n        <UtcModified>2019-05-21T13:03:56.000Z</UtcModified>\\n        <UtcQueueTime>2019-05-21T13:03:53.000Z</UtcQueueTime>\\n        <ProductKey>a1S0OM***</ProductKey>\\n        <JobId>sGWotg***010001</JobId>\\n        <DeviceName>mydevice</DeviceName>\\n    </data>\\n</Data>\\n<Success>true</Success>\\n</ListTaskResponse>","errorExample":""}]',
      'title' => '获取任务列表',
      'summary' => '调用该接口查询指定任务或指定设备下的作业列表。',
      'description' => '## 使用说明
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

  > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '**Device定义**
|名称|类型|描述|
|------|------|------|
|IotId|String|设备ID。**IotId**、**ProductKey**、**DeviceName**不可同时为空。|
|ProductKey|String|设备所属产品的ProductKey。<br>如果传入该参数，需同时传入**DeviceName**。|
|DeviceName|String|设备名称。<br>如果传入该参数，需同时传入**ProductKey**。|

 
调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。

> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务下作业的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'MSnT9***q010101',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '512FF8FD-A97F-4AAF-B0A2-7BE3D3A19BB3',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的作业详情，请参见以下参数说明。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '作业的状态。

- **QUEUED**：待调度。
- **SENT**：已调度。
- **IN_PROGRESS**：执行中。
- **FAILED**：失败。
- **REJECTED**：已拒绝。
- **TIMED_OUT**：已超时。
- **SUCCEEDED**：已成功。
- **CANCELLED**：已取消。',
                    'type' => 'string',
                    'example' => 'SUCCEEDED',
                  ),
                  'Progress' => 
                  array (
                    'description' => '作业的进度。',
                    'type' => 'string',
                    'example' => '80',
                  ),
                  'DeviceName' => 
                  array (
                    'description' => '设备名称。',
                    'type' => 'string',
                    'example' => 'mydevice',
                  ),
                  'Message' => 
                  array (
                    'description' => '任务执行的相关信息，例如执行的错误信息。',
                    'type' => 'string',
                    'example' => 'this is message about task execution',
                  ),
                  'UtcQueueTime' => 
                  array (
                    'description' => '作业的排队时间。',
                    'type' => 'string',
                    'example' => '2019-05-21T13:03:53.000Z',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => '设备所属产品的ProductKey。',
                    'type' => 'string',
                    'example' => 'a1S****',
                  ),
                  'JobName' => 
                  array (
                    'description' => '作业所属任务的名称。',
                    'type' => 'string',
                    'example' => 'MyTestJobIax6Eq',
                  ),
                  'UtcModified' => 
                  array (
                    'description' => '作业信息的修改时间。',
                    'type' => 'string',
                    'example' => '2019-05-21T13:03:56.000Z',
                  ),
                  'JobId' => 
                  array (
                    'description' => '作业所属任务的ID。',
                    'type' => 'string',
                    'example' => 'sGWotgRkutxX*****',
                  ),
                  'StatusDetail' => 
                  array (
                    'description' => '任务作业执行过程中设备上报的信息。',
                    'type' => 'string',
                    'example' => '{ "msg":"this is message reported by device" }',
                  ),
                  'TaskId' => 
                  array (
                    'description' => '作业ID。作业的全局唯一标识符。',
                    'type' => 'string',
                    'example' => 'MSnT9***q010101',
                  ),
                  'IotId' => 
                  array (
                    'description' => '物联网平台为该设备颁发的ID，作为该设备的唯一标识符。',
                    'type' => 'string',
                    'example' => 'BDjhI****01',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"512FF8FD-A97F-4AAF-B0A2-7BE3D3A19BB3\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Status\\": \\"SUCCEEDED\\",\\n    \\"Progress\\": \\"80\\",\\n    \\"DeviceName\\": \\"mydevice\\",\\n    \\"Message\\": \\"this is message about task execution\\",\\n    \\"UtcQueueTime\\": \\"2019-05-21T13:03:53.000Z\\",\\n    \\"ProductKey\\": \\"a1S****\\",\\n    \\"JobName\\": \\"MyTestJobIax6Eq\\",\\n    \\"UtcModified\\": \\"2019-05-21T13:03:56.000Z\\",\\n    \\"JobId\\": \\"sGWotgRkutxX*****\\",\\n    \\"StatusDetail\\": \\"{ \\\\\\"msg\\\\\\":\\\\\\"this is message reported by device\\\\\\" }\\",\\n    \\"TaskId\\": \\"MSnT9***q010101\\",\\n    \\"IotId\\": \\"BDjhI****01\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryTaskResponse>\\n<RequestId>512FF8FD-A97F-4AAF-B0A2-7BE3D3A19BB3</RequestId>\\n<Data>\\n    <Status>SUCCEEDED</Status>\\n    <Progress>80</Progress>\\n    <TaskId>MSnT9***q010101</TaskId>\\n    <Message>this is message about task execution</Message>\\n    <JobName>MyTestJobIax6Eq</JobName>\\n    <IotId>BDjhI****01</IotId>\\n    <StatusDetail>{ \\"msg\\":\\"this is message reported by device\\" }</StatusDetail>\\n    <UtcModified>2019-05-21T13:03:56.000Z</UtcModified>\\n    <UtcQueueTime>2019-05-21T13:03:53.000Z</UtcQueueTime>\\n    <ProductKey>a1S****</ProductKey>\\n    <JobId>sGWotgRkutxX*****</JobId>\\n    <DeviceName>mydevice</DeviceName>\\n</Data>\\n<Success>true</Success>\\n</QueryTaskResponse>","errorExample":""}]',
      'title' => '查询指定任务下作业',
      'summary' => '调用该接口查询指定任务下的作业。',
      'description' => '## 使用说明

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryJobStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。

> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。任务的全局唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'sGWotgRkut***10001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '512FF8FD-A97F-4AAF-B0A2-7BE3D3A19BB3',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的作业状态详情，请参见以下参数说明。',
                'type' => 'object',
                'properties' => 
                array (
                  'Rejected' => 
                  array (
                    'description' => '对应任务下被设备拒绝的作业总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TimeOut' => 
                  array (
                    'description' => '对应任务下执行超时的作业总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'Failed' => 
                  array (
                    'description' => '对应任务下执行失败的作业总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Queued' => 
                  array (
                    'description' => '对应任务下待执行的作业总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'Succeeded' => 
                  array (
                    'description' => '对应任务下执行成功的作业总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '22',
                  ),
                  'Sent' => 
                  array (
                    'description' => '对应任务下处于已推送状态的作业总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'Total' => 
                  array (
                    'description' => '对应任务下的作业总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '50',
                  ),
                  'InProgress' => 
                  array (
                    'description' => '对应任务下执行中的作业总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '13',
                  ),
                  'Cancelled' => 
                  array (
                    'description' => '对应任务下被取消的作业总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"512FF8FD-A97F-4AAF-B0A2-7BE3D3A19BB3\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Rejected\\": 1,\\n    \\"TimeOut\\": 5,\\n    \\"Failed\\": 1,\\n    \\"Queued\\": 2,\\n    \\"Succeeded\\": 22,\\n    \\"Sent\\": 3,\\n    \\"Total\\": 50,\\n    \\"InProgress\\": 13,\\n    \\"Cancelled\\": 3\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryJobStatisticsResponse>\\n<RequestId>512FF8FD-A97F-4AAF-B0A2-7BE3D3A19BB3</RequestId>\\n<Data>\\n    <Succeeded>22</Succeeded>\\n    <inProgress>13</inProgress>\\n    <TimeOut>5</TimeOut>\\n    <Failed>1</Failed>\\n    <Total>50</Total>\\n    <Canceled>3</Canceled>\\n    <Rejected>1</Rejected>\\n    <Queued>2</Queued>\\n    <Sent>3</Sent>\\n</Data>\\n<Success>true</Success>\\n</QueryJobStatisticsResponse>","errorExample":""}]',
      'title' => '查询作业统计信息',
      'summary' => '调用该接口查询指定任务下各状态作业的统计信息。',
      'description' => '## 使用说明

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RerunJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备任务ID。任务的全局唯一标识符。

您可在物联网平台控制台的**设备管理 > 任务**页面，查看任务ID。



',
            'type' => 'string',
            'required' => true,
            'example' => '450407b***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'A6BEAB33-03E6-4CE0-A94F-9E24C5512BAD',
              ),
              'Success' => 
              array (
                'description' => '表示接口调用是否成功。

- **true**：调用成功，表示设备作业已重新执行。
- **false**：调用失败，表示设备作业未重新执行。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"A6BEAB33-03E6-4CE0-A94F-9E24C5512BAD\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RerunJobResponse>\\n<RequestId>A6BEAB33-03E6-4CE0-A94F-9E24C5512BAD</RequestId>\\n<Success>true</Success>\\n</RerunJobResponse>","errorExample":""}]',
      'title' => '重新执行任务',
      'summary' => '重新执行指定设备任务下，所有已超时和失败的设备作业。',
      'description' => '## 使用说明
仅支持指定已完成或已超时状态的设备任务。

已完成状态设备任务，表示该任务下所有作业已执行完成。已执行完成作业状态如下：

- **FAILED**：已失败。
- **REJECTED**：已拒绝。
- **TIMED_OUT**：已超时。
- **SUCCEEDED**：已成功。
- **CANCELLED**：已取消。

> 若设备任务下所有作业执行状态为已成功，调用本接口无法重新执行设备任务。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateProductTopic' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建Topic类所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'aldDEin****',
          ),
        ),
        2 => 
        array (
          'name' => 'TopicShortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置Topic类的自定义类目名称。

Topic格式必须以`/`进行分层，区分每个类目。类目命名只能包含字母、数字和下划线（_），每级类目不能为空。

> **Operation**为**SUB**（订阅）时，才可以使用通配符`+`和`#`自定义Topic类，以便设备实现批量订阅Topic。通配符使用方法请参见[带通配符的自定义Topic](~~85539~~) 。

- 对于云网关产品，Topic类完全由用户自定义输入。支持使用`${deviceName}`通配**DeviceName**。
- 对于非云网关产品，自定义Topic类前三个类目已固定为`/${productKey}/${deviceName}/user/`，定义**TopicShortName**将Topic类填充完整。',
            'type' => 'string',
            'required' => true,
            'example' => 'submit',
          ),
        ),
        3 => 
        array (
          'name' => 'Operation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备对该Topic类的操作权限，取值：

- **SUB**：订阅。
- **PUB**：发布。
- **ALL**：发布和订阅。',
            'type' => 'string',
            'required' => true,
            'example' => 'PUB',
          ),
        ),
        4 => 
        array (
          'name' => 'Desc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Topic类的描述信息。长度限制为100字符（一个中文汉字占一个字符）。',
            'type' => 'string',
            'required' => false,
            'example' => 'submit a test topic',
          ),
        ),
        5 => 
        array (
          'name' => 'EnableProxySubscribe',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '**Operation**为**SUB**（订阅）或**ALL**（发布和订阅），可开启代理订阅。
取值：

- **true**：开启。
- **false**：不开启。

开启代理订阅后，设备与物联网平台建连时，物联网平台查询已开启代理订阅的Topic，帮助设备完成订阅。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'Codec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '尊享型企业版实例下，可开启自定义Topic数据压缩或解压缩。
取值：

- **compress**：压缩。
- **decompress**：解压缩。

数据压缩功能详细内容，请参见[数据压缩](~~477405~~)。

><notice>**TopicShortName**传入通配符（`+`和`#`）时，不可同时传入**Codec**。如果创建通配Topic类的同时，开启了数据压缩或解压缩功能，调用本接口创建该Topic类会失败。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'compress',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'TopicId' => 
              array (
                'description' => '调用成功时，物联网平台为新建的Topic类生成的Topic ID。

> 请妥善保管该信息。在调用与该Topic类相关的接口时，您可能需要提供对应的Topic ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10000',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'FCC27691-9151-4B93-9622-9C90F30542EC',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"TopicId\\": 10000,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"FCC27691-9151-4B93-9622-9C90F30542EC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<CreateProductTopicResponse>\\r\\n    <RequestId>FCC27691-9151-4B93-9622-9C90F30542EC</RequestId>\\r\\n    <Success>true</Success>\\r\\n    <TopicId>10000</TopicId>\\r\\n</CreateProductTopicResponse>","errorExample":""}]',
      'title' => '为指定产品创建自定义Topic类',
      'summary' => '调用该接口为指定产品创建自定义Topic类。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为1。

> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateProductTopic' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'Desc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Topic类的描述信息。长度限制为100字符（一个汉字占一个字符）。',
            'type' => 'string',
            'required' => false,
            'example' => 'resubmit a test topic',
          ),
        ),
        2 => 
        array (
          'name' => 'Operation',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备对该Topic类的操作权限，取值：

- **SUB**：订阅。
- **PUB**：发布。
- **ALL**：发布和订阅。',
            'type' => 'string',
            'required' => true,
            'example' => 'PUB',
          ),
        ),
        3 => 
        array (
          'name' => 'TopicShortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置Topic类的自定义类目名称。Topic类默认包含_productKey_和_deviceName_两级类目，类目间以正斜线（/）分隔，其格式为：`productKey/deviceName/topicShortName`。

> 每级类目的名称只能包含字母、数字和下划线（_），且不能为空。',
            'type' => 'string',
            'required' => true,
            'example' => 'resubmit',
          ),
        ),
        4 => 
        array (
          'name' => 'TopicId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的Topic类的ID。
调用[CreateProductTopic](~~69649~~)接口创建自定义Topic类成功后，返回的**TopicId**。',
            'type' => 'string',
            'required' => true,
            'example' => '821****',
          ),
        ),
        5 => 
        array (
          'name' => 'EnableProxySubscribe',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '**Operation**为**SUB**（订阅）或**ALL**（发布和订阅），可开启代理订阅。
取值：

- **true**：开启。
- **false**：不开启。

开启代理订阅后，设备与物联网平台建连时，物联网平台查询已开启代理订阅的Topic，帮助设备完成订阅。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'Codec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标准型和尊享型企业版实例下，可开启自定义Topic数据压缩或解压缩。
取值：

- **compress**：压缩。
- **decompress**：解压缩。

数据压缩功能详细内容，请参见[数据压缩](~~477405~~)。

><notice>**TopicShortName**传入通配符（`+`和`#`）时，不可同时传入**Codec**。如果创建通配Topic类的同时，开启了数据压缩或解压缩功能，调用本接口创建该Topic类会失败。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'compress',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'FCC27691-9151-4B93-9622-9C90F30542EC',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"FCC27691-9151-4B93-9622-9C90F30542EC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<UpdateProductTopicResponse>\\r\\n    <RequestId>FCC27691-9151-4B93-9622-9C90F30542EC</RequestId>\\r\\n    <Success>true</Success>\\r\\n</UpdateProductTopicResponse>","errorExample":""}]',
      'title' => '更新指定的产品自定义Topic类',
      'summary' => '调用该接口更新指定的产品自定义Topic类。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryProductTopic' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询Topic类的产品**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'HMyB*******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'B953EAFF-CFF6-4FF8-BC94-8B89F018E4DD',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ProductTopicInfo' => 
                  array (
                    'description' => '调用成功时，返回的Topic类信息列表。详情参见以下**ProductTopicInfo**。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Operation' => 
                        array (
                          'description' => '设备对该Topic类的操作权限，取值：
- **0**：发布
- **1**：订阅
- **2**：发布和订阅',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'ProductKey' => 
                        array (
                          'description' => '产品的**ProductKey**。',
                          'type' => 'string',
                          'example' => 'HMyB***',
                        ),
                        'Codec' => 
                        array (
                          'description' => '是否开启自定义Topic数据压缩或解压缩。
取值：

- **compress**：压缩。
- **decompress**：解压缩。

数据压缩功能详细内容，请参见[数据压缩](~~477405~~)。',
                          'type' => 'string',
                          'example' => 'compress',
                        ),
                        'TopicShortName' => 
                        array (
                          'description' => '产品的自定义Topic类。',
                          'type' => 'string',
                          'example' => '/HMyB***/${deviceName}/user/get',
                        ),
                        'EnableProxySubscribe' => 
                        array (
                          'description' => '是否开启代理订阅。
取值：

- **true**：开启。
- **false**：不开启。

开启代理订阅后，设备与物联网平台建连时，物联网平台查询已开启代理订阅的Topic，帮助设备完成订阅。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Id' => 
                        array (
                          'description' => 'Topic类的ID。',
                          'type' => 'string',
                          'example' => '821****',
                        ),
                        'Desc' => 
                        array (
                          'description' => 'Topic类的描述信息。',
                          'type' => 'string',
                          'example' => 'topicDesc',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"B953EAFF-CFF6-4FF8-BC94-8B89F018E4DD\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ProductTopicInfo\\": [\\n      {\\n        \\"Operation\\": \\"1\\",\\n        \\"ProductKey\\": \\"HMyB***\\",\\n        \\"Codec\\": \\"compress\\",\\n        \\"TopicShortName\\": \\"/HMyB***/${deviceName}/user/get\\",\\n        \\"EnableProxySubscribe\\": false,\\n        \\"Id\\": \\"821****\\",\\n        \\"Desc\\": \\"topicDesc\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryProductTopicResponse>\\n<RequestId>310E4A1E-B614-5607-B7DB-55530CAE074A</RequestId>\\n<Data>\\n    <ProductTopicInfo>\\n        <TopicShortName>/g18******F/${deviceName}/user/get</TopicShortName>\\n        <EnableProxySubscribe>false</EnableProxySubscribe>\\n        <Operation>1</Operation>\\n        <Id>3679****</Id>\\n        <ProductKey>g18******F</ProductKey>\\n    </ProductTopicInfo>\\n    <ProductTopicInfo>\\n        <TopicShortName>/g18******F/${deviceName}/user/update</TopicShortName>\\n        <EnableProxySubscribe>false</EnableProxySubscribe>\\n        <Operation>0</Operation>\\n        <Id>3679****</Id>\\n        <ProductKey>g18******F</ProductKey>\\n    </ProductTopicInfo>\\n    <ProductTopicInfo>\\n        <TopicShortName>/g18******F/${deviceName}/user/update/error</TopicShortName>\\n        <EnableProxySubscribe>false</EnableProxySubscribe>\\n        <Operation>0</Operation>\\n        <Id>3679****</Id>\\n        <ProductKey>g18******F</ProductKey>\\n    </ProductTopicInfo>\\n</Data>\\n<Success>true</Success>\\n</QueryProductTopicResponse>","errorExample":""}]',
      'title' => '查询指定产品的自定义Topic类',
      'summary' => '调用该接口查询指定产品的自定义Topic类。',
      'description' => '## QPS限制
 单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为3。

  > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteProductTopic' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'TopicId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的Topic类的ID。',
            'type' => 'string',
            'required' => true,
            'example' => '798****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'FCC27691-9151-4B93-9622-9C90F30542EC',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"FCC27691-9151-4B93-9622-9C90F30542EC\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<DeleteProductTopicResponse>\\r\\n    <RequestId>FCC27691-9151-4B93-9622-9C90F30542EC</RequestId>\\r\\n    <Success>true</Success>\\r\\n</DeleteProductTopicResponse>","errorExample":""}]',
      'title' => '指定的自定义Topic类',
      'summary' => '调用该接口删除指定的自定义Topic类。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateTopicRouteTable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'SrcTopic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源Topic，即被订阅的Topic。如`SrcTopic=/x7aWKW9****/testDataToDataHub/user/update`。',
            'type' => 'string',
            'required' => true,
            'example' => '/x7aWKW9****/testDataToDataHub/user/update',
          ),
        ),
        2 => 
        array (
          'name' => 'DstTopic',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '目标Topic列表，即从**SrcTopic**订阅消息的Topic列表。即使只有一个Topic，也使用数组格式。如`DstTopic.1=/x7aWKW9****/deviceNameTest1/user/add`，`DstTopic.2=/x7aWKW9****/deviceNameTest2/user/delete`。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => '/x7aWKW9****/deviceNameTest1/user/add',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'FCC27691-9151-4B93-9622-9C90F30542EC',
              ),
              'IsAllSucceed' => 
              array (
                'description' => '指定的Topic间的消息路由关系是否全部新建成功。
- **true**表示全部新建成功。
- **false**表示未全部新建成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'FailureTopics' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Topic' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '未能成功创建路由关系的Topic列表。',
                      'type' => 'object',
                      'example' => '["/2Fx7aWKW9****/FdeviceNameTest2/user/delete"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"FCC27691-9151-4B93-9622-9C90F30542EC\\",\\n  \\"IsAllSucceed\\": true,\\n  \\"Success\\": true,\\n  \\"FailureTopics\\": {\\n    \\"Topic\\": [\\n      \\"[\\\\\\"/2Fx7aWKW9****/FdeviceNameTest2/user/delete\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateTopicRouteTableResponse>\\n<RequestId>32B9828A-25DD-48E2-8E26-D1664B341940</RequestId>\\n<FailureTopics></FailureTopics>\\n<Success>true</Success>\\n</CreateTopicRouteTableResponse>","errorExample":""}]',
      'title' => '新建Topic间的消息路由关系',
      'summary' => '调用该接口新建Topic间的消息路由关系。',
      'description' => '## 使用说明
- 一个源Topic最多可对应100个目标Topic。
- 源Topic所属的设备必须为已激活设备。
- 源Topic和目标Topic均仅支持自定义Topic。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryTopicRouteTable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'Topic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的源Topic，即发布消息的Topic。',
            'type' => 'string',
            'required' => true,
            'example' => '/x7aWKW94bb8/testDataToDataHub/user/update',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'FCC27691-9151-4B93-9622-9C90F30542EC',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DstTopics' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Topic' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '调用成功时，返回的目标Topic列表，即向源Topic订阅消息的Topic列表。',
                      'type' => 'object',
                      'example' => '["/CXi4***/device2/get","/CXi4***/device3/get"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"FCC27691-9151-4B93-9622-9C90F30542EC\\",\\n  \\"Success\\": true,\\n  \\"DstTopics\\": {\\n    \\"Topic\\": [\\n      \\"[\\\\\\"/CXi4***/device2/get\\\\\\",\\\\\\"/CXi4***/device3/get\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryTopicRouteTableResponse>\\n<DstTopics>\\n    <Topic>/a1T27vz****/${deviceName}/user/submit/update</Topic>\\n</DstTopics>\\n<RequestId>D6CB2387-0D65-4240-9436-A2E18B434E31</RequestId>\\n<Success>true</Success>\\n</QueryTopicRouteTableResponse>","errorExample":""}]',
      'title' => '查询 Topic 路由表',
      'summary' => '查询向指定自定义Topic订阅消息的目标Topic，即指定Topic的路由表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryTopicReverseRouteTable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所在地域（与控制台上的地域对应），如cn-shanghai。

> 目前此参数已包含在公共请求参数中，不再作为API特有参数传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-shanghai',
          ),
        ),
        2 => 
        array (
          'name' => 'Topic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的目标Topic，即接收消息的Topic。',
            'type' => 'string',
            'required' => true,
            'example' => '/x7aWKW9***/testDataToDataHub/user/update',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'FCC27691-9151-4B93-9622-9C90F30542EC"',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'SrcTopics' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Topic' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '调用成功时，返回的源Topic列表，即被订阅的Topic列表。',
                      'type' => 'object',
                      'example' => '["/CXi4***/device1/user/get","/CXi4***/device4/user/get"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"FCC27691-9151-4B93-9622-9C90F30542EC\\\\\\"\\",\\n  \\"Success\\": true,\\n  \\"SrcTopics\\": {\\n    \\"Topic\\": [\\n      \\"[\\\\\\"/CXi4***/device1/user/get\\\\\\",\\\\\\"/CXi4***/device4/user/get\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryTopicReverseRouteTableResponse>\\n<SrcTopics>\\n    <Topic>/CXi4***/device1/user/get</Topic>\\n    <Topic>/CXi4***/device4/user/get</Topic>\\n</SrcTopics>\\n<RequestId>C5515170-3C1F-4004-A7C1-181E7955BC73</RequestId>\\n<Success>true</Success>\\n</QueryTopicReverseRouteTableResponse>","errorExample":""}]',
      'title' => '查询反向路由表',
      'summary' => '查询指定自定义Topic订阅的源Topic，即反向路由表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteTopicRouteTable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'SrcTopic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源Topic，即被订阅的Topic。如，`SrcTopic.1=/x7aWKW9****/testDataToDataHub/user/update`。',
            'type' => 'string',
            'required' => true,
            'example' => '/x7aWKW9***/testDataToDataHub/user/update',
          ),
        ),
        2 => 
        array (
          'name' => 'DstTopic',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '目标Topic，即从**SrcTopic**订阅消息的Topic。如，`DstTopic.1=/x7aWKW9****/deviceNameTest1/user/add`，`DstTopic.2=/x7aWKW9****/deviceNameTest2/user/delete`。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => '/x7aWKW9***/deviceNameTest1/user/add',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'FCC27691-9151-4B93-9622-9C90F30542EC',
              ),
              'IsAllSucceed' => 
              array (
                'description' => '指定的Topic路由关系是否全部成功删除。
- **true**：全部成功删除。
- **false**：未全部成功删除。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'FailureTopics' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Topic' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '未能成功删除路由关系的Topic列表。',
                      'type' => 'object',
                      'example' => '["/x7aWKW9***/deviceNameTest2/user/delete"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"FCC27691-9151-4B93-9622-9C90F30542EC\\",\\n  \\"IsAllSucceed\\": true,\\n  \\"Success\\": true,\\n  \\"FailureTopics\\": {\\n    \\"Topic\\": [\\n      \\"[\\\\\\"/x7aWKW9***/deviceNameTest2/user/delete\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DeleteTopicRouteTableResponse>\\n<RequestId>9DEBEF66-2B75-4CB2-BF19-1488802F4381</RequestId>\\n<FailureTopics></FailureTopics>\\n<Success>true</Success>\\n</DeleteTopicRouteTableResponse>","errorExample":""}]',
      'title' => '删除指定自定义Topic的路由关系',
      'summary' => '调用该接口删除指定自定义Topic的路由关系。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

  > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'Select',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要执行的SQL SELECT语句。具体内容参照[SQL表达式](~~30554~~)。

> 此处传入的是SELECT下的内容。例如，如果SELECT语句为`SELECT a,b,c`，则此处传入`a,b,c`。',
            'type' => 'string',
            'required' => false,
            'example' => 'deviceName() as deviceName, items.Humidity.value as Humidity, items.Temperature.value as Temperature',
          ),
        ),
        2 => 
        array (
          'name' => 'ShortTopic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用该规则的具体Topic，格式一般为：`${deviceName}/topicShortName`。其中，`${deviceName}`是具体设备的名称，`topicShortName`是Topic短名称。

- 基础通信Topic或物模型通信Topic的ShortTopic，格式一般为：`${deviceName}/topicShortName`。其中，`${deviceName}`可以使用通配符`+`代替，表示产品下所有设备名称。`topicShortName`取值如下：

    - `/thing/event/property/post `设备上报的属性消息。
    - `/thing/event/${tsl.event.identifier}/post`设备上报的事件消息，`${}`中是产品物模型中事件identifier。
    - `/thing/lifecycle` 设备生命周期变更消息。
    - `/thing/downlink/reply/message`设备响应云端指令的结果消息。
    - `/thing/list/found`网关上报发现子设备消息。
    - `/thing/topo/lifecycle`设备拓扑关系变更消息。
    - `/thing/event/property/history/post`设备历史属性上报消息。
    - `/thing/event/${tsl.event.identifier}/history/post`设备历史事件上报消息，`${}`中是产品物模型中事件identifier。
    - `/ota/upgrade`设备OTA升级状态通知消息。
    - `/ota/version/post`设备OTA模块版本号上报消息。
    - `/thing/deviceinfo/update`设备标签变更消息。
    - `/edge/driver/${driver_id}/point_post`物联网边缘计算的透传模式Topic消息，`${}`中是物联网边缘计算的设备接入驱动ID。

 OTA升级批次状态通知Topic也属于基础通信Topic，ShortTopic格式为：`${packageId}/${jobId}/ota/job/status`。其中，`${packageId}`是升级包ID，`${jobId}`是升级批次ID。
- 自定义Topic的ShortTopic，如：`${deviceName}/user/get`。

  调用[QueryProductTopic](~~69647~~)接口，可以查看产品下的所有自定义Topic类。

    指定自定义Topic时，可以使用通配符`+`和`#`。
    - `${deviceName}`可以使用通配符`+`代替，表示产品下所有设备；
    - 之后字段可以用`/user/#`，`#`表示`/user`层级之后的所有层级名称。
    使用通配符，请参见[Topic类中的通配符](~~85539~~)。
- 设备状态变化通知Topic的ShortTopic：`${deviceName}`。

 可以直接使用通配符`+`，表示产品下所有设备的状态变化通知。',
            'type' => 'string',
            'required' => false,
            'example' => '+/thing/event/property/post',
          ),
        ),
        3 => 
        array (
          'name' => 'Where',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则的触发条件。具体内容参照[SQL表达式](~~30554~~)。

> 此处传入的是**Where**中的内容。例如，如果**Where**语句为`Where a>10`，则此处传入`a>10`。',
            'type' => 'string',
            'required' => false,
            'example' => 'Temperature>35',
          ),
        ),
        4 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用该规则的产品ProductKey。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1T27vz****',
          ),
        ),
        5 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则名称。支持中文、英文字母、日文、数字、下划线（_）和短划线（-），长度为1~30个字符，一个中文或日文占2个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'iot_test1',
          ),
        ),
        6 => 
        array (
          'name' => 'RuleDesc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则的描述信息。长度限制为100个字符，一个中文字符计为1个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'rule test',
          ),
        ),
        7 => 
        array (
          'name' => 'DataType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则处理的数据格式，需与待处理的设备数据格式一致。取值：

- **JSON**（默认）：JSON数据。
- **BINARY**：二进制数据。

> 若选择为**BINARY**，**TopicType**不能选择为0（基础通信Topic或物模型通信Topic），且不支持将数据转发至<props="china"><ph>实例内的时序数据存储、时序数据库、</ph></props>表格存储和云数据库RDS版。',
            'type' => 'string',
            'required' => false,
            'example' => 'JSON',
          ),
        ),
        8 => 
        array (
          'name' => 'TopicType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- **0**：**ShortTopic**参数描述中的基础通信Topic或物模型通信Topic，包含OTA升级批次状态通知Topic。
- **1**：自定义Topic。
- **2**：设备状态变化通知Topic：`/as/mqtt/status/${productKey}/${deviceName}`。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

><notice>
- 目前，物联网平台仅支持实例维度的资源组管理。请求参数**ResourceGroupId**配置已无效，无需再传入。
- 历史调用本API设置的资源组仍有效。

></notice>
',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph****',
          ),
        ),
        10 => 
        array (
          'name' => 'Topic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待添加规则的完整Topic。

如果传入此参数，无需再传入参数**ShortTopic**和**TopicType**。',
            'type' => 'string',
            'required' => false,
            'example' => '/sys/g18l***/device1/thing/event/property/post',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RuleId' => 
              array (
                'description' => '调用成功时，规则引擎为该规则生成的规则ID，作为该规则的标识符。

> 请妥善保管该信息。在调用和规则相关的接口时，您可能需要提供对应的规则ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100000',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"RuleId\\": 100000\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<CreateRuleResponse>\\r\\n    <RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\r\\n    <RuleId>100000</RuleId>\\r\\n    <Success>true</Success>\\r\\n</CreateRuleResponse>","errorExample":""}]',
      'title' => '对指定Topic新建一个规则',
      'summary' => '调用该接口对指定Topic新建一个规则。',
      'description' => '## 使用说明
调用该接口时，请求参数**ProductKey**必须传入。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

 > 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。

> 如需启动规则，请求中需包含ProductKey、ShortTopic、Select三个参数的信息。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateRuleAction' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要为其创建动作的规则ID。可在物联网平台控制台<props="china"><ph>对应实例下</ph></props>，**规则引擎**>**云产品流转**页查看规则ID，或调用[ListRule](~~69486~~)从返回结果中查看。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '100000',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则动作类型，取值：

- **REPUBLISH**：将根据规则处理后的Topic数据转发至另一个物联网平台 Topic。
- **AMQP**：数据流转到AMQP消费组。
<props="china">- **DATAHUB**：将根据规则处理后的Topic数据转发至阿里云DataHub，进行流式数据处理。</props>
<props="china">- **ONS**：将根据规则处理后的Topic数据转发至阿里云消息队列RocketMQ，进行消息分发。</props>
- **MNS**：将根据规则处理后的Topic数据发送至阿里云消息服务中，进行消息传输。
- **FC**：将根据规则处理后的Topic数据发送至阿里云函数计算服务，进行事件计算。
- **OTS**：将根据规则处理后的Topic数据发送至阿里云表格存储（Tablestore），进行NoSQL数据存储。

> 数据格式为二进制的规则（即规则的**DataType**参数是**BINARY**）不支持转发数据至OTS（表格存储）。',
            'type' => 'string',
            'required' => true,
            'example' => 'REPUBLISH',
          ),
        ),
        3 => 
        array (
          'name' => 'Configuration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该规则动作的配置信息，传入格式为JSON String。不同规则动作类型所需内容不同，具体要求和示例见下文请求参数补充说明。',
            'type' => 'string',
            'required' => true,
            'example' => '{"topic":"/a1POX0c****/device1/user/get","topicType":1}',
          ),
        ),
        4 => 
        array (
          'name' => 'ErrorActionFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该规则动作是否为转发错误操作数据的转发动作，即转发流转到其他云产品失败且重试失败的数据。 可选值：

- **true**：该规则动作转发错误操作数据。
- **false**：该规则动作不转发错误操作数据，而是正常转发操作。

默认值为**false**。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回的数据。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ActionId' => 
              array (
                'description' => '调用成功时，规则引擎为该规则动作生成的规则动作ID，作为其标识符。

> 请妥善保管该信息。在调用与规则动作相关的接口时，您可能需要提供对应的规则动作ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10003',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '21D327AF-A7DE-4E59-B5D1-ACAC8C024555',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ActionId\\": 10003,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"21D327AF-A7DE-4E59-B5D1-ACAC8C024555\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<CreateRuleActionResponse>\\r\\n    <RequestId>21D327AF-A7DE-4E59-B5D1-ACAC8C024555</RequestId>\\r\\n    <ActionId>10003</ActionId>\\r\\n    <Success>true</Success>\\r\\n</CreateRuleActionResponse>","errorExample":""}]',
      'title' => 'CreateRuleAction',
      'summary' => '调用该接口在指定的规则下创建一个规则动作，定义将处理后的Topic数据，转发至物联网平台的其他Topic，或所支持的其他阿里云服务。',
      'description' => '## 使用说明

- 服务地域不同，所支持的目标云产品有所不同。规则引擎支持的地域及目标云产品，请参见[地域与可用区](~~85669~~)。
- 一个规则下面最多可创建10个规则动作。
- 您可以通过调用该API创建规则动作，定义将数据转发至物联网平台其他Topic、AMQP消费组和其他阿里云产品（<props="china"><ph>DataHub、消息队列RocketMQ、</ph></props>消息服务、函数计算和表格存储）。
如果您想将数据转发至<props="china"><ph>实例内的时序数据存储、时序数据库（TSDB）和</ph></props>云数据库RDS版，请在[物联网平台控制台](https://iot.console.aliyun.com)进行操作。



## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享该阿里云账号配额。',
      'requestParamsDescription' => '**REPUBLISH类型Configuration定义**
|名称|描述|
|------|------|
|topic|转发的目标Topic（物模型通信Topic或自定义Topic）。支持将数据转发至数据下行的物模型通信Topic：<br>`/sys/${YourProductKey}/${YourDeviceName}/thing/service/property/set`<br>`/sys/${YourProductKey}/${YourDeviceName}/thing/service/${tsl.service.identifier}`<br>变量**${tsl.service.identifier}**的内容由该产品物模型中的服务决定。|
|topicType|Topic的类型。<br>0：表示数据下行的物模型通信Topic。<br>1：表示自定义Topic。|


REPUBLISH 类型**Configuration**示例：

```
sys类型：{"topic":"/sys/a1TXXXXXWSN/xxx_cache001/thing/service/property/set","topicType":0}
自定义类型：{"topic":"/a1TXXXXXWSN/xxx_cache001/user/update","topicType":1}
```
**DATAHUB类型Configuration定义**

|名称|描述|
|-------------|------------ |
|projectName|目标DataHub中用来接收信息的具体Project。|
|topicName|目标DataHub中用来接收信息的具体Topic。|
|regionName|目标DataHub所在的阿里云地域代码，例如cn-shanghai。|
|role|授权角色信息。通过授予IoT指定的系统服务角色，您可以授权物联网平台访问您的DataHub。授权角色信息格式：<br>`{"roleArn":"acs:ram::6541\\*\\**:role/aliyuniotaccessingdatahubrole","roleName": "AliyunIOTAccessingDataHubRole"}`<br>请将`6541\\*\\**`替换成您的阿里云账号ID。您可以登录控制台，在账号安全设置页面查看您的账号ID。<br>`AliyunIOTAccessingDataHubRole`是访问控制中定义的服务角色。用于授予物联网平台访问DataHub。关于角色的更多信息，请在访问控制RAM控制台的角色管理页面进行角色管理。|
|schemaVals|目标DataHub中的Schema列表，详情参见下表schemaVals。|

schemaVals


|名称|描述|
|-------------|------------|
|name|列名。|
|value|列值。|
|type|列类型。<br>BIGINT：大整数型。<br>DOUBLE：双精度浮点型。<br>BOOLEAN：布尔型。<br>TIMESTAMP：时间戳型。<br>STRING：字符串型。<br>DECIMAL：小数型。|

DATAHUB类型**Configuration**示例：

```
{
    "schemaVals": [
        {
            "name": "devicename",
            "value": "${deviceName}",
            "type": "STRING"
        },
        {
            "name": "msgtime",
            "value": "${msgTime}",
            "type": "TIMESTAMP"
        }
    ],
    "role": {
        "roleArn": "acs:ram::6541***:role/aliyuniotaccessingdatahubrole",
        "roleName": "AliyunIOTAccessingDataHubRole"
    },
    "projectName": "iot_datahub_stream",
    "topicName": "device_message",
    "regionName": "cn-shanghai"
}
```

**OTS类型Configuration定义**
|名称|描述|
|-------------|------------|
|instanceName|表格存储中用来接收信息的实例名称。|
|tableName|表格存储中用来接收信息的数据表名称。|
|regionName|目标实例所在的阿里云地域代码，例如cn-shanghai。|
|role|授权角色信息。通过授予物联网平台指定的系统服务角色，您可以授权物联网平台访问您的表格存储。授权角色信息：<br>`{"roleArn":"acs:ram::6541*\\**:role/aliyuniotaccessingotsrole","roleName": "AliyunIOTAccessingOTSRole"}`<br>请将`6541*\\**`替换成您的阿里云账号ID。您可以登录控制台，在账号安全设置页面查看您的账号ID。<br>`AliyunIOTAccessingOTSRole`是访问控制中定义的服务角色。用于授予物联网平台访问表格存储。关于角色的更多信息，请在访问控制RAM控制台的角色管理页面进行角色管理。|
|primaryKeys|目标表中的主键列表。详情参见下表PrimaryKeys。|

 PrimaryKeys
|名称|描述|
|-------------|------------|
|columnType|主键类型。<br>INTEGER：整型。<br>STRING：字符串。<br>BINARY：二进制。|
|columnName|主键名称。|
|columnValue|主键值。|
|option|主键是否为自增列，取值AUTO\\_INCREMENT或为空。当主键类型为INTEGER，且该字段为AUTO\\_INCREMENT时，主键为自增列。|

OTS类型**Configuration**示例：

```
{
    "instanceName": "testaaa",
    "tableName": "tt",
    "primaryKeys": [
        {
            "columnType": "STRING",
            "columnName": "ttt",
            "columnValue": "${tt}",
            "option": ""
        },
        {
            "columnType": "INTEGER",
            "columnName": "id",
            "columnValue": "",
            "option": "AUTO_INCREMENT"
        }
    ],
    "regionName": "cn-shanghai",
    "role": {
        "roleArn": "acs:ram::5645***:role/aliyuniotaccessingotsrole",
        "roleName": "AliyunIOTAccessingOTSRole"
    }
}
```

**MNS类型Configuration定义**
|名称|描述|
|-------------|------------|
|themeName| 消息服务中用来接收信息的目标主题名称。|
|regionName| 目标消息服务所在的阿里云地域代码，例如cn-shanghai。|
|role| 授权角色信息。通过授予物联网平台指定的系统服务角色，您可以授权物联网平台访问您的消息服务。授权角色信息：<br>`{"roleArn":"acs:ram::6541*\\**:role/aliyuniotaccessingmnsrole","roleName": "AliyunIOTAccessingMNSRole"}`<br>请将`6541*\\**`替换成您的阿里云账号ID。您可以登录控制台，在账号安全设置页面查看您的账号ID。<br>`AliyunIOTAccessingMNSRole`是访问控制中定义的服务角色。用于授予物联网平台访问消息服务。关于角色的更多信息，请在访问控制RAM控制台的角色管理页面进行角色管理。|

MNS类型**​Configuration**​​示例：

```
{
    "themeName": "mns-test-topic1",
    "regionName": "cn-shanghai",
    "role": {
        "roleArn": "acs:ram::5645***:role/aliyuniotaccessingmnsrole",
        "roleName": "AliyunIOTAccessingMNSRole"
    }
}
```

**FC类型Configuration定义**

|名称|描述|
|-------------|------------|
|functionName| 函数服务中用来接收信息的目标函数名称。|
|serviceName| 函数服务中用来接收信息的目标服务名称。|
|regionName| 目标函数服务实例所在阿里云地域的代码，如cn-shanghai。|
|role| 授权角色信息。通过授予物联网平台指定的系统服务角色，您可以授权物联网平台访问您的函数计算服务。授权角色信息：<br>`{"roleArn":"acs:ram::6541*\\**:role/aliyuniotaccessingfcrole","roleName": "AliyunIOTAccessingFCRole"}`<br>请将`6541*\\**`替换成您的阿里云账号ID。您可以登录控制台，在账号安全设置页面查看您的账号ID。<br>`AliyunIOTAccessingFCRole`是访问控制中定义的服务角色。用于授予物联网平台访问函数计算。关于角色的更多信息，请在访问控制RAM控制台的角色管理页面进行角色管理。|

FC类型**Configuration**示例：

```
{
    "regionName": "cn-shanghai",
    "role": {
        "roleArn": "acs:ram::5645***:role/aliyuniotaccessingfcrole",
        "roleName": "AliyunIOTAccessingFCRole"
    },
    "functionName": "weatherForecast",
    "serviceName": "weather"
}
```
**ONS类型Configuration定义**

> 您需通过调用消息队列RocketMQ的SDK，或在消息队列RocketMQ控制台，授权物联网平台访问消息队列RocketMQ（至少要授予物联网平台发布权限），然后才能够成功创建将Topic数据转发至消息队列RocketMQ的规则动作。

|名称|描述|
|-------------|------------|
|instanceId|RocketMQ中用来接收消息的目标Topic所属的实例ID。|
|topic|RocketMQ中用来接收信息的目标Topic。|
|regionName|目标RocketMQ实例所在的阿里云地域代码，例如cn-shanghai。<br>> 公网和同区流转，使用普通版RocketMQ实例即可；如果您需要跨区流转，则RocketMQ实例必需是铂金版实例。|
|tag|（可选）设置标签。长度限制为128字节。|
|role|授权角色信息。通过授予物联网平台指定的系统服务角色，您可以授权物联网平台访问您的消息队列RocketMQ服务。授权角色信息：<br>`{"roleArn":"acs:ram::6541*\\**:role/aliyuniotaccessingonsrole","roleName": "AliyunIOTAccessingONSRole"}`<br>请将`6541*\\**`替换成您的阿里云账号ID。您可以登录控制台，在账号安全设置页面查看您的账号ID。<br>`AliyunIOTAccessingONSRole`是访问控制中定义的服务角色。用于授予物联网平台访问消息队列RocketMQ。关于角色的更多信息，请在访问控制RAM控制台的角色管理页面进行角色管理。|

ONS类型**Configuration**示例：


```
{
    "instanceId": "MQ_INST_123157908552****_XXXXXX"
    "topic": "aliyun-iot-XXXXX",
    "regionName": "cn-hangzhou",
    "role": {
        "roleArn": "acs:ram::6541***:role/aliyuniotaccessingonsrole",
        "roleName": "AliyunIOTAccessingONSRole"
    }
}
```

**AMQP类型Configuration定义**

|名称|描述|
|-------------|------------|
|groupId|消费组ID。|

AMQP类型**Configuration**示例：

```
{
    "groupId":"ZTh1JmyLGuZcUfv44p4z00****"
}
```

调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的规则ID。可在物联网平台控制台对应实例下，**消息转发**>**云产品流转**页查看，或调用[ListRule](~~69486~~)从返回结果中查看。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '100000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'A8F48485-44B9-40D8-A56D-F716F384F387',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"A8F48485-44B9-40D8-A56D-F716F384F387\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<DeleteRuleResponse>\\r\\n    <RequestId>A8F48485-44B9-40D8-A56D-F716F384F387</RequestId>\\r\\n    <Success>true</Success>\\r\\n</DeleteRuleResponse>","errorExample":""}]',
      'title' => '删除指定的规则',
      'summary' => '调用该接口删除指定的规则。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteRuleAction' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ActionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的规则动作ID。

调用[CreateRuleAction](~~69586~~)创建规则动作成功后，返回的规则动作ID，您也可以调用[ListRuleActions](~~69517~~)，从返回结果中查看对应的规则动作ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '100001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '8FC9E36B-E0DC-4802-84EE-184E255B4E95',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"8FC9E36B-E0DC-4802-84EE-184E255B4E95\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<DeleteRuleActionResponse>\\r\\n    <RequestId>8FC9E36B-E0DC-4802-84EE-184E255B4E95</RequestId>\\r\\n    <Success>true</Success>\\r\\n</DeleteRuleActionResponse>","errorExample":""}]',
      'title' => '删除指定的规则动作',
      'summary' => '调用该接口删除指定的规则动作。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

  > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的规则ID。可在物联网平台控制台对应实例下，**消息转发**>**云产品流转**页查看规则ID，或调用[ListRule](~~69486~~)从返回结果中查看。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '100000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '58D4CEC0-3E95-4DBE-AFC1-809D1400E52F',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RuleInfo' => 
              array (
                'description' => '调用成功时，返回的规则详细信息。详情参见以下RuleInfo。',
                'type' => 'object',
                'properties' => 
                array (
                  'Modified' => 
                  array (
                    'description' => '该规则最近一次被修改时的CST时间。',
                    'type' => 'string',
                    'example' => 'Thu Feb 28 14:20:58 CST 2019',
                  ),
                  'Status' => 
                  array (
                    'description' => '该规则的运行状态。取值：

- **RUNNING**：运行中
- **STOP**：停止',
                    'type' => 'string',
                    'example' => 'STOP',
                  ),
                  'DataType' => 
                  array (
                    'description' => '该规则的数据类型，取值：**JSON**或**BINARY**。',
                    'type' => 'string',
                    'example' => 'JSON',
                  ),
                  'Select' => 
                  array (
                    'description' => '该规则SQL语句中的**Select**内容。',
                    'type' => 'string',
                    'example' => 'deviceName() as deviceName',
                  ),
                  'UtcCreated' => 
                  array (
                    'description' => '规则创建时的UTC时间。',
                    'type' => 'string',
                    'example' => '2019-02-28T06:14:33.000Z',
                  ),
                  'TopicType' => 
                  array (
                    'description' => '若您设置了规则SQL语句，则返回：

- **0**：表示基础通信Topic或物模型通信Topic。
- **1**：表示自定义Topic。
- **2**：表示设备状态Topic。

若未设置过规则SQL语句，则返回**-1**。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'CreateUserId' => 
                  array (
                    'description' => '创建该规则的用户ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '100000000000000',
                  ),
                  'Where' => 
                  array (
                    'description' => '该规则SQL语句中的**Where**查询条件。',
                    'type' => 'string',
                    'example' => 'Temperature>35',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => '应用该规则的产品ProductKey。',
                    'type' => 'string',
                    'example' => 'a1KiV******',
                  ),
                  'UtcModified' => 
                  array (
                    'description' => '规则最近一次更新时的UTC时间。',
                    'type' => 'string',
                    'example' => '2019-02-28T06:20:58.000Z',
                  ),
                  'Topic' => 
                  array (
                    'description' => '该规则所处理消息来源的完整Topic，格式为：`${productKey}/${deviceName}/topicShortName`。
> 若Topic包含通配符`+`或`#`，请参见[Topic通配符说明](~~73731~~)。',
                    'type' => 'string',
                    'example' => '/a1QsMlL44pp/+/user/pm25data',
                  ),
                  'ShortTopic' => 
                  array (
                    'description' => '该规则所处理消息来源的具体Topic（不包含ProductKey类目），格式为：`${deviceName}/topicShortName`。其中，${deviceName}是具体设备的名称，topicShortName是Topic余下部分。
> 若Topic包含通配符`+`或`#`，请参见[Topic通配符说明](~~73731~~)。',
                    'type' => 'string',
                    'example' => '+/user/pm25data',
                  ),
                  'RuleDesc' => 
                  array (
                    'description' => '规则的描述信息。',
                    'type' => 'string',
                    'example' => 'rule1Desc',
                  ),
                  'Name' => 
                  array (
                    'description' => '规则名称。',
                    'type' => 'string',
                    'example' => 'iotrules',
                  ),
                  'Created' => 
                  array (
                    'description' => '该规则创建时的CST时间。',
                    'type' => 'string',
                    'example' => 'Thu Feb 28 14:14:33 CST 2019',
                  ),
                  'Id' => 
                  array (
                    'description' => '规则ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '100000',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"58D4CEC0-3E95-4DBE-AFC1-809D1400E52F\\",\\n  \\"Success\\": true,\\n  \\"RuleInfo\\": {\\n    \\"Modified\\": \\"Thu Feb 28 14:20:58 CST 2019\\",\\n    \\"Status\\": \\"STOP\\",\\n    \\"DataType\\": \\"JSON\\",\\n    \\"Select\\": \\"deviceName() as deviceName\\",\\n    \\"UtcCreated\\": \\"2019-02-28T06:14:33.000Z\\",\\n    \\"TopicType\\": 1,\\n    \\"CreateUserId\\": 100000000000000,\\n    \\"Where\\": \\"Temperature>35\\",\\n    \\"ProductKey\\": \\"a1KiV******\\",\\n    \\"UtcModified\\": \\"2019-02-28T06:20:58.000Z\\",\\n    \\"Topic\\": \\"/a1QsMlL44pp/+/user/pm25data\\",\\n    \\"ShortTopic\\": \\"+/user/pm25data\\",\\n    \\"RuleDesc\\": \\"rule1Desc\\",\\n    \\"Name\\": \\"iotrules\\",\\n    \\"Created\\": \\"Thu Feb 28 14:14:33 CST 2019\\",\\n    \\"Id\\": 100000\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<GetRuleResponse>\\n<RequestId>85648524-E5EE-418E-BD16-FAFBB4FF3645</RequestId>\\n<Success>true</Success>\\n<RuleInfo>\\n    <DataType>JSON</DataType>\\n    <ShortTopic>+/user/pm25data</ShortTopic>\\n    <ProductKey>a1QsMl****</ProductKey>\\n    <UtcModified>2019-12-23T03:34:45.000Z</UtcModified>\\n    <CreateUserId>198426864326****</CreateUserId>\\n    <UtcCreated>2019-12-23T02:32:06.000Z</UtcCreated>\\n    <Name>Ruff_rule1</Name>\\n    <Status>RUNNING</Status>\\n    <Select>deviceName() as deviceName , timestamp(\'yyyy-MM-dd HH:mm:ss\') as time, pm25, pm10</Select>\\n    <Created>Mon Dec 23 10:32:06 CST 2019</Created>\\n    <Modified>Mon Dec 23 11:34:45 CST 2019</Modified>\\n    <TopicType>1</TopicType>\\n    <Topic>/a1QsMlL****/+/user/pm25data</Topic>\\n    <Id>425367</Id>\\n</RuleInfo>\\n</GetRuleResponse>","errorExample":""}]',
      'title' => '查询指定规则的详细信息',
      'summary' => '调用该接口查询指定规则的详细信息。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetRuleAction' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ActionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的规则动作ID。

您可以通过以下方式查询规则动作ID：
- 调用[CreateRuleAction](~~69586~~)，返回的**ActionId**参数值。
- 调用[ListRuleActions](~~69517~~)，返回的**Id**参数值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '100001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'F2D0755D-F350-40FE-9A6D-491859DB5E5F',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RuleActionInfo' => 
              array (
                'description' => '调用成功时，返回的规则动作详细信息。详情参见以下参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'ErrorActionFlag' => 
                  array (
                    'description' => '该规则动作是否为转发错误操作数据的转发动作，即转发流转到其他云产品失败且重试失败的数据。

- **true**：该规则动作转发错误操作数据。
- **false**：该规则动作不转发错误操作数据，而是正常转发操作。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'Type' => 
                  array (
                    'description' => '规则动作类，取值：

- **REPUBLISH**：转发到另一个topic。
- **OTS**：存储到表格存储。
- **MNS**：发送消息到消息服务。
<props="china">- **ONS**：发送数据到消息队列。</props>
<props="china">- **TSDB**：存储到高性能时间序列数据库。</props>
- **FC**：发送数据到函数计算。
<props="china">- **DATAHUB**：发送数据到DataHub中。</props>
- **RDS**：存储数据到云数据库中。
- **AMQP**：数据流转到AMQP消费组。

',
                    'type' => 'string',
                    'example' => 'REPUBLISH',
                  ),
                  'Configuration' => 
                  array (
                    'description' => '该规则动作的配置信息。',
                    'type' => 'string',
                    'example' => '{\\"topic\\":\\"/sys/a1zSA28****/device/thing/service/property/set\\",\\"topicType\\":0,\\"uid\\":\\"1231579*******\\"}',
                  ),
                  'Id' => 
                  array (
                    'description' => '规则动作ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '100001',
                  ),
                  'RuleId' => 
                  array (
                    'description' => '该规则动作对应的规则ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '152323',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"F2D0755D-F350-40FE-9A6D-491859DB5E5F\\",\\n  \\"Success\\": true,\\n  \\"RuleActionInfo\\": {\\n    \\"ErrorActionFlag\\": false,\\n    \\"Type\\": \\"REPUBLISH\\",\\n    \\"Configuration\\": \\"{\\\\\\\\\\\\\\"topic\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"/sys/a1zSA28****/device/thing/service/property/set\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"topicType\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"uid\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1231579*******\\\\\\\\\\\\\\"}\\",\\n    \\"Id\\": 100001,\\n    \\"RuleId\\": 152323\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<GetRuleActionResponse>\\r\\n    <RuleActionInfo>\\r\\n        <Type>REPUBLISH</Type>\\r\\n        <RuleId>152323</RuleId>\\r\\n        <Id>100001</Id>\\r\\n        <Configuration>\\r\\n            <topic>/sys/a1zSA28****/device/thing/service/property/set</topic>\\r\\n            <topicType>0</topicType>\\r\\n            <uid>1231579*******</uid>\\r\\n        </Configuration>\\r\\n        <ErrorActionFlag>false</ErrorActionFlag>\\r\\n    </RuleActionInfo>\\r\\n    <RequestId>F2D0755D-F350-40FE-9A6D-491859DB5E5F</RequestId>\\r\\n    <Success>true</Success>\\r\\n</GetRuleActionResponse>","errorExample":""}]',
      'title' => '查询指定规则动作的详细信息',
      'summary' => '调用该接口查询指定规则动作的详细信息。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '显示返回结果中的第几页。最大取值为1000，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数量。最大值为100，默认值为10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '2',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。

><notice>目前，物联网平台仅支持实例维度的资源组管理。请求参数**ResourceGroupId**配置已无效，无需再传入。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfmxazb4ph****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '1564B626-DE97-452D-9E9B-305888AC6105',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的记录数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Total' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '25',
              ),
              'Page' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RuleInfo' => 
                  array (
                    'description' => '调用成功时，返回的规则信息列表。详情参见**RuleInfo**信息。

> 返回规则信息按照规则创建时间倒序排列。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Modified' => 
                        array (
                          'description' => '该规则最近一次被修改时的CST （Central Standard Time）时间。',
                          'type' => 'string',
                          'example' => 'Wed Feb 27 20:45:43 CST 2019',
                        ),
                        'Status' => 
                        array (
                          'description' => '该规则的运行状态。取值：

- **RUNNING**：运行中。
- **STOP**：停止。',
                          'type' => 'string',
                          'example' => 'STOP',
                        ),
                        'DataType' => 
                        array (
                          'description' => '该规则的数据类型，取值：**JSON**和**BINARY**。',
                          'type' => 'string',
                          'example' => 'JSON',
                        ),
                        'Select' => 
                        array (
                          'description' => '该规则SQL语句中的**Select**内容。',
                          'type' => 'string',
                          'example' => 'deviceName() as deviceName',
                        ),
                        'UtcCreated' => 
                        array (
                          'description' => '该规则创建时的UTC时间。',
                          'type' => 'string',
                          'example' => '2019-02-27T12:40:43.000Z',
                        ),
                        'CreateUserId' => 
                        array (
                          'description' => '创建该规则的用户ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1231579085000000',
                        ),
                        'Where' => 
                        array (
                          'description' => '该规则SQL语句中的**Where**查询条件。',
                          'type' => 'string',
                          'example' => 'Temperature>35',
                        ),
                        'ProductKey' => 
                        array (
                          'description' => '应用该规则的产品**Productkey**。',
                          'type' => 'string',
                          'example' => 'a1KiV******',
                        ),
                        'UtcModified' => 
                        array (
                          'description' => '该规则最近一次被修改时的UTC时间。',
                          'type' => 'string',
                          'example' => '2019-02-27T12:45:43.000Z',
                        ),
                        'Topic' => 
                        array (
                          'description' => '应用该规则的具体Topic，格式为：`${productKey}/${deviceName}/topicShortName`。
> 若Topic包含通配符`+`或`#`，请参见[Topic通配符说明](~~73731~~)。',
                          'type' => 'string',
                          'example' => '/a1T27vz****/+/thing/event/property/post',
                        ),
                        'ShortTopic' => 
                        array (
                          'description' => '应用该规则的具体Topic（不包含ProductKey类目），格式为：`${deviceName}/topicShortName`。其中，${deviceName}是具体设备的名称，topicShortName是Topic余下部分。
> 若Topic包含通配符`+`或`#`，请参见[Topic通配符说明](~~73731~~)。',
                          'type' => 'string',
                          'example' => '+/thing/event/property/post',
                        ),
                        'RuleDesc' => 
                        array (
                          'description' => '规则的描述信息。',
                          'type' => 'string',
                          'example' => 'rule1Desc',
                        ),
                        'Name' => 
                        array (
                          'description' => '规则名称。',
                          'type' => 'string',
                          'example' => 'test123',
                        ),
                        'Created' => 
                        array (
                          'description' => '该规则创建时的CST（Central Standard Time）时间。',
                          'type' => 'string',
                          'example' => 'Wed Feb 27 20:45:43 CST 2019',
                        ),
                        'Id' => 
                        array (
                          'description' => '规则ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '151454',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1564B626-DE97-452D-9E9B-305888AC6105\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 2,\\n  \\"Total\\": 25,\\n  \\"Page\\": 1,\\n  \\"Data\\": {\\n    \\"RuleInfo\\": [\\n      {\\n        \\"Modified\\": \\"Wed Feb 27 20:45:43 CST 2019\\",\\n        \\"Status\\": \\"STOP\\",\\n        \\"DataType\\": \\"JSON\\",\\n        \\"Select\\": \\"deviceName() as deviceName\\",\\n        \\"UtcCreated\\": \\"2019-02-27T12:40:43.000Z\\",\\n        \\"CreateUserId\\": 1231579085000000,\\n        \\"Where\\": \\"Temperature>35\\",\\n        \\"ProductKey\\": \\"a1KiV******\\",\\n        \\"UtcModified\\": \\"2019-02-27T12:45:43.000Z\\",\\n        \\"Topic\\": \\"/a1T27vz****/+/thing/event/property/post\\",\\n        \\"ShortTopic\\": \\"+/thing/event/property/post\\",\\n        \\"RuleDesc\\": \\"rule1Desc\\",\\n        \\"Name\\": \\"test123\\",\\n        \\"Created\\": \\"Wed Feb 27 20:45:43 CST 2019\\",\\n        \\"Id\\": 151454\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<ListRuleResponse>\\n<Data>\\n    <RuleInfo>\\n        <DataType>JSON</DataType>\\n        <ProductKey>a1T27vz****</ProductKey>\\n        <CreateUserId>198426864326****</CreateUserId>\\n        <UtcModified>2020-02-26T06:38:27.000Z</UtcModified>\\n        <UtcCreated>2020-02-26T02:50:44.000Z</UtcCreated>\\n        <Where>Temperature&gt;35</Where>\\n        <Name>testrule2</Name>\\n        <Status>STOP</Status>\\n        <Select>deviceName() as DeviceName</Select>\\n        <Created>Wed Feb 26 10:50:44 CST 2020</Created>\\n        <Modified>Wed Feb 26 14:38:27 CST 2020</Modified>\\n        <Topic>/a1T27vz****/+/thing/event/property/post</Topic>\\n        <Id>497350</Id>\\n    </RuleInfo>\\n</Data>\\n<Page>1</Page>\\n<PageSize>1</PageSize>\\n<RequestId>1A6131EC-7504-4673-B997-DEFC6B363A37</RequestId>\\n<Success>true</Success>\\n<Total>5</Total>\\n</ListRuleResponse>","errorExample":""}]',
      'title' => '分页查询所有规则列表',
      'summary' => '调用该接口分页查询所有规则列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。

   > 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListRuleActions' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的规则ID。

您可调用[ListRule](~~69486~~)接口从返回结果中查看**Id**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '10000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '22254BDB-3DC1-4643-8D1B-EE0437EF09A9',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RuleActionList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RuleActionInfo' => 
                  array (
                    'description' => '调用成功后，返回规则下所有数据目的列表。详细信息，请参见以下**RuleActionInfo**所包含的参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '数据目的对应的操作类型。返回值：

- **REPUBLISH**：转发到另一个topic。
- **OTS**：存储到表格存储。
- **MNS**：发送消息到消息服务。
- **ONS**：发送数据到消息队列RocketMQ。
- **TSDB**：存储到时序数据库。
- **FC**：发送数据到函数计算。
<props="china">- **DATAHUB**：发送数据到DataHub中。</props>
- **RDS**：存储数据到云数据库中。
- **AMQP**：数据流转到AMQP消费组。
',
                          'type' => 'string',
                          'example' => 'OTS',
                        ),
                        'Status' => 
                        array (
                          'description' => '数据目的对应的状态。返回值：
- **INIT**：初始配置中。
- **NORMAL**：配置完成，正常可用。
- **INVALID**：配置存在异常，不可用。
- **SHORTCUT**：云产品流转服务发生异常，导致流转熔断。',
                          'type' => 'string',
                          'example' => 'NORMAL',
                        ),
                        'Configuration' => 
                        array (
                          'description' => '数据目的对应的配置信息。',
                          'type' => 'string',
                          'example' => '{\\"endPoint\\":\\"http://ShanghaiRegion.cn-shanghai.ots.aliyuncs.com\\",\\"instanceName\\":\\"ShanghaiRegion\\",\\"primaryKeys\\":[{\\"columnName\\":\\"temperature\\",\\"columnType\\":\\"INTEGER\\",\\"columnValue\\":\\"${deviceName}\\"}],\\"regionName\\":\\"cn-shanghai\\",\\"role\\":{\\"roleArn\\":\\"acs:ram::1231579085******:role/aliyuniotaccessingotsrole\\",\\"roleName\\":\\"AliyunIOTAccessingOTSRole\\"},\\"tableName\\":\\"iottest\\",\\"uid\\":\\"1231579085******\\"}',
                        ),
                        'ErrorActionFlag' => 
                        array (
                          'description' => '该数据目的配置是否为转发错误操作数据，即转发流转到其他云产品失败且重试失败的数据。

- **true**：是转发错误操作数据。
- **false**：不是转发错误操作数据，而是正常转发操作。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Id' => 
                        array (
                          'description' => '数据目的对应的操作ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '139099',
                        ),
                        'RuleId' => 
                        array (
                          'description' => '数据目的对应的规则ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '10000',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"22254BDB-3DC1-4643-8D1B-EE0437EF09A9\\",\\n  \\"Success\\": true,\\n  \\"RuleActionList\\": {\\n    \\"RuleActionInfo\\": [\\n      {\\n        \\"Type\\": \\"OTS\\",\\n        \\"Status\\": \\"NORMAL\\",\\n        \\"Configuration\\": \\"{\\\\\\\\\\\\\\"endPoint\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"http://ShanghaiRegion.cn-shanghai.ots.aliyuncs.com\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"instanceName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"ShanghaiRegion\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"primaryKeys\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"columnName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"temperature\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"columnType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"INTEGER\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"columnValue\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"${deviceName}\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\"regionName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"cn-shanghai\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"role\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"roleArn\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"acs:ram::1231579085******:role/aliyuniotaccessingotsrole\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"roleName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"AliyunIOTAccessingOTSRole\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"tableName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"iottest\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"uid\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1231579085******\\\\\\\\\\\\\\"}\\",\\n        \\"ErrorActionFlag\\": false,\\n        \\"Id\\": 139099,\\n        \\"RuleId\\": 10000\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListRuleActionsResponse>\\n<RuleActionList>\\n    <RuleActionInfo>\\n        <Type>OTS</Type>\\n        <RuleId>10000</RuleId>\\n        <Id>139099</Id>\\n        <Status>NORMAL</Status>\\n        <Configuration>{\\"endPoint\\":\\"http://ShanghaiRegion.cn-shanghai.ots.aliyuncs.com\\",\\"instanceName\\":\\"ShanghaiRegion\\",\\"primaryKeys\\":[{\\"columnName\\":\\"temperature\\",\\"columnType\\":\\"INTEGER\\",\\"columnValue\\":\\"${deviceName}\\"}],\\"regionName\\":\\"cn-shanghai\\",\\"role\\":{\\"roleArn\\":\\"acs:ram::1231579085******:role/aliyuniotaccessingotsrole\\",\\"roleName\\":\\"AliyunIOTAccessingOTSRole\\"},\\"tableName\\":\\"iottest\\",\\"uid\\":\\"1231579085******\\"}</Configuration>\\n        <ErrorActionFlag>false</ErrorActionFlag>\\n    </RuleActionInfo>\\n    <RuleActionInfo>\\n        <Type>REPUBLISH</Type>\\n        <RuleId>152323</RuleId>\\n        <Id>142401</Id>\\n        <Status>NORMAL</Status>\\n        <Configuration>{\\"topic\\":\\"/sys/a1zSA28H***/device/thing/service/property/set\\",\\"topicType\\":0,\\"uid\\":\\"1231579085******\\"}</Configuration>\\n        <ErrorActionFlag>false</ErrorActionFlag>\\n    </RuleActionInfo>\\n</RuleActionList>\\n<RequestId>22254BDB-3DC1-4643-8D1B-EE0437EF09A9</RequestId>\\n<Success>true</Success>\\n</ListRuleActionsResponse>","errorExample":""}]',
      'title' => '查询指定规则下的所有转发数据动作列表',
      'summary' => '调用该接口查询指定规则下的所有转发数据动作列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StartRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要启动的规则ID。可调用[ListRule](~~69486~~)从返回结果中查看。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '100000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '9A2F243E-17FE-4846-BAB5-D02A25155AC4',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"9A2F243E-17FE-4846-BAB5-D02A25155AC4\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<StartRuleResponse>\\r\\n    <RequestId>9A2F243E-17FE-4846-BAB5-D02A25155AC4</RequestId>\\r\\n    <Success>true</Success>\\r\\n</StartRuleResponse>","errorExample":""}]',
      'title' => '启动指定的规则',
      'summary' => '调用该接口启动指定的规则。',
      'description' => '## 使用说明
启动规则前需要确认该规则已经配置了SQL。如果创建规则时没有配置SQL，请调用[UpdateRule](~~69513~~)更新规则，补充SQL配置。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StopRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要停止的规则ID。可在物联网平台控制台对应实例下，**消息转发**>**云产品流转**页查看规则ID，或调用[ListRule](~~69486~~)从返回结果中查看。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '100000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '9A2F243E-17FE-4846-BAB5-D02A25155AC4',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**表示调用成功。
- **false**表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"9A2F243E-17FE-4846-BAB5-D02A25155AC4\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<StopRuleResponse>\\r\\n    <RequestId>9A2F243E-17FE-4874-QBB5-D02A25155AC8</RequestId>\\r\\n    <Success>true</Success>\\r\\n</StopRuleResponse>","errorExample":""}]',
      'title' => '停止指定规则',
      'summary' => '调用该接口停止指定的规则。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的规则ID。可在物联网平台控制台对应实例下，**消息转发**>**云产品流转**页查看规则ID，或调用[ListRule](~~69486~~)从返回结果中查看。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '100000',
          ),
        ),
        2 => 
        array (
          'name' => 'Select',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要执行的SQL SELECT语句。具体内容参照[SQL表达式](~~30554~~)。

> 此处传入的是SELECT下的内容。例如，如果SELECT语句为`SELECT a,b,c`，则此处传入`a,b,c`。',
            'type' => 'string',
            'required' => false,
            'example' => 'deviceName() as deviceName, items.Humidity.value as Humidity, items.Temperature.value as Temperature',
          ),
        ),
        3 => 
        array (
          'name' => 'ShortTopic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用该规则的具体Topic，格式一般为：`${deviceName}/topicShortName`。其中，`${deviceName}`是具体设备的名称，`topicShortName`是Topic短名称。

- 基础通信Topic或物模型通信Topic的ShortTopic，格式一般为：`${deviceName}/topicShortName`。其中，`${deviceName}`可以使用通配符`+`代替，表示产品下所有设备名称。`topicShortName`取值如下：

    - `/thing/event/property/post `设备上报的属性消息。
    - `/thing/event/${tsl.event.identifier}/post`设备上报的事件消息，`${}`中是产品物模型中事件identifier。
    - `/thing/lifecycle` 设备生命周期变更消息。
    - `/thing/downlink/reply/message`设备响应云端指令的结果消息。
    - `/thing/list/found`网关上报发现子设备消息。
    - `/thing/topo/lifecycle`设备拓扑关系变更消息。
    - `/thing/event/property/history/post`设备历史属性上报消息。
    - `/thing/event/${tsl.event.identifier}/history/post`设备历史事件上报消息，`${}`中是产品物模型中事件identifier。
    - `/ota/upgrade`设备OTA升级状态通知消息。
    - `/ota/version/post`设备OTA模块版本号上报消息。
    - `/thing/deviceinfo/update`设备标签变更消息。
    - `/edge/driver/${driver_id}/point_post`物联网边缘计算的透传模式Topic消息，`${}`中是物联网边缘计算的设备接入驱动ID。

 OTA升级批次状态通知Topic也属于基础通信Topic，ShortTopic格式为：`${packageId}/${jobId}/ota/job/status`。其中，`${packageId}`是升级包ID，`${jobId}`是升级批次ID。
- 自定义Topic的ShortTopic，如：`${deviceName}/user/get`。

  调用[QueryProductTopic](~~69647~~)接口，可以查看产品下的所有自定义Topic类。

    指定自定义Topic时，可以使用通配符`+`和`#`。
    - `${deviceName}`可以使用通配符`+`代替，表示产品下所有设备；
    - 之后字段可以用`/user/#`，`#`表示`/user`层级之后的所有层级名称。
    使用通配符，请参见[Topic类中的通配符](~~85539~~)。
- 设备状态变化通知Topic的ShortTopic：`${deviceName}`。

 可以直接使用通配符`+`，表示产品下所有设备的状态变化通知。',
            'type' => 'string',
            'required' => false,
            'example' => '+/thing/event/property/post',
          ),
        ),
        4 => 
        array (
          'name' => 'Where',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则的触发条件。具体内容参照[SQL表达式](~~30554~~)。

> 此处传入的是WHERE中的内容。例如，如果WHERE语句为`WHERE a>10`，则此处传入`a>10`。',
            'type' => 'string',
            'required' => false,
            'example' => 'Temperature>35',
          ),
        ),
        5 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用该规则的产品**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'aladaeW****',
          ),
        ),
        6 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则名称。支持中文、英文字母、日文、数字、下划线（_）和短划线（-），长度为1~30个字符，一个中文或日文占2个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test_2',
          ),
        ),
        7 => 
        array (
          'name' => 'RuleDesc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则的描述信息。长度限制为100个字符，一个中文字符计为1个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        8 => 
        array (
          'name' => 'TopicType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- **0**：**ShortTopic**参数描述中的基础通信Topic或物模型通信Topic，包含OTA升级批次状态通知Topic。
- **1**：自定义Topic。
- **2**：设备状态变化通知Topic：`/as/mqtt/status/${productKey}/${deviceName}`。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'Topic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待修改规则的完整Topic。

如果传入此参数，无需再传入参数**ProductKey**、**ShortTopic**和**TopicType**。',
            'type' => 'string',
            'required' => false,
            'example' => '/sys/g18l***/device1/thing/event/property/post',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '9A2F243E-17FE-4846-BAB5-D02A25155AC4',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"9A2F243E-17FE-4846-BAB5-D02A25155AC4\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<UpdateRuleResponse>\\r\\n    <RequestId>9A2F243E-17FE-4874-QBB5-D02A25155AC8</RequestId>\\r\\n    <Success>true</Success>\\r\\n</UpdateRuleResponse>","errorExample":""}]',
      'title' => '更新规则',
      'summary' => '调用该接口修改指定的规则。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateRuleAction' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ActionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的规则动作ID。

调用[CreateRuleAction](~~69586~~)创建规则动作成功后，返回的规则动作ID，您也可以调用[ListRuleActions](~~69517~~)，从返回结果中查看对应的规则动作ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1000003',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则动作类型，取值：

<props="china">- **DATAHUB**：流转规则处理后的Topic数据至阿里云DataHub，进行流式数据处理。</props>
<props="china">- **ONS**：流转规则处理后的Topic数据至阿里云消息队列RocketMQ，进行消息分发。</props>
- **MNS**：流转规则处理后的Topic数据至阿里云消息服务中，进行消息传输。
- **FC**：流转规则处理后的Topic数据至阿里云函数计算服务，进行事件计算。
- **REPUBLISH**：流转规则处理后的Topic数据至另一个物联网平台 Topic。
- **AMQP**：数据流转到AMQP消费组。
- **OTS**：流转规则处理后的Topic数据至阿里云表格存储，进行NoSQL数据存储。

> - 数据格式为二进制的规则（即规则的**DataType**参数是**BINARY**）不支持转发数据至OTS（表格存储）。
- 服务地域不同，规则引擎所支持的数据转发目标云产品不同。具体请参见规则引擎相关[地域和可用区](~~85669~~)。
',
            'type' => 'string',
            'required' => true,
            'example' => 'REPUBLISH',
          ),
        ),
        3 => 
        array (
          'name' => 'Configuration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该规则动作的配置信息。不同规则动作类型所需配置内容不同。具体要求，请参见[CreateRuleAction](~~69586~~)的请求参数补充说明中的各规则动作类型的Configuration描述。',
            'type' => 'string',
            'required' => true,
            'example' => '{"topic":"/a1iYSOl****/device5/user/get","topicType":1}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '21D327AF-A7DE-4E59-B5D1-ACAC8C024555',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"21D327AF-A7DE-4E59-B5D1-ACAC8C024555\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<UpdateRuleActionResponse>\\r\\n    <RequestId>9A2F243E-17FE-4874-QBB5-D02A25155AC8</RequestId>\\r\\n    <Success>true</Success>\\r\\n</UpdateRuleActionResponse>","errorExample":""}]',
      'title' => '修改指定的规则动作',
      'summary' => '调用该接口修改指定的规则动作。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateParser' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-n8t***',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器名称，支持中文、英文字母、日文、数字、下划线（_）和短划线（-），长度为1~30个字符，一个中文及日文占2个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'DataParser',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => '转发数据。',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '291438BA-6E10-4C4C-B761-243B9A0D324F',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ParserId' => 
              array (
                'description' => '创建解析器成功，返回的解析器ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100*',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.CreateRuleException',
            'errorMessage' => 'An exception occurred while creating the rule.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.InvalidRuleName',
            'errorMessage' => 'The rule name is invalid',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.ConnectorCountExceed',
            'errorMessage' => 'The count of parser exceeds the maximum number',
          ),
          5 => 
          array (
            'errorCode' => 'iot.rule.ConnectorIsAlreadyExisted',
            'errorMessage' => 'The parser name already exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"291438BA-6E10-4C4C-B761-243B9A0D324F\\",\\n  \\"Success\\": true,\\n  \\"ParserId\\": 0\\n}","errorExample":""},{"type":"xml","example":"<CreateParserResponse>\\n<RequestId>291438BA-6E10-4C4C-B761-243B9A0D324F</RequestId>\\n<ParserId>100*</ParserId>\\n<Success>true</Success>\\n</CreateParserResponse>","errorExample":""}]',
      'title' => 'CreateParser',
      'summary' => '调用该接口创建解析器。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateParser' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-8t***',
          ),
        ),
        1 => 
        array (
          'name' => 'ParserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器ID。您可调用接口[ListParsers](~~429046~~)，查询解析器列表，获取**ParserId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9999999999',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器描述。',
            'type' => 'string',
            'required' => false,
            'example' => '转发数据。',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器名称，支持中文、英文字母、日文、数字、下划线（_）和短划线（-），长度为1~30个字符，一个中文及日文占2个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'DataParserTwo',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.common.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.UpdateRuleFailed',
            'errorMessage' => 'An error occurred while upgrading the rule.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.InvalidRuleName',
            'errorMessage' => 'The rule name is invalid',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRule',
            'errorMessage' => 'there are no rules',
          ),
          5 => 
          array (
            'errorCode' => 'iot.rule.ConnectorIsAlreadyExisted',
            'errorMessage' => 'The parser name already exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateParserResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</UpdateParserResponse>","errorExample":""}]',
      'title' => 'UpdateParser',
      'summary' => '调用该接口更新解析器名称和描述。',
      'description' => '## 使用说明
调用接口[CreateParser](~~429044~~)创建解析器成功后，若有业务需要，您可根据返回的**ParserId**更新对应解析器的名称和描述。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListParser' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的记录数量，最大值不超过100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '100',
            'minimum' => '0',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'SearchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '传入解析器名称中任意字符串，根据该字符串检索能匹配的解析器名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'DataParser',
          ),
        ),
        3 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页，取值范围为1~100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Total' => 
              array (
                'description' => '返回结果记录总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ParserList' => 
                  array (
                    'description' => '返回的解析器列表数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '解析器状态。可取值有：

- **RUNNING**：运行中。
- **STOP**：已停止。
- **ABNORMAL**：存在异常。',
                          'type' => 'string',
                          'example' => 'STOP',
                        ),
                        'Description' => 
                        array (
                          'description' => '解析器描述。',
                          'type' => 'string',
                          'example' => '转发数据。',
                        ),
                        'UtcModified' => 
                        array (
                          'description' => '更新解析器的UTC时间。格式为`yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'`。',
                          'type' => 'string',
                          'example' => '2022-03-25T12:45:43.000Z',
                        ),
                        'Name' => 
                        array (
                          'description' => '解析器名称。',
                          'type' => 'string',
                          'example' => 'DataParser',
                        ),
                        'UtcCreated' => 
                        array (
                          'description' => '创建解析器的UTC时间。格式为`yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'`。',
                          'type' => 'string',
                          'example' => '2022-03-21T12:45:43.000Z',
                        ),
                        'ParserId' => 
                        array (
                          'description' => '解析器ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1001',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.common.InvalidPageParams',
            'errorMessage' => 'The specified pagination size or pagination parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.common.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.QueryRulePageActionError',
            'errorMessage' => 'An error occurred while querying the rule action list across multiple pages.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Total\\": 100,\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ParserList\\": [\\n      {\\n        \\"Status\\": \\"STOP\\",\\n        \\"Description\\": \\"转发数据。\\",\\n        \\"UtcModified\\": \\"2022-03-25T12:45:43.000Z\\",\\n        \\"Name\\": \\"DataParser\\",\\n        \\"UtcCreated\\": \\"2022-03-21T12:45:43.000Z\\",\\n        \\"ParserId\\": 1001\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListParserResponse>\\r\\n  <RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\r\\n  <Total>100</Total>\\r\\n  <Data>\\r\\n        <ParserList>\\r\\n              <Status>STOP</Status>\\r\\n              <Description>转发数据1。</Description>\\r\\n              <UtcCreated>2022-03-21T12:45:43.000Z</UtcCreated>\\r\\n              <UtcModified>2022-03-25T12:45:43.000Z</UtcModified>\\r\\n              <ParserId>1001</ParserId>\\r\\n              <Name>DataParser1</Name>\\r\\n        </ParserList>\\r\\n        <ParserList>\\r\\n              <Status>STOP</Status>\\r\\n              <Description>转发数据2。</Description>\\r\\n              <UtcCreated>2022-03-21T12:50:43.000Z</UtcCreated>\\r\\n              <UtcModified>2022-03-25T12:48:43.000Z</UtcModified>\\r\\n              <ParserId>1002</ParserId>\\r\\n              <Name>DataParser2</Name>\\r\\n        </ParserList>\\r\\n  </Data>\\r\\n  <Success>true</Success>\\r\\n</ListParserResponse>","errorExample":""}]',
      'title' => 'ListParser',
      'summary' => '调用该接口查询解析器列表信息，包括解析器基本信息、启动状态、创建时间和修改时间。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetParser' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-n8t***',
          ),
        ),
        1 => 
        array (
          'name' => 'ParserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器ID。您可调用接口[ListParsers](~~429046~~)，查询解析器列表，获取**ParserId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '999999999',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的解析器详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '解析器运行状态。可取值：

- **RUNNING**：运行中。
- **STOP**：已停止。
- **ABNORMAL**：存在异常。',
                    'type' => 'string',
                    'example' => 'STOP',
                  ),
                  'Description' => 
                  array (
                    'description' => '解析器描述。',
                    'type' => 'string',
                    'example' => '转发数据。',
                  ),
                  'UtcModified' => 
                  array (
                    'description' => '更新解析器的UTC时间。格式为`yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'`。',
                    'type' => 'string',
                    'example' => '2022-04-27T12:45:43.000Z',
                  ),
                  'DataSourceId' => 
                  array (
                    'description' => '解析器关联的数据源ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1003',
                  ),
                  'ScriptDraft' => 
                  array (
                    'description' => '解析器脚本的草稿。',
                    'type' => 'string',
                    'example' => 'var data = payload("json"); var h = data.items.Humidity.value; var t = data.items.Temperature.value; writeTsdb(1000,timestamp(),"temperature", t , {"deviceName":deviceName()}); writeTsdb(1000,timestamp(),"humidity", h , {"deviceName":deviceName()});',
                  ),
                  'UtcCreated' => 
                  array (
                    'description' => '创建解析器的UTC时间。格式为`yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'`。',
                    'type' => 'string',
                    'example' => '2022-03-27T12:45:43.000Z',
                  ),
                  'Name' => 
                  array (
                    'description' => '解析器名称。',
                    'type' => 'string',
                    'example' => 'DataParser',
                  ),
                  'Script' => 
                  array (
                    'description' => '解析器已发布脚本。',
                    'type' => 'string',
                    'example' => 'var data = payload("json"); var h = data.items.Humidity.value; var t = data.items.Temperature.value; writeTsdb(1000,timestamp(),"temperature", t , {"deviceName":deviceName()}); writeTsdb(1000,timestamp(),"humidity", h , {"deviceName":deviceName()});',
                  ),
                  'ParserId' => 
                  array (
                    'description' => '解析器ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1001',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.common.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.QueryRuleFailed',
            'errorMessage' => 'An error occurred while querying the rule.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRule',
            'errorMessage' => 'there are no rules',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Status\\": \\"STOP\\",\\n    \\"Description\\": \\"转发数据。\\",\\n    \\"UtcModified\\": \\"2022-04-27T12:45:43.000Z\\",\\n    \\"DataSourceId\\": 1003,\\n    \\"ScriptDraft\\": \\"var data = payload(\\\\\\"json\\\\\\"); var h = data.items.Humidity.value; var t = data.items.Temperature.value; writeTsdb(1000,timestamp(),\\\\\\"temperature\\\\\\", t , {\\\\\\"deviceName\\\\\\":deviceName()}); writeTsdb(1000,timestamp(),\\\\\\"humidity\\\\\\", h , {\\\\\\"deviceName\\\\\\":deviceName()});\\",\\n    \\"UtcCreated\\": \\"2022-03-27T12:45:43.000Z\\",\\n    \\"Name\\": \\"DataParser\\",\\n    \\"Script\\": \\"var data = payload(\\\\\\"json\\\\\\"); var h = data.items.Humidity.value; var t = data.items.Temperature.value; writeTsdb(1000,timestamp(),\\\\\\"temperature\\\\\\", t , {\\\\\\"deviceName\\\\\\":deviceName()}); writeTsdb(1000,timestamp(),\\\\\\"humidity\\\\\\", h , {\\\\\\"deviceName\\\\\\":deviceName()});\\",\\n    \\"ParserId\\": 1001\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetParserResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Data>\\n    <Status>STOP</Status>\\n    <Script>var data = payload(\\"json\\"); var h = data.items.Humidity.value; var t = data.items.Temperature.value; writeTsdb(1000,timestamp(),\\"temperature\\", t , {\\"deviceName\\":deviceName()}); writeTsdb(1000,timestamp(),\\"humidity\\", h , {\\"deviceName\\":deviceName()});</Script>\\n    <Description>转发数据。</Description>\\n    <UtcCreated>2022-03-27T12:45:43.000Z</UtcCreated>\\n    <ScriptDraft>var data = payload(\\"json\\"); var h = data.items.Humidity.value; var t = data.items.Temperature.value; writeTsdb(1000,timestamp(),\\"temperature\\", t , {\\"deviceName\\":deviceName()}); writeTsdb(1000,timestamp(),\\"humidity\\", h , {\\"deviceName\\":deviceName()});</ScriptDraft>\\n    <UtcModified>2022-04-27T12:45:43.000Z</UtcModified>\\n    <ParserId>1001</ParserId>\\n    <DataSourceId>1003</DataSourceId>\\n    <Name>DataParser</Name>\\n</Data>\\n<Success>true</Success>\\n</GetParserResponse>","errorExample":""}]',
      'title' => 'GetParser',
      'summary' => '调用该接口查询指定解析器的详细信息，包括解析器基本信息、解析脚本、运行状态和关联的数据源等。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteParser' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ParserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器ID。您可调用接口[ListParsers](~~429046~~)，查询解析器列表，获取**ParserId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9999999999',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.check.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.DeleteRuleFailed',
            'errorMessage' => 'An error occurred while deleting the rule.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.ruleng.RuleAlreadyIsStarted',
            'errorMessage' => 'The specified rule has already started',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRule',
            'errorMessage' => 'there are no rules',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteParserResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</DeleteParserResponse>","errorExample":""}]',
      'title' => 'DeleteParser',
      'summary' => '调用该接口删除解析器。',
      'description' => '## 使用说明
调用接口[CreateParser](~~429044~~)创建解析器成功后，若有业务需要，您可根据返回的**ParserId**删除对应解析器。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateParserDataSource' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-w2****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源名称，支持中文、英文字母、日文、数字、下划线（_）和短划线（-），长度为1~30个字符，一个中文及日文占2个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'DataSource',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => '设备数据。',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '291438BA-6E10-4C4C-B761-243B9A0D324F',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DataSource' => 
              array (
                'description' => '创建数据源成功后，返回的数据源信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'UtcCreated' => 
                  array (
                    'description' => '创建数据源的UTC时间。格式为`yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'`。',
                    'type' => 'string',
                    'example' => '2022-03-27T12:45:43.000Z',
                  ),
                  'Name' => 
                  array (
                    'description' => '数据源名称。',
                    'type' => 'string',
                    'example' => 'DataSource',
                  ),
                  'Description' => 
                  array (
                    'description' => '数据源描述信息。',
                    'type' => 'string',
                    'example' => '设备数据。',
                  ),
                  'DataSourceId' => 
                  array (
                    'description' => '数据源ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1001',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.CreateRuleException',
            'errorMessage' => 'An exception occurred while creating the rule.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.DataSourceCountExceed',
            'errorMessage' => 'The count of data source exceeds the maximum number',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.DataSourceExists',
            'errorMessage' => 'Same datasource is existed',
          ),
          5 => 
          array (
            'errorCode' => 'iot.rule.InvalidDataSourceName',
            'errorMessage' => 'The data source name is invalid',
          ),
          6 => 
          array (
            'errorCode' => 'iot.common.TooManyRequest',
            'errorMessage' => 'Request frequency is too high',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"291438BA-6E10-4C4C-B761-243B9A0D324F\\",\\n  \\"Success\\": true,\\n  \\"DataSource\\": {\\n    \\"UtcCreated\\": \\"2022-03-27T12:45:43.000Z\\",\\n    \\"Name\\": \\"DataSource\\",\\n    \\"Description\\": \\"设备数据。\\",\\n    \\"DataSourceId\\": 1001\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateParserDataSourceResponse>\\n<RequestId>291438BA-6E10-4C4C-B761-243B9A0D324F</RequestId>\\n<Success>true</Success>\\n<DataSource>\\n    <Description>设备数据。</Description>\\n    <UtcCreated>2022-03-27T12:45:43.000Z</UtcCreated>\\n    <DataSourceId>1001</DataSourceId>\\n    <Name>DataSource</Name>\\n</DataSource>\\n</CreateParserDataSourceResponse>","errorExample":""}]',
      'title' => 'CreateParserDataSource',
      'summary' => '调用该接口创建待流转的数据源。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateParserDataSource' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'DataSourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源ID。您可调用接口[ListParserDataSource](~~432676~~)，查询数据源列表，获取**DataSourceId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9999999999',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源名称，支持中文、英文字母、日文、数字、下划线（_）和短划线（-），长度为1~30个字符，一个中文及日文占2个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'DataSource',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => '设备数据。',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.UpdateRuleFailed',
            'errorMessage' => 'An error occurred while upgrading the rule.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.DataSourceNotExists',
            'errorMessage' => 'Datasource not existed',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.DataSourceExists',
            'errorMessage' => 'Same datasource is existed',
          ),
          5 => 
          array (
            'errorCode' => 'iot.rule.InvalidDataSourceName',
            'errorMessage' => 'The data source name is invalid',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateParserDataSourceResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</UpdateParserDataSourceResponse>","errorExample":""}]',
      'title' => '更新解析器的数据源',
      'summary' => '更新解析器的数据源。',
      'description' => '## 使用说明

调用接口[CreateParserDataSource](~~433011~~)创建数据源成功后，若有业务需要，您可根据返回的**DataSourceId**更新对应数据源的名称和描述。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListParserDataSource' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的记录数量，默认值为10，最大值不超过100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'SearchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '传入数据源名称中任意字符串，根据该字符串检索能匹配的数据源名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'DataSource',
          ),
        ),
        3 => 
        array (
          'name' => 'Page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页，默认值为1，取值范围为1~100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '999999',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '回结果中每页显示的记录数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '返回结果记录总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'Page' => 
              array (
                'description' => '显示返回结果中的第几页。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DataSource' => 
                  array (
                    'description' => '返回的数据源列表信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'UtcCreated' => 
                        array (
                          'description' => '创建数据源的UTC时间。格式为`yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'`。',
                          'type' => 'string',
                          'example' => '2022-03-27T12:45:43.000Z',
                        ),
                        'Name' => 
                        array (
                          'description' => '数据源名称。',
                          'type' => 'string',
                          'example' => 'DataSource',
                        ),
                        'Description' => 
                        array (
                          'description' => '数据源描述信息。',
                          'type' => 'string',
                          'example' => '设备数据。',
                        ),
                        'DataSourceId' => 
                        array (
                          'description' => '数据源ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1001',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRule',
            'errorMessage' => 'there are no rules.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 100,\\n  \\"Page\\": 1,\\n  \\"Data\\": {\\n    \\"DataSource\\": [\\n      {\\n        \\"UtcCreated\\": \\"2022-03-27T12:45:43.000Z\\",\\n        \\"Name\\": \\"DataSource\\",\\n        \\"Description\\": \\"设备数据。\\",\\n        \\"DataSourceId\\": 1001\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListParserDataSourceResponse>\\n<Data>\\n    <DataSource>\\n        <Description>设备1数据。</Description>\\n        <UtcCreated>2022-03-27T12:45:43.000Z</UtcCreated>\\n        <DataSourceId>1001</DataSourceId>\\n        <Name>DataSource1</Name>\\n    </DataSource>\\n    <DataSource>\\n        <Description>设备2数据。</Description>\\n        <UtcCreated>2022-04-27T12:45:43.000Z</UtcCreated>\\n        <DataSourceId>1002</DataSourceId>\\n        <Name>DataSource2</Name>\\n    </DataSource>\\n</Data>\\n<PageSize>10</PageSize>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Total>100</Total>\\n<Page>1</Page>\\n<Success>true</Success>\\n</ListParserDataSourceResponse>","errorExample":""}]',
      'title' => '查询解析器数据源列表',
      'summary' => '查询解析器数据源列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetParserDataSource' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'DataSourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源ID。您可调用接口[ListParserDataSource](~~432676~~)，查询数据源列表，获取**DataSourceId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9999999',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DataSource' => 
              array (
                'description' => '返回的数据源详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'UtcCreated' => 
                  array (
                    'description' => '创建数据源的UTC时间。格式为`yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'`。',
                    'type' => 'string',
                    'example' => '2022-03-27T12:45:43.000Z',
                  ),
                  'Description' => 
                  array (
                    'description' => '数据源描述信息。',
                    'type' => 'string',
                    'example' => '设备数据。',
                  ),
                  'Name' => 
                  array (
                    'description' => '数据源名称。',
                    'type' => 'string',
                    'example' => 'DataSource',
                  ),
                  'CreateUserId' => 
                  array (
                    'description' => '创建数据源的用户ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '11111111000000111',
                  ),
                  'DataSourceId' => 
                  array (
                    'description' => '数据源ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1001',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRule',
            'errorMessage' => 'there are no rules.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.DataSourceNotExists',
            'errorMessage' => 'Datasource not existed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"DataSource\\": {\\n    \\"UtcCreated\\": \\"2022-03-27T12:45:43.000Z\\",\\n    \\"Description\\": \\"设备数据。\\",\\n    \\"Name\\": \\"DataSource\\",\\n    \\"CreateUserId\\": 11111111000000112,\\n    \\"DataSourceId\\": 1001\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetParserDataSourceResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n<DataSource>\\n    <Description>设备数据。</Description>\\n    <UtcCreated>2022-03-27T12:45:43.000Z</UtcCreated>\\n    <CreateUserId>11111111000000112</CreateUserId>\\n    <DataSourceId>1001</DataSourceId>\\n    <Name>DataSource</Name>\\n</DataSource>\\n</GetParserDataSourceResponse>","errorExample":""}]',
      'title' => 'GetParserDataSource',
      'summary' => '调用该接口查询指定数据源的详细信息。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteParserDataSource' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'DataSourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源ID。您可调用接口[ListParserDataSource](~~432676~~)，查询数据源列表，获取**DataSourceId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '999999999',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.DeleteRuleFailed',
            'errorMessage' => 'An error occurred while deleting the rule.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.DataSourceNotExists',
            'errorMessage' => 'Datasource not existed',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.DataSourceBounded',
            'errorMessage' => 'data source has been bounded. unbound it first',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteParserDataSourceResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</DeleteParserDataSourceResponse>","errorExample":""}]',
      'title' => 'DeleteParserDataSource',
      'summary' => '调用该接口删除已创建的数据源。',
      'description' => '## 使用说明

调用接口[CreateParserDataSource](~~433011~~)创建数据源成功后，若有业务需要，您可根据返回的**DataSourceId**删除对应数据源。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateDataSourceItem' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-0pp1n8t***',
          ),
        ),
        1 => 
        array (
          'name' => 'DataSourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '999999999999',
            'minimum' => '0',
            'example' => '1002',
          ),
        ),
        2 => 
        array (
          'name' => 'Topic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用到规则引擎的具体Topic，格式一般为：`/${productKey}/${deviceName}/topicShortName`。其中，`${productKey}`是设备所属产品的**ProductKey**，`${deviceName}`是具体设备的名称，`topicShortName`是Topic剩余部分。

- 基础通信Topic或物模型通信Topic的格式一般为：`/${productKey}/${deviceName}/topicShortName`。其中，`${deviceName}`可以使用通配符`+`代替，表示产品下所有设备名称。`topicShortName`取值如下：

    - `/thing/event/property/post `设备上报的属性消息。
    - `/thing/event/${tsl.event.identifier}/post`设备上报的事件消息，`${}`中是产品物模型中事件identifier。
    - `/thing/lifecycle` 设备生命周期变更消息。
    - `/thing/downlink/reply/message`设备响应云端指令的结果消息。
    - `/thing/list/found`网关上报发现子设备消息。
    - `/thing/topo/lifecycle`设备拓扑关系变更消息。
    - `/thing/event/property/history/post`设备历史属性上报消息。
    - `/thing/event/${tsl.event.identifier}/history/post`设备历史事件上报消息，`${}`中是产品物模型中事件identifier。
    - `/ota/upgrade`设备OTA升级状态通知消息。
    - `/ota/version/post`设备OTA模块版本号上报消息。
    - `/thing/deviceinfo/update`设备标签变更消息。

    OTA升级批次状态通知Topic也属于基础通信Topic,格式为：`/${productKey}/${packageId}/${jobId}/ota/job/status`。其中，`${packageId}`是升级包ID，`${jobId}`是升级批次ID。
- 自定义消息Topic为：`/${productKey}/${deviceName}/user/#`，如：`/${productKey}/${deviceName}/user/get`。

  调用[QueryProductTopic](~~69647~~)接口，可以查看产品下的所有自定义Topic类。

    指定自定义Topic时，可以使用通配符`+`和`#`。
    - `${deviceName}`可以使用通配符`+`代替，表示产品下所有设备；
    - 之后字段可以用`/user/#`，`#`表示`/user`层级之后的所有层级名称。
    
- 设备状态变化通知Topic为：`/as/mqtt/status/${productKey}/${deviceName}`。

 可以直接使用通配符`+`，表示产品下所有设备的状态变化通知。

使用通配符，请参见[Topic类中的通配符](~~85539~~)。

Topic数据格式的详细说明，请参见[数据格式](~~73736~~)。

><notice>对于开源MQTT托管形态产品和设备，及MQTT云网关产品和设备，仅支持自定义的消息Topic、设备状态变化通知Topic和设备生命周期变更Topic。自定义的消息Topic说明，请参见消息通信说明。若输入自定义的消息Topic，需同时传入**ScopeType**和**ProductKey**。若**ScopeType**为**DEVICE**，还需传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => true,
            'example' => '/as/mqtt/status/gy***z/+',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义的消息Topic所属产品的**ProductKey**。

><notice>对于开源MQTT托管形态产品和设备，及MQTT云网关产品和设备，必须设置此参数。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'gy***z',
          ),
        ),
        4 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义的消息Topic所属的设备名称。

><notice>对于开源MQTT托管形态产品和设备，及MQTT云网关产品和设备，**Topic**为自定义的消息Topic时，**scopeType**为**DEVICE**时，必须设置此参数。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'device1',
          ),
        ),
        5 => 
        array (
          'name' => 'ScopeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义的消息Topic订阅的作用域，可取值：

- **PRODUCT **：产品维度，表示作用在产品下的所有设备上。即需同时传入**ProductKey**。
- **DEVICE **：设备维度，表示作用在产品下指定的设备上。即需同时传入**DeviceName**。

><notice>对于开源MQTT托管形态产品和设备，及MQTT云网关产品和设备，**Topic**为自定义的消息Topic时，必须设置此参数。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'PRODUCT',
            'enum' => 
            array (
              0 => 'PRODUCT',
              1 => 'DEVICE',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.prod.NotExistedProduct',
            'errorMessage' => 'The specified product does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.common.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.common.QueryProductActionError',
            'errorMessage' => 'query product info fail',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.DataSourceNotExists',
            'errorMessage' => 'data source not exist',
          ),
          5 => 
          array (
            'errorCode' => 'iot.rule.ItemExceedsLimit',
            'errorMessage' => 'item exceeds limit',
          ),
          6 => 
          array (
            'errorCode' => 'iot.rule.DataSourceItemExists',
            'errorMessage' => 'data source item exist',
          ),
          7 => 
          array (
            'errorCode' => 'iot.common.TooManyRequest',
            'errorMessage' => 'Request frequency is too high',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateDataSourceItemResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</CreateDataSourceItemResponse>","errorExample":""}]',
      'title' => 'CreateDataSourceItem',
      'summary' => '调用该接口为规则引擎中数据源添加Topic。',
      'description' => '## 使用说明
调用该接口前，请先创建数据源，具体操作，请参见[创建数据源的步骤1~步骤6](~~270932~~)；然后在物联网平台控制台对应实例下**消息转发 > 云产品流转**页面的**数据源**页签，查看**数据源ID**。

><notice>对于开源MQTT托管形态产品和设备，及MQTT云网关产品和设备，**Topic**为自定义的消息Topic时，必须传入**ScopeType**和**ProductKey**。若**ScopeType**为**DEVICE**，还需传入**DeviceName**。
></notice>

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDataSourceItem' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-0pp1n8t***',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的记录数量，取值范围为1~100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'DataSourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源ID。

调用[ListParserDataSource](~~432676~~)接口，可查看当前实例下所有数据源ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
        3 => 
        array (
          'name' => 'Page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页，取值范围为1~100,000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '100000',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'SearchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '传入Topic值中任意一段字符串，根据该字符串检索能匹配的Topic。',
            'type' => 'string',
            'required' => false,
            'example' => 'thing',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '返回结果中每页显示的记录数量。	',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '返回结果记录总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'Page' => 
              array (
                'description' => '显示返回结果中的第几页。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'DataSourceItems' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'dataSourceItem' => 
                  array (
                    'description' => '返回的Topic列表信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ProductKey' => 
                        array (
                          'description' => '消息Topic所属产品的**ProductKey**。

> 消息Topic属于开源MQTT托管形态产品和设备，或MQTT云网关产品和设备时，返回该参数。',
                          'type' => 'string',
                          'example' => 'aw3****',
                        ),
                        'DataSourceItemId' => 
                        array (
                          'description' => '数据源Topic的ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '129322',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '消息Topic所属的设备名称。

> 消息Topic属于开源MQTT托管形态产品和设备或MQTT云网关产品和设备时，返回该参数。',
                          'type' => 'string',
                          'example' => 'lightDevice',
                        ),
                        'ScopeType' => 
                        array (
                          'description' => '消息Topic订阅的作用域，可取值：

- **PRODUCT **：产品维度，表示作用在产品下的所有设备上。
- **DEVICE **：设备维度，表示作用在产品下指定的设备上。

> 消息Topic属于开源MQTT托管形态产品和设备，或MQTT云网关产品和设备时，返回该参数。',
                          'type' => 'string',
                          'example' => 'PRODUCT',
                        ),
                        'Topic' => 
                        array (
                          'description' => '数据源Topic的具体值。',
                          'type' => 'string',
                          'example' => '/gyh***z/+/thing/event/property/post',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.common.InvalidPageParams',
            'errorMessage' => 'The specified pagination size or pagination parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Iot.Device.NotExistedDevice',
            'errorMessage' => 'The device does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.DataSourceNotExists',
            'errorMessage' => 'Datasource not existed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 100,\\n  \\"Page\\": 1,\\n  \\"DataSourceItems\\": {\\n    \\"dataSourceItem\\": [\\n      {\\n        \\"ProductKey\\": \\"aw3****\\",\\n        \\"DataSourceItemId\\": 129322,\\n        \\"DeviceName\\": \\"lightDevice\\",\\n        \\"ScopeType\\": \\"PRODUCT\\",\\n        \\"Topic\\": \\"/gyh***z/+/thing/event/property/post\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListDataSourceItemResponse>\\n<DataSourceItems>\\n    <dataSourceItem>\\n        <DataSourceItemId>129322</DataSourceItemId>\\n        <Topic>/gyh***z/+/thing/event/property/post</Topic>\\n    </dataSourceItem>\\n</DataSourceItems>\\n<PageSize>1</PageSize>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Total>1</Total>\\n<Page>1</Page>\\n<Success>true</Success>\\n</ListDataSourceItemResponse>","errorExample":""}]',
      'title' => 'ListDataSourceItem',
      'summary' => '调用该接口分页查询规则引擎中指定数据源下的Topic列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDataSourceItem' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'DataSourceItemId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源Topic的ID。您可调用接口[ListDataSourceItem](~~421072~~)，查询指定数据源下的Topic列表，获取**DataSourceItemId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '99999999',
            'minimum' => '0',
            'example' => '129322',
          ),
        ),
        2 => 
        array (
          'name' => 'DataSourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源ID。您可调用接口[ListParserDataSource](~~432676~~)，查询数据源列表，获取**DataSourceId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '99999999',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'String	iot.system.SystemException	',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.DataSourceNotExists',
            'errorMessage' => 'Datasource not existed',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.DataSourceItemNotExists',
            'errorMessage' => 'datasource item not existed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"String\\\\tiot.system.SystemException\\\\t\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteDataSourceItemResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</DeleteDataSourceItemResponse>","errorExample":""}]',
      'title' => 'DeleteDataSourceItem',
      'summary' => '调用该接口删除指定数据源下的指定Topic。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateDestination' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Configuration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据目的对应的配置信息，传入格式为JSON String。不同规则动作类型所需内容不同，具体要求和示例请参见本表格下方的参数补充说明。',
            'type' => 'string',
            'required' => true,
            'example' => '{"topic":"/a1POX0c****/device1/user/get","topicType":1}',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据目的操作类型，可取值：

- **REPUBLISH**：将解析器脚本处理后的Topic数据转发至物联网平台的另一个通信Topic。
- **AMQP**：将解析器脚本处理后的Topic数据流转到AMQP消费组。
- **DATAHUB**：将解析器脚本处理后的Topic数据转发至阿里云DataHub，进行流式数据处理。
- **ONS**：将解析器脚本处理后的Topic数据转发至阿里云消息队列RocketMQ，进行消息分发。
- **MNS**：将解析器脚本处理后的Topic数据发送至阿里云消息服务中，进行消息传输。
- **FC**：将解析器脚本处理后的Topic数据发送至阿里云函数计算服务，进行事件计算。
- **OTS**：将解析器脚本处理后的Topic数据发送至阿里云表格存储（Tablestore），进行NoSQL数据存储。',
            'type' => 'string',
            'required' => true,
            'example' => 'REPUBLISH',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据目的名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'DataPurpose',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据目的描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => '数据流转至数据库。',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Destination' => 
              array (
                'description' => '创建成功后，返回的数据目的信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => '数据目的操作类型。',
                    'type' => 'string',
                    'example' => 'REPUBLISH',
                  ),
                  'DestinationId' => 
                  array (
                    'description' => '数据目的ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1003',
                  ),
                  'Configuration' => 
                  array (
                    'description' => '数据目的对应的配置信息。',
                    'type' => 'string',
                    'example' => '{"topic":"/a1POX0c****/device1/user/get","topicType":1}',
                  ),
                  'Name' => 
                  array (
                    'description' => '数据目的名称。',
                    'type' => 'string',
                    'example' => 'DataPurpose',
                  ),
                  'UtcCreated' => 
                  array (
                    'description' => '创建数据目的对应的UTC时间。格式为`yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'`。',
                    'type' => 'string',
                    'example' => '2022-03-27T12:45:43.000Z',
                  ),
                  'IsFailover' => 
                  array (
                    'description' => '该数据目的配置是否为转发错误操作数据，即转发流转到其他云产品失败且重试失败的数据。

- **true**：是转发错误操作数据。
- **false**：不是转发错误操作数据，而是正常转发操作。

默认值为**false**。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.ruleng.NullRuleActionConfig',
            'errorMessage' => 'The rule action configuration is empty.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.ruleng.NullRuleActionType',
            'errorMessage' => 'The specified rule action is invalid or the rule action type is unspecified.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.ruleng.InvalidRamRole',
            'errorMessage' => 'The RAM role is invalid',
          ),
          5 => 
          array (
            'errorCode' => 'iot.rule.DestinationCountExceed',
            'errorMessage' => 'The count of destination exceeds the maximum number',
          ),
          6 => 
          array (
            'errorCode' => 'iot.rule.DestinationNameExisted',
            'errorMessage' => 'The destination name is existed',
          ),
          7 => 
          array (
            'errorCode' => 'iot.rule.InvalidDestinationName',
            'errorMessage' => 'The destination name is invalid',
          ),
          8 => 
          array (
            'errorCode' => 'iot.ruleng.RegionNotSupportRuleForwardCloudProduct',
            'errorMessage' => 'The specified region does not support creating rules to publish messages to the specified cloud product',
          ),
          9 => 
          array (
            'errorCode' => 'iot.ruleng.IncorrectRegionName',
            'errorMessage' => 'The regionName value is incorrect',
          ),
          10 => 
          array (
            'errorCode' => 'iot.consumer.group.InvalidConsumerGroupId',
            'errorMessage' => 'Illegal consumer group ID',
          ),
          11 => 
          array (
            'errorCode' => 'iot.ruleng.NullProjectOfDatahub',
            'errorMessage' => 'The project in DataHub is empty',
          ),
          12 => 
          array (
            'errorCode' => 'iot.ruleng.NotFoundTopicInDataHubProject',
            'errorMessage' => 'This specified topic does not exist in the project in DataHub',
          ),
          13 => 
          array (
            'errorCode' => 'iot.ruleng.NotFoundVpcInstance',
            'errorMessage' => 'The specified VPC instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"Destination\\": {\\n    \\"Type\\": \\"REPUBLISH\\",\\n    \\"DestinationId\\": 1003,\\n    \\"Configuration\\": \\"{\\\\\\"topic\\\\\\":\\\\\\"/a1POX0c****/device1/user/get\\\\\\",\\\\\\"topicType\\\\\\":1}\\",\\n    \\"Name\\": \\"DataPurpose\\",\\n    \\"UtcCreated\\": \\"2022-03-27T12:45:43.000Z\\",\\n    \\"IsFailover\\": false\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateDestinationResponse>\\n<Destination>\\n    <Type>REPUBLISH</Type>\\n    <UtcCreated>2022-03-27T12:45:43.000Z</UtcCreated>\\n    <Configuration>{\\"topic\\":\\"/a1POX0c****/device1/user/get\\",\\"topicType\\":1}</Configuration>\\n    <IsFailover>false</IsFailover>\\n    <DestinationId>1003</DestinationId>\\n    <Name>DataPurpose</Name>\\n</Destination>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</CreateDestinationResponse>","errorExample":""}]',
      'title' => '创建解析器流转数据目的',
      'summary' => '创建解析器流转数据目的。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '**REPUBLISH类型Configuration定义**
|名称|描述|
|------|------|
|productKey|转发至另一个Topic所属产品的ProductKey。|

REPUBLISH类型**Configuration**示例：
```
{
    "productKey":"hf****3xn"
}
```

**AMQP类型Configuration定义**

|名称|描述|
|-------------|------------|
|groupId|消费组ID。|

AMQP类型**Configuration**示例：

```
{
    "groupId":"ZTh1JmuZcUfv44p4z00****"
}
```

**OTS类型Configuration定义**
|名称|描述|
|-------------|------------|
|instanceName|表格存储中用来接收信息的实例名称。|
|regionName|目标实例所在的阿里云地域代码，例如cn-shanghai。|
|tableName|表格存储中用来接收信息的数据表名称。|
|role|授权角色信息。通过授予物联网平台指定的系统服务角色，您可以授权物联网平台访问您的表格存储。授权角色信息：<br>`{"roleName":"AliyunIOTAccessingOTSRole","roleArn":"acs:ram::${uid}:role/aliyuniotaccessingotsrole"}`<br>`${uid}`为您的阿里云账号ID。您可以登录控制台，在账号安全设置页面查看您的账号ID。<br>`AliyunIOTAccessingOTSRole`是访问控制中定义的服务角色。用于授予物联网平台访问表格存储。关于角色的更多信息，请在访问控制RAM控制台的角色管理页面进行角色管理。|

OTS类型**Configuration**示例：

```
{
    "instanceName":"${instanceName}",
    "regionName":"cn-shanghai",
    "tableName":"test_table",
    "role":{
        "roleName":"AliyunIOTAccessingOTSRole",
        "roleArn":"acs:ram::${uid}:role/aliyuniotaccessingotsrole"
    }
}
```

**DATAHUB类型Configuration定义**

|名称|描述|
|-------------|------------ |
|projectName|目标DataHub中用来接收信息的具体Project。|
|topicName|目标DataHub中用来接收信息的具体Topic。|
|regionName|目标DataHub所在的阿里云地域代码，例如cn-shanghai。|
|role|授权角色信息。通过授予IoT指定的系统服务角色，您可以授权物联网平台访问您的DataHub。授权角色信息格式：<br>`{"roleArn":"acs:ram::${uid}:role/aliyuniotaccessingdatahubrole","roleName": "AliyunIOTAccessingDataHubRole"}`<br>`${uid}`为您的阿里云账号ID。您可以登录控制台，在账号安全设置页面查看您的账号ID。<br>`AliyunIOTAccessingDataHubRole`是访问控制中定义的服务角色。用于授予物联网平台访问DataHub。关于角色的更多信息，请在访问控制RAM控制台的角色管理页面进行角色管理。|

DATAHUB类型**Configuration**示例：

```
{
    "role":{
        "roleArn": "acs:ram::${uid}:role/aliyuniotaccessingdatahubrole",
        "roleName": "AliyunIOTAccessingDataHubRole"
    },
    "ProjectName": "test_project_name",
    "RegionName": "cn-shanghai",
    "TopicName": "test_topic"
}
```

**MNS类型Configuration定义**
|名称|描述|
|-------------|------------|
|themeName| 消息服务中用来接收信息的目标主题名称。|
|regionName| 目标消息服务所在的阿里云地域代码，例如cn-shanghai。|
|role| 授权角色信息。通过授予物联网平台指定的系统服务角色，您可以授权物联网平台访问您的消息服务。授权角色信息：<br>`{"roleArn":"acs:ram::${uid}:role/aliyuniotaccessingmnsrole","roleName": "AliyunIOTAccessingMNSRole"}`<br>`${uid}`为您的阿里云账号ID。您可以登录控制台，在账号安全设置页面查看您的账号ID。<br>`AliyunIOTAccessingMNSRole`是访问控制中定义的服务角色。用于授予物联网平台访问消息服务。关于角色的更多信息，请在访问控制RAM控制台的角色管理页面进行角色管理。|

MNS类型**​Configuration**​​示例：

```
{
    "themeName": "test_name",
    "role":{
        "roleArn": "acs:ram::${uid}:role/aliyuniotaccessingmnsrole",
        "roleName": "AliyunIOTAccessingMNSRole"
    },
    "regionName": "cn-shanghai"
}
```

**ONS类型Configuration定义**

> 您需通过调用消息队列RocketMQ的SDK，或在消息队列RocketMQ控制台，授权物联网平台访问消息队列RocketMQ（至少要授予物联网平台发布权限），然后才能够成功创建将Topic数据转发至消息队列RocketMQ的规则动作。

|名称|描述|
|-------------|------------|
|instanceId|RocketMQ中用来接收消息的目标Topic所属的实例ID。|
|topic|RocketMQ中用来接收信息的目标Topic。|
|regionName|目标RocketMQ实例所在的阿里云地域代码，例如cn-shanghai。<br>目前仅支持同地域内数据流转。
|role|授权角色信息。通过授予物联网平台指定的系统服务角色，您可以授权物联网平台访问您的消息队列RocketMQ服务。授权角色信息：<br>`{"roleArn":"acs:ram::${uid}:role/aliyuniotaccessingmqrole","roleName": "AliyunIOTAccessingMQRole"}`<br>`${uid}`为您的阿里云账号ID。您可以登录控制台，在账号安全设置页面查看您的账号ID。<br>`AliyunIOTAccessingMQRole`是访问控制中定义的服务角色。用于授予物联网平台访问消息队列RocketMQ。关于角色的更多信息，请在访问控制RAM控制台的角色管理页面进行角色管理。|

ONS类型**Configuration**示例：

```
{
    "instanceId": "${MQ_INST_ID}",
    "role":
    {
        "roleArn": "acs:ram::${uid}:role/aliyuniotaccessingmqrole",
        "roleName": "AliyunIOTAccessingMQRole"
    },
    "regionName": "cn-shanghai",
    "topic": "test_topic"
}
```

**FC类型Configuration定义**

|名称|描述|
|-------------|------------|
|functionName| 函数服务中用来接收信息的目标函数名称。|
|serviceName| 函数服务中用来接收信息的目标服务名称。|
|regionName| 目标函数服务实例所在阿里云地域的代码，如cn-shanghai。|
|role| 授权角色信息。通过授予物联网平台指定的系统服务角色，您可以授权物联网平台访问您的函数计算服务。授权角色信息：<br>`{"roleArn":"acs:ram::${uid}:role/aliyuniotaccessingfcrole","roleName": "AliyunIOTAccessingFCRole"}`<br>`${uid}`为您的阿里云账号ID。您可以登录控制台，在账号安全设置页面查看您的账号ID。<br>`AliyunIOTAccessingFCRole`是访问控制中定义的服务角色。用于授予物联网平台访问函数计算。关于角色的更多信息，请在访问控制RAM控制台的角色管理页面进行角色管理。|

FC类型**Configuration**示例：

```
{
    "role":
    {
        "roleArn": "acs:ram::${uid}:role/aliyuniotaccessingfcrole",
        "roleName": "AliyunIOTAccessingFCRole"
    },
    "functionName": "${function_name}",
    "serviceName": "${service_name}",
    "regionName": "cn-shanghai"
}
```

调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDestination' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Configuration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据目的对应的配置信息，传入格式为JSON String。不同规则动作类型所需内容不同，具体要求和示例说明，请参见[CreateDestination](~~433032~~)中**Configuration**参数描述。',
            'type' => 'string',
            'required' => true,
            'example' => '{"topic":"/a1POX0c****/device1/user/get","topicType":1}',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        2 => 
        array (
          'name' => 'DestinationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据目的ID。

您可调用接口[ListDestination](~~433025~~)，查询数据源列表，获取**DestinationId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '999999999999',
            'minimum' => '0',
            'example' => '1002',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据目的操作类型，可取值：

- **REPUBLISH**：将解析器脚本处理后的Topic数据转发至物联网平台的另一个通信Topic。
- **AMQP**：将解析器脚本处理后的Topic数据流转到AMQP消费组。
- **DATAHUB**：将解析器脚本处理后的Topic数据转发至阿里云DataHub，进行流式数据处理。
- **ONS**：将解析器脚本处理后的Topic数据转发至阿里云消息队列RocketMQ，进行消息分发。
- **MNS**：将解析器脚本处理后的Topic数据发送至阿里云消息服务中，进行消息传输。
- **FC**：将解析器脚本处理后的Topic数据发送至阿里云函数计算服务，进行事件计算。
- **OTS**：将解析器脚本处理后的Topic数据发送至阿里云表格存储（Tablestore），进行NoSQL数据存储。',
            'type' => 'string',
            'required' => true,
            'example' => 'REPUBLISH',
          ),
        ),
        4 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据目的名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'DataPurpose',
          ),
        ),
        5 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据目的描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => '数据流转至另一个Topic。',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.ruleng.NullRuleActionConfig',
            'errorMessage' => 'The rule action configuration is empty.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.common.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.destinationNotExists',
            'errorMessage' => 'Destination not found',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.DestinationNameExisted',
            'errorMessage' => 'The destination name is existed',
          ),
          5 => 
          array (
            'errorCode' => 'iot.rule.InvalidDestinationName',
            'errorMessage' => 'The destination name is invalid',
          ),
          6 => 
          array (
            'errorCode' => 'iot.ruleng.NotFoundVpcInstance',
            'errorMessage' => 'The specified VPC instance does not exist',
          ),
          7 => 
          array (
            'errorCode' => 'iot.ruleng.InstanceNotFound',
            'errorMessage' => 'The instance not exists',
          ),
          8 => 
          array (
            'errorCode' => 'iot.ruleng.TopicNotFound',
            'errorMessage' => 'The topic not exists',
          ),
          9 => 
          array (
            'errorCode' => 'iot.ruleng.RegionNotSupportRuleForwardCloudProduct',
            'errorMessage' => 'The specified region does not support creating rules to publish messages to the specified cloud product',
          ),
          10 => 
          array (
            'errorCode' => 'iot.prod.NullProductKey',
            'errorMessage' => 'The productKey is empty.',
          ),
          11 => 
          array (
            'errorCode' => 'iot.prod.NotExistedProduct',
            'errorMessage' => 'The specified product does not exist.',
          ),
          12 => 
          array (
            'errorCode' => 'iot.ruleng.IncorrectRegionName',
            'errorMessage' => 'The regionName parameter is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'iot.ruleng.NullProjectOfDatahub',
            'errorMessage' => 'The project in DataHub is empty',
          ),
          14 => 
          array (
            'errorCode' => 'iot.ruleng.NullTopicInDatahubProject',
            'errorMessage' => 'The project topic in DataHub is empty',
          ),
          15 => 
          array (
            'errorCode' => 'iot.ruleng.NullRamRoleName',
            'errorMessage' => 'You must specify a roleName',
          ),
          16 => 
          array (
            'errorCode' => 'iot.ruleng.NullRamRoleArn',
            'errorMessage' => 'You must specify a roleArn',
          ),
          17 => 
          array (
            'errorCode' => 'iot.ruleng.NotFoundProjectInDataHub',
            'errorMessage' => 'The specified project does not exist in DataHub.',
          ),
          18 => 
          array (
            'errorCode' => 'iot.ruleng.NullOrEmptySchemaOfTopic',
            'errorMessage' => 'The topic schema is empty',
          ),
          19 => 
          array (
            'errorCode' => 'iot.ruleng.IncorrectSchemaValueOfTopic',
            'errorMessage' => 'The specified Topic schema value is invalid',
          ),
          20 => 
          array (
            'errorCode' => 'iot.ruleng.RuleActionConfigurationIsNotJson',
            'errorMessage' => 'The rule action configuration is not in the JSON format',
          ),
          21 => 
          array (
            'errorCode' => 'iot.ruleng.NullOtsInstanceName',
            'errorMessage' => 'The Table Store instance name is empty',
          ),
          22 => 
          array (
            'errorCode' => 'iot.ruleng.NullTableNameInOtsInstance',
            'errorMessage' => 'The table name is empty in the Table Store instance',
          ),
          23 => 
          array (
            'errorCode' => 'iot.ruleng.OnlySameRegionSupport',
            'errorMessage' => 'target region is not supported',
          ),
          24 => 
          array (
            'errorCode' => 'iot.ruleng.NotFoundTableInOtsInstance',
            'errorMessage' => 'The specified table does not exist in the Table Store instance',
          ),
          25 => 
          array (
            'errorCode' => 'iot.ruleng.NullServiceNameInFc',
            'errorMessage' => 'The Function Compute service name is empty',
          ),
          26 => 
          array (
            'errorCode' => 'iot.ruleng.NullFunctionNameInFc',
            'errorMessage' => 'The Function Compute function name is empty',
          ),
          27 => 
          array (
            'errorCode' => 'iot.ruleng.NotFoundServiceInFc',
            'errorMessage' => 'The Function Compute service does not exist',
          ),
          28 => 
          array (
            'errorCode' => 'iot.ruleng.NotFoundFunctionInFc',
            'errorMessage' => 'The Function Compute function does not exist',
          ),
          29 => 
          array (
            'errorCode' => 'iot.ruleng.OnlySupportSameRegionRds',
            'errorMessage' => 'Messages can only be publish to the RDS instances on the same node',
          ),
          30 => 
          array (
            'errorCode' => 'iot.messagebroker.NullTopicName',
            'errorMessage' => 'The topic specified while publishing the message is empty',
          ),
          31 => 
          array (
            'errorCode' => 'iot.ruleng.InvalidFormattedTagInConfiguration',
            'errorMessage' => 'The tag in configuration is too long',
          ),
          32 => 
          array (
            'errorCode' => 'iot.ruleng.InvalidFormattedShardingKeyInConfiguration',
            'errorMessage' => 'The shardingKey in configuration is too long',
          ),
          33 => 
          array (
            'errorCode' => 'iot.ruleng.NullTopic',
            'errorMessage' => 'The topic is null',
          ),
          34 => 
          array (
            'errorCode' => 'iot.consumer.group.InvalidConsumerGroupId',
            'errorMessage' => 'Illegal consumer group ID',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateDestinationResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</UpdateDestinationResponse>","errorExample":""}]',
      'title' => 'UpdateDestination',
      'summary' => '调用该接口更新数据目的名称、操作类型和描述信息。',
      'description' => '## 使用说明

调用接口[CreateDestination](~~433032~~)创建数据目的成功后，若有业务需要，您可根据返回的**DestinationId**更新对应数据目的信息。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDestination' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的记录数量，最大值不超过100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'SearchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '传入数据目的名称中任意字符串，根据该字符串可检索能匹配的数据目的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'DataPurpose',
          ),
        ),
        3 => 
        array (
          'name' => 'Page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页，取值范围为1~100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '9999999',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'Types',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '数据目的操作类型列表，可取值：

- **REPUBLISH**：将解析器脚本处理后的Topic数据转发至物联网平台的另一个通信Topic。
- **AMQP**：将解析器脚本处理后的Topic数据流转到AMQP消费组。
- **DATAHUB**：将解析器脚本处理后的Topic数据转发至阿里云DataHub，进行流式数据处理。
- **ONS**：将解析器脚本处理后的Topic数据转发至阿里云消息队列RocketMQ，进行消息分发。
- **MNS**：将解析器脚本处理后的Topic数据发送至阿里云消息服务中，进行消息传输。
- **FC**：将解析器脚本处理后的Topic数据发送至阿里云函数计算服务，进行事件计算。
- **OTS**：将解析器脚本处理后的Topic数据发送至阿里云表格存储（Tablestore），进行NoSQL数据存储。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '数据目的操作类型，可取值：

- **REPUBLISH**：将解析器脚本处理后的Topic数据转发至物联网平台的另一个通信Topic。
- **AMQP**：将解析器脚本处理后的Topic数据流转到AMQP消费组。
- **DATAHUB**：将解析器脚本处理后的Topic数据转发至阿里云DataHub，进行流式数据处理。
- **ONS**：将解析器脚本处理后的Topic数据转发至阿里云消息队列RocketMQ，进行消息分发。
- **MNS**：将解析器脚本处理后的Topic数据发送至阿里云消息服务中，进行消息传输。
- **FC**：将解析器脚本处理后的Topic数据发送至阿里云函数计算服务，进行事件计算。
- **OTS**：将解析器脚本处理后的Topic数据发送至阿里云表格存储（Tablestore），进行NoSQL数据存储。',
              'type' => 'string',
              'required' => false,
              'example' => 'OTS',
            ),
            'required' => false,
            'example' => '["REPUBLISH", "OTS"]',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '返回结果中每页显示的记录数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '返回结果记录总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'Page' => 
              array (
                'description' => '显示返回结果中的第几页。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Destinations' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'destinations' => 
                  array (
                    'description' => '返回的数据目的列表数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '数据目的对应的状态。返回值：

- **INIT**：初始配置中。
- **NORMAL**：配置完成，正常可用。
- **INVALID**：配置存在异常，不可用。
- **SHORTCUT**：云产品流转服务发生异常，导致流转熔断。',
                          'type' => 'string',
                          'example' => 'NORMAL',
                        ),
                        'Type' => 
                        array (
                          'description' => '数据目的的操作类型。',
                          'type' => 'string',
                          'example' => 'REPUBLISH',
                        ),
                        'Description' => 
                        array (
                          'description' => '数据目的对应的描述信息。',
                          'type' => 'string',
                          'example' => '数据流转至数据库。',
                        ),
                        'DestinationId' => 
                        array (
                          'description' => '数据目的ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1003',
                        ),
                        'Configuration' => 
                        array (
                          'description' => '数据目的对应的配置信息。',
                          'type' => 'string',
                          'example' => '{"topic":"/a1POX0c****/device1/user/get","topicType":1}',
                        ),
                        'Name' => 
                        array (
                          'description' => '数据目的名称。',
                          'type' => 'string',
                          'example' => 'DataPurpose',
                        ),
                        'UtcCreated' => 
                        array (
                          'description' => '创建数据目的对应的UTC时间。格式为`yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'`。',
                          'type' => 'string',
                          'example' => '2022-03-27T12:45:43.000Z',
                        ),
                        'IsFailover' => 
                        array (
                          'description' => '该数据目的配置是否为转发错误操作数据，即转发流转到其他云产品失败且重试失败的数据。

- **true**：是转发错误操作数据。
- **false**：不是转发错误操作数据，而是正常转发操作。

默认值为**false**。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.destinationNotExists',
            'errorMessage' => 'destination not found',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 100,\\n  \\"Page\\": 1,\\n  \\"Destinations\\": {\\n    \\"destinations\\": [\\n      {\\n        \\"Status\\": \\"NORMAL\\",\\n        \\"Type\\": \\"REPUBLISH\\",\\n        \\"Description\\": \\"数据流转至数据库。\\",\\n        \\"DestinationId\\": 1003,\\n        \\"Configuration\\": \\"{\\\\\\"topic\\\\\\":\\\\\\"/a1POX0c****/device1/user/get\\\\\\",\\\\\\"topicType\\\\\\":1}\\",\\n        \\"Name\\": \\"DataPurpose\\",\\n        \\"UtcCreated\\": \\"2022-03-27T12:45:43.000Z\\",\\n        \\"IsFailover\\": false\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListDestinationResponse>\\n<PageSize>10</PageSize>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Total>100</Total>\\n<Destinations>\\n    <destinations>\\n        <Type>REPUBLISH</Type>\\n        <Description>数据流转至另一个Topic。</Description>\\n        <UtcCreated>2022-03-27T12:45:43.000Z</UtcCreated>\\n        <Configuration>{\\"topic\\":\\"/a1POX0c****/device1/user/get\\",\\"topicType\\":1}</Configuration>\\n        <IsFailover>false</IsFailover>\\n        <DestinationId>1004</DestinationId>\\n        <Name>DataPurpose1</Name>\\n    </destinations>\\n    <destinations>\\n        <Type>REPUBLISH</Type>\\n        <Description>数据流转至另一个Topic。</Description>\\n        <UtcCreated>2022-03-27T12:45:43.000Z</UtcCreated>\\n        <Configuration>{\\"topic\\":\\"/a1POX0c****/device2/user/get\\",\\"topicType\\":1}</Configuration>\\n        <IsFailover>false</IsFailover>\\n        <DestinationId>1005</DestinationId>\\n        <Name>DataPurpose2</Name>\\n    </destinations>\\n</Destinations>\\n<Page>1</Page>\\n<Success>true</Success>\\n</ListDestinationResponse>","errorExample":""}]',
      'title' => 'ListDestination',
      'summary' => '调用该接口查询已创建的数据目的列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDestination' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'DestinationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据目的ID。您可调用接口[ListDestination](~~433025~~)，查询数据目的列表，获取**DestinationId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9999999',
            'minimum' => '0',
            'example' => '1003',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemError',
            'errorMessage' => 'System exception.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRuleAction',
            'errorMessage' => 'The rule action is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.destinationNotExists',
            'errorMessage' => 'Destination not found',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.DestinationInUsing',
            'errorMessage' => 'Destination has been attached to parser',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteDestinationResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</DeleteDestinationResponse>","errorExample":""}]',
      'title' => 'DeleteDestination',
      'summary' => '调用该接口删除已创建的数据目的。',
      'description' => '## 使用说明

调用接口[CreateDestination](~~433032~~)创建数据目的成功后，若有业务需要，您可根据返回的**DestinationId**删除对应数据目的。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDestination' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'DestinationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据目的ID。您可调用接口[ListDestination](~~433025~~)，查询数据目的列表，获取**DestinationId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9999999',
            'minimum' => '0',
            'example' => '1004',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Destination' => 
              array (
                'description' => '返回的数据目的信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '数据目的对应的状态。返回值：

- **INIT**：初始配置中。
- **NORMAL**：配置完成，正常可用。
- **INVALID**：配置存在异常，不可用。
- **SHORTCUT**：云产品流转服务发生异常，导致流转熔断。',
                    'type' => 'string',
                    'example' => 'NORMAL',
                  ),
                  'Type' => 
                  array (
                    'description' => '数据目的的操作类型。

- **REPUBLISH**：将解析器脚本处理后的Topic数据转发至物联网平台的另一个通信Topic。
- **AMQP**：将解析器脚本处理后的Topic数据流转到AMQP消费组。
- **DATAHUB**：将解析器脚本处理后的Topic数据转发至阿里云DataHub，进行流式数据处理。
- **ONS**：将解析器脚本处理后的Topic数据转发至阿里云消息队列RocketMQ，进行消息分发。
- **MNS**：将解析器脚本处理后的Topic数据发送至阿里云消息服务中，进行消息传输。
- **FC**：将解析器脚本处理后的Topic数据发送至阿里云函数计算服务，进行事件计算。
- **OTS**：将解析器脚本处理后的Topic数据发送至阿里云表格存储（Tablestore），进行NoSQL数据存储。',
                    'type' => 'string',
                    'example' => 'REPUBLISH',
                  ),
                  'DestinationId' => 
                  array (
                    'description' => '数据目的ID。',
                    'type' => 'string',
                    'example' => '1003',
                  ),
                  'Configuration' => 
                  array (
                    'description' => '数据目的对应的配置信息。',
                    'type' => 'string',
                    'example' => '{"topic":"/a1POX0c****/device1/user/get","topicType":1}',
                  ),
                  'Name' => 
                  array (
                    'description' => '数据目的名称。',
                    'type' => 'string',
                    'example' => 'DataPurpose',
                  ),
                  'UtcCreated' => 
                  array (
                    'description' => '创建数据目的对应的UTC时间。格式为`yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'`。',
                    'type' => 'string',
                    'example' => '2022-03-27T12:45:43.000Z',
                  ),
                  'IsFailover' => 
                  array (
                    'description' => '该数据目的配置是否为转发错误操作数据，即转发流转到其他云产品失败且重试失败的数据。

- **true**：是转发错误操作数据。
- **false**：不是转发错误操作数据，而是正常转发操作。

默认值为**false**。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.destinationNotExists',
            'errorMessage' => 'destination not found',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"Destination\\": {\\n    \\"Status\\": \\"NORMAL\\",\\n    \\"Type\\": \\"REPUBLISH\\",\\n    \\"DestinationId\\": \\"1003\\",\\n    \\"Configuration\\": \\"{\\\\\\"topic\\\\\\":\\\\\\"/a1POX0c****/device1/user/get\\\\\\",\\\\\\"topicType\\\\\\":1}\\",\\n    \\"Name\\": \\"DataPurpose\\",\\n    \\"UtcCreated\\": \\"2022-03-27T12:45:43.000Z\\",\\n    \\"IsFailover\\": false\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetDestinationResponse>\\n<Destination>\\n    <Type>REPUBLISH</Type>\\n    <UtcCreated>2022-03-27T12:45:43.000Z</UtcCreated>\\n    <Configuration>{\\"topic\\":\\"/a1POX0c****/device1/user/get\\",\\"topicType\\":1}</Configuration>\\n    <IsFailover>false</IsFailover>\\n    <DestinationId>1003</DestinationId>\\n    <Name>DataPurpose</Name>\\n</Destination>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</GetDestinationResponse>","errorExample":""}]',
      'title' => 'GetDestination',
      'summary' => '调用该接口查询指定数据目的详细信息。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AttachParserDataSource' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'ParserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器ID。您可调用接口[ListParsers](~~429046~~)，查询解析器列表，获取**ParserId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '99999999999',
            'minimum' => '1',
            'example' => '1000',
          ),
        ),
        2 => 
        array (
          'name' => 'DataSourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源ID。您可调用接口[ListParserDataSource](~~432676~~)，查询数据源列表，获取**DataSourceId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9999999',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.DataSourceNotExists',
            'errorMessage' => 'Datasource not existed',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRule',
            'errorMessage' => 'there are no rules',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<AttachParserDataSourceResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</AttachParserDataSourceResponse>","errorExample":""}]',
      'title' => 'AttachParserDataSource',
      'summary' => '调用该接口为指定解析器关联指定数据源。',
      'description' => '## 使用说明
已调用接口创建数据源（[CreateParserDataSource](~~433011~~)）和解析器（[CreateParser](~~429044~~)）。

><notice>
1个解析器最多关联1个数据源，如果指定解析器已关联数据源，调用该接口会覆盖该解析器关联的原数据源。
></notice>

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AttachDestination' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IsFailover',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该数据目的配置是否为转发错误操作数据，即转发流转到其他云产品失败且重试失败的数据。

- **true**：是转发错误操作数据。
- **false**：不是转发错误操作数据，而是正常转发操作。

默认值为**false**。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'false',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        2 => 
        array (
          'name' => 'ParserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器ID。您可调用接口[ListParsers](~~429046~~)，查询解析器列表，获取**ParserId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '999999999',
            'minimum' => '1',
            'example' => '1000',
          ),
        ),
        3 => 
        array (
          'name' => 'DestinationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据目的ID。您可调用接口[ListDestination](~~433025~~)，查询数据目的列表，获取**DestinationId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '999999999999',
            'minimum' => '0',
            'example' => '1002',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.destinationNotExists',
            'errorMessage' => 'Destination not found',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRule',
            'errorMessage' => 'there are no rules',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.SameDestinationExisted',
            'errorMessage' => 'The destination has been attached',
          ),
          5 => 
          array (
            'errorCode' => 'iot.ruleng.OnlyAllowOneErrorAction',
            'errorMessage' => 'You can specify only one destination to forward data errors in a rule',
          ),
          6 => 
          array (
            'errorCode' => 'iot.rule.TooManyRuleAction',
            'errorMessage' => 'The rule action exceeds the maximum number',
          ),
          7 => 
          array (
            'errorCode' => 'iot.rule.DestinationNotAvailable',
            'errorMessage' => 'destination not available',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<AttachDestinationResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</AttachDestinationResponse>","errorExample":""}]',
      'title' => 'AttachDestination',
      'summary' => '调用该接口为解析器关联指定数据目的。',
      'description' => '## 使用说明
已经创建数据目的（[CreateDestination](~~433032~~)）和解析器（[CreateParser](~~429044~~)）。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DetachParserDataSource' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'ParserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器ID。您可调用接口[ListParsers](~~429046~~)，查询解析器列表，获取**ParserId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '999999999999',
            'minimum' => '1',
            'example' => '1000',
          ),
        ),
        2 => 
        array (
          'name' => 'DataSourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据源ID。您可调用接口[ListParserDataSource](~~432676~~)，查询数据源列表，获取**DataSourceId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '99999999',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.DataSourceNotExists',
            'errorMessage' => 'Datasource not existed',
          ),
          3 => 
          array (
            'errorCode' => 'iot.ruleng.RuleAlreadyIsStarted',
            'errorMessage' => 'The specified rule has already started',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRule',
            'errorMessage' => 'there are no rules',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DetachParserDataSourceResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</DetachParserDataSourceResponse>","errorExample":""}]',
      'title' => 'DetachParserDataSource',
      'summary' => '调用该接口删除解析器中的指定数据源。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DetachDestination' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'ParserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器ID。您可调用接口[ListParser](~~444814~~)，查询解析器列表，获取**ParserId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9999999999',
            'minimum' => '1',
            'example' => '1000',
          ),
        ),
        2 => 
        array (
          'name' => 'DestinationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据目的ID。您可调用接口[ListDestination](~~433025~~)，查询数据目的列表，获取**DestinationId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '999999999999',
            'minimum' => '0',
            'example' => '1002',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.destinationNotExists',
            'errorMessage' => 'Destination not found',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRule',
            'errorMessage' => 'there are no rules',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.DestinationInUsing',
            'errorMessage' => 'Destination has been attached to parser',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DetachDestinationResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</DetachDestinationResponse>","errorExample":""}]',
      'title' => '删除解析器的指定数据目的',
      'summary' => '删除解析器的指定数据目的。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListParserDestination' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IsFailover',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待查询数据目的配置是否为转发错误操作数据，即转发流转到其他云产品失败且重试失败的数据。

- **true**：是转发错误操作数据。
- **false**（默认）：不是转发错误操作数据，而是正常转发操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        2 => 
        array (
          'name' => 'ParserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器ID。您可调用接口[ListParsers](~~429046~~)，查询解析器列表，获取**ParserId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9999999999',
            'minimum' => '0',
            'example' => '1002',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'destinations' => 
                  array (
                    'description' => '调用成功时，返回的数据目的列表数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '数据目的的操作类型。

- **REPUBLISH**：将解析器脚本处理后的Topic数据转发至物联网平台的另一个通信Topic。
- **AMQP**：将解析器脚本处理后的Topic数据流转到AMQP消费组。
- **DATAHUB**：将解析器脚本处理后的Topic数据转发至阿里云DataHub，进行流式数据处理。
- **ONS**：将解析器脚本处理后的Topic数据转发至阿里云消息队列RocketMQ，进行消息分发。
- **MNS**：将解析器脚本处理后的Topic数据发送至阿里云消息服务中，进行消息传输。
- **FC**：将解析器脚本处理后的Topic数据发送至阿里云函数计算服务，进行事件计算。
- **OTS**：将解析器脚本处理后的Topic数据发送至阿里云表格存储（Tablestore），进行NoSQL数据存储。',
                          'type' => 'string',
                          'example' => 'REPUBLISH',
                        ),
                        'DestinationId' => 
                        array (
                          'description' => '数据目的ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1003',
                        ),
                        'UtcModified' => 
                        array (
                          'description' => '修改数据目的对应的UTC时间。格式为`yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'`。',
                          'type' => 'string',
                          'example' => '2022-05-27T12:45:43.000Z',
                        ),
                        'Configuration' => 
                        array (
                          'description' => '数据目的对应的配置信息。',
                          'type' => 'string',
                          'example' => '{"topic":"/a1POX0c****/device1/user/get","topicType":1}',
                        ),
                        'Name' => 
                        array (
                          'description' => '数据目的名称。',
                          'type' => 'string',
                          'example' => 'DataPurpose',
                        ),
                        'UtcCreated' => 
                        array (
                          'description' => '创建数据目的对应的UTC时间。格式为`yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'`。',
                          'type' => 'string',
                          'example' => '2022-03-27T12:45:43.000Z',
                        ),
                        'IsFailover' => 
                        array (
                          'description' => '该数据目的配置是否为转发错误操作数据，即转发流转到其他云产品失败且重试失败的数据。

- **true**：是转发错误操作数据。
- **false**（默认）：不是转发错误操作数据，而是正常转发操作。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.common.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.ListDestinationFailed',
            'errorMessage' => 'An error occurred while querying destinations',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"destinations\\": [\\n      {\\n        \\"Type\\": \\"REPUBLISH\\",\\n        \\"DestinationId\\": 1003,\\n        \\"UtcModified\\": \\"2022-05-27T12:45:43.000Z\\",\\n        \\"Configuration\\": \\"{\\\\\\"topic\\\\\\":\\\\\\"/a1POX0c****/device1/user/get\\\\\\",\\\\\\"topicType\\\\\\":1}\\",\\n        \\"Name\\": \\"DataPurpose\\",\\n        \\"UtcCreated\\": \\"2022-03-27T12:45:43.000Z\\",\\n        \\"IsFailover\\": false\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListParserDestinationResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Data>\\n    <destinations>\\n        <Type>REPUBLISH</Type>\\n        <UtcCreated>2022-03-27T12:45:43.000Z</UtcCreated>\\n        <Configuration>{\\"topic\\":\\"/a1POX0c****/device1/user/get\\",\\"topicType\\":1}</Configuration>\\n        <UtcModified>2022-05-27T12:45:43.000Z</UtcModified>\\n        <IsFailover>false</IsFailover>\\n        <DestinationId>1003</DestinationId>\\n        <Name>DataPurpose</Name>\\n    </destinations>\\n</Data>\\n<Success>true</Success>\\n</ListParserDestinationResponse>","errorExample":""}]',
      'title' => 'ListParserDestination',
      'summary' => '调用该接口查询指定解析器关联的数据目的列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PublishScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-n8t***',
          ),
        ),
        1 => 
        array (
          'name' => 'ParserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器ID。您可调用接口[ListParsers](~~429046~~)，查询解析器列表，获取**ParserId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '99999999',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'SyntaxErrorMsg' => 
              array (
                'description' => '发布解析器脚本失败时，返回的脚本语法错误信息。',
                'type' => 'string',
                'example' => 'script doesn\'t contains transmit function',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.scriptSyntaxError',
            'errorMessage' => 'Script Syntax Error',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRule',
            'errorMessage' => 'there are no rules',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.EmptyScript',
            'errorMessage' => 'The script is empty.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"SyntaxErrorMsg\\": \\"script doesn\'t contains transmit function\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PublishScriptResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</PublishScriptResponse>","errorExample":""}]',
      'title' => 'PublishScript',
      'summary' => '调用该接口发布指定解析器中的脚本。',
      'description' => '## 使用说明
已调用接口[SaveScript](~~433523~~)编辑并保存解析器的脚本草稿。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SaveScript' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-n8t***',
          ),
        ),
        1 => 
        array (
          'name' => 'ParserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器ID。您可调用接口[ListParsers](~~429046~~)，查询解析器列表，获取**ParserId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '99999999',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
        2 => 
        array (
          'name' => 'ScriptDraft',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器脚本。',
            'type' => 'string',
            'required' => true,
            'example' => 'var data = payload("json")',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.EmptyScriptDraft',
            'errorMessage' => 'The script draft is empty',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRule',
            'errorMessage' => 'there are no rules',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.ScriptLengthExceeds',
            'errorMessage' => 'The length of script is exceeded',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SaveScriptResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</SaveScriptResponse>","errorExample":""}]',
      'title' => 'SaveScript',
      'summary' => '调用该接口编辑并保存解析器的脚本草稿。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StartParser' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-n8t***',
          ),
        ),
        1 => 
        array (
          'name' => 'ParserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器ID。您可调用接口[ListParsers](~~429046~~)，查询解析器列表，获取**ParserId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '99999999999',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.common.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.EmptyScript',
            'errorMessage' => 'The script is empty.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.DestinationNotBound',
            'errorMessage' => 'The connector has not destination.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.StartRuleFailed',
            'errorMessage' => 'An error occurred while starting the rule.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRule',
            'errorMessage' => 'there are no rules',
          ),
          6 => 
          array (
            'errorCode' => 'iot.rule.scriptSyntaxError',
            'errorMessage' => 'Script Syntax Error',
          ),
          7 => 
          array (
            'errorCode' => 'iot.common.TooManyRequest',
            'errorMessage' => 'Request frequency is too high',
          ),
          8 => 
          array (
            'errorCode' => 'iot.rule.NoDataSourceBound',
            'errorMessage' => 'no datasource bound',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<StartParserResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</StartParserResponse>","errorExample":""}]',
      'title' => 'StartParser',
      'summary' => '调用该接口启动解析器。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StopParser' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-n8t***',
          ),
        ),
        1 => 
        array (
          'name' => 'ParserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析器ID。您可调用接口[ListParsers](~~429046~~)，查询解析器列表，获取**ParserId**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '99999999999',
            'minimum' => '0',
            'example' => '1001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.common.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rule.StopRuleFailed',
            'errorMessage' => 'An error occurred while stopping the rule.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rule.NoDataSourceBound',
            'errorMessage' => 'no datasource bound',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rule.NotFoundRule',
            'errorMessage' => 'there are no rules',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<StopParserResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</StopParserResponse>","errorExample":""}]',
      'title' => 'StopParser',
      'summary' => '调用该接口停止解析器运行。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListAnalyticsData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API所在实例的实例ID。

更多信息，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-cn-npk1u******',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiPath',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API路径。

您可在**数据API**的API详情页面，查看**API Path**的值。具体操作，请参见[查看与使用](~~206247~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '/iot-cn-npk1v******/system/query/hist_dev_cnt_stat',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页的内容。默认值为 1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '1000',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示结果的条数。

返回结果中，每页显示的记录数量。最大取值100，最小取值1，默认取值为100。
> 开启分页时必传。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '20000',
            'minimum' => '1',
            'example' => '100',
            'default' => '100',
          ),
        ),
        4 => 
        array (
          'name' => 'IsoId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '逻辑隔离ID。请忽略该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'oxs_iso_id',
          ),
        ),
        5 => 
        array (
          'name' => 'Condition',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '查询条件列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Operate' => 
                array (
                  'description' => '比较运算符。

仅支持`bt`、`eq`、`neq`、`rlike`、`in`或`nin`，及其对应的操作符`BETWEEN`、`=`、`!=`、`LIKE`、`IN`、`NIN`。

您可在**数据API**的API详情页面，查看请求参数的对应操作符。具体操作，请参见[查看与使用](~~206247~~)。

- `BETWEEN`：请求参数赋值为特定范围。
- `=`：请求参数赋值为特定值。
- `!=`：请求参数赋值不为特定值。
- `LIKE`：请求参数赋值以特定值为首。
- `IN`：请求参数赋值属于特定集合。
- `NIN`：请求参数赋值不属于特定集合。

例如，数据集有6条记录（对应的`time`分别为`abcd`、`abce`、`abcf`、`abcg`、`aabc`和`abbc`），调用该接口时，`Condition.N.FieldName="time"`：

- 如果`Condition.N.Operate="LIKE"`、`Condition.N.Value="abc"`，则返回`time=abcd`、`time=abce`、`time=abcf`和`time=abcg`的所有记录。
- 如果`Condition.N.Operate="IN"`、`Condition.N.Value="[abcd,abce,abcf]"`，则返回`time=abcd`、`time=abce`和`time=abcf`的所有记录。

> 如果该参数取值为`BETWEEN`，则**Condition.N.BetweenStart**和**Condition.N.BetweenEnd**必传。如果该参数取值不为`BETWEEN`，则**Condition.N.Value**必传。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '=',
                ),
                'Value' => 
                array (
                  'description' => '比较值。即服务API请求参数的赋值。

您可在**数据API**的API详情页面，查看请求参数的赋值情况。具体操作，请参见[查看与使用](~~206247~~)。

> 当**Condition.N.Operate**取值不为`BETWEEN`或`bt`时，该参数必传，且不传**Condition.N.BetweenStart**和**Condition.N.BetweenEnd**。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '4',
                ),
                'FieldName' => 
                array (
                  'description' => '对应服务API设置的请求参数名。

您可在**数据API**的API详情页面，查看**请求参数**的值。具体操作，请参见[查看与使用](~~206247~~)。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'testCode',
                ),
                'BetweenEnd' => 
                array (
                  'description' => '服务API请求参数表示范围时的终止值。

您可在**数据API**的API详情页面，查看请求参数的取值范围。具体操作，请参见[查看与使用](~~206247~~)。
> 当**Condition.N.Operate**取值为`BETWEEN`或`bt`时，该参数必传，且不传**Condition.N.Value**。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '5',
                ),
                'BetweenStart' => 
                array (
                  'description' => '服务API请求参数表示范围时的起始值。

您可在**数据API**的API详情页面，查看请求参数的取值范围。具体操作，请参见[查看与使用](~~206247~~)。
> 当**Condition.N.Operate**取值为`BETWEEN`或`bt`时，该参数必传，且不传**Condition.N.Value**。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码：

- **Success**：表示成功。
- 其他：表示错误，更多信息，请参见[错误码](~~135176~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'insuficient auth:无访问权限',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '7EC5B624-AF1B-4C4D-BA82-A02BA1******',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功：
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'ResultJson' => 
                  array (
                    'description' => '符合条件的数据详情。',
                    'type' => 'string',
                    'example' => '[{\\"testCode\\":\\"TBB186\\",\\"testLevel\\":5,\\"testWorkYears\\":3,\\"testName\\":\\"王五\\"},{\\"testCode\\":\\"TBB1314\\",\\"testLevel\\":2,\\"testWorkYears\\":4,\\"testName\\":\\"李四\\"},{\\"testCode\\":\\"TBB8888\\",\\"testLevel\\":2,\\"testWorkYears\\":5,\\"testName\\":\\"熊大\\"}]"',
                  ),
                  'PageNum' => 
                  array (
                    'description' => '分页的页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示结果的最大条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'Count' => 
                  array (
                    'description' => '符合查询条件的记录总条数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '3',
                  ),
                  'HasNext' => 
                  array (
                    'description' => '符合条件的数据是否有下一页：
- **true**：有。
- **false**：没有。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'LossOfUserInformation',
            'errorMessage' => 'lost of user info:%s',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'invalid parameter:%s',
          ),
          2 => 
          array (
            'errorCode' => 'InsufficientAuthority',
            'errorMessage' => 'insuficient auth:%s',
          ),
          3 => 
          array (
            'errorCode' => 'RequestFailed',
            'errorMessage' => 'source data does not exist',
          ),
          4 => 
          array (
            'errorCode' => 'iot.dap.insight.dataApiNotDeploy',
            'errorMessage' => 'The current API operation is not deployed.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.dap.insight.apiQueryParamError',
            'errorMessage' => 'A query parameter error occurred.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.dap.insight.pipelineProcessError',
            'errorMessage' => 'pipeline processing error',
          ),
          7 => 
          array (
            'errorCode' => 'iot.dap.insight.noAuthorization',
            'errorMessage' => 'no authorization.',
          ),
          8 => 
          array (
            'errorCode' => 'iot.dap.insight.dopQueryApiError',
            'errorMessage' => 'dop query api error',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"insuficient auth:无访问权限\\",\\n  \\"RequestId\\": \\"7EC5B624-AF1B-4C4D-BA82-A02BA1******\\",\\n  \\"Success\\": false,\\n  \\"Data\\": {\\n    \\"ResultJson\\": \\"[{\\\\\\\\\\\\\\"testCode\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"TBB186\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"testLevel\\\\\\\\\\\\\\":5,\\\\\\\\\\\\\\"testWorkYears\\\\\\\\\\\\\\":3,\\\\\\\\\\\\\\"testName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"王五\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\"testCode\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"TBB1314\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"testLevel\\\\\\\\\\\\\\":2,\\\\\\\\\\\\\\"testWorkYears\\\\\\\\\\\\\\":4,\\\\\\\\\\\\\\"testName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"李四\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\"testCode\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"TBB8888\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"testLevel\\\\\\\\\\\\\\":2,\\\\\\\\\\\\\\"testWorkYears\\\\\\\\\\\\\\":5,\\\\\\\\\\\\\\"testName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"熊大\\\\\\\\\\\\\\"}]\\\\\\"\\",\\n    \\"PageNum\\": 1,\\n    \\"PageSize\\": 100,\\n    \\"Count\\": 3,\\n    \\"HasNext\\": false\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListAnalyticsDataResponse>\\n<RequestId> 7EC5B624-AF1B-4C4D-BA82-A02BA1******</RequestId>\\n<Data>\\n    <ResultJson>[{\\\\\\"testCode\\\\\\":\\\\\\"TBB186\\\\\\",\\\\\\"testLevel\\\\\\":5,\\\\\\"testWorkYears\\\\\\":3,\\\\\\"testName\\\\\\":\\\\\\"王五\\\\\\"},{\\\\\\"testCode\\\\\\":\\\\\\"TBB1314\\\\\\",\\\\\\"testLevel\\\\\\":2,\\\\\\"testWorkYears\\\\\\":4,\\\\\\"testName\\\\\\":\\\\\\"李四\\\\\\"},{\\\\\\"testCode\\\\\\":\\\\\\"TBB8888\\\\\\",\\\\\\"testLevel\\\\\\":2,\\\\\\"testWorkYears\\\\\\":5,\\\\\\"testName\\\\\\":\\\\\\"熊大\\\\\\"}]\\"</ResultJson>\\n    <PageSize>100</PageSize>\\n    <PageNum>1</PageNum>\\n    <Count>3</Count>\\n    <HasNext>false</HasNext>\\n</Data>\\n<Code>Success</Code>\\n<Success>true</Success>\\n</ListAnalyticsDataResponse>","errorExample":""}]',
      'title' => 'ListAnalyticsData',
      'summary' => '调用该接口执行数据服务API对应的查询任务，从而获取数据源里的指定数据。',
      'description' => '## 使用限制
每个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'WriteDevicesHotStorageData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属的产品**ProductKey**。
><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备的名称。
><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'device1',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备ID。
><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'y4u2weAI********HMle1234',
          ),
        ),
        4 => 
        array (
          'name' => 'UserTopic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义Topic。从`user`类目开始，输入自定义Topic的后续所有类目。

自定义Topic详细说明，请参见[自定义Topic](~~85539~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'user/a***/b***',
          ),
        ),
        5 => 
        array (
          'name' => 'Items',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '写入的数据，固定为如下JSON数据结构。

```
{
    "key1": {
        "value":xxx1
        "time":yyy1
    },
    "key2": {
        "value":xxx2
        "time":yyy2
    }
}
```

- **key1**、**key2**为字段标识符，每个**Items**可包含多个字段。
- **value**为字段对应的值，支持数据类型为int32、float、double、text、date、bool、enum、struct和array。详细说明，请参见[支持的数据类型](~~358843~~)。
- **time**：字段值对应的UTC时间戳，单位为毫秒。',
            'type' => 'string',
            'required' => true,
            'example' => '{ "Power": { "value": "on", "time": 1524448722000 }, "WF": { "value": 23.6, "time": 1524448722000 } }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.device.InvalidFormattedDeviceName',
            'errorMessage' => 'The DeviceName format is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.device.NullDeviceName',
            'errorMessage' => 'The DeviceName parameter cannot be empty.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.device.SetDevicePropertyFailed',
            'errorMessage' => 'An error occurred while setting the device properties.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.prod.InvalidFormattedProductkey',
            'errorMessage' => 'The ProductKey format is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.prod.NotExistedProduct',
            'errorMessage' => 'The specified product does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.prod.NullProductKey',
            'errorMessage' => 'The ProductKey parameter cannot be empty.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.check.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'iot.messagebroker.HALFCONN',
            'errorMessage' => 'The specified operation has failed. The device is in an inactive status.',
          ),
          8 => 
          array (
            'errorCode' => 'iot.messagebroker.OFFLINE',
            'errorMessage' => 'The specified operation has failed. The device is offline.',
          ),
          9 => 
          array (
            'errorCode' => 'iot.prod.QueryProductAbilitiesFailed',
            'errorMessage' => 'An error occurred while querying the product features.',
          ),
          10 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'iot.dataalgo.ScriptMethodNotFound',
            'errorMessage' => 'Method is not found in script.',
          ),
          12 => 
          array (
            'errorCode' => 'iot.dataalgo.ScriptExecutionTimeout',
            'errorMessage' => 'Script execution timeout.',
          ),
          13 => 
          array (
            'errorCode' => 'iot.dataalgo.ScriptExecutionOomException',
            'errorMessage' => 'Script execution is out of memory.',
          ),
          14 => 
          array (
            'errorCode' => 'Iot.Device.NotExistedDevice',
            'errorMessage' => 'The device does not exist.',
          ),
          15 => 
          array (
            'errorCode' => 'iot.device.InvalidIoTId',
            'errorMessage' => 'The specified device ID is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'iot.dataalgo.ScriptExecutionException',
            'errorMessage' => 'Script execution exception.',
          ),
          17 => 
          array (
            'errorCode' => 'iot.prod.QueryPropertyNotFound',
            'errorMessage' => 'Query property not found.',
          ),
          18 => 
          array (
            'errorCode' => 'iot.dataalgo.ScriptDataFormatException',
            'errorMessage' => 'Script function result format is incorrect.',
          ),
          19 => 
          array (
            'errorCode' => 'iot.dataalgo.ScriptRelationNotExist',
            'errorMessage' => 'Script relation not exist.',
          ),
          20 => 
          array (
            'errorCode' => 'iot.tsl.TslParseError',
            'errorMessage' => 'TSLlParseError: %s.',
          ),
          21 => 
          array (
            'errorCode' => 'iot.tsl.InvalidFormattedTslError',
            'errorMessage' => 'The TSL format is invalid.',
          ),
          22 => 
          array (
            'errorCode' => 'iot.tsl.InvalidHistoryTimestampError',
            'errorMessage' => 'The history timestamp is invalid.',
          ),
          23 => 
          array (
            'errorCode' => 'iot.storage.HotStorageCapacityNotEnough',
            'errorMessage' => 'The timeline storage capacity not enough.',
          ),
          24 => 
          array (
            'errorCode' => 'iot.storage.HotStorageIopsWriteNotEnough',
            'errorMessage' => 'The timeline storage write IOPS is not enough.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<WriteDevicesHotStorageDataResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Success>true</Success>\\n</WriteDevicesHotStorageDataResponse>","errorExample":""}]',
      'title' => 'WriteDevicesHotStorageData',
      'summary' => '调用该接口将设备自定义Topic数据写入热数据存储空间。',
      'description' => '## 使用说明
仅华东2（上海）、华北2（北京）和华南1（深圳）地域的标准型和尊享型企业版实例下，支持调用该接口写入热数据。

热数据存储详细说明，请参见[配置热数据存储](~~464047~~)。

## 使用限制
调用该接口的每秒请求写入数据数，由您购买实例下的**热数据存储IOPS**规格决定。详细内容，请参见[购买企业版实例](~~356507~~)和[查看热数据存储IOPS](~~464051~~)。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDevicesHotStorageDataStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数，最多不可超过50条。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '201',
            'minimum' => '0',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属的产品**ProductKey**。
><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备的名称。
><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'device1',
          ),
        ),
        4 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页标识。如果存在下一页，服务会返回此token，下次请求带上即可。',
            'type' => 'string',
            'required' => false,
            'example' => 'Bo***x44Qx',
          ),
        ),
        5 => 
        array (
          'name' => 'Asc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中数据记录的排序方式，取值：

- **0**：倒序。
- **1**：正序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '5',
            'minimum' => '0',
            'example' => '0',
          ),
        ),
        6 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备ID。
><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'y4u2weAI********HMle1234',
          ),
        ),
        7 => 
        array (
          'name' => 'UserTopic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询数据所属自定义Topic。从`user`类目开始，输入自定义Topic的后续所有类目。

自定义Topic详细说明，请参见[自定义Topic](~~85539~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'user/a***/b***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功后，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'NextPageToken' => 
                  array (
                    'description' => '下一页标识。',
                    'type' => 'string',
                    'example' => 'Bo***x44Qx',
                  ),
                  'NextValid' => 
                  array (
                    'description' => '是否有下一页属性记录。

- **true**：有。
- **false**：没有。

返回**NextValid**为**true**时，可以将**NextPageToken**的值作为下次查询的**NextPageToken**，继续查询本次查询不显示的数据。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PropertyStatusDataInfo' => 
                      array (
                        'description' => '快照数据集合。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Identifier' => 
                            array (
                              'description' => '字段标识符。',
                              'type' => 'string',
                              'example' => 'Temperture',
                            ),
                            'Value' => 
                            array (
                              'description' => '字段值。',
                              'type' => 'string',
                              'example' => '22',
                            ),
                            'Time' => 
                            array (
                              'description' => '字段值对应时间戳，单位为毫秒。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1517553572362',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.device.PageTokenIsIllegal',
            'errorMessage' => 'The paging token is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.prod.NotExistedProduct',
            'errorMessage' => 'The specified product does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.device.InvalidTimeBucket',
            'errorMessage' => 'The specified time range is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.common.InvalidPageParams',
            'errorMessage' => 'The specified pagination size or pagination parameter is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.prod.NullProductKey',
            'errorMessage' => 'The ProductKey parameter cannot be empty.',
          ),
          5 => 
          array (
            'errorCode' => 'Iot.Device.NotExistedDevice',
            'errorMessage' => 'The device does not exist.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.device.InvalidFormattedDeviceName',
            'errorMessage' => 'The DeviceName format is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'iot.prod.InvalidFormattedProductkey',
            'errorMessage' => 'The ProductKey format is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'iot.device.InvalidIoTId',
            'errorMessage' => 'The specified device ID is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'iot.device.NullDeviceName',
            'errorMessage' => 'The DeviceName parameter cannot be empty.',
          ),
          11 => 
          array (
            'errorCode' => 'iot.storage.HotStorageIopsReadNotEnough',
            'errorMessage' => 'The timeline storage read IOPS is not enough.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"NextPageToken\\": \\"Bo***x44Qx\\",\\n    \\"NextValid\\": true,\\n    \\"List\\": {\\n      \\"PropertyStatusDataInfo\\": [\\n        {\\n          \\"Identifier\\": \\"Temperture\\",\\n          \\"Value\\": \\"22\\",\\n          \\"Time\\": 1517553572362\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDevicesHotStorageDataStatusResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <NextValid>true</NextValid>\\n    <NextPageToken>Bo***x44Qx</NextPageToken>\\n    <List>\\n        <PropertyStatusDataInfo>\\n            <Identifier>Temperture</Identifier>\\n            <Value>22</Value>\\n            <Time>1517553572362</Time>\\n        </PropertyStatusDataInfo>\\n    </List>\\n</Data>\\n<Success>true</Success>\\n</QueryDevicesHotStorageDataStatusResponse>","errorExample":""}]',
      'title' => 'QueryDevicesHotStorageDataStatus',
      'summary' => '调用该接口查询设备热数据的快照数据。',
      'description' => '## 使用说明
仅华东2（上海）、华北2（北京）和华南1（深圳）地域的标准型和尊享型企业版实例下，支持调用该接口查询热数据。

热数据存储详细说明，请参见[配置热数据存储](~~464047~~)。

## 使用限制
调用该接口的每秒请求写入数据数，由您购买实例下的**热数据存储IOPS**规格决定。详细内容，请参见[购买企业版实例](~~356507~~)和[查看热数据存储IOPS](~~464051~~)。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDevicesHotStorageData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-2w****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '单个字段标识符可返回的数据记录数量，最大值为100。

任意一个字段返回的数据记录数量均不超过该值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '201',
            'minimum' => '0',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属的产品**ProductKey**。
><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备的名称。
><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'device1',
          ),
        ),
        4 => 
        array (
          'name' => 'NextPageToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页标识。如果存在下一页，服务会返回此token，下次请求带上即可。',
            'type' => 'string',
            'required' => false,
            'example' => 'Bo***x44Qx',
          ),
        ),
        5 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的数据记录的开始时间，必须小于结束时间**EndTime**。取值为毫秒值时间戳，例如：1579249499000。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '999999999999999',
            'minimum' => '0',
            'example' => '1579249499000',
          ),
        ),
        6 => 
        array (
          'name' => 'Identifier',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '已存储热数据中的字段标识符。即调用**WriteDevicesHotStorageData**接口写入热数据中请求参数**Items**中的字段标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'temperature',
          ),
        ),
        7 => 
        array (
          'name' => 'Asc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中数据记录的排序方式，取值：

- **0**：倒序。
- **1**：正序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '5',
            'minimum' => '0',
            'example' => '0',
          ),
        ),
        8 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备ID。
><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'y4u2weAI********HMle1234',
          ),
        ),
        9 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的数据记录的结束时间，必须大于起始时间**StartTime**。取值为毫秒值时间戳，例如：1579249499000。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '999999999999999',
            'minimum' => '0',
            'example' => '1579249499000',
          ),
        ),
        10 => 
        array (
          'name' => 'UserTopic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询数据所属自定义Topic。从`user`类目开始，输入自定义Topic的后续所有类目。

自定义Topic详细说明，请参见[自定义Topic](~~85539~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'user/a***/b***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功后，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'nextPageToken' => 
                  array (
                    'description' => '下一页标识。',
                    'type' => 'string',
                    'example' => 'Bo***x44Qx',
                  ),
                  'NextValid' => 
                  array (
                    'description' => '是否有下一页属性记录。

- **true**：有。
- **false**：没有。

返回**NextValid**为**true**时，可以将**NextPageToken**的值作为下次查询的**NextPageToken**，继续查询本次查询不显示的数据。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PropertyInfo' => 
                      array (
                        'description' => '时序数据集合。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Value' => 
                            array (
                              'description' => '字段值。',
                              'type' => 'string',
                              'example' => '2',
                            ),
                            'Time' => 
                            array (
                              'description' => '字段值对应时间戳，单位为毫秒。',
                              'type' => 'string',
                              'example' => '1516541885630',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.device.InvalidTimeBucket',
            'errorMessage' => 'The specified time range is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.device.NullDeviceName',
            'errorMessage' => 'The DeviceName parameter cannot be empty.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.prod.NullProductKey',
            'errorMessage' => 'The ProductKey parameter cannot be empty.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.common.InvalidPageParams',
            'errorMessage' => 'The specified pagination size or pagination parameter is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.prod.NotExistedProduct',
            'errorMessage' => 'The specified product does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.device.PageTokenIsIllegal',
            'errorMessage' => 'The paging token is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'Iot.Device.NotExistedDevice',
            'errorMessage' => 'The device does not exist.',
          ),
          7 => 
          array (
            'errorCode' => 'iot.device.InvalidFormattedDeviceName',
            'errorMessage' => 'The DeviceName format is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'iot.prod.InvalidFormattedProductkey',
            'errorMessage' => 'The ProductKey format is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'iot.device.InvalidIoTId',
            'errorMessage' => 'The specified device ID is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'iot.storage.HotStorageIopsReadNotEnough',
            'errorMessage' => 'The timeline storage read IOPS is not enough.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"nextPageToken\\": \\"Bo***x44Qx\\",\\n    \\"NextValid\\": true,\\n    \\"List\\": {\\n      \\"PropertyInfo\\": [\\n        {\\n          \\"Value\\": \\"2\\",\\n          \\"Time\\": \\"1516541885630\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDevicesHotStorageDataResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <NextValid>true</NextValid>\\n    <nextPageToken>Bo***x44Qx</nextPageToken>\\n    <List>\\n        <PropertyInfo>\\n            <Value>2</Value>\\n            <Time>1516541885630</Time>\\n        </PropertyInfo>\\n    </List>\\n</Data>\\n<Success>true</Success>\\n</QueryDevicesHotStorageDataResponse>","errorExample":""}]',
      'title' => 'QueryDevicesHotStorageData',
      'summary' => '调用该接口查询设备热数据的时序数据。',
      'description' => '## 使用说明
仅标准型和尊享型企业版实例下，支持调用该接口查询热数据。

热数据存储详细说明，请参见[配置热数据存储](~~464047~~)。

## 使用限制
- 调用该接口的每秒请求写入数据数，由您购买实例下的**热数据存储IOPS**规格决定。详细内容，请参见[购买企业版实例](~~356507~~)和[查看热数据存储IOPS](~~464051~~)。

- 仅可查询存储时效内的数据。数据存储时效，请参见[存储配置](~~464050~~)。
    
    > 数据存储时间从存储字段的时间戳表示的时间当日开始计算。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ResetDeviceTimeline' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        1 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'light',
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页签，查看当前实例的ID。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用结果状态码：
- 调用成功，返回空值。
- 调用失败，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.device.NotExistedDevice',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'device not found.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.device.NotExistedDevice',
            'errorMessage' => 'device not found.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.common.AuthActionPermissionDeny',
            'errorMessage' => 'auth action permission deny.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.%s.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.device.NotExistedDevice\\",\\n  \\"ErrorMessage\\": \\"device not found.\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ResetDeviceTimelineResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Code/>\\n<Success>true</Success>\\n</ResetDeviceTimelineResponse>","errorExample":""}]',
      'title' => 'ResetDeviceTimeline',
      'summary' => '调用该接口删除指定设备下已存储的时序数据。',
      'description' => '## 使用说明
目前，本接口仅支持白名单用户调用。请提交工单申请。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为30。

> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateDataAPIService' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RequestParam',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '请求参数列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Type' => 
                array (
                  'description' => '参数类型，请参见[JDBCType](https://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html)。目前仅支持：ARRAY、VARCHAR、INTEGER、BIGINT、BOOLEAN、DECIMAL、TIMESTAMP。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'VARCHAR',
                ),
                'Required' => 
                array (
                  'description' => '该参数是否必填。

- true：必填。
- false：非必填。

默认值为true。',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
                'Example' => 
                array (
                  'description' => '参数值示例。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'dksiaiek23s',
                ),
                'Name' => 
                array (
                  'description' => '参数名称。

例如，`${status}`格式的模板参数，参数名称就是`status`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'status',
                ),
                'Desc' => 
                array (
                  'description' => '参数描述。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '设备状态',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        1 => 
        array (
          'name' => 'ResponseParam',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '响应参数列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Type' => 
                array (
                  'description' => '参数类型，请参见[JDBCType](https://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html)。目前仅支持：VARCHAR、INTEGER、BIGINT、BOOLEAN、DECIMAL、TIMESTAMP。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'INTEGER',
                ),
                'Required' => 
                array (
                  'description' => '该参数是否必填。

- true：必填。
- false：非必填。

> 返回参数中，此参数无需处理。',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
                'Example' => 
                array (
                  'description' => '参数值示例。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '100',
                ),
                'Name' => 
                array (
                  'description' => '参数名称。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'deviceCount',
                ),
                'Desc' => 
                array (
                  'description' => '参数描述。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '设备总数',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        2 => 
        array (
          'name' => 'DisplayName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'API的显示名称，需具有全局唯一性。仅支持中文汉字、英文字母、数字、下划线（_）、连接符（-）、英文圆括号和空格，长度不超过20个字符。',
            'type' => 'string',
            'required' => true,
            'example' => '查询设备总数',
          ),
        ),
        3 => 
        array (
          'name' => 'OriginSql',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'API对应的原始SQL，指定数据开发的SQL样式。

例如`select count(*) as deviceCount from ${system.device} where status = 1`。其中，`${system.device}`是平台系统的设备表，具体请参见[数据表](~~120902~~)中的表说明。',
            'type' => 'string',
            'required' => true,
            'example' => 'SELECT COUNT(iot_id) AS deviceCount FROM ${system.device} WHERE status=1',
          ),
        ),
        4 => 
        array (
          'name' => 'Desc',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'API的描述。',
            'type' => 'string',
            'required' => false,
            'example' => '数据分析API',
          ),
        ),
        5 => 
        array (
          'name' => 'TemplateSql',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '服务的模板SQL，即原始SQL的模板化。

例如`select count(*) as deviceCount from ${system.device} where status = ${status}`。其中，`${status}`是模板化的参数。支持设置模板参数为动态值。',
            'type' => 'string',
            'required' => true,
            'example' => 'SELECT COUNT(iot_id) AS deviceCount FROM ${system.device} WHERE status=${status}',
          ),
        ),
        6 => 
        array (
          'name' => 'ApiPath',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'API调用地址的自定义部分。作为API资源标识符，需具有全局唯一性。

> API调用地址的前一段部分由系统生成。',
            'type' => 'string',
            'required' => true,
            'example' => 'device/getDeviceCountByStatus',
          ),
        ),
        7 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~135176~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '请求参数错误',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '57b144cf-09fc-4916-a272-a62902d5b207',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回注册的设备信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'LastUpdateTime' => 
                  array (
                    'description' => 'API的最后更新时间，单位为毫秒（ms）。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1557839468865',
                  ),
                  'ApiSrn' => 
                  array (
                    'description' => 'API资源标识符，API的全局唯一标识。

示例：

`acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2`

以上示例中的信息说明如下：

- `127103983461****`是阿里云主账号ID。

- `/device/getDeviceCountByStatus`是请求参数ApiPath的值，即API调用地址的自定义部分。',
                    'type' => 'string',
                    'example' => 'acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => 'API的创建时间，单位为毫秒（ms）。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1557839468865',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"请求参数错误\\",\\n  \\"RequestId\\": \\"57b144cf-09fc-4916-a272-a62902d5b207\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"LastUpdateTime\\": 1557839468865,\\n    \\"ApiSrn\\": \\"acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2\\",\\n    \\"CreateTime\\": 1557839468865\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateDataAPIServiceResponse>\\r\\n    <RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\r\\n    <Success>true</Success>\\r\\n    <Data>\\r\\n        <ApiSrn>acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2</ApiSrn>\\r\\n        <CreateTime>1557839468865</CreateTime>\\r\\n        <LastUpdateTime>1557839468865</LastUpdateTime>\\r\\n    </Data>\\r\\n</CreateDataAPIServiceResponse>","errorExample":""}]',
      'title' => 'CreateDataAPIService',
      'summary' => '调用该接口创建数据算法服务API。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为1。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDataAPIServiceDetail' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ApiSrn',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'API资源标识符，API的全局唯一标识。 调用**CreateDataAPIService**接口成功创建API，返回的ApiSrn值。

格式：`acs:iot:*:${aliyunuserID}:serveapi/${ApiPath}`

示例：`acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2`

以上示例中的信息说明如下：

- `127103983461****`是阿里云主账号ID。
- `/device/getDeviceCountByStatus`是请求参数ApiPath的值，即API调用地址的自定义部分。',
            'type' => 'string',
            'required' => true,
            'example' => 'acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~135176~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '请求参数错误',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '57b144cf-09fc-4916-a272-a62902d5b207',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'DisplayName' => 
                  array (
                    'description' => 'API名称。',
                    'type' => 'string',
                    'example' => '根据状态获取设备数',
                  ),
                  'Status' => 
                  array (
                    'description' => 'API的状态。

- 0：可编辑。
- 1：已测试。
- 2：已发布。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ApiSrn' => 
                  array (
                    'description' => 'API资源标识符，API的全局唯一标识。

示例：`acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2`

以上示例中的信息说明如下：

- `127103983461****`是阿里云主账号ID。
- `/device/getDeviceCountByStatus`是API调用地址的自定义部分。',
                    'type' => 'string',
                    'example' => 'acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2',
                  ),
                  'Description' => 
                  array (
                    'description' => 'API的描述信息。',
                    'type' => 'string',
                    'example' => '描述',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => 'API的创建时间，单位为毫秒（ms）。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1557839468865',
                  ),
                  'LastUpdateTime' => 
                  array (
                    'description' => 'API的最后更新时间，单位为毫秒（ms）。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1557839468865',
                  ),
                  'RequestMethod' => 
                  array (
                    'description' => '请求方式。',
                    'type' => 'string',
                    'example' => 'GET/POST',
                  ),
                  'DateFormat' => 
                  array (
                    'description' => '返回类型行。',
                    'type' => 'string',
                    'example' => 'JSON',
                  ),
                  'RequestProtocol' => 
                  array (
                    'description' => '协议类型。',
                    'type' => 'string',
                    'example' => 'HTTPS',
                  ),
                  'ApiPath' => 
                  array (
                    'description' => 'API调用地址的自定义部分。',
                    'type' => 'string',
                    'example' => '/device/getDeviceCountByStatus',
                  ),
                  'SqlTemplateDTO' => 
                  array (
                    'description' => 'SQL模板信息。

调用成功时，返回的SQL模板数据。详情参见下表SqlTemplateDTO。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'OriginSql' => 
                      array (
                        'description' => 'API对应的原始SQL。',
                        'type' => 'string',
                        'example' => 'SELECT COUNT(*) FROM ${system.device} WHERE status = 1',
                      ),
                      'TemplateSql' => 
                      array (
                        'description' => '原始SQL的模板化SQL。',
                        'type' => 'string',
                        'example' => 'SELECT COUNT(*) as deviceCount FROM ${system.device} WHERE status = ${status}',
                      ),
                      'RequestParams' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'RequestParams' => 
                          array (
                            'description' => '调用API的请求参数列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Type' => 
                                array (
                                  'description' => '参数类型，请参见[JDBCType](https://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html)。目前仅支持：ARRAY、VARCHAR、INTEGER、BIGINT、BOOLEAN、DECIMAL、TIMESTAMP。',
                                  'type' => 'string',
                                  'example' => 'INTEGER',
                                ),
                                'Required' => 
                                array (
                                  'description' => '该参数是否必填。

- true：必填。

- false：非必填。

默认值为true。',
                                  'type' => 'boolean',
                                  'example' => 'true',
                                ),
                                'Example' => 
                                array (
                                  'description' => '参数值示例。',
                                  'type' => 'string',
                                  'example' => '0',
                                ),
                                'Name' => 
                                array (
                                  'description' => '请求参数名称。',
                                  'type' => 'string',
                                  'example' => 'status',
                                ),
                                'Desc' => 
                                array (
                                  'description' => '参数描述。',
                                  'type' => 'string',
                                  'example' => '设备状态',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                      'ResponseParams' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'ResponseParams' => 
                          array (
                            'description' => 'API的响应参数列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Type' => 
                                array (
                                  'description' => '参数类型，请参见[JDBCType](https://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html)。目前仅支持：ARRAY、VARCHAR、INTEGER、BIGINT、BOOLEAN、DECIMAL、TIMESTAMP。',
                                  'type' => 'string',
                                  'example' => 'INTEGER',
                                ),
                                'Required' => 
                                array (
                                  'description' => '该参数是否必填。

- true：必填。

- false：非必填。

返回参数中，无需配置该参数。',
                                  'type' => 'boolean',
                                  'example' => 'true',
                                ),
                                'Example' => 
                                array (
                                  'description' => '参数值示例。',
                                  'type' => 'string',
                                  'example' => '100',
                                ),
                                'Name' => 
                                array (
                                  'description' => '返回参数名称。',
                                  'type' => 'string',
                                  'example' => 'deviceCount',
                                ),
                                'Desc' => 
                                array (
                                  'description' => '参数描述。',
                                  'type' => 'string',
                                  'example' => '设备数',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"请求参数错误\\",\\n  \\"RequestId\\": \\"57b144cf-09fc-4916-a272-a62902d5b207\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"DisplayName\\": \\"根据状态获取设备数\\",\\n    \\"Status\\": 1,\\n    \\"ApiSrn\\": \\"acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2\\",\\n    \\"Description\\": \\"描述\\",\\n    \\"CreateTime\\": 1557839468865,\\n    \\"LastUpdateTime\\": 1557839468865,\\n    \\"RequestMethod\\": \\"GET/POST\\",\\n    \\"DateFormat\\": \\"JSON\\",\\n    \\"RequestProtocol\\": \\"HTTPS\\",\\n    \\"ApiPath\\": \\"/device/getDeviceCountByStatus\\",\\n    \\"SqlTemplateDTO\\": {\\n      \\"OriginSql\\": \\"SELECT COUNT(*) FROM ${system.device} WHERE status = 1\\",\\n      \\"TemplateSql\\": \\"SELECT COUNT(*) as deviceCount FROM ${system.device} WHERE status = ${status}\\",\\n      \\"RequestParams\\": {\\n        \\"RequestParams\\": [\\n          {\\n            \\"Type\\": \\"INTEGER\\",\\n            \\"Required\\": true,\\n            \\"Example\\": \\"0\\",\\n            \\"Name\\": \\"status\\",\\n            \\"Desc\\": \\"设备状态\\"\\n          }\\n        ]\\n      },\\n      \\"ResponseParams\\": {\\n        \\"ResponseParams\\": [\\n          {\\n            \\"Type\\": \\"INTEGER\\",\\n            \\"Required\\": true,\\n            \\"Example\\": \\"100\\",\\n            \\"Name\\": \\"deviceCount\\",\\n            \\"Desc\\": \\"设备数\\"\\n          }\\n        ]\\n      }\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetDataAPIServiceDetailResponse>\\r\\n    <RequestId>57b144cf-09fc-4916-a272-a62902d5b207</RequestId>\\r\\n    <Success>true</Success>\\r\\n    <Data>\\r\\n        <ApiSrn>acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2</ApiSrn>\\r\\n        <CreateTime>1557839468865</CreateTime>\\r\\n        <LastUpdateTime>1557839468865</LastUpdateTime>\\r\\n        <Status>1</Status>\\r\\n        <DisplayName>根据状态获取设备数</DisplayName>\\r\\n        <ApiPath>/device/getDeviceCountByStatus</ApiPath>\\r\\n        <Description>描述</Description>\\r\\n        <SqlTemplateDTO>\\r\\n            <OriginSql>SELECT COUNT(*) FROM ${system.device} WHERE status = 1</OriginSql>\\r\\n            <TemplateSql>SELECT COUNT(*) as deviceCount FROM ${system.device} WHERE status = ${status}</TemplateSql>\\r\\n            <RequestParams>\\r\\n                <name>status</name>\\r\\n                <type>INTEGER</type>\\r\\n                <desc>设备状态</desc>\\r\\n                <example>0</example>\\r\\n                <required>true</required>\\r\\n            </RequestParams>\\r\\n            <ResponseParams>\\r\\n                <name>deviceCount</name>\\r\\n                <type>INTEGER</type>\\r\\n                <desc>设备数</desc>\\r\\n                <example>100</example>\\r\\n            </ResponseParams>\\r\\n        </SqlTemplateDTO>\\r\\n    </Data>\\r\\n</GetDataAPIServiceDetailResponse>","errorExample":""}]',
      'title' => '获取数据算法服务API详情',
      'summary' => '调用该接口获取数据算法服务API详情。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为1。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InvokeDataAPIService' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Param',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '参数列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ParamName' => 
                array (
                  'description' => '调用API的入参参数名称。必须与调用**CreateDataAPIService**接口创建API时，**RequestParam**中定义的**Name**保持一致。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'status',
                ),
                'ParamType' => 
                array (
                  'description' => '数据类型。目前只支持VARCHAR、INTEGER、BOOLEAN、BIGING、TIMESTAMP、DECIMAL和ARRAY类型。

> 当paramType选择ARRAY时，ListParamType和ListParamValue参数会生效；paramType为其他类型时，paramValue参数会生效。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'VARCHAR ',
                ),
                'ListParamType' => 
                array (
                  'description' => 'ARRAY类型的参数值的数据类型。请参见[JDBCType](https://docs.oracle.com/javase/8/docs/api/java/sql/JDBCType.html)。
目前仅支持VARCHAR、INTEGER、BIGINT、BOOLEAN、DECIMAL、TIMESTAMP。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'VARCHAR',
                ),
                'ParamValue' => 
                array (
                  'description' => '调用API的入参参数值。

- 统一使用String类型存储，物联网平台会根据创建API时定义的**ParamType**转换成JDBC类型对象。

- 创建API时，如果API请求参数类型**Type**定义为ARRAY类型，则不传入该参数，而需传入**ListParamType**和**ListParamValue**。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => '1',
                ),
                'ListParamValue' => 
                array (
                  'description' => 'ARRAY类型的参数值列表。数组中只能放置一组类型相同的数据，例如放置数值类型数据，则全部数据为数值类型。

> 统一使用String类型存储，平台会跟据ListParamType对应的值转换成JDBC类型对象。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'type' => 'string',
                    'required' => false,
                  ),
                  'required' => false,
                  'example' => '["1","2","3"]',
                  'maxItems' => 100,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        1 => 
        array (
          'name' => 'ApiSrn',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => 'API资源标识符，API的全局唯一标识。 调用**CreateDataAPIService**接口成功创建API，返回的ApiSrn值。

格式：`acs:iot:*:${aliyunuserID}:serveapi/${ApiPath}`

示例：`acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2`

以上示例中的信息说明如下：

- `127103983461****`是阿里云主账号ID。
- `/device/getDeviceCountByStatus`是请求参数ApiPath的值，即API调用地址的自定义部分。',
            'type' => 'string',
            'required' => true,
            'example' => 'acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2',
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~135176~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '请求参数错误',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E68FE5DC-4D7B-4987-B785-DF8C6F191F5D',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回注册的设备信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNo' => 
                  array (
                    'description' => '显示的查询结果的页码。分页码从0开始，默认为0。
如果您要自定义显示结果页，建议您在请求参数中增加自定义参数，如**pageNo**。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示的查询结果记录数。
如果您要自定义每页显示的记录数，建议您在请求参数中增加自定义参数，如**pageSize**。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ApiSrn' => 
                  array (
                    'description' => 'API资源标识符，API的全局唯一标识。

示例：`acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2`

以上示例中的信息说明如下：

- `127103983461****`是阿里云主账号ID。
- `/device/getDeviceCountByStatus`是API调用地址的自定义部分。',
                    'type' => 'string',
                    'example' => 'acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2',
                  ),
                  'TotalSize' => 
                  array (
                    'description' => '总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'FieldNameList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'FieldNameList' => 
                      array (
                        'description' => '结果字段列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '结果字段列表。 列表元素即调用**CreateDataAPIService**接口创建API时，**ResponseParam**中的**Name**定义的参数名称。',
                          'type' => 'string',
                          'example' => '{"FieldNameList": ["deviceCount"]}',
                        ),
                      ),
                    ),
                  ),
                  'ResultList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ResultList' => 
                      array (
                        'description' => '结果列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '返回的SQL处理结果。根据调用**CreateDataAPIService**接口创建API时，**ResponseParam**中的**Name**参数，返回处理结果。

列表元素`Map<String, Object>`说明如下：

- **key**是String类型，是**Name**定义的参数名称。
- **Object**是参数对应的值，其数据类型与**ResponseParam**中的Type一致。
',
                          'type' => 'object',
                          'example' => '[{"deviceCount": 47}]',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"请求参数错误\\",\\n  \\"RequestId\\": \\"E68FE5DC-4D7B-4987-B785-DF8C6F191F5D\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNo\\": 0,\\n    \\"PageSize\\": 1,\\n    \\"ApiSrn\\": \\"acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2\\",\\n    \\"TotalSize\\": 2,\\n    \\"FieldNameList\\": {\\n      \\"FieldNameList\\": [\\n        \\"{\\\\\\"FieldNameList\\\\\\": [\\\\\\"deviceCount\\\\\\"]}\\"\\n      ]\\n    },\\n    \\"ResultList\\": {\\n      \\"ResultList\\": [\\n        [\\n          {\\n            \\"deviceCount\\": 47\\n          }\\n        ]\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<InvokeDataAPIServiceResponse>\\r\\n    <Data>\\r\\n        <ResultList>\\r\\n            <ResultList>\\r\\n                <deviceCount>47</deviceCount>\\r\\n            </ResultList>\\r\\n        </ResultList>\\r\\n        <PageSize>1</PageSize>\\r\\n        <PageNo>0</PageNo>\\r\\n        <ApiSrn>acs:iot:*:127103983461****:serveapi/device/getDeviceCountByStatus2</ApiSrn>\\r\\n        <FieldNameList>\\r\\n            <FieldNameList>deviceCount</FieldNameList>\\r\\n        </FieldNameList>\\r\\n    </Data>\\r\\n    <RequestId>E68FE5DC-4D7B-4987-B785-DF8C6F191F5D</RequestId>\\r\\n    <Success>true</Success>\\r\\n</InvokeDataAPIServiceResponse>","errorExample":""}]',
      'title' => 'InvokeDataAPIService',
      'summary' => '调用该接口调用数据算法服务API，获取SQL查询结果。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为1。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddDataForApiSource' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-0pp1n*****',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API数据源ID，即**API ID**。<props="china"><ph>您可在物联网平台控制台的**数据分析** > **数据采集** > **数据源**页面，查看API数据源的**API ID**。</ph></props>

<props="china">API数据源的更多信息，请参见[配置API数据源](~~307003~~)。</props>',
            'type' => 'string',
            'required' => true,
            'example' => 'cxatswiniekxw***',
          ),
        ),
        2 => 
        array (
          'name' => 'Content',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '上传到物联网平台的数据内容。JSON格式。
JSON中必须包含**ts**字段，用来表示数据产生的时间点（unix 毫秒精度的时间戳）。',
            'type' => 'string',
            'required' => true,
            'example' => '{"key":"value","ts":16376582*****}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '200表示成功。其它表示错误码。错误码详情，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '数据ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1234567890',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BB71E443-4447-4024-A000-EDE09934561E',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.noAuthorization',
            'errorMessage' => 'no authorization.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.dap.insight.requestParamError',
            'errorMessage' => 'request param error.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.dap.insight.serverError',
            'errorMessage' => 'server hsf error please try later.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.dap.insight.notEnoughCU',
            'errorMessage' => 'There is not enough CU for the operation.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.dap.insight.notEnoughStorage',
            'errorMessage' => 'There is not enough storage for the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Data\\": 1234567890,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"BB71E443-4447-4024-A000-EDE09934561E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<AddDataForApiSourceResponse>\\n    <RequestId>BB71E443-4447-4024-A000-EDE09934561E</RequestId>\\n    <Data>1234567890</Data>\\n    <Code/>\\n    <Success>true</Success>\\n</AddDataForApiSourceResponse>","errorExample":""}]',
      'title' => 'AddDataForApiSource',
      'summary' => '调用该接口向物联网平台导入外部数据。通过此API导入物联网平台的数据，称为API数据源的数据。您可将本地或其他平台的数据上传至物联网平台，用于数据的分析和处理。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchAddDataForApiSource' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => true,
            'example' => 'iot-0pp1n*****',
          ),
        ),
        1 => 
        array (
          'name' => 'ApiId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'API数据源ID，即**API ID**。<props="china"><ph>您可在物联网平台控制台的**数据分析** > **数据采集** > **数据源**页面，查看API数据源的**API ID**。</ph></props>

<props="china">API数据源的更多信息，请参见[配置API数据源](~~307003~~)。</props>',
            'type' => 'string',
            'required' => true,
            'example' => 'cxatswiniekxw***',
          ),
        ),
        2 => 
        array (
          'name' => 'ContentList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '批量上传到物联网平台的数据内容，为JSON列表格式。
- JSON列表中JSON对象个数不得超过100个。
- JSON中必须包含**ts**字段，用来表示数据产生的时间点（unix 毫秒精度的时间戳）。',
            'type' => 'string',
            'required' => true,
            'example' => '[{"key":"value1","ts":1637658286000},{"key":"value2","ts":1637658287000}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BB71E443-4447-4024-A000-EDE09922891E',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.noAuthorization',
            'errorMessage' => 'no authorization.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.dap.insight.requestParamError',
            'errorMessage' => 'request param error.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.dap.insight.serverError',
            'errorMessage' => 'server hsf error please try later.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.dap.insight.notEnoughCU',
            'errorMessage' => 'There is not enough CU for the operation.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.dap.insight.notEnoughStorage',
            'errorMessage' => 'There is not enough storage for the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"BB71E443-4447-4024-A000-EDE09922891E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchAddDataForApiSourceResponse>\\n<RequestId>BB71E443-4447-4024-A000-EDE09922891E</RequestId>\\n<Data>{\\"count\\":2,\\"hasNext\\":false,\\"items\\":[{\\"key\\":\\"value1\\",\\"ts\\":1637658286000,\\"id\\":1234567890},{\\"key\\":\\"value2\\",\\"ts\\":1637658287000,\\"id\\":1234567891}],\\"pageNum\\":1,\\"pageSize\\":2}</Data>\\n<Code/>\\n<Success>true</Success>\\n</BatchAddDataForApiSourceResponse>","errorExample":""}]',
      'title' => 'BatchAddDataForApiSource',
      'summary' => '调用该接口向物联网平台批量导入外部数据。通过此API导入物联网平台的数据，称为API数据源的数据。您可将本地或其他平台的数据批量上传至物联网平台，用于数据的分析和处理。',
      'description' => '## 使用限制
一次调用最多可批量写入100条记录。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为3。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateDownloadDataJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-npk1u******',
          ),
        ),
        1 => 
        array (
          'name' => 'TableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需下载的表名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'product_info',
          ),
        ),
        2 => 
        array (
          'name' => 'DownloadDataType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下载对象的类型，暂只支持**TABLE**。',
            'type' => 'string',
            'required' => true,
            'example' => 'TABLE',
          ),
        ),
        3 => 
        array (
          'name' => 'FileConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '下载文件设置。给下载文件设置一个名称（fileName），可自定义，若fileName不传则默认生成一个文件名。',
            'type' => 'object',
            'required' => false,
            'example' => '{"fileName":"fileName01"}',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '时间范围，查询数据的开始时间。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1658332800000',
          ),
        ),
        5 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '时间范围，查询数据的结束时间。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1658406464534',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求返回结果',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => '200',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'no authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID，阿里云为该请求生成的唯一标识符。
',
                'type' => 'string',
                'example' => '4D6D7F71-1C94-4160-8511-EFF4B8F0643F',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '请求的返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '下载任务的执行状态。
- **-1**：初始化中。
- **0**：运行中。
- **1**：执行成功。
- **2**：执行失败。
- **3**：已提交，等待中。
- **4**：已取消。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '-1',
                  ),
                  'LongJobId' => 
                  array (
                    'description' => '下载任务的ID。',
                    'type' => 'string',
                    'example' => '62d949808bc742187xxxxxx',
                  ),
                  'AsyncExecute' => 
                  array (
                    'description' => '是否是异步查询。
- **true**：是异步查询。
- **false**：不是异步查询，是同步查询。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'CsvUrl' => 
                  array (
                    'description' => 'OSS文件的下载地址。',
                    'type' => 'string',
                    'example' => 'https://oss-xxxx-xxxx.xxxx......',
                  ),
                  'CsvFileName' => 
                  array (
                    'description' => '下载文件的名称。',
                    'type' => 'string',
                    'example' => 'test_download_file',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.noAuthorization',
            'errorMessage' => 'no authorization.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.dap.insight.requestParamError',
            'errorMessage' => 'request param error.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.dap.insight.serverError',
            'errorMessage' => 'server hsf error please try later',
          ),
          3 => 
          array (
            'errorCode' => 'iot.dap.insight.queryTimeMoreThanQueryDays',
            'errorMessage' => 'The query time range exceeded the allowed time range',
          ),
          4 => 
          array (
            'errorCode' => 'iot.dap.insight.processDownloadJobMoreConcurrenceCount',
            'errorMessage' => 'the number of concurrent download tasks in progress exceeds the upper limit',
          ),
          5 => 
          array (
            'errorCode' => 'iot.dap.insight.downloadTimesUpperLimit',
            'errorMessage' => 'the number of current job downloaded tasks exceeded the upper limit',
          ),
          6 => 
          array (
            'errorCode' => 'iot.dap.insight.downloadTaskNumUpperLimit',
            'errorMessage' => 'the number of downloaded tasks exceeded the upper limit',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"ErrorMessage\\": \\"no authorization.\\",\\n  \\"RequestId\\": \\"4D6D7F71-1C94-4160-8511-EFF4B8F0643F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Status\\": -1,\\n    \\"LongJobId\\": \\"62d949808bc742187xxxxxx\\",\\n    \\"AsyncExecute\\": true,\\n    \\"CsvUrl\\": \\"https://oss-xxxx-xxxx.xxxx......\\",\\n    \\"CsvFileName\\": \\"test_download_file\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateDownloadDataJobResponse>\\n    <code>200</code>\\n    <data>\\n        <asyncExecute>true</asyncExecute>\\n        <longJobId>62d949808bc742187xxxxxx</longJobId>\\n        <resultDataInString/>\\n        <status>-1</status>\\n    </data>\\n    <requestId>C8E9E92F-ADD1-1434-BA90-E85F70F5C536</requestId>\\n    <success>true</success>\\n</CreateDownloadDataJobResponse>","errorExample":""}]',
      'title' => 'CreateDownloadDataJob',
      'summary' => '调用接口创建数据下载任务。',
      'description' => '## 使用说明

- 该任务等同于在控制台创建的数据下载任务，用户可在对应数据表的导出管理页面查看此次下载任务的日志，并下载文件。

- 通过该接口创建下载任务会增加[AMQP消息推送](~~143601~~)，其中`consumerGroupId`请选用`dop_aliyun_group_name`，消息内容包含此次下载任务的执行状态，用户可根据此状态，配合[GetDownloadFile](~~445783~~)接口获取文件下载地址或查看下载任务的异常信息。

## 使用限制

- 同一数据实例下，每次只能创建1个下载任务。待上一个任务执行完成后才能创建新的下载任务，否则会提示超过下载任务数限制异常。

- 单次下载数据时间范围最多为3天。

- 1天内只能创建3个下载任务，RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
    ),
    'GetDownloadFile' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Context',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求内容。',
            'type' => 'object',
            'required' => false,
            'example' => '{"xxx";xxx}',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-npk1u******',
          ),
        ),
        2 => 
        array (
          'name' => 'LongJobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建下载任务时返回的长任务ID，请参见[CreateDownloadDataJob](~~445782~~)中的**LongJobId**参数。',
            'type' => 'string',
            'required' => true,
            'example' => '62d949808bc742187xxxxxx',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => '200',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'no authorization.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID，阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BB71E443-4447-4024-A000-EDE09934****',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '下载任务的执行状态。
- **-1**：初始化中。
- **0**：运行中。
- **1**：执行成功。
- **2**：执行失败。
- **3**：已提交，等待中。
- **4**：已取消。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'LongJobId' => 
                  array (
                    'description' => '下载任务的ID。',
                    'type' => 'string',
                    'example' => '62d949808bc742187xxxxxx',
                  ),
                  'BeginTime' => 
                  array (
                    'description' => '下载任务的开始时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1658406464534',
                  ),
                  'AsyncExecute' => 
                  array (
                    'description' => '是否是异步查询。
- **true**：是异步查询。
- **false**：不是异步查询，是同步查询。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '总数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '100',
                  ),
                  'EndTime' => 
                  array (
                    'description' => '下载任务的结束时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1658406465000',
                  ),
                  'PreviewSize' => 
                  array (
                    'description' => '预览大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'PageNo' => 
                  array (
                    'description' => '分页页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '分页大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'CsvUrl' => 
                  array (
                    'description' => 'OSS文件的下载地址。（有效期5分钟）',
                    'type' => 'string',
                    'example' => 'https://xxxxx-data-download-sh.oss-cn-shanghai.aliyuncs.com/data/download/6B761BxxxxxxxxAAA0BF03D32C80E/62da39b9xxxxxx5a7b953376/download_file_name.csv?Expires=1658469132&amp;OSSAccessKeyId=xxxxxxxxx&amp;Signature=rRL%xxxxxxx%3D',
                  ),
                  'CsvFileName' => 
                  array (
                    'description' => 'CSV文件名称。',
                    'type' => 'string',
                    'example' => 'test_download_flie',
                  ),
                  'DatasetId' => 
                  array (
                    'description' => '下载对象ID。',
                    'type' => 'string',
                    'example' => 'xxxxxx',
                  ),
                  'ResultDataInString' => 
                  array (
                    'description' => '查询执行结果。',
                    'type' => 'string',
                    'example' => '{"a":123}',
                  ),
                  'Header' => 
                  array (
                    'description' => '字段信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TypeClass' => 
                        array (
                          'description' => '类型。',
                          'type' => 'string',
                          'example' => 'date',
                        ),
                        'FieldName' => 
                        array (
                          'description' => '字段名。',
                          'type' => 'string',
                          'example' => 'user_name',
                        ),
                        'GeoClass' => 
                        array (
                          'description' => '地理信息。',
                          'type' => 'string',
                          'example' => '{xxx:xxxx}',
                        ),
                        'FieldType' => 
                        array (
                          'description' => '字段数据类型。',
                          'type' => 'string',
                          'example' => 'INTEGER',
                        ),
                        'TimeClass' => 
                        array (
                          'description' => '时间维度。',
                          'type' => 'string',
                          'example' => 'HOUR/DAY/MONTH',
                        ),
                        'DimDateClass' => 
                        array (
                          'description' => '调度类型。',
                          'type' => 'string',
                          'example' => 'DAY',
                        ),
                        'Alias' => 
                        array (
                          'description' => '字段别名。',
                          'type' => 'string',
                          'example' => 'user_name_alias',
                        ),
                      ),
                    ),
                  ),
                  'Result' => 
                  array (
                    'description' => '执行结果。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'example' => '{"a":123}',
                    ),
                  ),
                  'QuerySetting' => 
                  array (
                    'description' => '查询请求信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'SelectedHeaders' => 
                      array (
                        'description' => '查询字段列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '字段信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'FieldName' => 
                            array (
                              'description' => '字段名。',
                              'type' => 'string',
                              'example' => 'user_name',
                            ),
                            'GeoClass' => 
                            array (
                              'description' => '地理信息。',
                              'type' => 'string',
                              'example' => '{xxx:xxx}',
                            ),
                            'FieldType' => 
                            array (
                              'description' => '字段数据类型。',
                              'type' => 'string',
                              'example' => 'INTEGER',
                            ),
                            'TimeClass' => 
                            array (
                              'description' => '日期维度。',
                              'type' => 'string',
                              'example' => 'HOUR/DAY/MONTH',
                            ),
                            'Alias' => 
                            array (
                              'description' => '字段别名。',
                              'type' => 'string',
                              'example' => 'user_name_alias',
                            ),
                            'DimDateClass' => 
                            array (
                              'description' => '调度类型。',
                              'type' => 'string',
                              'example' => 'DAY',
                            ),
                          ),
                        ),
                      ),
                      'AstExpr' => 
                      array (
                        'description' => '查询条件。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ExprType' => 
                            array (
                              'description' => '表达式类型。',
                              'type' => 'string',
                              'example' => 'binaryOp',
                            ),
                            'Expr' => 
                            array (
                              'description' => '表达式内容。',
                              'type' => 'string',
                              'example' => '{"header":{"fieldName":"xxx"},"operator":"GreaterThanOrEqual","value":12345}',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.noAuthorization',
            'errorMessage' => 'no authorization.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.dap.insight.requestParamError',
            'errorMessage' => 'request param error.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.dap.insight.serverError',
            'errorMessage' => 'server hsf error please try later',
          ),
          3 => 
          array (
            'errorCode' => 'iot.dap.insight.downloadTaskNumUpperLimit',
            'errorMessage' => 'the number of downloaded tasks exceeded the upper limit',
          ),
          4 => 
          array (
            'errorCode' => 'iot.dap.insight.downloadTimesUpperLimit',
            'errorMessage' => 'the number of current job downloaded tasks exceeded the upper limit',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"ErrorMessage\\": \\"no authorization.\\",\\n  \\"RequestId\\": \\"BB71E443-4447-4024-A000-EDE09934****\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Status\\": 1,\\n    \\"LongJobId\\": \\"62d949808bc742187xxxxxx\\",\\n    \\"BeginTime\\": 1658406464534,\\n    \\"AsyncExecute\\": true,\\n    \\"TotalCount\\": 100,\\n    \\"EndTime\\": 1658406465000,\\n    \\"PreviewSize\\": 100,\\n    \\"PageNo\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"CsvUrl\\": \\"https://xxxxx-data-download-sh.oss-cn-shanghai.aliyuncs.com/data/download/6B761BxxxxxxxxAAA0BF03D32C80E/62da39b9xxxxxx5a7b953376/download_file_name.csv?Expires=1658469132&amp;OSSAccessKeyId=xxxxxxxxx&amp;Signature=rRL%xxxxxxx%3D\\",\\n    \\"CsvFileName\\": \\"test_download_flie\\",\\n    \\"DatasetId\\": \\"xxxxxx\\",\\n    \\"ResultDataInString\\": \\"{\\\\\\"a\\\\\\":123}\\",\\n    \\"Header\\": [\\n      {\\n        \\"TypeClass\\": \\"date\\",\\n        \\"FieldName\\": \\"user_name\\",\\n        \\"GeoClass\\": \\"{xxx:xxxx}\\",\\n        \\"FieldType\\": \\"INTEGER\\",\\n        \\"TimeClass\\": \\"HOUR/DAY/MONTH\\",\\n        \\"DimDateClass\\": \\"DAY\\",\\n        \\"Alias\\": \\"user_name_alias\\"\\n      }\\n    ],\\n    \\"Result\\": [\\n      {\\n        \\"a\\": 123\\n      }\\n    ],\\n    \\"QuerySetting\\": {\\n      \\"SelectedHeaders\\": [\\n        {\\n          \\"FieldName\\": \\"user_name\\",\\n          \\"GeoClass\\": \\"{xxx:xxx}\\",\\n          \\"FieldType\\": \\"INTEGER\\",\\n          \\"TimeClass\\": \\"HOUR/DAY/MONTH\\",\\n          \\"Alias\\": \\"user_name_alias\\",\\n          \\"DimDateClass\\": \\"DAY\\"\\n        }\\n      ],\\n      \\"AstExpr\\": [\\n        {\\n          \\"ExprType\\": \\"binaryOp\\",\\n          \\"Expr\\": \\"{\\\\\\"header\\\\\\":{\\\\\\"fieldName\\\\\\":\\\\\\"xxx\\\\\\"},\\\\\\"operator\\\\\\":\\\\\\"GreaterThanOrEqual\\\\\\",\\\\\\"value\\\\\\":12345}\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetDownloadFileResponse>\\n    <code/>\\n    <data>\\n        <asyncExecute>true</asyncExecute>\\n        <csvFileName>download_file_name</csvFileName>\\n        <csvUrl>https://insight-data-download-sh.oss-cn-shanghai.aliyuncs.com/data/download/6B761B2617454C9C9AAA0BF03D32C80E/62da39b9a48f865a7b953376/download_file_name.csv?Expires=1658469132&amp;OSSAccessKeyId=xxxxxxxxx&amp;Signature=rRL%xxxxxxx%3D</csvUrl>\\n        <longJobId>62d949808bc742187xxxxxx</longJobId>\\n        <status>1</status>\\n    </data>\\n    <requestId>41CF72F4-63C1-1EBA-8590-89D0F0CD298A</requestId>\\n    <success>true</success>\\n</GetDownloadFileResponse>","errorExample":""}]',
      'title' => 'GetDownloadFile',
      'summary' => '调用该接口获取数据表数据下载任务的执行结果。',
      'description' => '## 使用说明

- 单个下载任务的下载链接一天内只能获取3次。
- 下载链接的有效期为5分钟。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
    ),
    'BatchPub' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要发送消息的产品**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'Qos',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定消息的发送方式。取值：

- **0**：最多发送一次。
- **1**：最少发送一次。

如果不传入此参数，则使用默认值**0**。

> QoS=1的消息在物联网平台中最多可以保存7天。物联网平台不保存QoS=0的消息。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
            'default' => '0',
            'enum' => 
            array (
              0 => '0',
              1 => '1',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'TopicShortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义Topic的后缀。
自定义Topic的格式为`/${productKey}/${deviceName}/user/${TopicShortName}`，传入后缀${TopicShortName}。

> 指定Topic的操作权限须为订阅，或发布和订阅，且所有设备已订阅该Topic。

您可通过以下途径查看自定义Topic：
- 在产品详情页的**Topic类列表**页签下，查看产品下的自定义Topic。
- 在设备详情页的**Topic列表**页签下，查看设备已订阅的自定义Topic。
- 调用[QueryProductTopic](~~69647~~)接口查询产品下的自定义Topic。',
            'type' => 'string',
            'required' => false,
            'example' => 'get',
          ),
        ),
        4 => 
        array (
          'name' => 'MessageContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要发送的消息主体。最大报文256 KB。

您需要将消息原文转换成二进制数据，并进行Base64编码，从而生成消息主体。',
            'type' => 'string',
            'required' => true,
            'example' => 'eyJ0ZXN0IjoidGFzayBiYXRjaHB1YiBicm9hZGNhc3QifQ==',
          ),
        ),
        5 => 
        array (
          'name' => 'TopicTemplateName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        6 => 
        array (
          'name' => 'ResponseTopicTemplateName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        7 => 
        array (
          'name' => 'CorrelationData',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        8 => 
        array (
          'name' => 'PayloadFormatIndicator',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
          ),
        ),
        9 => 
        array (
          'name' => 'ContentType',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        10 => 
        array (
          'name' => 'MessageExpiryInterval',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
        11 => 
        array (
          'name' => 'Retained',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        12 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要接收消息的设备名称。

> - 与**ProductKey**结合使用，传入设备必须属于同一产品。
- 单次调用，最多传入100个设备名称，且设备名称不可重复。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'newdevice1',
            'maxItems' => 100,
          ),
        ),
        13 => 
        array (
          'name' => 'UserProp',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'type' => 'string',
                  'required' => false,
                ),
                'Value' => 
                array (
                  'type' => 'string',
                  'required' => false,
                ),
              ),
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchPubResponse>\\r\\n<RequestId>9E76053E-26ED-4AB4-AE58-8AFC3F1E7E8E</RequestId>\\r\\n<Success>true</Success>\\r\\n</BatchPubResponse>","errorExample":""}]',
      'title' => '向设备批量发送消息',
      'summary' => '通过自定义Topic，向指定产品下的多个设备，批量发送消息。',
      'description' => '## 使用说明

- 单批次最多向同一产品下的100个设备发送消息。
- 不支持使用BatchPub接口下发设置属性和调用服务的指令。设置属性，请使用接口[SetDeviceProperty](~~69579~~)或[SetDevicesProperty](~~96243~~)；调用服务，请使用接口[InvokeThingService](~~69584~~)或[InvokeThingsService](~~96242~~)。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'Pub' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'CorrelationData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '使用MQTT 5.0版本通信协议时，请求和响应模式中的相关数据，用户可自定义。

消息接收方可根据相关数据处理请求。

> 您需要将相关数据转换为二进制数据，并进行Base64编码，从而生成String类型数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'aGVsbG8****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要接收消息的设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Q5XoY****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MQTT云网关设备的名称。

><notice>
仅当需要向指定MQTT云网关设备发布消息时，需要传入该参数。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'device1',
          ),
        ),
        4 => 
        array (
          'name' => 'Qos',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定消息的发送方式。取值：

- **0**：最多发送一次。
- **1**：最少发送一次。如果QoS=1消息未接收到PUBACK消息，会在设备重连时，重新推送给设备。

如果不传入此参数，则使用默认值**0**。

通信消息的更多使用说明，请参见[使用限制的连接通信](~~30527~~)。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
            'default' => '0',
            'enum' => 
            array (
              0 => '0',
              1 => '1',
            ),
          ),
        ),
        5 => 
        array (
          'name' => 'ContentType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '使用MQTT 5.0版本通信协议时，发布消息的内容类型。

典型应用于存放MIME类型文件，例如，文本文件类型：**text**、**plain**。',
            'type' => 'string',
            'required' => false,
            'example' => 'text',
          ),
        ),
        6 => 
        array (
          'name' => 'PayloadFormatIndicator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '使用MQTT 5.0版本通信协议时，发布消息的有效载荷标识，可取值：
- **0**：消息是未确定的字节数据。
- **1**：消息的有效载荷是UTF-8编码的字符数据。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'Retained',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        8 => 
        array (
          'name' => 'MessageExpiryInterval',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
        9 => 
        array (
          'name' => 'ResponseTopic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '使用MQTT 5.0版本通信协议时，请求和响应模式中的响应主题，即通信的Topic。更多消息，请参见[MQTT 5.0协议说明](~~30540~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '/a1Q5XoY****/device1/user/update',
          ),
        ),
        10 => 
        array (
          'name' => 'TopicFullName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要接收消息的设备的自定义Topic。

- 对于<props="china"><ph>开源MQTT托管形态设备和</ph></props>MQTT云网关设备，自定义Topic为设备的原始自定义Topic。详细内容，请参见[Topic说明](~~433806~~)。
- 对于<props="china"><ph>非开源MQTT托管形态设备和</ph></props>非MQTT云网关设备，自定义Topic的格式支持为：

    - `/${productKey}/${deviceName}/user/${TopicShortName}`：发送消息到指定**ProductKey**的指定设备。
    - `/broadcast/${productKey}/${自定义字段}`：发送消息到指定**ProductKey**下已订阅该Topic的在线设备。`${productKey}`是要接收广播消息的具体产品的**ProductKey**；`${自定义字段}`为您自定义的任意字段。

><notice> 
- Topic的操作权限必须为**订阅**或**发布和订阅**。
- 调用该接口前，设备必须已订阅该Topic且未取消，否则无法接收本次发布的消息。

></notice>

查询自定义Topic方法：

- 调用[QueryProductTopic](~~69647~~)接口，查询产品下的自定义Topic。
- 在物联网平台控制台**产品详情**页面的**Topic类列表**页签下，查询产品下的自定义Topic。
- 在物联网平台控制台**设备详情**页面的**Topic列表**页签下，查看设备已订阅的自定义Topic。',
            'type' => 'string',
            'required' => true,
            'example' => '/a1Q5XoY****/device1/user/get',
          ),
        ),
        11 => 
        array (
          'name' => 'MessageContent',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '要发送的消息主体。您需要将消息原文转换成二进制数据，并进行Base64编码，从而生成消息主体。',
            'type' => 'string',
            'required' => true,
            'example' => 'eyJ0ZXN0IjoidGFzayBwdWIgYnJvYWRjYXN0In0=',
          ),
        ),
        12 => 
        array (
          'name' => 'TopicAlias',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
          ),
        ),
        13 => 
        array (
          'name' => 'UserProp',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '使用MQTT 5.0版本通信协议时，用户自定义属性列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '使用MQTT 5.0版本通信协议时，用户自定义属性的Key。

需要与**UserProp.N.Value**成对使用。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key1',
                ),
                'Value' => 
                array (
                  'description' => '使用MQTT 5.0版本通信协议时，用户自定义属性的Value。

需要与**UserProp.N.Key**成对使用。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'MessageId' => 
              array (
                'description' => '成功发送消息后，云端生成的消息ID，用于标识该消息。',
                'type' => 'string',
                'example' => '889455942124347329',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BB71E443-4447-4024-A000-EDE09922891E',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"MessageId\\": \\"889455942124347329\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"BB71E443-4447-4024-A000-EDE09922891E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PubResponse>\\r\\n  <RequestId>BB71E443-4447-4024-A000-EDE09922891E</RequestId>\\r\\n  <Success>true</Success>\\r\\n  <MessageId>889455942124347329</MessageId>\\r\\n</PubResponse>","errorExample":""}]',
      'title' => 'Pub',
      'summary' => '调用该接口通过自定义Topic向设备发布消息，支持向指定产品下订阅了指定自定义Topic的在线设备发送广播消息。',
      'description' => '## 使用说明
发送广播消息时：
- 相关Topic是在设备开发时编码定义的，无需控制台创建。
- 一个Topic默认最多可被1,000个设备订阅。若后续需要新增更多设备订阅自定义Topic的广播消息，可使用MQTT 5.0版本通信协议进行通信，通过设置自定义Topic支持保留消息广播和设置自定义Topic消息为保留消息来实现。使用说明，请参见[UpdateTopicConfig](~~601689~~)。

## 使用限制
该接口不支持下发设置属性和调用服务的指令。
- 设置属性，请使用[SetDeviceProperty](~~69579~~)或[SetDevicesProperty](~~96243~~)。
- 调用服务，请使用[InvokeThingService](~~69584~~)或[InvokeThingsService](~~96242~~)。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为1600。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PubBroadcast' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要发送广播消息的产品的**ProductKey**。

**ProductKey**是物联网平台为产品颁发的全局唯一标识符。您可以在物联网平台控制台或调用[QueryProductList](~~69271~~)，查看当前账号下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'aldeji3*****',
          ),
        ),
        2 => 
        array (
          'name' => 'TopicFullName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可选参数：

- 不赋值，表示全量在线设备广播，推送消息到指定**ProductKey**的全量在线设备。设备端收到的广播Topic格式为`/sys/${productKey}/${deviceName}/broadcast/request/${MessageId}`，其中**MessageId**由物联网平台生成。
- 赋值，表示指定Topic订阅广播，推送消息到指定**ProductKey**的已订阅广播Topic的在线设备。传入要接收广播消息的Topic全称，格式为：`/broadcast/${productKey}/自定义字段`。其中，**${productKey}**是要接收广播消息的具体产品**ProductKey**；自定义字段中您可以指定任意字段。

> - 广播Topic是在设备开发时编码定义的，无需控制台创建。
- 一个广播Topic最多可被1,000个设备订阅。如果您的设备超过数量限制，您可以对设备进行分组。例如，如果您有5,000个设备，您可以将设备按每组1,000个，而分成5组。您需要分5次调用广播Topic，自定义字段分别设置为group1/2/3/4/5，然后让每组设备分别订阅各自分组的广播Topic。

',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '/broadcast/UPqSxj2vXXX/xxx',
          ),
        ),
        3 => 
        array (
          'name' => 'MessageContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要发送的消息主体，最大报文64 KB。

您需要将消息原文转换成二进制数据，并进行Base64编码，从而生成消息主体。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'aGVsbG93b3JsZA',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'MessageId' => 
              array (
                'description' => '成功发送消息后，云端生成的消息ID，用于标识该消息。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1234291569964771840',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BB71E443-4447-4024-A000-EDE09922891E',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"MessageId\\": 1234291569964771800,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"BB71E443-4447-4024-A000-EDE09922891E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\'1.0\' encoding=\'UTF-8\'?>\\r\\n  <PubBroadcastResponse>\\r\\n      <RequestId>BB71E443-4447-4024-A000-EDE09922891E</RequestId>\\r\\n      <MessageId>1234291569964771840</MessageId>\\r\\n      <Success>true</Success>\\r\\n  </PubBroadcastResponse>","errorExample":""}]',
      'title' => '向所有设备发布广播消息',
      'summary' => '向指定产品所有设备，或向订阅了指定Topic的所有设备发布广播消息。',
      'description' => '## 使用说明
您可通过设置**请求参数**中**TopicFullName**值决定广播消息的对象：指定产品下所有在线设备或订阅了指定Topic的在线设备。广播Topic使用说明，请参见下文**TopicFullName**描述。

## QPS限制

- 指定Topic订阅广播，单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为1。

- 全量在线设备广播，单个阿里云账号调用该接口的每分钟内请求数（QPM）最大限制为1。

    > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RRpc' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要发送消息产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'aldfeSe****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要接收消息的设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'device1',
          ),
        ),
        3 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '等待设备回复消息的时间，单位是毫秒，取值范围是1,000 ~8,000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1000',
          ),
        ),
        4 => 
        array (
          'name' => 'ContentType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '使用JT/T 808协议通信时，服务端向指定设备发送消息的类型。可取值：

- **0**：GNSS模块详细定位数据。
- **11**：道路运输证IC卡信息。
- **65**：串口1透传。
- **66**：串口2透传。
- **240**~**255**：用户自定义透传。

物联网平台支持的JT/T 808协议详细使用说明，请参见[JT/T 808协议云网关概述](~~474256~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '240',
          ),
        ),
        5 => 
        array (
          'name' => 'RequestBase64Byte',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '要发送的消息内容经过Base64编码得到的字符串格式数据，例如`dGhpcyBpcyBhbiBleGFtcGxl`。',
            'type' => 'string',
            'required' => true,
            'example' => 'dGhpcyBpcyBhbiBleGFtcGxl',
          ),
        ),
        6 => 
        array (
          'name' => 'Topic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '使用自定义的RRPC相关Topic。需要设备端配合使用，请参见设备端开发[自定义Topic](~~90570~~)。
不传入此参数，则使用系统默认的RRPC Topic。',
            'type' => 'string',
            'required' => false,
            'example' => '/a1uZfYb****/A_Vol****/user/update',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'MessageId' => 
              array (
                'description' => '成功发送请求消息后，云端生成的消息ID，用于标识该消息。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '889455942124347392',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '41C4265E-F05D-4E2E-AB09-E031F501AF7F',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PayloadBase64Byte' => 
              array (
                'description' => '设备返回结果Base64编码后的值。',
                'type' => 'string',
                'example' => 'd29ybGQgaGVsbG8=',
              ),
              'RrpcCode' => 
              array (
                'description' => '调用成功时，生成的调用返回码，标识请求状态。取值：
- **UNKNOWN**：系统异常。
- **SUCCESS**：成功 。
- **TIMEOUT**：设备响应超时。
- **OFFLINE**：设备离线。
- **HALFCONN**：设备离线（设备连接断开，但是断开时间未超过一个心跳周期）。',
                'type' => 'string',
                'example' => 'SUCCESS',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"MessageId\\": 889455942124347400,\\n  \\"RequestId\\": \\"41C4265E-F05D-4E2E-AB09-E031F501AF7F\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PayloadBase64Byte\\": \\"d29ybGQgaGVsbG8=\\",\\n  \\"RrpcCode\\": \\"SUCCESS\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\'1.0\' encoding=\'UTF-8\'?>\\r\\n  <RRpcResponse>\\r\\n      <RequestId>41C4265E-F05D-4E2E-AB09-E031F501AF7F<RequestId/>\\r\\n      <Success>true</Success>\\r\\n      <RrpcCode>SUCCESS</RrpcCode>\\r\\n      <PayloadBase64Byte>d29ybGQgaGVsbG8=</PayloadBase64Byte>\\r\\n      <MessageId>889455942124347392</MessageId>\\r\\n  </RRpcResponse>","errorExample":""}]',
      'title' => '向设备发送请求消息',
      'summary' => '向指定设备发送请求消息，并同步返回响应。',
      'description' => '## 使用说明
调用该接口后，如果设备端未在设置的超时时间（**Timeout**）内做出反馈，即使设备收到了消息，云端也视消息为发送失败。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为1000。

  > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AsyncRRpc' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要接收消息的设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'aldfeSe****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要接收消息的设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'device1',
          ),
        ),
        3 => 
        array (
          'name' => 'ExtInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '发送消息给云网关GB/T 32960协议的设备时，需要传入此参数，标识消息的命令类型，可取值：

- **128**：查询命令（0x80）。
- **129**：设置命令（0x81）。
- **130**：车载终端控制命令（0x82）。


云网关GB/T 32960协议的设备接入详情，请参见[云网关GB/T 32960协议概述](~~2248990~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '{"commandType": 128}',
          ),
        ),
        4 => 
        array (
          'name' => 'MessageContent',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '要发送的消息主体。

您需要将消息原文转换成二进制数据，并进行Base64编码，从而生成消息主体。',
            'type' => 'string',
            'required' => true,
            'example' => 'eyJ0ZXN0IjoidGFzayBwdWIgYnJvYWRjYXN0In0=',
          ),
        ),
        5 => 
        array (
          'name' => 'TopicFullName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '发送消息给MQTT协议设备时，需要传入对应设备的自定义Topic。Topic的操作权限必须为**订阅**或**发布和订阅**。

发送消息给云网关GB/T 32960协议的设备时，无需传入此参数。

',
            'type' => 'string',
            'required' => false,
            'example' => '/a1uZfYb****/A_Vol****/user/update',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.device.InvalidFormattedDeviceName',
              ),
              'MessageId' => 
              array (
                'description' => '成功发送请求消息后，云端生成的消息ID，用于标识该消息。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '889455942124347392',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '设备名称格式错误。',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.prod.NullProductKey',
            'errorMessage' => 'The ProductKey is empty.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.prod.InvalidFormattedProductkey',
            'errorMessage' => 'The ProductKey format is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.device.NullDeviceName',
            'errorMessage' => 'The deviceName is empty.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.device.InvalidFormattedDeviceName',
            'errorMessage' => 'The deviceName format is incorrect.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.device.InactiveDevice',
            'errorMessage' => 'The device is inactive.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.device.OfflineDevice',
            'errorMessage' => 'The device is offline.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.Device.NotExistedDevice',
            'errorMessage' => 'This device does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.device.InvalidFormattedDeviceName\\",\\n  \\"MessageId\\": 889455942124347400,\\n  \\"ErrorMessage\\": \\"设备名称格式错误。\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<AsyncRRpcResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Success>true</Success>\\n<MessageId>889455942124347400</MessageId>\\n</AsyncRRpcResponse>","errorExample":""}]',
      'title' => 'AsyncRRpc',
      'summary' => '调用该接口向指定设备发送消息。',
      'description' => '## 使用说明
对于MQTT协议（包括云网关和非云网关）和云网关GB/T 32960协议的设备，可调用本接口从服务端下发消息给对应设备。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为1,000。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryMessageInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t***',
          ),
        ),
        1 => 
        array (
          'name' => 'UniMsgId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物联网平台为消息生成的唯一标识ID。

您可登录[物联网平台控制台](http://iot.console.aliyun.com/)，在**监控运维 > 日志服务**页面，获取消息ID信息。',
            'type' => 'string',
            'required' => true,
            'example' => '323455***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BB71E443-4447-4024-A000-EDE09922891E',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功，表示查询消息详情成功。
- **false**：调用失败，表示查询消息详情失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Message' => 
              array (
                'description' => '调用成功后，返回的消息详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'TopicFullName' => 
                  array (
                    'description' => '消息所属的Topic。',
                    'type' => 'string',
                    'example' => '/a1Q5XoY****/device1/user/get',
                  ),
                  'MessageContent' => 
                  array (
                    'description' => '消息原文转换成二进制数据，并进行Base64编码后的消息内容。',
                    'type' => 'string',
                    'example' => 'eyJsYXN0VGltZSI6IjIwMjEtMDYtMjQgMTY6Mj**',
                  ),
                  'UniMsgId' => 
                  array (
                    'description' => '物联网平台为消息生成的唯一标识ID。',
                    'type' => 'string',
                    'example' => '323455***',
                  ),
                  'TransformedMessageContent' => 
                  array (
                    'description' => '产品配置了消息解析时，转换成功后的消息内容。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'GenerateTime' => 
                  array (
                    'description' => '消息产生的时间，单位为毫秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1624419431000',
                  ),
                  'TransformedTopicFullName' => 
                  array (
                    'description' => '产品配置了消息解析时，转换成功后的Topic。',
                    'type' => 'string',
                    'example' => '/w******j/device01/user/testmsg',
                  ),
                  'UserProperties' => 
                  array (
                    'description' => '使用MQTT 5.0版本通信协议时，用户自定义的属性列表信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '用户自定义属性的Key字段。',
                          'type' => 'string',
                          'example' => 'key1',
                        ),
                        'Value' => 
                        array (
                          'description' => '用户自定义属性**Key**字段对应的值。',
                          'type' => 'string',
                          'example' => 'value1',
                        ),
                      ),
                    ),
                  ),
                  'MqttProperties' => 
                  array (
                    'description' => '使用MQTT 5.0版本通信协议时，配置的特性属性列表。详细内容，请参见[MQTT 5.0特性](~~2330876~~)。
',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '属性名称。',
                          'type' => 'string',
                          'example' => 'attrkey',
                        ),
                        'Value' => 
                        array (
                          'description' => '属性值。',
                          'type' => 'string',
                          'example' => 'attrvalue',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"BB71E443-4447-4024-A000-EDE09922891E\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Message\\": {\\n    \\"TopicFullName\\": \\"/a1Q5XoY****/device1/user/get\\",\\n    \\"MessageContent\\": \\"eyJsYXN0VGltZSI6IjIwMjEtMDYtMjQgMTY6Mj**\\",\\n    \\"UniMsgId\\": \\"323455***\\",\\n    \\"TransformedMessageContent\\": \\"test\\",\\n    \\"GenerateTime\\": 1624419431000,\\n    \\"TransformedTopicFullName\\": \\"/w******j/device01/user/testmsg\\",\\n    \\"UserProperties\\": [\\n      {\\n        \\"Key\\": \\"key1\\",\\n        \\"Value\\": \\"value1\\"\\n      }\\n    ],\\n    \\"MqttProperties\\": [\\n      {\\n        \\"Key\\": \\"attrkey\\",\\n        \\"Value\\": \\"attrvalue\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryMessageInfoResponse>\\n<RequestId>BB71E443-4447-4024-A000-EDE09922891E</RequestId>\\n<Message>\\n    <MessageContent>eyJsYXN0VGltZSI6IjIwMjEtMDYtMjQgMTY6Mj**</MessageContent>\\n    <GenerateTime>1624419431000</GenerateTime>\\n    <UniMsgId>323455***</UniMsgId>\\n    <TopicFullName>/a1Q5XoY****/device1/user/get</TopicFullName>\\n    <UserProperties>\\n        <Value>value1</Value>\\n        <Key>key1</Key>\\n    </UserProperties>\\n</Message>\\n<Success>true</Success>\\n</QueryMessageInfoResponse>","errorExample":""}]',
      'title' => '查询设备上下行消息的详情',
      'summary' => '查询设备上下行消息的详情，包括消息的内容、消息的产生时间、发送消息的Topic等。',
      'description' => '## 使用说明
QoS=0和QoS=1消息的最大存储时间分别为1天和7天。调用本接口前，请确认查询的是存储时间内的消息。否则，查询消息会失败。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SubscribeTopic' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-06***',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Q5XoY***',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要订阅Topic所属设备的**DeviceName**。',
            'type' => 'string',
            'required' => true,
            'example' => 'device1',
          ),
        ),
        3 => 
        array (
          'name' => 'Topic',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要订阅的Topic，最多订阅10个Topic。

Topic的操作权限必须为**订阅**或**发布和订阅**。

',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => '/a1Q5XoY***/device1/user/get',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BB71E443-4447-4024-A000-EDE09922891E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Iot.System.BillIsOverDue',
            'errorMessage' => 'Your account has overdue payments. Go to the expense center and add funds to your account.',
          ),
          1 => 
          array (
            'errorCode' => 'Iot.MessageBroker.EmptySubTopicList',
            'errorMessage' => 'The subscription topic list is empty.',
          ),
          2 => 
          array (
            'errorCode' => 'Iot.Device.NotExistedDevice',
            'errorMessage' => 'The device does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'Iot.MessageBroker.TopicTemplateIsNotFound',
            'errorMessage' => 'The topic template does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.prod.NotExistedProduct',
            'errorMessage' => 'The specified product does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.device.InactiveDevice',
            'errorMessage' => 'The device is inactive.',
          ),
          6 => 
          array (
            'errorCode' => 'Iot.MessageBroker.InvalidFormattedTopicName',
            'errorMessage' => 'The topic format specified while publishing the message is incorrect.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Iot.Device.NotDeviceOwner',
            'errorMessage' => 'You are not the device owner.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Iot.MessageBroker.BatchSubTopicFailed',
            'errorMessage' => 'An error occurred while batch subscribing to the topic.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"BB71E443-4447-4024-A000-EDE09922891E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SubscribeTopicResponse>\\n<RequestId>32B9828A-25DD-48E2-8E26-D1664B341940</RequestId>\\n<Success>true</Success>\\n</SubscribeTopicResponse>","errorExample":""}]',
      'title' => '为指定设备订阅Topic',
      'summary' => '该接口为指定设备订阅Topic。',
      'description' => '## 使用说明
- 待订阅Topic所属设备，必须已经接入物联网平台并激活在线。
- 调用本接口仅订阅指定设备的Topic，且单次调用最多订阅10个Topic。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceSubTopic' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备所属产品的ProductKey。

您可以在物联网平台控制台或调用[QueryProductList](~~69271~~)查看产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'hf768****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备的设备名称。

您可以在物联网平台控制台或调用[QueryDeviceInfo](~~257184~~)查看设备的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'device1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TopicList' => 
              array (
                'description' => '调用成功后，返回的设备已订阅Topic信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TopicName' => 
                    array (
                      'description' => '已订阅的设备Topic。',
                      'type' => 'string',
                      'example' => '/hf768****/device1/user/test',
                    ),
                    'Timestamp' => 
                    array (
                      'description' => '订阅Topic的时间，单位为毫秒。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1662039965873',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"TopicList\\": [\\n    {\\n      \\"TopicName\\": \\"/hf768****/device1/user/test\\",\\n      \\"Timestamp\\": 1662039965873\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceSubTopicResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<TopicList>\\n    <Timestamp>1662039965873</Timestamp>\\n    <TopicName>/hf768****/device1/user/test</TopicName>\\n</TopicList>\\n<TopicList>\\n    <Timestamp>1662039965873</Timestamp>\\n    <TopicName>/hf768****/device1/user/down</TopicName>\\n</TopicList>\\n<Success>true</Success>\\n</QueryDeviceSubTopicResponse>","errorExample":""}]',
      'title' => 'QueryDeviceSubTopic',
      'summary' => '调用该接口查询设备已订阅的Topic列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为100。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateTopicConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要接收消息的设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Q5XoY****',
          ),
        ),
        2 => 
        array (
          'name' => 'EnableBroadcast',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否支持保留消息广播。

- **true**：是。
- **false**：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'EnableProxySubscribe',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'Codec',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'Operation',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        6 => 
        array (
          'name' => 'TopicFullName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要广播消息的自定义Topic。


- 对于<props="china"><ph>开源MQTT托管形态设备和</ph></props>MQTT云网关设备，自定义Topic为设备的原始自定义Topic。详细内容，请参见[Topic说明](~~433806~~)。
- 对于<props="china"><ph>非开源MQTT托管形态设备和</ph></props>非MQTT云网关设备，自定义Topic的格式为`/broadcast/${productKey}/${自定义字段}`。其中`${productKey}`与请求参数**ProductKey**值一致，`${自定义字段}`为您自定义的任意字段。

><notice> 
- Topic是在设备开发时编码定义的，无需控制台创建。
- Topic的操作权限必须为**订阅**或**发布和订阅**。

></notice>',
            'type' => 'string',
            'required' => true,
            'example' => '/broadcast/a1Q5XoY****/test',
          ),
        ),
        7 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回错误码。详细信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.message.broker.ParamCheckError',
            'errorMessage' => 'Param check error.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.message.broker.ProductCheckError',
            'errorMessage' => 'Product check error.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.message.broker.TopicConfigNumExceed',
            'errorMessage' => 'Topic config num exceed.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.message.broker.SystemError',
            'errorMessage' => 'System error.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidPubTopicFormat',
            'errorMessage' => 'The pub topic cannot contain wildcard character.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidOperationWithBroadcast',
            'errorMessage' => 'The operation must be sub when enable broadcast.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidTopicWithBroadcast',
            'errorMessage' => 'The topic cannot contain wildcard character when enable broadcast.',
          ),
          7 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidOperationWithProxySubscribe',
            'errorMessage' => 'Operation must be sub or all when enable proxy subscribe.',
          ),
          8 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidTopicWithProxySubscribe',
            'errorMessage' => 'Topic cannot contain wildcard character when enable proxy subscribe.',
          ),
          9 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidTopicWithCodec',
            'errorMessage' => 'Topic cannot contain wildcard when enable codec.',
          ),
          10 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidInstanceWithCodec',
            'errorMessage' => 'Only connect instance support codec.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"Message\\": \\"\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Code/>\\n<Success>true</Success>","errorExample":""}]',
      'title' => 'UpdateTopicConfig',
      'summary' => '调用该接口设置自定义Topic是否支持保留消息广播。',
      'description' => '## 使用说明
一个自定义Topic广播消息时，最多可被1,000个设备订阅。若后续需要新增更多设备订阅该自定义Topic的广播消息，可使用MQTT 5.0版本通信协议进行通信，通过设置自定义Topic支持保留消息广播和设置自定义Topic消息为保留消息来实现。
具体步骤为：

1. 调用本接口设置指定的自定义Topic（例如：`/broadcast/a1Q5XoY****/test`）支持保留消息广播，即**EnableBroadcast**设置为**true**。
2. 调用[Pub](~~69793~~)接口向该自定义Topic（例如：`/broadcast/a1Q5XoY****/test`）发布广播消息，并设置为保留消息，即**Retained**设置为**true**。
3. 调用[SubscribeTopic](~~311869~~)接口，新增设备订阅该自定义Topic（例如：`/broadcast/a1Q5XoY****/test`），设备即可收到上一步向该自定义Topic发送的保留消息。


## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为100。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSubscribeRelation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该订阅中的产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1fyXVF****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceDataFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择设备上报消息。可选值：
- **true**：是。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceLifeCycleFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择设备生命周期变更。可选值：
- **true**：是。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'DeviceStatusChangeFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择设备状态变化通知。可选值：
- **true**：是。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'DeviceTopoLifeCycleFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择设备拓扑关系变更。可选值：
- **true**：是。仅对网关产品有效。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'FoundDeviceListFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择网关子设备发现上报。可选值：
- **true**：是。仅对网关产品有效。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'MnsConfiguration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MNS队列的配置信息，**Type**为**MNS**时必填。
具体要求和示例见下文“MnsConfiguration定义”。',
            'type' => 'string',
            'required' => false,
            'example' => '{     "queueName": "mns-test-topic1",     "regionName": "cn-shanghai",     "role": {         "roleArn": "acs:ram::5645***:role/aliyuniotaccessingmnsrole",         "roleName": "AliyunIOTAccessingMNSRole"     } }',
          ),
        ),
        8 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型：

- **MNS**。
- **AMQP**。',
            'type' => 'string',
            'required' => false,
            'example' => 'AMQP',
          ),
        ),
        9 => 
        array (
          'name' => 'OtaEventFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择OTA升级状态通知。可选值：
- **true**：是。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        10 => 
        array (
          'name' => 'ThingHistoryFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择物模型历史数据上报。可选值：
- **true**：是。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        11 => 
        array (
          'name' => 'DeviceTagFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择设备标签变更。可选值：
- **true**：是。仅当**Type**为**AMQP**时有效。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        12 => 
        array (
          'name' => 'OtaVersionFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择OTA模块版本号上报。可选值：
- **true**：是。仅当**Type**为**AMQP**时有效。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        13 => 
        array (
          'name' => 'OtaJobFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择OTA升级批次状态通知。可选值：
- **true**：是。仅当**Type**为**AMQP**时有效。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        14 => 
        array (
          'name' => 'SubscribeFlags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标识当前订阅产品的其他类型消息，数据格式为JSON String。

- 如果订阅的是JT/T 808协议云网关产品，必须传入**SubscribeFlags**，取值为：

    ```
    {
        "jt808DeviceDataFlag": true
    }
    ```

- 如果订阅的是设备视频流状态变更通知消息，必须传入**SubscribeFlags**，取值为：

    ```
    {
        "lvDeviceStatusFlag": true
    }
    ```
    配置AMQP服务端订阅**设备视频流状态变更通知**消息的详细内容，请参见[AMQP服务端订阅](~~2698782~~)。

- 如果同时订阅以上消息，取值为：

    ```
    {
        "lvDeviceStatusFlag": true,
        "jt808DeviceDataFlag": true
    }
    ```',
            'type' => 'string',
            'required' => false,
            'example' => '{     "jt808DeviceDataFlag": true }',
          ),
        ),
        15 => 
        array (
          'name' => 'ConsumerGroupIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '创建的AMQP订阅中的消费组ID，**Type**为**AMQP**时必填。

调用[CreateConsumerGroup](~~170388~~)创建消费组成功后，会返回消费组ID。您可以调用[QueryConsumerGroupList](~~170419~~)按消费组名称查询消费组ID，也可以在物联网平台控制台<props="china"><ph>对应实例下</ph></props>，选择**消息转发**>**服务端订阅**>**消费组列表**，查看消费组ID。
',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'nJRaJPn5U1JITGfjBO9l00****',
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '21D327AF-A7DE-4E59-B5D1-ACAC8C024555',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"21D327AF-A7DE-4E59-B5D1-ACAC8C024555\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateSubscribeRelationResponse>\\r\\n      <RequestId>C21DA94F-07D7-482F-8A0C-5BB0E3CC1A82</RequestId>\\r\\n      <Success>true</Success>\\r\\n</CreateSubscribeRelationResponse>","errorExample":""}]',
      'title' => '创建MNS或AMQP服务端订阅',
      'summary' => '调用该接口创建MNS或AMQP服务端订阅。',
      'description' => '## 使用说明
服务端订阅分两种类型：
- MNS订阅：将订阅的消息推送到消息服务（MNS）的队列中，您的服务端应用通过监听MNS队列接收设备消息，参见[使用MNS服务端订阅](~~68948~~)。直接调用本接口即可创建MNS订阅。
- AMQP订阅：将产品下所有已订阅类型的消息通过AMQP通道推送至您的服务端，请参见[配置AMQP服务端订阅](~~142376~~)。请按以下流程操作AMQP订阅：
1. 调用[CreateConsumerGroup](~~170388~~)创建消费组，返回消费组ID。AMQP订阅中，消息将被推送到指定消费组，AMQP客户端携带消费组ID接入物联网平台，消费消息，请参见[AMQP客户端接入说明](~~142489~~)。
2. 调用本接口创建AMQP订阅。
3. （可选）调用[CreateConsumerGroupSubscribeRelation](~~170354~~)在AMQP订阅中添加消费组。调用[DeleteConsumerGroupSubscribeRelation](~~170357~~)删除AMQP订阅中多个消费组中的指定消费组。
4. （可选）运行AMQP订阅时，调用[QueryConsumerGroupStatus](~~170358~~)查询某个消费组的状态，包括在线客户端信息、消息消费速率、消息堆积数、最近消息消费时间，调用[ResetConsumerGroupPosition](~~170355~~)清空消费组的堆积消息。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。</props>

  > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '> 请求参数中的Flag不能全部为**false**或不传入，至少传入一个为**true**的Flag。

**MnsConfiguration定义**
| 名称       | 描述           |
| ------------- |------------   |
|queueName| 消息服务中用来接收信息的队列名称。您需先在消息服务MNS控制台，创建队列，获取队列名称。具体操作，请参见[创建队列](~~34417~~)。    |
|regionName       | 目标消息服务所在的阿里云地域代码，例如cn-shanghai。    |
|role      | 授权角色信息。通过授予物联网平台指定的系统服务角色，您可以授权物联网平台访问您的消息服务。授权角色信息如下：<br>`{"roleArn":"acs:ram::5645*\\**:role/aliyuniotaccessingmnsrole","roleName": "AliyunIOTAccessingMNSRole"} `  <br>请将`5645*\\**`替换成您的阿里云账号ID。您可以登录控制台，在账号安全设置页面查看您的账号ID。<br>`AliyunIOTAccessingMNSRole`是访问控制中定义的服务角色。用于授予物联网平台访问消息服务。关于角色的更多信息，请在访问控制RAM控制台的角色管理页面进行角色管理。       |

**MnsConfiguration**示例：
```
{
    "queueName": "mns-test-topic1",
    "regionName": "cn-shanghai",
    "role": {
        "roleArn": "acs:ram::5645***:role/aliyuniotaccessingmnsrole",
        "roleName": "AliyunIOTAccessingMNSRole"
    }
}
```

调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateSubscribeRelation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DeviceStatusChangeFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择设备状态变化通知。可选值：
- **true**：是。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        2 => 
        array (
          'name' => 'ThingHistoryFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择物模型历史数据上报。可选值：
- **true**：是。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该订阅中的产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1fyXVF****',
          ),
        ),
        4 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型：

- **MNS**
- **AMQP**',
            'type' => 'string',
            'required' => true,
            'example' => 'AMQP',
          ),
        ),
        5 => 
        array (
          'name' => 'DeviceDataFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择设备上报消息。可选值：
- **true**：是。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        6 => 
        array (
          'name' => 'DeviceTopoLifeCycleFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择设备拓扑关系变更。可选值：
- **true**：是。仅对网关产品有效。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'FoundDeviceListFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择网关子设备发现上报。可选值：
- **true**：是。仅对网关产品有效。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'OtaEventFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择OTA升级状态通知。可选值：
- **true**：是。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        9 => 
        array (
          'name' => 'DeviceLifeCycleFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择设备生命周期变更。可选值：
- **true**：是。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        10 => 
        array (
          'name' => 'MnsConfiguration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MNS队列的配置信息，**Type**为**MNS**时必填。
具体要求和示例见下文“MnsConfiguration定义”。',
            'type' => 'string',
            'required' => false,
            'example' => '{     "queueName": "mns-test-topic1",     "regionName": "cn-shanghai",     "role": {         "roleArn": "acs:ram::5645***:role/aliyuniotaccessingmnsrole",         "roleName": "AliyunIOTAccessingMNSRole"     } }',
          ),
        ),
        11 => 
        array (
          'name' => 'DeviceTagFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择设备标签变更。可选值：
- **true**：是。仅当**Type**为**AMQP**时有效。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        12 => 
        array (
          'name' => 'OtaVersionFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择OTA模块版本号上报。可选值：
- **true**：是。仅当**Type**为**AMQP**时有效。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        13 => 
        array (
          'name' => 'OtaJobFlag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送消息类型是否选择OTA升级批次状态通知。可选值：
- **true**：是。仅当**Type**为**AMQP**时有效。
- **false**（默认）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        14 => 
        array (
          'name' => 'SubscribeFlags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标识当前订阅产品的其他类型消息。

- 如果订阅的是JT/T 808协议云网关产品，必须传入**SubscribeFlags**，取值为：

    ```
    {
        "jt808DeviceDataFlag": true
    }
    ```

- 如果订阅的是设备视频流状态变更通知消息，必须传入**SubscribeFlags**，取值为：

    ```
    {
        "lvDeviceStatusFlag": true
    }
    ```
    配置AMQP服务端订阅**设备视频流状态变更通知**消息的详细内容，请参见[AMQP服务端订阅](~~2698782~~)。

- 如果同时订阅以上消息，取值为：

    ```
    {
        "lvDeviceStatusFlag": true,
        "jt808DeviceDataFlag": true
    }
    ```',
            'type' => 'string',
            'required' => false,
            'example' => '{     "jt808DeviceDataFlag": true }',
          ),
        ),
        15 => 
        array (
          'name' => 'ConsumerGroupIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '创建的AMQP订阅中的消费组ID，**Type**为**AMQP**时必填。

调用[CreateConsumerGroup](~~170388~~)创建消费组成功后，会返回消费组ID。您可以调用[QueryConsumerGroupList](~~170419~~)按消费组名称查询消费组ID，也可以在物联网平台控制台<props="china"><ph>对应实例下</ph></props>，选择**消息转发**>**服务端订阅**>**消费组列表**，查看消费组ID。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'nJRaJPn5U1JITGfjBO9l00****',
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '21D327AF-A7DE-4E59-B5D1-ACAC8C024555',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"21D327AF-A7DE-4E59-B5D1-ACAC8C024555\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateSubscribeRelationResponse>\\r\\n      <RequestId>C21DA94F-07D7-482F-8A0C-5BB0E3CC1A82</RequestId>\\r\\n      <Success>true</Success>\\r\\n</UpdateSubscribeRelationResponse>","errorExample":""}]',
      'title' => '修改MNS或AMQP服务端订阅',
      'summary' => '调用该接口修改MNS或AMQP服务端订阅。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

   > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '> 请求参数中的Flag不能全部为**false**或不传入，至少传入一个为**true**的Flag。

**MnsConfiguration定义**
| 名称       | 描述           |
| ------------- |------------   |
|queueName| 消息服务中用来接收信息的队列名称。您需先在消息服务MNS控制台，创建队列，获取队列名称。具体操作，请参见[创建队列](~~34417~~)。    |
|regionName       | 目标消息服务所在的阿里云地域代码，例如cn-shanghai。    |
|role      | 授权角色信息。通过授予物联网平台指定的系统服务角色，您可以授权物联网平台访问您的消息服务。授权角色信息如下：<br>`{"roleArn":"acs:ram::5645*\\**:role/aliyuniotaccessingmnsrole","roleName": "AliyunIOTAccessingMNSRole"} `  <br>请将`5645*\\**`替换成您的阿里云账号ID。您可以登录控制台，在账号安全设置页面查看您的账号ID。<br>`AliyunIOTAccessingMNSRole`是访问控制中定义的服务角色。用于授予物联网平台访问消息服务。关于角色的更多信息，请在访问控制RAM控制台的角色管理页面进行角色管理。       |

**MnsConfiguration**示例：
```
{
    "queueName": "mns-test-topic1",
    "regionName": "cn-shanghai",
    "role": {
        "roleArn": "acs:ram::5645***:role/aliyuniotaccessingmnsrole",
        "roleName": "AliyunIOTAccessingMNSRole"
    }
}
```

调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySubscribeRelation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该订阅中的产品的ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1fyXVF****',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型：

- **MNS**
- **AMQP**',
            'type' => 'string',
            'required' => true,
            'example' => 'AMQP',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Type' => 
              array (
                'description' => '订阅类型。返回值：

- **MNS**
- **AMQP**',
                'type' => 'string',
                'example' => 'AMQP',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'DeviceTagFlag' => 
              array (
                'description' => '推送消息类型是否选择设备标签变更。可选值：
- **true**：是。仅当**Type**为**AMQP**时有效。
- **false**：否。

默认值为**false**。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'OtaVersionFlag' => 
              array (
                'description' => '推送消息类型是否选择OTA模块版本号上报。可选值：
- **true**：是。仅当**Type**为**AMQP**时有效。
- **false**：否。

默认值为**false**。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DeviceDataFlag' => 
              array (
                'description' => '推送消息类型是否选择设备上报消息。
- **true**：是。
- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'SubscribeFlags' => 
              array (
                'description' => '标识当前订阅产品的其他类型消息。

- 如果订阅的是JT/T 808协议云网关产品，取值为：

    ```
    {
        "jt808DeviceDataFlag": true
    }
    ```

- 如果订阅的是设备视频流状态变更通知消息，取值为：

    ```
    {
        "lvDeviceStatusFlag": true
    }
    ```
    配置AMQP服务端订阅**设备视频流状态变更通知**消息的详细内容，请参见[AMQP服务端订阅](~~2698782~~)。

- 如果同时订阅以上消息，取值为：

    ```
    {
        "lvDeviceStatusFlag": true,
        "jt808DeviceDataFlag": true
    }
    ```
',
                'type' => 'string',
                'example' => '{     "jt808DeviceDataFlag": true }',
              ),
              'OtaEventFlag' => 
              array (
                'description' => '推送消息类型是否选择OTA升级状态通知。
- **true**：是。
- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ThingHistoryFlag' => 
              array (
                'description' => '推送消息类型是否选择物模型历史数据上报。
- **true**：是。
- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DeviceStatusChangeFlag' => 
              array (
                'description' => '推送消息类型是否选择设备状态变化通知。
- **true**：是。
- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ProductKey' => 
              array (
                'description' => '该订阅中的产品的ProductKey。',
                'type' => 'string',
                'example' => 'a1fyXVF****',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '21D327AF-A7DE-4E59-B5D1-ACAC8C024555',
              ),
              'MnsConfiguration' => 
              array (
                'description' => '**Type**为**MNS**时，返回MNS队列的配置信息。

具体组成和示例，请参见下文的“MnsConfiguration定义和示例”。',
                'type' => 'string',
                'example' => '{     "queueName": "mns-test-topic1",     "regionName": "cn-shanghai",     "role": {         "roleArn": "acs:ram::5645***:role/aliyuniotaccessingmnsrole",         "roleName": "AliyunIOTAccessingMNSRole"     } }',
              ),
              'DeviceTopoLifeCycleFlag' => 
              array (
                'description' => '推送消息类型是否选择设备拓扑关系变更。
- **true**：是。仅网关产品会返回**true**。
- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DeviceLifeCycleFlag' => 
              array (
                'description' => '推送消息类型是否选择设备生命周期变更。
- **true**：是。
- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'FoundDeviceListFlag' => 
              array (
                'description' => '推送消息类型是否选择网关子设备发现上报。
- **true**：是。仅网关产品会返回**true**。
- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'OtaJobFlag' => 
              array (
                'description' => '推送消息类型是否选择OTA升级批次状态通知。可选值：
- **true**：是。仅当**Type**为**AMQP**时有效。
- **false**：否。

默认值为**false**。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ConsumerGroupIds' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'description' => '**Type**为**AMQP**时，返回AMQP订阅中的消费组ID。',
                  'type' => 'string',
                  'example' => '[DEFAULT_GROUP,br45A6A1amoRFGN7x1zP00****]',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Type\\": \\"AMQP\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"DeviceTagFlag\\": true,\\n  \\"OtaVersionFlag\\": true,\\n  \\"DeviceDataFlag\\": true,\\n  \\"Success\\": true,\\n  \\"SubscribeFlags\\": \\"{     \\\\\\"jt808DeviceDataFlag\\\\\\": true }\\",\\n  \\"OtaEventFlag\\": true,\\n  \\"ThingHistoryFlag\\": true,\\n  \\"DeviceStatusChangeFlag\\": true,\\n  \\"ProductKey\\": \\"a1fyXVF****\\",\\n  \\"RequestId\\": \\"21D327AF-A7DE-4E59-B5D1-ACAC8C024555\\",\\n  \\"MnsConfiguration\\": \\"{     \\\\\\"queueName\\\\\\": \\\\\\"mns-test-topic1\\\\\\",     \\\\\\"regionName\\\\\\": \\\\\\"cn-shanghai\\\\\\",     \\\\\\"role\\\\\\": {         \\\\\\"roleArn\\\\\\": \\\\\\"acs:ram::5645***:role/aliyuniotaccessingmnsrole\\\\\\",         \\\\\\"roleName\\\\\\": \\\\\\"AliyunIOTAccessingMNSRole\\\\\\"     } }\\",\\n  \\"DeviceTopoLifeCycleFlag\\": true,\\n  \\"DeviceLifeCycleFlag\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"FoundDeviceListFlag\\": true,\\n  \\"OtaJobFlag\\": true,\\n  \\"ConsumerGroupIds\\": [\\n    \\"[DEFAULT_GROUP,br45A6A1amoRFGN7x1zP00****]\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<QuerySubscribeRelationResponse>\\n<DeviceLifeCycleFlag>false</DeviceLifeCycleFlag>\\n<RequestId>73B9DF43-7780-47DE-8BED-077729D28BD2</RequestId>\\n<DeviceDataFlag>true</DeviceDataFlag>\\n<DeviceTopoLifeCycleFlag>false</DeviceTopoLifeCycleFlag>\\n<DeviceStatusChangeFlag>false</DeviceStatusChangeFlag>\\n<ConsumerGroupIds>Xs95KifeaSKbi8tKkcoD00****</ConsumerGroupIds>\\n<Success>true</Success>\\n<ThingHistoryFlag>false</ThingHistoryFlag>\\n<Type>AMQP</Type>\\n<FoundDeviceListFlag>false</FoundDeviceListFlag>\\n<OtaEventFlag>false</OtaEventFlag>\\n<SubscribeFlags>{     \\"jt808DeviceDataFlag\\": true }</SubscribeFlags>\\n<ProductKey>a1Zkii7****</ProductKey>\\n</QuerySubscribeRelationResponse>","errorExample":""}]',
      'title' => '查询MNS或AMQP服务端订阅',
      'summary' => '调用该接口查询MNS或AMQP服务端订阅。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

   > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => '**MnsConfiguration定义**
| 名称       | 描述           |
| ------------- |------------   |
|queueName| 消息服务中用来接收信息的队列名称。    |
|regionName       | 目标消息服务所在的阿里云地域代码，例如cn-shanghai。    |
|role      | 授权角色信息。通过授予物联网平台指定的系统服务角色，您可以授权物联网平台访问您的消息服务。授权角色信息如下：<br>`{"roleArn":"acs:ram::5645*\\**:role/aliyuniotaccessingmnsrole","roleName": "AliyunIOTAccessingMNSRole"} `  <br>请将`5645*\\**`替换成您的阿里云账号ID。您可以登录控制台，在账号安全设置页面查看您的账号ID。<br>`AliyunIOTAccessingMNSRole`是访问控制中定义的服务角色。用于授予物联网平台访问消息服务。关于角色的更多信息，请在访问控制RAM控制台的角色管理页面进行角色管理。       |

示例：
```
{
    "queueName": "mns-test-topic1",
    "regionName": "cn-shanghai",
    "role": {
        "roleArn": "acs:ram::5645***:role/aliyuniotaccessingmnsrole",
        "roleName": "AliyunIOTAccessingMNSRole"
    }
}
```',
      'extraInfo' => ' ',
    ),
    'DeleteSubscribeRelation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该订阅中的产品的ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1fyXVF****',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订阅类型。取值：

- **MNS**
- **AMQP**',
            'type' => 'string',
            'required' => true,
            'example' => 'AMQP',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteSubscribeRelationResponse>\\r\\n     <RequestId>73B9DF43-7780-47DE-8BED-077729D28BD2</RequestId>\\r\\n     <Success>true</Success>\\r\\n</DeleteSubscribeRelationResponse>","errorExample":""}]',
      'title' => '删除MNS或AMQP服务端订阅',
      'summary' => '调用该接口删除MNS或AMQP服务端订阅。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
   > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateConsumerGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消费组名称。支持中文汉字、英文字母、数字和下划线（_），长度为4~30个字符，一个汉字计为两个字符。',
            'type' => 'string',
            'required' => true,
            'example' => '消费组1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '73B9DF43-7780-47DE-8BED-077729D28BD2',
              ),
              'GroupId' => 
              array (
                'description' => '创建的消费组ID。',
                'type' => 'string',
                'example' => 'nJRaJPn5U1JITGf******',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"73B9DF43-7780-47DE-8BED-077729D28BD2\\",\\n  \\"GroupId\\": \\"nJRaJPn5U1JITGf******\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateConsumerGroupResponse>\\r\\n  <GroupId>nJRaJPn5U1JITGf******</GroupId>\\r\\n  <RequestId>73B9DF43-7780-47DE-8BED-077729D28BD2</RequestId>\\r\\n  <Success>true</Success>\\r\\n</CreateConsumerGroupResponse>","errorExample":""}]',
      'title' => '创建消费组',
      'summary' => '调用该接口创建一个消费组，用于创建AMQP服务端订阅。',
      'description' => '## 限制说明
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
   > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateConsumerGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'NewGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消费组的新名称。支持中文汉字、英文字母、数字和下划线（_），长度为4~30个字符，一个汉字计为两个字符。',
            'type' => 'string',
            'required' => true,
            'example' => '消费组2',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消费组ID。调用[CreateConsumerGroup](~~170388~~)创建消费组成功后，会返回消费组ID。您可以调用[QueryConsumerGroupList](~~170419~~)按消费组名称查询消费组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nJRaJPn5U1JITGf******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '73B9DF43-7780-47DE-8BED-077729D28BD2',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"73B9DF43-7780-47DE-8BED-077729D28BD2\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateConsumerGroupResponse>\\r\\n  <RequestId>73B9DF43-7780-47DE-8BED-077729D28BD2</RequestId>\\r\\n  <Success>true</Success>\\r\\n</UpdateConsumerGroupResponse>","errorExample":""}]',
      'title' => '修改指定消费组属性',
      'summary' => '使用AMQP服务端订阅时，可以调用该接口修改消费组名称。',
      'description' => '## 使用说明

不支持修改物联网平台提供的默认消费组。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryConsumerGroupByGroupId' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消费组ID。调用[CreateConsumerGroup](~~170388~~)创建消费组成功后，会返回消费组ID。您可以调用[QueryConsumerGroupList](~~170419~~)按消费组名称查询消费组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nJRaJPn5U1JITGf******	',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '73B9DF43-7780-47DE-8BED-077729D28BD2',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的消费组详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'GroupId' => 
                  array (
                    'description' => '消费组ID。',
                    'type' => 'string',
                    'example' => 'nJRaJPn5U1JITGf******	',
                  ),
                  'GroupName' => 
                  array (
                    'description' => '消费组名称。',
                    'type' => 'string',
                    'example' => '消费组1',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '消费组创建时间。为UTC时间，以毫秒计，格式为“yyyy-MM-dd\'T\'HH:mm:ss.SSSZ”。',
                    'type' => 'string',
                    'example' => '2020-05-20T00:05:20.000Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"73B9DF43-7780-47DE-8BED-077729D28BD2\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"GroupId\\": \\"nJRaJPn5U1JITGf******\\\\t\\",\\n    \\"GroupName\\": \\"消费组1\\",\\n    \\"CreateTime\\": \\"2020-05-20T00:05:20.000Z\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryConsumerGroupByGroupIdResponse>\\r\\n  <Data>\\r\\n    <GroupId>nJRaJPn5U1JITGf******</GroupId>\\r\\n    <GroupName>消费组1</GroupName>\\r\\n    <CreateTime>2019-11-12T11:19:13.000Z</CreateTime>\\r\\n  </Data>\\r\\n  <RequestId>73B9DF43-7780-47DE-8BED-077729D28BD2</RequestId>\\r\\n  <Success>true</Success>\\r\\n</QueryConsumerGroupByGroupIdResponse>","errorExample":""}]',
      'title' => '根据消费组ID查询消费组详情',
      'summary' => '调用该接口查询AMQP服务端订阅的消费组详情。',
      'description' => '## 使用说明
使用AMQP服务端订阅时，可以调用该接口根据消费组ID查询消费组详情。创建AMQP服务端订阅的接口信息，请参见[CreateSubscribeRelation](~~170349~~)。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryConsumerGroupList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的消费组数量，最小值为1，最大值为1000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '2',
          ),
        ),
        2 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页，最小值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'Fuzzy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否使用模糊查询。可选值：

- **true**：使用模糊查询，需指定**GroupName**参数。
- **false**：查询该用户的所有消费组。

默认为**false**。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模糊查询时要查询的消费组名称，当**Fuzzy**取值为**true**时传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'A类消费组',
          ),
        ),
        5 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        6 => 
        array (
          'name' => 'SubBizCode',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CurrentPage' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '73B9DF43-7780-47DE-8BED-077729D28BD2',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的消费组数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PageCount' => 
              array (
                'description' => '返回结果总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'Total' => 
              array (
                'description' => '查询到的消费组总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '8',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ConsumerGroupDTO' => 
                  array (
                    'description' => '调用成功时，返回的消费组详情，请参见ConsumerGroupDTO。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GroupId' => 
                        array (
                          'description' => '消费组ID。',
                          'type' => 'string',
                          'example' => 'nJRaJPn5U1JITGf******	',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '消费组名称。',
                          'type' => 'string',
                          'example' => 'XX消费组1',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '消费组创建时间。为UTC时间，以毫秒计，格式为“yyyy-MM-dd\'T\'HH:mm:ss.SSSZ”。',
                          'type' => 'string',
                          'example' => '2020-05-20T00:05:20.000Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CurrentPage\\": 1,\\n  \\"RequestId\\": \\"73B9DF43-7780-47DE-8BED-077729D28BD2\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 2,\\n  \\"PageCount\\": 4,\\n  \\"Total\\": 8,\\n  \\"Data\\": {\\n    \\"ConsumerGroupDTO\\": [\\n      {\\n        \\"GroupId\\": \\"nJRaJPn5U1JITGf******\\\\t\\",\\n        \\"GroupName\\": \\"XX消费组1\\",\\n        \\"CreateTime\\": \\"2020-05-20T00:05:20.000Z\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryConsumerGroupListResponse>\\r\\n  <PageSize>2</PageSize>\\r\\n  <PageCount>4</PageCount>\\r\\n  <CurrentPage>1</CurrentPage>\\r\\n  <Total>8</Total>\\r\\n  <Data>\\r\\n    <ConsumerGroupDTO>\\r\\n      <GroupId>nJRaJPn5U1JITGf******</GroupId>\\r\\n      <GroupName>A类消费组1</GroupName>\\r\\n      <CreateTime>2020-05-29T03:37:56.000Z</CreateTime>\\r\\n    </ConsumerGroupDTO>\\r\\n    <ConsumerGroupDTO>\\r\\n      <GroupId>qJRaJPndeefwgef******</GroupId>\\r\\n      <GroupName>A类消费组2</GroupName>\\r\\n      <CreateTime>2020-01-17T07:27:01.000Z</CreateTime>\\r\\n    </ConsumerGroupDTO>\\r\\n  </Data>\\r\\n  <RequestId>73B9DF43-7780-47DE-8BED-077729D28BD2</RequestId>\\r\\n  <Success>true</Success>\\r\\n</QueryConsumerGroupListResponse>","errorExample":""}]',
      'title' => '查询消费组列表',
      'summary' => '查询用户所有消费组列表，或按消费组名称进行模糊查询。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
   
 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryConsumerGroupStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消费组ID。调用[CreateConsumerGroup](~~170388~~)创建消费组成功后，会返回消费组ID。您可以调用[QueryConsumerGroupList](~~170419~~)按消费组名称查询消费组ID，也可以在物联网平台控制台对应实例下，选择**消息转发**>**服务端订阅**>**消费组列表**，查看消费组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nJRaJPn5U1JITGf******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ConsumerSpeed' => 
              array (
                'description' => '消费组消息消费速率，单位：条/分钟。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '14',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'AccumulatedConsumeCountPerMinute' => 
              array (
                'description' => '消费组堆积消息消费速率，单位：条/分钟。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'LastConsumerTime' => 
              array (
                'description' => '最近消息消费时间。为UTC时间，以毫秒计，格式为“yyyy-MM-dd\'T\'HH:mm:ss.SSSZ”。',
                'type' => 'string',
                'example' => '2020-05-29T03:37:56.000Z',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RealTimeConsumeCountPerMinute' => 
              array (
                'description' => '消费组实时消息消费速率，单位：条/分钟。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '14',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'AccumulationCount' => 
              array (
                'description' => '消费组消息堆积数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '13',
              ),
              'ClientConnectionStatusList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ConsumerGroupClientConnectionInfo' => 
                  array (
                    'description' => '消费组的在线客户端信息，请参见**ConsumerGroupClientConnectionInfo**。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'OnlineTime' => 
                        array (
                          'description' => '在线客户端的最后上线时间。取值为1970年01月01日00时00分00秒000毫秒以来的毫秒数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1591240546649',
                        ),
                        'AccumulatedConsumeCountPerMinute' => 
                        array (
                          'description' => '消费组的单个客户端堆积消息消费速率，单位：条/分钟。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'RealTimeConsumeCountPerMinute' => 
                        array (
                          'description' => '消费组的单个客户端实时消息消费速率，单位：条/分钟。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5',
                        ),
                        'ClientIpPort' => 
                        array (
                          'description' => '在线客户端IP和端口。',
                          'type' => 'string',
                          'example' => '192.168.1.2:36918	',
                        ),
                        'ClientId' => 
                        array (
                          'description' => '在线客户端ID。',
                          'type' => 'string',
                          'example' => '868575026******',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ConsumerSpeed\\": 14,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"AccumulatedConsumeCountPerMinute\\": 10,\\n  \\"LastConsumerTime\\": \\"2020-05-29T03:37:56.000Z\\",\\n  \\"Success\\": true,\\n  \\"RealTimeConsumeCountPerMinute\\": 14,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"AccumulationCount\\": 13,\\n  \\"ClientConnectionStatusList\\": {\\n    \\"ConsumerGroupClientConnectionInfo\\": [\\n      {\\n        \\"OnlineTime\\": 1591240546649,\\n        \\"AccumulatedConsumeCountPerMinute\\": 10,\\n        \\"RealTimeConsumeCountPerMinute\\": 5,\\n        \\"ClientIpPort\\": \\"192.168.1.2:36918\\\\t\\",\\n        \\"ClientId\\": \\"868575026******\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryConsumerGroupStatusResponse>\\n<ClientConnectionStatusList>\\n    <ConsumerGroupClientConnectionInfo>\\n        <ClientId>12345-1</ClientId>\\n        <AccumulatedConsumeCountPerMinute>8</AccumulatedConsumeCountPerMinute>\\n        <OnlineTime>1627624830193</OnlineTime>\\n        <ClientIpPort>192.168.1.2:55545</ClientIpPort>\\n        <RealTimeConsumeCountPerMinute>16</RealTimeConsumeCountPerMinute>\\n    </ConsumerGroupClientConnectionInfo>\\n    <ConsumerGroupClientConnectionInfo>\\n        <ClientId>12345-0</ClientId>\\n        <AccumulatedConsumeCountPerMinute>10</AccumulatedConsumeCountPerMinute>\\n        <OnlineTime>1627624829763</OnlineTime>\\n        <ClientIpPort>192.168.1.2:55526</ClientIpPort>\\n        <RealTimeConsumeCountPerMinute>14</RealTimeConsumeCountPerMinute>\\n    </ConsumerGroupClientConnectionInfo>\\n</ClientConnectionStatusList>\\n<RequestId>4EC250E4-70CE-546E-9D4A-31D06E04EAD8</RequestId>\\n<AccumulatedConsumeCountPerMinute>10</AccumulatedConsumeCountPerMinute>\\n<Success>true</Success>\\n<RealTimeConsumeCountPerMinute>14</RealTimeConsumeCountPerMinute>\\n<AccumulationCount>26</AccumulationCount>\\n<ConsumerSpeed>14</ConsumerSpeed>\\n</QueryConsumerGroupStatusResponse>","errorExample":""}]',
      'title' => '查询消费组状态',
      'summary' => '查询某个消费组的状态，包括在线客户端信息、消息消费速率、消息堆积数、最近消息消费时间。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
   > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ResetConsumerGroupPosition' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消费组ID。调用[CreateConsumerGroup](~~170388~~)创建消费组成功后，会返回消费组ID。您可以调用[QueryConsumerGroupList](~~170419~~)按消费组名称查询消费组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nJRaJPn5U1JITGf******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ResetConsumerGroupPositionResponse>\\r\\n     <RequestId>73B9DF43-7780-47DE-8BED-077729D28BD2</RequestId>\\r\\n     <Success>true</Success>\\r\\n</ResetConsumerGroupPositionResponse>","errorExample":""}]',
      'title' => '清空某个消费组的堆积消息',
      'summary' => '使用AMQP服务端订阅时，调用该接口清空某个消费组的堆积消息。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
   > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteConsumerGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消费组ID。调用[CreateConsumerGroup](~~170388~~)创建消费组成功后，会返回消费组ID。您可以调用[QueryConsumerGroupList](~~170419~~)按消费组名称查询消费组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nJRaJPn5U1JITGf******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '73B9DF43-7780-47DE-8BED-077729D28BD2',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"RequestId\\": \\"73B9DF43-7780-47DE-8BED-077729D28BD2\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteConsumerGroupResponse>\\r\\n  <RequestId>73B9DF43-7780-47DE-8BED-077729D28BD2</RequestId>\\r\\n  <Success>true</Success>\\r\\n</DeleteConsumerGroupResponse>","errorExample":""}]',
      'title' => '删除消费组',
      'summary' => '使用AMQP服务端订阅时，可以调用该接口删除消费组。',
      'description' => '## 使用说明

- 不支持删除物联网平台提供的默认消费组。
- 如果消费组已关联AMQP订阅，则需先解除该订阅与消费组的关联。当该订阅中有多个消费组时，可调用[DeleteConsumerGroupSubscribeRelation](~~170357~~)从订阅移除消费组；当该订阅只有一个消费组时，可调用[UpdateSubscribeRelation](~~170351~~)更改消费组或调用[DeleteSubscribeRelation](~~170353~~)删除订阅。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateConsumerGroupSubscribeRelation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ConsumerGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消费组ID。调用[CreateConsumerGroup](~~170388~~)创建消费组成功后，会返回消费组ID。您可以调用[QueryConsumerGroupList](~~170419~~)按消费组名称查询消费组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nJRaJPn5U1JITGfjBO9l00****',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该订阅中的产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1fyXVF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateConsumerGroupSubscribeRelationResponse>\\r\\n     <RequestId>73B9DF43-7780-47DE-8BED-077729D28BD2</RequestId>\\r\\n     <Success>true</Success>\\r\\n</CreateConsumerGroupSubscribeRelationResponse>","errorExample":""}]',
      'title' => '在AMQP订阅中添加一个消费组',
      'summary' => '调用该接口在AMQP订阅中添加一个消费组。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

   > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteConsumerGroupSubscribeRelation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ConsumerGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消费组ID。您可以调用[QuerySubscribeRelation](~~170352~~)查询AMQP订阅中的消费组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nJRaJPn5U1JITGfjBO9l00****',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '该订阅中的产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1fyXVF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteConsumerGroupSubscribeRelationResponse>\\r\\n     <RequestId>73B9DF43-7780-47DE-8BED-077729D28BD2</RequestId>\\r\\n     <Success>true</Success>\\r\\n</DeleteConsumerGroupSubscribeRelationResponse>","errorExample":""}]',
      'title' => '从多个消费组移除指定消费组',
      'summary' => '从AMQP订阅中的多个消费组移除指定消费组。',
      'description' => '## 使用说明
当AMQP订阅中只有一个消费组时，不能使用该接口移除消费组。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDeviceShadow' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。
',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备所属的产品**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1T27vz****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'device1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'A56E345A-0978-4993-ACBA-3EF444ED187F',
              ),
              'ShadowMessage' => 
              array (
                'description' => '调用成功时，返回的设备影子信息。

> 根据影子设备的不同状态，查询到的影子信息结构有所差别，详情请参见[设备影子开发](~~53930~~)。
',
                'type' => 'string',
                'example' => '{"method":"update","state":{"desired":{"color":"green"}},"version":1}',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"A56E345A-0978-4993-ACBA-3EF444ED187F\\",\\n  \\"ShadowMessage\\": \\"{\\\\\\"method\\\\\\":\\\\\\"update\\\\\\",\\\\\\"state\\\\\\":{\\\\\\"desired\\\\\\":{\\\\\\"color\\\\\\":\\\\\\"green\\\\\\"}},\\\\\\"version\\\\\\":1}\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetDeviceShadowResponse>\\n<RequestId>A56E345A-0978-4993-ACBA-3EF444ED187F</RequestId>\\n<ShadowMessage>{\\"method\\":\\"update\\",\\"state\\":{\\"desired\\":{\\"color\\":\\"green\\"}},\\"version\\":1}</ShadowMessage>\\n<Success>true</Success>\\n</GetDeviceShadowResponse>","errorExample":""}]',
      'title' => '查询指定设备的影子信息',
      'summary' => '调用该接口查询指定设备的影子信息。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDeviceShadow' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改影子信息的设备所隶属的产品ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1T27vz****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改影子信息的设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'device1',
          ),
        ),
        3 => 
        array (
          'name' => 'ShadowMessage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改后的设备影子信息。
影子信息参数中包含：
- **method**：String，指定操作类型，取值：**update**。

- **state**：String，发送给影子的具体状态，由**desired**参数表示期望的影子状态。

- **version**：Long，设备影子的版本。
    - 若无需版本控制，该值设置为0。
    - 若需要版本控制，该值必须大于当前影子版本。


><notice>需要版本控制时，不能直接从物联网平台查询当前影子版本。因为更新和查询操作并发量高时，可能导致多个更新操作查询到同一个影子版本。基于此情况，最后一次发起的更新操作可能先完成，进而导致最终更新的影子信息不是最新的影子信息。所以，建议您本地维护影子版本，调用本接口时，从本地应用获取最新影子版本。
></notice>',
            'type' => 'string',
            'required' => true,
            'example' => '{"method":"update","state":{"desired":{"color":"green"}},"version":2}',
          ),
        ),
        4 => 
        array (
          'name' => 'DeltaUpdate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否增量更新设备影子**desired**参数。

- **true**：增量更新。

- **false**（默认）：全量更新。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '6754C0E7-A35D-4CC8-A684-45EB1F0008D9',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"6754C0E7-A35D-4CC8-A684-45EB1F0008D9\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\'1.0\' encoding=\'UTF-8\'?>\\r\\n  <UpdateDeviceShadowResponse>\\r\\n      <RequestId>BB71E443-4447-4024-A000-EDE09922891E</RequestId>\\r\\n      <Success>true</Success>\\r\\n  </UpdateDeviceShadowResponse>","errorExample":""}]',
      'title' => '修改指定设备的影子信息',
      'summary' => '调用该接口修改指定设备的影子信息。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为500。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GenerateOTAUploadURL' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'FileSuffix',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级包文件扩展名。可选扩展名：

- **bin**（默认）
- **dav**
- **apk**
- **tar**
- **gz**
- **tar.gz**
- **zip**
- **gzip**',
            'type' => 'string',
            'required' => false,
            'example' => 'apk',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '74C2BB8D-1D6F-41F5-AE68-6B2310883F63',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的文件上传信息。详情见以下参数信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Key' => 
                  array (
                    'description' => '调用OSS的接口PostObject上传对象（即文件）的名称，包含OSS对象的完整路径。',
                    'type' => 'string',
                    'example' => 'ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.bin',
                  ),
                  'OSSAccessKeyId' => 
                  array (
                    'description' => 'OSS Bucket拥有者的**AccessKey ID**。

该OSS Bucket将存储文件。',
                    'type' => 'string',
                    'example' => 'cS8uRRy54Rsz****',
                  ),
                  'Signature' => 
                  array (
                    'description' => '根据**AccessKeySecret**和**Policy**计算出的签名信息。调用OSS API时，OSS验证该签名信息，从而确认Post请求的合法性。',
                    'type' => 'string',
                    'example' => 'v6lViO4FBvfquajQjg20K5hK****',
                  ),
                  'Host' => 
                  array (
                    'description' => 'OSS的接入域名。',
                    'type' => 'string',
                    'example' => 'https://iotx-ota.oss-cn-shanghai.aliyuncs.com',
                  ),
                  'Policy' => 
                  array (
                    'description' => 'OSS通过该参数验证请求表单域的合法性。',
                    'type' => 'string',
                    'example' => 'eyJleHBpcmF****',
                  ),
                  'ObjectStorage' => 
                  array (
                    'description' => '对象存储类型。默认为OSS。',
                    'type' => 'string',
                    'example' => 'OSS',
                  ),
                  'FirmwareUrl' => 
                  array (
                    'description' => '文件的URL，即文件在对象存储（OSS）上的存储地址。

文件URL的格式为`https://BucketName.Endpoint/ObjectName`。其中，BucketName是Bucket名称，Endpoint是文件访问域名（各地域的Endpoint信息，请参见[访问域名和数据中心](~~31837~~)），ObjectName是包含文件夹以及文件后缀在内的该文件的完整路径。

升级包文件上传成功后，使用此参数调用[CreateOTAFirmware](~~147311~~)接口创建升级包。',
                    'type' => 'string',
                    'example' => 'https://iotx-ota.oss-cn-shanghai.aliyuncs.com/ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.bin',
                  ),
                  'UtcCreate' => 
                  array (
                    'description' => '生成文件上传URL的时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2019-11-04T06:21:54.607Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"74C2BB8D-1D6F-41F5-AE68-6B2310883F63\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Key\\": \\"ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.bin\\",\\n    \\"OSSAccessKeyId\\": \\"cS8uRRy54Rsz****\\",\\n    \\"Signature\\": \\"v6lViO4FBvfquajQjg20K5hK****\\",\\n    \\"Host\\": \\"https://iotx-ota.oss-cn-shanghai.aliyuncs.com\\",\\n    \\"Policy\\": \\"eyJleHBpcmF****\\",\\n    \\"ObjectStorage\\": \\"OSS\\",\\n    \\"FirmwareUrl\\": \\"https://iotx-ota.oss-cn-shanghai.aliyuncs.com/ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.bin\\",\\n    \\"UtcCreate\\": \\"2019-11-04T06:21:54.607Z\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\n<GenerateOTAUploadURLResponse>\\n  <Data>\\n    <Key>ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.bin</Key>\\n    <Host>https://iotx-ota.oss-cn-shanghai.aliyuncs.com</Host>\\n    <Policy>eyJleHBpcmF****</Policy>\\n    <OSSAccessKeyId>cS8uRRy54Rsz****</OSSAccessKeyId>\\n    <ObjectStorage>OSS</ObjectStorage>\\n    <UtcCreate>2019-11-04T06:21:54.607Z</UtcCreate>\\n    <Signature>PKmRTy40QxqIUUWy325SCT/****</Signature>\\n    <FirmwareUrl>https://iotx-ota.oss-cn-shanghai.aliyuncs.com/ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.bin</FirmwareUrl>\\n  </Data>\\n  <RequestId>B6E77674-09C4-4647-BF85-59CB72A72E4B</RequestId>\\n  <Success>true</Success>\\n</GenerateOTAUploadURLResponse>","errorExample":""}]',
      'title' => '生成升级包文件URL',
      'summary' => '生成升级包文件上传到OSS的URL及详细信息。',
      'description' => '## 使用说明
该接口与其他接口结合使用完成升级包创建。创建升级包的步骤：

1. 调用本接口生成升级包文件上传到对象存储（OSS）的信息。
本接口的返回参数包含：
    - 调用OSS [PostObject](~~31988~~)上传升级包文件的请求参数：**Host**、**Key**、**OSSAccessKeyId**、**Signature**和**Policy**。
    - 调用[CreateOTAFirmware](~~147311~~)创建升级包的请求参数**FirmwareUrl**。

2. 请在本接口返回结果后的1分钟之内，使用[OSS SDK](~~52834~~)调用[PostObject](~~31988~~)接口上传升级包文件。上传文件的代码示例，请参见下文“返回参数的用途”章节。

    ><notice> 本接口返回的参数信息有效期为1分钟，请在1分钟内上传升级包。上传的升级包文件大小不能超过1,000 MB。
    ></notice>


3. 升级包上传完成后，请在60分钟内，调用物联网平台API [CreateOTAFirmware](~~147311~~)接口创建升级包。
    如果上传了升级包，但未调用CreateOTAFirmware接口创建升级包，上传的文件将被系统定期自动清理。


## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => '## 返回参数的用途

调用OSS [PostObject](~~31988~~)接口时，使用本接口的返回参数值作为请求参数值，将您编辑好的升级包文件上传到对象存储（OSS）。

以下是向对象存储OSS上传文件的Java代码示例。示例代码详细内容，请参见[表单上传](~~84788~~)。

- 在pom.xml中添加以下依赖。
```
<dependency>
  <groupId>org.apache.httpcomponents</groupId>
  <artifactId>httpclient</artifactId>
  <version>4.5.3</version>
</dependency>

<dependency>
  <groupId>org.apache.httpcomponents</groupId>
  <artifactId>httpmime</artifactId>
  <version>4.5.10</version>
</dependency>
```

- 上传升级包文件的代码如下。
```
public static boolean postObject(String key,
                                  String host,
                                  String policy,
                                  String ossAccessKeyId,
                                  String signature,
                                  String data) throws IOException {
  CloseableHttpClient httpClient = HttpClients.createDefault();
  HttpPost uploadFile = new HttpPost(host);

  MultipartEntityBuilder builder = MultipartEntityBuilder.create();
  builder.addTextBody("key", key, ContentType.TEXT_PLAIN);
  builder.addTextBody("policy", policy, ContentType.TEXT_PLAIN);
  builder.addTextBody("OSSAccessKeyId", ossAccessKeyId, ContentType.TEXT_PLAIN);
  builder.addTextBody("signature", signature, ContentType.TEXT_PLAIN);
  builder.addTextBody("success_action_status", "200", ContentType.TEXT_PLAIN);
  builder.addBinaryBody("file", data.getBytes());

  HttpEntity multipart = builder.build();
  uploadFile.setEntity(multipart);
  CloseableHttpResponse response = httpClient.execute(uploadFile);

  if (response.getStatusLine().getStatusCode() == 200) {
    return true;
  }

  return false;
}
```',
      'extraInfo' => ' ',
    ),
    'GenerateDeviceNameListURL' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '74C2BB8D-1D6F-41F5-AE68-6B2310883F63',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的文件上传信息。详情见以下参数信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Key' => 
                  array (
                    'description' => '调用OSS API PostObject上传对象（即文件）的名称，包含OSS对象的完整路径。',
                    'type' => 'string',
                    'example' => 'ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.csv',
                  ),
                  'Signature' => 
                  array (
                    'description' => '根据**AccessKeySecret**和**Policy**计算出的签名信息。调用OSS API时，OSS验证该签名信息，从而确认Post请求的合法性。',
                    'type' => 'string',
                    'example' => 'v6lViO4FBvfquajQjg20K5hK****',
                  ),
                  'Host' => 
                  array (
                    'description' => 'OSS的接入域名。',
                    'type' => 'string',
                    'example' => 'https://iotx-ota.oss-cn-shanghai.aliyuncs.com',
                  ),
                  'FileUrl' => 
                  array (
                    'description' => '文件的URL，即文件在对象存储（OSS）上的存储地址。

设备列表文件上传成功后，使用此参数调用[CreateOTAStaticUpgradeJob](~~147496~~)接口创建静态批量升级批次。',
                    'type' => 'string',
                    'example' => 'https://iotx-ota.oss-cn-shanghai.aliyuncs.com/ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.csv',
                  ),
                  'Policy' => 
                  array (
                    'description' => 'OSS通过该参数验证请求表单域的合法性。',
                    'type' => 'string',
                    'example' => 'eyJleHBpcmF****',
                  ),
                  'ObjectStorage' => 
                  array (
                    'description' => '对象存储类型。默认为OSS。',
                    'type' => 'string',
                    'example' => 'OSS',
                  ),
                  'UtcCreate' => 
                  array (
                    'description' => '生成文件上传URL的时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2019-11-04T06:21:54.607Z',
                  ),
                  'AccessKeyId' => 
                  array (
                    'description' => 'OSS Bucket拥有者的AccessKeyId。
该OSS Bucket将存储文件。',
                    'type' => 'string',
                    'example' => 'cS8uRRy54Rsz****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"74C2BB8D-1D6F-41F5-AE68-6B2310883F63\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Key\\": \\"ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.csv\\",\\n    \\"Signature\\": \\"v6lViO4FBvfquajQjg20K5hK****\\",\\n    \\"Host\\": \\"https://iotx-ota.oss-cn-shanghai.aliyuncs.com\\",\\n    \\"FileUrl\\": \\"https://iotx-ota.oss-cn-shanghai.aliyuncs.com/ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.csv\\",\\n    \\"Policy\\": \\"eyJleHBpcmF****\\",\\n    \\"ObjectStorage\\": \\"OSS\\",\\n    \\"UtcCreate\\": \\"2019-11-04T06:21:54.607Z\\",\\n    \\"AccessKeyId\\": \\"cS8uRRy54Rsz****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GenerateDeviceNameListURLResponse>\\n    <Data>\\n        <Policy>eyJleHBpcmF****</Policy>\\n        <FileUrl>https://iotx-ota.oss-cn-shanghai.aliyuncs.com/ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.csv</FileUrl>\\n        <UtcCreate>2019-11-04T06:21:54.607Z</UtcCreate>\\n        <AccessKeyId>cS8uRRy54Rsz****</AccessKeyId>\\n        <Signature>v6lViO4FBvfquajQjg20K5hK****</Signature>\\n        <ObjectStorage>OSS</ObjectStorage>\\n        <Host>https://iotx-ota.oss-cn-shanghai.aliyuncs.com</Host>\\n        <Key>ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.csv</Key>\\n    </Data>\\n    <RequestId>74C2BB8D-1D6F-41F5-AE68-6B2310883F63</RequestId>\\n    <Success>true</Success>\\n</GenerateDeviceNameListURLResponse>","errorExample":""}]',
      'title' => '生成设备文件上传到OSS的详细信息',
      'summary' => '生成设备列表文件上传到OSS的URL及详细信息。',
      'description' => '## 设备列表文件要求

- 设备列表文件包含设备DeviceName，以换行分隔，每行一个DeviceName。支持CSV格式，文件大小不能超过5 MB。

- 单个设备列表文件最多可包含升级包对应产品下的10,000个设备，否则使用该文件创建静态升级批次时将报错。

## 使用说明
该接口与其他接口结合使用完成设备列表文件上传。上传设备列表文件的步骤：

1. 调用本接口生成设备列表文件上传到对象存储（OSS）的信息。
本接口的返回参数包含：
    调用OSS [PostObject](~~31988~~)上传设备列表文件的请求参数：**Key**、**AccessKeyId**、**Signature**和**Policy**。

2. 请在本接口返回结果后的1分钟之内，使用[OSS SDK](~~52834~~)调用[PostObject](~~31988~~)接口上传设备列表文件。上传文件的代码示例，请参见下文返回参数的用途章节。

    > 本接口返回的参数信息有效期为1分钟，请在1分钟内上传设备列表文件。

3. 设备列表上传完成后，请在60分钟内，调用物联网平台API [CreateOTAStaticUpgradeJob](~~147496~~)创建静态升级批次。
    如果上传了设备列表，但未调用CreateOTAStaticUpgradeJob创建静态升级批次，上传的文件将被系统定期自动清理。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

   > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => '## 返回参数的用途

调用OSS [PostObject](~~31988~~)接口时，使用本接口的返回参数值作为请求参数值，将您编辑好的文件上传到对象存储（OSS）。

以下是向对象存储OSS上传文件的Java代码示例：

- 在pom.xml中添加以下依赖：

```<dependency>
  <groupId>org.apache.httpcomponents</groupId>
  <artifactId>httpclient</artifactId>
  <version>4.5.3</version>
</dependency>

<dependency>
  <groupId>org.apache.httpcomponents</groupId>
  <artifactId>httpmime</artifactId>
  <version>4.5.10</version>
</dependency>
```

- 上传文件的代码如下：

```public static boolean postObject(String key,
                                  String host,
                                  String policy,
                                  String ossAccessKeyId,
                                  String signature,
                                  String data) throws IOException {
  CloseableHttpClient httpClient = HttpClients.createDefault();
  HttpPost uploadFile = new HttpPost(host);

  MultipartEntityBuilder builder = MultipartEntityBuilder.create();
  builder.addTextBody("key", key, ContentType.TEXT_PLAIN);
  builder.addTextBody("policy", policy, ContentType.TEXT_PLAIN);
  builder.addTextBody("ossAccessKeyId", ossAccessKeyId, ContentType.TEXT_PLAIN);
  builder.addTextBody("signature", signature, ContentType.TEXT_PLAIN);
  builder.addTextBody("success_action_status", "200", ContentType.TEXT_PLAIN);
  builder.addBinaryBody("file", data.getBytes());

  HttpEntity multipart = builder.build();
  uploadFile.setEntity(multipart);
  CloseableHttpResponse response = httpClient.execute(uploadFile);

  if (response.getStatusLine().getStatusCode() == 200) {
    return true;
  }

  return false;
}
```',
      'extraInfo' => ' ',
    ),
    'CreateOTAFirmware' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'FirmwareName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包名称，需在阿里云账号下唯一，创建后不可修改。支持中文、英文字母、日文、数字、短划线（-）、下划线（_）和半角圆括号（()），必须以中文、英文、日文或数字开头，长度限制为1~40个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'Firmware2',
          ),
        ),
        2 => 
        array (
          'name' => 'DestVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前OTA升级包的版本号，仅支持英文字母、数字、半角句号（.）、短划线（-）和下划线（_）。长度限制为1~64个字符。',
            'type' => 'string',
            'required' => true,
            'example' => '2.0.0',
          ),
        ),
        3 => 
        array (
          'name' => 'FirmwareUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包文件的URL，即升级包文件在对象存储（OSS）上的存储地址。您可调用[GenerateOTAUploadURL](~~147310~~)生成升级包文件的URL。

><notice>仅当OTA升级包中添加一个文件时，才可传入此参数，且必须传入。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'https://iotx-ota.oss-cn-shanghai.aliyuncs.com/ota/bcd6142594d0183a16d825ad8225****/A6B3400B70CA4D6D872160D1A91A****.bin',
          ),
        ),
        4 => 
        array (
          'name' => 'FirmwareSign',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包文件的签名值。使用**SignMethod**对升级包文件内容加签计算得出的值。

><notice> 仅当OTA升级包中添加一个文件时，才可传入此参数。若不传入，则采用对象存储（OSS）中升级包文件的MD5值作为升级包签名值。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '93230c3bde425a9d7984a594ac55****',
          ),
        ),
        5 => 
        array (
          'name' => 'SignMethod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包签名方法。目前仅支持取值为**MD5**（MD5签名）。

不传入此参数，默认为**MD5**。',
            'type' => 'string',
            'required' => false,
            'example' => 'MD5',
          ),
        ),
        6 => 
        array (
          'name' => 'FirmwareSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包文件的大小，单位：字节。

><notice> 仅当OTA升级包中添加一个文件时，才可传入此参数。若不传入，则采用对象存储（OSS）中升级包文件的大小。
></notice> ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '900',
          ),
        ),
        7 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1uctKe****',
          ),
        ),
        8 => 
        array (
          'name' => 'FirmwareDesc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包描述。长度不可超过100个字符。一个中文汉字算一个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'OTA function updated',
          ),
        ),
        9 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包类型。可选：

- **0**：整包升级包，您上传的升级包文件包含完整的升级包，将推送整包升级包给设备进行升级。
- **1**：差分升级包，您上传的升级包文件仅包含新版本升级包与之前版本的差异部分，仅推送差异部分给设备进行升级。

不传入此参数，则默认值为**0**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        10 => 
        array (
          'name' => 'SrcVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待升级OTA模块版本号，即待升级设备的当前OTA模块版本号。

可以调用[QueryDeviceDetail](~~69594~~)，查看设备OTA模块版本号（**FirmwareVersion**）。

> - **Type**为**1**（差分升级包）时，必须传入该参数，且取值不能与当前升级包版本（**DestVersion**）相同。
- **Type**为**0**（整包升级包）时，可不传入该参数。',
            'type' => 'string',
            'required' => false,
            'example' => '1.0.0',
          ),
        ),
        11 => 
        array (
          'name' => 'ModuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA模块名称。OTA模块是同产品下设备的不同可升级模块。

> - 不传入该参数，则使用default模块，表示整个设备的固件。
- 可调用[CreateOTAModule](~~186066~~)创建自定义OTA模块，调用[ListOTAModuleByProduct](~~186532~~)查询产品下已创建的OTA模块。',
            'type' => 'string',
            'required' => false,
            'example' => 'WifiConfigModify',
          ),
        ),
        12 => 
        array (
          'name' => 'NeedToVerify',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否需要在创建批量升级任务前通过升级包验证。

- **true**（默认）：需要

- **false**：不需要
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'true',
          ),
        ),
        13 => 
        array (
          'name' => 'Udi',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送给设备的自定义信息。不限制文本内容格式，长度不超过4096个字符。

添加该升级包完成，并创建升级任务后，物联网平台向设备推送升级通知时，会将该自定义信息下发给设备。',
            'type' => 'string',
            'required' => false,
            'example' => '{"ota_notice":"升级底层摄像头驱动，解决视频图像模糊的问题。"}',
          ),
        ),
        14 => 
        array (
          'name' => 'MultiFiles',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'OTA升级包文件列表信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'FileMd5' => 
                array (
                  'description' => 'OTA升级包文件的MD5值。

>OTA升级包中添加多个升级包文件时，可传入此参数。若不传入，则采用对象存储（OSS）中升级包文件的MD5值。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => '93230c3bde425a9d7984a594ac56***',
                ),
                'Size' => 
                array (
                  'description' => 'OTA升级包文件的大小，单位：字节。

>OTA升级包中添加多个升级包文件时，可传入此参数。若不传入，则采用对象存储（OSS）中升级包文件的大小。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '200',
                ),
                'Url' => 
                array (
                  'description' => 'OTA升级包文件的URL，即升级包文件在对象存储（OSS）上的存储地址。您可调用[GenerateOTAUploadURL](~~147310~~)为每个升级包文件生成文件URL。

><notice>OTA升级包中添加多个升级包文件时，必须传入此参数。
></notice>',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'https://iotx-ota.oss-cn-shanghai.aliyuncs.com/ota/bcd6142594d0183a16d825ad8225****/A6B3400B70CA4D6D872160D1A91A****.bin',
                ),
                'SignValue' => 
                array (
                  'description' => 'OTA升级包文件的签名值。使用**SignMethod**对升级包文件内容加签计算得出的值。

>OTA升级包中添加多个升级包文件时，可传入此参数。若不传入，则采用对象存储（OSS）中升级包文件的MD5值作为升级包签名值。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => '93230c3bde425a9d7984a594ac45****',
                ),
                'Name' => 
                array (
                  'description' => 'OTA升级包文件名称，长度限制为1~32个字符。支持最多添加20个文件名称，且多个升级包文件的名称不能重复。


><notice> OTA升级包中添加多个升级包文件时，必须传入此参数。
></notice>',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Firmware1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '291438BA-6E10-4C4C-B761-243B9A0D324F',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功，表示OTA升级包创建成功。
- **false**：调用失败，表示OTA升级包创建失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的升级包信息。更多信息，请参见**Data**下参数描述。',
                'type' => 'object',
                'properties' => 
                array (
                  'FirmwareId' => 
                  array (
                    'description' => 'OTA升级包ID，物联网平台为升级包颁发的唯一标识符。',
                    'type' => 'string',
                    'example' => 's8SSHiKjpBfrM3BSN0z803****',
                  ),
                  'UtcCreate' => 
                  array (
                    'description' => 'OTA升级包的创建时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2019-11-04T06:21:54.607Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"291438BA-6E10-4C4C-B761-243B9A0D324F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"FirmwareId\\": \\"s8SSHiKjpBfrM3BSN0z803****\\",\\n    \\"UtcCreate\\": \\"2019-11-04T06:21:54.607Z\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\r\\n<CreateOTAFirmwareResponse>\\r\\n  <Data>\\r\\n    <FirmwareId>s8SSHiKjpBfrM3BSN0z803****</FirmwareId>\\r\\n    <UtcCreate>2019-11-04T06:21:54.607Z</UtcCreate>\\r\\n  </Data>\\r\\n  <RequestId>E4BD5A12-7C1D-4712-A7D5-B2432331165E</RequestId>\\r\\n  <Success>true</Success>\\r\\n</CreateOTAFirmwareResponse>","errorExample":""}]',
      'title' => 'CreateOTAFirmware',
      'summary' => '生成OTA升级包文件的URL后，调用该接口创建设备的OTA升级包。',
      'description' => '## 使用说明
在调用此接口创建升级包前，已调用[GenerateOTAUploadURL](~~147310~~)生成升级包上传信息，并已调用OSS [PostObject](~~31988~~)接口上传了升级包文件。

## 使用限制
单个阿里云账号下最多可有500个升级包。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。

',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyOTAFirmware' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1uctKe****',
          ),
        ),
        1 => 
        array (
          'name' => 'FirmwareId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包ID，OTA升级包的唯一标识符。

OTA升级包ID是调用接口[CreateOTAFirmware](~~147311~~)创建OTA升级包时，返回的参数之一。

您也可以调用接口[ListOTAFirmware](~~147450~~)，从返回参数中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 's8SSHiKjpBfrM3BSN0z803****',
          ),
        ),
        2 => 
        array (
          'name' => 'FirmwareDesc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包描述。长度不可超过100个字符。一个中文汉字算一个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'OTA function updated',
          ),
        ),
        3 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-0pp1n8t****',
          ),
        ),
        4 => 
        array (
          'name' => 'FirmwareName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包名称，需在阿里云账号下唯一。支持中文、英文字母、日文、数字、短划线（-）、下划线（_）和半角圆括号（()），必须以中文、英文、日文或数字开头，长度限制为1~40个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'Firmwaretest',
          ),
        ),
        5 => 
        array (
          'name' => 'FirmwareUdi',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送给设备的自定义信息。不限制文本内容格式，长度不超过4096个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '{"ota_notice":"升级底层摄像头驱动，解决视频图像模糊的问题。"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.ota.FirmwareNotFound',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'The specified firmware does not exist.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.firmware.AlreadyExistedFirmwareName',
            'errorMessage' => 'The OTA update package already exists.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.ota.FirmwareNotFound',
            'errorMessage' => 'The specified firmware does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.ota.FirmwareAndProductKeyMismatch',
            'errorMessage' => 'The OTA update package is not consistent with the ProductKey.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.ota.TenantIdMisMatch',
            'errorMessage' => 'The tenantId is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.firmware.FirmwareUdiExceedLimit',
            'errorMessage' => 'The UDI of the firmware is longer than the limit.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.firmware.FirmwareDescExceedLimit',
            'errorMessage' => 'The description of the firmware is longer than the limit.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.firmware.IncorrectFormattedFirmwareName',
            'errorMessage' => 'The format of the OTA update package name is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'iot.ota.InstanceIdMisMatch',
            'errorMessage' => 'The instanceId is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.ota.FirmwareNotFound\\",\\n  \\"ErrorMessage\\": \\"The specified firmware does not exist.\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ModifyOTAFirmwareResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Success>true</Success>\\n</ModifyOTAFirmwareResponse>","errorExample":""}]',
      'title' => 'ModifyOTAFirmware',
      'summary' => '调用该接口修改升级包信息，包括升级包名称、升级包描述和自定义信息。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteOTAFirmware' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'FirmwareId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包ID，OTA升级包的唯一标识符。

OTA升级包ID是调用[CreateOTAFirmware](~~147311~~)创建OTA升级包时，返回的参数之一。

可以调用[ListOTAFirmware](~~147450~~)，从返回参数中查看。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 's8SSHiKjpBfrM3BSN0z803****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '9B7BF858-7686-496E-B8B0-BF9E5D7F86CE',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"9B7BF858-7686-496E-B8B0-BF9E5D7F86CE\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\r\\n<DeleteOTAFirmwareResponse>\\r\\n  <RequestId>9B7BF858-7686-496E-B8B0-BF9E5D7F86CE</RequestId>\\r\\n  <Success>true</Success>\\r\\n</DeleteOTAFirmwareResponse>","errorExample":""}]',
      'title' => '删除指定固件',
      'summary' => '调用该接口删除指定OTA升级包。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListOTAFirmware' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包所属产品的**ProductKey**。

传入该参数，则查询指定产品下的OTA升级包列表；不传入此参数，则返回当前阿里云账号下的所有OTA升级包列表。',
            'type' => 'string',
            'required' => false,
            'example' => 'a19mzPZ****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的固件数量。最大限制为100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。页数从1开始排序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'DestVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包版本号。传入该参数，则查询版本号为指定版本号的OTA升级包。',
            'type' => 'string',
            'required' => false,
            'example' => '4.0.0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CurrentPage' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'A01829CE-75A1-4920-B775-921146A1AB79',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的固件数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => 'OTA升级包数量总计。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'FirmwareInfo' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SimpleFirmwareInfo' => 
                  array (
                    'description' => '调用成功时，返回的OTA升级包列表。详情参见以下SimpleFirmwareInfo。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ModuleName' => 
                        array (
                          'description' => 'OTA升级包的模块名称。',
                          'type' => 'string',
                          'example' => 'module1234',
                        ),
                        'Type' => 
                        array (
                          'description' => 'OTA升级包类型。

- **0**：整包固件。
- **1**：差分固件。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'Status' => 
                        array (
                          'description' => 'OTA升级包状态。

- **0**：未验证。
- **1**：已验证。
- **2**：验证中。
- **3**：验证失败。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ProductName' => 
                        array (
                          'description' => 'OTA升级包所属产品的名称。',
                          'type' => 'string',
                          'example' => 'MyProduct',
                        ),
                        'UtcCreate' => 
                        array (
                          'description' => 'OTA升级包创建时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-12-28T02:42:22.000Z',
                        ),
                        'FirmwareSize' => 
                        array (
                          'description' => 'OTA升级包大小，单位：字节。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '924',
                        ),
                        'FirmwareName' => 
                        array (
                          'description' => 'OTA升级包名称。',
                          'type' => 'string',
                          'example' => 't3q5rkNm',
                        ),
                        'FirmwareSign' => 
                        array (
                          'description' => 'OTA升级包内容的签名值。',
                          'type' => 'string',
                          'example' => '3d04ab6462633508606e5f3daac8****',
                        ),
                        'ProductKey' => 
                        array (
                          'description' => 'OTA升级包所属产品的ProductKey。',
                          'type' => 'string',
                          'example' => 'a19mzPZ****',
                        ),
                        'UtcModified' => 
                        array (
                          'description' => 'OTA升级包最后一次修改时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-12-28T02:42:22.000Z',
                        ),
                        'SrcVersion' => 
                        array (
                          'description' => '待升OTA升级包版本号。

> 整包OTA升级包返回的该参数为空。',
                          'type' => 'string',
                          'example' => 'V1.0.0',
                        ),
                        'FirmwareDesc' => 
                        array (
                          'description' => 'OTA升级包描述信息。',
                          'type' => 'string',
                          'example' => 'firmwareDesc',
                        ),
                        'SignMethod' => 
                        array (
                          'description' => 'OTA升级包签名方式。',
                          'type' => 'string',
                          'example' => 'MD5',
                        ),
                        'DestVersion' => 
                        array (
                          'description' => '当前OTA升级包版本号。',
                          'type' => 'string',
                          'example' => '4.0.0',
                        ),
                        'FirmwareId' => 
                        array (
                          'description' => 'OTA升级包ID，OTA升级包的唯一标识符。',
                          'type' => 'string',
                          'example' => 'UfuxnwygsuSkVE0VCN****0100',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CurrentPage\\": 1,\\n  \\"RequestId\\": \\"A01829CE-75A1-4920-B775-921146A1AB79\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"PageCount\\": 1,\\n  \\"Total\\": 1,\\n  \\"FirmwareInfo\\": {\\n    \\"SimpleFirmwareInfo\\": [\\n      {\\n        \\"ModuleName\\": \\"module1234\\",\\n        \\"Type\\": 0,\\n        \\"Status\\": 0,\\n        \\"ProductName\\": \\"MyProduct\\",\\n        \\"UtcCreate\\": \\"2019-12-28T02:42:22.000Z\\",\\n        \\"FirmwareSize\\": 924,\\n        \\"FirmwareName\\": \\"t3q5rkNm\\",\\n        \\"FirmwareSign\\": \\"3d04ab6462633508606e5f3daac8****\\",\\n        \\"ProductKey\\": \\"a19mzPZ****\\",\\n        \\"UtcModified\\": \\"2019-12-28T02:42:22.000Z\\",\\n        \\"SrcVersion\\": \\"V1.0.0\\",\\n        \\"FirmwareDesc\\": \\"firmwareDesc\\",\\n        \\"DestVersion\\": \\"4.0.0\\",\\n        \\"SignMethod\\": \\"MD5\\",\\n        \\"FirmwareId\\": \\"UfuxnwygsuSkVE0VCN****0100\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListOTAFirmwareResponse>\\n<PageCount>1</PageCount>\\n<PageSize>10</PageSize>\\n<RequestId>A01829CE-75A1-4920-B775-921146A1AB79</RequestId>\\n<FirmwareInfo>\\n    <SimpleFirmwareInfo>\\n        <SrcVersion>1.0.0</SrcVersion>\\n        <FirmwareSign>3d04ab6462633508606e5f3daac8****</FirmwareSign>\\n        <ProductKey>a19mzPZ****</ProductKey>\\n        <Type>0</Type>\\n        <UtcModified>2019-12-28T02:42:22.000Z</UtcModified>\\n        <SignMethod>MD5</SignMethod>\\n        <UtcCreate>2019-12-28T02:42:22.000Z</UtcCreate>\\n        <FirmwareSize>924</FirmwareSize>\\n        <Status>0</Status>\\n        <FirmwareId>UfuxnwygsuSkVE0VCN****0100</FirmwareId>\\n        <FirmwareDesc>firmwareDesc</FirmwareDesc>\\n        <DestVersion>4.0.0</DestVersion>\\n        <ProductName>MyProduct</ProductName>\\n        <FirmwareName>t3q5rkNm</FirmwareName>\\n        <ModuleName>module1234</ModuleName>\\n    </SimpleFirmwareInfo>\\n</FirmwareInfo>\\n<CurrentPage>1</CurrentPage>\\n<Success>true</Success>\\n<Total>1</Total>\\n</ListOTAFirmwareResponse>","errorExample":""}]',
      'title' => '查询固件列表',
      'summary' => '调用该接口查询OTA升级包列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryOTAFirmware' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'FirmwareId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包ID，升级包的唯一标识符。

OTA升级包ID是调用[CreateOTAFirmware](~~147311~~)创建升级包时，返回的参数之一。

可以调用[ListOTAFirmware](~~147450~~)，从返回参数中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 's8SSHiKjpBfrM3BSN0z803****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'A01829CE-75A1-4920-B775-921146A1AB79',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'FirmwareInfo' => 
              array (
                'description' => '调用成功时，返回的升级包信息。详情参见以下**FirmwareInfo**包含的参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'ModuleName' => 
                  array (
                    'description' => 'OTA升级包的模块名称。

升级包模块用于区分同产品下设备的不同模块的升级。更多信息，请参见[添加升级包中的自定义OTA模块](~~202664~~)。',
                    'type' => 'string',
                    'example' => 'WifiConfigModify',
                  ),
                  'Type' => 
                  array (
                    'description' => 'OTA升级包类型。

- **0**：整包升级包，您上传的升级包文件包含完整的升级包，将推送整包升级包给设备进行升级。
- **1**：差分升级包，您上传的升级包文件仅包含新版本升级包与之前版本的差异部分，仅推送差异部分给设备进行升级。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Status' => 
                  array (
                    'description' => 'OTA升级包状态。

- **-1**：不需要验证。
- **0**：未验证。
- **1**：已验证。
- **2**：验证中。
- **3**：验证失败。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'ProductName' => 
                  array (
                    'description' => 'OTA升级包所属产品的名称。',
                    'type' => 'string',
                    'example' => 'MyProduct',
                  ),
                  'FirmwareUrl' => 
                  array (
                    'description' => 'OSS存储升级包文件的URL。

> OTA升级包中仅有一个升级包文件时，返回该参数。',
                    'type' => 'string',
                    'example' => 'https://ota-***.aliyuncs.com/ota/572ef2fd12ca4791a5b21a9eb948****/5E962CF83DB1495E8337E9C8A4D1****.bin?Expires=1577587360&OSSAccessKeyId=cS8uRRy54Rsz****&Signature=farzC8%2FVMN4HYdEtXvdiC2OevH****',
                  ),
                  'UtcCreate' => 
                  array (
                    'description' => '创建OTA升级包的时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2019-12-28T02:42:22.000Z',
                  ),
                  'FirmwareSize' => 
                  array (
                    'description' => 'OTA升级包文件大小，单位为字节。

> OTA升级包中仅有一个升级包文件时，返回该参数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '924',
                  ),
                  'FirmwareName' => 
                  array (
                    'description' => 'OTA升级包名称。',
                    'type' => 'string',
                    'example' => 't3q5rkNm',
                  ),
                  'FirmwareSign' => 
                  array (
                    'description' => 'OTA升级包文件内容的签名值。

> OTA升级包中仅有一个升级包文件时，返回该参数。',
                    'type' => 'string',
                    'example' => '3d04ab6462633508606e5f3daac8****',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => 'OTA升级包所属产品的**ProductKey**。',
                    'type' => 'string',
                    'example' => 'a19mzPZ****',
                  ),
                  'UtcModified' => 
                  array (
                    'description' => 'OTA升级包最后一次修改时的时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2019-12-28T02:42:41.000Z',
                  ),
                  'SrcVersion' => 
                  array (
                    'description' => '待升级的OTA升级包版本号。

> 仅差分升级的升级包返回该参数。升级包类型的说明，请参见参数**Type**的描述。',
                    'type' => 'string',
                    'example' => '1.0.0',
                  ),
                  'VerifyProgress' => 
                  array (
                    'description' => 'OTA升级包的验证进度。

- **0**：未验证。
- **100**：已完成验证。
- 0至100之间的数值N：表示N%的设备已完成升级。升级包验证状态请根据返回参数**Status**判断。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'FirmwareDesc' => 
                  array (
                    'description' => 'OTA升级包描述信息。',
                    'type' => 'string',
                    'example' => 'modified-WiFi-module',
                  ),
                  'SignMethod' => 
                  array (
                    'description' => 'OTA升级包签名方式。',
                    'type' => 'string',
                    'example' => 'MD5',
                  ),
                  'DestVersion' => 
                  array (
                    'description' => '当前OTA升级包版本号。',
                    'type' => 'string',
                    'example' => '4.0.0',
                  ),
                  'FirmwareId' => 
                  array (
                    'description' => 'OTA升级包ID，升级包的唯一标识符。',
                    'type' => 'string',
                    'example' => 'UfuxnwygsuSkVE0VCN****0100',
                  ),
                  'Udi' => 
                  array (
                    'description' => '推送给设备的自定义信息。不限制文本内容的格式，长度不超过4096个字符。

创建升级任务后，物联网平台向设备推送升级通知时，会将该自定义信息下发给设备。',
                    'type' => 'string',
                    'example' => '{"ota_notice":"升级底层摄像头驱动，解决视频图像模糊的问题。"}',
                  ),
                  'MultiFiles' => 
                  array (
                    'description' => 'OTA升级包文件列表信息。OTA升级包中有多个升级包文件时，返回此参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Url' => 
                        array (
                          'description' => 'OSS存储升级包文件的URL。',
                          'type' => 'string',
                          'example' => 'https://ota-***.aliyuncs.com/ota/572ef2fd12ca4791a5b21a9eb948****/5E962CF83DB1495E8337E9C8A4D1****.bin?Expires=1577587360&OSSAccessKeyId=cS8uRRy54Rsz****&Signature=farzC8%2FVMN4HYdEtXvdiC2OevH****',
                        ),
                        'FileMd5' => 
                        array (
                          'description' => 'OTA升级包文件的MD5值。',
                          'type' => 'string',
                          'example' => '3d04ab6462633508606e5f3d****',
                        ),
                        'SignValue' => 
                        array (
                          'description' => 'OTA升级包文件内容的签名值。',
                          'type' => 'string',
                          'example' => '3d04ab6462633508606e5f3d****',
                        ),
                        'Name' => 
                        array (
                          'description' => 'OTA升级包文件名称。',
                          'type' => 'string',
                          'example' => 'firmware1',
                        ),
                        'Size' => 
                        array (
                          'description' => 'OTA升级包文件大小，单位为字节。
',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '200',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"A01829CE-75A1-4920-B775-921146A1AB79\\",\\n  \\"Success\\": true,\\n  \\"FirmwareInfo\\": {\\n    \\"ModuleName\\": \\"WifiConfigModify\\",\\n    \\"Type\\": 0,\\n    \\"Status\\": 2,\\n    \\"ProductName\\": \\"MyProduct\\",\\n    \\"FirmwareUrl\\": \\"https://ota-***.aliyuncs.com/ota/572ef2fd12ca4791a5b21a9eb948****/5E962CF83DB1495E8337E9C8A4D1****.bin?Expires=1577587360&OSSAccessKeyId=cS8uRRy54Rsz****&Signature=farzC8%2FVMN4HYdEtXvdiC2OevH****\\",\\n    \\"UtcCreate\\": \\"2019-12-28T02:42:22.000Z\\",\\n    \\"FirmwareSize\\": 924,\\n    \\"FirmwareName\\": \\"t3q5rkNm\\",\\n    \\"FirmwareSign\\": \\"3d04ab6462633508606e5f3daac8****\\",\\n    \\"ProductKey\\": \\"a19mzPZ****\\",\\n    \\"UtcModified\\": \\"2019-12-28T02:42:41.000Z\\",\\n    \\"SrcVersion\\": \\"1.0.0\\",\\n    \\"VerifyProgress\\": 0,\\n    \\"FirmwareDesc\\": \\"modified-WiFi-module\\",\\n    \\"SignMethod\\": \\"MD5\\",\\n    \\"DestVersion\\": \\"4.0.0\\",\\n    \\"FirmwareId\\": \\"UfuxnwygsuSkVE0VCN****0100\\",\\n    \\"Udi\\": \\"{\\\\\\"ota_notice\\\\\\":\\\\\\"升级底层摄像头驱动，解决视频图像模糊的问题。\\\\\\"}\\",\\n    \\"MultiFiles\\": [\\n      {\\n        \\"Url\\": \\"https://ota-***.aliyuncs.com/ota/572ef2fd12ca4791a5b21a9eb948****/5E962CF83DB1495E8337E9C8A4D1****.bin?Expires=1577587360&OSSAccessKeyId=cS8uRRy54Rsz****&Signature=farzC8%2FVMN4HYdEtXvdiC2OevH****\\",\\n        \\"FileMd5\\": \\"3d04ab6462633508606e5f3d****\\",\\n        \\"SignValue\\": \\"3d04ab6462633508606e5f3d****\\",\\n        \\"Name\\": \\"firmware1\\",\\n        \\"Size\\": 200\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryOTAFirmwareResponse>\\n<RequestId>A01829CE-75A1-4920-B775-921146A1AB79</RequestId>\\n<FirmwareInfo>\\n    <SrcVersion/>\\n    <FirmwareSign>3d04ab6462633508606e5f3daac8****</FirmwareSign>\\n    <ProductKey>a19mzPZ****</ProductKey>\\n    <Type>0</Type>\\n    <UtcModified>2019-12-28T02:42:41.000Z</UtcModified>\\n    <SignMethod>MD5</SignMethod>\\n    <UtcCreate>2019-12-28T02:42:22.000Z</UtcCreate>\\n    <FirmwareSize>924</FirmwareSize>\\n    <Status>2</Status>\\n    <FirmwareId>UfuxnwygsuSkVE0VCN****0100</FirmwareId>\\n    <FirmwareDesc>modified-WiFi-module</FirmwareDesc>\\n    <FirmwareUrl>https://ota-***.aliyuncs.com/ota/572ef2fd12ca4791a5b21a9eb948****/5E962CF83DB1495E8337E9C8A4D1****.bin?Expires=1577587360&amp;OSSAccessKeyId=cS8uRRy54Rsz****&amp;Signature=farzC8%2FVMN4HYdEtXvdiC2OevH****</FirmwareUrl>\\n    <DestVersion>4.0.0</DestVersion>\\n    <ProductName>MyProduct</ProductName>\\n    <FirmwareName>t3q5rkNm</FirmwareName>\\n    <ModuleName>WifiConfigModify</ModuleName>\\n    <Udi>{\\"ota_notice\\":\\"升级底层摄像头驱动，解决视频图像模糊的问题。\\"}</Udi>\\n    <VerifyProgress>0</VerifyProgress>\\n</FirmwareInfo>\\n<Success>true</Success>\\n</QueryOTAFirmwareResponse>","errorExample":""}]',
      'title' => '查询指定固件的详细信息',
      'summary' => '调用该接口查询指定OTA升级包的详细信息，包括升级包的名称、类型、状态等。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateOTAVerifyJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'FirmwareId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包ID，升级包的唯一标识符。

**FirmwareId**是调用[CreateOTAFirmware](~~147311~~)创建OTA升级包时，返回的参数之一。

也可以调用[ListOTAFirmware](~~147450~~)，从返回参数中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'nx3xxVvFdwvn6dim50PY03****',
          ),
        ),
        2 => 
        array (
          'name' => 'TimeoutInMinutes',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置设备升级超时时间，单位分钟，范围1~1,440。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1440',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包所属产品的ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1VJwBw****',
          ),
        ),
        4 => 
        array (
          'name' => 'NeedPush',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物联网平台是否主动向设备推送升级任务。

- **true**（默认）：是。批次任务创建完成后，物联网平台主动将升级任务，直接推送给升级范围内的在线设备。
    
    此时，设备仍可主动向物联网平台发起请求，来获取OTA升级任务信息。

- **false**：否。设备必须通过向物联网平台发起请求，来获取OTA升级任务信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'NeedConfirm',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '如需自主控制设备OTA升级时，可配置此参数，通过手机App来控制，设备是否可进行OTA升级。手机App需您自行开发。


- **false**（默认）：否。直接按照**NeedPush**设置，获取OTA升级任务信息。
- **true**：是。设备无法获取OTA升级任务，需App侧确认OTA升级后，才能按照**NeedPush**设置，获取OTA升级任务信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'DownloadProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级包下载协议，可选：**HTTPS**（默认）或**MQTT**。设备端收到物联网平台推送的升级包下载信息后，通过该协议下载升级包。

><notice>使用MQTT协议下载升级包，必须符合以下条件：
- 支持的地域：仅中国的华东2（上海）、华北2（北京）和华南1（深圳）。
- OTA升级包：仅包含一个文件，且文件大小不超过16 MB。
- 设备端SDK：必须使用物联网平台提供的C语言Link SDK最新版本的软件包，开发OTA升级和MQTT下载文件的能力。详细内容，请参见[使用MQTT协议下载升级包的OTA升级代码示例](~~330985~~)。

></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'HTTPS',
          ),
        ),
        7 => 
        array (
          'name' => 'TargetDeviceName',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待验证的设备。

> - 设备所属产品必须与OTA升级包所属产品一致。
- 设备名称不能重复。
- 最多可传入10个设备名称。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => true,
            'example' => 'testdevice',
            'maxItems' => 10,
          ),
        ),
        8 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '批次标签key。仅支持英文字母、数字、半角句号（.），长度限制为1~30个字符。支持最多添加10个批次标签。

批次标签将在向设备推送升级通知时下发给设备。

> 批次标签可以不传入。**是否必选**的**是**，表示如果传入批次标签Tag，**Tag.N.Value**与**Tag.N.Key**必须成对传入。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'key1',
                ),
                'Value' => 
                array (
                  'description' => '批次标签value。长度限制为1~1024个字符。支持最多添加10个批次标签。所有批次标签key和vlaue的长度总和，不能超过4096个字符。

> 批次标签可以不传入。**是否必选**的**是**，表示如果传入批次标签Tag，**Tag.N.Value**与**Tag.N.Key**必须成对传入。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'value1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '29EC7245-0FA4-4BB6-B4F5-5F04818FDFB1',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的验证批次信息。详情见以下参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => 'OTA升级包验证任务ID，即用于验证OTA升级包的设备升级批次ID。',
                    'type' => 'string',
                    'example' => 'wahVIzGkCMuAUE2gDERM02****',
                  ),
                  'UtcCreate' => 
                  array (
                    'description' => 'OTA升级包验证任务的创建时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2019-11-04T06:22:19.566Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"29EC7245-0FA4-4BB6-B4F5-5F04818FDFB1\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"JobId\\": \\"wahVIzGkCMuAUE2gDERM02****\\",\\n    \\"UtcCreate\\": \\"2019-11-04T06:22:19.566Z\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\r\\n<CreateOTAVerifyJobResponse>\\r\\n <Data>\\r\\n   <JobId>wahVIzGkCMuAUE2gDERM02****</JobId>\\r\\n   <UtcCreate>2019-11-04T06:22:19.566Z</UtcCreate>\\r\\n </Data>\\r\\n <RequestId>29EC7245-0FA4-4BB6-B4F5-5F04818FDFB1</RequestId>\\r\\n <Success>true</Success>\\r\\n</CreateOTAVerifyJobResponse>","errorExample":""}]',
      'title' => 'CreateOTAVerifyJob',
      'summary' => '调用该接口创建OTA升级包验证任务。',
      'description' => '## 使用说明

- 将OTA升级包推送给设备批量升级前，必须完成OTA升级包验证。只有已验证的OTA升级包才可用于批量设备升级。您可以调用[QueryOTAFirmware](~~147461~~)查看OTA升级包验证状态。
- 不能对验证进行中或验证已成功的OTA升级包重复发起验证任务。
- 最多只能传入10个设备用于OTA升级包验证。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateOTAStaticUpgradeJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'FirmwareId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级包ID，升级包的唯一标识符。

升级包ID是调用[CreateOTAFirmware](~~147311~~)创建升级包时，返回的参数之一。

可以调用[ListOTAFirmware](~~147450~~)，从返回参数中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'nx3xxVvFdwvn6dim50PY03****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级包所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Le6d0****',
          ),
        ),
        3 => 
        array (
          'name' => 'TargetSelection',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级范围。

- **ALL**：全量升级。
- **SPECIFIC**：定向升级。
- **GRAY**：灰度升级。
- **GROUP**：分组升级',
            'type' => 'string',
            'required' => true,
            'example' => 'ALL',
          ),
        ),
        4 => 
        array (
          'name' => 'ScheduleTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定发起OTA升级的时间。

定时时间范围需为当前时间的5分钟后至7天内。取值为13位毫秒值时间戳。

不传入该参数，则表示立即升级。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1577808000000',
          ),
        ),
        5 => 
        array (
          'name' => 'RetryInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备升级失败后，自动重试的时间间隔，单位为分钟。可选值：

- **0**：立即重试。
- **10**：10分钟后重试。
- **30**：30分钟后重试。
- **60**：60分钟（即1小时）后重试。
- **1440**：1,440分钟（即24小时）后重试。

><notice> **RetryInterval**的值需要小于**TimeoutInMinutes**的值。例如：
- **TimeoutInMinutes**的值为60分钟，**RetryInterval**的值最大可设置为30。
- **TimeoutInMinutes**的值为1440分钟，**RetryInterval**的值最大可设置为60。

若**RetryInterval**需设置为24小时后重试，则建议不传入**TimeoutInMinutes**。因升级超时后，不会再触发升级重试。
></notice>

不传入此参数，则表示不重试。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
        6 => 
        array (
          'name' => 'RetryCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自动重试次数。

如果传入**RetryInterval**参数，则需传入该参数。

可选值：

- **1**：1次。
- **2**：2次。
- **5**：5次。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'TimeoutInMinutes',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备升级超时时间，超过指定时间后，设备未完成升级，则升级失败。单位为分钟，取值范围为1~1,440。

> - 从设备首次上报进度开始计算时间。升级期间若设备多次上下线，触发物联网平台多次推送升级包，都始终以设备最开始的第一次上报升级进度时间作为开始时间。
- 因超时而导致的升级失败，物联网平台不会触发自动重试逻辑。




不传入该参数，则表示设备升级没有超时限制。


',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1440',
          ),
        ),
        8 => 
        array (
          'name' => 'MaximumPerMinute',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每分钟最多向多少个设备推送升级包下载URL。取值范围：10~10,000。

不传入该参数，则取默认值10,000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1000',
          ),
        ),
        9 => 
        array (
          'name' => 'GrayPercent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置灰度比例。取值为字符串格式的百分比，小数点后最多3位小数，系统计算结果向下取整。灰度升级的设备至少为1个。

例如有100个待升级设备，设置灰度升级的灰度比例为33.33，则系统计算结果为33。

升级范围指定为灰度升级（`TargetSelection=GRAY`）时，需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => '33.33',
          ),
        ),
        10 => 
        array (
          'name' => 'ScheduleFinishTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定结束升级的时间。

结束时间距发起时间（**ScheduleTime**）最少1小时，最多为30天。取值为13位毫秒值时间戳。

不传入该参数，则表示不会强制结束升级。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1577909000000',
          ),
        ),
        11 => 
        array (
          'name' => 'OverwriteMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否覆盖之前的升级任务。取值：
- **1**（默认）：不覆盖。若设备已有升级任务，则只执行已有任务。
- **2**：覆盖。设备只执行新的升级任务。此时**MultiModuleMode**不能传入**true**。


> 不覆盖升级中的任务。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        12 => 
        array (
          'name' => 'DnListFileUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '定向升级设备列表文件的URL。
> - 发起定向升级（`TargetSelection=SPECIFIC`）任务时，需传入该参数或**TargetDeviceName.N**，不可同时传入。
- 请调用[GenerateDeviceNameListURL](~~186062~~)生成文件URL，并按说明上传设备列表文件。
-  整包升级时，会过滤列表中已经升级成功的设备。
- 差分升级时，会过滤列表中已经升级成功，和初始版本号跟升级包不相符的设备。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://iotx-ota.oss-cn-shanghai.aliyuncs.com/ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.bin',
          ),
        ),
        13 => 
        array (
          'name' => 'NeedPush',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物联网平台是否主动向设备推送升级任务。

- **true**（默认）：是。批次任务创建完成后，物联网平台主动将升级任务，直接推送给升级范围内的在线设备。
    
    此时，设备仍可主动向物联网平台发起请求，来获取OTA升级任务信息。

- **false**：否。设备必须通过向物联网平台发起请求，来获取OTA升级任务信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        14 => 
        array (
          'name' => 'NeedConfirm',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '如需自主控制设备OTA升级时，可配置此参数，通过手机App来控制，设备是否可进行OTA升级。手机App需您自行开发。


- **false**（默认）：否。直接按照**NeedPush**设置，获取OTA升级任务信息。
- **true**：是。设备无法获取OTA升级任务，需App侧确认OTA升级后，才能按照**NeedPush**设置，获取OTA升级任务信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        15 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID。

仅当发起分组升级（`TargetSelection=GROUP`）任务时，需传入该参数和**GroupType**。


您可调用[QueryDeviceGroupList](~~93356~~)接口查询分组ID（**GroupId**）。',
            'type' => 'string',
            'required' => false,
            'example' => 'CtjzCkNuOx***',
          ),
        ),
        16 => 
        array (
          'name' => 'GroupType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组类型，仅可取值**LINK_PLATFORM**。

仅当发起分组升级（`TargetSelection=GROUP`）任务时，需传入该参数和**GroupId**。',
            'type' => 'string',
            'required' => false,
            'example' => 'LINK_PLATFORM',
          ),
        ),
        17 => 
        array (
          'name' => 'DownloadProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级包下载协议，可选：**HTTPS**（默认）或**MQTT**。设备端收到物联网平台推送的升级包下载信息后，通过该协议下载升级包。

><notice>使用MQTT协议下载升级包，必须符合以下条件：
- 支持的地域：仅中国的华东2（上海）、华北2（北京）和华南1（深圳）。
- OTA升级包：仅包含一个文件，且文件大小不超过16 MB。
- 设备端SDK：必须使用物联网平台提供的C语言Link SDK最新版本的软件包，开发OTA升级和MQTT下载文件的能力。详细内容，请参见[使用MQTT协议下载升级包的OTA升级代码示例](~~330985~~)。

></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'HTTPS',
          ),
        ),
        18 => 
        array (
          'name' => 'MultiModuleMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备是否支持多模块同时升级。

- **false**（默认）：否，设备不支持多模块同时升级。
- **true**：是，设备支持多模块同时升级。此时**OverwriteMode**不能传入**2**。相同模块下的升级任务会被覆盖，但不覆盖升级中的任务。

><notice>
- 支持的实例：企业版实例和新版公共实例。
- 设备端SDK：必须使用物联网平台提供的设备端C语言4.x版本的Link SDK。

></notice>

更多信息，请参见[设备支持多模块同时升级说明表](~~58328~~)。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        19 => 
        array (
          'name' => 'SrcVersion',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待升级版本号列表。

>-  发起全量升级（`TargetSelection=ALL`）和灰度升级（`TargetSelection=GRAY`）任务时，可以传入该参数。
- 使用差分升级包发起全量升级和灰度升级任务时，该参数值需指定为差分升级包的待升级版本号（**SrcVersion**）。
- 发起定向升级（`TargetSelection=SPECIFIC`）或分组升级（`TargetSelection=GROUP`）任务时，不能传入该参数。
- 可以调用[QueryDeviceDetail](~~69594~~)，查看设备OTA模块版本号（**FirmwareVersion**）。
- 列表中不能有重复的版本号。
- 最多可传入10个版本号。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'example' => 'V1.0.1',
            'maxItems' => 20,
          ),
        ),
        20 => 
        array (
          'name' => 'TargetDeviceName',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '定向升级的设备名称列表。

> - 发起定向升级（`TargetSelection=SPECIFIC`）任务时，需传入该参数或**DnListFileUrl**，不可同时传入。
- 使用差分升级包进行定向升级时，要升级的设备的当前OTA模块版本号需与差分升级包的待升级版本号（**SrcVersion**）相同。
- 可以调用[QueryDeviceDetail](~~69594~~)，查看设备OTA模块版本号（**FirmwareVersion**）。
- 列表中的设备所属的产品必须与升级包所属产品一致。
- 列表中不能有重复的设备名称。
- 最多可传入200个设备名称。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'example' => 'deviceName1',
            'maxItems' => 200,
          ),
        ),
        21 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '批次标签key。仅支持英文字母、数字、半角句号（.），长度限制为1~30个字符。支持最多添加10个批次标签。

批次标签将在向设备推送升级通知时下发给设备。

> 批次标签可以不传入。**是否必选**的**是**，表示如果传入批次标签Tag，**Tag.N.Value**与**Tag.N.Key**必须成对传入。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'key1',
                ),
                'Value' => 
                array (
                  'description' => '批次标签value。长度限制为1~1024个字符。支持最多添加10个批次标签。所有批次标签key和vlaue的长度总和，不能超过4096个字符。


> 批次标签可以不传入。**是否必选**的**是**，表示如果传入批次标签Tag，**Tag.N.Value**与**Tag.N.Key**必须成对传入。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'value1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'MissingFirmwareId',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'FirmwareId is mandatory for this action.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '29EC7245-0FA4-4BB6-B4F5-5F04818FDFB1',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的升级批次信息。更多信息，请参见Data下参数说明。',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '升级批次ID，升级批次的唯一标识符。',
                    'type' => 'string',
                    'example' => 'wahVIzGkCMuAUE2gDERM02****',
                  ),
                  'UtcCreate' => 
                  array (
                    'description' => '升级批次的创建时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2019-11-04T06:22:19.566Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"MissingFirmwareId\\",\\n  \\"ErrorMessage\\": \\"FirmwareId is mandatory for this action.\\",\\n  \\"RequestId\\": \\"29EC7245-0FA4-4BB6-B4F5-5F04818FDFB1\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"JobId\\": \\"wahVIzGkCMuAUE2gDERM02****\\",\\n    \\"UtcCreate\\": \\"2019-11-04T06:22:19.566Z\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\r\\n<CreateOTAStaticUpgradeJobResponse>\\r\\n <Data>\\r\\n   <JobId>wahVIzGkCMuAUE2gDERM02****</JobId>\\r\\n   <UtcCreate>2019-11-04T06:22:19.566Z</UtcCreate>\\r\\n </Data>\\r\\n <RequestId>29EC7245-0FA4-4BB6-B4F5-5F04818FDFB1</RequestId>\\r\\n <Success>true</Success>\\r\\n</CreateOTAStaticUpgradeJobResponse>","errorExample":""}]',
      'title' => 'CreateOTAStaticUpgradeJob',
      'summary' => '调用该接口创建静态升级批次。',
      'description' => '## 使用说明

- 若在调用[CreateOTAFirmware](~~147311~~)接口创建升级包时，未指定“升级包可不通过验证”，则调用本接口创建批量升级批次前，必须保证升级包已验证成功。关于如何创建验证升级包任务，请参见[CreateOTAVerifyJob](~~147480~~)。
- 单次调用，对于定向升级，若直接传入设备名称，则最多可对200个设备发起升级任务；若使用待升级设备列表文件，则最多可对10,000个设备发起升级任务，需提前调用[GenerateDeviceNameListURL](~~186062~~)生成文件URL，并按说明上传设备列表文件。
- 对多个设备发起升级任务时，如果某设备已经是目标版本，则过滤该设备，继续升级任务。
- 同一设备只能同时在一个升级批次中处于待升级或正在升级状态。对处于待升级或正在升级状态的设备发起新的升级任务，后发起的任务会直接失败。
- 可以对单个升级包，同时发起多个静态升级批次。
- 当前日本（东京）和美国（弗吉尼亚）地域下，不支持创建静态分组升级批次，即**TargetSelection**不支持传入**GROUP**。
- 当前仅中国的华东2（上海）、华北2（北京）和华南1（深圳）地域下，支持使用MQTT协议下载升级包。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateOTADynamicUpgradeJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'FirmwareId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级包ID，升级包的唯一标识符。

升级包ID是调用[CreateOTAFirmware](~~147311~~)创建升级包时，返回的参数之一。

可以调用[ListOTAFirmware](~~147450~~)，从返回参数中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'nx3xxVvFdwvn6dim50PY03****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级包所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Le6d0****',
          ),
        ),
        3 => 
        array (
          'name' => 'RetryInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备升级失败后，自动重试的时间间隔，单位为分钟。可选值：

- **0**：立即重试。
- **10**：10分钟后重试。
- **30**：30分钟后重试。
- **60**：60分钟（即1小时）后重试。
- **1440**：1,440分钟（即24小时）后重试。

><notice> **RetryInterval**的值需要小于**TimeoutInMinutes**的值。例如：
- **TimeoutInMinutes**的值为60分钟，**RetryInterval**的值最大可设置为30。
- **TimeoutInMinutes**的值为1440分钟，**RetryInterval**的值最大可设置为60。

若**RetryInterval**需设置为24小时后重试，则建议不传入**TimeoutInMinutes**。因升级超时后，不会再触发升级重试。
></notice>

不传入此参数，则表示不重试。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
        4 => 
        array (
          'name' => 'RetryCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自动重试次数。

如果传入**RetryInterval**参数，则需传入该参数。

可选值：

- **1**：1次。
- **2**：2次。
- **5**：5次。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'TimeoutInMinutes',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备升级超时时间，超过指定时间后，设备未完成升级，则升级失败。单位为分钟，取值范围为1~1,440。

> - 从设备首次上报进度开始计算时间。升级期间若设备多次上下线，触发物联网平台多次推送升级包，都始终以设备最开始的第一次上报升级进度时间作为开始时间。
- 因超时而导致的升级失败，物联网平台不会触发自动重试逻辑。




不传入该参数，则表示设备升级没有超时限制。


',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1440',
          ),
        ),
        6 => 
        array (
          'name' => 'MaximumPerMinute',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每分钟最多向多少个设备推升级包下载URL。取值范围：10~10,000。

不传入该参数，则取默认值10,000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1000',
          ),
        ),
        7 => 
        array (
          'name' => 'OverwriteMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否覆盖之前的升级任务。取值：

- **1**（默认）：不覆盖。若设备已有升级任务，则只执行已有任务。
- **2**：覆盖。设备只执行新的升级任务。此时**MultiModuleMode**不能传入**true**。

> 不覆盖升级中的任务。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        8 => 
        array (
          'name' => 'DynamicMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '动态升级模式。取值范围：

- **1**（默认）：除了升级当前满足升级条件的设备，还将持续检查设备是否满足升级条件，对满足升级条件的设备进行升级。

- **2**：仅对后续上报新版本号的设备生效。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'NeedPush',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物联网平台是否主动向设备推送升级任务。

- **true**（默认）：是。批次任务创建完成后，物联网平台主动将升级任务，直接推送给升级范围内的在线设备。
    
    此时，设备仍可主动向物联网平台发起请求，来获取OTA升级任务信息。

- **false**：否。设备必须通过向物联网平台发起请求，来获取OTA升级任务信息。


',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        10 => 
        array (
          'name' => 'NeedConfirm',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '如需自主控制设备OTA升级时，可配置此参数，通过手机App来控制，设备是否可进行OTA升级。手机App需您自行开发。


- **false**（默认）：否。直接按照**NeedPush**设置，获取OTA升级任务信息。
- **true**：是。设备无法获取OTA升级任务，需App侧确认OTA升级后，才能按照**NeedPush**设置，获取OTA升级任务信息。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        11 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID。

- 如果传入该参数，则必须同时传入**GroupType**，且不能传入**SrcVersion.N**。
- 如果不传入该参数，则无需传入**GroupType**，且必须传入**SrcVersion.N**。

您可调用[QueryDeviceGroupList](~~93356~~)接口查询分组ID（**GroupId**）。',
            'type' => 'string',
            'required' => false,
            'example' => 'IwOwQj7DJ***',
          ),
        ),
        12 => 
        array (
          'name' => 'GroupType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组类型，仅可取值**LINK_PLATFORM_DYNAMIC**（动态分组）。

- 如果传入该参数，则必须同时传入**GroupId**，且不能传入**SrcVersion.N**。
- 如果不传入该参数，则无需传入**GroupId**，且必须传入**SrcVersion.N**。',
            'type' => 'string',
            'required' => false,
            'example' => 'LINK_PLATFORM_DYNAMIC',
          ),
        ),
        13 => 
        array (
          'name' => 'DownloadProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级包下载协议，可选：**HTTPS**（默认）或**MQTT**。设备端收到物联网平台推送的升级包下载信息后，通过该协议下载升级包。

><notice>使用MQTT协议下载升级包，必须符合以下条件：
- 支持的地域：仅中国的华东2（上海）、华北2（北京）和华南1（深圳）。
- OTA升级包：仅包含一个文件，且文件大小不超过16 MB。
- 设备端SDK：必须使用物联网平台提供的C语言Link SDK最新版本的软件包，开发OTA升级和MQTT下载文件的能力。详细内容，请参见[使用MQTT协议下载升级包的OTA升级代码示例](~~330985~~)。

></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'HTTPS',
          ),
        ),
        14 => 
        array (
          'name' => 'MultiModuleMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备是否支持多模块同时升级。

- **false**（默认）：否，设备不支持多模块同时升级。
- **true**：是，设备支持多模块同时升级。此时**OverwriteMode**不能传入**2**。相同模块下的升级任务会被覆盖，但不覆盖升级中的任务。

><notice>
- 支持的实例：企业版实例和新版公共实例。
- 设备端SDK：必须使用物联网平台提供的设备端C语言4.x版本的Link SDK。
- 发起基于分组的动态升级批次：**MultiModuleMode**和**OverwriteMode**的设置，必须与分组对应的存量动态升级批次中的设置保持一致。

></notice>

更多信息，请参见[设备支持多模块同时升级说明表](~~58328~~)。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        15 => 
        array (
          'name' => 'SrcVersion',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待升级版本号列表。

- 如果传入该参数，则不能传入**GroupId**和**GroupType**。
- 如果不传入该参数，则必须传入**GroupId**和**GroupType**。

> - 基于版本对差分升级包发起动态升级任务时，该参数值必须与差分升级包的待升级版本号（**SrcVersion**）相同。
基于动态分组对差分升级包发起动态升级任务时，无需传入该参数。
- 可以调用[QueryDeviceDetail](~~69594~~)，查看设备OTA模块版本号**FirmwareVersion**。
- 列表中不能有重复的版本号。
- 最多可传入10个版本号。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'example' => 'V1.0.1',
            'maxItems' => 50,
          ),
        ),
        16 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '批次标签key。仅支持英文字母、数字、半角句号（.），长度限制为1~30个字符。支持最多添加10个批次标签。

批次标签将在向设备推送升级通知时下发给设备。

> 批次标签可以不传入。**是否必选**的**是**，表示如果传入批次标签Tag，**Tag.N.Value**与**Tag.N.Key**必须成对传入。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'key1',
                ),
                'Value' => 
                array (
                  'description' => '批次标签value。长度限制为1~1024个字符。支持最多添加10个批次标签。所有批次标签key和vlaue的长度总和，不能超过4096个字符。


> 批次标签可以不传入。**是否必选**的**是**，表示如果传入批次标签Tag，**Tag.N.Value**与**Tag.N.Key**必须成对传入。
',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'value1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '9F41D14E-CB5F-4CCE-939C-057F39E688F5',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的升级批次信息。详情见以下Data包含的参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'JobId' => 
                  array (
                    'description' => '升级批次ID，升级批次的唯一标识符。',
                    'type' => 'string',
                    'example' => 'XUbmsMHmkqv0PiAG****010001',
                  ),
                  'UtcCreate' => 
                  array (
                    'description' => '升级批次的创建时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2019-05-10T02:18:53.000Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"9F41D14E-CB5F-4CCE-939C-057F39E688F5\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"JobId\\": \\"XUbmsMHmkqv0PiAG****010001\\",\\n    \\"UtcCreate\\": \\"2019-05-10T02:18:53.000Z\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\r\\n<CreateOTADynamicUpgradeJobResponse>\\r\\n <Data>\\r\\n   <JobId>wahVIzGkCMuAUE2gDERM02****</JobId>\\r\\n   <UtcCreate>2019-11-04T06:22:19.566Z</UtcCreate>\\r\\n </Data>\\r\\n <RequestId>29EC7245-0FA4-4BB6-B4F5-5F04818FDFB1</RequestId>\\r\\n <Success>true</Success>\\r\\n</CreateOTADynamicUpgradeJobResponse>","errorExample":""}]',
      'title' => 'CreateOTADynamicUpgradeJob',
      'summary' => '调用该接口创建动态升级批次。',
      'description' => '## 使用说明

- 若未在调用[CreateOTAFirmware](~~147311~~)创建升级包时指定升级包无需验证，则调用本接口创建批量升级批次前，必须保证升级包已验证成功。创建验证升级包任务，请参见[CreateOTAVerifyJob](~~147480~~)。
- 同一设备只能同时在一个升级批次中处于待升级或正在升级状态。对处于待升级或正在升级状态的设备发起新的升级任务，后发起的任务会直接失败。
- 同一升级包下，只能有一个状态为执行中的动态升级批次。
- 如果同一个设备处于不同升级包的动态升级策略中，则设备执行最新发起的动态升级。
- 创建动态升级批次后，系统将自动创建对应的动态升级策略。可以调用[CancelOTAStrategyByJob](~~147905~~)取消动态升级策略。
- 目前仅华东2（上海）地域下，企业版实例和新版公共实例，支持创建动态分组的动态升级批次。<props="china"><ph>实例详细说明，请参见[实例管理](~~147356~~)。</ph></props>
- 目前仅中国的华东2（上海）、华北2（北京）和华南1（深圳）地域下，支持使用MQTT协议下载升级包。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListOTAJobByFirmware' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'FirmwareId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级包ID，升级包的唯一标识符。

升级包ID是调用[CreateOTAFirmware](~~147311~~)创建升级包时，返回的参数之一。

可以调用[ListOTAFirmware](~~147450~~)，从返回参数中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'FJFx8JzpnhpIsKftRjjm03****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中，每页显示的升级批次数量。最大值200。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。页数从1开始排序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CurrentPage' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '5D58AC86-D5BF-4B39-834E-913E7F2C985D',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的设备升级作业数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => '设备升级作业数量总计。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SimpleOTAJobInfo' => 
                  array (
                    'description' => '调用成功时，返回的批次信息。详情请参见**SimpleOTAJobInfo**下的参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ProductKey' => 
                        array (
                          'description' => '升级包所属产品的唯一标识。',
                          'type' => 'string',
                          'example' => 'a19mzPZ****',
                        ),
                        'JobStatus' => 
                        array (
                          'description' => '批次的状态。

- **PLANNED**：计划中。批次已创建，但是定时时间未到。仅定时静态升级的批次可能返回该值。
- **IN_PROGRESS**：执行中。
- **COMPLETED**：已完成。
- **CANCELED**：已取消。',
                          'type' => 'string',
                          'example' => 'IN_PROGRESS',
                        ),
                        'UtcStartTime' => 
                        array (
                          'description' => '该批次任务开始执行时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-12-28T02:43:10.000Z',
                        ),
                        'UtcModified' => 
                        array (
                          'description' => '批次最后一次修改时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-12-28T02:43:10.000Z',
                        ),
                        'JobId' => 
                        array (
                          'description' => '升级批次ID，批次的唯一标识符。',
                          'type' => 'string',
                          'example' => 'HvKuBpuk3rdk6E92CP****0200',
                        ),
                        'UtcCreate' => 
                        array (
                          'description' => '批次创建时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-12-28T02:43:10.000Z',
                        ),
                        'SelectionType' => 
                        array (
                          'description' => '升级策略。

- **DYNAMIC**：动态升级。调用[CreateOTADynamicUpgradeJob](~~147887~~)创建的升级批次，该参数返回该值。
- **STATIC**：静态升级。调用[CreateOTAStaticUpgradeJob](~~147496~~)创建的升级批次，该参数返回该值。',
                          'type' => 'string',
                          'example' => 'STATIC',
                        ),
                        'JobType' => 
                        array (
                          'description' => '批次类型。

- **VERIFY_FIRMWARE**：升级包验证批次。
- **UPGRADE_FIRMWARE**：批量升级批次。',
                          'type' => 'string',
                          'example' => 'UPGRADE_FIRMWARE',
                        ),
                        'TargetSelection' => 
                        array (
                          'description' => '升级范围。

- **ALL**：全量升级。
- **SPECIFIC**：定向升级。
- **GRAY**：灰度升级。

> 调用[CreateOTADynamicUpgradeJob](~~147887~~)创建的动态升级批次，该参数仅返回ALL。',
                          'type' => 'string',
                          'example' => 'SPECIFIC',
                        ),
                        'UtcEndTime' => 
                        array (
                          'description' => '该批次任务执行结束时的时间，UTC格式。

仅已执行结束的升级批次才返回此参数。',
                          'type' => 'string',
                          'example' => '2019-12-29T02:43:10.000Z',
                        ),
                        'FirmwareId' => 
                        array (
                          'description' => '升级包ID。',
                          'type' => 'string',
                          'example' => 'UfuxnwygsuSkVE0VCN****0100',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OtaTagDTO' => 
                            array (
                              'description' => '升级批次标签。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签名。',
                                    'type' => 'string',
                                    'example' => 'key1',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'value1',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CurrentPage\\": 1,\\n  \\"RequestId\\": \\"5D58AC86-D5BF-4B39-834E-913E7F2C985D\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"PageCount\\": 1,\\n  \\"Total\\": 1,\\n  \\"Data\\": {\\n    \\"SimpleOTAJobInfo\\": [\\n      {\\n        \\"ProductKey\\": \\"a19mzPZ****\\",\\n        \\"JobStatus\\": \\"IN_PROGRESS\\",\\n        \\"UtcStartTime\\": \\"2019-12-28T02:43:10.000Z\\",\\n        \\"UtcModified\\": \\"2019-12-28T02:43:10.000Z\\",\\n        \\"JobId\\": \\"HvKuBpuk3rdk6E92CP****0200\\",\\n        \\"UtcCreate\\": \\"2019-12-28T02:43:10.000Z\\",\\n        \\"SelectionType\\": \\"STATIC\\",\\n        \\"JobType\\": \\"UPGRADE_FIRMWARE\\",\\n        \\"TargetSelection\\": \\"SPECIFIC\\",\\n        \\"UtcEndTime\\": \\"2019-12-29T02:43:10.000Z\\",\\n        \\"FirmwareId\\": \\"UfuxnwygsuSkVE0VCN****0100\\",\\n        \\"Tags\\": {\\n          \\"OtaTagDTO\\": [\\n            {\\n              \\"Key\\": \\"key1\\",\\n              \\"Value\\": \\"value1\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\r\\n<ListOTAJobByFirmwareResponse>\\r\\n  <PageCount>1</PageCount>\\r\\n  <Data>\\r\\n    <SimpleOTAJobInfo>\\r\\n      <SelectionType>STATIC</SelectionType>\\r\\n      <TargetSelection>SPECIFIC</TargetSelection>\\r\\n      <JobType>UPGRADE_FIRMWARE</JobType>\\r\\n      <FirmwareId>yLYuCqfqQNQ1JOqkDa****0100</FirmwareId>\\r\\n      <UtcStartTime>2019-12-28T02:43:10.000Z</UtcStartTime>\\r\\n      <UtcEndTime>2019-12-29T02:43:10.000Z</UtcEndTime>\\r\\n      <ProductKey>a19mzPZ****</ProductKey>\\r\\n      <JobId>HvKuBpuk3rdk6E92CP****0200</JobId>\\r\\n      <UtcModified>2019-12-28T02:43:10.000Z</UtcModified>\\r\\n      <JobStatus>IN_PROGRESS</JobStatus>\\r\\n      <UtcCreate>2019-12-28T02:43:10.000Z</UtcCreate>\\r\\n    </SimpleOTAJobInfo>\\r\\n  </Data>\\r\\n  <PageSize>10</PageSize>\\r\\n  <RequestId>5D58AC86-D5BF-4B39-834E-913E7F2C985D</RequestId>\\r\\n  <CurrentPage>1</CurrentPage>\\r\\n  <Success>true</Success>\\r\\n  <Total>1</Total>\\r\\n</ListOTAJobByFirmwareResponse>","errorExample":""}]',
      'title' => '获取升级包下的升级任务批次列表',
      'summary' => '调用该接口获取升级包下的升级任务批次列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListOTAJobByDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'FirmwareId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级包ID。升级包的唯一标识符。

升级包ID是调用[CreateOTAFirmware](~~147311~~)创建升级包时，返回的参数之一。可以调用[ListOTAFirmware](~~147450~~)，从返回参数中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'FJFx8JzpnhpIsKftRjjm03****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的升级包数量。最大限制为100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属产品的ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a19mzPZ****',
          ),
        ),
        4 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'light1',
          ),
        ),
        5 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '显示返回结果的第几页。返回结果页数从1开始排序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CurrentPage' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'A01829CE-75A1-4920-B775-921146A1AB79',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'FirmwareId is mandatory for this action',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'MissingFirmwareId',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的升级包数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => '升级包数量总计。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SimpleOTAJobInfo' => 
                  array (
                    'description' => '调用成功时，返回的升级批次信息。详情请参见以下**SimpleOTAJobInfo**。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ProductKey' => 
                        array (
                          'description' => '升级包所属产品的唯一标识。',
                          'type' => 'string',
                          'example' => 'a19mzPZ****',
                        ),
                        'JobStatus' => 
                        array (
                          'description' => '升级任务批次的状态。

- **IN_PROGRESS**：执行中。

- **COMPLETED**：已完成。

- **CANCELED**：已取消。',
                          'type' => 'string',
                          'example' => 'COMPLETED',
                        ),
                        'UtcStartTime' => 
                        array (
                          'description' => '该批次任务开始执行时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-12-29T02:43:10.000Z',
                        ),
                        'UtcModified' => 
                        array (
                          'description' => '批次最后一次修改时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-12-29T02:43:10.000Z',
                        ),
                        'JobId' => 
                        array (
                          'description' => '升级任务批次ID。',
                          'type' => 'string',
                          'example' => 'HvKuBpuk3rdk6E92CP****',
                        ),
                        'UtcCreate' => 
                        array (
                          'description' => '批次创建时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-12-28T02:43:10.000Z',
                        ),
                        'SelectionType' => 
                        array (
                          'description' => '升级策略。

- DYNAMIC：动态升级。调用[CreateOTADynamicUpgradeJob](~~147887~~)创建的升级批次，该参数返回该值。

- STATIC：静态升级。调用[CreateOTAStaticUpgradeJob](~~147496~~)创建的升级批次，该参数返回该值。',
                          'type' => 'string',
                          'example' => 'STATIC',
                        ),
                        'JobType' => 
                        array (
                          'description' => '批次类型。

- **VERIFY_FIRMWARE**：升级包验证批次。

- **UPGRADE_FIRMWARE**：批量升级批次。',
                          'type' => 'string',
                          'example' => 'UPGRADE_FIRMWARE',
                        ),
                        'TargetSelection' => 
                        array (
                          'description' => '升级范围。

- **ALL**：全量升级。

- **SPECIFIC**：定向升级。

- **GRAY**：灰度升级。

> 调用[CreateOTADynamicUpgradeJob](~~147887~~)创建的动态升级批次，该参数仅返回ALL。',
                          'type' => 'string',
                          'example' => 'ALL',
                        ),
                        'UtcEndTime' => 
                        array (
                          'description' => '该批次任务执行结束时的时间，UTC格式。

> 仅已执行结束的升级批次才返回此参数。',
                          'type' => 'string',
                          'example' => '2019-12-29T02:43:10.000Z',
                        ),
                        'FirmwareId' => 
                        array (
                          'description' => '升级包ID。',
                          'type' => 'string',
                          'example' => 'FJFx8JzpnhpIsKftRjjm03****',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OtaTagDTO' => 
                            array (
                              'description' => '升级批次标签。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签名。',
                                    'type' => 'string',
                                    'example' => 'key1',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'value1',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CurrentPage\\": 1,\\n  \\"RequestId\\": \\"A01829CE-75A1-4920-B775-921146A1AB79\\",\\n  \\"ErrorMessage\\": \\"FirmwareId is mandatory for this action\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"MissingFirmwareId\\",\\n  \\"PageSize\\": 10,\\n  \\"PageCount\\": 1,\\n  \\"Total\\": 1,\\n  \\"Data\\": {\\n    \\"SimpleOTAJobInfo\\": [\\n      {\\n        \\"ProductKey\\": \\"a19mzPZ****\\",\\n        \\"JobStatus\\": \\"COMPLETED\\",\\n        \\"UtcStartTime\\": \\"2019-12-29T02:43:10.000Z\\",\\n        \\"UtcModified\\": \\"2019-12-29T02:43:10.000Z\\",\\n        \\"JobId\\": \\"HvKuBpuk3rdk6E92CP****\\",\\n        \\"UtcCreate\\": \\"2019-12-28T02:43:10.000Z\\",\\n        \\"SelectionType\\": \\"STATIC\\",\\n        \\"JobType\\": \\"UPGRADE_FIRMWARE\\",\\n        \\"TargetSelection\\": \\"ALL\\",\\n        \\"UtcEndTime\\": \\"2019-12-29T02:43:10.000Z\\",\\n        \\"FirmwareId\\": \\"FJFx8JzpnhpIsKftRjjm03****\\",\\n        \\"Tags\\": {\\n          \\"OtaTagDTO\\": [\\n            {\\n              \\"Key\\": \\"key1\\",\\n              \\"Value\\": \\"value1\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\n<ListOTAJobByDeviceResponse>\\n<PageCount>1</PageCount>\\n<Data>\\n    <SimpleOTAJobInfo>\\n        <SelectionType>STATIC</SelectionType>\\n        <TargetSelection>SPECIFIC</TargetSelection>\\n        <JobType>UPGRADE_FIRMWARE</JobType>\\n        <FirmwareId>FJFx8JzpnhpIsKftRjjm03****</FirmwareId>\\n        <UtcStartTime>2019-12-28T02:43:10.000Z</UtcStartTime>\\n        <ProductKey>a19mzPZ****</ProductKey>\\n        <JobId>HvKuBpuk3rdk6E92CPQN02****</JobId>\\n        <UtcModified>2019-12-28T02:43:10.000Z</UtcModified>\\n        <JobStatus>IN_PROGRESS</JobStatus>\\n        <UtcCreate>2019-12-28T02:43:10.000Z</UtcCreate>\\n    </SimpleOTAJobInfo>\\n</Data>\\n<PageSize>10</PageSize>\\n<RequestId>5D58AC86-D5BF-4B39-834E-913E7F2C985D</RequestId>\\n<CurrentPage>1</CurrentPage>\\n<Success>true</Success>\\n<Total>1</Total>\\n</ListOTAJobByDeviceResponse>","errorExample":""}]',
      'title' => '获取设备所在的升级包升级批次列表',
      'summary' => '调用该接口获取设备所在的升级包升级批次列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListOTATaskByJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中，每页显示的设备升级作业数量。最大限制：100。

><notice>**CurrentPage**与**PageSize**相乘的值必须小于或等于100,000。
></notice>',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'TaskStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '传入此参数，则查询指定升级状态下的设备升级作业。

- **CONFIRM**：待确认。
- **QUEUED**：待推送。
- **NOTIFIED**：已推送。
- **IN_PROGRESS**：升级中。
- **SUCCEEDED**：升级成功。
- **FAILED**：升级失败。
- **CANCELED**：已取消。

不传入此参数，则查询指定升级批次下的全部设备升级作业。',
            'type' => 'string',
            'required' => false,
            'example' => 'FAILED',
          ),
        ),
        3 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级批次ID，升级批次的唯一标识符。您调用[CreateOTAVerifyJob](~~147480~~)、[CreateOTAStaticUpgradeJob](~~147496~~)或[CreateOTADynamicUpgradeJob](~~147887~~)返回的**JobId**。您也可以在物联网平台控制台上OTA升级包的**升级包详情**页查看。',
            'type' => 'string',
            'required' => true,
            'example' => '7glPHmaDYLAYMD1HHutT02****',
          ),
        ),
        4 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。页数从1开始排序。

><notice>**CurrentPage**与**PageSize**相乘的值必须小于或等于100,000。
></notice>',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'DeviceNames',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '指定查询的设备名称列表。

> - 最多传入设备名称50个。
-  如果传入该参数，则无需传入**PageSize**和**CurrentPage**。如果您同时传入**DeviceNames.N**、**PageSize**和**CurrentPage**，则以**DeviceNames.N**为准。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'device1',
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CurrentPage' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'A59D3BE1-E9A3-43F3-9B50-B7C8DE165D9B',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的设备升级作业数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => '设备升级作业数量总计。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SimpleOTATaskInfo' => 
                  array (
                    'description' => '调用成功时，返回的设备升级作业信息。更多信息，请参见**SimpleOTATaskInfo**下的参数。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Timeout' => 
                        array (
                          'description' => '设备升级超时时间，单位是分钟。

> 如果发起批量升级未设置超时时间，该参数返回值为空。',
                          'type' => 'string',
                          'example' => '1440',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '设备所属产品的名称。',
                          'type' => 'string',
                          'example' => 'MyProduct',
                        ),
                        'Progress' => 
                        array (
                          'description' => '当前的升级进度。',
                          'type' => 'string',
                          'example' => '0.00',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'testDevice2',
                        ),
                        'UtcCreate' => 
                        array (
                          'description' => '升级作业创建时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-11-04T03:38:22.000Z',
                        ),
                        'ProductKey' => 
                        array (
                          'description' => '设备所属产品的ProductKey。',
                          'type' => 'string',
                          'example' => 'a1GUfrM****',
                        ),
                        'TaskStatus' => 
                        array (
                          'description' => '设备升级状态。

- **CONFIRM**：待确认。
- **QUEUED**：待推送。
- **NOTIFIED**：已推送。
- **IN_PROGRESS**：升级中。
- **SUCCEEDED**：升级成功。
- **FAILED**：升级失败。
- **CANCELED**：已取消。',
                          'type' => 'string',
                          'example' => 'FAILED',
                        ),
                        'UtcModified' => 
                        array (
                          'description' => '升级作业最后一次修改时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-11-04T03:38:22.000Z',
                        ),
                        'JobId' => 
                        array (
                          'description' => '升级批次ID。',
                          'type' => 'string',
                          'example' => '7glPHmaDYLAYMD1HHutT02****',
                        ),
                        'SrcVersion' => 
                        array (
                          'description' => '设备的原固件版本。',
                          'type' => 'string',
                          'example' => '1.0.0',
                        ),
                        'TaskDesc' => 
                        array (
                          'description' => '升级作业描述信息。当设备升级超时、升级作业被取消等场景下，该参数承载具体的错误信息。',
                          'type' => 'string',
                          'example' => 'report version is not conform',
                        ),
                        'TaskId' => 
                        array (
                          'description' => '设备升级作业ID。',
                          'type' => 'string',
                          'example' => 'y3tOmCDNgpR8F9jnVEzC01****',
                        ),
                        'DestVersion' => 
                        array (
                          'description' => '升级的目标OTA升级包版本。',
                          'type' => 'string',
                          'example' => '1.0.1',
                        ),
                        'FirmwareId' => 
                        array (
                          'description' => '升级包ID。',
                          'type' => 'string',
                          'example' => 'q3j9OYBjUAZMv1hlMgdo03****',
                        ),
                        'IotId' => 
                        array (
                          'description' => '设备ID。',
                          'type' => 'string',
                          'example' => 'nadRdeffljdEndlfadgadfse****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CurrentPage\\": 1,\\n  \\"RequestId\\": \\"A59D3BE1-E9A3-43F3-9B50-B7C8DE165D9B\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"PageCount\\": 1,\\n  \\"Total\\": 2,\\n  \\"Data\\": {\\n    \\"SimpleOTATaskInfo\\": [\\n      {\\n        \\"Timeout\\": \\"1440\\",\\n        \\"ProductName\\": \\"MyProduct\\",\\n        \\"Progress\\": \\"0.00\\",\\n        \\"DeviceName\\": \\"testDevice2\\",\\n        \\"UtcCreate\\": \\"2019-11-04T03:38:22.000Z\\",\\n        \\"ProductKey\\": \\"a1GUfrM****\\",\\n        \\"TaskStatus\\": \\"FAILED\\",\\n        \\"UtcModified\\": \\"2019-11-04T03:38:22.000Z\\",\\n        \\"JobId\\": \\"7glPHmaDYLAYMD1HHutT02****\\",\\n        \\"SrcVersion\\": \\"1.0.0\\",\\n        \\"TaskDesc\\": \\"report version is not conform\\",\\n        \\"TaskId\\": \\"y3tOmCDNgpR8F9jnVEzC01****\\",\\n        \\"DestVersion\\": \\"1.0.1\\",\\n        \\"FirmwareId\\": \\"q3j9OYBjUAZMv1hlMgdo03****\\",\\n        \\"IotId\\": \\"nadRdeffljdEndlfadgadfse****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListOTATaskByJobResponse>\\n<PageCount>1</PageCount>\\n<Data>\\n    <SimpleOTATaskInfo>\\n        <SrcVersion>1.0.0</SrcVersion>\\n        <DeviceName>testDevice1</DeviceName>\\n        <FirmwareId>q3j9OYBjUAZMv1hlMgdo03****</FirmwareId>\\n        <IotId>SR8FiTu1R9tlUR2V1bmi00105****</IotId>\\n        <ProductKey>a1GUfrM****</ProductKey>\\n        <JobId>7glPHmaDYLAYMD1HHutT02****</JobId>\\n        <TaskDesc>report version is not conform</TaskDesc>\\n        <DestVersion>1.0.1</DestVersion>\\n        <Timeout>1440</Timeout>\\n        <UtcCreate>2019-11-04T03:38:15.000Z</UtcCreate>\\n        <UtcModified>2019-11-04T03:38:15.000Z</UtcModified>\\n        <TaskStatus>FAILED</TaskStatus>\\n        <ProductName>MyProduct</ProductName>\\n        <TaskId>y3tOmCDNgpR8F9jnVEzC01****</TaskId>\\n        <Progress>0.00</Progress>\\n    </SimpleOTATaskInfo>\\n    <SimpleOTATaskInfo>\\n        <SrcVersion>1.0.0</SrcVersion>\\n        <DeviceName>testDevice2</DeviceName>\\n        <FirmwareId>q3j9OYBjUAZMv1hlMgdo03****</FirmwareId>\\n        <IotId>nadRdeffljdEndlfadgadfse****</IotId>\\n        <ProductKey>a1GUfrM****</ProductKey>\\n        <JobId>7glPHmaDYLAYMD1HHutT02****</JobId>\\n        <TaskDesc/>\\n        <DestVersion>1.0.1</DestVersion>\\n        <Timeout>1000</Timeout>\\n        <UtcCreate>2019-11-04T03:38:22.000Z</UtcCreate>\\n        <UtcModified>2019-11-04T03:38:22.000Z</UtcModified>\\n        <TaskStatus>SUCCEEDED</TaskStatus>\\n        <ProductName>MyProduct</ProductName>\\n        <TaskId>ZS9sNBb1ahsu6khqr9II01****</TaskId>\\n        <Progress>100.00</Progress>\\n    </SimpleOTATaskInfo>\\n</Data>\\n<PageSize>10</PageSize>\\n<RequestId>A59D3BE1-E9A3-43F3-9B50-B7C8DE165D9B</RequestId>\\n<CurrentPage>1</CurrentPage>\\n<Success>true</Success>\\n<Total>2</Total>\\n</ListOTATaskByJobResponse>","errorExample":""}]',
      'title' => '查询指定升级批次下的设备升级作业列表',
      'summary' => '调用该接口查询指定升级批次下的设备升级作业列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryOTAJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级批次ID。

您调用[CreateOTAVerifyJob](~~147480~~)、[CreateOTAStaticUpgradeJob](~~147496~~)或[CreateOTADynamicUpgradeJob](~~147887~~)创建升级任务批次后，返回的**JobId**。您也可以在物联网平台控制台的**升级包详情**页面查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'wahVIzGkCMuAUE2gDERM02****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '30F1BB8D-EDBF-44FD-BBC0-BE97DEA73991',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的升级批次信息。详情见以下Data所包含的参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'UtcCreate' => 
                  array (
                    'description' => '批次创建时的时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2019-12-28T02:43:10.000Z',
                  ),
                  'RetryInterval' => 
                  array (
                    'description' => '设备升级失败后，自动重试时间间隔，单位：分钟。

创建升级批次时，设置了失败重试策略，则返回该参数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '60',
                  ),
                  'JobType' => 
                  array (
                    'description' => '批次类型。

- **VERIFY_FIRMWARE**：升级包验证批次。
- **UPGRADE_FIRMWARE**：批量升级批次。',
                    'type' => 'string',
                    'example' => 'UPGRADE_FIRMWARE',
                  ),
                  'SelectionType' => 
                  array (
                    'description' => '升级策略。

- **DYNAMIC**：动态升级。调用[CreateOTADynamicUpgradeJob](~~147887~~)创建的升级批次，该参数返回该值。
- **STATIC**：静态升级。调用[CreateOTAStaticUpgradeJob](~~147496~~)创建的升级批次，该参数返回该值。',
                    'type' => 'string',
                    'example' => 'STATIC',
                  ),
                  'OverwriteMode' => 
                  array (
                    'description' => '是否覆盖之前的升级任务。取值：

- **1**：不覆盖。若设备已有升级任务，则只执行已有任务。
- **2**：覆盖。设备只执行新的升级任务。

不覆盖升级中的任务。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TargetSelection' => 
                  array (
                    'description' => '升级范围。

- **ALL**：全量升级。
- **SPECIFIC**：定向升级。
- **GRAY**：灰度升级。

> 调用[CreateOTADynamicUpgradeJob](~~147887~~)创建的动态升级批次，该参数仅返回ALL。',
                    'type' => 'string',
                    'example' => 'SPECIFIC',
                  ),
                  'TimeoutInMinutes' => 
                  array (
                    'description' => '设备升级超时时间，单位：分钟。

创建升级批次时，设置了超时时间，则返回该参数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                  'GrayPercent' => 
                  array (
                    'description' => '灰度升级的比例。

仅升级范围为灰度升级时，返回该参数。',
                    'type' => 'string',
                    'example' => '50.00',
                  ),
                  'NeedPush' => 
                  array (
                    'description' => '物联网平台是否主动向设备推送升级任务。

',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'JobStatus' => 
                  array (
                    'description' => '批次的状态。

- **PLANNED**：计划中。批次已创建，但是定时时间未到。仅定时静态升级的批次可能返回该值。
- **IN_PROGRESS**：执行中。
- **COMPLETED**：已完成。
- **CANCELED**：已取消。',
                    'type' => 'string',
                    'example' => 'IN_PROGRESS',
                  ),
                  'JobDesc' => 
                  array (
                    'description' => '升级批次描述。',
                    'type' => 'string',
                    'example' => 'batch upgrade',
                  ),
                  'UtcModified' => 
                  array (
                    'description' => '批次最后一次修改时的时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2019-12-28T02:43:10.000Z',
                  ),
                  'UtcStartTime' => 
                  array (
                    'description' => '该批次任务开始执行时的时间，UTC格式。',
                    'type' => 'string',
                    'example' => '2019-12-28T02:43:10.000Z',
                  ),
                  'MultiModuleMode' => 
                  array (
                    'description' => '设备是否支持多模块同时升级。

- **false**（默认）：否，设备不支持多模块同时升级。
- **true**：是，设备支持多模块同时升级。

更多信息，请参见[设备支持多模块同时升级说明表](~~58328~~)。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'UtcEndTime' => 
                  array (
                    'description' => '该批次任务执行结束时的时间，UTC格式。

仅已执行结束的升级批次才返回此参数。',
                    'type' => 'string',
                    'example' => '2019-12-29T02:43:10.000Z',
                  ),
                  'Name' => 
                  array (
                    'description' => '升级包名称。',
                    'type' => 'string',
                    'example' => 'Firmware2',
                  ),
                  'DestVersion' => 
                  array (
                    'description' => '升级目标版本号。',
                    'type' => 'string',
                    'example' => '1.0.1',
                  ),
                  'UtcScheduleFinishTime' => 
                  array (
                    'description' => '定时升级结束的时间。仅定时升级任务且设置了定时升级结束时间时会返回该参数。',
                    'type' => 'string',
                    'example' => '2019-12-30T02:43:10.000Z',
                  ),
                  'MaximumPerMinute' => 
                  array (
                    'description' => '每分钟最多向多少个设备推送升级包下载URL。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1000',
                  ),
                  'DynamicMode' => 
                  array (
                    'description' => '动态升级模式。取值范围：

- **1**：除了升级当前满足升级条件的设备，还将持续检查设备是否满足升级条件，对满足升级条件的设备进行升级。
- **2**：仅对后续上报新版本号的设备生效。

仅升级策略为动态升级时，返回该参数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'RetryCount' => 
                  array (
                    'description' => '设备升级失败后，自动重试次数。

创建升级批次时，设置了失败重试策略，则返回该参数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => '升级包所属产品的ProductKey。',
                    'type' => 'string',
                    'example' => 'a19mzPZ****',
                  ),
                  'GroupName' => 
                  array (
                    'description' => '分组升级的设备分组名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'GroupId' => 
                  array (
                    'description' => '分组升级的设备分组ID。',
                    'type' => 'string',
                    'example' => 'CtjzCkNuOxUR***',
                  ),
                  'UtcScheduleTime' => 
                  array (
                    'description' => '定时升级发起的时间。仅定时升级任务会返回该参数。',
                    'type' => 'string',
                    'example' => '2019-12-29T02:43:10.000Z',
                  ),
                  'JobId' => 
                  array (
                    'description' => '升级批次ID，批次的唯一标识符。',
                    'type' => 'string',
                    'example' => 'HvKuBpuk3rdk6E92CP****0200',
                  ),
                  'DownloadProtocol' => 
                  array (
                    'description' => '升级包文件的下载协议。',
                    'type' => 'string',
                    'example' => 'HTTPS',
                  ),
                  'NeedConfirm' => 
                  array (
                    'description' => '是否App确认升级。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'FirmwareId' => 
                  array (
                    'description' => '升级包ID。',
                    'type' => 'string',
                    'example' => 'UfuxnwygsuSkVE0VCN****0100',
                  ),
                  'Tags' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'OtaTagDTO' => 
                      array (
                        'description' => '升级批次标签。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Key' => 
                            array (
                              'description' => '标签名。',
                              'type' => 'string',
                              'example' => 'key1',
                            ),
                            'Value' => 
                            array (
                              'description' => '标签值。',
                              'type' => 'string',
                              'example' => 'value1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'SrcVersions' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'SrcVersion' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '待升级版本号列表。',
                          'type' => 'string',
                          'example' => '{"SrcVersion": ["1.0.0"]}',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"30F1BB8D-EDBF-44FD-BBC0-BE97DEA73991\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"UtcCreate\\": \\"2019-12-28T02:43:10.000Z\\",\\n    \\"RetryInterval\\": 60,\\n    \\"JobType\\": \\"UPGRADE_FIRMWARE\\",\\n    \\"SelectionType\\": \\"STATIC\\",\\n    \\"OverwriteMode\\": 1,\\n    \\"TargetSelection\\": \\"SPECIFIC\\",\\n    \\"TimeoutInMinutes\\": 5,\\n    \\"GrayPercent\\": \\"50.00\\",\\n    \\"NeedPush\\": true,\\n    \\"JobStatus\\": \\"IN_PROGRESS\\",\\n    \\"JobDesc\\": \\"batch upgrade\\",\\n    \\"UtcModified\\": \\"2019-12-28T02:43:10.000Z\\",\\n    \\"UtcStartTime\\": \\"2019-12-28T02:43:10.000Z\\",\\n    \\"MultiModuleMode\\": false,\\n    \\"UtcEndTime\\": \\"2019-12-29T02:43:10.000Z\\",\\n    \\"Name\\": \\"Firmware2\\",\\n    \\"DestVersion\\": \\"1.0.1\\",\\n    \\"UtcScheduleFinishTime\\": \\"2019-12-30T02:43:10.000Z\\",\\n    \\"MaximumPerMinute\\": 1000,\\n    \\"DynamicMode\\": 1,\\n    \\"RetryCount\\": 1,\\n    \\"ProductKey\\": \\"a19mzPZ****\\",\\n    \\"GroupName\\": \\"test\\",\\n    \\"GroupId\\": \\"CtjzCkNuOxUR***\\",\\n    \\"UtcScheduleTime\\": \\"2019-12-29T02:43:10.000Z\\",\\n    \\"JobId\\": \\"HvKuBpuk3rdk6E92CP****0200\\",\\n    \\"DownloadProtocol\\": \\"HTTPS\\",\\n    \\"NeedConfirm\\": false,\\n    \\"FirmwareId\\": \\"UfuxnwygsuSkVE0VCN****0100\\",\\n    \\"Tags\\": {\\n      \\"OtaTagDTO\\": [\\n        {\\n          \\"Key\\": \\"key1\\",\\n          \\"Value\\": \\"value1\\"\\n        }\\n      ]\\n    },\\n    \\"SrcVersions\\": {\\n      \\"SrcVersion\\": [\\n        \\"{\\\\\\"SrcVersion\\\\\\": [\\\\\\"1.0.0\\\\\\"]}\\"\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryOTAJobResponse>\\n<Data>\\n    <TimeoutInMinutes>5</TimeoutInMinutes>\\n    <JobDesc>batch upgrade</JobDesc>\\n    <DownloadProtocol>HTTPS</DownloadProtocol>\\n    <UtcStartTime>2019-12-28T02:43:10.000Z</UtcStartTime>\\n    <UtcEndTime>2019-12-29T02:43:10.000Z</UtcEndTime>\\n    <ProductKey>a19mzPZ****</ProductKey>\\n    <UtcModified>2019-12-28T02:43:10.000Z</UtcModified>\\n    <JobStatus>IN_PROGRESS</JobStatus>\\n    <UtcCreate>2019-12-28T02:43:10.000Z</UtcCreate>\\n    <SelectionType>STATIC</SelectionType>\\n    <TargetSelection>SPECIFIC</TargetSelection>\\n    <JobType>UPGRADE_FIRMWARE</JobType>\\n    <GroupId/>\\n    <GroupName/>\\n    <RetryInterval>60</RetryInterval>\\n    <RetryCount>1</RetryCount>\\n    <OverwriteMode>1</OverwriteMode>\\n    <MultiModuleMode>true</MultiModuleMode>\\n    <MaximumPerMinute>1000</MaximumPerMinute>\\n    <SrcVersions>\\n        <SrcVersion>1.0.0</SrcVersion>\\n    </SrcVersions>\\n    <Name>firmware2</Name>\\n    <NeedConfirm>true</NeedConfirm>\\n    <NeedPush>false</NeedPush>\\n    <FirmwareId>UfuxnwygsuSkVE0VCN****0100</FirmwareId>\\n    <JobId>HvKuBpuk3rdk6E92CP****0200</JobId>\\n    <DestVersion>1.0.1</DestVersion>\\n</Data>\\n<RequestId>30F1BB8D-EDBF-44FD-BBC0-BE97DEA73991</RequestId>\\n<Success>true</Success>\\n</QueryOTAJobResponse>","errorExample":""}]',
      'title' => '查询指定升级批次的详情',
      'summary' => '调用该接口查询指定升级批次的详情。',
      'description' => '## 使用说明
您可调用[CreateOTAVerifyJob](~~147480~~)、[CreateOTAStaticUpgradeJob](~~147496~~)或[CreateOTADynamicUpgradeJob](~~147887~~)创建升级任务批次后，根据返回的**JobId**查看升级批次的详情。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CancelOTAStrategyByJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级批次ID。

您调用[CreateOTADynamicUpgradeJob](~~147887~~)创建批次返回的**JobId**。您也可以在物联网平台控制台固件的**固件详情**页查看。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HvKuBpuk3rdk6E92CP****0200',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '291438BA-6E10-4C4C-B761-243B9A0D324F',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"291438BA-6E10-4C4C-B761-243B9A0D324F\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\r\\n<CancelOTAStrategyByJobResponse>\\r\\n  <RequestId>A01829CE-75A1-4920-B775-921146A1AB79</RequestId>\\r\\n  <Success>true</Success>\\r\\n</CancelOTAStrategyByJobResponse>","errorExample":""}]',
      'title' => '取消动态升级策略',
      'summary' => '调用该接口取消动态升级策略。',
      'description' => '## 使用说明
只支持取消动态升级批次所关联的动态升级策略。该接口对静态升级批次无效。

该接口执行成功后，会将动态升级批次的状态（**JobStatus**）设置为已取消（CANCELED）。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CancelOTATaskByJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级批次ID。

您调用[CreateOTAStaticUpgradeJob](~~147496~~)或[CreateOTADynamicUpgradeJob](~~147887~~)创建批次返回的**JobId**。您也可以在物联网平台控制台固件的**固件详情**页查看。',
            'type' => 'string',
            'required' => true,
            'example' => '7glPHmaDYLAYMD1HHutT02****',
          ),
        ),
        2 => 
        array (
          'name' => 'CancelScheduledTask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '取消定时升级批次下的设备升级作业，即调用[CreateOTAStaticUpgradeJob](~~147496~~)时，传入了**ScheduleTime**参数创建的升级批次。取值：

- **true**：取消。
- **false**（默认）：不取消。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'CancelQueuedTask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '取消批次下所有状态为待推送（**QUEUED**）的设备升级作业。取值：

- **true**：取消。
- **false**（默认）：不取消。

><notice>该参数值为**true**时，如果传入**CancelUnconfirmedTask**参数值，则仅取消待推送状态的设备升级作业；如果不传入**CancelUnconfirmedTask**参数值，则会取消待确认和待推送状态的设备升级任务。
></notice>
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'CancelInProgressTask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '取消批次下所有状态为升级中（**IN_PROGRESS**）的设备升级作业。取值：

- **true**：取消。
- **false**（默认）：不取消。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'CancelNotifiedTask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '取消批次下所有状态为已推送（**NOTIFIED**）的设备升级作业。取值：

- **true**：取消。
- **false**（默认）：不取消。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'CancelUnconfirmedTask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '
取消批次下所有状态为待确认（**CONFIRM**）的设备升级作业。取值：

- **true**：取消。
- **false**：不取消。

默认值为空。

><notice>如果不传入此参数，当**CancelQueuedTask**值为**true**时，会同步取消待确认状态的设备升级任务；当**CancelQueuedTask**值为**false**时，不会取消待确认状态的设备升级作业。
></notice>',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '291438BA-6E10-4C4C-B761-243B9A0D324F',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"291438BA-6E10-4C4C-B761-243B9A0D324F\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\r\\n<CancelOTATaskByJobResponse>\\r\\n  <RequestId>A01829CE-75A1-4920-B775-921146A1AB79</RequestId>\\r\\n  <Success>true</Success>\\r\\n</CancelOTATaskByJobResponse>","errorExample":""}]',
      'title' => '取消指定批次下的设备升级作业',
      'summary' => '调用该接口取消指定批次下的设备升级作业。',
      'description' => '## 使用说明
调用本接口时，除必传参数**JobId**，还需对照非必选参数，传入待取消升级作业对应的类型或状态，否则调用接口会失败。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CancelOTATaskByDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'FirmwareId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA升级包ID，OTA升级包的唯一标识符。

OTA升级包ID是调用[CreateOTAFirmware](~~147311~~)创建OTA升级包时，返回的参数之一。

可以调用[ListOTAFirmware](~~147450~~)，从返回参数中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'T0F5b5tpFnHQrgfk****030100',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要取消升级的设备所属产品的ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1V4kde****',
          ),
        ),
        3 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级批次ID。传入此参数则只取消指定批次下的设备升级任务。
批次ID是您调用[CreateOTAVerifyJob](~~147480~~)、[CreateOTAStaticUpgradeJob](~~147496~~)或[CreateOTADynamicUpgradeJob](~~147887~~)创建升级任务后返回的**JobId**。您也可以在物联网平台控制台上固件的**固件详情**页查看。',
            'type' => 'string',
            'required' => false,
            'example' => 'wahVIzGkCMuAUE2gDERM02****',
          ),
        ),
        4 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要取消升级的设备名称。

设备名称不能重复。

最多可传入200个设备名称。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'device1',
            'maxItems' => 200,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'A01829CE-75A1-4920-B775-921146A1AB79',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"A01829CE-75A1-4920-B775-921146A1AB79\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\r\\n<CancelOTATaskByDeviceResponse>\\r\\n  <RequestId>A01829CE-75A1-4920-B775-921146A1AB79</RequestId>\\r\\n  <Success>true</Success>\\r\\n</CancelOTATaskByDeviceResponse>","errorExample":""}]',
      'title' => '取消待升级设备升级作业',
      'summary' => '取消指定固件下状态为待升级的设备升级作业。',
      'description' => '## 使用说明
该接口只能取消待推送、已推送、升级中状态的设备升级。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateOTAModule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AliasName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA模块别名。支持中文、英文字母、数字、英文句号（.）、短划线（-）和下划线（_），长度限制为1~64个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '条码扫描仪',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        2 => 
        array (
          'name' => 'ModuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA模块名称，产品下唯一且不可修改。仅支持英文字母、数字、英文句号（.）、短划线（-）和下划线（_）。长度限制为1~64个字符。
> 英文字母不区分大小写，例如“scanner”和“Scanner”被认为是相同的模块名称，不可重复使用。',
            'type' => 'string',
            'required' => true,
            'example' => 'barcodeScanner',
          ),
        ),
        3 => 
        array (
          'name' => 'Desc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA模块的描述信息，支持最多100个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '条码扫描仪的固件模块',
          ),
        ),
        4 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA模块所属产品的ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Le6d0****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '74C2BB8D-1D6F-41F5-AE68-6B2310883F63',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"74C2BB8D-1D6F-41F5-AE68-6B2310883F63\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateOTAModuleResponse>\\n   <RequestId>29EC7245-0FA4-4BB6-B4F5-5F04818FDFB1</RequestId>\\n   <Success>true</Success>\\n</CreateOTAModuleResponse>","errorExample":""}]',
      'title' => '创建产品的OTA模块',
      'summary' => '调用该接口创建产品的OTA模块。',
      'description' => '## 使用说明
OTA模块是同产品下设备的不同可升级模块。默认（default）模块表示整个设备的OTA升级包。您可以调用该接口创建自定义OTA模块。

- 同一产品下最多自定义10个OTA模块。

- 创建后，OTA模块名称不可更改，可调用[UpdateOTAModule](~~186061~~)修改模块别名、模块描述。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。


',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateOTAModule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AliasName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新的模块别名。支持中文、英文字母、数字、英文句号（.）、短划线（-）和下划线（_），长度限制为1~64个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '条码扫描仪2',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        2 => 
        array (
          'name' => 'ModuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA模块名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'barcodeScanner',
          ),
        ),
        3 => 
        array (
          'name' => 'Desc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新的模块描述信息，支持最多100个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '条码扫描仪的固件模块',
          ),
        ),
        4 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA模块所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Le6d0****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '74C2BB8D-1D6F-41F5-AE68-6B2310883F63',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"74C2BB8D-1D6F-41F5-AE68-6B2310883F63\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateOTAModuleResponse>\\r\\n   <RequestId>29EC7245-0FA4-4BB6-B4F5-5F04818FDFB1</RequestId>\\r\\n   <Success>true</Success>\\r\\n</UpdateOTAModuleResponse>","errorExample":""}]',
      'title' => '修改OTA模块别名或描述',
      'summary' => '调用该接口修改OTA模块别名、描述。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

   > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteOTAModule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA模块所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1uctKe****',
          ),
        ),
        2 => 
        array (
          'name' => 'ModuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的OTA模块名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'barcodeScanner',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '74C2BB8D-1D6F-41F5-AE68-6B2310883F63',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"74C2BB8D-1D6F-41F5-AE68-6B2310883F63\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteOTAModuleResponse>\\r\\n     <RequestId>29EC7245-0FA4-4BB6-B4F5-5F04818FDFB1</RequestId>\\r\\n     <Success>true</Success>\\r\\n</DeleteOTAModuleResponse>","errorExample":""}]',
      'title' => '删除自定义OTA模块',
      'summary' => '调用该接口删除自定义OTA模块。',
      'description' => '## 使用说明

- 默认（default）模块不允许删除。

- 若OTA模块下存在升级包，则不允许删除。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。



',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListOTAModuleByProduct' => 
    array (
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-0pp1n8t****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品的ProductKey。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1uctKe****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '74C2BB8D-1D6F-41F5-AE68-6B2310883F63',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的OTA模块列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ModuleName' => 
                    array (
                      'description' => '模块名称。',
                      'type' => 'string',
                      'example' => 'barcodeScanner',
                    ),
                    'ProductKey' => 
                    array (
                      'description' => '产品的ProductKey。',
                      'type' => 'string',
                      'example' => 'aluctKe****',
                    ),
                    'GmtCreate' => 
                    array (
                      'description' => '模块创建时间，GMT格式。',
                      'type' => 'string',
                      'example' => '2020-10-13T09:46Z',
                    ),
                    'AliasName' => 
                    array (
                      'description' => '模块别名。',
                      'type' => 'string',
                      'example' => '条码扫描仪',
                    ),
                    'GmtModified' => 
                    array (
                      'description' => '模块信息最后一次更新时间，GMT格式。',
                      'type' => 'string',
                      'example' => '2020-10-19T09:46Z',
                    ),
                    'Desc' => 
                    array (
                      'description' => '模块描述。
',
                      'type' => 'string',
                      'example' => '这个模块对应于条码扫描仪的固件',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"74C2BB8D-1D6F-41F5-AE68-6B2310883F63\\",\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"ModuleName\\": \\"barcodeScanner\\",\\n      \\"ProductKey\\": \\"aluctKe****\\",\\n      \\"GmtCreate\\": \\"2020-10-13T09:46Z\\",\\n      \\"AliasName\\": \\"条码扫描仪\\",\\n      \\"GmtModified\\": \\"2020-10-19T09:46Z\\",\\n      \\"Desc\\": \\"这个模块对应于条码扫描仪的固件\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListOTAModuleByProductResponse>\\n    <RequestId>74C2BB8D-1D6F-41F5-AE68-6B2310883F63</RequestId>\\n    <Data>\\n        <Desc>这个模块对应于条码扫描仪的固件</Desc>\\n        <GmtCreate>2020-10-13T09:46Z</GmtCreate>\\n        <ModuleName>barcodeScanner</ModuleName>\\n        <AliasName>条码扫描仪</AliasName>\\n        <GmtModified>2020-10-19T09:46Z</GmtModified>\\n        <ProductKey>a1uctKe****</ProductKey>\\n    </Data>\\n    <Success>true</Success>\\n</ListOTAModuleByProductResponse>","errorExample":""}]',
      'title' => '查询产品下的OTA模块列表',
      'summary' => '调用该接口查询产品下的OTA模块列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
 > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ConfirmOTATask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待确认的设备升级作业ID。最多可传入10个TaskId。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'y3tOmCDNgpR8F9jnVEzC01****',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'A59D3BE1-E9A3-43F3-9B50-B7C8DE165D9B',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"A59D3BE1-E9A3-43F3-9B50-B7C8DE165D9B\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ConfirmOTATask>\\n<RequestId>A59D3BE1-E9A3-43F3-9B50-B7C8DE165D9B</RequestId>\\n<Success>true</Success>\\n</ConfirmOTATask>","errorExample":""}]',
      'title' => '批量确认设备升级作业',
      'summary' => '批量确认，处于待确认状态的设备升级作业。',
      'description' => '## 使用说明
若批次升级任务设置了定时升级，仅可在升级时间范围内，调用本接口来确认设备升级作业。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。

   > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListOTAUnfinishedTaskByDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-c3j***',
          ),
        ),
        1 => 
        array (
          'name' => 'ModuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OTA模块名称。

- 传入时，表示查询指定模块的升级任务。
- 不传入时，表示查询所有模块的升级任务。',
            'type' => 'string',
            'required' => false,
            'example' => 'WifiConfigModify',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属产品的ProductKey。

><notice>如果传入该参数，需同时传入**DeviceName**。
   ></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a19mzPZ****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。

><notice>如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        4 => 
        array (
          'name' => 'TaskStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询单个指定升级状态下的设备升级作业。
- **CONFIRM**：待确认。
- **QUEUED**：待推送。
- **NOTIFIED**：已推送。
- **IN_PROGRESS**：升级中。

> 单次调用本接口，仅可传入一个状态进行查询。该参数与**TaskStatusList**二选一使用。
',
            'type' => 'string',
            'required' => false,
            'example' => 'CONFIRM',
          ),
        ),
        5 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备的设备ID。

><notice>如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**的组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**的组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'TfmUAeJjQQhCPH84UVNn0010c6****',
          ),
        ),
        6 => 
        array (
          'name' => 'TaskStatusList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '查询多个指定升级状态下的设备升级作业。
- **CONFIRM**：待确认。
- **QUEUED**：待推送。
- **NOTIFIED**：已推送。
- **IN_PROGRESS**：升级中。

> 单次调用本接口，可传入多个状态进行查询。该参数与**TaskStatus**二选一使用。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'QUEUED',
            'maxItems' => 4,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'A59D3BE1-E9A3-43F3-9B50-B7C8DE165D9B',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SimpleOTATaskInfo' => 
                  array (
                    'description' => '调用成功时，返回的升级作业信息。详细内容，请参见以下**SimpleOTATaskInfo**。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ModuleName' => 
                        array (
                          'description' => 'OTA模块名称。',
                          'type' => 'string',
                          'example' => 'WifiConfigModify',
                        ),
                        'ProductName' => 
                        array (
                          'description' => '设备所属产品的名称。',
                          'type' => 'string',
                          'example' => 'MyProduct',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'light',
                        ),
                        'UtcCreate' => 
                        array (
                          'description' => '升级作业创建时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2019-11-04T03:38:22.000Z',
                        ),
                        'ProductKey' => 
                        array (
                          'description' => '设备所属产品的ProductKey。',
                          'type' => 'string',
                          'example' => 'a1GUfrM****',
                        ),
                        'TaskStatus' => 
                        array (
                          'description' => '设备升级作业状态。

- **CONFIRM**：待确认。
- **QUEUED**：待推送。
- **NOTIFIED**：已推送。
- **IN_PROGRESS**：升级中。',
                          'type' => 'string',
                          'example' => 'CONFIRM',
                        ),
                        'UtcModified' => 
                        array (
                          'description' => '升级作业最后一次修改时的时间，UTC格式。',
                          'type' => 'string',
                          'example' => '2021-11-04T03:38:22.000Z',
                        ),
                        'JobId' => 
                        array (
                          'description' => '升级批次ID。',
                          'type' => 'string',
                          'example' => '7glPHmaDYLAYMD1HHutT02****',
                        ),
                        'SrcVersion' => 
                        array (
                          'description' => '设备的原版本。',
                          'type' => 'string',
                          'example' => '1.0.0',
                        ),
                        'TaskId' => 
                        array (
                          'description' => '设备升级作业ID。',
                          'type' => 'string',
                          'example' => 'y3tOmCDNgpR8F9jnVEzC01****',
                        ),
                        'DestVersion' => 
                        array (
                          'description' => '升级的目标版本。',
                          'type' => 'string',
                          'example' => '1.0.1',
                        ),
                        'FirmwareId' => 
                        array (
                          'description' => '升级包ID。',
                          'type' => 'string',
                          'example' => 'q3j9OYBjUAZMv1hlMgdo03****',
                        ),
                        'IotId' => 
                        array (
                          'description' => '设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。',
                          'type' => 'string',
                          'example' => 'nadRdeffljdEndlfadgadfse****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.common.InvalidPageParams',
            'errorMessage' => 'The specified pagination size or pagination parameter is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.prod.NullProductKey',
            'errorMessage' => 'The productKey is empty.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.prod.InvalidFormattedProductkey',
            'errorMessage' => 'The productKey format is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.ota.NullOtaModuleName',
            'errorMessage' => 'the module name can not be empty.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.ota.InvalidOtaModuleName',
            'errorMessage' => 'the format of module name is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.ota.EmptyDeviceInfoParams',
            'errorMessage' => 'the device info in params is empty',
          ),
          6 => 
          array (
            'errorCode' => 'iot.firmware.InvalidTaskStatus',
            'errorMessage' => 'Invalid TaskStatus.',
          ),
          7 => 
          array (
            'errorCode' => 'iot.device.InvalidFormattedDeviceNameInNameArray',
            'errorMessage' => 'The deviceName list contains an invalid device name.',
          ),
          8 => 
          array (
            'errorCode' => 'iot.firmware.ListOTATaskByDeviceFailed',
            'errorMessage' => 'Failed to list OTA tasks by device.',
          ),
          9 => 
          array (
            'errorCode' => 'iot.device.NotExistedDevice',
            'errorMessage' => 'The device does not exist.',
          ),
          10 => 
          array (
            'errorCode' => 'iot.prod.NotExistedProduct',
            'errorMessage' => 'The specified product does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"A59D3BE1-E9A3-43F3-9B50-B7C8DE165D9B\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"SimpleOTATaskInfo\\": [\\n      {\\n        \\"ModuleName\\": \\"WifiConfigModify\\",\\n        \\"ProductName\\": \\"MyProduct\\",\\n        \\"DeviceName\\": \\"light\\",\\n        \\"UtcCreate\\": \\"2019-11-04T03:38:22.000Z\\",\\n        \\"ProductKey\\": \\"a1GUfrM****\\",\\n        \\"TaskStatus\\": \\"CONFIRM\\",\\n        \\"UtcModified\\": \\"2021-11-04T03:38:22.000Z\\",\\n        \\"JobId\\": \\"7glPHmaDYLAYMD1HHutT02****\\",\\n        \\"SrcVersion\\": \\"1.0.0\\",\\n        \\"TaskId\\": \\"y3tOmCDNgpR8F9jnVEzC01****\\",\\n        \\"DestVersion\\": \\"1.0.1\\",\\n        \\"FirmwareId\\": \\"q3j9OYBjUAZMv1hlMgdo03****\\",\\n        \\"IotId\\": \\"nadRdeffljdEndlfadgadfse****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListOTAUnfinishedTaskByDevice>\\n<Data>\\n    <SimpleOTATaskInfo>\\n        <SrcVersion>1.0.0</SrcVersion>\\n        <DeviceName>testDevice1</DeviceName>\\n        <FirmwareId>q3j9OYBjUAZMv1hlMgdo03****</FirmwareId>\\n        <IotId>SR8FiTu1R9tlUR2V1bmi00105****</IotId>\\n        <ProductKey>a1GUfrM****</ProductKey>\\n        <JobId>7glPHmaDYLAYMD1HHutT02****</JobId>\\n        <DestVersion>1.0.1</DestVersion>\\n        <UtcCreate>2019-11-04T03:38:15.000Z</UtcCreate>\\n        <UtcModified>2019-11-04T03:38:15.000Z</UtcModified>\\n        <TaskStatus>QUEUED</TaskStatus>\\n        <ProductName>MyProduct</ProductName>\\n        <TaskId>y3tOmCDNgpR8F9jnVEzC01****</TaskId>\\n        <ModuleName>WifiConfigModify</ModuleName>\\n    </SimpleOTATaskInfo>\\n    <SimpleOTATaskInfo>\\n        <SrcVersion>1.0.0</SrcVersion>\\n        <DeviceName>testDevice2</DeviceName>\\n        <FirmwareId>q3j9OYBjUAZMv1hlMgdo03****</FirmwareId>\\n        <IotId>nadRdeffljdEndlfadgadfse****</IotId>\\n        <ProductKey>a1GUfrM****</ProductKey>\\n        <JobId>7glPHmaDYLAYMD1HHutT02****</JobId>\\n        <DestVersion>1.0.1</DestVersion>\\n        <UtcCreate>2019-11-04T03:38:22.000Z</UtcCreate>\\n        <UtcModified>2019-11-04T03:38:22.000Z</UtcModified>\\n        <TaskStatus>CONFIRM</TaskStatus>\\n        <ProductName>MyProduct</ProductName>\\n        <TaskId>ZS9sNBb1ahsu6khqr9II01****</TaskId>\\n        <ModuleName>ConfigModify</ModuleName>\\n    </SimpleOTATaskInfo>\\n</Data>\\n<RequestId>A59D3BE1-E9A3-43F3-9B50-B7C8DE165D9B</RequestId>\\n<Success>true</Success>\\n</ListOTAUnfinishedTaskByDevice>","errorExample":""}]',
      'title' => '查询指定设备未完成的升级作业',
      'summary' => '查询指定设备下，未完成状态的设备升级作业。',
      'description' => '## 使用说明
请求参数中的**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**的组合是一一对应的关系。调用API时，**ProductKey**与**DeviceName**的组合和**IotId**必须传入一个。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

   > 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ReupgradeOTATask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级批次ID。
您调用[CreateOTAStaticUpgradeJob](~~147496~~)或[CreateOTADynamicUpgradeJob](~~147887~~)创建批次任务返回的**JobId**。

您也可以在物联网平台控制台上OTA升级包的**升级包详情**页面查看**批次ID**。',
            'type' => 'string',
            'required' => true,
            'example' => '7glPHmaDYLAYMD1HHutT02****',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64***',
          ),
        ),
        2 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待重新升级的设备升级作业ID。传入**TaskId**个数范围为1~10个。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => true,
            'example' => 'y3tOmCDNgpR8F9jnVEzC01****',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '291438BA-6E10-4C4C-B761-243B9A0D324F',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'false',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.ota.FirmwareNotVerified',
            'errorMessage' => 'The firmware validation is not completed.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.ota.NotFirmwareOwner',
            'errorMessage' => 'The user is not owner of firmware.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.ota.UnmatchedJob',
            'errorMessage' => 'The jobId and taskId do not match.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.ota.JobCanceled',
            'errorMessage' => 'The job has already been canceled.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.ota.InvalidJobId',
            'errorMessage' => 'The job is not existed.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.ota.InvalidFirmwareUid',
            'errorMessage' => 'The firmware is not exist.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.ota.InvalidTaskId',
            'errorMessage' => 'The tasks are not existed.',
          ),
          7 => 
          array (
            'errorCode' => 'iot.ota.FailedTaskNotFound',
            'errorMessage' => 'There are no failed tasks.',
          ),
          8 => 
          array (
            'errorCode' => 'iot.ota.InvalidTaskExist',
            'errorMessage' => 'The taskId list contains at least an invalid task.',
          ),
          9 => 
          array (
            'errorCode' => 'iot.ota.DeviceNotReUpgraded',
            'errorMessage' => 'There is no device can upgrade.',
          ),
          10 => 
          array (
            'errorCode' => 'iot.ota.DeviceNotExist',
            'errorMessage' => 'The device does not exist.',
          ),
          11 => 
          array (
            'errorCode' => 'iot.ota.TooManyOtaTask',
            'errorMessage' => 'There are too many tasks in parameters.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"291438BA-6E10-4C4C-B761-243B9A0D324F\\",\\n  \\"Success\\": false\\n}","errorExample":""},{"type":"xml","example":"<ReupgradeOTATaskResponse>\\n<RequestId>291438BA-6E10-4C4C-B761-243B9A0D324F</RequestId>\\n<Success>true</Success>\\n</ReupgradeOTATaskResponse>","errorExample":""}]',
      'title' => 'ReupgradeOTATask',
      'summary' => '调用该接口重新升级指定批次下升级失败或升级取消的设备升级作业。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListOTAModuleVersionsByDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无<props="intl"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的模块版本数量。数量限制：每页最多可显示200条。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备所属的产品**ProductKey**。

> 如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'aluctKe****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要查询设备的名称。

> 如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'newdevice',
          ),
        ),
        4 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的设备ID。物联网平台为该设备颁发的ID，设备的唯一标识符。

> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        5 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。默认值是1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CurrentPage' => 
              array (
                'description' => '当前页面号。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '291438BA-6E10-4C4C-B761-243B9A0D324F',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'PageSize' => 
              array (
                'description' => '每页显示的模块版本数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageCount' => 
              array (
                'description' => '返回的总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Total' => 
              array (
                'description' => '设备上报的模块版本总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SimpleOTAModuleInfo' => 
                  array (
                    'description' => '调用成功时，返回的设备上报的模块版本信息。更多信息，请参见以下**SimpleOTAModuleInfo**信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ModuleName' => 
                        array (
                          'description' => '模块名称。',
                          'type' => 'string',
                          'example' => 'barcodeScanner',
                        ),
                        'ProductKey' => 
                        array (
                          'description' => '设备所属产品的**ProductKey**。',
                          'type' => 'string',
                          'example' => 'aluctKe****',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'newDevice',
                        ),
                        'ModuleVersion' => 
                        array (
                          'description' => '设备上报的模块版本。',
                          'type' => 'string',
                          'example' => '1.0',
                        ),
                        'IotId' => 
                        array (
                          'description' => '设备ID。',
                          'type' => 'string',
                          'example' => 'QjIFT***000101',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CurrentPage\\": 1,\\n  \\"RequestId\\": \\"291438BA-6E10-4C4C-B761-243B9A0D324F\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"PageSize\\": 10,\\n  \\"PageCount\\": 1,\\n  \\"Total\\": 10,\\n  \\"Data\\": {\\n    \\"SimpleOTAModuleInfo\\": [\\n      {\\n        \\"ModuleName\\": \\"barcodeScanner\\",\\n        \\"ProductKey\\": \\"aluctKe****\\",\\n        \\"DeviceName\\": \\"newDevice\\",\\n        \\"ModuleVersion\\": \\"1.0\\",\\n        \\"IotId\\": \\"QjIFT***000101\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListOTAModuleVersionsByDeviceResponse>\\n<requestId>67AF7881-704C-40CC-B296-72F91380A117</requestId>\\n<success>true</success>\\n<code/>\\n<errorMessage/>\\n<PageSize>10</PageSize>\\n<PageCount>1</PageCount>\\n<CurrentPage>1</CurrentPage>\\n<Total>1</Total>\\n<Data>\\n    <SimpleOTAModuleInfo>\\n        <IotId>QjIFT***000101</IotId>\\n        <ModuleVersion>1.6940.1</ModuleVersion>\\n        <ModuleName>default</ModuleName>\\n        <ProductKey>a14***S</ProductKey>\\n        <DeviceName>newDevice</DeviceName>\\n    </SimpleOTAModuleInfo>\\n</Data>\\n</ListOTAModuleVersionsByDeviceResponse>","errorExample":""}]',
      'title' => '查询设备上报过的OTA模块版本列表',
      'summary' => '调用该接口查询设备上报过的OTA模块版本列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

 > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'OpenIotService' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'APP' => 
          array (
          ),
        ),
        2 => 
        array (
          'PrivateKey' => 
          array (
          ),
        ),
        3 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'OrderId' => 
              array (
                'description' => '开通服务的订单号。',
                'type' => 'string',
                'example' => '20671870***',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '427DB0B3-9436-4A3C-B2BC-B961F95E9488',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OrderOpend',
            'errorMessage' => 'You have already purchased the Iot service. Go to the Iot console to start using it.',
          ),
          1 => 
          array (
            'errorCode' => 'AccountTypeRestricted',
            'errorMessage' => 'Please submit the application for beta testing first. You can activate the product after the application is approved.',
          ),
          2 => 
          array (
            'errorCode' => 'PermissionDenied',
            'errorMessage' => 'The current sub account without permission, to authorize the Sub - Account, please.',
          ),
          3 => 
          array (
            'errorCode' => 'PriceWanHuaTongSys',
            'errorMessage' => 'Inquiry call kaleidoscope error',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"OrderId\\": \\"20671870***\\",\\n  \\"RequestId\\": \\"427DB0B3-9436-4A3C-B2BC-B961F95E9488\\"\\n}","errorExample":""},{"type":"xml","example":"<OpenIotServiceResponse>\\n<RequestId>427DB0B3-9436-4A3C-B2BC-B961F95E9488</RequestId>\\n<OrderId>20671870***</OrderId>\\n</OpenIotServiceResponse>","errorExample":""}]',
      'title' => '开通服务',
      'summary' => '调用该接口开通物联网平台服务。',
      'description' => '## 限制说明

- 调用云服务的接入地址**Endpoint**仅支持华东2（上海），即iot.cn-shanghai.aliyuncs.com。

- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

    > RAM用户共享阿里云账号配额。
',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BindLicenseProduct' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版实例的实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-23***',
          ),
        ),
        1 => 
        array (
          'name' => 'LicenseCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'License类型（音视频规格），可取值：**480P**、**720P**。',
            'type' => 'string',
            'required' => true,
            'example' => '480P',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待授权的产品的ProductKey。

您可以在物联网平台控制台或调用接口[QueryProductList](~~69271~~)，查看当前实例下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见本文下方的**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'Data' => 
              array (
                'description' => '表示产品授权License是否成功。
- **true**：产品授权License成功。
- **false**：产品授权License失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4F94B97-1D64-4080-BFD2-67461667AA43',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.rtc.service.notSigned',
            'errorMessage' => 'The RTC service is not activated.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.rtc.invalid.license.code',
            'errorMessage' => 'invalid license code',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rtc.invalid.product.key',
            'errorMessage' => 'invalid product key',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rtc.license.product.relation.exist',
            'errorMessage' => 'license product relation has exist',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"Data\\": true,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4F94B97-1D64-4080-BFD2-67461667AA43\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BindLicenseProductResponse>\\n<RequestId>E4F94B97-1D64-4080-BFD2-67461667AA43</RequestId>\\n<Data>true</Data>\\n<Success>true</Success>\\n</BindLicenseProductResponse>","errorExample":""}]',
      'title' => '为指定产品授权License',
      'summary' => '调用该接口为指定产品授权License。',
      'description' => '## 使用说明
调用本接口前，请购买License。具体内容，请参见[购买方式](~~427935~~)。


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnbindLicenseProduct' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版实例的实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-s3***',
          ),
        ),
        1 => 
        array (
          'name' => 'LicenseCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'License类型（音视频规格），可取值：**480P**、**720P**。

您可在**音视频通信服务**控制台的**License管理>产品授权**页面，查看目标产品的License类型。',
            'type' => 'string',
            'required' => true,
            'example' => '480P',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待取消授权的产品的ProductKey。

您可在**音视频通信服务**控制台的**License管理>产品授权**页面，查看目标产品的**Product Key**。',
            'type' => 'string',
            'required' => true,
            'example' => 'gq62z***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见本文下方的**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'Data' => 
              array (
                'description' => '表示取消产品授权License是否成功。

- **true**：取消产品授权License成功。
- **false**：取消产品授权License失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4F94B97-1D64-4080-BFD2-67461667AA43',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.rtc.service.notSigned',
            'errorMessage' => 'The RTC service is not activated.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.rtc.invalid.license.code',
            'errorMessage' => 'invalid license code',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rtc.invalid.product.key',
            'errorMessage' => 'invalid product key',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"Data\\": true,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4F94B97-1D64-4080-BFD2-67461667AA43\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UnbindLicenseProductResponse>\\n<RequestId>E4F94B97-1D64-4080-BFD2-67461667AA43</RequestId>\\n<Data>true</Data>\\n<Success>true</Success>\\n</UnbindLicenseProductResponse>","errorExample":""}]',
      'title' => '取消指定产品的License授权',
      'summary' => '调用该接口取消指定产品的License授权。',
      'description' => '## 使用说明
已为目标产品授权过License。具体操作，请参见[BindLicenseProduct](~~427956~~)或[产品授权](~~427937~~)。


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BindLicenseDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版实例的实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-e3***',
          ),
        ),
        1 => 
        array (
          'name' => 'LicenseCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'License类型（音视频规格），可取值：**480P**、**720P**。',
            'type' => 'string',
            'required' => true,
            'example' => '720P',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待授权设备所属产品的**ProductKey**。

您可以在物联网平台控制台或调用接口[QueryProductList](~~69271~~)，查看当前实例下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'a2YwD23***',
          ),
        ),
        3 => 
        array (
          'name' => 'IotIdList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待授权License的设备列表，需传入设备对应的**IotId**。

您可调用接口[QueryDevice](~~69905~~)，查询指定产品下所有设备的**IotId**。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '待授权License的设备，需传入设备对应的**IotId**。

您可调用接口[QueryDevice](~~69905~~)，查询指定产品下所有设备的**IotId**。',
              'type' => 'string',
              'required' => false,
              'example' => 'Q7uOhVRdZRRlDnTLv****00100',
            ),
            'required' => false,
            'maxItems' => 10000,
          ),
        ),
        4 => 
        array (
          'name' => 'DeviceNameList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待授权License的设备列表，需传入设备对应的**DeviceName**。

您可调用接口[QueryDevice](~~69905~~)，查询指定产品下所有设备的**DeviceName**。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '待授权License的设备，需传入设备对应的**DeviceName**。

您可调用接口[QueryDevice](~~69905~~)，查询指定产品下所有设备的**DeviceName**。',
              'type' => 'string',
              'required' => false,
              'example' => 'test',
            ),
            'required' => false,
            'maxItems' => 10000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见本文下方_错误码_。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4F94B97-1D64-4080-BFD2-67461667AA43',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的授权结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'SuccessSum' => 
                  array (
                    'description' => '授权License成功的设备个数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '10',
                  ),
                  'Progress' => 
                  array (
                    'description' => '为批量设备授权License的进度百分比，即取值范围为1~100。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'ResultCsvFile' => 
                  array (
                    'description' => '授权License完成后，授权失败设备文件的URL。',
                    'type' => 'string',
                    'example' => 'http://***',
                  ),
                  'CheckProgressId' => 
                  array (
                    'description' => '查询批量授权设备进度的唯一ID。',
                    'type' => 'string',
                    'example' => '123***',
                  ),
                  'FailSum' => 
                  array (
                    'description' => '授权License失败的设备个数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.rtc.service.notSigned',
            'errorMessage' => 'The RTC service is not activated.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.rtc.invalid.product.key',
            'errorMessage' => 'Invalid product key.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rtc.license.product.relation.nonexist',
            'errorMessage' => 'License product relation non existent.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rtc.license.quota.lack',
            'errorMessage' => 'License quota is not enough.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.vas.EmptyLicenseDeviceList',
            'errorMessage' => 'Empty license device list.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.rtc.invalid.license.code',
            'errorMessage' => 'Invalid license code.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.rtc.license.device.authorization.executing',
            'errorMessage' => 'Authorization for this license device is in progress.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4F94B97-1D64-4080-BFD2-67461667AA43\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"SuccessSum\\": 10,\\n    \\"Progress\\": 100,\\n    \\"ResultCsvFile\\": \\"http://***\\",\\n    \\"CheckProgressId\\": \\"123***\\",\\n    \\"FailSum\\": 2\\n  }\\n}","errorExample":""},{"type":"xml","example":"<BindLicenseDeviceResponse>\\n<RequestId>E4F94B97-1D64-4080-BFD2-67461667AA43</RequestId>\\n<Data>\\n    <CheckProgressId>123***</CheckProgressId>\\n    <Progress>10</Progress>\\n    <ResultCsvFile>http://***</ResultCsvFile>\\n    <FailSum>2</FailSum>\\n    <SuccessSum>10</SuccessSum>\\n</Data>\\n<Success>true</Success>\\n</BindLicenseDeviceResponse>","errorExample":""}]',
      'title' => '为指定产品下设备授权License',
      'summary' => '调用该接口为指定产品下设备授权License。',
      'description' => '## 使用说明
调用本接口前，请确认完成以下操作：

1. 请购买License。具体内容，请参见[购买方式](~~427935~~)。
2. 为目标设备所属产品授权License。具体操作，请参见[BindLicenseProduct](~~427956~~)或[产品授权](~~427937~~)。


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CheckBindLicenseDeviceProgress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 对于新版公共实例或企业版实例，实例有ID值，必须传入该ID值，否则调用会失败。
- 对于旧版公共实例，实例无ID值，无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2ws****',
          ),
        ),
        1 => 
        array (
          'name' => 'LicenseCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'License类型（音视频规格），可取值：**480P**、**720P**。',
            'type' => 'string',
            'required' => true,
            'example' => '720P',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属产品的**ProductKey**。

您可以在物联网平台控制台或调用接口[QueryProductList](~~69271~~)，查看当前实例下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'uhf5****',
          ),
        ),
        3 => 
        array (
          'name' => 'CheckProgressId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询批量授权设备进度的唯一ID。',
            'type' => 'string',
            'required' => true,
            'example' => '23****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见本文下方**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '291438BA-6E10-4C4C-B761-243B9A0D324F',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的查询结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'SuccessSum' => 
                  array (
                    'description' => '授权License成功的设备数量。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '9',
                  ),
                  'Progress' => 
                  array (
                    'description' => '为批量设备授权License的进度百分比，即取值范围为1~100。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '80',
                  ),
                  'ResultCsvFile' => 
                  array (
                    'description' => '授权完成后的结果文件的URL。即文件在对象存储（OSS）上的存储地址。',
                    'type' => 'string',
                    'example' => 'http://***.oss-***.aliyuncs.com/license_device_***/***/d***h/c***.csv?Expires=16***&OSSAccessKeyId=L***&Signature=***',
                  ),
                  'FailSum' => 
                  array (
                    'description' => '授权License失败的设备数量。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.rtc.service.notSigned',
            'errorMessage' => 'The RTC service is not activated.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.rtc.invalid.product.key',
            'errorMessage' => 'Invalid product key.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rtc.license.product.relation.nonexist',
            'errorMessage' => 'License product relation non existent.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rtc.invalid.license.code',
            'errorMessage' => 'Invalid license code.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"291438BA-6E10-4C4C-B761-243B9A0D324F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"SuccessSum\\": 9,\\n    \\"Progress\\": 80,\\n    \\"ResultCsvFile\\": \\"http://***.oss-***.aliyuncs.com/license_device_***/***/d***h/c***.csv?Expires=16***&OSSAccessKeyId=L***&Signature=***\\",\\n    \\"FailSum\\": 1\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CheckBindLicenseDeviceProgressResponse>\\n<RequestId>291438BA-6E10-4C4C-B761-243B9A0D324F</RequestId>\\n<Data>\\n    <Progress>80</Progress>\\n    <ResultCsvFile>http://***.oss-***.aliyuncs.com/license_device_***/***/d***h/c***.csv?Expires=16***&amp;OSSAccessKeyId=L***&amp;Signature=***</ResultCsvFile>\\n    <FailSum>1</FailSum>\\n    <SuccessSum>9</SuccessSum>\\n</Data>\\n<Success>true</Success>\\n</CheckBindLicenseDeviceProgressResponse>","errorExample":""}]',
      'title' => 'CheckBindLicenseDeviceProgress',
      'summary' => '调用该接口根据批量授权设备接口返回的唯一ID（CheckProgressId）查询授权的进度。',
      'description' => '## 使用说明
已调用[BindLicenseDevice](~~427961~~)接口为设备授权License，获取返回的查询授权进度的**CheckProgressId**。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryLicenseDeviceList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 对于新版公共实例或企业版实例，实例有ID值，必须传入该ID值，否则调用会失败。
- 对于旧版公共实例，实例无ID值，无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-ws4***',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定每页返回的记录数量，取值范围：1~100，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '50',
          ),
        ),
        2 => 
        array (
          'name' => 'LicenseCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'License类型（音视频规格），可取值：**480P**、**720P**。',
            'type' => 'string',
            'required' => false,
            'example' => '720P',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属产品的**ProductKey**。

您可以在物联网平台控制台或调用接口[QueryProductList](~~69271~~)，查看当前实例下所有产品的信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'es****',
          ),
        ),
        4 => 
        array (
          'name' => 'PageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询的页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备的设备ID。

您可调用接口[QueryDevice](~~69905~~)，查询指定产品下所有设备的**IotId**。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        6 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备授权License的开始时间，取值为毫秒值时间戳。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1620634297000',
          ),
        ),
        7 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备授权License的结束时间，取值为毫秒值时间戳。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1620934297000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见本文下方**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '291438BA-6E10-4C4C-B761-243B9A0D324F',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的结果信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页显示的记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'PageId' => 
                  array (
                    'description' => '分页查询的当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Total' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'DeviceList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'item' => 
                      array (
                        'description' => '设备列表信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ExpiryTime' => 
                            array (
                              'description' => '设备授权License的失效时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1690934297000',
                            ),
                            'ProductKey' => 
                            array (
                              'description' => '设备所属产品的**ProductKey**。',
                              'type' => 'string',
                              'example' => 'es****',
                            ),
                            'ProductName' => 
                            array (
                              'description' => '产品名称。',
                              'type' => 'string',
                              'example' => '测试产品',
                            ),
                            'DeviceName' => 
                            array (
                              'description' => '设备名称。',
                              'type' => 'string',
                              'example' => 'device1',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '设备授权License的时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1620634297000',
                            ),
                            'LicenseCode' => 
                            array (
                              'description' => 'License类型（音视频规格），可取值：**480P**、**720P**。',
                              'type' => 'string',
                              'example' => '720P',
                            ),
                            'IotId' => 
                            array (
                              'description' => '设备ID。',
                              'type' => 'string',
                              'example' => 'Q7uOhVRdZRRlDnTLv****00100',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.rtc.service.notSigned',
            'errorMessage' => 'The RTC service is not activated.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.rtc.invalid.license.code',
            'errorMessage' => 'invalid license code',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rtc.invalid.product.key',
            'errorMessage' => 'invalid product key',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"291438BA-6E10-4C4C-B761-243B9A0D324F\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 2,\\n    \\"PageId\\": 1,\\n    \\"Total\\": 10,\\n    \\"DeviceList\\": {\\n      \\"item\\": [\\n        {\\n          \\"ExpiryTime\\": 1690934297000,\\n          \\"ProductKey\\": \\"es****\\",\\n          \\"ProductName\\": \\"测试产品\\",\\n          \\"DeviceName\\": \\"device1\\",\\n          \\"GmtCreate\\": 1620634297000,\\n          \\"LicenseCode\\": \\"720P\\",\\n          \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv****00100\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryLicenseDeviceListResponse>\\n<RequestId>739536F1-9EB3-511E-960A-524C473EE87A</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>2</Total>\\n    <DeviceList>\\n        <item>\\n            <IotId>QTGl****000000</IotId>\\n            <LicenseCode>480P</LicenseCode>\\n            <GmtCreate>1653996767000</GmtCreate>\\n            <ProductName>xinde</ProductName>\\n            <ExpiryTime>1748604768000</ExpiryTime>\\n            <ProductKey>a1****ls</ProductKey>\\n            <DeviceName>device001</DeviceName>\\n        </item>\\n        <item>\\n            <IotId>eJt****000000</IotId>\\n            <LicenseCode>480P</LicenseCode>\\n            <GmtCreate>1653996767000</GmtCreate>\\n            <ProductName>xinde</ProductName>\\n            <ExpiryTime>1748604768000</ExpiryTime>\\n            <ProductKey>a1****ls</ProductKey>\\n            <DeviceName>fefe</DeviceName>\\n        </item>\\n    </DeviceList>\\n</Data>\\n<Success>true</Success>\\n</QueryLicenseDeviceListResponse>","errorExample":""}]',
      'title' => 'QueryLicenseDeviceList',
      'summary' => '调用该接口查询授权License的设备列表。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ReBindLicenseDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 对于新版公共实例或企业版实例，实例有ID值，必须传入该ID值，否则调用会失败。
- 对于旧版公共实例，实例无ID值，无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-e3***',
          ),
        ),
        1 => 
        array (
          'name' => 'LicenseCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'License类型，暂时只支持千里传音，可取值：**LINK_SPEECH_COMMON_LICENSE**。',
            'type' => 'string',
            'required' => true,
            'example' => 'LINK_SPEECH_COMMON_LICENSE',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待授权设备所属产品的**ProductKey**。

您可以在物联网平台控制台或调用接口[QueryProductList](~~69271~~)，查看当前实例下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'a2YwD23***',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceNameList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待授权License的设备列表，需传入设备对应的**deviceName**。

您可调用接口[QueryDevice](~~69905~~)，查询指定产品下所有设备的**DeviceName**。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '待授权License的设备，需传入设备对应的**deviceName**。

您可调用接口[QueryDevice](~~69905~~)，查询指定产品下所有设备的**DeviceName**。',
              'type' => 'string',
              'required' => false,
              'example' => 'testdevice',
            ),
            'required' => true,
            'example' => 'test',
            'maxItems' => 10000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'An internal error occurred. Try again later.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'AF71BF1D-B552-47CD-B34B-352557627992',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回重新绑定结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'SuccessSum' => 
                  array (
                    'description' => '重新授权License成功的设备个数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '10',
                  ),
                  'Progress' => 
                  array (
                    'description' => '为批量设备授权License的进度百分比，即取值范围为1~100。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'ResultCsvFile' => 
                  array (
                    'description' => '重新授权License完成后，授权失败设备文件的URL。',
                    'type' => 'string',
                    'example' => 'http://***',
                  ),
                  'CheckProgressId' => 
                  array (
                    'description' => '查询批量授权设备进度的唯一ID。',
                    'type' => 'string',
                    'example' => '123***',
                  ),
                  'FailSum' => 
                  array (
                    'description' => '授权License失败的设备个数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.rtc.service.notSigned',
            'errorMessage' => 'The RTC service is not activated.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.rtc.invalid.license.code',
            'errorMessage' => 'invalid license code',
          ),
          2 => 
          array (
            'errorCode' => 'iot.rtc.invalid.product.key',
            'errorMessage' => 'invalid product key',
          ),
          3 => 
          array (
            'errorCode' => 'iot.rtc.license.product.relation.nonexist',
            'errorMessage' => 'license product relation non existent',
          ),
          4 => 
          array (
            'errorCode' => 'iot.rtc.license.quota.lack',
            'errorMessage' => 'license quota is not enough',
          ),
          5 => 
          array (
            'errorCode' => 'iot.rtc.license.device.authorization.executing',
            'errorMessage' => 'authorization for this license device is in progress',
          ),
          6 => 
          array (
            'errorCode' => 'iot.vas.EmptyLicenseDeviceList',
            'errorMessage' => 'empty license device list',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"An internal error occurred. Try again later.\\",\\n  \\"RequestId\\": \\"AF71BF1D-B552-47CD-B34B-352557627992\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"SuccessSum\\": 10,\\n    \\"Progress\\": 100,\\n    \\"ResultCsvFile\\": \\"http://***\\",\\n    \\"CheckProgressId\\": \\"123***\\",\\n    \\"FailSum\\": 2\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ReBindLicenseDeviceResponse>\\n<RequestId>AF71BF1D-B552-47CD-B34B-352557627992</RequestId>\\n<Data>\\n    <CheckProgressId>123***</CheckProgressId>\\n    <Progress>100</Progress>\\n    <ResultCsvFile>http://***</ResultCsvFile>\\n    <FailSum>2</FailSum>\\n    <SuccessSum>10</SuccessSum>\\n</Data>\\n<Success>true</Success>\\n</ReBindLicenseDeviceResponse>","errorExample":""}]',
      'title' => 'ReBindLicenseDevice',
      'summary' => '调用该接口为指定产品下设备重新授权License。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '   调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ImportDTData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'dgb9****',
          ),
        ),
        1 => 
        array (
          'name' => 'DTInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-****001',
          ),
        ),
        3 => 
        array (
          'name' => 'Items',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '触发数据映射的设备信息列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '触发数据映射的设备信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Params' => 
                array (
                  'description' => '设备数据源，格式为`Key:Value`的JSON字符串。

单次调用本接口，最多传入300个键值对。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '{"key1":12,"key2":56}',
                ),
                'DeviceName' => 
                array (
                  'description' => '设备名称。单次调用接口下，最多传入5个。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Device1',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 200,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Iot.digitaltwin.RequestParamError',
            'errorMessage' => 'Request parameter error.',
          ),
          1 => 
          array (
            'errorCode' => 'Iot.digitaltwin.instanceNotFound',
            'errorMessage' => 'The instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'Iot.digitaltwin.instanceNodeNotExist',
            'errorMessage' => 'The nodeId is not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'Iot.product.ProductNotFound',
            'errorMessage' => 'product not found.',
          ),
          4 => 
          array (
            'errorCode' => 'Iot.digitaltwin.productAuthticFailed',
            'errorMessage' => 'Product authentic failed.',
          ),
          5 => 
          array (
            'errorCode' => 'Iot.device.DeviceNotFound',
            'errorMessage' => 'device not found.',
          ),
          6 => 
          array (
            'errorCode' => 'Iot.digitaltwin.notSupportApiDataSource',
            'errorMessage' => 'APIs cannot be used as data sources.',
          ),
          7 => 
          array (
            'errorCode' => 'Iot.digitaltwin.tooManyRequest',
            'errorMessage' => 'Too many requests.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ImportDTDataResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Success>true</Success>\\n</ImportDTDataResponse>","errorExample":""}]',
      'title' => 'ImportDTData',
      'summary' => '调用该接口触发孪生体的数据映射配置，实现数据到孪生节点的映射。',
      'description' => '## 使用说明
已在孪生空间配置API数据源映射。具体操作，请参见[配置数据源](~~455005~~)。


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为200。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PrintByTemplate' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ParamsJsonString',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '打印参数，您可以在寄雁传书服务控制台获取打印参数的模板，然后在模板中填入本次需要动态打印的内容。',
            'type' => 'string',
            'required' => false,
            'example' => '{   "orderTable": [     {       "number": "1",       "price": "33.00",       "name": "糖醋排骨"     }   ],   "orderTime": "2021-01-25 10:20:00",   "address": "地址：浙江省杭州市西湖区阿里云飞天园区",   "phone": "13********",   "price": "? 74.00",   "distributionFee": "5.00",   "shopName": "XX食品商店",   "title": "XX外卖单",   "status": "--已在线支付--" }',
          ),
        ),
        1 => 
        array (
          'name' => 'IotId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备ID。
> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => '4de2c367****8c585e5992**',
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>

<props="intl">无需传入此参数。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        3 => 
        array (
          'name' => 'TemplateBizCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '模板标识，您可以在寄雁传书服务的控制台获取模板标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '产品的唯一标识。

> 如果传入**ProductKey**，则必须同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        5 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        6 => 
        array (
          'name' => 'HistoryPrintTopic',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '是否下发历史的Topic给打印设备。

- false（默认）：下发设备的Topic格式为**/ext/rrpc/+/{pk}/{dn}/user/print**
- true：下发设备的Topic格式为**/ext/rrpc/+/{pk}/{dn}/print**
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.printservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'print service not open',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***	',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '打印结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'RetryCount' => 
                  array (
                    'description' => '实际重试次数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Success' => 
                  array (
                    'description' => '是否打印成功。

- **true**：打印成功。

- **false**：打印失败。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'DeviceErrorMessage' => 
                  array (
                    'description' => '打印设备返回的错误详情。',
                    'type' => 'string',
                    'example' => 'no paper',
                  ),
                  'MaxRetryCount' => 
                  array (
                    'description' => '最多重试次数，固定取值为2，最多重试2次。

打印指令下发到设备后，如果设备回复失败或者超时，服务器将重新下发打印指令。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'DeviceErrorCode' => 
                  array (
                    'description' => '打印设备返回的错误码。

- 2：缺纸
- 3：卡纸',
                    'type' => 'string',
                    'example' => '2',
                  ),
                  'Id' => 
                  array (
                    'description' => '打印的ID。',
                    'type' => 'string',
                    'example' => 'NyWh5lw3*****RfL9LJUivhOhQV*****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.printservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"print service not open\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\\\t\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"RetryCount\\": 0,\\n    \\"Success\\": true,\\n    \\"DeviceErrorMessage\\": \\"no paper\\",\\n    \\"MaxRetryCount\\": 2,\\n    \\"DeviceErrorCode\\": \\"2\\",\\n    \\"Id\\": \\"NyWh5lw3*****RfL9LJUivhOhQV*****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<PrintByTemplateResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***\\t</RequestId>\\n<Data>\\n    <MaxRetryCount>2</MaxRetryCount>\\n    <RetryCount>0</RetryCount>\\n    <Id>NyWh5lw3*****RfL9LJUivhOhQV*****</Id>\\n    <DeviceErrorCode>2</DeviceErrorCode>\\n    <DeviceErrorMessage>no paper</DeviceErrorMessage>\\n    <Success>true</Success>\\n</Data>\\n<Success>true</Success>\\n</PrintByTemplateResponse>","errorExample":""}]',
      'title' => 'PrintByTemplate',
      'summary' => '调用该接口根据寄雁传书服务控制台创建的小票打印模板完成小票打印。',
      'description' => '## 限制说明

调用该接口打印小票时，必须已经在寄雁传书控制台创建小票打印模板，否则将调用失败。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GisQueryDeviceLocation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ThingList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '设备列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ProductKey' => 
                array (
                  'description' => '要查询设备所属产品的ProductKey列表。
ProductKey是物联网平台为新建产品颁发的全局唯一标识符。您可以在物联网平台控制台或调用[QueryProductList](~~69271~~)，查看当前账号下所有产品的信息。
><notice>每个设备的 **ProductKey**与**DeviceName**必须同时传入，且设备个数不能超过20个。
></notice>',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'g3r****Vjta',
                ),
                'DeviceName' => 
                array (
                  'description' => '要查询的设备名列表。
><notice>每个设备的 **ProductKey**与**DeviceName**必须同时传入，且设备个数不能超过20个。
></notice>',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'mock_device_name',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 20,
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-a****13l',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '200表示成功。其它表示错误码。错误码详情，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => '200',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息，如果调用成功，没有ErrorMessage字段。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '4C717018-B6D4-5EB0-8495-2A4FF08D58CA',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回设备的位置信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ProductKey' => 
                    array (
                      'description' => '设备所属产品的**productKey**。',
                      'type' => 'string',
                      'example' => 'g3r****Vjta',
                    ),
                    'DeviceName' => 
                    array (
                      'description' => '设备名称。',
                      'type' => 'string',
                      'example' => 'mock_device_name',
                    ),
                    'CoordinateSystem' => 
                    array (
                      'description' => '坐标类型。

- **1**：WGS_84，国际经纬度坐标系统。
- **2**：GCJ_02，由国测局制定，是对地理位置进行首次加密后的一种坐标系统。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'Longitude' => 
                    array (
                      'description' => '设备位置的经度。',
                      'type' => 'number',
                      'format' => 'float',
                      'example' => '120.0',
                    ),
                    'Country' => 
                    array (
                      'description' => '设备所在国家。',
                      'type' => 'string',
                      'example' => '中国',
                    ),
                    'Ip' => 
                    array (
                      'description' => '设备上线的IP。',
                      'type' => 'string',
                      'example' => '127.0.0.1',
                    ),
                    'City' => 
                    array (
                      'description' => '设备所在城市。',
                      'type' => 'string',
                      'example' => '杭州',
                    ),
                    'Adcode' => 
                    array (
                      'description' => '高德adcode,adcode信息可参考城市编码表。

> 城市编码表，更新于2020年7月27日，该表用于查询不同城市对应的编码。仅供查询使用，建议通过地址解析等线上服务实时获取最新编码。暂时不支持台湾省的行政区域编码查询。
[下载链接](https://a.amap.com/lbs/static/amap_3dmap_lite/AMap_adcode_citycode.zip)',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '90000',
                    ),
                    'Latitude' => 
                    array (
                      'description' => '设备位置的纬度。',
                      'type' => 'number',
                      'format' => 'float',
                      'example' => '30.0',
                    ),
                    'Province' => 
                    array (
                      'description' => '设备所在省。',
                      'type' => 'string',
                      'example' => '浙江省',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"4C717018-B6D4-5EB0-8495-2A4FF08D58CA\\",\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"ProductKey\\": \\"g3r****Vjta\\",\\n      \\"DeviceName\\": \\"mock_device_name\\",\\n      \\"CoordinateSystem\\": 1,\\n      \\"Longitude\\": 120,\\n      \\"Country\\": \\"中国\\",\\n      \\"Ip\\": \\"127.0.0.1\\",\\n      \\"City\\": \\"杭州\\",\\n      \\"Adcode\\": 90000,\\n      \\"Latitude\\": 30,\\n      \\"Province\\": \\"浙江省\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<GisQueryDeviceLocationResponse>\\n    <RequestId>4C717018-B6D4-5EB0-8495-2A4FF08D58CA</RequestId>\\n    <Data>\\n        <CoordinateSystem>1</CoordinateSystem>\\n        <Ip>127.0.0.1</Ip>\\n        <Country>中国</Country>\\n        <Adcode>90000</Adcode>\\n        <Latitude>30</Latitude>\\n        <City>杭州</City>\\n        <Longitude>120</Longitude>\\n        <Province>浙江省</Province>\\n        <ProductKey>g3r****Vjta</ProductKey>\\n        <DeviceName>mock_device_name</DeviceName>\\n    </Data>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</GisQueryDeviceLocationResponse>","errorExample":""}]',
      'title' => 'GisQueryDeviceLocation',
      'summary' => '调用该接口查询设备位置信息。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GisSearchDeviceTrace' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MapMatch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否结合地图进行位置纠偏。可取值：
- **0**：否，不进行轨迹纠偏。
- **1**：是，进行轨迹纠偏。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '0',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-a****13l',
          ),
        ),
        2 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '轨迹结束时间戳（毫秒）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1645071254000',
          ),
        ),
        3 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '轨迹开始时间戳（毫秒）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1645071254000',
          ),
        ),
        4 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询设备所属产品的ProductKey。
ProductKey是物联网平台为新建产品颁发的全局唯一标识符。您可以在物联网平台控制台或调用[QueryProductList](~~69271~~)，查看当前账号下所有产品的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'g3r****Vjta',
          ),
        ),
        5 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'mock_device_name',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '200表示成功。其它表示错误码。错误码详情，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => '200',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '4C717018-B6D4-5EB0-8495-2A4FF08D58CA',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回设备的轨迹信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'DeviceName' => 
                  array (
                    'description' => '设备名称。',
                    'type' => 'string',
                    'example' => 'mock_device_name',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => '设备所属产品的**productKey**。',
                    'type' => 'string',
                    'example' => 'g3r****Vjta',
                  ),
                  'Points' => 
                  array (
                    'description' => '轨迹点列表，最多返回200个点。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'LocateTime' => 
                        array (
                          'description' => '位置点时间，如果是纠偏过的轨迹，则没有该字段。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1645071254000',
                        ),
                        'Location' => 
                        array (
                          'description' => '轨迹点坐标，格式为：（经度，维度）。',
                          'type' => 'string',
                          'example' => '120.0,30.0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.gis.InvalidRequestParam',
            'errorMessage' => 'Invalid Request Param.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.gis.InvalidParamSize',
            'errorMessage' => 'Invalid Param Size',
          ),
          2 => 
          array (
            'errorCode' => 'iot.gis.lbsBasicFalse',
            'errorMessage' => 'lbs service has not open yet.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"4C717018-B6D4-5EB0-8495-2A4FF08D58CA\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"DeviceName\\": \\"mock_device_name\\",\\n    \\"ProductKey\\": \\"g3r****Vjta\\",\\n    \\"Points\\": [\\n      {\\n        \\"LocateTime\\": 1645071254000,\\n        \\"Location\\": \\"120.0,30.0\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GisSearchDeviceTraceResponse>\\n    <RequestId>4C717018-B6D4-5EB0-8495-2A4FF08D58CA</RequestId>\\n    <Data>\\n        <ProductKey>g3r****Vjta</ProductKey>\\n        <DeviceName>mock_device_name</DeviceName>\\n        <Points>\\n            <LocateTime>1645071254000</LocateTime>\\n            <Location>120.0,30.0</Location>\\n        </Points>\\n    </Data>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</GisSearchDeviceTraceResponse>","errorExample":""}]',
      'title' => '查询设备轨迹详情',
      'summary' => '调用该接口查询设备轨迹详情。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSpeech' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Voice',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料播报声音，由系统预设，例如标准女声、标准男声等。可以选择的声音类型通过[GetSpeechVoice](~~217887~~)进行查询，填入返回参数中**VoiceList**中**Value**的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'Xiaoyun',
          ),
        ),
        1 => 
        array (
          'name' => 'SpeechType',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料类型，分为自定义语料和常用语料。

> 不传入此参数时或传入**custom**，必须传入参数Text和BizCode，否则调用会失败。

- 自定义语料（默认）：取值为**custom**，是自定义语料时，必须填写语料标识和语料文本。
- 常用语料：由系统预置的常用语料文本，包括以下类型：
    - 数字：取值为**number**，包含：数字0~9，点，幺。
    - 量词：取值为**measure_word**，包含：个，十，百，千，万，十万，百万，亿等。
    - 货币单位：取值为**monetary_unit**，包含：分，角，元等。
    - 时间单位：取值为**time_unit**，包含：时，分，秒，月，日，年等。
    - 单位时间：取值为**unit_time**，包含：每秒，每分，每小时，每天，每周，每月，每年等。
    - 长度单位：取值为**length_unit**，包含：毫米，厘米，分米，米，千米，公里，英寸，英尺，英里等。',
            'type' => 'string',
            'required' => false,
            'example' => 'custom',
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        3 => 
        array (
          'name' => 'BizCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料标识，当设备调用多个语料进行组合播报时，通过该标识播报指定的语料。

- 当**语料类型**选择为**自定义语料**时，该参数必选。语料标识由用户自定义，支持英文字母和数字，长度为1~32个字符，项目下保证唯一。建议将语料语义的拼音首字母设置为语料标识，例如：`支付到账`设置为`ZFDZ`。

- 当**语料类型**选择为**常用语料**时，语料标识由系统自动生成，无需用户自定义。',
            'type' => 'string',
            'required' => false,
            'example' => 'identifying',
          ),
        ),
        4 => 
        array (
          'name' => 'SpeechRate',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '播报速度，取值范围：-500~500。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'minimum' => '-500',
            'example' => '0',
            'default' => '0',
          ),
        ),
        5 => 
        array (
          'name' => 'Volume',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '音量大小，取值范围：0~100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '0',
            'example' => '50',
            'default' => '50',
          ),
        ),
        6 => 
        array (
          'name' => 'ProjectCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID，是项目的唯一标识，您可以通过[项目管理控制台](https://iot.console.aliyun.com/things-service/projects)获取项目ID。如果没有项目，可以创建项目后获取项目ID。
',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        7 => 
        array (
          'name' => 'Text',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料文本，当语料类型选择为自定义语料时，该参数必选。语料文本支持英文字母、汉字和空格，长度为1~100个字符，一个汉字占两个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        8 => 
        array (
          'name' => 'AudioFormat',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '音频格式，仅支持**wav**、**mp3**、**amr**格式。',
            'type' => 'string',
            'required' => false,
            'example' => 'wav',
          ),
        ),
        9 => 
        array (
          'name' => 'SoundCodeConfig',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '声码配置，包含字段如下：


- **SoundCodeContent**：声码营销内容，例如商品的详情地址等。

- **AdditionalDuration**：语料播放结束后的声码播放时长，单位为秒，取值范围为1～15。',
            'type' => 'object',
            'required' => false,
            'example' => '{"SoundCodeContent": "www.taobao.com", "AdditionalDuration": 3}',
          ),
        ),
        10 => 
        array (
          'name' => 'EnableSoundCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '是否启用声码，若传入了true，必须传入参数SoundCodeConfig，否则调用会失败。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.speechsolution.NotSigned',
              ),
              'Data' => 
              array (
                'description' => '创建成功时返回的语料ID（SpeechCode），是语料的唯一标识。',
                'type' => 'string',
                'example' => 'Md3ZiTL888K9llXDy7890***********',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speechsolution.NotSigned\\",\\n  \\"Data\\": \\"Md3ZiTL888K9llXDy7890***********\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateSpeechResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>Md3ZiTL888K9llXDy7890***********</Data>\\n<Success>true</Success>\\n</CreateSpeechResponse>","errorExample":""}]',
      'title' => '创建语料',
      'summary' => '调用该接口创建语料。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateSpeech' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Voice',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '更新创建语料时设置的语料播报声音，可以选择的声音类型通过[GetSpeechVoice](~~217887~~)进行查询，填入返回参数中**VoiceList**中**Value**的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'Siyue',
          ),
        ),
        1 => 
        array (
          'name' => 'SpeechCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料ID，该参数可通过调用[QuerySpeechList](~~217576~~)查询。',
            'type' => 'string',
            'required' => true,
            'example' => ' VlKzbj3XIZ****CeIHH6vR82JNCSzk**',
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        3 => 
        array (
          'name' => 'SpeechRate',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '播报速度，默认值为0，取值范围：-500~500。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'minimum' => '-500',
            'example' => '0',
            'default' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'Volume',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '音量大小，默认值为50，取值范围：0~100。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '0',
            'example' => '50',
            'default' => '50',
          ),
        ),
        5 => 
        array (
          'name' => 'ProjectCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID，是项目的唯一标识，您可以通过[项目管理控制台](https://iot.console.aliyun.com/things-service/projects)获取项目ID。',
            'type' => 'string',
            'required' => true,
            'example' => ' 4de2c367****8c585e5992**',
          ),
        ),
        6 => 
        array (
          'name' => 'SoundCodeConfig',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '声码配置，包含字段如下：


- **SoundCodeContent**：声码营销内容，例如商品的详情地址等。

- **AdditionalDuration**：语料播放结束后的声码播放时长，单位为秒，取值范围为1～15。',
            'type' => 'object',
            'required' => false,
            'example' => '{"SoundCodeContent": "www.taobao.com", "AdditionalDuration": 3}',
          ),
        ),
        7 => 
        array (
          'name' => 'EnableSoundCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '是否启用声码。

><notice> 如果传入了**true**，必须传入参数**SoundCodeConfig**，否则调用会失败。
></notice>',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.speechsolution.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => '千里传音解决方案未开通',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speechsolution.NotSigned\\",\\n  \\"ErrorMessage\\": \\"千里传音解决方案未开通\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateSpeechResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Success>true</Success>\\n</UpdateSpeechResponse>","errorExample":""}]',
      'title' => '更新语料',
      'summary' => '更新语料，包括语料的播报声音、播报速度和音量大小等。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySpeechLicenseAvailableQuota' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'Data' => 
              array (
                'description' => '返回的License可用配额。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '120',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.system.InstanceNotFound',
            'errorMessage' => 'The instance ID does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"Data\\": 120,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<QuerySpeechLicenseAvailableQuotaResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>120</Data>\\n<Success>true</Success>\\n</QuerySpeechLicenseAvailableQuotaResponse>","errorExample":""}]',
      'title' => 'QuerySpeechLicenseAvailableQuota',
      'summary' => '调用该接口查询当前License的剩余可用配额。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetSpeechVoice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.speechsolution.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'F94F72A5-82F0-496F-9AC2-3DBCFF77608A',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Items' => 
                  array (
                    'description' => '返回的语料播报声音列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Label' => 
                        array (
                          'description' => '声音标签，标注声音的适用场景，例如通用场景、客服场景、童声场景等。',
                          'type' => 'string',
                          'example' => '通用场景',
                        ),
                        'Value' => 
                        array (
                          'description' => '声音值。',
                          'type' => 'string',
                          'example' => 'tongyong',
                        ),
                        'VoiceList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Items' => 
                            array (
                              'description' => '播报声音列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Label' => 
                                  array (
                                    'description' => '播报声音标签，标注声音的类型，例如标准男声、标准女声等。',
                                    'type' => 'string',
                                    'example' => '小云,标准女声',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '播报声音值，需要填入**Voice**参数的API，例如：
[CreateSpeech](~~217571~~)、[TestSpeech](~~217575~~)，传入该字段的值。',
                                    'type' => 'string',
                                    'example' => 'Xiaoyun',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speechsolution.NotSigned\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"F94F72A5-82F0-496F-9AC2-3DBCFF77608A\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Items\\": [\\n      {\\n        \\"Label\\": \\"通用场景\\",\\n        \\"Value\\": \\"tongyong\\",\\n        \\"VoiceList\\": {\\n          \\"Items\\": [\\n            {\\n              \\"Label\\": \\"小云,标准女声\\",\\n              \\"Value\\": \\"Xiaoyun\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetSpeechVoiceResponse>\\n<RequestId>F94F72A5-82F0-496F-9AC2-3DBCFF77608A</RequestId>\\n<Data>\\n    <Items>\\n        <Label>通用场景</Label>\\n        <Value>tongyong</Value>\\n        <VoiceList>\\n            <Items>\\n                <Label>小云,标准女声</Label>\\n                <Value>Xiaoyun</Value>\\n            </Items>\\n        </VoiceList>\\n    </Items>\\n</Data>\\n<Success>true</Success>\\n</GetSpeechVoiceResponse>","errorExample":""}]',
      'title' => '获取语料播报声音',
      'summary' => '获取语料播报的声音配置。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TestSpeech' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Voice',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料播报声音，由系统预设，例如标准女声、标准男声等。可以选择的声音类型通过[GetSpeechVoice](~~217887~~)进行查询，填入返回参数中`VoiceList`中`Value`的值。
',
            'type' => 'string',
            'required' => true,
            'example' => 'Siyue',
          ),
        ),
        1 => 
        array (
          'name' => 'Volume',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '音量大小，取值范围：0~100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '0',
            'example' => '50',
            'default' => '50',
          ),
        ),
        2 => 
        array (
          'name' => 'ProjectCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID，是项目的唯一标识，您可以通过[项目管理控制台](https://iot.console.aliyun.com/things-service/projects)获取项目ID。如果没有项目，可以创建项目后获取项目ID。
',
            'type' => 'string',
            'required' => true,
            'example' => '4de2c367****8c585e5992**',
          ),
        ),
        3 => 
        array (
          'name' => 'SpeechRate',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '播报速度，取值范围：-500~500。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'minimum' => '-500',
            'example' => '0',
            'default' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'Text',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料文本，当语料类型选择为自定义语料时，该参数必选。语料文本支持英文字母、汉字和空格，长度为1~100个字符，一个汉字占两个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        6 => 
        array (
          'name' => 'SpeechType',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料类型，分为自定义语料和常用语料。

> 不传入此参数时或传入**custom**，必须传入参数Text，否则调用会失败。

- 自定义语料（默认）：取值为**custom**，是自定义语料时，必须填写语料标识和语料文本。
- 常用语料：由系统预置的常用语料文本，包括以下类型：
    - 数字：取值为**number**，包含：数字0~9，点，幺。
    - 量词：取值为**measure_word**，包含：个，十，百，千，万，十万，百万，亿等。
    - 货币单位：取值为**monetary_unit**，包含：分，角，元等。
    - 时间单位：取值为**time_unit**，包含：时，分，秒，月，日，年等。
    - 单位时间：取值为**unit_time**，包含：每秒，每分，每小时，每天，每周，每月，每年等。
    - 长度单位：取值为**length_unit**，包含：毫米，厘米，分米，米，千米，公里，英寸，英尺，英里等。',
            'type' => 'string',
            'required' => false,
            'example' => 'custom',
          ),
        ),
        7 => 
        array (
          'name' => 'AudioFormat',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '音频格式，仅支持**wav**、**mp3**、**amr**格式。',
            'type' => 'string',
            'required' => false,
            'example' => 'wav',
          ),
        ),
        8 => 
        array (
          'name' => 'SoundCodeConfig',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '声码配置，包含字段如下：


- **SoundCodeContent**：声码营销内容，例如商品的详情地址等。

- **AdditionalDuration**：语料播放结束后的声码播放时长，单位为秒，取值范围为1～15。',
            'type' => 'object',
            'required' => false,
            'example' => '{"SoundCodeContent": "www.taobao.com", "AdditionalDuration": 3}',
          ),
        ),
        9 => 
        array (
          'name' => 'EnableSoundCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '是否启用声码，若传入了true，必须传入参数SoundCodeConfig，否则调用会失败。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.speechsolution.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'items' => 
                  array (
                    'description' => '语料试听的音频下载地址列表。
',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '语料试听的音频下载地址，若是语料包则返回各个语料的地址。
',
                      'type' => 'string',
                      'example' => '  [ "http://****.oss-cn-shanghai.aliyuncs.com/speech_test_audio/CPjUL8qUtOMoQmC******.wav?Expires=1620380723"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speechsolution.NotSigned\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"items\\": [\\n      \\"  [ \\\\\\"http://****.oss-cn-shanghai.aliyuncs.com/speech_test_audio/CPjUL8qUtOMoQmC******.wav?Expires=1620380723\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<TestSpeechResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <items>  [ \\"http://****.oss-cn-shanghai.aliyuncs.com/speech_test_audio/CPjUL8qUtOMoQmC******.wav?Expires=1620380723\\"]</items>\\n</Data>\\n<Success>true</Success>\\n</TestSpeechResponse>","errorExample":""}]',
      'title' => 'TestSpeech',
      'summary' => '调用该接口试听语料。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySpeech' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SpeechCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料ID，调用[CreateSpeech](~~217571~~)成功后返回的**Data**字段为语料ID。
',
            'type' => 'string',
            'required' => true,
            'example' => '4de2c367****8c585e5992** ',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

必须传入实例ID，否则调用会失败。您可在物联网平台控制台的**实例概览**页面，查看您的实例ID。
><notice>
如果公共实例没有ID，请参见[如何获取实例ID](~~267533~~)。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => ' iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.speechsolution.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '语料详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'Voice' => 
                  array (
                    'description' => '语料播报声音。',
                    'type' => 'string',
                    'example' => 'Siyue',
                  ),
                  'BizCode' => 
                  array (
                    'description' => '语料标识，当设备调用多个语料进行组合播报时，通过该标识播报指定的语料。
',
                    'type' => 'string',
                    'example' => 'identifying',
                  ),
                  'SpeechCode' => 
                  array (
                    'description' => '语料ID。
',
                    'type' => 'string',
                    'example' => '4de2c367****8c585e5992** ',
                  ),
                  'SpeechType' => 
                  array (
                    'description' => '语料类型，分为自定义语料和常用语料。',
                    'type' => 'string',
                    'example' => 'custom',
                  ),
                  'Text' => 
                  array (
                    'description' => '语料内容。
',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'SpeechRate' => 
                  array (
                    'description' => '播报速度。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Volume' => 
                  array (
                    'description' => '音量大小。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '50',
                  ),
                  'AudioFormat' => 
                  array (
                    'description' => '音频格式，仅支持**wav**、**mp3**、**amr**格式。',
                    'type' => 'string',
                    'example' => 'wav',
                  ),
                  'EnableSoundCode' => 
                  array (
                    'description' => '是否启用声码。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'SoundCodeConfig' => 
                  array (
                    'description' => '声码配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AdditionalDuration' => 
                      array (
                        'description' => '语料播放结束后的声码播放时长，单位为秒，取值范围为1～15。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'SoundCodeContent' => 
                      array (
                        'description' => '声码营销内容，例如商品的详情地址等。',
                        'type' => 'string',
                        'example' => 'www.taobao.com',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speechsolution.NotSigned\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Voice\\": \\"Siyue\\",\\n    \\"BizCode\\": \\"identifying\\",\\n    \\"SpeechCode\\": \\"4de2c367****8c585e5992** \\",\\n    \\"SpeechType\\": \\"custom\\",\\n    \\"Text\\": \\"test\\",\\n    \\"SpeechRate\\": 0,\\n    \\"Volume\\": 50,\\n    \\"AudioFormat\\": \\"wav\\",\\n    \\"EnableSoundCode\\": true,\\n    \\"SoundCodeConfig\\": {\\n      \\"AdditionalDuration\\": 3,\\n      \\"SoundCodeContent\\": \\"www.taobao.com\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <SpeechType>custom</SpeechType>\\n    <Volume>50</Volume>\\n    <EnableSoundCode>true</EnableSoundCode>\\n    <Text>test</Text>\\n    <SpeechCode>4de2c367****8c585e5992** </SpeechCode>\\n    <AudioFormat>wav</AudioFormat>\\n    <Voice>Siyue</Voice>\\n    <SpeechRate>0</SpeechRate>\\n    <BizCode>identifying</BizCode>\\n    <SoundCodeConfig>\\n        <AdditionalDuration>3</AdditionalDuration>\\n        <SoundCodeContent>www.taobao.com</SoundCodeContent>\\n    </SoundCodeConfig>\\n</Data>\\n<ErrorMessage>speech solution has not been signed</ErrorMessage>\\n<Code>iot.speechsolution.NotSigned</Code>\\n<Success>true</Success>","errorExample":""}]',
      'title' => 'QuerySpeech',
      'summary' => '调用该接口查询语料详情，包括语料的播报声音、语料类型和音量大小等。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySpeechList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProjectCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID，是项目的唯一标识，您可以通过[项目管理控制台](https://iot.console.aliyun.com/things-service/projects)获取项目ID。',
            'type' => 'string',
            'required' => true,
            'example' => '4de2c367****8c585e5992**',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定每页返回的语料条数，取值范围：1~50，默认值为20。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        2 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '当前页，从1开始，最大10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

必须传入实例ID，否则调用会失败。您可在物联网平台控制台的**实例概览**页面，查看您的实例ID。
><notice>
如果公共实例没有ID，请参见[如何获取实例ID](~~267533~~)。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        4 => 
        array (
          'name' => 'AudioFormat',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '音频格式，仅支持**wav**、**mp3**、**amr**格式。',
            'type' => 'string',
            'required' => false,
            'example' => 'wav',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.speechsolution.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的语料列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页返回的语料条数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Total' => 
                  array (
                    'description' => '查询返回的语料总条数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页，从1开始，最大10000。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Items' => 
                      array (
                        'description' => '语料列表信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Voice' => 
                            array (
                              'description' => '语料的语音场景。',
                              'type' => 'string',
                              'example' => 'Siyue',
                            ),
                            'BizCode' => 
                            array (
                              'description' => '语料标识。
',
                              'type' => 'string',
                              'example' => 'identifying',
                            ),
                            'SpeechCode' => 
                            array (
                              'description' => '语料ID。
',
                              'type' => 'string',
                              'example' => '4de2c367****8c585e5992**  ',
                            ),
                            'SpeechType' => 
                            array (
                              'description' => '语料类型，分为自定义语料和常用语料。',
                              'type' => 'string',
                              'example' => 'custom',
                            ),
                            'Text' => 
                            array (
                              'description' => '语料的文本内容。
',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'AudioFormat' => 
                            array (
                              'description' => '音频格式，仅支持**wav**、**mp3**、**amr**格式。',
                              'type' => 'string',
                              'example' => 'wav',
                            ),
                            'SpeechList' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Items' => 
                                array (
                                  'description' => '通用语料包的语料列表。
',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Text' => 
                                      array (
                                        'description' => '语料的文本内容。
',
                                        'type' => 'string',
                                        'example' => 'test',
                                      ),
                                      'Voice' => 
                                      array (
                                        'description' => '语料的语音场景。',
                                        'type' => 'string',
                                        'example' => 'Siyue',
                                      ),
                                      'BizCode' => 
                                      array (
                                        'description' => '语料标识。
',
                                        'type' => 'string',
                                        'example' => 'identifying',
                                      ),
                                      'SpeechCode' => 
                                      array (
                                        'description' => '语料标识的ID。

',
                                        'type' => 'string',
                                        'example' => '4de2c367****8c585e5992**  ',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speechsolution.NotSigned\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"Total\\": 100,\\n    \\"PageId\\": 1,\\n    \\"List\\": {\\n      \\"Items\\": [\\n        {\\n          \\"Voice\\": \\"Siyue\\",\\n          \\"BizCode\\": \\"identifying\\",\\n          \\"SpeechCode\\": \\"4de2c367****8c585e5992**  \\",\\n          \\"SpeechType\\": \\"custom\\",\\n          \\"Text\\": \\"test\\",\\n          \\"AudioFormat\\": \\"wav\\",\\n          \\"SpeechList\\": {\\n            \\"Items\\": [\\n              {\\n                \\"Text\\": \\"test\\",\\n                \\"Voice\\": \\"Siyue\\",\\n                \\"BizCode\\": \\"identifying\\",\\n                \\"SpeechCode\\": \\"4de2c367****8c585e5992**  \\"\\n              }\\n            ]\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySpeechListResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>100</Total>\\n    <List>\\n        <Items>\\n            <SpeechType>custom</SpeechType>\\n            <Text>test</Text>\\n            <SpeechCode>4de2c367****8c585e5992**  </SpeechCode>\\n            <AudioFormat>wav</AudioFormat>\\n            <Voice>Siyue</Voice>\\n            <BizCode>identifying</BizCode>\\n            <SpeechList>\\n                <Items>\\n                    <Text>test</Text>\\n                    <SpeechCode>4de2c367****8c585e5992**  </SpeechCode>\\n                    <Voice>Siyue</Voice>\\n                    <BizCode>identifying</BizCode>\\n                </Items>\\n            </SpeechList>\\n        </Items>\\n    </List>\\n</Data>\\n<Success>true</Success>\\n</QuerySpeechListResponse>","errorExample":""}]',
      'title' => '查询语料列表',
      'summary' => '查询指定项目语料列表。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PushSpeech' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页签，查看当前实例的ID。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。
',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PushMode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '推送模式。

- **ALL**：全量设备推送。

- **SINGLE_DEVICE**：单设备推送。

- **GROUP_DEVICE**：分组设备推送。
',
            'type' => 'string',
            'required' => true,
            'example' => 'SINGLE_DEVICE',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分组ID，当**推送模式**选择为**分组设备**时，该项必填。
您可以在**设备管理** > **分组管理**中获取分组ID，',
            'type' => 'string',
            'required' => false,
            'example' => '4de2c367****8c585e5992**',
          ),
        ),
        3 => 
        array (
          'name' => 'IotId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备ID。当**推送模式**选择为**单个设备**时，该参数与**ProductKey**、**DeviceName**组合二选一必传。

> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
',
            'type' => 'string',
            'required' => false,
            'example' => '4de2c367****8c585e5992**',
          ),
        ),
        4 => 
        array (
          'name' => 'ProjectCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID，是项目的唯一标识，您可以通过[项目管理控制台](https://iot.console.aliyun.com/things-service/projects)获取项目ID。',
            'type' => 'string',
            'required' => true,
            'example' => '4de2c367****8c585e5992**',
          ),
        ),
        5 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'light',
          ),
        ),
        6 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '产品的唯一标识。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        7 => 
        array (
          'name' => 'SpeechCodeList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '需要推送的语料ID列表。该参数可以通过[QuerySpeechList](~~217576~~)查询获取。

N为整数，取值范围：1~100，表示每次最多推送100条语料。
',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => '4de2c367****8c585e5992**',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.speechsolution.NotSigned',
              ),
              'Data' => 
              array (
                'description' => '返回的推送任务ID（JobCode），是推送任务的唯一标识。',
                'type' => 'string',
                'example' => '4de2c367****8c585e5992**',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speechsolution.NotSigned\\",\\n  \\"Data\\": \\"4de2c367****8c585e5992**\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PushSpeechResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>4de2c367****8c585e5992**</Data>\\n<Success>true</Success>\\n</PushSpeechResponse>","errorExample":""}]',
      'title' => '推送语料到设备',
      'summary' => '将语料推送到设备。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSpeech' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

必须传入实例ID，否则调用会失败。您可在物联网平台控制台的**实例概览**页面，查看您的实例ID。
><notice>
如果公共实例没有ID，请参见[如何获取实例ID](~~267533~~)。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'SpeechCodeList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '
需要删除的语料ID，您可以在**语料配置**控制台获取语料ID，或者调用[CreateSpeech](~~217571~~)，成功后返回的**Data**字段为语料ID。

N为整数，取值范围：1~20，表示每次最多删除20条。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => '4de2c367****8c585e5992**',
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.speech.InvalidSpeechCodeList',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'invalid SpeechCodeList',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speech.InvalidSpeechCodeList\\",\\n  \\"ErrorMessage\\": \\"invalid SpeechCodeList\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteSpeechResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Success>true</Success>\\n</DeleteSpeechResponse>","errorExample":""}]',
      'title' => '删除语料',
      'summary' => '删除指定语料。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySolutionDeviceGroupPage' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

必须传入实例ID，否则调用会失败。您可在物联网平台控制台的**实例概览**页面，查看您的实例ID。
><notice>
如果公共实例没有ID，请参见[如何获取实例ID](~~267533~~)。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProjectCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '项目ID，是项目的唯一标识，您可以通过[项目管理控制台](https://iot.console.aliyun.com/things-service/projects)获取项目ID。',
            'type' => 'string',
            'required' => true,
            'example' => '4de2c367****8c585e5992**',
          ),
        ),
        2 => 
        array (
          'name' => 'FuzzyGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模糊查询分组的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定每页返回数据的最大条数，取值范围：1~50，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'PageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页，从1开始，最大10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.tcloud.ProjectNotFound',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'project not found',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的分组列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页返回的分组个数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页，从1开始。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Total' => 
                  array (
                    'description' => '查询返回的数据总条数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'itemName' => 
                      array (
                        'description' => '分组列表数据。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'GroupId' => 
                            array (
                              'description' => '分组的ID。',
                              'type' => 'string',
                              'example' => '4de2c367****8c585e5992**  ',
                            ),
                            'GroupName' => 
                            array (
                              'description' => '分组名称。
',
                              'type' => 'string',
                              'example' => 'test***',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '分组的创建时间。
',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1356565656',
                            ),
                            'GmtModified' => 
                            array (
                              'description' => '分组最近一次修改的时间。
',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1357865658',
                            ),
                            'GroupDesc' => 
                            array (
                              'description' => '分组描述。',
                              'type' => 'string',
                              'example' => 'description',
                            ),
                            'DeviceCount' => 
                            array (
                              'description' => '分组下设备的数量。
',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '100',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.tcloud.ProjectNotFound\\",\\n  \\"ErrorMessage\\": \\"project not found\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"PageId\\": 1,\\n    \\"Total\\": 100,\\n    \\"List\\": {\\n      \\"itemName\\": [\\n        {\\n          \\"GroupId\\": \\"4de2c367****8c585e5992**  \\",\\n          \\"GroupName\\": \\"test***\\",\\n          \\"GmtCreate\\": 1356565656,\\n          \\"GmtModified\\": 1357865658,\\n          \\"GroupDesc\\": \\"description\\",\\n          \\"DeviceCount\\": 100\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySolutionDeviceGroupPageResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>100</Total>\\n    <List>\\n        <itemName>\\n            <GroupName>test***</GroupName>\\n            <GmtCreate>1356565656</GmtCreate>\\n            <GroupDesc>description</GroupDesc>\\n            <GmtModified>1357865658</GmtModified>\\n            <DeviceCount>100</DeviceCount>\\n            <GroupId>4de2c367****8c585e5992**  </GroupId>\\n        </itemName>\\n    </List>\\n</Data>\\n<Success>true</Success>\\n</QuerySolutionDeviceGroupPageResponse>","errorExample":""}]',
      'title' => '查询项目分组列表',
      'summary' => '查询指定项目下的分组列表。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySpeechPushJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

必须传入实例ID，否则调用会失败。您可在物联网平台控制台的**实例概览**页面，查看您的实例ID。
><notice>
如果公共实例没有ID，请参见[如何获取实例ID](~~267533~~)。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-060*****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProjectCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID，是项目的唯一标识，您可以通过[项目管理控制台](https://iot.console.aliyun.com/things-service/projects)获取项目ID。',
            'type' => 'string',
            'required' => true,
            'example' => '0Ykj************************Av0I',
          ),
        ),
        2 => 
        array (
          'name' => 'PushMode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '推送任务的模式，不传则查询所有模式。

- **SINGLE_DEVICE**：单设备推送。
- **ALL**：全量设备推送。
- **GROUP_DEVICE**：分组设备推送。',
            'type' => 'string',
            'required' => false,
            'example' => 'ALL',
          ),
        ),
        3 => 
        array (
          'name' => 'JobCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '推送任务ID，调用[PushSpeech](~~217573~~)成功后返回的**Data**字段为推送任务ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tBUm***********************QPGT',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定每页返回数据的最大条数，取值范围：1~50，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '当前页，从1开始，最大为10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'StatusList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '查询语料推送任务的状态列表，不传则查询所有状态。

- **RUNNING**：运行中。
- **CANCEL**：取消。
- **SUCCESS**：成功。
- **TIMEOUT**：超时。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'RUNNING',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.speechsolution.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'AF71BF1D-B552-47CD-B34B-352557627992',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的语料推送任务状态列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '当前页返回的数据条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Total' => 
                  array (
                    'description' => '查询返回的语料推送任务总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Items' => 
                      array (
                        'description' => '语料推送任务列表信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '语料推送任务状态。

- **RUNNING**：运行中。
- **CANCEL**：取消。
- **SUCCESS**：成功。
- **TIMEOUT**：超时。',
                              'type' => 'string',
                              'example' => 'RUNNING',
                            ),
                            'SuccessDeviceNum' => 
                            array (
                              'description' => '语料推送成功的设备数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'SpeechNum' => 
                            array (
                              'description' => '语料数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'DeviceName' => 
                            array (
                              'description' => '设备名称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'FailDeviceNum' => 
                            array (
                              'description' => '推送失败的设备数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'PushMode' => 
                            array (
                              'description' => '推送模式。

- **SINGLE_DEVICE**：单设备推送。
- **ALL**：全量设备推送。
- **GROUP_DEVICE**：分组设备推送。',
                              'type' => 'string',
                              'example' => 'ALL',
                            ),
                            'SpeechStatus' => 
                            array (
                              'description' => '推送语料是否完整。

- **true**：完整。
- **false**：不完整。',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                            'ProductKey' => 
                            array (
                              'description' => '产品的唯一标识。',
                              'type' => 'string',
                              'example' => 'den0ZLt****',
                            ),
                            'GroupName' => 
                            array (
                              'description' => '分组名称。',
                              'type' => 'string',
                              'example' => '测试分组',
                            ),
                            'GroupId' => 
                            array (
                              'description' => '分组ID。',
                              'type' => 'string',
                              'example' => 'test_group',
                            ),
                            'ExpiredTime' => 
                            array (
                              'description' => '推送任务的到期时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1620634297000',
                            ),
                            'RunningDeviceNum' => 
                            array (
                              'description' => '运行中的设备数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2',
                            ),
                            'Code' => 
                            array (
                              'description' => '推送任务ID。',
                              'type' => 'string',
                              'example' => 'tBUm***********************QPGT',
                            ),
                            'TotalDeviceNum' => 
                            array (
                              'description' => '总设备数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '3',
                            ),
                            'CreatedTime' => 
                            array (
                              'description' => '推送任务的创建时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1620634297000',
                            ),
                            'IotId' => 
                            array (
                              'description' => '设备ID。',
                              'type' => 'string',
                              'example' => '0iOf*****************n001',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speechsolution.NotSigned\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"AF71BF1D-B552-47CD-B34B-352557627992\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"Total\\": 200,\\n    \\"PageId\\": 1,\\n    \\"List\\": {\\n      \\"Items\\": [\\n        {\\n          \\"Status\\": \\"RUNNING\\",\\n          \\"SuccessDeviceNum\\": 1,\\n          \\"SpeechNum\\": 1,\\n          \\"DeviceName\\": \\"test\\",\\n          \\"FailDeviceNum\\": 1,\\n          \\"PushMode\\": \\"ALL\\",\\n          \\"SpeechStatus\\": true,\\n          \\"ProductKey\\": \\"den0ZLt****\\",\\n          \\"GroupName\\": \\"测试分组\\",\\n          \\"GroupId\\": \\"test_group\\",\\n          \\"ExpiredTime\\": 1620634297000,\\n          \\"RunningDeviceNum\\": 2,\\n          \\"Code\\": \\"tBUm***********************QPGT\\",\\n          \\"TotalDeviceNum\\": 3,\\n          \\"CreatedTime\\": 1620634297000,\\n          \\"IotId\\": \\"0iOf*****************n001\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySpeechPushJobResponse>\\n<RequestId>AF71BF1D-B552-47CD-B34B-352557627992</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>200</Total>\\n    <List>\\n        <Items>\\n            <GroupName>测试分组</GroupName>\\n            <Status>RUNNING</Status>\\n            <SpeechNum>1</SpeechNum>\\n            <CreatedTime>1620634297000</CreatedTime>\\n            <TotalDeviceNum>3</TotalDeviceNum>\\n            <SuccessDeviceNum>1</SuccessDeviceNum>\\n            <RunningDeviceNum>2</RunningDeviceNum>\\n            <FailDeviceNum>1</FailDeviceNum>\\n            <Code>tBUm***********************QPGT</Code>\\n            <GroupId>test_group</GroupId>\\n            <PushMode>ALL</PushMode>\\n            <IotId>0iOf*****************n001</IotId>\\n            <ExpiredTime>1620634297000</ExpiredTime>\\n            <SpeechStatus>true</SpeechStatus>\\n            <ProductKey>den0ZLt****</ProductKey>\\n            <DeviceName>test</DeviceName>\\n        </Items>\\n    </List>\\n</Data>\\n<Success>true</Success>\\n</QuerySpeechPushJobResponse>","errorExample":""}]',
      'title' => '查询语料推送任务列表',
      'summary' => '查询指定项目的语料推送任务列表。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySpeechPushJobDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '推送任务ID，调用[PushSpeech](~~217573~~)成功后返回的**Data**字段为推送任务ID。
',
            'type' => 'string',
            'required' => true,
            'example' => 'tBUm***********************QPGT',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定每页返回数据的最大条数，取值范围：1~50，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        2 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '当前页，从1开始，最大为10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '推送任务状态，不传则查询所有类型。

- **RUNNING**：运行中。
- **SENDING**：正在发送。
- **CANCEL**：取消。
- **SUCCESS**：成功。
- **TIMEOUT**：超时。',
            'type' => 'string',
            'required' => false,
            'example' => 'SUCCESS',
          ),
        ),
        5 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

必须传入实例ID，否则调用会失败。您可在物联网平台控制台的**实例概览**页面，查看您的实例ID。
><notice>
如果公共实例没有ID，请参见[如何获取实例ID](~~267533~~)。
></notice>
',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-060*****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.speechsolution.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'AF71BF1D-B552-47CD-B34B-352557627992',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的指定语料推送任务下的设备。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '当前页显示的数据条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Total' => 
                  array (
                    'description' => '查询返回的数据总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Items' => 
                      array (
                        'description' => '指定语料推送任务下的设备详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '推送任务状态。

- **RUNNING**：运行中。
- **SENDING**：正在发送。
- **CANCEL**：取消。
- **SUCCESS**：成功。
- **TIMEOUT**：超时。',
                              'type' => 'string',
                              'example' => 'SUCCESS',
                            ),
                            'ErrorMessage' => 
                            array (
                              'description' => '设备上报的错误信息。',
                              'type' => 'string',
                              'example' => 'device storage limited',
                            ),
                            'DeviceName' => 
                            array (
                              'description' => '设备名称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'GmtModified' => 
                            array (
                              'description' => '最近一次修改时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1620624606000',
                            ),
                            'ErrorCode' => 
                            array (
                              'description' => '设备上报的错误码。

- 1：本地空间不足。
- 2：下载失败。
- 3： 语料更新中。',
                              'type' => 'string',
                              'example' => '2',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speechsolution.NotSigned\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"AF71BF1D-B552-47CD-B34B-352557627992\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"Total\\": 200,\\n    \\"PageId\\": 1,\\n    \\"List\\": {\\n      \\"Items\\": [\\n        {\\n          \\"Status\\": \\"SUCCESS\\",\\n          \\"ErrorMessage\\": \\"device storage limited\\",\\n          \\"DeviceName\\": \\"test\\",\\n          \\"GmtModified\\": 1620624606000,\\n          \\"ErrorCode\\": \\"2\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySpeechPushJobDeviceResponse>\\n<RequestId>AF71BF1D-B552-47CD-B34B-352557627992</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>200</Total>\\n    <List>\\n        <Items>\\n            <Status>SUCCESS</Status>\\n            <GmtModified>1620624606000</GmtModified>\\n            <DeviceName>test</DeviceName>\\n        </Items>\\n    </List>\\n</Data>\\n<Success>true</Success>\\n</QuerySpeechPushJobDeviceResponse>","errorExample":""}]',
      'title' => '查询指定语料推送任务下的设备',
      'summary' => '查询指定语料推送任务下的设备	。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySpeechPushJobSpeech' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '推送任务ID，调用[PushSpeech](~~217573~~)成功后返回的**Data**字段为推送任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => '0Ykj************************Av0I',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定每页返回数据的最大条数，取值范围：1~50，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        2 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '当前页，从1开始，最大为10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

必须传入实例ID，否则调用会失败。您可在物联网平台控制台的**实例概览**页面，查看您的实例ID。
><notice>
如果公共实例没有ID，请参见[如何获取实例ID](~~267533~~)。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-060*****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.speechsolution.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'AF71BF1D-B552-47CD-B34B-352557627992',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的语料推送任务下的语料详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页返回的数据条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Total' => 
                  array (
                    'description' => '查询返回的数据总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页，从1开始。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Items' => 
                      array (
                        'description' => '语料推送任务下的语料详情。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SpeechType' => 
                            array (
                              'description' => '语料类型，包括自定义语料和常用语料。',
                              'type' => 'string',
                              'example' => 'CUSTOM',
                            ),
                            'Text' => 
                            array (
                              'description' => '自定义语料的语料文本。',
                              'type' => 'string',
                              'example' => '支付到账',
                            ),
                            'Voice' => 
                            array (
                              'description' => '自定义语料的语料播报声音。',
                              'type' => 'string',
                              'example' => 'Xiaoyun',
                            ),
                            'BizCode' => 
                            array (
                              'description' => '语料的标识。',
                              'type' => 'string',
                              'example' => 'ZFDZ',
                            ),
                            'SpeechList' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Items' => 
                                array (
                                  'description' => '常用语料包的语料列表。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Text' => 
                                      array (
                                        'description' => '常用语料包的语料文本。',
                                        'type' => 'string',
                                        'example' => '1',
                                      ),
                                      'Voice' => 
                                      array (
                                        'description' => '常用语料包的语料声音。',
                                        'type' => 'string',
                                        'example' => 'Xiaoyun',
                                      ),
                                      'BizCode' => 
                                      array (
                                        'description' => '常用语料包的语料标识。',
                                        'type' => 'string',
                                        'example' => 'SYS_TONE_0',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speechsolution.NotSigned\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"AF71BF1D-B552-47CD-B34B-352557627992\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"Total\\": 1,\\n    \\"PageId\\": 1,\\n    \\"List\\": {\\n      \\"Items\\": [\\n        {\\n          \\"SpeechType\\": \\"CUSTOM\\",\\n          \\"Text\\": \\"支付到账\\",\\n          \\"Voice\\": \\"Xiaoyun\\",\\n          \\"BizCode\\": \\"ZFDZ\\",\\n          \\"SpeechList\\": {\\n            \\"Items\\": [\\n              {\\n                \\"Text\\": \\"1\\",\\n                \\"Voice\\": \\"Xiaoyun\\",\\n                \\"BizCode\\": \\"SYS_TONE_0\\"\\n              }\\n            ]\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>AF71BF1D-B552-47CD-B34B-352557627992</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>200</Total>\\n    <List>\\n        <Items>\\n            <SpeechType>CUSTOM</SpeechType>\\n            <Text>支付到账</Text>\\n            <Voice>Xiaoyun</Voice>\\n            <BizCode>ZFDZ</BizCode>\\n            <SpeechList>\\n                <Items>\\n                    <Text>1</Text>\\n                    <Voice>Xiaoyun</Voice>\\n                    <BizCode>SYS_TONE_0</BizCode>\\n                </Items>\\n            </SpeechList>\\n        </Items>\\n    </List>\\n</Data>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '查询语料推送任务的语料列表',
      'summary' => '查询语料推送任务下的语料详情，包括语料的播报声音、语料类型和语料文本等。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SpeechByCombination' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备ID，该参数可以通过调用[QuerySpeechDevice](~~280408~~)获取。

>如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属的产品**ProductKey**。如果传入该参数，需同时传入**DeviceName**。

',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****	',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备的**DeviceName**。
如果传入该参数，需同时传入**ProductKey**。

 ',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        4 => 
        array (
          'name' => 'AudioFormat',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '音频格式，仅支持**wav**、**mp3**、**amr**格式。',
            'type' => 'string',
            'required' => false,
            'example' => 'wav',
          ),
        ),
        5 => 
        array (
          'name' => 'SpeechId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '下发给设备的唯一播报ID。
><notice>
若不传入则由系统生成，若业务上进行重试播报，需传入重试的播报ID，避免出现重复业务播报。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '42000011392021112380********',
          ),
        ),
        6 => 
        array (
          'name' => 'EnforceFlag',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '是否下发强制播报标识给播报设备。

- **false**（默认）：不下发
- **true**：下发',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'CombinationList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '组合播报内容，包括以下类型：

- 播报已成功推送至设备中的语料，填入语料的标识。

- 播报支持的动态内容，根据设备支持的具体规则传入。
    
    示例：金额，格式为`{$xxx}`，xxx为具体的金额数，如`{$1000}`，则设备播报**1000元**。
    
设备根据下发的CombinationList进行顺序播报。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '组合播报内容，包括以下类型：

- 播报已成功推送至设备中的语料，填入语料的标识。

- 播报支持的动态内容，根据设备支持的具体规则传入。
    
    示例：金额，格式为`{$xxx}`，xxx为具体的金额数，如`{$1000}`，则设备播报**1000元**。
    
设备根据下发的CombinationList进行顺序播报。',
              'type' => 'string',
              'required' => false,
              'example' => 'ZFBDZ',
            ),
            'required' => true,
            'example' => 'ZFBDZ',
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'An internal error occurred. Try again later.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '671D0F8F-FDC7-4B12-93FA-336C079C965A',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"An internal error occurred. Try again later.\\",\\n  \\"RequestId\\": \\"671D0F8F-FDC7-4B12-93FA-336C079C965A\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SpeechByCombinationResponse>\\n<RequestId>671D0F8F-FDC7-4B12-93FA-336C079C965A</RequestId>\\n<Success>true</Success>\\n</SpeechByCombinationResponse>","errorExample":""}]',
      'title' => 'SpeechByCombination',
      'summary' => '调用该接口推送音频到设备播报。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SyncSpeechByCombination' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备ID，该参数可以通过调用[QuerySpeechDevice](~~280408~~)获取。

>如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属的产品**ProductKey**。如果传入该参数，需同时传入**DeviceName**。

',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****	',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备的**DeviceName**。
如果传入该参数，需同时传入**ProductKey**。

 ',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        4 => 
        array (
          'name' => 'AudioFormat',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '音频格式，仅支持**wav**、**mp3**、**amr**格式。',
            'type' => 'string',
            'required' => false,
            'example' => 'wav',
          ),
        ),
        5 => 
        array (
          'name' => 'SpeechId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '下发给设备的唯一播报ID。
><notice>
若不传入则由系统生成，若业务上进行重试播报，需传入重试的播报ID，避免出现重复业务播报。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '42000011392021112380********',
          ),
        ),
        6 => 
        array (
          'name' => 'EnforceFlag',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '是否下发强制播报标识给播报设备。

- false（默认）：不下发
- true：下发',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'CombinationList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '组合播报内容，包括以下类型：

- 播报已成功推送至设备中的语料，填入语料的标识。

- 播报支持的动态内容，根据设备支持的具体规则传入。
    
    示例：金额，格式为`{$xxx}`，xxx为具体的金额数，如`{$1000}`，则设备播报**1000元**。
    
设备根据下发的CombinationList进行顺序播报。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '组合播报内容，包括以下类型：

- 播报已成功推送至设备中的语料，填入语料的标识。

- 播报支持的动态内容，根据设备支持的具体规则传入。
    
    示例：金额，格式为`{$xxx}`，xxx为具体的金额数，如`{$1000}`，则设备播报**1000元**。
    
设备根据下发的CombinationList进行顺序播报。',
              'type' => 'string',
              'required' => false,
              'example' => 'ZFBDZ',
            ),
            'required' => true,
            'example' => 'ZFBDZ',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'An internal error occurred. Try again later.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '671D0F8F-FDC7-4B12-93FA-336C079C965A',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'RetryCount' => 
                  array (
                    'description' => '重试次数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Success' => 
                  array (
                    'description' => '播报是否成功。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'DeviceErrorMessage' => 
                  array (
                    'description' => '设备播报返回错误信息。',
                    'type' => 'string',
                    'example' => 'speech model not found',
                  ),
                  'MaxRetryCount' => 
                  array (
                    'description' => '最多重试次数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'DeviceErrorCode' => 
                  array (
                    'description' => '设备播报返回错误码。',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'Id' => 
                  array (
                    'description' => '下发给设备的唯一播报ID，即请求的参数SpeechId，若不传入则由系统生成。',
                    'type' => 'string',
                    'example' => '42000011392021112380********',
                  ),
                  'Detail' => 
                  array (
                    'description' => '设备播报详情。',
                    'type' => 'string',
                    'example' => 'Bat_Pt:99 RSSI: -92',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"An internal error occurred. Try again later.\\",\\n  \\"RequestId\\": \\"671D0F8F-FDC7-4B12-93FA-336C079C965A\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"RetryCount\\": 1,\\n    \\"Success\\": true,\\n    \\"DeviceErrorMessage\\": \\"speech model not found\\",\\n    \\"MaxRetryCount\\": 2,\\n    \\"DeviceErrorCode\\": \\"1\\",\\n    \\"Id\\": \\"42000011392021112380********\\",\\n    \\"Detail\\": \\"Bat_Pt:99 RSSI: -92\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<SyncSpeechByCombinationResponse>\\n<RequestId>671D0F8F-FDC7-4B12-93FA-336C079C965A</RequestId>\\n<Data>\\n    <MaxRetryCount>2</MaxRetryCount>\\n    <RetryCount>0</RetryCount>\\n    <Id>42000011392021112380********</Id>\\n    <Detail>Bat_Pt:99 RSSI: -92</Detail>\\n    <Success>true</Success>\\n</Data>\\n<Success>true</Success>\\n</SyncSpeechByCombinationResponse>","errorExample":""}]',
      'title' => 'SyncSpeechByCombination',
      'summary' => '调用该接口同步组合播报设备中的语料。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SpeechBySynthesis' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Voice',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料播报声音，由系统预设，例如标准女声、标准男声等。可以选择的声音类型通过[GetSpeechVoice](~~217887~~)进行查询，填入返回参数中`VoiceList`中`Value`的值。
',
            'type' => 'string',
            'required' => true,
            'example' => 'Siyue',
          ),
        ),
        1 => 
        array (
          'name' => 'IotId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备ID，该参数可以通过调用[QuerySpeechDevice](~~280408~~)获取。

>如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        2 => 
        array (
          'name' => 'SpeechRate',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '播报速度，取值范围：-500~500。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'minimum' => '-500',
            'example' => '0',
            'default' => '0',
          ),
        ),
        3 => 
        array (
          'name' => 'Text',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料文本，当语料类型选择为自定义语料时，该参数必选。语料文本支持英文字母、汉字和空格，长度为1~100个字符，一个汉字占两个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属的产品**ProductKey**。如果传入该参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        5 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备的**DeviceName**。
如果传入该参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        6 => 
        array (
          'name' => 'SpeechId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '下发给设备的唯一播报ID。
><notice>
若不传入则由系统生成，若业务上进行重试播报，需传入重试的播报ID，避免出现重复业务播报。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '42000011392021112380********',
          ),
        ),
        7 => 
        array (
          'name' => 'AudioFormat',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '音频格式，仅支持**wav**、**mp3**、**amr**格式。',
            'type' => 'string',
            'required' => true,
            'example' => 'wav',
          ),
        ),
        8 => 
        array (
          'name' => 'Volume',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '音量大小，取值范围：0~100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '0',
            'example' => '50',
            'default' => '50',
          ),
        ),
        9 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'An internal error occurred. Try again later.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '671D0F8F-FDC7-4B12-93FA-336C079C965A',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"An internal error occurred. Try again later.\\",\\n  \\"RequestId\\": \\"671D0F8F-FDC7-4B12-93FA-336C079C965A\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SpeechBySynthesisResponse>\\n<RequestId>671D0F8F-FDC7-4B12-93FA-336C079C965A</RequestId>\\n<Success>true</Success>\\n</SpeechBySynthesisResponse>","errorExample":""}]',
      'title' => 'SpeechBySynthesis',
      'summary' => '调用该接口下发动态播报内容到设备进行播报。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySpeechDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

必须传入实例ID，否则调用会失败。您可在物联网平台控制台的**实例概览**页面，查看您的实例ID。
><notice>
如果公共实例没有ID，请参见[如何获取实例ID](~~267533~~)。
></notice>
',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProjectCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID，是项目的唯一标识，您可以通过[项目管理控制台](https://iot.console.aliyun.com/things-service/projects)获取项目ID。',
            'type' => 'string',
            'required' => true,
            'example' => '4de2c367****8c585e5992**',
          ),
        ),
        2 => 
        array (
          'name' => 'AvailableSpace',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备的可用空间，单位KB，取值为任意正数。
> **AvailableSpaceScope**字段必须同时传入才会生效。',
            'type' => 'string',
            'required' => false,
            'example' => '500',
          ),
        ),
        3 => 
        array (
          'name' => 'AvailableSpaceScope',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备可用空间的查询条件。

- **greater**：大于。
- **smaller**：小于。
- **equal**：等于。

示例：**AvailableSpace**设置为**500**，**AvailableSpaceScope**设置为**smaller**，则返回可用空间小于500KB的设备列表。',
            'type' => 'string',
            'required' => false,
            'example' => 'smaller',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定每页返回数据的最大条数，取值范围：1~50，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '当前页，从1开始，最大为10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备名称查询条件，最左前缀匹配。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'AF71BF1D-B552-47CD-B34B-352557627992',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '查询结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页返回的数据条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Total' => 
                  array (
                    'description' => '返回数据的总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Items' => 
                      array (
                        'description' => '返回的设备列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ProductKey' => 
                            array (
                              'description' => '设备所隶属产品的ProductKey。',
                              'type' => 'string',
                              'example' => 'a1BwAGV****',
                            ),
                            'AvailableSpace' => 
                            array (
                              'description' => '设备的实际可用空间，单位KB。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '200',
                            ),
                            'DeviceName' => 
                            array (
                              'description' => '设备名称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'IotId' => 
                            array (
                              'description' => '物联网平台为设备颁发的ID，是设备的唯一标识符。',
                              'type' => 'string',
                              'example' => 'Q7uOhVRdZRRlDnTLv****00100',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"AF71BF1D-B552-47CD-B34B-352557627992\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"Total\\": 200,\\n    \\"PageId\\": 1,\\n    \\"List\\": {\\n      \\"Items\\": [\\n        {\\n          \\"ProductKey\\": \\"a1BwAGV****\\",\\n          \\"AvailableSpace\\": 200,\\n          \\"DeviceName\\": \\"test\\",\\n          \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv****00100\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySpeechDeviceResponse>\\n<RequestId>AF71BF1D-B552-47CD-B34B-352557627992</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>200</Total>\\n    <List>\\n        <Items>\\n            <IotId>Q7uOhVRdZRRlDnTLv****00100</IotId>\\n            <AvailableSpace>200</AvailableSpace>\\n            <ProductKey>a1BwAGV****</ProductKey>\\n            <DeviceName>test</DeviceName>\\n        </Items>\\n    </List>\\n</Data>\\n<Success>true</Success>\\n</QuerySpeechDeviceResponse>","errorExample":""}]',
      'title' => '查询播报设备列表',
      'summary' => '查询播报设备的列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDeviceSpeech' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '物联网平台为设备颁发的ID，是设备的唯一标识符。调用[QuerySpeechDevice](~~280408~~)可以获取该参数。',
            'type' => 'string',
            'required' => true,
            'example' => '4de2c367****8c585e5992**',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

必须传入实例ID，否则调用会失败。您可在物联网平台控制台的**实例概览**页面，查看您的实例ID。
><notice>
如果公共实例没有ID，请参见[如何获取实例ID](~~267533~~)。
></notice>
',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定每页返回数据的最大条数，取值范围：1~50，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '当前页，从1开始，最大为10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.speechsolution.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页返回的数据条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Total' => 
                  array (
                    'description' => '返回数据的总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页，从1开始。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Items' => 
                      array (
                        'description' => '当前页的语料列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AudioFormat' => 
                            array (
                              'description' => '音频格式，仅支持**wav**、**mp3**、**amr**格式。',
                              'type' => 'string',
                              'example' => 'wav',
                            ),
                            'BizCode' => 
                            array (
                              'description' => '语料标识。',
                              'type' => 'string',
                              'example' => 'ZFDZ',
                            ),
                            'Size' => 
                            array (
                              'description' => '语料大小，单位KB。',
                              'type' => 'number',
                              'format' => 'float',
                              'example' => '16',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speechsolution.NotSigned\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"Total\\": 200,\\n    \\"PageId\\": 1,\\n    \\"List\\": {\\n      \\"Items\\": [\\n        {\\n          \\"AudioFormat\\": \\"wav\\",\\n          \\"BizCode\\": \\"ZFDZ\\",\\n          \\"Size\\": 16\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDeviceSpeechResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>200</Total>\\n    <List>\\n        <Items>\\n            <Size>16</Size>\\n            <AudioFormat>wav</AudioFormat>\\n            <BizCode>ZFDZ</BizCode>\\n        </Items>\\n    </List>\\n</Data>\\n<Success>true</Success>\\n</QueryDeviceSpeechResponse>","errorExample":""}]',
      'title' => '查询设备语料列表',
      'summary' => '查询指定设备的语料列表。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetSpeechDeviceDetail' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '物联网平台为设备颁发的ID，是设备的唯一标识符。调用[QuerySpeechDevice](~~280408~~)可以获取该参数。',
            'type' => 'string',
            'required' => true,
            'example' => '4de2c367****8c585e5992**',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

必须传入实例ID，否则调用会失败。您可在物联网平台控制台的**实例概览**页面，查看您的实例ID。
><notice>
如果公共实例没有ID，请参见[如何获取实例ID](~~267533~~)。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.speechsolution.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '查询结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '设备的状态。

- **ONLINE**：在线。
- **OFFLINE**：离线。
- **UNACTIVE**：未激活。
- **DISABLE**：禁用。',
                    'type' => 'string',
                    'example' => 'ONLINE',
                  ),
                  'TotalSpace' => 
                  array (
                    'description' => '设备的总空间，单位KB。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '2000',
                  ),
                  'ProductKey' => 
                  array (
                    'description' => '产品的唯一标识。',
                    'type' => 'string',
                    'example' => 'a1BwAGV****',
                  ),
                  'DeviceName' => 
                  array (
                    'description' => '设备名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'SpeechListUpdateTime' => 
                  array (
                    'description' => '设备中语料列表的更新时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1620624606000',
                  ),
                  'AvailableSpace' => 
                  array (
                    'description' => '设备的可用空间，单位KB。',
                    'type' => 'number',
                    'format' => 'float',
                    'example' => '200',
                  ),
                  'IotId' => 
                  array (
                    'description' => '物联网平台为设备颁发的ID，是设备的唯一标识符。',
                    'type' => 'string',
                    'example' => '4de2c367****8c585e5992**',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speechsolution.NotSigned\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Status\\": \\"ONLINE\\",\\n    \\"TotalSpace\\": 2000,\\n    \\"ProductKey\\": \\"a1BwAGV****\\",\\n    \\"DeviceName\\": \\"test\\",\\n    \\"SpeechListUpdateTime\\": 1620624606000,\\n    \\"AvailableSpace\\": 200,\\n    \\"IotId\\": \\"4de2c367****8c585e5992**\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetSpeechDeviceDetailResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <Status>ONLINE</Status>\\n    <IotId>4de2c367****8c585e5992**</IotId>\\n    <SpeechListUpdateTime>1620624606000</SpeechListUpdateTime>\\n    <AvailableSpace>200</AvailableSpace>\\n    <TotalSpace>2000</TotalSpace>\\n    <ProductKey>a1BwAGV****</ProductKey>\\n    <DeviceName>test</DeviceName>\\n</Data>\\n<Success>true</Success>\\n</GetSpeechDeviceDetailResponse>","errorExample":""}]',
      'title' => '查询播报设备的详情',
      'summary' => '查询播报设备的详情，包括设备的状态、设备的可用空间等。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDeviceSpeech' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '物联网平台为设备颁发的ID，是设备的唯一标识符。可以调用[QueryDeviceInfo](~~257184~~)查询设备ID。',
            'type' => 'string',
            'required' => true,
            'example' => '4de2c367****8c585e5992**',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

必须传入实例ID，否则调用会失败。您可在物联网平台控制台的**实例概览**页面，查看您的实例ID。
><notice>
如果公共实例没有ID，请参见[如何获取实例ID](~~267533~~)。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceSpeechList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待删除的语料列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'BizCode' => 
                array (
                  'description' => '语料标识。调用[QuerySpeech](~~217577~~)可以查询语料标识。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'identifying',
                ),
                'AudioFormat' => 
                array (
                  'description' => '音频格式，仅支持**wav**、**mp3**、**amr**格式。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'wav',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。

',
                'type' => 'string',
                'example' => 'iot.speechsolution.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speechsolution.NotSigned\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteDeviceSpeechResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Success>true</Success>\\n</DeleteDeviceSpeechResponse>","errorExample":""}]',
      'title' => 'DeleteDeviceSpeech',
      'summary' => '调用该接口删除设备中的语料。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetShareTaskByDeviceOpen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备ID。
><notice> **IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果传入该参数，则无需传入**ProductKey**和**DeviceName**。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'y4u2weAIrpp****WHMle1234',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64********',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属的产品**ProductKey**。
><notice> 如果传入该参数，需同时传入**DeviceName**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'a2Yw*****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备的名称。
><notice> 如果传入该参数，需同时传入**ProductKey**。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'device1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'Data' => 
              array (
                'description' => '返回的分享任务Code。',
                'type' => 'string',
                'example' => 'Md3ZiTL888K9llXDy7890***********',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.system.InstanceNotFound',
            'errorMessage' => 'The instance ID does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"Data\\": \\"Md3ZiTL888K9llXDy7890***********\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetShareTaskByDeviceOpenResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>Md3ZiTL888K9llXDy7890***********</Data>\\n<Code/>\\n<Success>true</Success>\\n</GetShareTaskByDeviceOpenResponse>","errorExample":""}]',
      'title' => 'GetShareTaskByDeviceOpen',
      'summary' => '调用该接口根据设备信息查询分享任务。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为40。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetShareSpeechModelAudio' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ShareTaskId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '分享任务的**任务ID**。

您可在**千里传音语音播报服务**控制台的**分享语料管理**页面，获取**任务ID**。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        2 => 
        array (
          'name' => 'SpeechModelCodeList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '共享语料的**语料标识**列表，最多可传入10个**语料标识**。

您可在**千里传音语音播报服务**控制台的**分享语料管理**下**任务详情**页面，获取**语料标识**。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'WSD****',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'data' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '语音文件的URL。',
                      'type' => 'string',
                      'example' => 'https://********',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.speech.InvalidIotInstanceId',
            'errorMessage' => 'Invalid instance ID.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"data\\": [\\n      \\"https://********\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetShareSpeechModelAudioResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <data>https://********</data>\\n</Data>\\n<Success>true</Success>\\n</GetShareSpeechModelAudioResponse>","errorExample":""}]',
      'title' => 'GetShareSpeechModelAudio',
      'summary' => '调用该接口获取共享语料的语音文件。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetSpeechLicenseDeviceStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-e3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'An internal error occurred. Try again later.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'AF71BF1D-B552-47CD-B34B-352557627992',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'AvailableQuota' => 
                  array (
                    'description' => '可用License数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'ExpiredQuota' => 
                  array (
                    'description' => '已过期的License数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'ExpiringQuota' => 
                  array (
                    'description' => '即将过期License数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.common.AuthActionPermissionDeny',
            'errorMessage' => 'The authorization fails.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.system.InstanceNotFound',
            'errorMessage' => 'The instance ID does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"An internal error occurred. Try again later.\\",\\n  \\"RequestId\\": \\"AF71BF1D-B552-47CD-B34B-352557627992\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"AvailableQuota\\": 100,\\n    \\"ExpiredQuota\\": 100,\\n    \\"ExpiringQuota\\": 100\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetSpeechLicenseDeviceStatisticsResponse>\\n<RequestId>AF71BF1D-B552-47CD-B34B-352557627992</RequestId>\\n<Data>\\n    <ExpiredQuota>100</ExpiredQuota>\\n    <ExpiringQuota>100</ExpiringQuota>\\n    <AvailableQuota>100</AvailableQuota>\\n</Data>\\n<Success>true</Success>\\n</GetSpeechLicenseDeviceStatisticsResponse>","errorExample":""}]',
      'title' => 'GetSpeechLicenseDeviceStatistics',
      'summary' => '调用该接口查询千里传音License设备统计。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为3。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '   调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySpeechLicenseDeviceList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 对于新版公共实例或企业版实例，实例有ID值，必须传入该ID值，否则调用会失败。
- 对于旧版公共实例，实例无ID值，无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-e3***',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定每页返回数据的最大条数，取值范围：1~50，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
            'maximum' => '100',
            'minimum' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属的产品**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****',
          ),
        ),
        3 => 
        array (
          'name' => 'PageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页码，从1开始，最大为10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备名称查询条件，模糊匹配。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'CheckGroupId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '检查设备分组ID，返回设备是否在该分组下。',
            'type' => 'string',
            'required' => false,
            'example' => '4de2c367****8c585e5992**',
          ),
        ),
        6 => 
        array (
          'name' => 'LicenseStatusList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'License状态查询条件。

- **NORMAL**：正常。
- **EXPIRE**：到期。
- **EXPIRING**：即将到期。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'NORMAL',
            'maxItems' => 3,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '查询结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页返回的数据条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Total' => 
                  array (
                    'description' => '返回数据的总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'DeviceList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'item' => 
                      array (
                        'description' => '设备列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ExpiryTime' => 
                            array (
                              'description' => 'License到期时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1620624606000',
                            ),
                            'ProductKey' => 
                            array (
                              'description' => '设备所属产品的**ProductKey**。',
                              'type' => 'string',
                              'example' => 'a1BwAGV****',
                            ),
                            'LicenseStatus' => 
                            array (
                              'description' => 'License状态。

- **NORMAL**：正常。
- **EXPIRE**：到期。
- **EXPIRING**：即将到期。',
                              'type' => 'string',
                              'example' => 'NORMAL',
                            ),
                            'ProductName' => 
                            array (
                              'description' => '设备所属产品的名称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'DeviceName' => 
                            array (
                              'description' => '设备名称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'InSpecifiedGroup' => 
                            array (
                              'description' => '当前设备是否在指定的设备分组下。',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                            'DeviceStatus' => 
                            array (
                              'description' => '设备状态。

- **ONLINE**：在线。
- **OFFLINE**：离线。
- **UNACTIVE**：未激活。
- **DISABLE**：禁用。
- **DELETE**：已删除。',
                              'type' => 'string',
                              'example' => 'ONLINE',
                            ),
                            'IotId' => 
                            array (
                              'description' => '物联网平台为设备颁发的ID，是设备的唯一标识符。',
                              'type' => 'string',
                              'example' => 'Q7uOhVRdZRRlDnTLv****00100',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'RequestParamError',
            'errorMessage' => 'The request params error.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"PageId\\": 1,\\n    \\"Total\\": 200,\\n    \\"DeviceList\\": {\\n      \\"item\\": [\\n        {\\n          \\"ExpiryTime\\": 1620624606000,\\n          \\"ProductKey\\": \\"a1BwAGV****\\",\\n          \\"LicenseStatus\\": \\"NORMAL\\",\\n          \\"ProductName\\": \\"test\\",\\n          \\"DeviceName\\": \\"test\\",\\n          \\"InSpecifiedGroup\\": true,\\n          \\"DeviceStatus\\": \\"ONLINE\\",\\n          \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv****00100\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySpeechLicenseDeviceListResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>200</Total>\\n    <DeviceList>\\n        <item>\\n            <IotId>Q7uOhVRdZRRlDnTLv****00100</IotId>\\n            <ProductName>test</ProductName>\\n            <LicenseStatus>NORMAL</LicenseStatus>\\n            <DeviceStatus>ONLINE</DeviceStatus>\\n            <ExpiryTime>1620624606000</ExpiryTime>\\n            <InSpecifiedGroup>true</InSpecifiedGroup>\\n            <ProductKey>a1BwAGV****</ProductKey>\\n            <DeviceName>test</DeviceName>\\n        </item>\\n    </DeviceList>\\n</Data>\\n<Success>true</Success>\\n</QuerySpeechLicenseDeviceListResponse>","errorExample":""}]',
      'title' => 'QuerySpeechLicenseDeviceList',
      'summary' => '调用该接口查询千里传音License设备列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为3。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddShareTaskDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ShareTaskId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '分享任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64********',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '待添加设备所属产品的**ProductKey**。

您可以在物联网平台控制台或调用接口[QueryProductList](~~69271~~)，查看当前实例下所有产品的信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'a2YwD23***',
          ),
        ),
        3 => 
        array (
          'name' => 'IotIdList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待添加的设备列表，需传入设备对应的**IotId**，该参数可以通过调用[QueryDevice](~~69905~~)获取。

>如果传入该参数，则无需传入**ProductKey**。如果您同时传入**IotIdList**和**ProductKey**，则以**IotIdList**为准。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'y4u2weAIrpp****WHMle1234	',
            'maxItems' => 10000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'An internal error occurred. Try again later.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '671D0F8F-FDC7-4B12-93FA-336C079C965A',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的添加结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'ProgressId' => 
                  array (
                    'description' => '进度ID。',
                    'type' => 'string',
                    'example' => 'Md3ZiTL888K9llXDy7890***********',
                  ),
                  'SuccessSum' => 
                  array (
                    'description' => '添加成功的设备数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Progress' => 
                  array (
                    'description' => '添加进度，可取值0～100。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'FailedResultCsvFile' => 
                  array (
                    'description' => '添加失败的设备列表文件。',
                    'type' => 'string',
                    'example' => 'https://****.csv',
                  ),
                  'FailSum' => 
                  array (
                    'description' => '添加失败的设备数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.speech.InvalidIotInstanceId',
            'errorMessage' => 'Invalid instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.sharetask.EmptyShareDevice',
            'errorMessage' => 'no device to share.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.sharetask.ShareDeviceProcessing',
            'errorMessage' => 'share device processing.',
          ),
          3 => 
          array (
            'errorCode' => 'Iot.sharetask.ImportDevicePartFail',
            'errorMessage' => 'Failed to import some of the devices.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"An internal error occurred. Try again later.\\",\\n  \\"RequestId\\": \\"671D0F8F-FDC7-4B12-93FA-336C079C965A\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ProgressId\\": \\"Md3ZiTL888K9llXDy7890***********\\",\\n    \\"SuccessSum\\": 10,\\n    \\"Progress\\": 100,\\n    \\"FailedResultCsvFile\\": \\"https://****.csv\\",\\n    \\"FailSum\\": 2\\n  }\\n}","errorExample":""},{"type":"xml","example":"<AddShareTaskDeviceResponse>\\n<RequestId>671D0F8F-FDC7-4B12-93FA-336C079C965A</RequestId>\\n<Data>\\n    <FailedResultCsvFile>https://****.csv</FailedResultCsvFile>\\n    <Progress>100</Progress>\\n    <ProgressId>Md3ZiTL888K9llXDy7890***********</ProgressId>\\n    <FailSum>2</FailSum>\\n    <SuccessSum>10</SuccessSum>\\n</Data>\\n<Success>true</Success>\\n</AddShareTaskDeviceResponse>","errorExample":""}]',
      'title' => 'AddShareTaskDevice',
      'summary' => '调用该接口添加设备到分享任务。',
      'description' => '## 使用说明
单次调用本接口添加设备的数量不能超过50。

## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteShareTaskDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ShareTaskId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '分享任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        2 => 
        array (
          'name' => 'IotIdList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待删除的设备列表，需传入设备对应的**IotId**，该参数可以通过调用[QueryDevice](~~69905~~)获取。
',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
            'maxItems' => 10000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'An internal error occurred. Try again later.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'AF71BF1D-B552-47CD-B34B-352557627992',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回删除结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'ProgressId' => 
                  array (
                    'description' => '进度ID。',
                    'type' => 'string',
                    'example' => 'Md3ZiTL888K9llXDy7890***********',
                  ),
                  'Progress' => 
                  array (
                    'description' => '进度，取值为0～100。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.speech.InvalidIotInstanceId',
            'errorMessage' => 'invalid instance id',
          ),
          1 => 
          array (
            'errorCode' => 'iot.sharetask.EmptyShareDevice',
            'errorMessage' => 'no device to share',
          ),
          2 => 
          array (
            'errorCode' => 'iot.sharetask.ShareDeviceProcessing',
            'errorMessage' => 'share device processing',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"An internal error occurred. Try again later.\\",\\n  \\"RequestId\\": \\"AF71BF1D-B552-47CD-B34B-352557627992\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ProgressId\\": \\"Md3ZiTL888K9llXDy7890***********\\",\\n    \\"Progress\\": 100\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DeleteShareTaskDeviceResponse>\\n<RequestId>AF71BF1D-B552-47CD-B34B-352557627992</RequestId>\\n<Data>\\n    <Progress>100</Progress>\\n    <ProgressId>Md3ZiTL888K9llXDy7890***********</ProgressId>\\n</Data>\\n<Success>true</Success>\\n</DeleteShareTaskDeviceResponse>","errorExample":""}]',
      'title' => 'DeleteShareTaskDevice',
      'summary' => '调用该接口删除分享任务设备。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryProjectShareDeviceList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定每页返回数据的最大条数，取值范围：1~50，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属的产品**ProductKey**。

',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****	',
          ),
        ),
        3 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '当前页码，从1开始，最大为10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备名称查询条件，模糊匹配。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'An internal error occurred. Try again later.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '671D0F8F-FDC7-4B12-93FA-336C079C965A',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '查询结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页返回的数据条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Total' => 
                  array (
                    'description' => '返回数据的总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'DeviceList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'items' => 
                      array (
                        'description' => '返回的设备列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ProductKey' => 
                            array (
                              'description' => '设备所属产品的**ProductKey**。',
                              'type' => 'string',
                              'example' => 'a1BwAGV****',
                            ),
                            'DeviceName' => 
                            array (
                              'description' => '设备名称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'Sharable' => 
                            array (
                              'description' => '是否可以分享。

- **1**：可以。

- **0**：不可以。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1',
                            ),
                            'IotId' => 
                            array (
                              'description' => '物联网平台为设备颁发的ID，是设备的唯一标识符。',
                              'type' => 'string',
                              'example' => 'Q7uOhVRdZRRlDnTLv****00100',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
          2 => 
          array (
            'errorCode' => 'iot.speech.InvalidIotProjectCode',
            'errorMessage' => 'invalid project code',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"An internal error occurred. Try again later.\\",\\n  \\"RequestId\\": \\"671D0F8F-FDC7-4B12-93FA-336C079C965A\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"PageId\\": 1,\\n    \\"Total\\": 200,\\n    \\"DeviceList\\": {\\n      \\"items\\": [\\n        {\\n          \\"ProductKey\\": \\"a1BwAGV****\\",\\n          \\"DeviceName\\": \\"test\\",\\n          \\"Sharable\\": 1,\\n          \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv****00100\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryProjectShareDeviceListResponse>\\n<RequestId>671D0F8F-FDC7-4B12-93FA-336C079C965A</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>200</Total>\\n    <DeviceList>\\n        <items>\\n            <IotId>Q7uOhVRdZRRlDnTLv****00100</IotId>\\n            <Sharable>1</Sharable>\\n            <ProductKey>a1BwAGV****</ProductKey>\\n            <DeviceName>test</DeviceName>\\n        </items>\\n    </DeviceList>\\n</Data>\\n<Success>true</Success>\\n</QueryProjectShareDeviceListResponse>","errorExample":""}]',
      'title' => 'QueryProjectShareDeviceList',
      'summary' => '调用该接口查询项目的分享设备列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为3。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryShareTaskDeviceList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ShareTaskId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '分享任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-e3***',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定每页返回数据的最大条数，取值范围：1~50，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '当前页码，从1开始，最大为10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备名称查询条件，模糊匹配。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '查询结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页返回的数据条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Total' => 
                  array (
                    'description' => '返回数据的总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'DeviceList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'items' => 
                      array (
                        'description' => '设备列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ProductKey' => 
                            array (
                              'description' => '设备所属产品的**ProductKey**。',
                              'type' => 'string',
                              'example' => 'a1BwAGV****',
                            ),
                            'GmtAdded' => 
                            array (
                              'description' => '添加时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1620624606000',
                            ),
                            'DeviceName' => 
                            array (
                              'description' => '设备名称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'IotId' => 
                            array (
                              'description' => '物联网平台为设备颁发的ID，是设备的唯一标识符。',
                              'type' => 'string',
                              'example' => 'Q7uOhVRdZRRlDnTLv****00100',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'RequestParamError',
            'errorMessage' => 'The request params error.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"PageId\\": 1,\\n    \\"Total\\": 200,\\n    \\"DeviceList\\": {\\n      \\"items\\": [\\n        {\\n          \\"ProductKey\\": \\"a1BwAGV****\\",\\n          \\"GmtAdded\\": 1620624606000,\\n          \\"DeviceName\\": \\"test\\",\\n          \\"IotId\\": \\"Q7uOhVRdZRRlDnTLv****00100\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryShareTaskDeviceListResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>200</Total>\\n    <DeviceList>\\n        <items>\\n            <IotId>Q7uOhVRdZRRlDnTLv****00100</IotId>\\n            <GmtAdded>1620624606000</GmtAdded>\\n            <ProductKey>a1BwAGV****</ProductKey>\\n            <DeviceName>test</DeviceName>\\n        </items>\\n    </DeviceList>\\n</Data>\\n<Success>true</Success>\\n</QueryShareTaskDeviceListResponse>","errorExample":""}]',
      'title' => 'QueryShareTaskDeviceList',
      'summary' => '调用该接口查询分享任务的设备列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为3。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ShareSpeechByCombination' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'SpeechId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '下发给设备的唯一播报ID。
><notice>
若不传入则由系统生成，若业务上进行重试播报，需传入重试的播报ID，避免出现重复业务播报。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => '42000011392021112380********',
          ),
        ),
        2 => 
        array (
          'name' => 'AudioFormat',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '音频格式，仅支持**wav**、**mp3**、**amr**格式。',
            'type' => 'string',
            'required' => false,
            'example' => 'wav',
          ),
        ),
        3 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属的产品**ProductKey**。如果传入该参数，需同时传入**DeviceName**。

',
            'type' => 'string',
            'required' => false,
            'example' => 'a1BwAGV****	',
          ),
        ),
        4 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备的**DeviceName**。
如果传入该参数，需同时传入**ProductKey**。

 ',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'IotId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备ID，该参数可以通过调用[QuerySpeechDevice](~~280408~~)获取。

>如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        6 => 
        array (
          'name' => 'CombinationList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '组合播报内容，包括以下类型：

- 播报已成功推送至设备中的语料，填入语料的标识。

- 播报支持的动态内容，根据设备支持的具体规则传入。
    
    示例：金额，格式为`{$xxx}`，xxx为具体的金额数，如`{$1000}`，则设备播报**1000元**。
    
设备根据下发的CombinationList进行顺序播报。
    
    ',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'ZFBDZ',
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'An internal error occurred. Try again later.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '671D0F8F-FDC7-4B12-93FA-336C079C965A',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.devicespeech.ProjectNotFound',
            'errorMessage' => 'project not found',
          ),
          1 => 
          array (
            'errorCode' => 'iot.speechsolution.ProjectHasStopped',
            'errorMessage' => 'project has stopped',
          ),
          2 => 
          array (
            'errorCode' => 'iot.devicespeech.InvalidDevice',
            'errorMessage' => 'invalid device to speech',
          ),
          3 => 
          array (
            'errorCode' => 'iot.devicespeech.DeviceNotActived',
            'errorMessage' => 'device not actived',
          ),
          4 => 
          array (
            'errorCode' => 'iot.devicespeech.DeviceOffline',
            'errorMessage' => 'device is offline',
          ),
          5 => 
          array (
            'errorCode' => 'iot.devicespeech.RequestLimit',
            'errorMessage' => 'too much request',
          ),
          6 => 
          array (
            'errorCode' => 'iot.devicespeech.InvalidAudioFormat',
            'errorMessage' => 'invalid audio format',
          ),
          7 => 
          array (
            'errorCode' => 'iot.devicespeech.InvalidProductKeyAndDeviceName',
            'errorMessage' => 'invalid productKey and deviceName',
          ),
          8 => 
          array (
            'errorCode' => 'iot.devicespeech.InvalidDeviceId',
            'errorMessage' => 'invalid iot device id',
          ),
          9 => 
          array (
            'errorCode' => 'iot.speechservice.NotSigned',
            'errorMessage' => 'speech service has not been signed',
          ),
          10 => 
          array (
            'errorCode' => 'iot.devicespeech.InvalidSpeechId',
            'errorMessage' => 'invalid device speech id',
          ),
          11 => 
          array (
            'errorCode' => 'iot.devicespeech.ThingModelNotDefine',
            'errorMessage' => 'thing model not define',
          ),
          12 => 
          array (
            'errorCode' => 'iot.devicespeech.InvalidLicenseDevice',
            'errorMessage' => 'invalid speech license device',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"An internal error occurred. Try again later.\\",\\n  \\"RequestId\\": \\"671D0F8F-FDC7-4B12-93FA-336C079C965A\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ShareSpeechByCombinationResponse>\\n<RequestId>671D0F8F-FDC7-4B12-93FA-336C079C965A</RequestId>\\n<Success>true</Success>\\n</ShareSpeechByCombinationResponse>","errorExample":""}]',
      'title' => 'ShareSpeechByCombination',
      'summary' => '调用该接口推送共享音频到设备播报。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PageQuerySharedSpeechOpen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '要查询的设备ID。

> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**。**IotId**作为设备唯一标识符，和**ProductKey**与**DeviceName**组合是一一对应的关系。如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'Q7uOhVRdZRRlDnTLv****00100',
          ),
        ),
        1 => 
        array (
          'name' => 'ShareTaskCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料分享任务的分享码。

您可在**千里传音语音播报服务**的**分享语料管理**页面，获取**分享码**。',
            'type' => 'string',
            'required' => false,
            'example' => 'ebed9280_ba25_48df_80c2_****',
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的记录数量，最大不超过100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'sd34****',
          ),
        ),
        5 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '要查询的页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'DeviceName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设备名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'device1',
          ),
        ),
        7 => 
        array (
          'name' => 'Status',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '要查询语料的状态。可取值：

- **1**：等待审核。
- **2**：审核通过。
- **3**：审核拒绝。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'String	iot.system.SystemException	',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功，返回的结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页显示数据条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Total' => 
                  array (
                    'description' => '数据记录总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'ResultData' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Data' => 
                      array (
                        'description' => '返回的共享语料信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '语料状态。返回值：

- **1**：等待审核。
- **2**：审核通过。
- **3**：审核拒绝。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'Voice' => 
                            array (
                              'description' => '语料播报声音。',
                              'type' => 'string',
                              'example' => 'Siyue',
                            ),
                            'BizCode' => 
                            array (
                              'description' => '语料标识。项目下唯一。',
                              'type' => 'string',
                              'example' => 'identifying',
                            ),
                            'Code' => 
                            array (
                              'description' => '模版唯一标识。',
                              'type' => 'string',
                              'example' => 'ws****',
                            ),
                            'Text' => 
                            array (
                              'description' => '语料内容。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'SpeechRate' => 
                            array (
                              'description' => '播报速度，取值范围：-500~500。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '50',
                            ),
                            'Volume' => 
                            array (
                              'description' => '音量大小，取值范围：0~100。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '50',
                            ),
                            'AudioFormat' => 
                            array (
                              'description' => '音频格式，仅支持**wav**、**mp3**、**amr**格式。',
                              'type' => 'string',
                              'example' => 'wav',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.IllegalRequest',
            'errorMessage' => 'The request parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
          3 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidParam',
            'errorMessage' => 'invalid param',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"String\\\\tiot.system.SystemException\\\\t\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 10,\\n    \\"PageId\\": 1,\\n    \\"Total\\": 100,\\n    \\"ResultData\\": {\\n      \\"Data\\": [\\n        {\\n          \\"Status\\": 1,\\n          \\"Voice\\": \\"Siyue\\",\\n          \\"BizCode\\": \\"identifying\\",\\n          \\"Code\\": \\"ws****\\",\\n          \\"Text\\": \\"test\\",\\n          \\"SpeechRate\\": 50,\\n          \\"Volume\\": 50,\\n          \\"AudioFormat\\": \\"wav\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<PageQuerySharedSpeechOpenResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>10</PageSize>\\n    <Total>100</Total>\\n    <ResultData>\\n        <Data>\\n            <Status>1</Status>\\n            <Volume>50</Volume>\\n            <Text>test</Text>\\n            <AudioFormat>wav</AudioFormat>\\n            <Voice>Siyue</Voice>\\n            <Code>ws****</Code>\\n            <SpeechRate>50</SpeechRate>\\n            <BizCode>identifying</BizCode>\\n        </Data>\\n    </ResultData>\\n</Data>\\n<Success>true</Success>\\n</PageQuerySharedSpeechOpenResponse>","errorExample":""}]',
      'title' => 'PageQuerySharedSpeechOpen',
      'summary' => '被共享方调用该接口分页查询共享的语料。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为100。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CountSpeechBroadcastHour' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ShareTaskCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料分享任务的分享码。

您可在**千里传音语音播报服务**的**分享语料管理**页面，获取**分享码**。',
            'type' => 'string',
            'required' => true,
            'example' => 'ebed9280_ba25_48df_80c2_****',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        2 => 
        array (
          'name' => 'QueryDateTimeHour',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的时间。2020090919表示2020年09月09日19时。',
            'type' => 'string',
            'required' => true,
            'example' => '2020090919',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'String	iot.system.SystemException	',
              ),
              'Data' => 
              array (
                'description' => '共享播报的小时数据条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1000',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.speech.InvalidIotInstanceId',
            'errorMessage' => 'invalid instance id',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidParam',
            'errorMessage' => 'invalid param',
          ),
          2 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"String\\\\tiot.system.SystemException\\\\t\\",\\n  \\"Data\\": 1000,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CountSpeechBroadcastHourResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Data>1000</Data>\\n<Success>true</Success>\\n</CountSpeechBroadcastHourResponse>","errorExample":""}]',
      'title' => 'CountSpeechBroadcastHour',
      'summary' => '调用该接口分页查询千里传音中共享播报的小时数据量。',
      'description' => '## 使用说明

调用该接口可查询的共享播报数据的时间会延迟6小时。例如早上07:15分播报数据，需要延迟6个小时后，即在13:15后才能查询到07:15分播报的数据。


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为100。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PageQuerySpeechBroadcastHour' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ShareTaskCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料分享任务的分享码。

您可在**千里传音语音播报服务**的**分享语料管理**页面，获取**分享码**。',
            'type' => 'string',
            'required' => true,
            'example' => 'ebed9280_ba25_48df_80c2_****',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无**实例概览**页面或ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-2w****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的记录数量，默认值为10，最大不超过2,000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '2000',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'PageToken',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '下一页标识，首次查询无需传入。后续查询需使用的**PageToken**，要从上一次查询的返回结果中获取。

例如查询第n页时，传入查询第n-1页返回的**PageToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'TGlzdFJlc291cm****',
          ),
        ),
        4 => 
        array (
          'name' => 'QueryDateTimeHour',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的时间。2020090919表示2020年09月09日19时。',
            'type' => 'string',
            'required' => true,
            'example' => '2020090919',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E4C0FF92-2A86-41DB-92D3-73B60310D25E',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功，返回的结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页显示数据条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'Total' => 
                  array (
                    'description' => '数据记录总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'PageToken' => 
                  array (
                    'description' => '下一页标识。可在下次请求时传入，来获取下一页数据。

如果**PageToken**值为空，表示没有下一页数据。',
                    'type' => 'string',
                    'example' => 'TGlzdFJlc291cm****',
                  ),
                  'ResultData' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Data' => 
                      array (
                        'description' => '返回的共享播报数据。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Msg' => 
                            array (
                              'description' => '播报结果信息。',
                              'type' => 'string',
                              'example' => '播报成功。',
                            ),
                            'StartTime' => 
                            array (
                              'description' => '播报开始时间戳，单位为毫秒。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1663210172207',
                            ),
                            'ProductKey' => 
                            array (
                              'description' => '设备所属产品的**ProductKey**。',
                              'type' => 'string',
                              'example' => 'sd34****',
                            ),
                            'DeviceName' => 
                            array (
                              'description' => '设备名称。',
                              'type' => 'string',
                              'example' => 'device1',
                            ),
                            'ShareTaskCode' => 
                            array (
                              'description' => '共享码。',
                              'type' => 'string',
                              'example' => 'ebed9280_ba25_48df_80c2_****',
                            ),
                            'SpeechId' => 
                            array (
                              'description' => '播报ID。',
                              'type' => 'string',
                              'example' => '42000011392021112380****',
                            ),
                            'Code' => 
                            array (
                              'description' => '播报结果码。返回值：

- **0**：语料播报成功。
- **1**：语料已播报，重复播报。
- **2**：语料不存在。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '0',
                            ),
                            'Speechs' => 
                            array (
                              'description' => '播报语料。JSON数组格式。',
                              'type' => 'string',
                              'example' => '["ANC","CDF"]',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.speech.InvalidIotInstanceId',
            'errorMessage' => 'invalid instance id',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidParam',
            'errorMessage' => 'invalid param',
          ),
          2 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 10,\\n    \\"PageId\\": 1,\\n    \\"Total\\": 100,\\n    \\"PageToken\\": \\"TGlzdFJlc291cm****\\",\\n    \\"ResultData\\": {\\n      \\"Data\\": [\\n        {\\n          \\"Msg\\": \\"播报成功。\\",\\n          \\"StartTime\\": 1663210172207,\\n          \\"ProductKey\\": \\"sd34****\\",\\n          \\"DeviceName\\": \\"device1\\",\\n          \\"ShareTaskCode\\": \\"ebed9280_ba25_48df_80c2_****\\",\\n          \\"SpeechId\\": \\"42000011392021112380****\\",\\n          \\"Code\\": 0,\\n          \\"Speechs\\": \\"[\\\\\\"ANC\\\\\\",\\\\\\"CDF\\\\\\"]\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<PageQuerySpeechBroadcastHourResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>10</PageSize>\\n    <Total>100</Total>\\n    <PageToken>TGlzdFJlc291cm****</PageToken>\\n    <ResultData>\\n        <Data>\\n            <Msg>播报成功。</Msg>\\n            <Speechs>[\\"ANC\\",\\"CDF\\"]</Speechs>\\n            <ShareTaskCode>ebed9280_ba25_48df_80c2_****</ShareTaskCode>\\n            <StartTime>1663210172207</StartTime>\\n            <Code>0</Code>\\n            <ProductKey>sd34****</ProductKey>\\n            <SpeechId>42000011392021112380****</SpeechId>\\n            <DeviceName>device1</DeviceName>\\n        </Data>\\n    </ResultData>\\n</Data>\\n<Success>true</Success>\\n</PageQuerySpeechBroadcastHourResponse>","errorExample":""}]',
      'title' => 'PageQuerySpeechBroadcastHour',
      'summary' => '调用该接口分页查询千里传音中共享播报的小时数据。',
      'description' => '## 使用说明

调用该接口可查询的共享播报数据的时间会延迟6小时。例如早上07:15分播报数据，需要延迟6个小时后，即在13:15后才能查询到07:15分播报的数据。


## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为100。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSharePromotionActivity' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SharePromotionActivityName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '促销活动的名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'task01',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页签，查看当前实例的ID。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cv3********',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '促销活动开始时间的毫秒级时间戳。不传入，表示促销活动没有开始时间的限制。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1691547072000',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '促销活动结束时间的毫秒级时间戳。不传入，表示促销活动没有结束时间的限制。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1694315533000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用结果状态码：
- 调用成功，返回空值。
- 调用失败，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.speech.InvalidIotInstanceId',
              ),
              'Data' => 
              array (
                'description' => '返回的促销活动ID。',
                'type' => 'string',
                'example' => '61******_****_4901_****_47***********',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'Invalid instance ID.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.speech.InvalidIotInstanceId',
            'errorMessage' => 'Invalid instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.check.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speech.InvalidIotInstanceId\\",\\n  \\"Data\\": \\"61******_****_4901_****_47***********\\",\\n  \\"ErrorMessage\\": \\"Invalid instance ID.\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateSharePromotionActivityResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>61******_****_4901_****_47***********</Data>\\n<Code/>\\n<Success>true</Success>\\n</CreateSharePromotionActivityResponse>","errorExample":""}]',
      'title' => 'CreateSharePromotionActivity',
      'summary' => '调用该接口创建千里传音分享任务的促销活动。',
      'description' => '## 使用说明
由于一个设备只能加入一个分享任务且只能播报该分享任务中共享语料，千里传音语音播报服务提供了促销活动功能，可指定分享任务中共享设备播报促销活动中的语料。

配置流程如下：

1. 调用本接口为当前实例下所有分享任务创建促销活动。
2. 调用接口**QuerySharePromotionActivityAuditResult**，查询指定分享任务的促销活动审核结果，确认指定分享任务的促销活动审核通过。
3. 调用接口**CreateSharePromotionSpeechModel**添加促销活动的语料。
4. 调用接口**AddDeviceToSharePromotion**将千里传音分享任务中已有共享设备添加到促销活动中。
5. 调用接口**ShareSpeechByCombination**播放促销活动的共享语料。

分享任务的详细配置，请参见[使用共享设备播报分享语料](~~607661~~)。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySharePromotionActivityAuditResult' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SharePromotionActivityId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '促销活动ID。

调用接口**CreateSharePromotionActivity**返回的**Data**值。',
            'type' => 'string',
            'required' => true,
            'example' => '61******_****_4901_****_47***********',
          ),
        ),
        1 => 
        array (
          'name' => 'ShareTaskCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '分享任务的分享码。

分享任务的分享码信息，请参见[使用共享设备播报分享语料](~~607661~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '52******_7**e_4**3_9**e_61**********',
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页签，查看当前实例的ID。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cv3********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用结果状态码：
- 调用成功，返回空值。
- 调用失败，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.speech.InvalidIotInstanceId',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'Invalid instance ID.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功后，返回的审核结果数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'AuditResult' => 
                  array (
                    'description' => '审核结果。

- **1**：待审核。
- **2**：审核通过。
- **3**：审核拒绝。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.speech.InvalidIotInstanceId',
            'errorMessage' => 'Invalid instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.check.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speech.InvalidIotInstanceId\\",\\n  \\"ErrorMessage\\": \\"Invalid instance ID.\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"AuditResult\\": 2\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySharePromotionActivityAuditResultResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <AuditResult>2</AuditResult>\\n</Data>\\n<Code/>\\n<Success>true</Success>\\n</QuerySharePromotionActivityAuditResultResponse>","errorExample":""}]',
      'title' => 'QuerySharePromotionActivityAuditResult',
      'summary' => '调用该接口查询千里传音分享任务的促销活动审核结果。',
      'description' => '## 使用说明
促销活动使用的详细说明，请参见**CreateSharePromotionActivity**接口文档的**使用说明**。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。

> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddDeviceToSharePromotion' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SharePromotionActivityId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '促销活动ID。

调用接口**CreateSharePromotionActivity**返回的**Data**值。',
            'type' => 'string',
            'required' => true,
            'example' => '61******_****_4901_****_47***********',
          ),
        ),
        1 => 
        array (
          'name' => 'ShareTaskCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '分享任务的分享码。

分享任务的分享码信息，请参见[使用共享设备播报分享语料](~~607661~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '52******_7**e_4**3_9**e_61**********',
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页签，查看当前实例的ID。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cv3********',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceSimpleInfoList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ProductKey' => 
                array (
                  'description' => '待添加共享设备所属产品的**ProductKey**。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'a2YwD2****',
                ),
                'DeviceName' => 
                array (
                  'description' => '待添加的共享设备名称。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'device01',
                ),
              ),
            ),
            'required' => true,
            'maxItems' => 200,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用结果状态码：
- 调用成功，返回空值。
- 调用失败，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.speech.InvalidIotInstanceId',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'Invalid instance ID.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的添加结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'FailDeviceSimpleInfoList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'item' => 
                      array (
                        'description' => '添加失败的共享设备列表文件。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ProductKey' => 
                            array (
                              'description' => '添加失败的共享设备所属产品的**ProductKey**。',
                              'type' => 'string',
                              'example' => 'a2YwD2****',
                            ),
                            'DeviceName' => 
                            array (
                              'description' => '添加失败的共享设备名称。',
                              'type' => 'string',
                              'example' => 'device02',
                            ),
                            'FailReason' => 
                            array (
                              'description' => '添加失败的描述。',
                              'type' => 'string',
                              'example' => '设备在共享中不存在',
                            ),
                            'FailCode' => 
                            array (
                              'description' => '添加失败的错误码。

- **1**：设备在共享中不存在。
- **2**：设备已经在大促中存在。
- **3**：批量操作异常，请稍后重试。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.speech.InvalidIotInstanceId',
            'errorMessage' => 'Invalid instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.check.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speech.InvalidIotInstanceId\\",\\n  \\"ErrorMessage\\": \\"Invalid instance ID.\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"FailDeviceSimpleInfoList\\": {\\n      \\"item\\": [\\n        {\\n          \\"ProductKey\\": \\"a2YwD2****\\",\\n          \\"DeviceName\\": \\"device02\\",\\n          \\"FailReason\\": \\"设备在共享中不存在\\",\\n          \\"FailCode\\": 1\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<AddDeviceToSharePromotionResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <FailDeviceSimpleInfoList>\\n        <item>\\n            <FailCode>1</FailCode>\\n            <FailReason>设备在共享中不存在</FailReason>\\n            <ProductKey>a2YwD2****</ProductKey>\\n            <DeviceName>device02</DeviceName>\\n        </item>\\n    </FailDeviceSimpleInfoList>\\n</Data>\\n<Code/>\\n<Success>true</Success>\\n</AddDeviceToSharePromotionResponse>","errorExample":""}]',
      'title' => 'AddDeviceToSharePromotion',
      'summary' => '调用该接口将千里传音分享任务中已有共享设备添加到促销活动中。',
      'description' => '## 使用说明
促销活动使用的详细说明，请参见**CreateSharePromotionActivity**接口文档的**使用说明**。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为3。

> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSharePromotionSpeechModel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Voice',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料播报声音，由系统预设，例如标准女声、标准男声等。可以选择的声音类型通过[GetSpeechVoice](~~217887~~)进行查询，填入返回参数中**VoiceList**中**Value**的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'Xiaoyun',
          ),
        ),
        1 => 
        array (
          'name' => 'SharePromotionActivityId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '促销活动ID。

调用接口**CreateSharePromotionActivity**返回的**Data**值。',
            'type' => 'string',
            'required' => true,
            'example' => '61******_****_4901_****_47***********',
          ),
        ),
        2 => 
        array (
          'name' => 'SpeechModelType',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料类型，仅支持取值目前只支持固定值**custom**，表示自定义语料。',
            'type' => 'string',
            'required' => true,
            'example' => 'custom',
          ),
        ),
        3 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页签，查看当前实例的ID。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cv3********',
          ),
        ),
        4 => 
        array (
          'name' => 'BizCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料标识，由用户自定义，支持英文字母和数字，长度为1~32个字符，项目下保证唯一。

建议将语料语义的拼音首字母设置为语料标识，例如：`支付到账`设置为`ZFDZ`。',
            'type' => 'string',
            'required' => true,
            'example' => 'ZFDZ',
          ),
        ),
        5 => 
        array (
          'name' => 'SpeechRate',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '播报速度，取值范围：-500~500。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'minimum' => '-500',
            'example' => '0',
            'default' => '0',
          ),
        ),
        6 => 
        array (
          'name' => 'AudioFormat',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '音频格式，仅支持**wav**、**mp3**格式。',
            'type' => 'string',
            'required' => true,
            'example' => 'wav',
          ),
        ),
        7 => 
        array (
          'name' => 'Volume',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '音量大小，取值范围：0~100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '0',
            'example' => '50',
            'default' => '50',
          ),
        ),
        8 => 
        array (
          'name' => 'ShareTaskCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '分享任务的分享码。

分享任务的分享码信息，请参见[使用共享设备播报分享语料](~~607661~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '52******_7**e_4**3_9**e_61**********',
          ),
        ),
        9 => 
        array (
          'name' => 'Text',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '语料文本，支持英文字母、汉字和空格，长度为1~100个字符，一个汉字占两个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用结果状态码：
- 调用成功，返回空值。
- 调用失败，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.speech.InvalidIotInstanceId',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'Invalid instance ID.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.speech.InvalidIotInstanceId',
            'errorMessage' => 'Invalid instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.check.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speech.InvalidIotInstanceId\\",\\n  \\"ErrorMessage\\": \\"Invalid instance ID.\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateSharePromotionSpeechModelResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Code/>\\n<Success>true</Success>\\n</CreateSharePromotionSpeechModelResponse>","errorExample":""}]',
      'title' => 'CreateSharePromotionSpeechModel',
      'summary' => '调用该接口为千里传音分享任务的促销活动创建共享语料。',
      'description' => '## 使用说明
促销活动使用的详细说明，请参见[CreateSharePromotionActivity](~~2568449~~)接口文档的“使用说明”。

## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryShareProductNameByProductKey' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ShareTaskCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '分享任务的分享码。

分享任务的分享码信息，请参见[使用共享设备播报分享语料](~~607661~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '52******_7**e_4**3_9**e_61**********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '共享设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a2YwD2****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用结果状态码：
- 调用成功，返回空值。
- 调用失败，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => 'iot.speech.InvalidIotInstanceId',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'Invalid instance ID.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回的结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'ProductName' => 
                  array (
                    'description' => '产品名称。',
                    'type' => 'string',
                    'example' => '播报音响',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.speech.InvalidIotInstanceId',
            'errorMessage' => 'Invalid instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.check.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.system.SystemException',
            'errorMessage' => 'An internal error occurred. Try again later.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.speech.InvalidIotInstanceId\\",\\n  \\"ErrorMessage\\": \\"Invalid instance ID.\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ProductName\\": \\"播报音响\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryShareProductNameByProductKeyResponse>\\n<RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n<Data>\\n    <ProductName>播报音响</ProductName>\\n</Data>\\n<Code/>\\n<Success>true</Success>\\n</QueryShareProductNameByProductKeyResponse>","errorExample":""}]',
      'title' => 'QueryShareProductNameByProductKey',
      'summary' => '调用该接口根据产品ProductKey查询分享任务中共享设备所属产品的名称。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSoundCode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Duration',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '声码持续时长，单位为秒，取值范围为1～30。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '2',
          ),
        ),
        1 => 
        array (
          'name' => 'SoundCodeContent',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '声码营销内容，例如商品的详情地址等，长度限制100个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'www.taobao.com',
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '声码名称，长度为1~64个字符，一个汉字占两个字符，实例下保证唯一。',
            'type' => 'string',
            'required' => false,
            'example' => 'TEST123',
          ),
        ),
        4 => 
        array (
          'name' => 'OpenType',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程开放类型。

- 内部（默认）：取值为**INNER**，只允许排程所在实例下的设备请求声码解码。

- 公开：取值为**OPEN**，可以发送邮件的方式配置白名单，允许跨实例的设备请求声码解码，跨实例解码的用量计算在声码所在的实例下。',
            'type' => 'string',
            'required' => false,
            'example' => 'OPEN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'Data' => 
              array (
                'description' => '创建成功时返回的声码ID（SoundCode），是声码的唯一标识。',
                'type' => 'string',
                'example' => 'Md3ZiTL888K9llXDy7890***********',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidSoundCodeContent',
            'errorMessage' => 'invalid sound code content',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidSoundCodeDuration',
            'errorMessage' => 'invalid sound code duration',
          ),
          3 => 
          array (
            'errorCode' => 'iot.soundcode.SensitiveContent',
            'errorMessage' => 'sensitive content',
          ),
          4 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidName',
            'errorMessage' => 'invalid sound code name',
          ),
          5 => 
          array (
            'errorCode' => 'iot.soundcode.AlreadyExistsName',
            'errorMessage' => 'already exists sound code name',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.EncodeLimit',
            'errorMessage' => 'sound code encode limit exceeded',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"Data\\": \\"Md3ZiTL888K9llXDy7890***********\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateSoundCodeResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>Md3ZiTL888K9llXDy7890***********</Data>\\n<Success>true</Success>\\n</CreateSoundCodeResponse>","errorExample":""}]',
      'title' => 'CreateSoundCode',
      'summary' => '调用该接口创建声码。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSoundCode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SoundCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '声码的唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidSoundCode',
            'errorMessage' => 'invalid sound code',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidParam',
            'errorMessage' => 'invalid param',
          ),
          3 => 
          array (
            'errorCode' => 'iot.soundcode.NotExists',
            'errorMessage' => 'sound code not exists',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteSoundCodeResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Success>true</Success>\\n</DeleteSoundCodeResponse>","errorExample":""}]',
      'title' => 'DeleteSoundCode',
      'summary' => '调用该接口删除声码。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySoundCodeList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定每页返回的语料条数，取值范围：1~50，默认值为20。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        2 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页。取值范围1~10,000，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页返回的语料条数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Total' => 
                  array (
                    'description' => '查询返回的语料总条数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页号。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Items' => 
                      array (
                        'description' => '声码列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OpenType' => 
                            array (
                              'description' => '排程开放类型。

- 内部（默认）：取值为**INNER**，只允许排程所在实例下的设备请求声码解码。

- 公开：取值为**OPEN**，可以发送邮件的方式配置白名单，允许跨实例的设备请求声码解码，跨实例解码的用量计算在声码所在的实例下。',
                              'type' => 'string',
                              'example' => 'OPEN',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '声码创建时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1620634297000',
                            ),
                            'Duration' => 
                            array (
                              'description' => '声码持续时长。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2',
                            ),
                            'SoundCodeContent' => 
                            array (
                              'description' => '声码营销内容。',
                              'type' => 'string',
                              'example' => 'www.taobao.com',
                            ),
                            'Name' => 
                            array (
                              'description' => '声码名。',
                              'type' => 'string',
                              'example' => 'test1',
                            ),
                            'SoundCode' => 
                            array (
                              'description' => '声码的唯一标识。',
                              'type' => 'string',
                              'example' => 'Md3ZiTL888K9llXDy7890***********',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidParam',
            'errorMessage' => 'invalid param',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"Total\\": 100,\\n    \\"PageId\\": 1,\\n    \\"List\\": {\\n      \\"Items\\": [\\n        {\\n          \\"OpenType\\": \\"OPEN\\",\\n          \\"GmtCreate\\": 1620634297000,\\n          \\"Duration\\": 2,\\n          \\"SoundCodeContent\\": \\"www.taobao.com\\",\\n          \\"Name\\": \\"test1\\",\\n          \\"SoundCode\\": \\"Md3ZiTL888K9llXDy7890***********\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"</QuerySoundCodeListResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>100</Total>\\n    <List>\\n        <Items>\\n            <GmtCreate>1620634297000</GmtCreate>\\n            <Duration>2</Duration>\\n            <SoundCodeContent>www.taobao.com</SoundCodeContent>\\n            <SoundCode>Md3ZiTL888K9llXDy7890***********</SoundCode>\\n        </Items>\\n    </List>\\n</Data>\\n<Success>true</Success>\\n</QuerySoundCodeListResponse>","errorExample":""}]',
      'title' => 'QuerySoundCodeList',
      'summary' => '调用该接口查询声码列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetSoundCodeAudio' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

必须传入实例ID，否则调用会失败。您可在物联网平台控制台的**实例概览**页面，查看您的实例ID。
><notice>
如果公共实例没有ID，请参见[如何获取实例ID](~~267533~~)。
></notice>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'SoundCodeList',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '声码的唯一标识列表，最多100个元素。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'speech solution has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Items' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '声码音频下载地址列表。',
                      'type' => 'string',
                      'example' => '["http://speech-solution.oss-cn-shanghai.aliyuncs.com/sound_code_model_audio/Md3ZiTL888K9llXDy7890***********/iot_instc_pu****_c*-v64********/Md3ZiTL888K9llXDy7890***********.wav?Expires=1641436550&OSSAccessKeyId=LTAIN4oIyl*****&Signature=dZQWqHxjJVd0SCZZ2wR***********"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidParam',
            'errorMessage' => 'invalid param',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"speech solution has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Items\\": [\\n      \\"[\\\\\\"http://speech-solution.oss-cn-shanghai.aliyuncs.com/sound_code_model_audio/Md3ZiTL888K9llXDy7890***********/iot_instc_pu****_c*-v64********/Md3ZiTL888K9llXDy7890***********.wav?Expires=1641436550&OSSAccessKeyId=LTAIN4oIyl*****&Signature=dZQWqHxjJVd0SCZZ2wR***********\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetSoundCodeAudioResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <Items>[\\"http://speech-solution.oss-cn-shanghai.aliyuncs.com/sound_code_model_audio/Md3ZiTL888K9llXDy7890***********/iot_instc_pu****_c*-v64********/Md3ZiTL888K9llXDy7890***********.wav?Expires=1641436550&amp;OSSAccessKeyId=LTAIN4oIyl*****&amp;Signature=dZQWqHxjJVd0SCZZ2wR***********\\"]</Items>\\n</Data>\\n<Success>true</Success>\\n</GetSoundCodeAudioResponse>","errorExample":""}]',
      'title' => 'GetSoundCodeAudio',
      'summary' => '调用该接口获取声码音频下载地址。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSoundCodeSchedule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程名称，长度为1~64个字符，一个汉字占两个字符，实例下保证唯一。
',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程描述，长度为1~64个字符，一个汉字占两个字符，实例下保证唯一。
',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'StartDate',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程开始工作日期，格式为yyyy-MM-dd。
',
            'type' => 'string',
            'required' => true,
            'example' => '2022-03-31',
          ),
        ),
        4 => 
        array (
          'name' => 'EndDate',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程结束工作日期，格式为yyyy-MM-dd，不得早于StartDate。
',
            'type' => 'string',
            'required' => true,
            'example' => '2022-03-31',
          ),
        ),
        5 => 
        array (
          'name' => 'OpenType',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程开放类型。

- 内部（默认）：取值为**INNER**，只允许排程所在实例下的设备请求声码解码。

- 公开：取值为**OPEN**，可以发送邮件的方式配置白名单，允许跨实例的设备请求声码解码，跨实例解码的用量计算在声码所在的实例下。',
            'type' => 'string',
            'required' => false,
            'example' => 'INNER',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'Data' => 
              array (
                'description' => '排程唯一标识。
',
                'type' => 'string',
                'example' => 'Md3ZiTL888K9llXDy7890***********',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.InvalidDesc',
            'errorMessage' => 'invalid schedule description',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.InvalidName',
            'errorMessage' => 'invalid schedule name',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.AlreadyExistsName',
            'errorMessage' => 'already exists schedule name',
          ),
          3 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.InvalidIotInstanceId',
            'errorMessage' => 'invalid schedule IotInstanceId',
          ),
          4 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.LimitExceeded',
            'errorMessage' => 'sound code schedule limit exceeded',
          ),
          5 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.InvalidDate',
            'errorMessage' => 'invalid sound code schedule date',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"Data\\": \\"Md3ZiTL888K9llXDy7890***********\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateSoundCodeScheduleResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>Md3ZiTL888K9llXDy7890***********</Data>\\n<Success>true</Success>\\n</CreateSoundCodeScheduleResponse>","errorExample":""}]',
      'title' => 'CreateSoundCodeSchedule',
      'summary' => '调用该接口创建声码排程。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '   调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateSoundCodeSchedule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ScheduleCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程名称，长度为1~64个字符，一个汉字占两个字符，实例下保证唯一。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程描述，长度为1~64个字符，一个汉字占两个字符，实例下保证唯一。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程状态。

- **WORKING**：启用。

- **STOP**：停用。',
            'type' => 'string',
            'required' => false,
            'example' => 'WORKING',
          ),
        ),
        5 => 
        array (
          'name' => 'StartTime',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程每日开始工作时间，格式为二十四小时制时间，范围为00:00~23:59。',
            'type' => 'string',
            'required' => false,
            'example' => '00:00',
          ),
        ),
        6 => 
        array (
          'name' => 'EndTime',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程每日结束工作时间，格式为二十四小时制时间，范围为00:00~23:59，不能早于StartTime。',
            'type' => 'string',
            'required' => false,
            'example' => '23:59',
          ),
        ),
        7 => 
        array (
          'name' => 'StartDate',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程开始工作日期，格式为yyyy-MM-dd。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-03-31',
          ),
        ),
        8 => 
        array (
          'name' => 'EndDate',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程结束工作日期，格式为yyyy-MM-dd，不得早于StartDate。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-03-31',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.InvalidDesc',
            'errorMessage' => 'invalid schedule description',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.InvalidName',
            'errorMessage' => 'invalid schedule name',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.AlreadyExistsName',
            'errorMessage' => 'already exists schedule name',
          ),
          3 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.InvalidIotInstanceId',
            'errorMessage' => 'invalid schedule IotInstanceId',
          ),
          4 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.NotExists',
            'errorMessage' => 'schedule not exists',
          ),
          5 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.InvalidStatus',
            'errorMessage' => 'invalid schedule status',
          ),
          6 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.InvalidTime',
            'errorMessage' => 'invalid schedule time',
          ),
          7 => 
          array (
            'errorCode' => 'iot.scheduleperiod.ConflictTime',
            'errorMessage' => 'conflict with:%s',
          ),
          8 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.InvalidDate',
            'errorMessage' => 'invalid sound code schedule date',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateSoundCodeScheduleResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Success>true</Success>\\n</UpdateSoundCodeScheduleResponse>\\n","errorExample":""}]',
      'title' => 'UpdateSoundCodeSchedule',
      'summary' => '调用该接口更新声码排程。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSoundCodeSchedule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ScheduleCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.NotExists',
            'errorMessage' => 'schedule not exists',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.InvalidIotInstanceId',
            'errorMessage' => 'invalid schedule IotInstanceId',
          ),
          2 => 
          array (
            'errorCode' => 'iot.scheduleperiod.AlreadyExists',
            'errorMessage' => 'schedule period already exists',
          ),
          3 => 
          array (
            'errorCode' => 'iot.soundcode.AlreadyExistsLabel',
            'errorMessage' => 'already exists sound code label',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteSoundCodeScheduleResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Success>true</Success>\\n</DeleteSoundCodeScheduleResponse>","errorExample":""}]',
      'title' => 'DeleteSoundCodeSchedule',
      'summary' => '调用该接口删除声码排程。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)',
    ),
    'QuerySoundCodeScheduleList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定每页返回的语料条数，取值范围：1~50，默认值为20。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '1',
            'default' => '20',
          ),
        ),
        2 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页。取值范围1~10,000，默认值为1。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '20',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页返回的排程条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Total' => 
                  array (
                    'description' => '查询返回的排程总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页号。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Items' => 
                      array (
                        'description' => '排程列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OpenType' => 
                            array (
                              'description' => '排程开放类型。

- 内部（默认）：取值为**INNER**，只允许排程所在实例下的设备请求声码解码。

- 公开：取值为**OPEN**，可以发送邮件的方式配置白名单，允许跨实例的设备请求声码解码，跨实例解码的用量计算在声码所在的实例下。',
                              'type' => 'string',
                              'example' => 'INNER',
                            ),
                            'EndTime' => 
                            array (
                              'description' => '排程每日结束工作时间。',
                              'type' => 'string',
                              'example' => '23:59',
                            ),
                            'Status' => 
                            array (
                              'description' => '排程状态。',
                              'type' => 'string',
                              'example' => 'WORKING',
                            ),
                            'StartTime' => 
                            array (
                              'description' => '排程每日开始工作时间。',
                              'type' => 'string',
                              'example' => '00:00',
                            ),
                            'EndDate' => 
                            array (
                              'description' => '排程结束工作日期。',
                              'type' => 'string',
                              'example' => '2022-03-28',
                            ),
                            'Description' => 
                            array (
                              'description' => '排程描述。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'ScheduleCode' => 
                            array (
                              'description' => '排程唯一标识。',
                              'type' => 'string',
                              'example' => 'Md3ZiTL888K9llXDy7890***********',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '排程创建时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1620634297000',
                            ),
                            'StartDate' => 
                            array (
                              'description' => '排程开始工作日期。',
                              'type' => 'string',
                              'example' => '2022-03-28',
                            ),
                            'Name' => 
                            array (
                              'description' => '排程名称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.InvalidIotInstanceId',
            'errorMessage' => 'invalid schedule IotInstanceId',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidParam',
            'errorMessage' => 'invalid param',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"Total\\": 100,\\n    \\"PageId\\": 1,\\n    \\"List\\": {\\n      \\"Items\\": [\\n        {\\n          \\"OpenType\\": \\"INNER\\",\\n          \\"EndTime\\": \\"23:59\\",\\n          \\"Status\\": \\"WORKING\\",\\n          \\"StartTime\\": \\"00:00\\",\\n          \\"EndDate\\": \\"2022-03-28\\",\\n          \\"Description\\": \\"test\\",\\n          \\"ScheduleCode\\": \\"Md3ZiTL888K9llXDy7890***********\\",\\n          \\"GmtCreate\\": 1620634297000,\\n          \\"StartDate\\": \\"2022-03-28\\",\\n          \\"Name\\": \\"test\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySoundCodeScheduleListResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>100</Total>\\n    <List>\\n        <Items>\\n            <StartDate>2022-03-28</StartDate>\\n            <Status>WORKING</Status>\\n            <GmtCreate>1620634297000</GmtCreate>\\n            <Description>test</Description>\\n            <EndTime>23:59</EndTime>\\n            <StartTime>00:00</StartTime>\\n            <ScheduleCode>Md3ZiTL888K9llXDy7890***********</ScheduleCode>\\n            <EndDate>2022-03-28</EndDate>\\n            <Name>test</Name>\\n            <OPenType>INNER</OpenType>\\n        </Items>\\n    </List>\\n</Data>\\n<Success>true</Success>\\n</QuerySoundCodeScheduleListResponse>","errorExample":""}]',
      'title' => 'QuerySoundCodeScheduleList',
      'summary' => '调用该接口查询声码排程列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetSoundCodeSchedule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ScheduleCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '排程详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'OpenType' => 
                  array (
                    'description' => '排程开放类型。

- 内部（默认）：取值为**INNER**，只允许排程所在实例下的设备请求声码解码。

- 公开：取值为**OPEN**，可以发送邮件的方式配置白名单，允许跨实例的设备请求声码解码，跨实例解码的用量计算在声码所在的实例下。',
                    'type' => 'string',
                    'example' => 'INNER',
                  ),
                  'EndTime' => 
                  array (
                    'description' => '排程每日结束工作时间。',
                    'type' => 'string',
                    'example' => '23:59',
                  ),
                  'Status' => 
                  array (
                    'description' => '排程状态。',
                    'type' => 'string',
                    'example' => 'WORKING',
                  ),
                  'StartTime' => 
                  array (
                    'description' => '排程每日开始工作时间。',
                    'type' => 'string',
                    'example' => '00:00',
                  ),
                  'EndDate' => 
                  array (
                    'description' => '排程结束工作日期。',
                    'type' => 'string',
                    'example' => '2022-03-28',
                  ),
                  'Description' => 
                  array (
                    'description' => '排程描述。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'ScheduleCode' => 
                  array (
                    'description' => '排程唯一标识。',
                    'type' => 'string',
                    'example' => 'Md3ZiTL888K9llXDy7890***********',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '排程创建时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1620634297000',
                  ),
                  'StartDate' => 
                  array (
                    'description' => '排程开始工作日期。',
                    'type' => 'string',
                    'example' => '2022-03-28',
                  ),
                  'Name' => 
                  array (
                    'description' => '排程名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.InvalidIotInstanceId',
            'errorMessage' => 'invalid schedule IotInstanceId',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidParam',
            'errorMessage' => 'invalid param',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"OpenType\\": \\"INNER\\",\\n    \\"EndTime\\": \\"23:59\\",\\n    \\"Status\\": \\"WORKING\\",\\n    \\"StartTime\\": \\"00:00\\",\\n    \\"EndDate\\": \\"2022-03-28\\",\\n    \\"Description\\": \\"test\\",\\n    \\"ScheduleCode\\": \\"Md3ZiTL888K9llXDy7890***********\\",\\n    \\"GmtCreate\\": 1620634297000,\\n    \\"StartDate\\": \\"2022-03-28\\",\\n    \\"Name\\": \\"test\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySoundCodeScheduleListResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <StartDate>2022-03-28</StartDate>\\n    <Status>WORKING</Status>\\n    <GmtCreate>1620634297000</GmtCreate>\\n    <Description>test</Description>\\n    <EndTime>23:59</EndTime>\\n    <StartTime>00:00</StartTime>\\n    <ScheduleCode>Md3ZiTL888K9llXDy7890***********</ScheduleCode>\\n    <EndDate>2022-03-28</EndDate>\\n    <Name>test</Name>\\n    <OpenType>INNER</OpenType>\\n</Data>\\n<Success>true</Success>\\n</QuerySoundCodeScheduleListResponse>","errorExample":""}]',
      'title' => 'GetSoundCodeSchedule',
      'summary' => '调用该接口查询声码排程详情。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateSchedulePeriod' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SoundCodeContent',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '时间段声码解析内容，长度为1~512个字符，一个汉字占两个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.taobao.com',
          ),
        ),
        1 => 
        array (
          'name' => 'PeriodCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '时间段唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '时间段描述，长度为1~64个字符，一个汉字占两个字符。
',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '时间段开始时间，格式为二十四小时制时间，范围为00:00~23:59。
',
            'type' => 'string',
            'required' => false,
            'example' => '00:00',
          ),
        ),
        5 => 
        array (
          'name' => 'EndTime',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '时间段结束时间，格式为二十四小时制时间，范围为00:00~23:59，不能早于StartTime。
',
            'type' => 'string',
            'required' => false,
            'example' => '01:00',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.scheduleperiod.InvalidIotInstanceId',
            'errorMessage' => 'invalid IotInstanceId',
          ),
          1 => 
          array (
            'errorCode' => 'iot.scheduleperiod.InvalidTime',
            'errorMessage' => 'invalid period time',
          ),
          2 => 
          array (
            'errorCode' => 'iot.scheduleperiod.InvalidDesc',
            'errorMessage' => 'Invalid period description',
          ),
          3 => 
          array (
            'errorCode' => 'iot.scheduleperiod.NotExists',
            'errorMessage' => 'schedule period not exists',
          ),
          4 => 
          array (
            'errorCode' => 'iot.scheduleperiod.ConflictWithScheduleTime',
            'errorMessage' => 'conflict with schedule time',
          ),
          5 => 
          array (
            'errorCode' => 'iot.scheduleperiod.ConflictTime',
            'errorMessage' => 'conflict with:%s',
          ),
          6 => 
          array (
            'errorCode' => 'iot.soundcode.SensitiveContent',
            'errorMessage' => 'sensitive content',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateSchedulePeriodResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Success>true</Success>\\n</UpdateSchedulePeriodResponse>","errorExample":""}]',
      'title' => 'UpdateSchedulePeriod',
      'summary' => '调用该接口更新声码排程时间段。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)',
    ),
    'CreateSchedulePeriod' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SoundCodeContent',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '时间段声码解析内容，长度为1~512个字符，一个汉字占两个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'www.taobao.com',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        2 => 
        array (
          'name' => 'ScheduleCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '时间段描述，长度为1~64个字符，一个汉字占两个字符。
',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '时间段开始时间，格式为二十四小时制时间，范围为00:00~23:59。
',
            'type' => 'string',
            'required' => true,
            'example' => '00:00',
          ),
        ),
        5 => 
        array (
          'name' => 'EndTime',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '时间段结束时间，格式为二十四小时制时间，范围为00:00~23:59，不能早于StartTime。
',
            'type' => 'string',
            'required' => true,
            'example' => '01:00',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'Data' => 
              array (
                'description' => '时间段唯一标识。',
                'type' => 'string',
                'example' => 'Md3ZiTL888K9llXDy7890***********',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.scheduleperiod.InvalidIotInstanceId',
            'errorMessage' => 'invalid IotInstanceId',
          ),
          1 => 
          array (
            'errorCode' => 'iot.scheduleperiod.InvalidTime',
            'errorMessage' => 'invalid period time',
          ),
          2 => 
          array (
            'errorCode' => 'iot.scheduleperiod.InvalidDesc',
            'errorMessage' => 'Invalid period description',
          ),
          3 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidSoundCodeContent',
            'errorMessage' => 'invalid sound code content',
          ),
          4 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.NotExists',
            'errorMessage' => 'schedule not exists',
          ),
          5 => 
          array (
            'errorCode' => 'iot.soundcode.SensitiveContent',
            'errorMessage' => 'sensitive content',
          ),
          6 => 
          array (
            'errorCode' => 'iot.scheduleperiod.ConflictTime',
            'errorMessage' => 'conflict with:%s',
          ),
          7 => 
          array (
            'errorCode' => 'iot.scheduleperiod.ConflictWithScheduleTime',
            'errorMessage' => 'conflict with schedule time',
          ),
          8 => 
          array (
            'errorCode' => 'iot.scheduleperiod.LimitExceeded',
            'errorMessage' => 'schedule period limit exceeded',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"Data\\": \\"Md3ZiTL888K9llXDy7890***********\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateSchedulePeriodResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>Md3ZiTL888K9llXDy7890***********</Data>\\n<Success>true</Success>\\n</CreateSchedulePeriodResponse>","errorExample":""}]',
      'title' => 'CreateSchedulePeriod',
      'summary' => '调用该接口创建声码排程时间段。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)',
    ),
    'DeleteSchedulePeriod' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PeriodCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '时间段唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.scheduleperiod.InvalidIotInstanceId',
            'errorMessage' => 'invalid IotInstanceId',
          ),
          1 => 
          array (
            'errorCode' => 'iot.scheduleperiod.NotExists',
            'errorMessage' => 'schedule period not exists',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteSchedulePeriodResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Success>true</Success>\\n</DeleteSchedulePeriodResponse>","errorExample":""}]',
      'title' => 'DeleteSchedulePeriod',
      'summary' => '调用该接口删除声码排程时间段。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)',
    ),
    'QuerySchedulePeriodList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ScheduleCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定每页返回的语料条数，取值范围：1~50，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页。取值范围1~10,000，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页返回的时间段条数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Total' => 
                  array (
                    'description' => '查询返回的时间段总条数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页号。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Items' => 
                      array (
                        'description' => '时间段列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EndTime' => 
                            array (
                              'description' => '时间段结束时间',
                              'type' => 'string',
                              'example' => '00:10',
                            ),
                            'StartTime' => 
                            array (
                              'description' => '时间段开始时间。',
                              'type' => 'string',
                              'example' => '00:00',
                            ),
                            'SoundCodeContent' => 
                            array (
                              'description' => '时间段声码解析内容。',
                              'type' => 'string',
                              'example' => 'www.taobao.com',
                            ),
                            'Description' => 
                            array (
                              'description' => '时间段描述。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'PeriodCode' => 
                            array (
                              'description' => '时间段唯一标识。',
                              'type' => 'string',
                              'example' => 'Md3ZiTL888K9llXDy7890***********',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidParam',
            'errorMessage' => 'invalid param',
          ),
          1 => 
          array (
            'errorCode' => 'iot.scheduleperiod.InvalidIotInstanceId',
            'errorMessage' => 'invalid IotInstanceId',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"Total\\": 200,\\n    \\"PageId\\": 1,\\n    \\"List\\": {\\n      \\"Items\\": [\\n        {\\n          \\"EndTime\\": \\"00:10\\",\\n          \\"StartTime\\": \\"00:00\\",\\n          \\"SoundCodeContent\\": \\"www.taobao.com\\",\\n          \\"Description\\": \\"test\\",\\n          \\"PeriodCode\\": \\"Md3ZiTL888K9llXDy7890***********\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySchedulePeriodListResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>200</Total>\\n    <List>\\n        <Items>\\n            <Description>test</Description>\\n            <EndTime>00:10</EndTime>\\n            <StartTime>00:00</StartTime>\\n            <SoundCodeContent>www.taobao.com</SoundCodeContent>\\n            <PeriodCode>Md3ZiTL888K9llXDy7890***********</PeriodCode>\\n        </Items>\\n    </List>\\n</Data>\\n<Success>true</Success>\\n</QuerySchedulePeriodListResponse>","errorExample":""}]',
      'title' => 'QuerySchedulePeriodList',
      'summary' => '调用该接口查询声码排程时间段列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSoundCodeLabel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ScheduleCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        2 => 
        array (
          'name' => 'Label',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '标签，长度为1~64个字符，一个汉字占两个字符，排程下保证唯一。
',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'Data' => 
              array (
                'description' => '声码标签唯一标识。',
                'type' => 'string',
                'example' => 'Md3ZiTL888K9llXDy7890***********',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.NotExists',
            'errorMessage' => 'schedule not exists',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcode.AlreadyExistsLabel',
            'errorMessage' => 'already exists sound code label',
          ),
          3 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidLabel',
            'errorMessage' => 'invalid sound code label',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.EncodeLimit',
            'errorMessage' => 'sound code encode limit exceeded',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"Data\\": \\"Md3ZiTL888K9llXDy7890***********\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateSoundCodeLabelResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>Md3ZiTL888K9llXDy7890***********</Data>\\n<Success>true</Success>\\n</CreateSoundCodeLabelResponse>","errorExample":""}]',
      'title' => 'CreateSoundCodeLabel',
      'summary' => '调用该接口为指定排程创建声码标签。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateSoundCodeLabel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SoundCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '声码唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        2 => 
        array (
          'name' => 'Label',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '标签，长度为1~64个字符，一个汉字占两个字符，排程下保证唯一。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidSoundCode',
            'errorMessage' => 'invalid sound code',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidLabel',
            'errorMessage' => 'invalid sound code label',
          ),
          3 => 
          array (
            'errorCode' => 'iot.soundcode.LabelNotExists',
            'errorMessage' => 'sound code label not exists',
          ),
          4 => 
          array (
            'errorCode' => 'iot.soundcode.AlreadyExistsLabel',
            'errorMessage' => 'already exists sound code label',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.EncodeLimit',
            'errorMessage' => 'sound code encode limit exceeded',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateSoundCodeLabelResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Success>true</Success>\\n</UpdateSoundCodeLabelResponse>","errorExample":""}]',
      'title' => 'UpdateSoundCodeLabel',
      'summary' => '调用该接口更新声码标签。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSoundCodeLabel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SoundCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '声码唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidSoundCode',
            'errorMessage' => 'invalid sound code',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcode.LabelNotExists',
            'errorMessage' => 'sound code label not exists',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteSoundCodeLabelResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Success>true</Success>\\n<DeleteSoundCodeLabelResponse>","errorExample":""}]',
      'title' => 'DeleteSoundCodeLabel',
      'summary' => '调用该接口删除声码标签。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySoundCodeLabelList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ScheduleCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定每页返回的语料条数，取值范围：1~50，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页。取值范围1~10,000，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页返回的时间段条数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Total' => 
                  array (
                    'description' => '查询返回的时间段总条数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页号。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Items' => 
                      array (
                        'description' => '声码标签列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Label' => 
                            array (
                              'description' => '标签。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'SoundCode' => 
                            array (
                              'description' => '声码唯一标识。',
                              'type' => 'string',
                              'example' => 'Md3ZiTL888K9llXDy7890***********',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidParam',
            'errorMessage' => 'invalid param',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"Total\\": 200,\\n    \\"PageId\\": 1,\\n    \\"List\\": {\\n      \\"Items\\": [\\n        {\\n          \\"Label\\": \\"test\\",\\n          \\"SoundCode\\": \\"Md3ZiTL888K9llXDy7890***********\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySoundCodeLabelListResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>200</Total>\\n    <List>\\n        <Items>\\n            <Label>test</Label>\\n            <SoundCode>Md3ZiTL888K9llXDy7890***********</SoundCode>\\n        </Items>\\n    </List>\\n</Data>\\n<Success>true</Success>\\n</QuerySoundCodeLabelListResponse>","errorExample":""}]',
      'title' => 'QuerySoundCodeLabelList',
      'summary' => '调用该接口查询指定排程的声码标签列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchCreateSoundCodeLabel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Total',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '批量创建声码个数，数量为1～200个，系统将为每个声码自动生成由字母、数字随机组合的标签。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '20',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        2 => 
        array (
          'name' => 'ScheduleCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '批次描述，长度为1~64个字符，一个汉字占两个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'Data' => 
              array (
                'description' => '声码标签批次唯一标识。',
                'type' => 'string',
                'example' => 'Md3ZiTL888K9llXDy7890***********',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.NotExists',
            'errorMessage' => 'schedule not exists',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidLabelBatchDescription',
            'errorMessage' => 'invalid sound code label batch description',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.EncodeLimit',
            'errorMessage' => 'sound code encode limit exceeded',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"Data\\": \\"Md3ZiTL888K9llXDy7890***********\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchCreateSoundCodeLabelResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>Md3ZiTL888K9llXDy7890***********</Data>\\n<Success>true</Success>\\n</BatchCreateSoundCodeLabelResponse>","errorExample":""}]',
      'title' => 'BatchCreateSoundCodeLabel',
      'summary' => '调用该接口为指定排程批量创建声码标签。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchCreateSoundCodeLabelWithLabels' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ScheduleCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '批次描述，长度为1~64个字符，一个汉字占两个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'Labels',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表，数量为1～200个，每个标签长度为1~64个字符，一个汉字占两个字符，排程下保证唯一。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'test',
            'maxItems' => 200,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'Data' => 
              array (
                'description' => '声码标签批次唯一标识。',
                'type' => 'string',
                'example' => 'Md3ZiTL888K9llXDy7890***********',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeschedule.NotExists',
            'errorMessage' => 'schedule not exists',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidLabel',
            'errorMessage' => 'invalid sound code label',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidLabelBatchDescription',
            'errorMessage' => 'invalid sound code label batch description',
          ),
          3 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.EncodeLimit',
            'errorMessage' => 'sound code encode limit exceeded',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"Data\\": \\"Md3ZiTL888K9llXDy7890***********\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchCreateSoundCodeLabelWithLabelsResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>Md3ZiTL888K9llXDy7890***********</Data>\\n<Success>true</Success>\\n</BatchCreateSoundCodeLabelWithLabelsResponse>","errorExample":""}]',
      'title' => 'BatchCreateSoundCodeLabelWithLabels',
      'summary' => '调用该接口为指定排程批量创建指定声码标签。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySoundCodeLabelBatchList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无**实例概览**页面或**ID**值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ScheduleCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '排程唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定每页返回的时间段条数，取值范围：1~50，默认值为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'PageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定显示返回结果中的第几页。取值范围1~10,000，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '返回数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageSize' => 
                  array (
                    'description' => '每页返回的时间段条数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Total' => 
                  array (
                    'description' => '查询返回的时间段总条数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'PageId' => 
                  array (
                    'description' => '当前页号。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Items' => 
                      array (
                        'description' => '批次列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Status' => 
                            array (
                              'description' => '批次状态。

- **RUNNING**：运行中。
- **SUCCESS**：成功。
- **PARTIAL_FAILED**：部分成功。
- **INTERRUPT**：中断。',
                              'type' => 'string',
                              'example' => 'RUNNING',
                            ),
                            'Description' => 
                            array (
                              'description' => '批次描述。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'BatchCode' => 
                            array (
                              'description' => '批次唯一标识。',
                              'type' => 'string',
                              'example' => 'Md3ZiTL888K9llXDy7890***********',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '批次创建时间。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1620634297000',
                            ),
                            'SuccessNum' => 
                            array (
                              'description' => '成功创建数量。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'Total' => 
                            array (
                              'description' => '批量创建总数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '20',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidParam',
            'errorMessage' => 'invalid param',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageSize\\": 20,\\n    \\"Total\\": 200,\\n    \\"PageId\\": 1,\\n    \\"List\\": {\\n      \\"Items\\": [\\n        {\\n          \\"Status\\": \\"RUNNING\\",\\n          \\"Description\\": \\"test\\",\\n          \\"BatchCode\\": \\"Md3ZiTL888K9llXDy7890***********\\",\\n          \\"GmtCreate\\": 1620634297000,\\n          \\"SuccessNum\\": 1,\\n          \\"Total\\": 20\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySoundCodeLabelBatchListResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <PageId>1</PageId>\\n    <PageSize>20</PageSize>\\n    <Total>200</Total>\\n    <List>\\n        <Items>\\n            <Status>RUNNING</Status>\\n            <GmtCreate>1620634297000</GmtCreate>\\n            <Description>test</Description>\\n            <SuccessNum>1</SuccessNum>\\n            <BatchCode>Md3ZiTL888K9llXDy7890***********</BatchCode>\\n            <Total>20</Total>\\n        </Items>\\n    </List>\\n</Data>\\n<Success>true</Success>\\n</QuerySoundCodeLabelBatchListResponse>","errorExample":""}]',
      'title' => 'QuerySoundCodeLabelBatchList',
      'summary' => '调用该接口查询指定排程的声码标签批次列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySoundCodeLabelBatchFailedResult' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BatchCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '批次唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Items' => 
                  array (
                    'description' => '批次失败声码标签列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ResultCode' => 
                        array (
                          'description' => '错误码。',
                          'type' => 'string',
                          'example' => '7541',
                        ),
                        'ErrorMessage' => 
                        array (
                          'description' => '错误信息。',
                          'type' => 'string',
                          'example' => 'sound code label exist',
                        ),
                        'Label' => 
                        array (
                          'description' => '标签。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidParam',
            'errorMessage' => 'invalid param',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Items\\": [\\n      {\\n        \\"ResultCode\\": \\"7541\\",\\n        \\"ErrorMessage\\": \\"sound code label exist\\",\\n        \\"Label\\": \\"test\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySoundCodeLabelBatchFailedResultResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>\\n    <Items>\\n        <Label>test</Label>\\n        <ErrorMessage>sound code label exist</ErrorMessage>\\n        <ResultCode>7541</ResultCode>\\n    </Items>\\n</Data>\\n<Success>true</Success>\\n</QuerySoundCodeLabelBatchFailedResultResponse>","errorExample":""}]',
      'title' => 'QuerySoundCodeLabelBatchFailedResult',
      'summary' => '调用该接口查询指定声码标签批次下创建失败的声码标签列表。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为1。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PackageSoundCodeLabelBatchAudio' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BatchCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '批次唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'Data' => 
              array (
                'description' => '声码标签批次音频打包地址。',
                'type' => 'string',
                'example' => 'http://****.oss-cn-shanghai.aliyuncs.com/speech_test_audio/CPjUL8qUtOMoQmC******.wav?Expires=1620380723',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.LabelBatchNotExists',
            'errorMessage' => 'sound code label batch not exists',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.NoSuccessLabel',
            'errorMessage' => 'no success label',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"Data\\": \\"http://****.oss-cn-shanghai.aliyuncs.com/speech_test_audio/CPjUL8qUtOMoQmC******.wav?Expires=1620380723\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PackageSoundCodeLabelBatchAudioResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Data>http://****.oss-cn-shanghai.aliyuncs.com/speech_test_audio/CPjUL8qUtOMoQmC******.wav?Expires=1620380723</Data>\\n<Success>true</Success>\\n</PackageSoundCodeLabelBatchAudioResponse>","errorExample":""}]',
      'title' => 'PackageSoundCodeLabelBatchAudio',
      'summary' => '调用该接口获取声码标签批次音频打包地址。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '   调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RetrySoundCodeLabelBatch' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BatchCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '批次唯一标识，可通过[QuerySoundCodeLabelBatchList](~~424329~~)接口查询批次列表得到。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidParam',
            'errorMessage' => 'invalid param',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.LabelBatchNotExists',
            'errorMessage' => 'sound code label batch not exists',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcode.LabelBatchCanNotBeRetried',
            'errorMessage' => 'label batch can not be retried',
          ),
          3 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RetrySoundCodeLabelBatchResponse>\\n<RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n<Success>true</Success>\\n</RetrySoundCodeLabelBatchResponse>","errorExample":""}]',
      'title' => 'RetrySoundCodeLabelBatch',
      'summary' => '调用该接口重启声码标签批次。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为1。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateSoundCode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Duration',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '声码持续时长，单位为秒，取值范围为1～30。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        1 => 
        array (
          'name' => 'SoundCodeContent',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '声码营销内容，例如商品的详情地址等，长度限制100个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.taobao.com',
          ),
        ),
        2 => 
        array (
          'name' => 'SoundCode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '声码唯一标识。',
            'type' => 'string',
            'required' => true,
            'example' => 'Md3ZiTL888K9llXDy7890***********',
          ),
        ),
        3 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。<props="china"><ph>您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。</ph></props>

><notice>
- 若有ID值，必须传入该ID值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

<props="china">实例的更多信息，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        4 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '声码名称，长度为1~64个字符，一个汉字占两个字符，实例下保证唯一。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。
',
                'type' => 'string',
                'example' => 'iot.soundcodeservice.NotSigned',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'sound code service has not been signed',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '66FF51D3-***-49F1-B1A2-***',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidIotInstanceId',
            'errorMessage' => 'invalid iot instance id',
          ),
          1 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidSoundCode',
            'errorMessage' => 'invalid sound code',
          ),
          2 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidSoundCodeContent',
            'errorMessage' => 'invalid sound code content',
          ),
          3 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidSoundCodeDuration',
            'errorMessage' => 'invalid sound code duration',
          ),
          4 => 
          array (
            'errorCode' => 'iot.soundcode.InvalidName',
            'errorMessage' => 'invalid sound code name',
          ),
          5 => 
          array (
            'errorCode' => 'iot.soundcode.SensitiveContent',
            'errorMessage' => 'sensitive content',
          ),
          6 => 
          array (
            'errorCode' => 'iot.soundcode.AlreadyExistsName',
            'errorMessage' => 'already exists sound code name',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcodeservice.NotSigned',
            'errorMessage' => 'sound code service has not been signed',
          ),
        ),
        429 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.soundcode.EncodeLimit',
            'errorMessage' => 'sound code encode limit exceeded',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.soundcodeservice.NotSigned\\",\\n  \\"ErrorMessage\\": \\"sound code service has not been signed\\",\\n  \\"RequestId\\": \\"66FF51D3-***-49F1-B1A2-***\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateSoundCodeResponse>\\n    <RequestId>66FF51D3-***-49F1-B1A2-***</RequestId>\\n    <Success>true</Success>\\n</UpdateSoundCodeResponse>","errorExample":""}]',
      'title' => 'UpdateSoundCode',
      'summary' => '调用该接口更新声码。',
      'description' => '## QPS限制
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为2。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RecognizeCarNum' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Url',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待识别图片的URL地址。URL长度不超2048个字符，不支持base64编码。',
            'type' => 'string',
            'required' => false,
            'example' => 'https://img.alicdn.com/***/i4/O1***f_***-582.png',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '200表示成功。其它表示错误码。错误码详情，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回识别出的车牌信息。',
                'type' => 'string',
                'example' => '{"data":{"secondary_cls":{"type_str":"小型汽车","prob":0.955191},"data":{"车牌":"黑AF***"},"score":1.050000,"info":[{"value":"黑AF***","key":"车牌","key_prob":0.999260,"value_prob":0.999260,"key_loc":"","value_loc":"469,450,1220,419,1227,588,476,620"}]},"height":1200,"orgHeight":1200,"orgWidth":1600,"prism_keyValueInfo":[{"key":"车牌","keyProb":99,"value":"黑AF***","valuePos":[{"x":469,"y":450},{"x":1220,"y":419},{"x":1227,"y":588},{"x":476,"y":620}],"valueProb":99}],"structure_list":[{"$ref":"$.data"}],"width":1600}',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息，如果调用成功，没有ErrorMessage字段。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '4C717018-B6D4-5EB0-8495-2A4FF08D58CA',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.algo.OcrInvokeError',
            'errorMessage' => 'Ocr invoke error',
          ),
          1 => 
          array (
            'errorCode' => 'iot.algo.OcrParamInvalid',
            'errorMessage' => 'ocr param invalid',
          ),
          2 => 
          array (
            'errorCode' => 'iot.algo.OcrServiceNotSubscribe',
            'errorMessage' => 'ocr service not subscribe',
          ),
          3 => 
          array (
            'errorCode' => 'iot.algo.ApiCallOutOfTenantLimit',
            'errorMessage' => 'api call out of tenant limit.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.algo.OcrUrlInvalid',
            'errorMessage' => 'ocr url invalid',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Data\\": \\"{\\\\\\"data\\\\\\":{\\\\\\"secondary_cls\\\\\\":{\\\\\\"type_str\\\\\\":\\\\\\"小型汽车\\\\\\",\\\\\\"prob\\\\\\":0.955191},\\\\\\"data\\\\\\":{\\\\\\"车牌\\\\\\":\\\\\\"黑AF***\\\\\\"},\\\\\\"score\\\\\\":1.050000,\\\\\\"info\\\\\\":[{\\\\\\"value\\\\\\":\\\\\\"黑AF***\\\\\\",\\\\\\"key\\\\\\":\\\\\\"车牌\\\\\\",\\\\\\"key_prob\\\\\\":0.999260,\\\\\\"value_prob\\\\\\":0.999260,\\\\\\"key_loc\\\\\\":\\\\\\"\\\\\\",\\\\\\"value_loc\\\\\\":\\\\\\"469,450,1220,419,1227,588,476,620\\\\\\"}]},\\\\\\"height\\\\\\":1200,\\\\\\"orgHeight\\\\\\":1200,\\\\\\"orgWidth\\\\\\":1600,\\\\\\"prism_keyValueInfo\\\\\\":[{\\\\\\"key\\\\\\":\\\\\\"车牌\\\\\\",\\\\\\"keyProb\\\\\\":99,\\\\\\"value\\\\\\":\\\\\\"黑AF***\\\\\\",\\\\\\"valuePos\\\\\\":[{\\\\\\"x\\\\\\":469,\\\\\\"y\\\\\\":450},{\\\\\\"x\\\\\\":1220,\\\\\\"y\\\\\\":419},{\\\\\\"x\\\\\\":1227,\\\\\\"y\\\\\\":588},{\\\\\\"x\\\\\\":476,\\\\\\"y\\\\\\":620}],\\\\\\"valueProb\\\\\\":99}],\\\\\\"structure_list\\\\\\":[{\\\\\\"$ref\\\\\\":\\\\\\"$.data\\\\\\"}],\\\\\\"width\\\\\\":1600}\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"4C717018-B6D4-5EB0-8495-2A4FF08D58CA\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RecognizeCarNumResponse>\\n<RequestId>4C717018-B6D4-5EB0-8495-2A4FF08D58CA</RequestId>\\n<Data>{\\"data\\":{\\"secondary_cls\\":{\\"type_str\\":\\"小型汽车\\",\\"prob\\":0.955191},\\"data\\":{\\"车牌\\":\\"黑AF***\\"},\\"score\\":1.050000,\\"info\\":[{\\"value\\":\\"黑AF***\\",\\"key\\":\\"车牌\\",\\"key_prob\\":0.999260,\\"value_prob\\":0.999260,\\"key_loc\\":\\"\\",\\"value_loc\\":\\"469,450,1220,419,1227,588,476,620\\"}]},\\"height\\":1200,\\"orgHeight\\":1200,\\"orgWidth\\":1600,\\"prism_keyValueInfo\\":[{\\"key\\":\\"车牌\\",\\"keyProb\\":99,\\"value\\":\\"黑AF***\\",\\"valuePos\\":[{\\"x\\":469,\\"y\\":450},{\\"x\\":1220,\\"y\\":419},{\\"x\\":1227,\\"y\\":588},{\\"x\\":476,\\"y\\":620}],\\"valueProb\\":99}],\\"structure_list\\":[{\\"$ref\\":\\"$.data\\"}],\\"width\\":1600}</Data>\\n<Code>200</Code>\\n<Success>true</Success>\\n</RecognizeCarNumResponse>","errorExample":""}]',
      'title' => 'RecognizeCarNum',
      'summary' => '调用该接口通过文字识别（OCR）技术识别出图片中的车牌号码。',
      'description' => '## 使用说明
调用该接口需要开通物联网平台新版公共实例或企业版实例服务。详细说明，请参见[图文识别服务](~~416346~~)。

## QPS限制
目前物联网平台增值服务中的图文识别服务处于公测阶段。

单个阿里云账号每天调用该接口次数最大为20次。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RecognizePictureGeneral' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Url',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待识别图片的URL地址。URL长度不超2048个字符，不支持base64编码。',
            'type' => 'string',
            'required' => true,
            'example' => 'https://img.alicdn.com/***/i4/O1***f_***-582.png',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '200表示成功。其它表示错误码。错误码详情，请参见[错误码](~~87387~~)。',
                'type' => 'string',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回识别出的文本信息。',
                'type' => 'string',
                'example' => '{"content":"***升维大提速***进一步了解***","height":655,"orgHeight":655,"orgWidth":805,"prism_version":"1.0.9","prism_wnum":11,"prism_wordsInfo":[{"angle":-88,"direction":0,"height":111,"pos":[{"x":351,"y":45},{"x":461,"y":46},{"x":461,"y":67},{"x":351,"y":66}],"prob":99,"width":20,"word":"iPhone 12","x":396,"y":0}],"width":805}',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息，如果调用成功，没有ErrorMessage字段。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '4C717018-B6D4-5EB0-8495-2A4FF08D58CA',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功。
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.algo.OcrInvokeError',
            'errorMessage' => 'Ocr invoke error',
          ),
          1 => 
          array (
            'errorCode' => 'iot.algo.OcrParamInvalid',
            'errorMessage' => 'ocr param invalid',
          ),
          2 => 
          array (
            'errorCode' => 'iot.algo.OcrServiceNotSubscribe',
            'errorMessage' => 'ocr service not subscribe',
          ),
          3 => 
          array (
            'errorCode' => 'iot.algo.ApiCallOutOfTenantLimit',
            'errorMessage' => 'api call out of tenant limit.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.algo.OcrUrlInvalid',
            'errorMessage' => 'ocr url invalid',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Data\\": \\"{\\\\\\"content\\\\\\":\\\\\\"***升维大提速***进一步了解***\\\\\\",\\\\\\"height\\\\\\":655,\\\\\\"orgHeight\\\\\\":655,\\\\\\"orgWidth\\\\\\":805,\\\\\\"prism_version\\\\\\":\\\\\\"1.0.9\\\\\\",\\\\\\"prism_wnum\\\\\\":11,\\\\\\"prism_wordsInfo\\\\\\":[{\\\\\\"angle\\\\\\":-88,\\\\\\"direction\\\\\\":0,\\\\\\"height\\\\\\":111,\\\\\\"pos\\\\\\":[{\\\\\\"x\\\\\\":351,\\\\\\"y\\\\\\":45},{\\\\\\"x\\\\\\":461,\\\\\\"y\\\\\\":46},{\\\\\\"x\\\\\\":461,\\\\\\"y\\\\\\":67},{\\\\\\"x\\\\\\":351,\\\\\\"y\\\\\\":66}],\\\\\\"prob\\\\\\":99,\\\\\\"width\\\\\\":20,\\\\\\"word\\\\\\":\\\\\\"iPhone 12\\\\\\",\\\\\\"x\\\\\\":396,\\\\\\"y\\\\\\":0}],\\\\\\"width\\\\\\":805}\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"4C717018-B6D4-5EB0-8495-2A4FF08D58CA\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RecognizePictureGeneralResponse>\\n<RequestId>4C717018-B6D4-5EB0-8495-2A4FF08D58CA</RequestId>\\n<Data>{\\"content\\":\\"***升维大提速***进一步了解***\\",\\"height\\":655,\\"orgHeight\\":655,\\"orgWidth\\":805,\\"prism_version\\":\\"1.0.9\\",\\"prism_wnum\\":11,\\"prism_wordsInfo\\":[{\\"angle\\":-88,\\"direction\\":0,\\"height\\":111,\\"pos\\":[{\\"x\\":351,\\"y\\":45},{\\"x\\":461,\\"y\\":46},{\\"x\\":461,\\"y\\":67},{\\"x\\":351,\\"y\\":66}],\\"prob\\":99,\\"width\\":20,\\"word\\":\\"iPhone 12\\",\\"x\\":396,\\"y\\":0}],\\"width\\":805}</Data>\\n<Code>200</Code>\\n<Success>true</Success>\\n</RecognizePictureGeneralResponse>","errorExample":""}]',
      'title' => 'RecognizePictureGeneral',
      'summary' => '调用该接口通过文字识别（OCR）技术识别出图片中的文字信息。',
      'description' => '## 使用说明
调用该接口需要开通物联网平台新版公共实例或企业版实例服务。详细说明，请参见[图文识别服务](~~416346~~)。

## QPS限制
目前物联网平台增值服务中的图文识别服务处于公测阶段。

单个阿里云账号每天调用该接口次数最大为20次。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。',
      'responseParamsDescription' => '```
Data数据说明：
angle：图片的角度，当NeedRotate为true时才会返回，0表示正向，90表示图片朝右，180朝下，270朝左。
content：识别出图片的文字块汇总。
height：算法矫正图片后的高度。
width：算法矫正图片后的宽度。
orgHeight：原图的高度。
orgWidth：原图的宽度。
prism_wnum：识别的文字块的数量，prism_wordsInfo数组的大小。
--------------------------prism-wordsInfo文字块数组内的字段说明--------------------------
angle：文字块的角度，这个角度只影响width和height，当角度为-90、90、-270、270，width和height的值需要自行互换。
height：文字块的高度。
width：文字块的宽度。
pos：文字块的外矩形四个点的坐标按顺时针排列，左上、右上、右下、左下，当NeedRotate为true时，如果最外层的angle不为0，需要按照angle矫正图片后，坐标才准确。
word：文字块的文字。
-----------------------------------------------------------------------------------------------------------
```',
      'extraInfo' => ' ',
    ),
    'CreateSceneRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则名称。支持中文、大小写英文字母、数字、下划线（_）和短划线（-），长度限制为1~30个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则内容。格式详情请参见[场景联动规则编写说明](~~171059~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '{"action":[{"params":{"content":"${metadata.formattedTime}: 收到定时消息","title":"钉钉机器人通知","webHook":"https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxxx"},"uri":"action/dingtalk/robot"}],"trigger":{"params":{"cron":"0 * * * * ? 2020","cronType":"quartz_cron"},"uri":"trigger/timer"},"type":"IFTTT"}',
          ),
        ),
        3 => 
        array (
          'name' => 'RuleDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则描述。长度不超过100个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '定时发送消息到钉钉机器人',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C9D9C91B-1B3B-4D84-BE58-68E7B2A989EA',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RuleId' => 
              array (
                'description' => '场景联动规则ID。',
                'type' => 'string',
                'example' => 'f041397879ad4d89822811d741******',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"C9D9C91B-1B3B-4D84-BE58-68E7B2A989EA\\",\\n  \\"Success\\": true,\\n  \\"RuleId\\": \\"f041397879ad4d89822811d741******\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateSceneRuleResponse>\\r\\n  <RequestId>C9D9C91B-1B3B-4D84-BE58-68E7B2A989EA</RequestId>\\r\\n  <RuleId>f041397879ad4d89822811d741******</RuleId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</CreateSceneRuleResponse>","errorExample":""}]',
      'title' => '创建场景联动规则',
      'summary' => '创建场景联动规则	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSceneRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则ID。调用[QuerySceneRule](~~169498~~)接口获取场景联动规则ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'f041397879ad4d89822811d741******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C9D9C91B-1B3B-4D84-BE58-68E7B2A989EA',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"RequestId\\": \\"C9D9C91B-1B3B-4D84-BE58-68E7B2A989EA\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteSceneRuleResponse>\\r\\n  <RequestId>C9D9C91B-1B3B-4D84-BE58-68E7B2A989EA</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</DeleteSceneRuleResponse>","errorExample":""}]',
      'title' => '删除场景联动规则',
      'summary' => '删除场景联动规则。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateSceneRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则ID。调用[QuerySceneRule](~~169498~~)接口获取场景联动规则ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'f041397879ad4d89822811d741******',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则的名称。支持中文、大小写英文字母、数字、下划线（_）和短划线（-），长度限制为1~30个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'RuleContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则内容。格式详情请参见[场景联动规则编写说明](~~171059~~)。',
            'type' => 'string',
            'required' => false,
            'example' => '{"action":[{"params":{"content":"${metadata.formattedTime}: 收到定时消息","title":"钉钉机器人通知","webHook":"https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxxx"},"uri":"action/dingtalk/robot"}],"trigger":{"params":{"cron":"0 * * * * ? 2020","cronType":"quartz_cron"},"uri":"trigger/timer"},"type":"IFTTT"}',
          ),
        ),
        4 => 
        array (
          'name' => 'RuleDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则描述。长度不超过100个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '定时发送消息到钉钉机器人',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C9D9C91B-1B3B-4D84-BE58-68E7B2A989EA',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"C9D9C91B-1B3B-4D84-BE58-68E7B2A989EA\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateSceneRuleResponse>\\r\\n  <RequestId>C9D9C91B-1B3B-4D84-BE58-68E7B2A989EA</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</UpdateSceneRuleResponse>","errorExample":""}]',
      'title' => '更新场景联动规则',
      'summary' => '更新场景联动规则	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetSceneRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则ID。调用[QuerySceneRule](~~169498~~)接口获取场景联动规则ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'f041397879ad4d89822811d741******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '1B6D50A7-F160-4D47-863C-EDEE25E26495',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'RuleStatus' => 
                  array (
                    'description' => '场景联动规则在云端的状态。

- 0：表示停止。

- 1：表示启动。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'RuleContent' => 
                  array (
                    'description' => '场景联动规则内容。',
                    'type' => 'string',
                    'example' => '{\\"action\\":[{\\"params\\":{\\"productKey\\":\\"a19luLB****\\",\\"propertyItems\\":{\\"LightAdjustLevel\\":10},\\"deviceName\\":\\"test01\\"},\\"uri\\":\\"action/device/setProperty\\"}],\\"trigger\\":{\\"params\\":{\\"cron\\":\\"22 13 20 1 *\\",\\"cronType\\":\\"linux\\"},\\"uri\\":\\"trigger/timer\\"},\\"type\\":\\"IFTTT\\",\\"sid\\":\\"9df954b33c854d469a507ef8d6******\\"}',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '场景联动规则的创建时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1584085921000',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '场景联动规则最后一次更新的时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1579493552000',
                  ),
                  'RuleDescription' => 
                  array (
                    'description' => '场景联动规则描述。',
                    'type' => 'string',
                    'example' => '测试',
                  ),
                  'RuleName' => 
                  array (
                    'description' => '场景联动规则的名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"RequestId\\": \\"1B6D50A7-F160-4D47-863C-EDEE25E26495\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"RuleStatus\\": 0,\\n    \\"RuleContent\\": \\"{\\\\\\\\\\\\\\"action\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"params\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"productKey\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"a19luLB****\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"propertyItems\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"LightAdjustLevel\\\\\\\\\\\\\\":10},\\\\\\\\\\\\\\"deviceName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"test01\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"uri\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"action/device/setProperty\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\"trigger\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"params\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"cron\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"22 13 20 1 *\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"cronType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"linux\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"uri\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"trigger/timer\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"IFTTT\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"sid\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"9df954b33c854d469a507ef8d6******\\\\\\\\\\\\\\"}\\",\\n    \\"GmtCreate\\": 1584085921000,\\n    \\"GmtModified\\": 1579493552000,\\n    \\"RuleDescription\\": \\"测试\\",\\n    \\"RuleName\\": \\"test\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetSceneRuleResponse>\\r\\n  <RequestId>1B6D50A7-F160-4D47-863C-EDEE25E26495</RequestId>\\r\\n  <Data>\\r\\n    <GmtCreate>1584085921000</GmtCreate>\\r\\n    <GmtModified>1579493552000</GmtModified>\\r\\n    <RuleContent>{\\"action\\":[{\\"params\\":{\\"productKey\\":\\"a19luLB****\\",\\"propertyItems\\":{\\"LightAdjustLevel\\":10},\\"deviceName\\":\\"test01\\"},\\"uri\\":\\"action/device/setProperty\\"}],\\"trigger\\":{\\"params\\":{\\"cron\\":\\"22 13 20 1 *\\",\\"cronType\\":\\"linux\\"},\\"uri\\":\\"trigger/timer\\"},\\"type\\":\\"IFTTT\\",\\"sid\\":\\"9df954b33c854d469a507ef8d6******\\"}</RuleContent>\\r\\n    <RuleStatus>0</RuleStatus>\\r\\n    <RuleName>test</RuleName>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</GetSceneRuleResponse>","errorExample":""}]',
      'title' => '获取场景联动规则详情',
      'summary' => '获取场景联动规则详情	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySceneRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数量。最大取值30，最小取值1，默认取值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '从返回结果中的第几页开始显示。最小取值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'D4C3331B-0FA8-4A05-AFE2-54F698EDEAF7',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '返回结果中每页显示的记录数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Total' => 
                  array (
                    'description' => '场景联动规则总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'RuleList' => 
                  array (
                    'description' => '场景联动规则列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'RuleStatus' => 
                        array (
                          'description' => '场景联动规则在云端的状态。

- 0：表示停止。

- 1：表示启动。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '场景联动规则的创建时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1582004185000',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '场景联动规则最后一次更新的时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1582098176000',
                        ),
                        'RuleDescription' => 
                        array (
                          'description' => '场景联动规则描述。',
                          'type' => 'string',
                          'example' => '测试',
                        ),
                        'RuleId' => 
                        array (
                          'description' => '场景联动规则ID。',
                          'type' => 'string',
                          'example' => 'f041397879ad4d89822811d741******',
                        ),
                        'RuleName' => 
                        array (
                          'description' => '场景联动规则的名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"D4C3331B-0FA8-4A05-AFE2-54F698EDEAF7\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"Total\\": 1,\\n    \\"RuleList\\": [\\n      {\\n        \\"RuleStatus\\": 1,\\n        \\"GmtCreate\\": 1582004185000,\\n        \\"GmtModified\\": 1582098176000,\\n        \\"RuleDescription\\": \\"测试\\",\\n        \\"RuleId\\": \\"f041397879ad4d89822811d741******\\",\\n        \\"RuleName\\": \\"test\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySceneRuleResponse>\\r\\n  <RequestId>D4C3331B-0FA8-4A05-AFE2-54F698EDEAF7</RequestId>\\r\\n  <Data>\\r\\n    <RuleList>\\r\\n      <Rule>\\r\\n        <GmtCreate>1582004185000</GmtCreate>\\r\\n        <RuleId>f041397879ad4d89822811d741******</RuleId>\\r\\n        <GmtModified>1582098176000</GmtModified>\\r\\n        <RuleStatus>1</RuleStatus>\\r\\n        <RuleName>test</RuleName>\\r\\n      </Rule>\\r\\n    </RuleList>\\r\\n    <PageSize>10</PageSize>\\r\\n    <CurrentPage>1</CurrentPage>\\r\\n    <Total>1</Total>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</QuerySceneRuleResponse>","errorExample":""}]',
      'title' => '查询场景联动规则列表',
      'summary' => '调用该接口查询场景联动规则列表。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableSceneRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则ID。调用[QuerySceneRule](~~169498~~)接口获取场景联动规则ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'f041397879ad4d89822811d741******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C9D9C91B-1B3B-4D84-BE58-68E7B2A989EK',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"RequestId\\": \\"C9D9C91B-1B3B-4D84-BE58-68E7B2A989EK\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<EnableSceneRuleResponse>\\r\\n  <RequestId>C9D9C91B-1B3B-4D84-BE58-68E7B2A989EK</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</EnableSceneRuleResponse>","errorExample":""}]',
      'title' => '启动场景联动规则',
      'summary' => '启动场景联动规则	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableSceneRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则ID。调用[QuerySceneRule](~~169498~~)接口获取场景联动规则ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'fec565038d7544978d9aed5c1a******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C9D9C91B-1B3B-4D84-BE58-68E7BAA989EK',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"RequestId\\": \\"C9D9C91B-1B3B-4D84-BE58-68E7BAA989EK\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DisableSceneRuleResponse>\\r\\n  <RequestId>C9D9C91B-1B3B-4D84-BE58-68E7BAA989EK</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</DisableSceneRuleResponse>","errorExample":""}]',
      'title' => '停止场景联动规则',
      'summary' => '停止场景联动规则	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TriggerSceneRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则ID。调用[QuerySceneRule](~~169498~~)接口获取场景联动规则ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'f041397879ad4d89822811d741******',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在物联网平台控制台的**边缘计算** > **边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => false,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C9D9C91B-1B3B-4D84-AE58-68E7BAA989EK',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"RequestId\\": \\"C9D9C91B-1B3B-4D84-AE58-68E7BAA989EK\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<TriggerSceneRuleResponse>\\r\\n  <RequestId>C9D9C91B-1B3B-4D84-AE58-68E7BAA989EK</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</TriggerSceneRuleResponse>","errorExample":""}]',
      'title' => '触发场景联动规则',
      'summary' => '调用该接口触发场景联动规则。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QuerySummarySceneRuleLog' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则ID。调用[QuerySceneRule](~~169498~~)接口获取场景联动规则ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'fec565038d7544978d9aed5c1a******',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则日志的开始时间，单位为秒，输入Unix时间戳。

> 最多可查询近一个月（30天）的规则执行日志。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1582372973',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则日志的结束时间，单位为秒，输入Unix时间戳。

> 最多可查询近一个月（30天）的规则执行日志。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1582373873',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则的执行结果。

- 0：表示失败。

- 1：表示成功。',
            'type' => 'string',
            'required' => true,
            'example' => '2',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数量。最大取值30，最小取值1，默认取值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '从返回结果中的第几页开始显示。最小取值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '2279A994-3E7D-4EC6-BD17-FA0D0EC2EC77',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '返回结果中每页显示的记录数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Total' => 
                  array (
                    'description' => '场景联动规则日志总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                  'LogList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'LogInfo' => 
                      array (
                        'description' => '场景联动规则日志列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'LogTime' => 
                            array (
                              'description' => '场景联动规则日志出现的时间。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1582373706',
                            ),
                            'Result' => 
                            array (
                              'description' => '场景联动规则的执行结果。

- true：表示成功。

- false：表示失败。',
                              'type' => 'string',
                              'example' => 'true',
                            ),
                            'TraceId' => 
                            array (
                              'description' => '场景联动规则日志的轨迹ID。',
                              'type' => 'string',
                              'example' => 'a6a5b5df1582373508176121******',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"RequestId\\": \\"2279A994-3E7D-4EC6-BD17-FA0D0EC2EC77\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"Total\\": 3,\\n    \\"LogList\\": {\\n      \\"LogInfo\\": [\\n        {\\n          \\"LogTime\\": 1582373706,\\n          \\"Result\\": \\"true\\",\\n          \\"TraceId\\": \\"a6a5b5df1582373508176121******\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QuerySummarySceneRuleLogResponse>\\r\\n  <RequestId>2279A994-3E7D-4EC6-BD17-FA0D0EC2EC77</RequestId>\\r\\n  <Data>\\r\\n    <LogList>\\r\\n      <LogInfo>\\r\\n        <LogTime>1582373706</LogTime>\\r\\n        <TraceId>a6a5b5df1582373508176121******</TraceId>\\r\\n        <Result>true</Result>\\r\\n      </LogInfo>\\r\\n      <LogInfo>\\r\\n        <LogTime>1582373411</LogTime>\\r\\n        <TraceId>90c8f97a1582373433359109******</TraceId>\\r\\n        <Result>true</Result>\\r\\n      </LogInfo>\\r\\n      <LogInfo>\\r\\n        <LogTime>1582373408</LogTime>\\r\\n        <TraceId>90c8f97a1582373411302109******</TraceId>\\r\\n        <Result>true</Result>\\r\\n      </LogInfo>\\r\\n    </LogList>\\r\\n    <PageSize>10</PageSize>\\r\\n    <CurrentPage>1</CurrentPage>\\r\\n    <Total>3</Total>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</QuerySummarySceneRuleLogResponse>","errorExample":""}]',
      'title' => '查询场景联动规则日志',
      'summary' => '调用该接口查询场景联动规则日志。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryDetailSceneRuleLog' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则ID。调用[QuerySceneRule](~~169498~~)接口获取场景联动规则ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'e5dd1c7aa3994ecdbc88235979******',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则日志的开始时间，单位为秒，输入Unix时间戳。

> 最多可查询近一个月（30天）的规则执行日志。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1581917582',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则日志的结束时间，单位为秒，输入Unix时间戳。

> 最多可查询近一个月（30天）的规则执行日志。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1581918482',
          ),
        ),
        4 => 
        array (
          'name' => 'TraceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则日志的轨迹ID。调用[QuerySummarySceneRuleLog](~~169511~~)接口获取该ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'b662a9671581918480168107******',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数量。最大取值30，最小取值1，默认取值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '15',
          ),
        ),
        6 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '从返回结果中的第几页开始显示。最小取值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'ED2DF141-B09A-4C8A-BAA5-30CCEE63036C',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '返回结果中每页显示的记录数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '15',
                  ),
                  'Total' => 
                  array (
                    'description' => '场景联动规则日志总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'LogList' => 
                  array (
                    'description' => '场景联动规则日志详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Code' => 
                        array (
                          'description' => '接口返回码。200表示成功，其它表示错误码，详情请参见**Message**参数中的错误信息提示。',
                          'type' => 'string',
                          'example' => '9201',
                        ),
                        'Message' => 
                        array (
                          'description' => '接口返回的场景联动规则日志信息。',
                          'type' => 'string',
                          'example' => 'device offline, productKey: a1c3t****, deviceName: my_device1',
                        ),
                        'PkDn' => 
                        array (
                          'description' => '场景联动关联的子设备ProductKey和DeviceName。格式为`your_ProductKey/your_DeviceName`。',
                          'type' => 'string',
                          'example' => 'a1c3t****/my_device1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"RequestId\\": \\"ED2DF141-B09A-4C8A-BAA5-30CCEE63036C\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 15,\\n    \\"Total\\": 1,\\n    \\"LogList\\": [\\n      {\\n        \\"Code\\": \\"9201\\",\\n        \\"Message\\": \\"device offline, productKey: a1c3t****, deviceName: my_device1\\",\\n        \\"PkDn\\": \\"a1c3t****/my_device1\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryDetailSceneRuleLogResponse>\\r\\n  <RequestId>ED2DF141-B09A-4C8A-BAA5-30CCEE63036C</RequestId>\\r\\n  <Data>\\r\\n    <LogList>\\r\\n      <LogInfo>\\r\\n        <PkDn>a1c3t****/my_device1</PkDn>\\r\\n        <Message>device offline, productKey: a1c3****, deviceName: my_device1</Message>\\r\\n        <Code>9201</Code>\\r\\n      </LogInfo>\\r\\n    </LogList>\\r\\n    <PageSize>15</PageSize>\\r\\n    <CurrentPage>1</CurrentPage>\\r\\n    <Total>1</Total>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</QueryDetailSceneRuleLogResponse>","errorExample":""}]',
      'title' => '查看场景联动规则日志的详细信息',
      'summary' => '查看场景联动规则日志的详细信息	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例名称。
支持中文汉字、英文大小写、数字、下划线（_）和短划线（-），不超过20个字符（一个中文汉字算2个字符）。',
            'type' => 'string',
            'required' => true,
            'example' => 'LinkIoTEdge_Node',
          ),
        ),
        2 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例标签。每个标签由`key:value`组成，多个标签间以英文逗号隔开。如`k1:v1,k2:v2`。
- 标签key限制如下：    
    - 不可为空。
    - 在该边缘实例中唯一。
    - 仅支持英文大小写。
    - 不可超过20个字符。
- 标签value限制如下：
    - 不可为空。
    - 支持中文、英文大小写、数字、下划线（_）和短划线（-）。
    - 不可超过20个字符（一个中文汉字算2个字符）。',
            'type' => 'string',
            'required' => false,
            'example' => 'k1:v1,k2:v2',
          ),
        ),
        3 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品规格。
- 10：轻量版。
- 20：标准版。
- 30：专业版。

默认值为20（标准版）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'InstanceId' => 
              array (
                'description' => '边缘实例ID。',
                'type' => 'string',
                'example' => 'F3APY0tPLhmgGtx0****',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '28D159F4-980F-423D-95F0-F705E9DFC016',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"InstanceId\\": \\"F3APY0tPLhmgGtx0****\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"28D159F4-980F-423D-95F0-F705E9DFC016\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateEdgeInstanceResponse>\\r\\n    <RequestId>28D159F4-980F-423D-95F0-F705E9DFC016</RequestId>\\r\\n    <InstanceId>F3APY0tPLhmgGtx0****</InstanceId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</CreateEdgeInstanceResponse>","errorExample":""}]',
      'title' => '创建边缘实例',
      'summary' => '创建边缘实例。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'F29C33E5-BF22-48FE-9FEF-8A24146E3388',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"F29C33E5-BF22-48FE-9FEF-8A24146E3388\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteEdgeInstanceResponse>\\r\\n    <RequestId>F29C33E5-BF22-48FE-9FEF-8A24146E3388</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</DeleteEdgeInstanceResponse>","errorExample":""}]',
      'title' => '删除边缘实例',
      'summary' => '删除边缘实例。',
      'description' => '单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例名称。
支持中文汉字、英文大小写、数字、下划线（_）和短划线（-），不超过20个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'LinkIoTEdge_Node',
          ),
        ),
        3 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例标签。每个标签由`key:value`组成，多个标签间以英文逗号隔开。例如`k1:v1,k2:v2`。
- 标签key限制如下：    
    - 不可为空。
    - 在该边缘实例中唯一。
    - 仅支持英文大小写。
    - 不可超过20个字符。
- 标签value限制如下：
    - 不可为空。
    - 支持中文、英文大小写、数字、下划线（_）和短划线（-）。
    - 不可超过20个字符（一个中文汉字算2个字符）。

为空时表示不更新该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'k1:v1,k2:v2',
          ),
        ),
        4 => 
        array (
          'name' => 'Spec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产品规格。
- 10：轻量版。
- 20：标准版。
- 30：专业版。

为空时表示不更新该参数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'BizEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启边缘实例。可选值：

- true：开启。
- false：关闭。

为空时表示不更新该参数。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '10CA6DAD-EBAF-4D3E-9309-9DB5B0FF48F2',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"10CA6DAD-EBAF-4D3E-9309-9DB5B0FF48F2\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateEdgeInstanceResponse>\\r\\n    <RequestId>10CA6DAD-EBAF-4D3E-9309-9DB5B0FF48F2</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</UpdateEdgeInstanceResponse>","errorExample":""}]',
      'title' => '更新边缘实例',
      'summary' => '更新边缘实例。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '16645053-546B-4D7C-832E-E519B0E23CF1',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'GmtCreateTimestamp' => 
                  array (
                    'description' => '创建边缘实例的Unix时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1581912859713',
                  ),
                  'Type' => 
                  array (
                    'description' => '边缘实例授权类型。

- 0：自有实例

- 1：授权实例',
                    'type' => 'string',
                    'example' => '0',
                  ),
                  'RoleArn' => 
                  array (
                    'description' => '授权角色的全局资源描述符。',
                    'type' => 'string',
                    'example' => 'acs:ram::1473922805******:role/aliyuniotaccessingfcrole',
                  ),
                  'Spec' => 
                  array (
                    'description' => '产品规格。

- 10：轻量版。
- 20：标准版。
- 30：专业版。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '30',
                  ),
                  'RoleAttachTime' => 
                  array (
                    'description' => '角色绑定时间。',
                    'type' => 'string',
                    'example' => '2020-02-19 11:25:48',
                  ),
                  'GmtModifiedTimestamp' => 
                  array (
                    'description' => '最后一次更新边缘实例的Unix时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1581912859713',
                  ),
                  'Tags' => 
                  array (
                    'description' => '边缘实例标签，标签由`key:value`组成，多个标签以英文逗号隔开，例如`k1:v1,k2:v2`。',
                    'type' => 'string',
                    'example' => 'k1:v1,k2:v2',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '边缘实例ID。',
                    'type' => 'string',
                    'example' => 'F3APY0tPLhmgGtx0****',
                  ),
                  'RoleName' => 
                  array (
                    'description' => '授权角色名称。',
                    'type' => 'string',
                    'example' => 'AliyunIOTAccessingFCRole',
                  ),
                  'RoleAttachTimestamp' => 
                  array (
                    'description' => '角色绑定的Unix时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1581912859713',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '最后一次更新边缘实例的时间。',
                    'type' => 'string',
                    'example' => '2019-06-26 12:33:25',
                  ),
                  'LatestDeploymentType' => 
                  array (
                    'description' => '边缘实例最近一次部署单的类型。

- deploy：部署。
- reset：重置。',
                    'type' => 'string',
                    'example' => 'deploy',
                  ),
                  'LatestDeploymentStatus' => 
                  array (
                    'description' => '边缘实例最近一次部署单的状态。

- 0：未开始（init）。
- 1：正在进行（processing）。
- 2：成功（success）。
- 3：失败（failure）。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'BizEnable' => 
                  array (
                    'description' => '边缘实例是否开启。

- true：开启。
- false：关闭。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建边缘实例的时间。',
                    'type' => 'string',
                    'example' => '2019-06-26 12:33:25',
                  ),
                  'Name' => 
                  array (
                    'description' => '边缘实例名称。',
                    'type' => 'string',
                    'example' => '测试实例new',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"16645053-546B-4D7C-832E-E519B0E23CF1\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"GmtCreateTimestamp\\": 1581912859713,\\n    \\"Type\\": \\"0\\",\\n    \\"RoleArn\\": \\"acs:ram::1473922805******:role/aliyuniotaccessingfcrole\\",\\n    \\"Spec\\": 30,\\n    \\"RoleAttachTime\\": \\"2020-02-19 11:25:48\\",\\n    \\"GmtModifiedTimestamp\\": 1581912859713,\\n    \\"Tags\\": \\"k1:v1,k2:v2\\",\\n    \\"InstanceId\\": \\"F3APY0tPLhmgGtx0****\\",\\n    \\"RoleName\\": \\"AliyunIOTAccessingFCRole\\",\\n    \\"RoleAttachTimestamp\\": 1581912859713,\\n    \\"GmtModified\\": \\"2019-06-26 12:33:25\\",\\n    \\"LatestDeploymentType\\": \\"deploy\\",\\n    \\"LatestDeploymentStatus\\": 2,\\n    \\"BizEnable\\": true,\\n    \\"GmtCreate\\": \\"2019-06-26 12:33:25\\",\\n    \\"Name\\": \\"测试实例new\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetEdgeInstanceResponse>\\r\\n  <RequestId>16645053-546B-4D7C-832E-E519B0E23CF1</RequestId>\\r\\n  <Data>\\r\\n    <GmtCreate>2019-06-26 12:33:25</GmtCreate>\\r\\n    <BizEnable>true</BizEnable>\\r\\n    <InstanceId>F3APY0tPLhmgGtx0****</InstanceId>\\r\\n    <LatestDeploymentType>deploy</LatestDeploymentType>\\r\\n    <GmtModified>2019-06-26 16:16:22</GmtModified>\\r\\n    <Spec>30</Spec>\\r\\n    <Tags>k1:v1,k2:v2</Tags>\\r\\n    <Name>测试实例new</Name>\\r\\n    <LatestDeploymentStatus>2</LatestDeploymentStatus>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</GetEdgeInstanceResponse>","errorExample":""}]',
      'title' => '获取边缘实例详情',
      'summary' => '获取边缘实例详情。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数量。最大取值30，最小取值1，默认取值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '15',
          ),
        ),
        2 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '从返回结果中的第几页开始显示。最小取值是1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => '测试实例_test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '199BBC5D-FC99-46CB-88E2-FB98E92446FA',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '返回结果中每页显示的记录数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'Total' => 
                  array (
                    'description' => '边缘实例数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '201',
                  ),
                  'InstanceList' => 
                  array (
                    'description' => '边缘实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GmtCreateTimestamp' => 
                        array (
                          'description' => '创建边缘实例的Unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1581912859713',
                        ),
                        'Type' => 
                        array (
                          'description' => '边缘实例授权类型。

- 0：自有实例
- 1：授权实例',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'RoleArn' => 
                        array (
                          'description' => '授权角色的全局资源描述符。',
                          'type' => 'string',
                          'example' => 'acs:ram::1473922805******:role/aliyuniotaccessingfcrole',
                        ),
                        'RoleAttachTime' => 
                        array (
                          'description' => '角色绑定时间。',
                          'type' => 'string',
                          'example' => '2020-02-19 11:25:48',
                        ),
                        'Spec' => 
                        array (
                          'description' => '产品规格。

- 10：轻量版。
- 20：标准版。
- 30：专业版。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '30',
                        ),
                        'GmtModifiedTimestamp' => 
                        array (
                          'description' => '最后一次更新边缘实例的Unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1581912859713',
                        ),
                        'Tags' => 
                        array (
                          'description' => '边缘实例标签。',
                          'type' => 'string',
                          'example' => 'k1:v1,k2:v2',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '边缘实例ID。',
                          'type' => 'string',
                          'example' => '9iqyQAKDb2aYGVKa****',
                        ),
                        'RoleName' => 
                        array (
                          'description' => '授权角色名称。',
                          'type' => 'string',
                          'example' => 'AliyunIOTAccessingFCRole',
                        ),
                        'RoleAttachTimestamp' => 
                        array (
                          'description' => '角色绑定的Unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1581912859713',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '最后一次更新边缘实例的时间。',
                          'type' => 'string',
                          'example' => '2019-07-17 14:51:38',
                        ),
                        'LatestDeploymentType' => 
                        array (
                          'description' => '边缘实例最近一次部署单类型。

- deploy：部署。
- reset：重置。',
                          'type' => 'string',
                          'example' => 'deploy',
                        ),
                        'LatestDeploymentStatus' => 
                        array (
                          'description' => '边缘实例最近一次部署单状态。

- 0：未开始（init）。
- 1：正在进行（processing）。
- 2：成功（success）。
- 3：失败（failure）。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'BizEnable' => 
                        array (
                          'description' => '边缘实例是否开启。

- true：开启。
- false：关闭。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建边缘实例的时间。',
                          'type' => 'string',
                          'example' => '2019-07-17 14:34:28',
                        ),
                        'Name' => 
                        array (
                          'description' => '边缘实例名称。',
                          'type' => 'string',
                          'example' => 'test_le1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"199BBC5D-FC99-46CB-88E2-FB98E92446FA\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 2,\\n    \\"Total\\": 201,\\n    \\"InstanceList\\": [\\n      {\\n        \\"GmtCreateTimestamp\\": 1581912859713,\\n        \\"Type\\": 0,\\n        \\"RoleArn\\": \\"acs:ram::1473922805******:role/aliyuniotaccessingfcrole\\",\\n        \\"RoleAttachTime\\": \\"2020-02-19 11:25:48\\",\\n        \\"Spec\\": 30,\\n        \\"GmtModifiedTimestamp\\": 1581912859713,\\n        \\"Tags\\": \\"k1:v1,k2:v2\\",\\n        \\"InstanceId\\": \\"9iqyQAKDb2aYGVKa****\\",\\n        \\"RoleName\\": \\"AliyunIOTAccessingFCRole\\",\\n        \\"RoleAttachTimestamp\\": 1581912859713,\\n        \\"GmtModified\\": \\"2019-07-17 14:51:38\\",\\n        \\"LatestDeploymentType\\": \\"deploy\\",\\n        \\"LatestDeploymentStatus\\": 1,\\n        \\"BizEnable\\": true,\\n        \\"GmtCreate\\": \\"2019-07-17 14:34:28\\",\\n        \\"Name\\": \\"test_le1\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryEdgeInstanceResponse>\\r\\n  <RequestId>199BBC5D-FC99-46CB-88E2-FB98E92446FA</RequestId>\\r\\n  <Data>\\r\\n    <PageSize>2</PageSize>\\r\\n    <CurrentPage>1</CurrentPage>\\r\\n    <Total>201</Total>\\r\\n    <InstanceList>\\r\\n      <Instance>\\r\\n        <GmtCreate>2019-07-17 14:34:28</GmtCreate>\\r\\n        <BizEnable>true</BizEnable>\\r\\n        <InstanceId>9iqyQAKDb2aYGVKa****</InstanceId>\\r\\n        <GmtModified>2019-07-17 14:51:38</GmtModified>\\r\\n        <Spec>20</Spec>\\r\\n        <Name>test_le1</Name>\\r\\n      </Instance>\\r\\n      <Instance>\\r\\n        <GmtCreate>2018-10-22 20:09:29</GmtCreate>\\r\\n        <BizEnable>true</BizEnable>\\r\\n        <InstanceId>ZpbCxkQpbb2kpmm0****</InstanceId>\\r\\n        <LatestDeploymentType>reset</LatestDeploymentType>\\r\\n        <GmtModified>2019-07-16 16:50:50</GmtModified>\\r\\n        <Spec>30</Spec>\\r\\n        <Name>test_le1</Name>\\r\\n        <LatestDeploymentStatus>1</LatestDeploymentStatus>\\r\\n      </Instance>\\r\\n    </InstanceList>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</QueryEdgeInstanceResponse>","errorExample":""}]',
      'title' => '查询当前账号下的所有边缘实例',
      'summary' => '查询当前账号下的所有边缘实例	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BindGatewayToEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关所属产品的Key，产品的唯一标识符。

> 如果传入此参数，需同时传入**DeviceName**。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1mAdeG****',
          ),
        ),
        3 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关设备名称。

> 如果传入此参数，需同时传入**ProductKey**。',
            'type' => 'string',
            'required' => false,
            'example' => 'device1',
          ),
        ),
        4 => 
        array (
          'name' => 'IotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关设备的ID，物联网平台为设备生成的唯一标识符，与**ProductKey**和**DeviceName**组合一一对应。

> 如果传入该参数，则无需传入**ProductKey**和**DeviceName**；如果您同时传入**IotId**和**ProductKey**与**DeviceName**组合，则以**IotId**为准。',
            'type' => 'string',
            'required' => false,
            'example' => '4z819VQHk6VSLmmBJfrf0010******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '28D159F4-980F-423D-95F0-F705E9DFC016',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"28D159F4-980F-423D-95F0-F705E9DFC016\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BindGatewayToEdgeInstanceResponse>\\r\\n    <RequestId>E3817065-2A17-4814-82FA-66FAB2CC01DF</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</BindGatewayToEdgeInstanceResponse>","errorExample":""}]',
      'title' => '将网关分配到边缘实例中',
      'summary' => '将网关分配到边缘实例中	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryEdgeInstanceGateway' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '28D159F4-980F-423D-95F0-F705E9DFC016',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'GatewayList' => 
              array (
                'description' => '调用成功时，返回的网关数据。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ProductKey' => 
                    array (
                      'description' => '网关所属产品的Key，产品的唯一标识符。',
                      'type' => 'string',
                      'example' => 'a1mAdeG****',
                    ),
                    'EdgeVersion' => 
                    array (
                      'description' => '边缘服务版本号。',
                      'type' => 'string',
                      'example' => 'v1.0.0',
                    ),
                    'DeviceName' => 
                    array (
                      'description' => '网关设备名称。',
                      'type' => 'string',
                      'example' => 'gateway_01',
                    ),
                    'IotId' => 
                    array (
                      'description' => '网关设备的ID，物联网平台为设备生成的唯一标识符。',
                      'type' => 'string',
                      'example' => 'LuD9x5hiRUdVemWU****000101',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"28D159F4-980F-423D-95F0-F705E9DFC016\\",\\n  \\"Success\\": true,\\n  \\"GatewayList\\": [\\n    {\\n      \\"ProductKey\\": \\"a1mAdeG****\\",\\n      \\"EdgeVersion\\": \\"v1.0.0\\",\\n      \\"DeviceName\\": \\"gateway_01\\",\\n      \\"IotId\\": \\"LuD9x5hiRUdVemWU****000101\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<QueryEdgeInstanceGatewayResponse>\\r\\n  <GatewayList>\\r\\n    <Gateway>\\r\\n      <IotId>LuD9x5hiRUdVemWU****000101</IotId>\\r\\n      <ProductKey>a1mAdeG****</ProductKey>\\r\\n      <DeviceName>gateway_01</DeviceName>\\r\\n      <EdgeVersion>v1.0.0</EdgeVersion>\\r\\n    </Gateway>\\r\\n  </GatewayList>\\r\\n  <RequestId>547A62E5-0D6D-4DB5-9CCC-58C706891976</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</QueryEdgeInstanceGatewayResponse>","errorExample":""}]',
      'title' => '查询边缘实例中的网关',
      'summary' => '查询边缘实例中的网关。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BindDriverToEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '9c1ae7bd59f1469abbdccc959228****',
          ),
        ),
        3 => 
        array (
          'name' => 'DriverVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动版本号。为空则默认为最新版本驱动。',
            'type' => 'string',
            'required' => false,
            'example' => '2.0.0',
          ),
        ),
        4 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单编号。

> 当驱动为已购驱动时必填；驱动为官方驱动或自研驱动时不需要填写。',
            'type' => 'string',
            'required' => false,
            'example' => '11123458765****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '28D159F4-980F-423D-95F0-F705E9DFC016',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"28D159F4-980F-423D-95F0-F705E9DFC016\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BindDriverToEdgeInstanceResponse>\\r\\n    <RequestId>FEA6A369-2E16-4DB3-A0A6-6D14FD244170</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</BindDriverToEdgeInstanceResponse>","errorExample":""}]',
      'title' => '将驱动分配到边缘实例中',
      'summary' => '将驱动分配到边缘实例中。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnbindDriverFromEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要移除的驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '9c1ae7bd59f1469abbdccc959228****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '28D159F4-980F-423D-95F0-F705E9DFC016',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"28D159F4-980F-423D-95F0-F705E9DFC016\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UnbindDriverFromEdgeInstanceResponse>\\r\\n    <RequestId>B15AF459-6A65-44DB-8047-1BDF3E68BE3D</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</UnbindDriverFromEdgeInstanceResponse>","errorExample":""}]',
      'title' => '将驱动从边缘实例中移除',
      'summary' => '调用该接口将驱动从边缘实例中移除。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryEdgeInstanceDriver' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '从返回结果中的第几页开始显示。最小取值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数量。最大取值30，最小取值1，默认取值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '77F540BC-A0EF-46A4-ABDE-18644C69AAF5',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '返回结果中每页显示的记录数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '30',
                  ),
                  'Total' => 
                  array (
                    'description' => '驱动数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'DriverList' => 
                  array (
                    'description' => '驱动列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GmtCreate' => 
                        array (
                          'description' => '驱动创建时间。',
                          'type' => 'string',
                          'example' => '2019-06-26 17:22:25',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '驱动最后一次更新时间。',
                          'type' => 'string',
                          'example' => '2019-06-26 17:22:25',
                        ),
                        'DriverId' => 
                        array (
                          'description' => '驱动ID。',
                          'type' => 'string',
                          'example' => '9c1ae7bd59f1469abbdccc959228****',
                        ),
                        'OrderId' => 
                        array (
                          'description' => '订单编号。',
                          'type' => 'string',
                          'example' => '11123458765423',
                        ),
                        'DriverVersion' => 
                        array (
                          'description' => '驱动版本号。',
                          'type' => 'string',
                          'example' => '1.0.0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"77F540BC-A0EF-46A4-ABDE-18644C69AAF5\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 30,\\n    \\"Total\\": 1,\\n    \\"DriverList\\": [\\n      {\\n        \\"GmtCreate\\": \\"2019-06-26 17:22:25\\",\\n        \\"GmtModified\\": \\"2019-06-26 17:22:25\\",\\n        \\"DriverId\\": \\"9c1ae7bd59f1469abbdccc959228****\\",\\n        \\"OrderId\\": \\"11123458765423\\",\\n        \\"DriverVersion\\": \\"1.0.0\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryEdgeInstanceDriverResponse>\\r\\n  <RequestId>77F540BC-A0EF-46A4-ABDE-18644C69AAF5</RequestId>\\r\\n  <Data>\\r\\n    <PageSize>30</PageSize>\\r\\n    <CurrentPage>1</CurrentPage>\\r\\n    <Total>1</Total>\\r\\n    <DriverList>\\r\\n      <Driver>\\r\\n        <GmtCreate>2019-06-26 17:22:25</GmtCreate>\\r\\n        <DriverId>9c1ae7bd59f1469abbdccc959228****</DriverId>\\r\\n        <GmtModified>2019-06-26 17:22:25</GmtModified>\\r\\n      </Driver>\\r\\n    </DriverList>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</QueryEdgeInstanceDriverResponse>","errorExample":""}]',
      'title' => '查询边缘实例的驱动列表',
      'summary' => '查询边缘实例的驱动列表	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetEdgeInstanceDriverConfigs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '021d154d2a2f4dd7a489773d9e04****',
          ),
        ),
        3 => 
        array (
          'name' => 'Configs',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '配置列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '配置的关键字。在有多个配置的情况下，用于区分配置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key1',
                ),
                'Format' => 
                array (
                  'description' => '配置文件格式。取值有KV（键值对配置）、JSON（JSON格式）、FILE（配置文件）。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'JSON',
                ),
                'Content' => 
                array (
                  'description' => '配置内容，可以选择传入：

- 配置内容文本。格式请参见[驱动与设备信息配置](~~120906~~)内容。
- 存储配置文件的阿里云对象存储（OSS）地址。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '{"test":123}',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '252C7754-F6A2-454B-9DE2-382A97FC0C3F',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"252C7754-F6A2-454B-9DE2-382A97FC0C3F\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SetEdgeInstanceDriverConfigsResponse>\\r\\n    <RequestId>252C7754-F6A2-454B-9DE2-382A97FC0C3F</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</SetEdgeInstanceDriverConfigsResponse>","errorExample":""}]',
      'title' => 'SetEdgeInstanceDriverConfigs',
      'summary' => '调用该接口配置边缘实例驱动。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ClearEdgeInstanceDriverConfigs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '021d154d2a2f4dd7a489773d9e04****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'DF6B728B-ADD7-4C41-88C3-D21B4CA82CF1',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"DF6B728B-ADD7-4C41-88C3-D21B4CA82CF1\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ClearEdgeInstanceDriverConfigsResponse>\\r\\n    <RequestId>DF6B728B-ADD7-4C41-88C3-D21B4CA82CF1</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</ClearEdgeInstanceDriverConfigsResponse>","errorExample":""}]',
      'title' => '清空边缘实例驱动配置',
      'summary' => '清空边缘实例驱动配置。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchGetEdgeInstanceDriverConfigs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要查询的驱动ID列表。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。

> 最多可传入20个驱动ID，即最多可批量获取20个驱动的配置。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => '021d154d2a2f4dd7a489773d9e04****',
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'D6113390-F507-458B-8544-7B01F945630B',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DriverConfigList' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DriverId' => 
                    array (
                      'description' => '驱动ID。',
                      'type' => 'string',
                      'example' => '021d154d2a2f4dd7a489773d9e04****',
                    ),
                    'ConfigList' => 
                    array (
                      'description' => '驱动配置信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '配置的关键字。在有多个配置的情况下，用于区分配置。',
                            'type' => 'string',
                            'example' => 'key1',
                          ),
                          'ConfigId' => 
                          array (
                            'description' => '配置ID。',
                            'type' => 'string',
                            'example' => 'dac71722ceac4a299dbf3e8dc3c8****',
                          ),
                          'Format' => 
                          array (
                            'description' => '配置文件格式，取值有KV（键值对配置）、JSON（JSON格式）、FILE（配置文件）。',
                            'type' => 'string',
                            'example' => 'JSON',
                          ),
                          'Content' => 
                          array (
                            'description' => '配置内容文本或存储配置内容文件的OSS地址。',
                            'type' => 'string',
                            'example' => '{\\"test\\":123}',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"D6113390-F507-458B-8544-7B01F945630B\\",\\n  \\"Success\\": true,\\n  \\"DriverConfigList\\": [\\n    {\\n      \\"DriverId\\": \\"021d154d2a2f4dd7a489773d9e04****\\",\\n      \\"ConfigList\\": [\\n        {\\n          \\"Key\\": \\"key1\\",\\n          \\"ConfigId\\": \\"dac71722ceac4a299dbf3e8dc3c8****\\",\\n          \\"Format\\": \\"JSON\\",\\n          \\"Content\\": \\"{\\\\\\\\\\\\\\"test\\\\\\\\\\\\\\":123}\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<BatchGetEdgeInstanceDriverConfigsResponse>\\r\\n  <DriverConfigList>\\r\\n    <DriverConfig>\\r\\n      <DriverId>021d154d2a2f4dd7a489773d9e0****c</DriverId>\\r\\n      <ConfigList>\\r\\n        <Config>\\r\\n          <Format>JSON</Format>\\r\\n          <Content>{\\"test\\":123}</Content>\\r\\n          <ConfigId>dac71722ceac4a299dbf3e8dc3c8****</ConfigId>\\r\\n        </Config>\\r\\n      </ConfigList>\\r\\n    </DriverConfig>\\r\\n  </DriverConfigList>\\r\\n  <RequestId>D6113390-F507-458B-8544-7B01F945630B</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</BatchGetEdgeInstanceDriverConfigsResponse>","errorExample":""}]',
      'title' => '批量获取边缘实例驱动配置',
      'summary' => '批量获取边缘实例驱动配置。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchBindDeviceToEdgeInstanceWithDriver' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '021d154d2a2f4dd7a489773d9e04****',
          ),
        ),
        3 => 
        array (
          'name' => 'IotIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '设备ID列表。
可调用[QueryDevice](~~69905~~)查询当前账号下所有设备信息，获取设备IotId。

> 单次调用最多可绑定20个设备。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'BXPV9Ks3bxwM9fD****0000101',
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BFFA9519-6AF1-4D15-AFAF-FD412714C1BE',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"BFFA9519-6AF1-4D15-AFAF-FD412714C1BE\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchBindDeviceToEdgeInstanceWithDriverResponse>\\r\\n    <RequestId>BFFA9519-6AF1-4D15-AFAF-FD412714C1BE</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</BatchBindDeviceToEdgeInstanceWithDriverResponse>","errorExample":""}]',
      'title' => '批量将设备分配到边缘实例',
      'summary' => '批量将设备分配到边缘实例中，并为设备设置驱动。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchUnbindDeviceFromEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'IotIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '设备ID列表。可调用[QueryDevice](~~69905~~)查询当前账号下所有设备信息，获取设备IotId。

> 单次调用最多可移除20个设备。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'BXPV9Ks3bxwM9fD****0000101',
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '34755DC3-2809-4AE2-BAD8-7B81ED69D570',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"34755DC3-2809-4AE2-BAD8-7B81ED69D570\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchUnbindDeviceFromEdgeInstanceResponse>\\r\\n    <RequestId>34755DC3-2809-4AE2-BAD8-7B81ED69D570</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</BatchUnbindDeviceFromEdgeInstanceResponse>","errorExample":""}]',
      'title' => '批量将设备从边缘实例中移除',
      'summary' => '批量将设备从边缘实例中移除。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryEdgeInstanceDevice' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'tG7sKuOQ7ylb7qS4****',
          ),
        ),
        2 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '从返回结果中的第几页开始显示。最小取值是1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中，每页显示的记录数量。最大取值30，最小取值1，默认取值为10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '15',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'AC76932E-E0C9-41EE-843D-B1CA3279B053',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '返回结果中每页显示的设备数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '15',
                  ),
                  'Total' => 
                  array (
                    'description' => '设备数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '4',
                  ),
                  'DeviceList' => 
                  array (
                    'description' => '设备信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ProductKey' => 
                        array (
                          'description' => '产品的唯一标识符。',
                          'type' => 'string',
                          'example' => 'a1p5QfE****',
                        ),
                        'DriverId' => 
                        array (
                          'description' => '驱动ID。',
                          'type' => 'string',
                          'example' => '44c090ba7b104641a4b9bcf10241****',
                        ),
                        'DeviceName' => 
                        array (
                          'description' => '设备名称。',
                          'type' => 'string',
                          'example' => 'test_tmp_zdy',
                        ),
                        'IotId' => 
                        array (
                          'description' => '设备ID。',
                          'type' => 'string',
                          'example' => 'XSpPdtxzE6ebtCkx****000101',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"AC76932E-E0C9-41EE-843D-B1CA3279B053\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 15,\\n    \\"Total\\": 4,\\n    \\"DeviceList\\": [\\n      {\\n        \\"ProductKey\\": \\"a1p5QfE****\\",\\n        \\"DriverId\\": \\"44c090ba7b104641a4b9bcf10241****\\",\\n        \\"DeviceName\\": \\"test_tmp_zdy\\",\\n        \\"IotId\\": \\"XSpPdtxzE6ebtCkx****000101\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryEdgeInstanceDeviceResponse>\\r\\n  <RequestId>AC76932E-E0C9-41EE-843D-B1CA3279B053</RequestId>\\r\\n  <Data>\\r\\n    <PageSize>15</PageSize>\\r\\n    <CurrentPage>1</CurrentPage>\\r\\n    <Total>4</Total>\\r\\n    <DeviceList>\\r\\n      <Device>\\r\\n        <IotId>XSpPdtxzE6ebtCkx****000101</IotId>\\r\\n        <DriverId>44c090ba7b104641a4b9bcf10241****</DriverId>\\r\\n        <ProductKey>a1p5QfE****</ProductKey>\\r\\n        <DeviceName>test_tmp_zdy</DeviceName>\\r\\n      </Device>\\r\\n      <Device>\\r\\n        <IotId>ixX7TRWtewDxZnus****000101</IotId>\\r\\n        <DriverId>021d154d2a2f4dd7a489773d9e04****</DriverId>\\r\\n        <ProductKey>a1p5QfE****</ProductKey>\\r\\n        <DeviceName>test_name19</DeviceName>\\r\\n      </Device>\\r\\n      <Device>\\r\\n        <IotId>MkzMNGVF3wOk62J6****000101</IotId>\\r\\n        <DriverId>021d154d2a2f4dd7a489773d9e04****</DriverId>\\r\\n        <ProductKey>a11jTlJ****</ProductKey>\\r\\n        <DeviceName>testsss</DeviceName>\\r\\n      </Device>\\r\\n      <Device>\\r\\n        <IotId>6nFJ9ewglx7aBWPb****000101</IotId>\\r\\n        <DriverId>021d154d2a2f4dd7a489773d9e04****</DriverId>\\r\\n        <ProductKey>a1PcD3R****</ProductKey>\\r\\n        <DeviceName>device01</DeviceName>\\r\\n      </Device>\\r\\n    </DeviceList>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</QueryEdgeInstanceDeviceResponse>","errorExample":""}]',
      'title' => '查询边缘实例中的设备列表',
      'summary' => '查询边缘实例中的设备列表。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchSetEdgeInstanceDeviceConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceConfigs',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '设备配置信息列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Content' => 
                array (
                  'description' => '配置内容，可以选择传入：

- 配置内容文本。格式请参见[设备配置说明](~~172319~~)。
- 存储配置文件的阿里云对象存储（OSS）地址。

> 单次调用最多可填写20个配置信息。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '{"test": "device_config_demo"}',
                ),
                'IotId' => 
                array (
                  'description' => '设备ID。

可调用[QueryEdgeInstanceDevice](~~135261~~)查询实例中的设备ID。

> 单次调用最多可填写20个设备ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'sjI0Sd124XFYyjBY****000101',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '748659E2-EDC9-4E3E-BF9D-06F16995CF66',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"748659E2-EDC9-4E3E-BF9D-06F16995CF66\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchSetEdgeInstanceDeviceConfigResponse>\\r\\n    <RequestId>748659E2-EDC9-4E3E-BF9D-06F16995CF66</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</BatchSetEdgeInstanceDeviceConfigResponse>","errorExample":""}]',
      'title' => 'BatchSetEdgeInstanceDeviceConfig',
      'summary' => '调用该接口批量配置边缘实例设备。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchClearEdgeInstanceDeviceConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'IotIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要查询的设备ID列表。可调用[QueryEdgeInstanceDevice](~~135261~~)查询实例中的设备ID。

>单次调用最多可填写20个设备ID。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'BXPV9Ks3bxwM9fD****0000101',
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '0BC2AA1C-E4D0-4E78-A70F-08C9A90686B0',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"0BC2AA1C-E4D0-4E78-A70F-08C9A90686B0\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchClearEdgeInstanceDeviceConfigResponse>\\r\\n    <RequestId>0BC2AA1C-E4D0-4E78-A70F-08C9A90686B0</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</BatchClearEdgeInstanceDeviceConfigResponse>","errorExample":""}]',
      'title' => '批量清空边缘实例设备配置',
      'summary' => '批量清空边缘实例设备配置。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchGetEdgeInstanceDeviceConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'IotIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要查询的设备ID列表。可调用[QueryEdgeInstanceDevice](~~135261~~)查询实例中的设备ID。

> 单次调用最多可填写20个设备ID。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'BXPV9Ks3bxwM9fDl****000101',
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'D4A102C2-36A5-4964-9694-0F8EFF95CCA8',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DeviceConfigList' => 
              array (
                'description' => '调用成功时，返回的设备配置数据。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'IotId' => 
                    array (
                      'description' => '设备ID。',
                      'type' => 'string',
                      'example' => 'sjI0Sd124XFYyjBY****000101',
                    ),
                    'Config' => 
                    array (
                      'description' => '设备配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Content' => 
                        array (
                          'description' => '配置内容文本或存储配置内容文件的OSS地址。',
                          'type' => 'string',
                          'example' => '{\\"test\\": \\"device_config_demo\\"}',
                        ),
                        'Format' => 
                        array (
                          'description' => '配置文件格式。参数值有KV（键值对配置）、JSON（JSON格式）、FILE（配置文件）。',
                          'type' => 'string',
                          'example' => 'JSON',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"D4A102C2-36A5-4964-9694-0F8EFF95CCA8\\",\\n  \\"Success\\": true,\\n  \\"DeviceConfigList\\": [\\n    {\\n      \\"IotId\\": \\"sjI0Sd124XFYyjBY****000101\\",\\n      \\"Config\\": {\\n        \\"Content\\": \\"{\\\\\\\\\\\\\\"test\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"device_config_demo\\\\\\\\\\\\\\"}\\",\\n        \\"Format\\": \\"JSON\\"\\n      }\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<BatchGetEdgeInstanceDeviceConfigResponse>\\r\\n  <DeviceConfigList>\\r\\n    <DeviceConfig>\\r\\n      <IotId>sjI0Sd124XFYyjBY****000101</IotId>\\r\\n      <Config>\\r\\n        <Format>JSON</Format>\\r\\n        <Content>{\\"test\\": \\"device_config_demo\\"}</Content>\\r\\n      </Config>\\r\\n    </DeviceConfig>\\r\\n    <DeviceConfig>\\r\\n      <IotId>BXPV9Ks3bxwM9fD****0000101</IotId>\\r\\n      <Config>\\r\\n        <Format>JSON</Format>\\r\\n        <Content>{\\"test\\": \\"device_config_demo\\"}</Content>\\r\\n      </Config>\\r\\n    </DeviceConfig>\\r\\n  </DeviceConfigList>\\r\\n  <RequestId>D4A102C2-36A5-4964-9694-0F8EFF95CCA8</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</BatchGetEdgeInstanceDeviceConfigResponse>","errorExample":""}]',
      'title' => '批量获取边缘实例设备配置',
      'summary' => '批量获取边缘实例设备配置。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateEdgeInstanceDeployment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'PgEfYupSn6Pvhfkx****',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署单类型。

- deploy：部署。
- reset：重置。',
            'type' => 'string',
            'required' => true,
            'example' => 'deploy',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'DeploymentId' => 
              array (
                'description' => '调用成功时，返回的部署任务单ID。',
                'type' => 'string',
                'example' => '38d544b1222d45b4b425240167bf****',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C8293A57-6BBC-42FB-B093-BF304D5BF09C',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"DeploymentId\\": \\"38d544b1222d45b4b425240167bf****\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"C8293A57-6BBC-42FB-B093-BF304D5BF09C\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateEdgeInstanceDeploymentResponse>\\r\\n    <RequestId>C8293A57-6BBC-42FB-B093-BF304D5BF09C</RequestId>\\r\\n    <DeploymentId>38d544b1222d45b4b425240167bf****</Data>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</CreateEdgeInstanceDeploymentResponse>","errorExample":""}]',
      'title' => '创建边缘实例部署单',
      'summary' => '部署边缘实例，创建边缘实例部署单。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CloseEdgeInstanceDeployment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'PgEfYupSn6Pvhfkx****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '3C969586-3DD1-41A7-9B8E-E8B134CA6600',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"3C969586-3DD1-41A7-9B8E-E8B134CA6600\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CloseEdgeInstanceDeploymentResponse>\\r\\n    <RequestId>3C969586-3DD1-41A7-9B8E-E8B134CA6600</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</CloseEdgeInstanceDeploymentResponse>","errorExample":""}]',
      'title' => '关闭边缘实例部署任务单',
      'summary' => '关闭边缘实例部署任务单。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetEdgeInstanceDeployment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'PgEfYupSn6Pvhfkx****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeploymentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部署单ID。可调用[QueryEdgeInstanceHistoricDeployment](~~135275~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '9261e308a9504fde9b4cf8462b0b****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '6B72291A-9492-445E-81D9-335D2D3E44C0',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'GmtCreateTimestamp' => 
                  array (
                    'description' => '部署单创建的Unix时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1581912859713',
                  ),
                  'Type' => 
                  array (
                    'description' => '部署单类型。

- deploy：部署。
- reset：重置。',
                    'type' => 'string',
                    'example' => 'deploy',
                  ),
                  'Status' => 
                  array (
                    'description' => '部署单当前状态。

- 0：未开始（init）。
- 1：正在进行中（processing）。
- 2：成功（success）。
- 3：失败（failure）。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'DeploymentId' => 
                  array (
                    'description' => '部署单ID。',
                    'type' => 'string',
                    'example' => '9261e308a9504fde9b4cf8462b0b****',
                  ),
                  'Description' => 
                  array (
                    'description' => '部署单描述。',
                    'type' => 'string',
                    'example' => 'deploy_1561543948874',
                  ),
                  'GmtModifiedTimestamp' => 
                  array (
                    'description' => '部署单最后一次更新的Unix时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1581912859713',
                  ),
                  'GmtCompleted' => 
                  array (
                    'description' => '部署完成时间。',
                    'type' => 'string',
                    'example' => '2019-06-26 18:12:35',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '部署单创建时间。',
                    'type' => 'string',
                    'example' => '2019-06-26 18:12:29',
                  ),
                  'GmtCompletedTimestamp' => 
                  array (
                    'description' => '部署完成的Unix时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1581912859713',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '部署单最后一次更新时间。',
                    'type' => 'string',
                    'example' => '2019-06-26 18:12:35',
                  ),
                  'TaskList' => 
                  array (
                    'description' => '部署任务列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GmtCreateTimestamp' => 
                        array (
                          'description' => '部署任务创建的Unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1581912859713',
                        ),
                        'Status' => 
                        array (
                          'description' => '部署任务当前状态。

- 0：初始状态（init）。
- 1：正在进行中（processing）。
- 2：成功（success）。
- 3：失败（failure）。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'Stage' => 
                        array (
                          'description' => '部署任务当前阶段。

- 0：未开始（init）。
- 8：正在装配（assembly）。
- 16：正在打包（package）。
- 24：正在分发（dispatcher）。
- 32：已完成（finish）。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '32',
                        ),
                        'GatewayId' => 
                        array (
                          'description' => '网关设备ID。',
                          'type' => 'string',
                          'example' => 'jQWf3MVgQjMzcwsY****000101',
                        ),
                        'GmtModifiedTimestamp' => 
                        array (
                          'description' => '部署任务最后一次更新的Unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1581912859713',
                        ),
                        'GmtCompleted' => 
                        array (
                          'description' => '部署任务完成时间。',
                          'type' => 'string',
                          'example' => '2019-06-26 18:12:35',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '部署任务创建时间。',
                          'type' => 'string',
                          'example' => '2019-06-26 18:12:29',
                        ),
                        'GmtCompletedTimestamp' => 
                        array (
                          'description' => '部署任务完成的Unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1581912859713',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '部署任务最后一次更新时间。',
                          'type' => 'string',
                          'example' => '2019-06-26 18:12:35',
                        ),
                        'TaskId' => 
                        array (
                          'description' => '部署任务ID。',
                          'type' => 'string',
                          'example' => '49ea651529014bf8b5645d5f9062****',
                        ),
                        'ResourceSnapshotList' => 
                        array (
                          'description' => '部署快照列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Status' => 
                              array (
                                'description' => '当前状态。

- 0：未开始（init）。
- 1：正在进行（processing）。
- 2：成功（success）。
- 3：失败（failure）。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '2',
                              ),
                              'GmtCreateTimestamp' => 
                              array (
                                'description' => '部署单快照创建的Unix时间戳。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1581912859713',
                              ),
                              'Stage' => 
                              array (
                                'description' => '部署单快照当前阶段。

- 0：初始状态（init）。
- 8：正在编译（assembly）。
- 16：正在打包（package）。
- 24：正在分发（dispatcher）。
- 32：已完成（finish）。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '32',
                              ),
                              'GmtModifiedTimestamp' => 
                              array (
                                'description' => '部署单快照最后一次更新的Unix时间戳。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1581912859713',
                              ),
                              'GmtModified' => 
                              array (
                                'description' => '部署单快照最后一次更新时间。',
                                'type' => 'string',
                                'example' => '2019-06-26 18:12:34',
                              ),
                              'Log' => 
                              array (
                                'description' => '资源部署日志。',
                                'type' => 'string',
                                'example' => '[{\\"resourceId\\":\\"device_config\\",\\"code\\":\\"0\\",\\"stage\\":0,\\"level\\":\\"INFO\\",\\"message\\":\\"init success\\",\\"resourceType\\":\\"DEVICE_CONFIG\\",\\"timestamp\\":1561543949858},{\\"resourceId\\":\\"device_config\\",\\"code\\":\\"0\\",\\"stage\\":8,\\"level\\":\\"INFO\\",\\"message\\":\\"assembly success\\",\\"resourceType\\":\\"DEVICE_CONFIG\\",\\"timestamp\\":1561543951419},{\\"resourceId\\":\\"device_config\\",\\"code\\":\\"0\\",\\"stage\\":16,\\"level\\":\\"INFO\\",\\"message\\":\\"package success\\",\\"resourceType\\":\\"DEVICE_CONFIG\\",\\"timestamp\\":1561543952591},{\\"resourceId\\":\\"device_config\\",\\"code\\":\\"0\\",\\"stage\\":32,\\"level\\":\\"INFO\\",\\"message\\":\\"download success\\",\\"resourceType\\":\\"DEVICE_CONFIG\\",\\"timestamp\\":1561543954149}]',
                              ),
                              'OperateType' => 
                              array (
                                'description' => '操作类型。

- 0：部署（deploy）。
- 1：删除（delete）。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '0',
                              ),
                              'ResourceType' => 
                              array (
                                'description' => '资源类型。',
                                'type' => 'string',
                                'example' => 'device_config',
                              ),
                              'SnapshotId' => 
                              array (
                                'description' => '部署快照ID。',
                                'type' => 'string',
                                'example' => 'ab576e84a43043d7840cbcebf4a5****',
                              ),
                              'GmtCompleted' => 
                              array (
                                'description' => '部署单快照完成时间。',
                                'type' => 'string',
                                'example' => '2019-06-26 18:12:34',
                              ),
                              'GmtCreate' => 
                              array (
                                'description' => '部署单快照创建时间。',
                                'type' => 'string',
                                'example' => '2019-06-26 18:12:29',
                              ),
                              'GmtCompletedTimestamp' => 
                              array (
                                'description' => '部署单快照完成的Unix时间戳。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1581912859713',
                              ),
                              'ResourceId' => 
                              array (
                                'description' => '资源ID。',
                                'type' => 'string',
                                'example' => 'device_config',
                              ),
                              'ResourceName' => 
                              array (
                                'description' => '资源名称。',
                                'type' => 'string',
                                'example' => 'device_config',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"6B72291A-9492-445E-81D9-335D2D3E44C0\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"GmtCreateTimestamp\\": 1581912859713,\\n    \\"Type\\": \\"deploy\\",\\n    \\"Status\\": 2,\\n    \\"DeploymentId\\": \\"9261e308a9504fde9b4cf8462b0b****\\",\\n    \\"Description\\": \\"deploy_1561543948874\\",\\n    \\"GmtModifiedTimestamp\\": 1581912859713,\\n    \\"GmtCompleted\\": \\"2019-06-26 18:12:35\\",\\n    \\"GmtCreate\\": \\"2019-06-26 18:12:29\\",\\n    \\"GmtCompletedTimestamp\\": 1581912859713,\\n    \\"GmtModified\\": \\"2019-06-26 18:12:35\\",\\n    \\"TaskList\\": [\\n      {\\n        \\"GmtCreateTimestamp\\": 1581912859713,\\n        \\"Status\\": 2,\\n        \\"Stage\\": 32,\\n        \\"GatewayId\\": \\"jQWf3MVgQjMzcwsY****000101\\",\\n        \\"GmtModifiedTimestamp\\": 1581912859713,\\n        \\"GmtCompleted\\": \\"2019-06-26 18:12:35\\",\\n        \\"GmtCreate\\": \\"2019-06-26 18:12:29\\",\\n        \\"GmtCompletedTimestamp\\": 1581912859713,\\n        \\"GmtModified\\": \\"2019-06-26 18:12:35\\",\\n        \\"TaskId\\": \\"49ea651529014bf8b5645d5f9062****\\",\\n        \\"ResourceSnapshotList\\": [\\n          {\\n            \\"Status\\": 2,\\n            \\"GmtCreateTimestamp\\": 1581912859713,\\n            \\"Stage\\": 32,\\n            \\"GmtModifiedTimestamp\\": 1581912859713,\\n            \\"GmtModified\\": \\"2019-06-26 18:12:34\\",\\n            \\"Log\\": \\"[{\\\\\\\\\\\\\\"resourceId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"device_config\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"stage\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"level\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"INFO\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"message\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"init success\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"resourceType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"DEVICE_CONFIG\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\":1561543949858},{\\\\\\\\\\\\\\"resourceId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"device_config\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"stage\\\\\\\\\\\\\\":8,\\\\\\\\\\\\\\"level\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"INFO\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"message\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"assembly success\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"resourceType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"DEVICE_CONFIG\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\":1561543951419},{\\\\\\\\\\\\\\"resourceId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"device_config\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"stage\\\\\\\\\\\\\\":16,\\\\\\\\\\\\\\"level\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"INFO\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"message\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"package success\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"resourceType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"DEVICE_CONFIG\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\":1561543952591},{\\\\\\\\\\\\\\"resourceId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"device_config\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"stage\\\\\\\\\\\\\\":32,\\\\\\\\\\\\\\"level\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"INFO\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"message\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"download success\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"resourceType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"DEVICE_CONFIG\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"timestamp\\\\\\\\\\\\\\":1561543954149}]\\",\\n            \\"OperateType\\": 0,\\n            \\"ResourceType\\": \\"device_config\\",\\n            \\"SnapshotId\\": \\"ab576e84a43043d7840cbcebf4a5****\\",\\n            \\"GmtCompleted\\": \\"2019-06-26 18:12:34\\",\\n            \\"GmtCreate\\": \\"2019-06-26 18:12:29\\",\\n            \\"GmtCompletedTimestamp\\": 1581912859713,\\n            \\"ResourceId\\": \\"device_config\\",\\n            \\"ResourceName\\": \\"device_config\\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetEdgeInstanceDeploymentResponse>\\r\\n  <RequestId>6B72291A-9492-445E-81D9-335D2D3E44C0</RequestId>\\r\\n  <Data>\\r\\n    <Status>2</Status>\\r\\n    <DeploymentId>9261e308a9504fde9b4cf8462b0b****</DeploymentId>\\r\\n    <GmtCompleted>2019-06-26 18:12:35</GmtCompleted>\\r\\n    <Type>deploy</Type>\\r\\n    <GmtCreate>2019-06-26 18:12:29</GmtCreate>\\r\\n    <Description>deploy_1561543948874</Description>\\r\\n    <TaskList>\\r\\n      <Task>\\r\\n        <Status>2</Status>\\r\\n        <GmtCompleted>2019-06-26 18:12:35</GmtCompleted>\\r\\n        <GmtCreate>2019-06-26 18:12:29</GmtCreate>\\r\\n        <TaskId>49ea651529014bf8b5645d5f9062****</TaskId>\\r\\n        <ResourceSnapshotList>\\r\\n          <ResourceSnapshot>\\r\\n            <Status>2</Status>\\r\\n            <SnapshotId>ab576e84a43043d7840cbcebf4a5****</SnapshotId>\\r\\n            <GmtCompleted>2019-06-26 18:12:34</GmtCompleted>\\r\\n            <GmtCreate>2019-06-26 18:12:29</GmtCreate>\\r\\n            <Log>[{\\"resourceId\\":\\"device_config\\",\\"code\\":\\"0\\",\\"stage\\":0,\\"level\\":\\"INFO\\",\\"message\\":\\"init success\\",\\"resourceType\\":\\"DEVICE_CONFIG\\",\\"timestamp\\":1561543949858},{\\"resourceId\\":\\"device_config\\",\\"code\\":\\"0\\",\\"stage\\":8,\\"level\\":\\"INFO\\",\\"message\\":\\"assembly success\\",\\"resourceType\\":\\"DEVICE_CONFIG\\",\\"timestamp\\":1561543951419},{\\"resourceId\\":\\"device_config\\",\\"code\\":\\"0\\",\\"stage\\":16,\\"level\\":\\"INFO\\",\\"message\\":\\"package success\\",\\"resourceType\\":\\"DEVICE_CONFIG\\",\\"timestamp\\":1561543952591},{\\"resourceId\\":\\"device_config\\",\\"code\\":\\"0\\",\\"stage\\":32,\\"level\\":\\"INFO\\",\\"message\\":\\"download success\\",\\"resourceType\\":\\"DEVICE_CONFIG\\",\\"timestamp\\":1561543954149}]</Log>\\r\\n            <ResourceId>device_config</ResourceId>\\r\\n            <ResourceName>device_config</ResourceName>\\r\\n            <GmtModified>2019-06-26 18:12:34</GmtModified>\\r\\n            <Stage>32</Stage>\\r\\n            <ResourceType>device_config</ResourceType>\\r\\n            <OperateType>0</OperateType>\\r\\n          </ResourceSnapshot>\\r\\n        </ResourceSnapshotList>\\r\\n        <GmtModified>2019-06-26 18:12:35</GmtModified>\\r\\n        <Stage>32</Stage>\\r\\n        <GatewayId>jQWf3MVgQjMzcwsY****000101</GatewayId>\\r\\n      </Task>\\r\\n    </TaskList>\\r\\n    <GmtModified>2019-06-26 18:12:35</GmtModified>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</GetEdgeInstanceDeploymentResponse>","errorExample":""}]',
      'title' => '获取边缘实例部署详情',
      'summary' => '获取边缘实例部署详情	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryEdgeInstanceHistoricDeployment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'PgEfYupSn6Pvhfkx****',
          ),
        ),
        2 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '从返回结果中的第几页开始显示。最小取值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数量。最大取值30，最小取值1，默认取值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '15',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询起始时间。如果不传入起止时间，则查询该实例的全部历史部署记录。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1558951998639',
          ),
        ),
        5 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询结束时间。如果不传入起止时间，则查询该实例的全部历史部署记录。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1561543998639',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C9D9C91B-1B3B-4D84-BE58-68E7B2A989E4',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '返回结果中每页显示的记录数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'Total' => 
                  array (
                    'description' => '总记录数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '6',
                  ),
                  'DeploymentList' => 
                  array (
                    'description' => '边缘实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GmtCreateTimestamp' => 
                        array (
                          'description' => '创建部署单的Unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1581912859713',
                        ),
                        'Type' => 
                        array (
                          'description' => '部署单类型。

- deploy：部署。
- reset：重置。',
                          'type' => 'string',
                          'example' => 'deploy',
                        ),
                        'Status' => 
                        array (
                          'description' => '实例的部署单状态。

- 0：未开始（init）。
- 1：正在进行中（processing）。
- 2：成功（success）。
- 3：失败（failure）。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'DeploymentId' => 
                        array (
                          'description' => '部署单ID。',
                          'type' => 'string',
                          'example' => 'e4803e566b424fa68e7f4b1c747c****',
                        ),
                        'Description' => 
                        array (
                          'description' => '部署单描述。',
                          'type' => 'string',
                          'example' => 'deploy_1561694817061',
                        ),
                        'GmtModifiedTimestamp' => 
                        array (
                          'description' => '最后一次更新部署单的Unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1581912859713',
                        ),
                        'GmtCompleted' => 
                        array (
                          'description' => '部署单完成时间。',
                          'type' => 'string',
                          'example' => '2019-06-28 12:07:16',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建部署单时间。',
                          'type' => 'string',
                          'example' => '2019-06-26 18:12:29',
                        ),
                        'GmtCompletedTimestamp' => 
                        array (
                          'description' => '部署单完成的Unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1581912859713',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '最后一次更新部署单的时间。',
                          'type' => 'string',
                          'example' => '2019-06-28 12:07:16',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"C9D9C91B-1B3B-4D84-BE58-68E7B2A989E4\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 2,\\n    \\"Total\\": 6,\\n    \\"DeploymentList\\": [\\n      {\\n        \\"GmtCreateTimestamp\\": 1581912859713,\\n        \\"Type\\": \\"deploy\\",\\n        \\"Status\\": 2,\\n        \\"DeploymentId\\": \\"e4803e566b424fa68e7f4b1c747c****\\",\\n        \\"Description\\": \\"deploy_1561694817061\\",\\n        \\"GmtModifiedTimestamp\\": 1581912859713,\\n        \\"GmtCompleted\\": \\"2019-06-28 12:07:16\\",\\n        \\"GmtCreate\\": \\"2019-06-26 18:12:29\\",\\n        \\"GmtCompletedTimestamp\\": 1581912859713,\\n        \\"GmtModified\\": \\"2019-06-28 12:07:16\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryEdgeInstanceHistoricDeploymentResponse>\\r\\n  <RequestId>C9D9C91B-1B3B-4D84-BE58-68E7B2A989E4</RequestId>\\r\\n  <Data>\\r\\n    <DeploymentList>\\r\\n      <Deployment>\\r\\n        <Status>2</Status>\\r\\n        <DeploymentId>e4803e566b424fa68e7f4b1c747c****</DeploymentId>\\r\\n        <GmtCompleted>2019-06-28 12:07:16</GmtCompleted>\\r\\n        <Type>deploy</Type>\\r\\n        <GmtCreate>2019-06-28 12:06:57</GmtCreate>\\r\\n        <Description>deploy_1561694817061</Description>\\r\\n        <GmtModified>2019-06-28 12:07:16</GmtModified>\\r\\n      </Deployment>\\r\\n      <Deployment>\\r\\n        <Status>2</Status>\\r\\n        <DeploymentId>9261e308a9504fde9b4cf8462b0b****</DeploymentId>\\r\\n        <GmtCompleted>2019-06-26 18:12:35</GmtCompleted>\\r\\n        <Type>deploy</Type>\\r\\n        <GmtCreate>2019-06-26 18:12:29</GmtCreate>\\r\\n        <Description>deploy_1561543948874</Description>\\r\\n        <GmtModified>2019-06-26 18:12:35</GmtModified>\\r\\n      </Deployment>\\r\\n    </DeploymentList>\\r\\n    <PageSize>2</PageSize>\\r\\n    <CurrentPage>1</CurrentPage>\\r\\n    <Total>6</Total>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</QueryEdgeInstanceHistoricDeploymentResponse>","errorExample":""}]',
      'title' => '查询边缘实例历史部署记录',
      'summary' => '查询边缘实例历史部署记录	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见 [公共参数文档](~~30561~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateEdgeDriver' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'DriverName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动名称。支持大小写英文字母、数字和下划线（_），必须以英文字母开头，不超过20个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'MyLedDriver',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动通信协议。取值如下：

- modbus：Modbus通信协议。
- opc-ua：OPC UA通信协议。
- customize：自定义通信协议。',
            'type' => 'string',
            'required' => true,
            'example' => 'customize',
          ),
        ),
        3 => 
        array (
          'name' => 'Runtime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动的语言类型。支持如下三种类型：

- nodejs8：Node.js v8
- python3：Python v3.5
- c: C语言',
            'type' => 'string',
            'required' => true,
            'example' => 'c',
          ),
        ),
        4 => 
        array (
          'name' => 'CpuArch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动适配的CPU架构。取值如下：

- armv7
- armv7-hf
- aarch64
- x86-64
- x86',
            'type' => 'string',
            'required' => false,
            'example' => 'x86-64',
          ),
        ),
        5 => 
        array (
          'name' => 'IsBuiltIn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否内置驱动文件。

- true：表示驱动为内置驱动，即驱动代码已预置到网关上。
- false：表示驱动为非内置驱动。 非内置驱动必须上传驱动代码。默认为false。

    > 非内置驱动必须上传驱动代码。如需通过API的方式上传驱动代码并获取阿里云对象存储（OSS）地址，请调用[CreateOssPreSignedAddress](~~155858~~)接口创建预签名地址后，使用OSS SDK上传驱动文件。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BB179FE4-94AB-41B0-AE8A-66DDB7B8B13A',
              ),
              'DriverId' => 
              array (
                'description' => '驱动ID。',
                'type' => 'string',
                'example' => 'fec565038d7544978d9aed5c1a******',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"BB179FE4-94AB-41B0-AE8A-66DDB7B8B13A\\",\\n  \\"DriverId\\": \\"fec565038d7544978d9aed5c1a******\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateEdgeDriverResponse>\\r\\n    <DriverId>fec565038d7544978d9aed5c1a******</DriverId>\\r\\n    <RequestId>BB179FE4-94AB-41B0-AE8A-66DDB7B8B13A</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</CreateEdgeDriverResponse>","errorExample":""}]',
      'title' => '创建驱动',
      'summary' => '创建驱动	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteEdgeDriver' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'fec565038d7544978d9aed5c1a******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'F82E857F-B6B9-4CCC-96B8-E4BE97095F1A',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"F82E857F-B6B9-4CCC-96B8-E4BE97095F1A\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteEdgeDriverResponse>\\r\\n    <RequestId>F82E857F-B6B9-4CCC-96B8-E4BE97095F1A</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</DeleteEdgeDriverResponse>","errorExample":""}]',
      'title' => '删除已创建的驱动',
      'summary' => '删除已创建的驱动	。',
      'description' => '## 限制条件

- 当驱动下存在已发布的驱动版本时，该驱动无法删除。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

    > RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchGetEdgeDriver' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'ot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'DriverIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '驱动ID列表。最多可填写30个驱动ID，即一次最多支持查询30个驱动的信息。格式请参见本文下方请求示例。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'fec565038d7544978d9aed5c1a******',
            'maxItems' => 31,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'A42CAB88-6E26-4DC7-9A35-584D17E82DE0',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DriverList' => 
              array (
                'description' => '驱动信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'GmtCreateTimestamp' => 
                    array (
                      'description' => '创建驱动的Unix时间戳。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1581912859713',
                    ),
                    'Type' => 
                    array (
                      'description' => '驱动类型。

- 0：表示官方驱动。
- 1：表示自研驱动。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'CpuArch' => 
                    array (
                      'description' => '驱动适配的CPU架构。有如下几种架构：

- armv7
- armv7-hf
- aarch64
- x86-64
- x86',
                      'type' => 'string',
                      'example' => 'x86-64',
                    ),
                    'DriverId' => 
                    array (
                      'description' => '驱动ID。',
                      'type' => 'string',
                      'example' => 'fec565038d7544978d9aed5c1a******',
                    ),
                    'IsBuiltIn' => 
                    array (
                      'description' => '驱动文件是否内置。

- true：表示驱动为内置驱动，即驱动代码已预置到网关上。
- false：表示驱动为非内置驱动。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'GmtModifiedTimestamp' => 
                    array (
                      'description' => '最后一次更新驱动的Unix时间戳。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1581912859713',
                    ),
                    'Runtime' => 
                    array (
                      'description' => '驱动的语言类型。有如下三种类型：

- nodejs8：Node.js v8
- python3：Python v3.5
- c: C语言',
                      'type' => 'string',
                      'example' => 'c',
                    ),
                    'DriverName' => 
                    array (
                      'description' => '驱动名称。',
                      'type' => 'string',
                      'example' => 'MyLedDriver',
                    ),
                    'DriverProtocol' => 
                    array (
                      'description' => '驱动通信协议。

- modbus：Modbus通信协议。
- opc-ua：OPC UA通信协议。
- customize：自定义通信协议。',
                      'type' => 'string',
                      'example' => 'customize',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"A42CAB88-6E26-4DC7-9A35-584D17E82DE0\\",\\n  \\"Success\\": true,\\n  \\"DriverList\\": [\\n    {\\n      \\"GmtCreateTimestamp\\": 1581912859713,\\n      \\"Type\\": 1,\\n      \\"CpuArch\\": \\"x86-64\\",\\n      \\"DriverId\\": \\"fec565038d7544978d9aed5c1a******\\",\\n      \\"IsBuiltIn\\": false,\\n      \\"GmtModifiedTimestamp\\": 1581912859713,\\n      \\"Runtime\\": \\"c\\",\\n      \\"DriverName\\": \\"MyLedDriver\\",\\n      \\"DriverProtocol\\": \\"customize\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<BatchGetEdgeDriverResponse>\\r\\n    <RequestId>A42CAB88-6E26-4DC7-9A35-584D17E82DE0</RequestId>\\r\\n    <DriverList>\\r\\n        <Driver>\\r\\n            <DriverProtocol>customize</DriverProtocol>\\r\\n            <Type>1</Type>\\r\\n            <Runtime>c</Runtime>\\r\\n            <GmtCreate>2019-12-01 22:28:00</GmtCreate>\\r\\n            <DriverId>fec565038d7544978d9aed5c1a******</DriverId>\\r\\n            <DriverName>MyLedDriver</DriverName>\\r\\n            <GmtModified>2019-12-01 22:28:00</GmtModified>\\r\\n            <IsBuiltIn>false</IsBuiltIn>\\r\\n            <CpuArch>x86-64</CpuArch>\\r\\n        </Driver>\\r\\n    </DriverList>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</BatchGetEdgeDriverResponse>","errorExample":""}]',
      'title' => '批量查询驱动信息',
      'summary' => '批量查询驱动信息。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享主账号配额。
',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryEdgeDriver' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。

您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。

> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中，每页显示的记录数量。最大取值30，最小取值1，默认取值为10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '15',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动类型：

- **0**：表示官方驱动。
- **1**：表示自研驱动。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'DriverName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动名称。若查询驱动信息时，需要匹配驱动名称，则填写该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'MyledDriver',
          ),
        ),
        4 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。最小取值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码：
- **Success**：表示成功。
- 其它：表示错误码。错误码详情，请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E0BD540E-DCFE-4602-B6D1-D208E8594BF7',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功：
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '返回结果中每页显示的记录数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '15',
                  ),
                  'Total' => 
                  array (
                    'description' => '官方驱动或自研驱动的总数量： 

- 请求参数**Type**的值为**0**，则此处是官方驱动的总数量。
- 请求参数**Type**的值为**1**，则此处是自研驱动的总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'DriverList' => 
                  array (
                    'description' => '驱动信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GmtCreateTimestamp' => 
                        array (
                          'description' => '创建驱动的Unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1581912859713',
                        ),
                        'Type' => 
                        array (
                          'description' => '驱动类型：

- **0**：表示官方驱动。
- **1**：表示自研驱动。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'CpuArch' => 
                        array (
                          'description' => '驱动适配的CPU架构，有如下几种架构：

- **armv7**
- **armv7-hf**
- **aarch64**
- **x86-64**
- **x86**',
                          'type' => 'string',
                          'example' => 'x86-64',
                        ),
                        'DriverId' => 
                        array (
                          'description' => '驱动ID。',
                          'type' => 'string',
                          'example' => 'fec565038d7544978d9aed5c1a******',
                        ),
                        'IsBuiltIn' => 
                        array (
                          'description' => '驱动文件是否内置：

- **true**：表示驱动为内置驱动，即驱动代码已预置到网关上。
- **false**：表示驱动为非内置驱动。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'GmtModifiedTimestamp' => 
                        array (
                          'description' => '最后一次更新驱动的Unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1581912859713',
                        ),
                        'IsApply' => 
                        array (
                          'description' => '该驱动是否需要申请才能使用。当前仅支持**false**值。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Runtime' => 
                        array (
                          'description' => '驱动的语言类型，有如下三种类型：

- **nodejs8**：表示Node.js v8。
- **python3**：表示Python v3.5。
- **c**: 表示C语言。',
                          'type' => 'string',
                          'example' => 'c',
                        ),
                        'DriverName' => 
                        array (
                          'description' => '驱动名称。',
                          'type' => 'string',
                          'example' => 'MyLedDriver',
                        ),
                        'DriverProtocol' => 
                        array (
                          'description' => '驱动通信协议：

- **modbus**：表示Modbus通信协议。
- **opc-ua**：表示OPC UA通信协议。
- **customize**：表示自定义通信协议。',
                          'type' => 'string',
                          'example' => 'customize',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"E0BD540E-DCFE-4602-B6D1-D208E8594BF7\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 15,\\n    \\"Total\\": 1,\\n    \\"DriverList\\": [\\n      {\\n        \\"GmtCreateTimestamp\\": 1581912859713,\\n        \\"Type\\": 1,\\n        \\"CpuArch\\": \\"x86-64\\",\\n        \\"DriverId\\": \\"fec565038d7544978d9aed5c1a******\\",\\n        \\"IsBuiltIn\\": false,\\n        \\"GmtModifiedTimestamp\\": 1581912859713,\\n        \\"IsApply\\": false,\\n        \\"Runtime\\": \\"c\\",\\n        \\"DriverName\\": \\"MyLedDriver\\",\\n        \\"DriverProtocol\\": \\"customize\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryEdgeDriverResponse>\\r\\n    <RequestId>E0BD540E-DCFE-4602-B6D1-D208E8594BF7</RequestId>\\r\\n    <Data>\\r\\n        <PageSize>15</PageSize>\\r\\n        <CurrentPage>1</CurrentPage>\\r\\n        <Total>1</Total>\\r\\n        <DriverList>\\r\\n            <Driver>\\r\\n                <DriverProtocol>customize</DriverProtocol>\\r\\n                <Type>1</Type>\\r\\n                <Runtime>c</Runtime>\\r\\n                <GmtCreateTimestamp>2019-12-01 22:28:00</GmtCreateTimestamp>\\r\\n                <DriverId>fec565038d7544978d9aed5c1a******</DriverId>\\r\\n                <DriverName>MyLedDriver</DriverName>\\r\\n                <GmtModifiedTimestamp>2019-12-01 22:28:00</GmtModifiedTimestamp>\\r\\n                <IsApply>false</IsApply>\\r\\n                <IsBuiltIn>false</IsBuiltIn>\\r\\n                <CpuArch>x86-64</CpuArch>\\r\\n            </Driver>\\r\\n        </DriverList>\\r\\n    </Data>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</QueryEdgeDriverResponse>","errorExample":""}]',
      'title' => 'QueryEdgeDriver',
      'summary' => '调用该接口分页查询驱动信息。',
      'description' => '## 限制条件
单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateEdgeDriverVersion' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'fec565038d7544978d9aed5c1a******',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动版本号。必须是该驱动唯一的版本号，即一个驱动不可以设置两个相同的版本号。允许中文、英文字母、数字、下划线（_）、短划线（-）和英文句号（.），长度不超过64个字符。',
            'type' => 'string',
            'required' => true,
            'example' => '1.2.0',
          ),
        ),
        3 => 
        array (
          'name' => 'EdgeVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动适配的边缘版本，即该驱动只能在该边缘版本及以上版本的网关中运行。例如2.4.0，表示在v2.4.0及以上的边缘版本中运行该驱动。',
            'type' => 'string',
            'required' => true,
            'example' => '2.0.0',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动描述。长度不超过256个字节。',
            'type' => 'string',
            'required' => false,
            'example' => 'Led驱动',
          ),
        ),
        5 => 
        array (
          'name' => 'SourceConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动代码来源配置。JSON格式字符串，格式如下：

` {"ossAddress":"http://***/driver_code.zip"}`

其中，`ossAddress`为对象存储（OSS）访问地址，如需通过API的方式上传驱动代码并获取OSS地址，请调用[CreateOssPreSignedAddress](~~155858~~)接口获取。',
            'type' => 'string',
            'required' => false,
            'example' => '{"ossAddress":"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb30c******/ck3n3koe200003h6zf******.zip"}',
          ),
        ),
        6 => 
        array (
          'name' => 'DriverConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动配置。JSON格式字符串，格式如下：

`{"format":"JSON","content":"{}"}`

参数说明如下所示。

- format：配置格式。取值有KV（键值对配置）、JSON（JSON格式）、FILE（配置文件）。
- content：配置内容。format为KV或JSON时，请填配置内容；format为FILE时，请填OSS地址。 

    > OSS地址请调用[CreateOssPreSignedAddress](~~155858~~)接口获取。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"format":"JSON","content":"{\\"defaultConfig\\":\\"this is default driver config demo\\"}"}]',
          ),
        ),
        7 => 
        array (
          'name' => 'ContainerConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容器配置。JSON格式字符串。更多信息，请参见本文下方**ContainerConfig**表格。',
            'type' => 'string',
            'required' => false,
            'example' => '{"privileged":1,"devMappings":[],"volumeMappings":[],"hostNetworkMode":0,"portMappings":[]}',
          ),
        ),
        8 => 
        array (
          'name' => 'ConfigCheckRule',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置校验规则。JSON格式字符串，格式如下：

`{"deviceConfig":{"required":false},"driverConfig":{"required":false}`

参数说明如下。

- driverConfig：表示边缘实例中该驱动的配置校验规则。

- deviceConfig：表示边缘实例中该驱动下设备的配置校验规则。

`required`为true表示参数不能为空；false表示参数允许为空。',
            'type' => 'string',
            'required' => false,
            'example' => '{"deviceConfig":{"required":false},"driverConfig":{"required":false}}',
          ),
        ),
        9 => 
        array (
          'name' => 'Argument',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JVM（Java Virtual Machine）启动参数。',
            'type' => 'string',
            'required' => false,
            'example' => '-XX:+PrintGCDetails',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '001ADA35-8846-4B6F-93E7-E5C076F8BB56',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"001ADA35-8846-4B6F-93E7-E5C076F8BB56\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateEdgeDriverVersionResponse>\\r\\n    <RequestId>001ADA35-8846-4B6F-93E7-E5C076F8BB56</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</CreateEdgeDriverVersionResponse>","errorExample":""}]',
      'title' => '新增驱动版本',
      'summary' => '新增驱动版本。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。


**ContainerConfig参数说明**
| 名称 | 类型 | 是否必需 | 描述 |
| --- | --- | --- | --- |
| privileged | Integer | 否 | 是否启动特权模式。<br />0：表示否。<br />1：表示是。<br /> |
| hostNetworkMode | Integer | 否 | 是否使用宿主机host模式。<br />0：表示否。<br />1：表示是。<br /> |
| portMappings | List | 否 | 网络端口映射。使用宿主机host模式时无须配置此项。最多可添加10个网络端口映射。格式请参考本文下方portMappings表格。 |
| devMappings | List | 否 | 设备映射。使用特权模式时无须配置此项。最多可添加10个设备映射。格式请参考本文下方devMappings表格。 |
| volumeMappings | List | 否 | 卷映射。最多可添加10个卷映射。格式请参考本文下方volumeMappings表格。 |


**portMappings参数说明**
| 名称 | 类型 | 是否必需 | 描述 |
| --- | --- | --- | --- |
| hostPort | Integer | 是 | 宿主机端口。端⼝取值范围为1～65535。 |
| containerPort | Integer | 是 | 容器内端口。端⼝取值范围为1～65535。 |
| protocol | Integer | 是 | 协议类型。取值有tcp和udp两种。 |


**devMappings参数说明**
| 名称 | 类型 | 是否必需 | 描述 |
| --- | --- | --- | --- |
| hostPath | String | 是 | 设备名称。需要以**/dev/**开头，长度为1~128个字符。 |
| permission | String | 是 | 读写权限。<br />ro：只读权限。<br />rw：读写权限。<br /> |
| comment | String | 否 | 注释信息。长度为1~128个字符。 |


**volumeMappings参数说明**
| 名称 | 类型 | 是否必需 | 描述 |
| --- | --- | --- | --- |
| hostPath | String | 是 | 源路径。长度为1~128个字符，不支持空格。 |
| containerPath | String | 是 | 目的路径。须填写绝对路径，不支持根目录，以正斜杠（/）开头，长度为2~128个字符，不支持空格。 |
| permission | String | 是 | 读写权限。<br />ro：只读权限。<br />rw：读写权限。<br /> |',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteEdgeDriverVersion' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'fec565038d7544978d9aed5c1a******',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动版本号。',
            'type' => 'string',
            'required' => true,
            'example' => '1.2.0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'J82E857F-T6B9-4FDE-96B8-E4BE97095D1A',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"J82E857F-T6B9-4FDE-96B8-E4BE97095D1A\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteEdgeDriverVersionResponse>\\r\\n    <RequestId>J82E857F-T6B9-4FDE-96B8-E4BE97095D1A</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</DeleteEdgeDriverVersionResponse>","errorExample":""}]',
      'title' => '删除驱动的某一版本',
      'summary' => '删除驱动的某一版本。',
      'description' => '## 限制条件

- 已发布的驱动版本，不允许删除。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateEdgeDriverVersion' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'fec565038d7544978d9aed5c1a******',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动版本号。',
            'type' => 'string',
            'required' => true,
            'example' => '1.2.0',
          ),
        ),
        3 => 
        array (
          'name' => 'EdgeVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动适配的边缘版本，即该驱动只能在该边缘版本及以上版本的网关中运行。例如2.4.0，表示在v2.4.0及以上的边缘版本中运行该驱动。',
            'type' => 'string',
            'required' => true,
            'example' => '2.0.0',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动描述。长度不超过256个字节。',
            'type' => 'string',
            'required' => false,
            'example' => 'Led驱动（更新描述）',
          ),
        ),
        5 => 
        array (
          'name' => 'SourceConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动代码来源配置。JSON格式字符串，格式如下：

` {"ossAddress":"http://***/driver_code.zip"}`

其中，`ossAddress`为对象存储（OSS）访问地址，如需通过API的方式上传驱动代码并获取OSS地址，请调用[CreateOssPreSignedAddress](~~155858~~)接口获取。',
            'type' => 'string',
            'required' => false,
            'example' => '{"ossAddress":"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb30c******/ck3n3koe200003h6zf******.zip"}',
          ),
        ),
        6 => 
        array (
          'name' => 'DriverConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动配置。JSON格式字符串，格式如下：

`{"format":"JSON","content":"{}"}`

参数说明如下所示。

- format：配置格式。取值有KV（键值对配置）、JSON（JSON格式）、FILE（配置文件）。
- content：配置内容。format为KV或JSON时，请填配置内容；format为FILE时，请填OSS地址。 

    > OSS地址请调用[CreateOssPreSignedAddress](~~155858~~)接口获取。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"format":"JSON","content":"{\\"defaultConfig\\":\\"this is default driver config demo\\"}"}]',
          ),
        ),
        7 => 
        array (
          'name' => 'ContainerConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容器配置。JSON格式字符串。更多信息，请参见本文下方ContainerConfig表格。',
            'type' => 'string',
            'required' => false,
            'example' => '{"privileged":1,"devMappings":[],"volumeMappings":[],"hostNetworkMode":0,"portMappings":[]}',
          ),
        ),
        8 => 
        array (
          'name' => 'ConfigCheckRule',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置校验规则。JSON格式字符串，格式如下：

`{"deviceConfig":{"required":false},"driverConfig":{"required":false}`

参数说明如下。

- driverConfig：表示边缘实例中该驱动的配置校验规则。

- deviceConfig：表示边缘实例中该驱动下设备的配置校验规则。

`required`为true表示参数不能为空；false表示参数允许为空。',
            'type' => 'string',
            'required' => false,
            'example' => '{"deviceConfig":{"required":false},"driverConfig":{"required":false}}',
          ),
        ),
        9 => 
        array (
          'name' => 'Argument',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'JVM（Java Virtual Machine）启动参数。',
            'type' => 'string',
            'required' => false,
            'example' => '-XX:+PrintGCDetails',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '7757A782-6C24-4325-A663-C62857F32E87',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"7757A782-6C24-4325-A663-C62857F32E87\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateEdgeDriverVersionResponse>\\r\\n    <RequestId>7757A782-6C24-4325-A663-C62857F32E87</RequestId>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</UpdateEdgeDriverVersionResponse>","errorExample":""}]',
      'title' => '更新驱动版本',
      'summary' => '调用该接口更新驱动版本。',
      'description' => '## 限制条件

- 请求参数中置空的参数（不填写参数值），将清空原来的参数值配置。
- 已发布的驱动版本，不允许更新。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

    > RAM用户共享主账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。


**ContainerConfig参数说明**
| 名称 | 类型 | 是否必需 | 描述 |
| --- | --- | --- | --- |
| privileged | Integer | 否 | 是否启动特权模式。<br />0：表示否。<br />1：表示是。<br /> |
| hostNetworkMode | Integer | 否 | 是否使用宿主机host模式。<br />0：表示否。<br />1：表示是。<br /> |
| portMappings | List | 否 | 网络端口映射。使用宿主机host模式时无须配置此项。最多可添加10个网络端口映射。格式请参考本文下方portMappings表格。 |
| devMappings | List | 否 | 设备映射。使用特权模式时无须配置此项。最多可添加10个设备映射。格式请参考本文下方devMappings表格。 |
| volumeMappings | List | 否 | 卷映射。最多可添加10个卷映射。格式请参考本文下方volumeMappings表格。 |


**portMappings参数说明**
| 名称 | 类型 | 是否必需 | 描述 |
| --- | --- | --- | --- |
| hostPort | Integer | 是 | 宿主机端口。端⼝取值范围为1～65535。 |
| containerPort | Integer | 是 | 容器内端口。端⼝取值范围为1～65535。 |
| protocol | Integer | 是 | 协议类型。取值有tcp和udp两种。 |


**devMappings参数说明**
| 名称 | 类型 | 是否必需 | 描述 |
| --- | --- | --- | --- |
| hostPath | String | 是 | 设备名称。需要以**/dev/**开头，长度为1~128个字符。 |
| permission | String | 是 | 读写权限。<br />ro：只读权限。<br />rw：读写权限。<br /> |
| comment | String | 否 | 注释信息。长度为1~128个字符。 |


**volumeMappings参数说明**
| 名称 | 类型 | 是否必需 | 描述 |
| --- | --- | --- | --- |
| hostPath | String | 是 | 源路径。长度为1~128个字符，不支持空格。 |
| containerPath | String | 是 | 目的路径。须填写绝对路径，不支持根目录，以正斜杠（/）开头，长度为2~128个字符，不支持空格。 |
| permission | String | 是 | 读写权限。<br />ro：只读权限。<br />rw：读写权限。<br /> |',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetEdgeDriverVersion' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'fec565038d7544978d9aed5c1a******',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动版本号。',
            'type' => 'string',
            'required' => true,
            'example' => '1.2.0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '6ECE664B-E670-47BA-A6AD-62B9F35E3A7B',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'GmtCreateTimestamp' => 
                  array (
                    'description' => '创建驱动的Unix时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1581912859713',
                  ),
                  'ConfigCheckRule' => 
                  array (
                    'description' => '配置校验规则。JSON格式字符串，格式如下：

`{"deviceConfig":{"required":false},"driverConfig":{"required":false}`

参数说明如下。

- driverConfig：表示边缘实例中该驱动的配置校验规则。
- deviceConfig：表示边缘实例中该驱动下设备的配置校验规则。',
                    'type' => 'string',
                    'example' => '{\\"deviceConfig\\":{\\"required\\":false},\\"driverConfig\\":{\\"required\\":false}}',
                  ),
                  'DriverId' => 
                  array (
                    'description' => '驱动ID。',
                    'type' => 'string',
                    'example' => 'fec565038d7544978d9aed5c1a******',
                  ),
                  'EdgeVersion' => 
                  array (
                    'description' => '驱动适配的边缘版本。',
                    'type' => 'string',
                    'example' => '2.0.0',
                  ),
                  'GmtModifiedTimestamp' => 
                  array (
                    'description' => '最后一次更新驱动的Unix时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1581912859713',
                  ),
                  'VersionState' => 
                  array (
                    'description' => '驱动版本状态。

- 0：表示该版本未发布。
- 1：表示该版本已发布。',
                    'type' => 'string',
                    'example' => '0',
                  ),
                  'ContainerConfig' => 
                  array (
                    'description' => '容器配置。JSON格式字符串，参数说明，请参见本文下方ContainerConfig表格。',
                    'type' => 'string',
                    'example' => '{\\"devMappings\\":[],\\"hostNetworkMode\\":0,\\"portMappings\\":[],\\"privileged\\":1,\\"volumeMappings\\":[]}',
                  ),
                  'Description' => 
                  array (
                    'description' => '驱动描述。',
                    'type' => 'string',
                    'example' => 'Led驱动',
                  ),
                  'DriverConfig' => 
                  array (
                    'description' => '驱动配置。JSON格式字符串，格式如下：

`{"format":"JSON","content":"{}"}`

参数说明如下所示。

- format：配置格式。取值有KV（键值对配置）、JSON（JSON格式）、FILE（配置文件）。
- content：配置内容。format为KV或JSON时，此处为配置内容；format为FILE时，此处为OSS地址。 ',
                    'type' => 'string',
                    'example' => '[{\\"content\\":\\"{\\\\\\"defaultConfig\\\\\\":\\\\\\"this is default driver config demo\\\\\\"}\\",\\"format\\":\\"JSON\\"}]',
                  ),
                  'DriverVersion' => 
                  array (
                    'description' => '驱动版本号。',
                    'type' => 'string',
                    'example' => '1.2.0',
                  ),
                  'Argument' => 
                  array (
                    'description' => 'JVM（Java Virtual Machine）启动参数。',
                    'type' => 'string',
                    'example' => '-XX:+PrintGCDetails',
                  ),
                  'SourceConfig' => 
                  array (
                    'description' => '驱动代码来源配置。JSON格式字符串，格式如下：

`{"ossAddress":"http://***/driver_code.zip","temporaryOssAddress":"http://***/driver_code.zip?Expires***"}`

其中，`ossAddress`为对象存储（OSS）访问地址，`temporaryOssAddress`为可以直接下载的临时链接，有效期5分钟。',
                    'type' => 'string',
                    'example' => '{\\"ossAddress\\":\\"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb30******/ck3n3koe200003h6zfg******.zip\\",\\"temporaryOssAddress\\":\\"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb30******/ck3n3koe200003h6zf******.zip?Expires\\u003d1575******\\u0026OSSAccessKeyId\\u003daS4MT0IYrP******\\u0026Signature\\u003dm6cpmcaB8rm3YfbkhTYgb0******\\"}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"6ECE664B-E670-47BA-A6AD-62B9F35E3A7B\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"GmtCreateTimestamp\\": 1581912859713,\\n    \\"ConfigCheckRule\\": \\"{\\\\\\\\\\\\\\"deviceConfig\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\":false},\\\\\\\\\\\\\\"driverConfig\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\":false}}\\",\\n    \\"DriverId\\": \\"fec565038d7544978d9aed5c1a******\\",\\n    \\"EdgeVersion\\": \\"2.0.0\\",\\n    \\"GmtModifiedTimestamp\\": 1581912859713,\\n    \\"VersionState\\": \\"0\\",\\n    \\"ContainerConfig\\": \\"{\\\\\\\\\\\\\\"devMappings\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"hostNetworkMode\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"portMappings\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"privileged\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\"volumeMappings\\\\\\\\\\\\\\":[]}\\",\\n    \\"Description\\": \\"Led驱动\\",\\n    \\"DriverConfig\\": \\"[{\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"defaultConfig\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this is default driver config demo\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"JSON\\\\\\\\\\\\\\"}]\\",\\n    \\"DriverVersion\\": \\"1.2.0\\",\\n    \\"Argument\\": \\"-XX:+PrintGCDetails\\",\\n    \\"SourceConfig\\": \\"{\\\\\\\\\\\\\\"ossAddress\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb30******/ck3n3koe200003h6zfg******.zip\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"temporaryOssAddress\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb30******/ck3n3koe200003h6zf******.zip?Expires\\\\\\\\u003d1575******\\\\\\\\u0026OSSAccessKeyId\\\\\\\\u003daS4MT0IYrP******\\\\\\\\u0026Signature\\\\\\\\u003dm6cpmcaB8rm3YfbkhTYgb0******\\\\\\\\\\\\\\"}\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetEdgeDriverVersionResponse>\\r\\n    <RequestId>6ECE664B-E670-47BA-A6AD-62B9F35E3A7B</RequestId>\\r\\n    <Data>\\r\\n        <ContainerConfig>{\\"devMappings\\":[],\\"hostNetworkMode\\":0,\\"portMappings\\":[],\\"privileged\\":1,\\"volumeMappings\\":[]}</ContainerConfig>\\r\\n        <GmtCreate>2019-12-01 22:28:01</GmtCreate>\\r\\n        <DriverId>fec565038d7544978d9aed5c1a******</DriverId>\\r\\n        <Description>Led驱动</Description>\\r\\n        <DriverVersion>1.2.0</DriverVersion>\\r\\n        <SourceConfig>{\\"ossAddress\\":\\"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb30******/ck3n3koe200003h6zf******.zip\\",\\"temporaryOssAddress\\":\\"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb30******/ck3n3koe200003h6zf******.zip?Expires=1575******&amp;OSSAccessKeyId=aS4MT0IYrPSPj6******;Signature=m6cpmcaB8rm3YfbkhTYgb0W******\\"}</SourceConfig>\\r\\n        <GmtModified>2019-12-01 22:28:01</GmtModified>\\r\\n        <DriverConfig>[{\\"content\\":\\"{\\\\\\"defaultConfig\\\\\\":\\\\\\"this is default driver config demo\\\\\\"}\\",\\"format\\":\\"JSON\\"}]</DriverConfig>\\r\\n        <EdgeVersion>2.0.0</EdgeVersion>\\r\\n        <ConfigCheckRule>{\\"deviceConfig\\":{\\"required\\":false},\\"driverConfig\\":{\\"required\\":false}}</ConfigCheckRule>\\r\\n        <VersionState>0</VersionState>\\r\\n    </Data>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</GetEdgeDriverVersionResponse>","errorExample":""}]',
      'title' => '查询驱动某一版本的信息',
      'summary' => '查询驱动某一版本的信息。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。 ',
      'responseParamsDescription' => ' **ContainerConfig参数说明**

| 名称 | 类型 | 描述 |
| --- | --- | --- |
| privileged | Integer | 是否启动特权模式。<br />0：表示否。<br />1：表示是。<br /> |
| hostNetworkMode | Integer | 是否使用宿主机host模式。<br />0：表示否。<br />1：表示是。<br /> |
| portMappings | List | 网络端口映射。格式请参考本文下方portMappings表格。 |
| devMappings | List | 设备映射。格式请参考本文下方devMappings表格。 |
| volumeMappings | List | 卷映射。格式请参考本文下方volumeMappings表格。 |

<br />**portMappings参数说明**

| 名称 | 类型 | 描述 |
| --- | --- | --- |
| hostPort | Integer | 宿主机端口。 |
| containerPort | Integer | 容器内端口。 |
| protocol | Integer | 协议类型。取值有tcp和udp两种。 |


**devMappings参数说明**

| 名称 | 类型 | 描述 |
| --- | --- | --- |
| hostPath | String | 设备名称。 |
| permission | String | 读写权限。<br />ro：只读权限。<br />rw：读写权限。<br /> |
| comment | String | 注释信息。 |


**volumeMappings参数说明**

| 名称 | 类型 | 描述 |
| --- | --- | --- |
| hostPath | String | 源路径。 |
| containerPath | String | 目的路径。 |
| permission | String | 读写权限。<br />ro：只读权限。<br />rw：读写权限。<br /> |',
      'extraInfo' => ' ',
    ),
    'QueryEdgeDriverVersion' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数量。最大取值30，最小取值1，默认取值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '15',
          ),
        ),
        2 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '从返回结果中的第几页开始显示。最小取值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'fec565038d7544978d9aed5c1a******',
          ),
        ),
        4 => 
        array (
          'name' => 'DriverVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动版本号。设置该参数表示仅查询该版本号匹配的驱动版本信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'led驱动',
          ),
        ),
        5 => 
        array (
          'name' => 'VersionState',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动版本状态。

- 0：表示查询未发布的驱动版本。
- 1：表示查询已发布的驱动版本。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'ABA0CD1F-4270-42FE-84AD-D612240196F7',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '返回结果中每页显示的记录数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '15',
                  ),
                  'Total' => 
                  array (
                    'description' => '驱动数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'DriverVersionList' => 
                  array (
                    'description' => '驱动版本列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GmtCreateTimestamp' => 
                        array (
                          'description' => '创建驱动的Unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1581912859713',
                        ),
                        'ConfigCheckRule' => 
                        array (
                          'description' => '配置校验规则。JSON格式字符串，格式如下：

`{"deviceConfig":{"required":false},"driverConfig":{"required":false}`

参数说明如下。

- driverConfig：表示边缘实例中该驱动的配置校验规则。

- deviceConfig：表示边缘实例中该驱动下设备的配置校验规则。',
                          'type' => 'string',
                          'example' => '{\\"deviceConfig\\":{\\"required\\":false},\\"driverConfig\\":{\\"required\\":false}}',
                        ),
                        'DriverId' => 
                        array (
                          'description' => '驱动ID。',
                          'type' => 'string',
                          'example' => 'fec565038d7544978d9aed5c1a******',
                        ),
                        'EdgeVersion' => 
                        array (
                          'description' => '驱动适配的边缘版本。',
                          'type' => 'string',
                          'example' => '2.0.0',
                        ),
                        'GmtModifiedTimestamp' => 
                        array (
                          'description' => '最后一次更新驱动的Unix时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1581912859713',
                        ),
                        'VersionState' => 
                        array (
                          'description' => '驱动版本状态。

- 0：表示该版本未发布。
- 1：表示该版本已发布。',
                          'type' => 'string',
                          'example' => '0',
                        ),
                        'ContainerConfig' => 
                        array (
                          'description' => '容器配置。JSON格式字符串参数说明，请参见本文下方ContainerConfig表格。',
                          'type' => 'string',
                          'example' => '{\\"devMappings\\":[],\\"hostNetworkMode\\":0,\\"portMappings\\":[],\\"privileged\\":1,\\"volumeMappings\\":[]}',
                        ),
                        'Description' => 
                        array (
                          'description' => '驱动描述。',
                          'type' => 'string',
                          'example' => 'Led驱动',
                        ),
                        'DriverConfig' => 
                        array (
                          'description' => '驱动配置。JSON格式字符串，格式如下：

`{"format":"JSON","content":"{}"}`

参数说明如下所示。

- format：配置格式。取值有KV（键值对配置）、JSON（JSON格式）、FILE（配置文件）。
- content：配置内容。format为KV或JSON时，此处为配置内容；format为FILE时，此处为OSS地址。',
                          'type' => 'string',
                          'example' => '[{\\"content\\":\\"{\\\\\\"defaultConfig\\\\\\":\\\\\\"this is default driver config demo\\\\\\"}\\",\\"format\\":\\"JSON\\"}]',
                        ),
                        'DriverVersion' => 
                        array (
                          'description' => '驱动版本号。',
                          'type' => 'string',
                          'example' => '1.2.0',
                        ),
                        'Argument' => 
                        array (
                          'description' => 'JVM（Java Virtual Machine）启动参数。',
                          'type' => 'string',
                          'example' => '-XX:+PrintGCDetails',
                        ),
                        'SourceConfig' => 
                        array (
                          'description' => '驱动代码来源配置。JSON格式字符串，格式如下：

`{"ossAddress":"http://***/driver_code.zip","temporaryOssAddress":"http://***/driver_code.zip?Expires***"}`

其中，`ossAddress`为对象存储（OSS）访问地址，`temporaryOssAddress`为可以直接下载的临时链接，有效期5分钟。',
                          'type' => 'string',
                          'example' => '{\\"ossAddress\\":\\"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb3******/ck3n3koe200003h6zf******.zip\\",\\"temporaryOssAddress\\":\\"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb3******/ck3n3koe200003h6zf******.zip?Expires\\u003d1575******\\u0026OSSAccessKeyId\\u003daS4MT0IYr******\\u0026Signature\\u003dm6cpmcaB8rm3YfbkhTYgb0W******\\"}',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"ABA0CD1F-4270-42FE-84AD-D612240196F7\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 15,\\n    \\"Total\\": 1,\\n    \\"DriverVersionList\\": [\\n      {\\n        \\"GmtCreateTimestamp\\": 1581912859713,\\n        \\"ConfigCheckRule\\": \\"{\\\\\\\\\\\\\\"deviceConfig\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\":false},\\\\\\\\\\\\\\"driverConfig\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\":false}}\\",\\n        \\"DriverId\\": \\"fec565038d7544978d9aed5c1a******\\",\\n        \\"EdgeVersion\\": \\"2.0.0\\",\\n        \\"GmtModifiedTimestamp\\": 1581912859713,\\n        \\"VersionState\\": \\"0\\",\\n        \\"ContainerConfig\\": \\"{\\\\\\\\\\\\\\"devMappings\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"hostNetworkMode\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"portMappings\\\\\\\\\\\\\\":[],\\\\\\\\\\\\\\"privileged\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\"volumeMappings\\\\\\\\\\\\\\":[]}\\",\\n        \\"Description\\": \\"Led驱动\\",\\n        \\"DriverConfig\\": \\"[{\\\\\\\\\\\\\\"content\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"defaultConfig\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this is default driver config demo\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"JSON\\\\\\\\\\\\\\"}]\\",\\n        \\"DriverVersion\\": \\"1.2.0\\",\\n        \\"Argument\\": \\"-XX:+PrintGCDetails\\",\\n        \\"SourceConfig\\": \\"{\\\\\\\\\\\\\\"ossAddress\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb3******/ck3n3koe200003h6zf******.zip\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"temporaryOssAddress\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb3******/ck3n3koe200003h6zf******.zip?Expires\\\\\\\\u003d1575******\\\\\\\\u0026OSSAccessKeyId\\\\\\\\u003daS4MT0IYr******\\\\\\\\u0026Signature\\\\\\\\u003dm6cpmcaB8rm3YfbkhTYgb0W******\\\\\\\\\\\\\\"}\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryEdgeDriverVersionResponse>\\r\\n    <RequestId>ABA0CD1F-4270-42FE-84AD-D612240196F7</RequestId>\\r\\n    <Data>\\r\\n        <PageSize>15</PageSize>\\r\\n        <CurrentPage>1</CurrentPage>\\r\\n        <Total>1</Total>\\r\\n        <DriverVersionList>\\r\\n            <DriverVersion>\\r\\n                <ContainerConfig>{\\"devMappings\\":[],\\"hostNetworkMode\\":0,\\"portMappings\\":[],\\"privileged\\":1,\\"volumeMappings\\":[]}</ContainerConfig>\\r\\n                <GmtCreate>2019-12-01 22:28:01</GmtCreate>\\r\\n                <DriverId>fec565038d7544978d9aed5c1a******</DriverId>\\r\\n                <Description>Led驱动</Description>\\r\\n                <DriverVersion>1.2.0</DriverVersion>\\r\\n                <SourceConfig>{\\"ossAddress\\":\\"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb30******/ck3n3koe200003h6zf******.zip\\",\\"temporaryOssAddress\\":\\"http://nova-scene-daily.oss-cn-shanghai.aliyuncs.com/driver/a8d6e4acc6941ecea8f0cfb30******/ck3n3koe200003h6zf******.zip?Expires=1575******&amp;OSSAccessKeyId=aS4MT0IYrPS******&amp;Signature=m6cpmcaB8rm3YfbkhTYgb0WO******\\"}</SourceConfig>\\r\\n                <GmtModified>2019-12-01 22:28:01</GmtModified>\\r\\n                <DriverConfig>[{\\"content\\":\\"{\\\\\\"defaultConfig\\\\\\":\\\\\\"this is default driver config demo\\\\\\"}\\",\\"format\\":\\"JSON\\"}]</DriverConfig>\\r\\n                <EdgeVersion>2.0.0</EdgeVersion>\\r\\n                <ConfigCheckRule>{\\"deviceConfig\\":{\\"required\\":false},\\"driverConfig\\":{\\"required\\":false}}</ConfigCheckRule>\\r\\n                <VersionState>0</VersionState>\\r\\n            </DriverVersion>\\r\\n        </DriverVersionList>\\r\\n    </Data>\\r\\n    <Code>Success</Code>\\r\\n    <Success>true</Success>\\r\\n</QueryEdgeDriverVersionResponse>","errorExample":""}]',
      'title' => '分页查询驱动版本列表',
      'summary' => '分页查询驱动版本列表。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => '  **ContainerConfig参数说明**

| 名称 | 类型 | 描述 |
| --- | --- | --- |
| privileged | Integer | 是否启动特权模式。<br />0：表示否。<br />1：表示是。<br /> |
| hostNetworkMode | Integer | 是否使用宿主机host模式。<br />0：表示否。<br />1：表示是。<br /> |
| portMappings | List | 网络端口映射。格式请参考本文下方portMappings表格。 |
| devMappings | List | 设备映射。格式请参考本文下方devMappings表格。 |
| volumeMappings | List | 卷映射。格式请参考本文下方volumeMappings表格。 |

<br />**portMappings参数说明**

| 名称 | 类型 | 描述 |
| --- | --- | --- |
| hostPort | Integer | 宿主机端口。 |
| containerPort | Integer | 容器内端口。 |
| protocol | Integer | 协议类型。取值有tcp和udp两种。 |


**devMappings参数说明**

| 名称 | 类型 | 描述 |
| --- | --- | --- |
| hostPath | String | 设备名称。 |
| permission | String | 读写权限。<br />ro：只读权限。<br />rw：读写权限。<br /> |
| comment | String | 注释信息。 |


**volumeMappings参数说明**

| 名称 | 类型 | 描述 |
| --- | --- | --- |
| hostPath | String | 源路径。 |
| containerPath | String | 目的路径。 |
| permission | String | 读写权限。<br />ro：只读权限。<br />rw：读写权限。<br /> |',
      'extraInfo' => ' ',
    ),
    'CreateEdgeOssPreSignedAddress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源ID。目前仅支持驱动资源，因此此处为驱动ID。

可在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取驱动ID。您也可以调用[QueryEdgeDriver](~~155776~~)接口获取驱动ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'df9b9f441*********4c90d0c21d14',
          ),
        ),
        1 => 
        array (
          'name' => 'FileName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件名，格式为`<文件名>.<后缀>`。',
            'type' => 'string',
            'required' => true,
            'example' => 'testfile.zip',
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件内容类型。有如下三种类型：

- DRIVER_VERSION_CONTENT：驱动某一版本的代码。
- DRIVER_VERSION_DEFAULT_CONFIG：驱动某一版本的默认配置。
- INSTANCE_DRIVER_VERSION_CONFIG：边缘实例驱动某一版本的配置。',
            'type' => 'string',
            'required' => true,
            'example' => 'DRIVER_VERSION_CONTENT',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。

> 当**Type**参数取值为**INSTANCE_DRIVER_VERSION_CONFIG**时，此项不可为空。',
            'type' => 'string',
            'required' => false,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源版本。目前仅支持驱动资源，因此此处为驱动版本。',
            'type' => 'string',
            'required' => true,
            'example' => '2.0.0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '91E2BFA2-ECD7-4E11-B36B-66BCC4773922',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'OssAddress' => 
                  array (
                    'description' => 'OSS地址。',
                    'type' => 'string',
                    'example' => 'http://xxxx.oss-cn-shanghai.aliyuncs.com/driver/a534d3b81*******8fe7da0/DRIVER_VERSION_CONTENT/df9b9f441*********4c90d0c21d14/2.0.0/1581586102750/driver_code.zip',
                  ),
                  'OssPreSignedAddress' => 
                  array (
                    'description' => 'OSS预签名地址。更多信息，请参见[OSS文档](~~32016~~)。',
                    'type' => 'string',
                    'example' => 'http://xxxx.oss-cn-shanghai.aliyuncs.com/driver/a534d3b81*******8fe7da0/DRIVER_VERSION_CONTENT/df9b9f441*********4c90d0c21d14/2.0.0/1581586102750/driver_code.zip?Expires\\u003d1581586402\\u0026OSSAccessKeyId\\u003daS4MT0IYrP******\\u0026Signature\\u003dIUUjZ881H3rUoCOwjMXPmGbw******',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"91E2BFA2-ECD7-4E11-B36B-66BCC4773922\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"OssAddress\\": \\"http://xxxx.oss-cn-shanghai.aliyuncs.com/driver/a534d3b81*******8fe7da0/DRIVER_VERSION_CONTENT/df9b9f441*********4c90d0c21d14/2.0.0/1581586102750/driver_code.zip\\",\\n    \\"OssPreSignedAddress\\": \\"http://xxxx.oss-cn-shanghai.aliyuncs.com/driver/a534d3b81*******8fe7da0/DRIVER_VERSION_CONTENT/df9b9f441*********4c90d0c21d14/2.0.0/1581586102750/driver_code.zip?Expires\\\\\\\\u003d1581586402\\\\\\\\u0026OSSAccessKeyId\\\\\\\\u003daS4MT0IYrP******\\\\\\\\u0026Signature\\\\\\\\u003dIUUjZ881H3rUoCOwjMXPmGbw******\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateEdgeOssPreSignedAddressResponse>\\r\\n  <RequestId>91E2BFA2-ECD7-4E11-B36B-66BCC4773922</RequestId>\\r\\n  <Data>\\r\\n    <OssPreSignedAddress>http://xxxx.oss-cn-shanghai.aliyuncs.com/driver/a534d3b81*******8fe7da0/DRIVER_VERSION_CONTENT/df9b9f441*********4c90d0c21d14/2.0.0/1581586102750/driver_code.zip?Expires=1581586402&amp;OSSAccessKeyId=aS4MT0IYrP******&amp;Signature=IUUjZ881H3rUoCOwjMXPmGbw******</OssPreSignedAddress>\\r\\n    <OssAddress>http://xxxx.oss-cn-shanghai.aliyuncs.com/driver/a534d3b81*******8fe7da0/DRIVER_VERSION_CONTENT/df9b9f441*********4c90d0c21d14/2.0.0/1581586102750/driver_code.zip</OssAddress>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</CreateEdgeOssPreSignedAddressResponse>","errorExample":""}]',
      'title' => '创建对象存储OSS预签名地址',
      'summary' => '创建对象存储 OSS 预签名地址。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BindApplicationToEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'Tb4r9k3GWHJFWv******',
          ),
        ),
        2 => 
        array (
          'name' => 'ApplicationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘应用的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**应用管理**页面中，鼠标悬浮在目标应用名称上获取ID。',
            'type' => 'string',
            'required' => true,
            'example' => '361368ba5a094da9bf5625d092******',
          ),
        ),
        3 => 
        array (
          'name' => 'ApplicationVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘应用的版本号。',
            'type' => 'string',
            'required' => true,
            'example' => '3.7',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '86B23D5F-BF86-4F29-82E2-686D7B4D9AAA',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"86B23D5F-BF86-4F29-82E2-686D7B4D9AAA\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BindApplicationToEdgeInstanceResponse>\\r\\n  <RequestId>86B23D5F-BF86-4F29-82E2-686D7B4D9AAA</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</BindApplicationToEdgeInstanceResponse>","errorExample":""}]',
      'title' => '绑定边缘应用到边缘实例',
      'summary' => '绑定边缘应用到边缘实例。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => '  调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnbindApplicationFromEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'Tb4r9k3GWHJFWv******',
          ),
        ),
        2 => 
        array (
          'name' => 'ApplicationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘应用的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**应用管理**页面中，鼠标悬浮在目标应用名称上获取ID。',
            'type' => 'string',
            'required' => true,
            'example' => '361368ba5a094da9bf5625d092******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '5CA3B4EE-D865-47B0-91FD-BA7C2BC6BCC4',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"5CA3B4EE-D865-47B0-91FD-BA7C2BC6BCC4\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UnbindApplicationFromEdgeInstanceResponse>\\r\\n  <RequestId>5CA3B4EE-D865-47B0-91FD-BA7C2BC6BCC4</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</UnbindApplicationFromEdgeInstanceResponse>","errorExample":""}]',
      'title' => '从边缘实例中移除边缘应用',
      'summary' => '从边缘实例中移除边缘应用。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateEdgeInstanceChannel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '6GaTtvTj7vJhiS******',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '9c1ae7bd59f1469abbdccc9592******',
          ),
        ),
        3 => 
        array (
          'name' => 'ChannelName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动通道名称。支持中文、英文大小写字母、数字和下划线（_），长度限制1~30个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'le_name0',
          ),
        ),
        4 => 
        array (
          'name' => 'Configs',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '配置列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '配置的关键字。在有多个配置的情况下，用于区分配置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key1',
                ),
                'Format' => 
                array (
                  'description' => '配置格式。取值有KV（键值对配置）、JSON（JSON格式）、FILE（配置文件）。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'JSON',
                ),
                'Content' => 
                array (
                  'description' => '配置内容。

- **Configs.N.Format**参数的值为KV或JSON时，此处请填写配置内容。配置内容格式，请参见[驱动通道配置说明](~~172321~~)。

- **Configs.N.Format**参数的值为FILE时，此处请填写阿里云对象存储OSS地址。OSS地址请调用[CreateOssPreSignedAddress](~~155858~~)接口获取。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '{"protocol":"TCP", "ip":"1.2.3.4", "port":1}',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Data' => 
              array (
                'description' => '调用成功时返回的驱动通道ID。',
                'type' => 'string',
                'example' => 'BE0BD49EF5EF4D119D09CC1B25******',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'B34673EA-ECE7-44F5-BF01-40B5FAE633B6',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Data\\": \\"BE0BD49EF5EF4D119D09CC1B25******\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"B34673EA-ECE7-44F5-BF01-40B5FAE633B6\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateEdgeInstanceChannelResponse>\\r\\n  <RequestId>B34673EA-ECE7-44F5-BF01-40B5FAE633B6</RequestId>\\r\\n  <Data>BE0BD49EF5EF4D119D09CC1B2******</Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</CreateEdgeInstanceChannelResponse>","errorExample":""}]',
      'title' => 'CreateEdgeInstanceChannel',
      'summary' => '调用该接口创建边缘实例中的驱动通道。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchDeleteEdgeInstanceChannel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '6GaTtvTj7vJhiS******',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '9c1ae7bd59f1469abbdccc9592******',
          ),
        ),
        3 => 
        array (
          'name' => 'ChannelIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '驱动通道ID列表。调用[QueryEdgeInstanceChannel](~~162253~~)接口获取通道ID。

> 单次调用最多可填写20个通道ID。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'BE0BD49EF5EF4D119D09CC1B25******',
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C95D46F1-0B13-46C7-9FA7-FDBFCF2F9F6F',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"C95D46F1-0B13-46C7-9FA7-FDBFCF2F9F6F\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchDeleteEdgeInstanceChannelResponse>\\r\\n  <RequestId>C95D46F1-0B13-46C7-9FA7-FDBFCF2F9F6F</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</BatchDeleteEdgeInstanceChannelResponse>","errorExample":""}]',
      'title' => '批量删除边缘实例中驱动的通道',
      'summary' => '批量删除边缘实例中驱动的通道。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateEdgeInstanceChannel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '6GaTtvTj7vJhiS******',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '9c1ae7bd59f1469abbdccc9592******',
          ),
        ),
        3 => 
        array (
          'name' => 'ChannelId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动通道ID。调用[QueryEdgeInstanceChannel](~~162253~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'BE0BD49EF5EF4D119D09CC1B25******',
          ),
        ),
        4 => 
        array (
          'name' => 'ChannelName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动通道名称。支持中文、英文大小写字母、数字和下划线（_），长度限制1~30个字符。',
            'type' => 'string',
            'required' => true,
            'example' => 'le_name_update',
          ),
        ),
        5 => 
        array (
          'name' => 'Configs',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '配置列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '配置的关键字。在有多个配置的情况下，用于区分配置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'key1',
                ),
                'Format' => 
                array (
                  'description' => '配置格式。取值有KV（键值对配置）、JSON（JSON格式）、FILE（配置文件）。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'JSON',
                ),
                'Content' => 
                array (
                  'description' => '配置内容。

- **Configs.N.Format**参数的值为KV或JSON时，此处请填写配置内容。配置内容格式，请参见[驱动通道配置说明](~~172321~~)。

- **Configs.N.Format**参数的值为FILE时，此处请填写阿里云对象存储OSS地址。OSS地址请调用[CreateOssPreSignedAddress](~~155858~~)接口获取。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '{"protocol":"TCP", "ip":"1.2.3.4", "port":122}',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '60D75DC6-00BC-47B5-AB1B-0619B7830D7D',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"60D75DC6-00BC-47B5-AB1B-0619B7830D7D\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateEdgeInstanceChannelResponse>\\r\\n  <RequestId>60D75DC6-00BC-47B5-AB1B-0619B7830D7D</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</UpdateEdgeInstanceChannelResponse>","errorExample":""}]',
      'title' => 'UpdateEdgeInstanceChannel',
      'summary' => '调用该接口更新边缘实例中的驱动通道。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchGetEdgeInstanceChannel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '6GaTtvTj7vJhiS******',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '9c1ae7bd59f1469abbdccc9592******',
          ),
        ),
        3 => 
        array (
          'name' => 'ChannelIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '驱动通道ID列表。调用[QueryEdgeInstanceChannel](~~162253~~)接口获取通道ID。

> 单次调用最多可填写20个通道ID。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'BE0BD49EF5EF4D119D09CC1B25******',
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '5B86570E-C1A7-4569-BF7B-F7F09EB35BEB',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Channel' => 
                  array (
                    'description' => '调用成功时返回的数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ChannelName' => 
                        array (
                          'description' => '驱动通道名称。',
                          'type' => 'string',
                          'example' => 'le_name0',
                        ),
                        'ChannelId' => 
                        array (
                          'description' => '驱动通道ID。',
                          'type' => 'string',
                          'example' => 'BE0BD49EF5EF4D119D09CC1B25******',
                        ),
                        'ConfigList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Config' => 
                            array (
                              'description' => '配置信息列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '配置的关键字。',
                                    'type' => 'string',
                                    'example' => 'key1',
                                  ),
                                  'ConfigId' => 
                                  array (
                                    'description' => '配置ID。',
                                    'type' => 'string',
                                    'example' => '5d6016035c1a451daf174b1051******',
                                  ),
                                  'Format' => 
                                  array (
                                    'description' => '配置格式。取值有KV（键值对配置）、JSON（JSON格式）、FILE（配置文件）。',
                                    'type' => 'string',
                                    'example' => 'JSON',
                                  ),
                                  'Content' => 
                                  array (
                                    'description' => '配置内容。',
                                    'type' => 'string',
                                    'example' => '{\\"protocol\\":\\"TCP\\", \\"ip\\":\\"1.2.3.4\\", \\"port\\":1}',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"5B86570E-C1A7-4569-BF7B-F7F09EB35BEB\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Channel\\": [\\n      {\\n        \\"ChannelName\\": \\"le_name0\\",\\n        \\"ChannelId\\": \\"BE0BD49EF5EF4D119D09CC1B25******\\",\\n        \\"ConfigList\\": {\\n          \\"Config\\": [\\n            {\\n              \\"Key\\": \\"key1\\",\\n              \\"ConfigId\\": \\"5d6016035c1a451daf174b1051******\\",\\n              \\"Format\\": \\"JSON\\",\\n              \\"Content\\": \\"{\\\\\\\\\\\\\\"protocol\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"TCP\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"ip\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1.2.3.4\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"port\\\\\\\\\\\\\\":1}\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<BatchGetEdgeInstanceChannelResponse>\\r\\n  <RequestId>5B86570E-C1A7-4569-BF7B-F7F09EB35BEB</RequestId>\\r\\n  <Data>\\r\\n    <Channel>\\r\\n      <ChannelName>le_name0</ChannelName>\\r\\n      <ChannelId>BE0BD49EF5EF4D119D09CC1B25******</ChannelId>\\r\\n      <ConfigList>\\r\\n        <Config>\\r\\n          <Format>JSON</Format>\\r\\n          <Content>{\\"protocol\\":\\"TCP\\", \\"ip\\":\\"1.2.3.4\\", \\"port\\":1}</Content>\\r\\n          <ConfigId>5d6016035c1a451daf174b1051******</ConfigId>\\r\\n        </Config>\\r\\n      </ConfigList>\\r\\n    </Channel>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</BatchGetEdgeInstanceChannelResponse>","errorExample":""}]',
      'title' => '批量查询边缘实例中的驱动通道',
      'summary' => '批量查询边缘实例中的驱动通道。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryEdgeInstanceChannel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '6GaTtvTj7vJhiS******',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '9c1ae7bd59f1469abbdccc9592******',
          ),
        ),
        3 => 
        array (
          'name' => 'ChannelName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动通道名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'le_name0',
          ),
        ),
        4 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '从返回结果中的第几页开始显示。最小取值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数量。最大取值30，最小取值1，默认取值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '15',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'AA1EF007-0455-43C7-8E03-39D0BA20F4F5',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '返回结果中每页显示的记录数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '15',
                  ),
                  'Total' => 
                  array (
                    'description' => '驱动通道总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'ChannelList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Channel' => 
                      array (
                        'description' => '驱动通道信息列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'GmtCreateTimestamp' => 
                            array (
                              'description' => '创建驱动通道的Unix时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1584371212000',
                            ),
                            'ChannelName' => 
                            array (
                              'description' => '驱动通道名称。',
                              'type' => 'string',
                              'example' => 'le_name0',
                            ),
                            'GmtModifiedTimestamp' => 
                            array (
                              'description' => '最后一次更新驱动通道的Unix时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1584371212000',
                            ),
                            'ChannelId' => 
                            array (
                              'description' => '驱动通道ID。',
                              'type' => 'string',
                              'example' => 'BE0BD49EF5EF4D119D09CC1B25******',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '创建驱动通道的时间。',
                              'type' => 'string',
                              'example' => '2020-03-16 23:06:52',
                            ),
                            'GmtModified' => 
                            array (
                              'description' => '最后一次更新驱动通道的时间。',
                              'type' => 'string',
                              'example' => '2020-03-16 23:06:52',
                            ),
                            'ConfigList' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Config' => 
                                array (
                                  'description' => '配置信息列表。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Key' => 
                                      array (
                                        'description' => '配置的关键字。',
                                        'type' => 'string',
                                        'example' => 'key1',
                                      ),
                                      'ConfigId' => 
                                      array (
                                        'description' => '配置ID。',
                                        'type' => 'string',
                                        'example' => '5d6016035c1a451daf174b1051******',
                                      ),
                                      'Format' => 
                                      array (
                                        'description' => '配置格式。取值有KV（键值对配置）、JSON（JSON格式）、FILE（配置文件）。',
                                        'type' => 'string',
                                        'example' => 'JSON',
                                      ),
                                      'Content' => 
                                      array (
                                        'description' => '配置内容。',
                                        'type' => 'string',
                                        'example' => '{\\"protocol\\":\\"TCP\\", \\"ip\\":\\"1.2.3.4\\", \\"port\\":1}',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"AA1EF007-0455-43C7-8E03-39D0BA20F4F5\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 15,\\n    \\"Total\\": 1,\\n    \\"ChannelList\\": {\\n      \\"Channel\\": [\\n        {\\n          \\"GmtCreateTimestamp\\": 1584371212000,\\n          \\"ChannelName\\": \\"le_name0\\",\\n          \\"GmtModifiedTimestamp\\": 1584371212000,\\n          \\"ChannelId\\": \\"BE0BD49EF5EF4D119D09CC1B25******\\",\\n          \\"GmtCreate\\": \\"2020-03-16 23:06:52\\",\\n          \\"GmtModified\\": \\"2020-03-16 23:06:52\\",\\n          \\"ConfigList\\": {\\n            \\"Config\\": [\\n              {\\n                \\"Key\\": \\"key1\\",\\n                \\"ConfigId\\": \\"5d6016035c1a451daf174b1051******\\",\\n                \\"Format\\": \\"JSON\\",\\n                \\"Content\\": \\"{\\\\\\\\\\\\\\"protocol\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"TCP\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"ip\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1.2.3.4\\\\\\\\\\\\\\", \\\\\\\\\\\\\\"port\\\\\\\\\\\\\\":1}\\"\\n              }\\n            ]\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryEdgeInstanceChannelResponse>\\r\\n  <RequestId>AA1EF007-0455-43C7-8E03-39D0BA20F4F5</RequestId>\\r\\n  <Data>\\r\\n    <PageSize>15</PageSize>\\r\\n    <CurrentPage>1</CurrentPage>\\r\\n    <Total>1</Total>\\r\\n    <ChannelList>\\r\\n      <Channel>\\r\\n        <GmtCreate>2020-03-16 23:06:52</GmtCreate>\\r\\n        <ChannelName>le_name0</ChannelName>\\r\\n        <GmtCreateTimestamp>1584371212000</GmtCreateTimestamp>\\r\\n        <GmtModified>2020-03-16 23:06:52</GmtModified>\\r\\n        <GmtModifiedTimestamp>1584371212000</GmtModifiedTimestamp>\\r\\n        <ChannelId>BE0BD49EF5EF4D119D09CC1B25******</ChannelId>\\r\\n        <ConfigList>\\r\\n          <Config>\\r\\n            <Format>JSON</Format>\\r\\n            <Content>{\\"protocol\\":\\"TCP\\", \\"ip\\":\\"1.2.3.4\\", \\"port\\":1}</Content>\\r\\n            <ConfigId>5d6016035c1a451daf174b1051******</ConfigId>\\r\\n          </Config>\\r\\n        </ConfigList>\\r\\n      </Channel>\\r\\n    </ChannelList>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</QueryEdgeInstanceChannelResponse>","errorExample":""}]',
      'title' => '查询边缘实例中的驱动通道列表',
      'summary' => '查询边缘实例中的驱动通道列表	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchSetEdgeInstanceDeviceChannel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '6GaTtvTj7vJhiS******',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '9c1ae7bd59f1469abbdccc9592******',
          ),
        ),
        3 => 
        array (
          'name' => 'ChannelId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动通道ID。调用[QueryEdgeInstanceChannel](~~162253~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'BE0BD49EF5EF4D119D09CC1B25******',
          ),
        ),
        4 => 
        array (
          'name' => 'IotIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '子设备ID列表。可调用[QueryDevice](~~69905~~)接口查询子设备ID。

> 单次调用最多可填写20个子设备ID。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'Hathoyxglj9jpYPyw3WN******',
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'B0325EA9-671C-460B-B0F3-83F41CFF855B',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"B0325EA9-671C-460B-B0F3-83F41CFF855B\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchSetEdgeInstanceDeviceChannelResponse>\\r\\n  <RequestId>B0325EA9-671C-460B-B0F3-83F41CFF855B</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</BatchSetEdgeInstanceDeviceChannelResponse>","errorExample":""}]',
      'title' => '批量关联驱动通道到子设备',
      'summary' => '批量关联驱动通道到子设备。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchGetEdgeInstanceDeviceChannel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '6GaTtvTj7vJhiS******',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '9c1ae7bd59f1469abbdccc9592******',
          ),
        ),
        3 => 
        array (
          'name' => 'IotIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '子设备ID列表。可调用[QueryDevice](~~69905~~)接口查询子设备ID。

> 单次调用最多可填写20个子设备ID。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'Hathoyxglj9jpYPyw3WN******',
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '029BC40B-8353-48B3-94C3-7ABF296F0AE5',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DeviceChannelList' => 
              array (
                'description' => '子设备关联的驱动通道列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ChannelId' => 
                    array (
                      'description' => '驱动通道ID。',
                      'type' => 'string',
                      'example' => 'BE0BD49EF5EF4D119D09CC1B25******',
                    ),
                    'ChannelName' => 
                    array (
                      'description' => '驱动通道名称。',
                      'type' => 'string',
                      'example' => 'le_name_update',
                    ),
                    'IotId' => 
                    array (
                      'description' => '子设备ID。',
                      'type' => 'string',
                      'example' => 'Hathoyxglj9jpYPyw3WN0******',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"029BC40B-8353-48B3-94C3-7ABF296F0AE5\\",\\n  \\"Success\\": true,\\n  \\"DeviceChannelList\\": [\\n    {\\n      \\"ChannelId\\": \\"BE0BD49EF5EF4D119D09CC1B25******\\",\\n      \\"ChannelName\\": \\"le_name_update\\",\\n      \\"IotId\\": \\"Hathoyxglj9jpYPyw3WN0******\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<BatchGetEdgeInstanceDeviceChannelResponse>\\r\\n  <RequestId>029BC40B-8353-48B3-94C3-7ABF296F0AE5</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n  <DeviceChannelList>\\r\\n    <DeviceChannel>\\r\\n      <IotId>Hathoyxglj9jpYPyw3WN0******</IotId>\\r\\n      <ChannelName>le_name_update</ChannelName>\\r\\n      <ChannelId>BE0BD49EF5EF4D119D09CC1B25******</ChannelId>\\r\\n    </DeviceChannel>\\r\\n  </DeviceChannelList>\\r\\n</BatchGetEdgeInstanceDeviceChannelResponse>","errorExample":""}]',
      'title' => '批量获取子设备关联的驱动通道',
      'summary' => '批量获取子设备关联的驱动通道。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryEdgeInstanceDeviceByDriver' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数量。最大取值30，最小取值1，默认取值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '15',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '6GaTtvTj7vJhiS******',
          ),
        ),
        3 => 
        array (
          'name' => 'ChannelId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动通道ID。调用[QueryEdgeInstanceChannel](~~162253~~)接口获取。',
            'type' => 'string',
            'required' => false,
            'example' => 'BE0BD49EF5EF4D119D09CC1B25******',
          ),
        ),
        4 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '9c1ae7bd59f1469abbdccc9592******',
          ),
        ),
        5 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '从返回结果中的第几页开始显示。最小取值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C2AEE142-A9ED-46C5-9EA4-BF0817F0D556',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '返回结果中每页显示的记录数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '15',
                  ),
                  'Total' => 
                  array (
                    'description' => '驱动下关联的子设备总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'DeviceList' => 
                  array (
                    'description' => '子设备信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'IotId' => 
                        array (
                          'description' => '子设备ID。',
                          'type' => 'string',
                          'example' => 'Hathoyxglj9jpYPyw3WN******',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"C2AEE142-A9ED-46C5-9EA4-BF0817F0D556\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 15,\\n    \\"Total\\": 1,\\n    \\"DeviceList\\": [\\n      {\\n        \\"IotId\\": \\"Hathoyxglj9jpYPyw3WN******\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryEdgeInstanceDeviceByDriverResponse>\\r\\n  <RequestId>C2AEE142-A9ED-46C5-9EA4-BF0817F0D556</RequestId>\\r\\n  <Data>\\r\\n    <PageSize>15</PageSize>\\r\\n    <CurrentPage>1</CurrentPage>\\r\\n    <Total>1</Total>\\r\\n    <DeviceList>\\r\\n      <Device>\\r\\n        <IotId>Hathoyxglj9jpYPyw3WN******</IotId>\\r\\n      </Device>\\r\\n    </DeviceList>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</QueryEdgeInstanceDeviceByDriverResponse>","errorExample":""}]',
      'title' => '查询驱动下关联的子设备',
      'summary' => '查询驱动下关联的子设备	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchGetEdgeInstanceDeviceDriver' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '6GaTtvTj7vJhiS******',
          ),
        ),
        2 => 
        array (
          'name' => 'IotIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '子设备ID列表。可调用[QueryDevice](~~69905~~)接口查询设备ID。

> 单次调用最多可填写20个设备ID。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'Hathoyxglj9jpYPyw3WN******',
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E8D82F7A-0F84-4BD3-AE8A-5444A5B42800',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DeviceDriverList' => 
              array (
                'description' => '子设备的驱动列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DriverId' => 
                    array (
                      'description' => '驱动ID。',
                      'type' => 'string',
                      'example' => '9c1ae7bd59f1469abbdccc9592******',
                    ),
                    'IotId' => 
                    array (
                      'description' => '子设备ID。',
                      'type' => 'string',
                      'example' => 'Hathoyxglj9jpYPyw3WN******',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"E8D82F7A-0F84-4BD3-AE8A-5444A5B42800\\",\\n  \\"Success\\": true,\\n  \\"DeviceDriverList\\": [\\n    {\\n      \\"DriverId\\": \\"9c1ae7bd59f1469abbdccc9592******\\",\\n      \\"IotId\\": \\"Hathoyxglj9jpYPyw3WN******\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<BatchGetEdgeInstanceDeviceDriverResponse>\\r\\n  <RequestId>E8D82F7A-0F84-4BD3-AE8A-5444A5B42800</RequestId>\\r\\n  <DeviceDriverList>\\r\\n    <DeviceDriver>\\r\\n      <IotId>Hathoyxglj9jpYPyw3WN******</IotId>\\r\\n      <DriverId>9c1ae7bd59f1469abbdccc9592******</DriverId>\\r\\n    </DeviceDriver>\\r\\n  </DeviceDriverList>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</BatchGetEdgeInstanceDeviceDriverResponse>","errorExample":""}]',
      'title' => '批量获取子设备关联的驱动',
      'summary' => '批量获取子设备关联的驱动。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchGetDeviceBindStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'IotIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '设备ID列表。可调用[QueryDevice](~~69905~~)接口查询设备ID。

> 单次调用最多可填写20个设备ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '设备ID。可调用[QueryDevice](~~69905~~)接口查询设备ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'sjI0Sd124XFYyjBYMiYO******',
            ),
            'required' => true,
            'example' => 'sjI0Sd124XFYyjBYMiYO******',
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'B1DF865D-2474-4CD5-9B7E-59B06D204CBF',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时返回的数据。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'BindStatus' => 
                    array (
                      'description' => '网关或设备是否已绑定到边缘实例。

- 0：表示未绑定。

- 1：表示已绑定。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'iot-v64********',
                    ),
                    'IotId' => 
                    array (
                      'description' => '设备ID。',
                      'type' => 'string',
                      'example' => 'sjI0Sd124XFYyjBYMiYO******',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"B1DF865D-2474-4CD5-9B7E-59B06D204CBF\\",\\n  \\"Success\\": true,\\n  \\"Data\\": [\\n    {\\n      \\"BindStatus\\": 1,\\n      \\"InstanceId\\": \\"iot-v64********\\",\\n      \\"IotId\\": \\"sjI0Sd124XFYyjBYMiYO******\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<BatchGetDeviceBindStatusResponse>\\r\\n  <RequestId>B1DF865D-2474-4CD5-9B7E-59B06D204CBF</RequestId>\\r\\n  <Data>\\r\\n    <DeviceStatus>\\r\\n      <IotId>sjI0Sd124XFYyjBYMiYO******</IotId>\\r\\n      <BindStatus>0</BindStatus>\\r\\n    </DeviceStatus>\\r\\n    <DeviceStatus>\\r\\n      <IotId>BXPV9Ks3bxwM9fDl9Ck0******</IotId>\\r\\n      <BindStatus>1</BindStatus>\\r\\n    </DeviceStatus>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</BatchGetDeviceBindStatusResponse>","errorExample":""}]',
      'title' => '批量获取网关或设备绑定到边缘实例的状态',
      'summary' => '调用该接口批量获取网关或设备绑定到边缘实例的状态。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ReplaceEdgeInstanceGateway' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'G4TGWGYwpo8zwr******',
          ),
        ),
        2 => 
        array (
          'name' => 'CurrentGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前网关设备的IotId。IotId是物联网平台为设备生成的唯一标识符。可调用[QueryDevice](~~69905~~)接口查询。',
            'type' => 'string',
            'required' => true,
            'example' => 'oTCJomvT95WPyPPQ5sje******',
          ),
        ),
        3 => 
        array (
          'name' => 'NewGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要替换的新网关设备的IotId。IotId是物联网平台为设备生成的唯一标识符。可调用[QueryDevice](~~69905~~)接口查询。',
            'type' => 'string',
            'required' => true,
            'example' => '65SkFyhZcU5d3PO2Ri13******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '10E5C856-E0A1-4468-BE01-E540A8BA8819',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"10E5C856-E0A1-4468-BE01-E540A8BA8819\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ReplaceEdgeInstanceGatewayResponse>\\r\\n  <RequestId>10E5C856-E0A1-4468-BE01-E540A8BA8819</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</ReplaceEdgeInstanceGatewayResponse>","errorExample":""}]',
      'title' => '替换已绑定到边缘实例网关',
      'summary' => '替换已绑定到边缘实例的网关。替换网关后，原网关的部署状态和部署历史会被清除。',
      'description' => '## 限制条件

- 替换网关前，必须先在物联网平台控制台的**边缘计算** > **边缘实例**> **实例详情**页面重置边缘实例。

- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。

    > RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ReleaseEdgeDriverVersion' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'DriverId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**驱动管理**页面中，鼠标悬浮在目标驱动名称上获取ID。

您也可以调用[QueryEdgeDriver](~~155776~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'fec565038d7544978d9aed5c1a******',
          ),
        ),
        2 => 
        array (
          'name' => 'DriverVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '驱动版本号。',
            'type' => 'string',
            'required' => true,
            'example' => '1.2.0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '3E56BFDF-3F00-495F-89A1-F891930DDB51',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"3E56BFDF-3F00-495F-89A1-F891930DDB51\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ReleaseEdgeDriverVersionResponse>\\r\\n  <RequestId>3E56BFDF-3F00-495F-89A1-F891930DDB51</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</ReleaseEdgeDriverVersionResponse>","errorExample":""}]',
      'title' => '发布驱动的某一版本',
      'summary' => '发布驱动的某一版本。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BindRoleToEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'F3APY0tPLhmgGtx0****',
          ),
        ),
        2 => 
        array (
          'name' => 'RoleArn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权角色的全局资源描述符（ARN）。在[RAM控制台](https://ram.console.aliyun.com/)创建角色后，单击角色名，可在**基本信息**页查看其ARN。',
            'type' => 'string',
            'required' => true,
            'example' => 'acs:ram::176********:role/iotedgerole',
          ),
        ),
        3 => 
        array (
          'name' => 'RoleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '角色名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'IoTEdgeRole',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '3DE428F8-22AF-4B37-8FEC-E64CFBE4A125',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"3DE428F8-22AF-4B37-8FEC-E64CFBE4A125\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BindRoleToEdgeInstanceResponse>\\r\\n  <RequestId>3DE428F8-22AF-4B37-8FEC-E64CFBE4A125</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</BindRoleToEdgeInstanceResponse>","errorExample":""}]',
      'title' => '将角色绑定到边缘实例',
      'summary' => '将角色绑定到边缘实例。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnbindRoleFromEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的 **边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'BlYJyXZpLBtkmR******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '270097AC-FFC3-4D2F-B48D-384BA1EA9962',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"270097AC-FFC3-4D2F-B48D-384BA1EA9962\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UnbindRoleFromEdgeInstanceResponse>\\n  <RequestId>270097AC-FFC3-4D2F-B48D-384BA1EA9962</RequestId>\\n  <Code>Success</Code>\\n  <Success>true</Success>\\n</UnbindRoleFromEdgeInstanceResponse>","errorExample":""}]',
      'title' => '解除边缘实例中已绑定的角色',
      'summary' => '调用该接口解除边缘实例中已绑定的角色。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BindSceneRuleToEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'llL44UVXUqb9m5******',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则ID。调用[QuerySceneRule](~~169498~~)接口获取场景联动规则ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'f041397879ad4d89822811d741******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C9D9C91B-1B3B-4D84-AE58-68E7BAA909EK',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"RequestId\\": \\"C9D9C91B-1B3B-4D84-AE58-68E7BAA909EK\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BindSceneRuleToEdgeInstanceResponse>\\r\\n  <RequestId>C9D9C91B-1B3B-4D84-AE58-68E7BAA909EK</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</BindSceneRuleToEdgeInstanceResponse>","errorExample":""}]',
      'title' => '绑定场景联动规则到边缘实例',
      'summary' => '绑定场景联动规则到边缘实例	。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnbindSceneRuleFromEdgeInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'llL44UVXUqb9m5******',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '场景联动规则ID。调用[QuerySceneRule](~~169498~~)接口获取场景联动规则ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'f041397879ad4d89822811d741******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'C9D9C91B-1B3B-4D84-AE58-68E7BAA909EK',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"C9D9C91B-1B3B-4D84-AE58-68E7BAA909EK\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UnbindSceneRuleFromEdgeInstanceResponse>\\r\\n  <RequestId>C9D9C91B-1B3B-4D84-AE58-68E7BAA909EK</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</UnbindSceneRuleFromEdgeInstanceResponse>","errorExample":""}]',
      'title' => '从边缘实例中移除场景联动规则',
      'summary' => '调用该接口，从边缘实例中移除场景联动规则。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryEdgeInstanceSceneRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。公共实例不传此参数，企业版实例需传入。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标悬浮在目标边缘实例名称上获取ID。

您也可以调用[QueryEdgeInstance](~~135214~~)接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'llL44UVXUqb9m5******',
          ),
        ),
        2 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '从返回结果中的第几页开始显示。最小取值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的记录数量。最大取值30，最小取值1，默认取值是10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码。Success表示成功，其它表示错误码。详情请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'D4C3331B-0FA8-4A05-AFE2-54F698EDEAF7',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。true表示调用成功，false表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'description' => '当前页码。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '返回结果中每页显示的记录数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Total' => 
                  array (
                    'description' => '场景联动规则总数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'RuleList' => 
                  array (
                    'description' => '场景联动规则列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '场景联动规则在边缘实例中的状态。

- 0：表示已停止。

- 1：表示已启动。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '场景联动规则的创建时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1582004185000',
                        ),
                        'IsExisted' => 
                        array (
                          'description' => '场景联动规则是否存在。

- 0：表示已删除。

- 1：表示存在。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'RuleName' => 
                        array (
                          'description' => '场景联动规则的名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'RuleId' => 
                        array (
                          'description' => '场景联动规则ID。',
                          'type' => 'string',
                          'example' => 'f041397879ad4d89822811d741******',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"D4C3331B-0FA8-4A05-AFE2-54F698EDEAF7\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"CurrentPage\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"Total\\": 1,\\n    \\"RuleList\\": [\\n      {\\n        \\"Status\\": 1,\\n        \\"GmtCreate\\": 1582004185000,\\n        \\"IsExisted\\": 1,\\n        \\"RuleName\\": \\"test\\",\\n        \\"RuleId\\": \\"f041397879ad4d89822811d741******\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryEdgeInstanceSceneRuleResponse>\\r\\n  <RequestId>D4C3331B-0FA8-4A05-AFE2-54F698EDEAF7</RequestId>\\r\\n  <Data>\\r\\n    <RuleList>\\r\\n      <Rule>\\r\\n        <GmtCreate>1582004185000</GmtCreate>\\r\\n        <RuleId>f041397879ad4d89822811d741******</RuleId>\\r\\n        <Status>1</Status>\\r\\n        <RuleName>test</RuleName>\\r\\n      </Rule>\\r\\n    </RuleList>\\r\\n    <PageSize>10</PageSize>\\r\\n    <CurrentPage>1</CurrentPage>\\r\\n    <Total>1</Total>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</QueryEdgeInstanceSceneRuleResponse>","errorExample":""}]',
      'title' => '分页查询边缘实例中的场景规则',
      'summary' => '分页查询边缘实例中的场景规则。',
      'description' => '## 限制条件
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。

> RAM用户共享主账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableDeviceTunnel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID：
- 企业版实例：必须传入此参数。您可在物联网平台控制台的**实例概览**页面，查看您的企业版实例ID。
- 公共实例：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关所属产品的Key，产品的唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Wmy******',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关的设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'LEGatewayAuto_B3XM******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码：
- **Success**：表示成功。
- 其它：表示错误码。错误码详情，请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '577F07AF-7EFE-4B98-AEA2-634ED864BA01',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功：
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"577F07AF-7EFE-4B98-AEA2-634ED864BA01\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<EnableDeviceTunnelResponse>\\r\\n  <RequestId>577F07AF-7EFE-4B98-AEA2-634ED864BA01</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</EnableDeviceTunnelResponse>","errorExample":""}]',
      'title' => 'EnableDeviceTunnel',
      'summary' => '调用该接口开启设备隧道。',
      'description' => '## 限制条件
- 如果在企业版实例中调用该接口，必须传入参数**IotInstanceId**的值。否则，调用接口会失败。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDeviceTunnelStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID：
- 企业版实例：必须传入此参数。您可在物联网平台控制台的**实例概览**页面，查看您的企业版实例ID。
- 公共实例：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关所属产品的Key，产品的唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1kqtIX****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的网关设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'LEGatewayAuto_B3XM******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码：
- **Success**：表示成功。
- 其它：表示错误码。错误码详情，请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据：
- **online**：表示网关隧道已开启。
- **offline**：表示网关隧道已关闭。',
                'type' => 'string',
                'example' => 'online',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '7CCFF08F-34D1-4FBD-ACA9-22D9364EA5A4',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功：
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Data\\": \\"online\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"7CCFF08F-34D1-4FBD-ACA9-22D9364EA5A4\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetDeviceTunnelStatusResponse>\\r\\n  <RequestId>7CCFF08F-34D1-4FBD-ACA9-22D9364EA5A4</RequestId>\\r\\n  <Data>online</Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</GetDeviceTunnelStatusResponse>","errorExample":""}]',
      'title' => 'GetDeviceTunnelStatus',
      'summary' => '调用该接口查询网关设备的隧道状态。',
      'description' => '## 限制条件
- 如果在企业版实例中调用该接口，必须传入参数**IotInstanceId**的值。否则，调用接口会失败。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableDeviceTunnel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID：
- 企业版实例：必须传入此参数。您可在物联网平台控制台的**实例概览**页面，查看您的企业版实例ID。
- 公共实例：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关所属产品的Key，产品的唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Wmy******',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关的设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'LEGatewayAuto_B3XM******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码：
- **Success**：表示成功。
- 其它：表示错误码。错误码详情，请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '73671995-9588-406B-9C1E-FC38450A2AA1',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功：
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"73671995-9588-406B-9C1E-FC38450A2AA1\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DisableDeviceTunnelResponse>\\r\\n  <RequestId>73671995-9588-406B-9C1E-FC38450A2AA1</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</DisableDeviceTunnelResponse>","errorExample":""}]',
      'title' => 'DisableDeviceTunnel',
      'summary' => '调用该接口关闭网关隧道。',
      'description' => '## 限制条件
- 如果在企业版实例中调用该接口，必须传入参数**IotInstanceId**的值。否则，调用接口会失败。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDeviceTunnelShareStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID：
- 企业版实例：必须传入此参数。您可在物联网平台控制台的**实例概览**页面，查看您的企业版实例ID。
- 公共实例：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关所属产品的Key，产品的唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Wmy******',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关的设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'LEGatewayAuto_B3XM******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码：
- **Success**：表示成功。
- 其它：表示错误码。错误码详情，请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'ACC1D51C-1A58-440E-92A7-71AB61C6595A',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功：
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'ShareId' => 
                  array (
                    'description' => '隧道分享ID。

> 当**IsOpen**的值为**false**时，此处为空。',
                    'type' => 'string',
                    'example' => '18f72f95cad34ca3aeabeeefcb******',
                  ),
                  'Password' => 
                  array (
                    'description' => '隧道分享密码。

> 当**IsOpen**的值为**false**时，此处为空。',
                    'type' => 'string',
                    'example' => '848bbfa0e9a31e579502869920b4d4c********',
                  ),
                  'GmtOpened' => 
                  array (
                    'description' => '开启隧道分享的Unix时间戳。

> 当**IsOpen**的值为**false**时，此处为空。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1617941371000',
                  ),
                  'IsOpen' => 
                  array (
                    'description' => '是否已开启隧道分享：
- **true**：表示已开启。
- **false**：表示未开启。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"RequestId\\": \\"ACC1D51C-1A58-440E-92A7-71AB61C6595A\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"ShareId\\": \\"18f72f95cad34ca3aeabeeefcb******\\",\\n    \\"Password\\": \\"848bbfa0e9a31e579502869920b4d4c********\\",\\n    \\"GmtOpened\\": 1617941371000,\\n    \\"IsOpen\\": true\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetDeviceTunnelShareStatusResponse>\\r\\n  <RequestId>ACC1D51C-1A58-440E-92A7-71AB61C6595A</RequestId>\\r\\n  <Data>\\r\\n    <GmtOpened>1617941371000</GmtOpened>\\r\\n    <ShareId>18f72f95cad34ca3aeabeeefcb******</ShareId>\\r\\n    <Password>848bbfa0e9a31e579502869920b4d4c********</Password>\\r\\n    <IsOpen>true</IsOpen>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</GetDeviceTunnelShareStatusResponse>","errorExample":""}]',
      'title' => 'GetDeviceTunnelShareStatus',
      'summary' => '调用该接口获取网关隧道的分享状态。',
      'description' => '## 限制条件
- 如果在企业版实例中调用该接口，必须传入参数**IotInstanceId**的值。否则，调用接口会失败。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableDeviceTunnelShare' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID：
- 企业版实例：必须传入此参数。您可在物联网平台控制台的**实例概览**页面，查看您的企业版实例ID。
- 公共实例：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关所属产品的Key，产品的唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Wmy******',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关的设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'LEGatewayAuto_B3XM******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码：
- **Success**：表示成功。
- 其它：表示错误码。错误码详情，请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '3DB31A1A-BD83-4155-AD2B-56AD041E372C',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功：
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"RequestId\\": \\"3DB31A1A-BD83-4155-AD2B-56AD041E372C\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<EnableDeviceTunnelShareResponse>\\r\\n  <RequestId>3DB31A1A-BD83-4155-AD2B-56AD041E372C</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</EnableDeviceTunnelShareResponse>","errorExample":""}]',
      'title' => 'EnableDeviceTunnelShare',
      'summary' => '调用该接口开启网关隧道分享。',
      'description' => '## 限制条件
- 如果在企业版实例中调用该接口，必须传入参数**IotInstanceId**的值。否则，调用接口会失败。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
    ),
    'DisableDeviceTunnelShare' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID：
- 企业版实例：必须传入此参数。您可在物联网平台控制台的**实例概览**页面，查看您的企业版实例ID。
- 公共实例：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关所属产品的Key，产品的唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Wmy******',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关的设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'LEGatewayAuto_B3XM******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码：
- **Success**：表示成功。
- 其它：表示错误码。错误码详情，请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '35023CAB-CBED-4A2E-92DF-201C72850B50',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功：
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"RequestId\\": \\"35023CAB-CBED-4A2E-92DF-201C72850B50\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DisableDeviceTunnelShareResponse>\\r\\n  <RequestId>35023CAB-CBED-4A2E-92DF-201C72850B50</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</DisableDeviceTunnelShareResponse>","errorExample":""}]',
      'title' => 'DisableDeviceTunnelShare',
      'summary' => '调用该接口关闭网关隧道分享。',
      'description' => '## 限制条件
- 如果在企业版实例中调用该接口，必须传入参数**IotInstanceId**的值。否则，调用接口会失败。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RefreshDeviceTunnelSharePassword' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID：
- 企业版实例：必须传入此参数。您可在物联网平台控制台的**实例概览**页面，查看您的企业版实例ID。
- 公共实例：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关所属产品的Key，产品的唯一标识符。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1Wmy******',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关的设备名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'LEGatewayAuto_B3XM******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码：
- **Success**：表示成功。
- 其它：表示错误码。错误码详情，请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Password' => 
              array (
                'description' => '新的隧道分享密码。',
                'type' => 'string',
                'example' => '5f5c96d7e792af75da33a81dc87982ea********',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '46AF6619-EFF3-4B77-A90B-B9EAA0C6D1AF',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功：
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"Password\\": \\"5f5c96d7e792af75da33a81dc87982ea********\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"46AF6619-EFF3-4B77-A90B-B9EAA0C6D1AF\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RefreshDeviceTunnelSharePasswordResponse>\\r\\n  <RequestId>46AF6619-EFF3-4B77-A90B-B9EAA0C6D1AF</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n  <Password>5f5c96d7e792af75da33a81dc87982ea********</Password>\\r\\n</RefreshDeviceTunnelSharePasswordResponse>","errorExample":""}]',
      'title' => 'RefreshDeviceTunnelSharePassword',
      'summary' => '调用该接口更新网关隧道分享密码。',
      'description' => '## 限制条件
- 如果在企业版实例中调用该接口，必须传入参数**IotInstanceId**的值。否则，调用接口会失败。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
    ),
    'CreateEdgeInstanceMessageRouting' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物联网平台的实例ID：
- 企业版实例：必须传入此参数。您可在[物联网平台控制台](http://iot.console.aliyun.com/)的**实例概览**页面，查看您的企业版实例ID。
- 公共实例：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标指针悬浮在目标边缘实例名称上获取ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nF9oXo7kLRWQ********',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息路由名称。长度限制为4~32个字符，汉字和全角符号算2个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'le_lite2',
          ),
        ),
        3 => 
        array (
          'name' => 'TopicFilter',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息过滤条件，取值如下：
- 具体消息Topic：表示来自消息源，且符合该消息Topic的消息，会被传给消息接收者。Topic相关信息，请参见[什么是Topic](~~73731~~)。
- **all**：表示来自消息源的所有消息，都会被传给消息接收者。',
            'type' => 'string',
            'required' => false,
            'example' => 'all',
          ),
        ),
        4 => 
        array (
          'name' => 'SourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息来源，取值如下：
- **device**：表示消息由设备发出。
- **function**：表示消息由边缘应用发出。
- **IotHub**：表示消息由云端发出。',
            'type' => 'string',
            'required' => true,
            'example' => 'device',
          ),
        ),
        5 => 
        array (
          'name' => 'SourceData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息来源的数据，取值分如下几种情况：

- **SourceType**取值为**device**时： 
    - 如果由指定产品下的指定设备发送消息，则此处取值格式为`/{Your_ProductKey}/{Your_DeviceName}`。

        > 请将{Your_ProductKey}和{Your_DeviceName}替换为您实际设备的ProductKey和DeviceName。

    - 如果由指定产品下的所有设备发送消息，则此处取值格式为`/{Your_ProductKey}/+`。

        > 请将{Your_ProductKey}替换为您实际设备的ProductKey。

    - 如果由边缘实例中所有产品下的所有设备发送消息，则此处取值为`#`。

- **SourceType**取值为**function**：此处取值为边缘应用的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**应用管理**页面中，鼠标指针悬浮在目标应用名称上获取ID。

-  **SourceType**取值为**IotHub**时：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => '#',
          ),
        ),
        6 => 
        array (
          'name' => 'TargetType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息接收者，取值分如下几种情况：
- **SourceType**取值为**device**时：该参数可取的值为**function**或**IotHub**，表示由设备发出的消息，传给边缘应用或云端。
- **SourceType**取值为**function**时：该参数可取的值为**function**或**IotHub**，表示由边缘应用发出的消息，传给另一个边缘应用或云端。
- **SourceType**取值为**IotHub**时：该参数可取的值为**function**，表示由云端发出的消息，传给边缘应用。',
            'type' => 'string',
            'required' => true,
            'example' => 'function',
          ),
        ),
        7 => 
        array (
          'name' => 'TargetData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息接收者的数据，取值分如下几种情况：
- **TargetType**取值为**function**时：此处取值为边缘应用的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**应用管理**页面中，鼠标指针悬浮在目标应用名称上获取ID。
- **TargetType**取值为**IotHub**时：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => '58c46749ac934db3925fe5********',
          ),
        ),
        8 => 
        array (
          'name' => 'TargetIotHubQos',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务级别。取值如下：

- **0**：表示消息仅发送一次，不管是否被消息接收者成功接收。

- **1**：表示最少发送一次消息，直至收到消息接收者的返回信息，则停止发送该消息。

> 当**TargetType**为**IoTHub**时，必须传入此参数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码：
- **Success**：表示成功。
- 其它：表示错误码。错误码详情，请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'AC786033-00C5-4FD6-8435-F2807740D9FA',
              ),
              'RouteId' => 
              array (
                'description' => '消息路由的ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '123456',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功：
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"AC786033-00C5-4FD6-8435-F2807740D9FA\\",\\n  \\"RouteId\\": 123456,\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateEdgeInstanceMessageRoutingResponse>\\r\\n  <RequestId>BBE0E0C7-913A-47B8-A255-F2C6038B5FD8</RequestId>\\r\\n  <RouteId>123456</RouteId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</CreateEdgeInstanceMessageRoutingResponse>","errorExample":""}]',
      'title' => 'CreateEdgeInstanceMessageRouting',
      'summary' => '调用该接口，为指定的边缘实例创建消息路由。',
      'description' => '## 限制条件
- 如果在企业版实例中调用该接口，必须传入参数**IotInstanceId**的值。否则，调用接口会失败。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteEdgeInstanceMessageRouting' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物联网平台的实例ID：
- 企业版实例：必须传入此参数。您可在[物联网平台控制台](http://iot.console.aliyun.com/)的**实例概览**页面，查看您的企业版实例ID。
- 公共实例：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标指针悬浮在目标边缘实例名称上获取ID。',
            'type' => 'string',
            'required' => true,
            'example' => '5zvK1COK1gtr********',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息路由的ID。您可以调用[QueryEdgeInstanceMessageRouting](~~212633~~)接口获取。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '0',
            'example' => '123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码：
- **Success**：表示成功。
- 其它：表示错误码。错误码详情，请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E252BC84-EF9A-4F0F-8E73-ADCF9CA3B722',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功：
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"E252BC84-EF9A-4F0F-8E73-ADCF9CA3B722\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteEdgeInstanceMessageRoutingResponse>\\r\\n  <code>Success</code>\\r\\n  <requestId>E252BC84-EF9A-4F0F-8E73-ADCF9CA3B722</requestId>\\r\\n  <success>true</success>\\r\\n</DeleteEdgeInstanceMessageRoutingResponse>","errorExample":""}]',
      'title' => 'DeleteEdgeInstanceMessageRouting',
      'summary' => '调用该接口删除边缘实例中的消息路由。',
      'description' => '## 限制条件
- 如果在企业版实例中调用该接口，必须传入参数**IotInstanceId**的值。否则，调用接口会失败。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateEdgeInstanceMessageRouting' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物联网平台的实例ID：
- 企业版实例：必须传入此参数。您可在[物联网平台控制台](http://iot.console.aliyun.com/)的**实例概览**页面，查看您的企业版实例ID。
- 公共实例：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标指针悬浮在目标边缘实例名称上获取ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nF9oXo7kLRWQ********',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息路由ID。您可以调用[QueryEdgeInstanceMessageRouting](~~212633~~)接口获取。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '0',
            'example' => '123456',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息路由名称。长度限制为4~32个字符，汉字和全角符号算2个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'le_lite1',
          ),
        ),
        4 => 
        array (
          'name' => 'TopicFilter',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息过滤条件，取值如下：
- 具体消息Topic：表示来自消息源，且符合该消息Topic的消息，会被传给消息接收者。Topic相关信息，请参见[什么是Topic](~~73731~~)。
- **all**：表示来自消息源的所有消息，都会被传给消息接收者。',
            'type' => 'string',
            'required' => false,
            'example' => 'all',
          ),
        ),
        5 => 
        array (
          'name' => 'SourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息来源，取值如下：
- **device**：表示消息由设备发出。
- **function**：表示消息由边缘应用发出。
- **IotHub**：表示消息由云端发出。',
            'type' => 'string',
            'required' => true,
            'example' => 'device',
          ),
        ),
        6 => 
        array (
          'name' => 'SourceData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息来源的数据，取值分如下几种情况：

- **SourceType**取值为**device**时： 
    - 如果由指定产品下的指定设备发送消息，则此处取值格式为`/{Your_ProductKey}/{Your_DeviceName}`。

        > 请将{Your_ProductKey}和{Your_DeviceName}替换为您实际设备的ProductKey和DeviceName。

    - 如果由指定产品下的所有设备发送消息，则此处取值格式为`/{Your_ProductKey}/+`。

        > 请将{Your_ProductKey}替换为您实际设备的ProductKey。

    - 如果由边缘实例中所有产品下的所有设备发送消息，则此处取值为`#`。

- **SourceType**取值为**function**：此处取值为边缘应用的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**应用管理**页面中，鼠标指针悬浮在目标应用名称上获取ID。

-  **SourceType**取值为**IotHub**时：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => '#',
          ),
        ),
        7 => 
        array (
          'name' => 'TargetType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息接收者，取值分如下几种情况：
- **SourceType**取值为**device**时：该参数可取的值为**function**或**IotHub**，表示由设备发出的消息，传给边缘应用或云端。
- **SourceType**取值为**function**时：该参数可取的值为**function**或**IotHub**，表示由边缘应用发出的消息，传给另一个边缘应用或云端。
- **SourceType**取值为**IotHub**时：该参数可取的值为**function**，表示由云端发出的消息，传给边缘应用。',
            'type' => 'string',
            'required' => true,
            'example' => 'function',
          ),
        ),
        8 => 
        array (
          'name' => 'TargetData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息接收者的数据，取值分如下几种情况：
- **TargetType**取值为**function**时：此处取值为边缘应用的ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**应用管理**页面中，鼠标指针悬浮在目标应用名称上获取ID。
- **TargetType**取值为**IotHub**时：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => '58c46749ac934db3925fe5********',
          ),
        ),
        9 => 
        array (
          'name' => 'TargetIotHubQos',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务级别。取值如下：

- **0**：表示消息仅发送一次，不管是否被消息接收者成功接收。

- **1**：表示最少发送一次消息，直至收到消息接收者的返回信息，则停止发送该消息。

> 当**TargetType**为**IoTHub**时，必须传入此参数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码：
- **Success**：表示成功。
- 其它：表示错误码。错误码详情，请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'BBE0E0C7-913A-47B8-A255-F2C6038B5FD8',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功：
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"BBE0E0C7-913A-47B8-A255-F2C6038B5FD8\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateEdgeInstanceMessageRoutingResponse>\\r\\n  <RequestId>BBE0E0C7-913A-47B8-A255-F2C6038B5FD8</RequestId>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</UpdateEdgeInstanceMessageRoutingResponse>","errorExample":""}]',
      'title' => 'UpdateEdgeInstanceMessageRouting',
      'summary' => '调用该接口更新边缘实例中的消息路由。',
      'description' => '## 限制条件
- 如果在企业版实例中调用该接口，必须传入参数**IotInstanceId**的值。否则，调用接口会失败。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为20。
    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetEdgeInstanceMessageRouting' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物联网平台的实例ID：
- 企业版实例：必须传入此参数。您可在[物联网平台控制台](http://iot.console.aliyun.com/)的**实例概览**页面，查看您的企业版实例ID。
- 公共实例：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID。在[边缘计算控制台](https://iot.console.aliyun.com/le/instance/list)的**边缘实例**页面中，鼠标指针悬浮在目标边缘实例名称上获取ID。',
            'type' => 'string',
            'required' => true,
            'example' => '8jKxIuMVT9rX********',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '消息路由ID。您可以调用[QueryEdgeInstanceMessageRouting](~~212633~~)接口获取。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '0',
            'example' => '123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '接口返回码：
- **Success**：表示成功。
- 其它：表示错误码。错误码详情，请参见[错误码](~~135200~~)。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => '8A248DEC-887C-4A37-8DE5-E128FFA3698D',
              ),
              'Success' => 
              array (
                'description' => '是否调用成功：
- **true**：表示调用成功。
- **false**：表示调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回的数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'GmtCreateTimestamp' => 
                  array (
                    'description' => '创建消息路由的Unix时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1590407699000',
                  ),
                  'TopicFilter' => 
                  array (
                    'description' => '消息过滤条件。',
                    'type' => 'string',
                    'example' => 'all',
                  ),
                  'GmtModifiedTimestamp' => 
                  array (
                    'description' => '最后一次更新消息路由的Unix时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1590407699000',
                  ),
                  'TargetData' => 
                  array (
                    'description' => '消息接收者的数据：
- **TargetType**为**function**时：此处是边缘应用的ID。
- **TargetType**为**IotHub**时：此处为空。',
                    'type' => 'string',
                    'example' => '58c46749ac934db3925fe5********',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '创建消息路由的时间。',
                    'type' => 'string',
                    'example' => '2020-05-25 19:54:59',
                  ),
                  'SourceType' => 
                  array (
                    'description' => '消息来源：
- **device**：表示消息由设备发出。
- **function**：表示消息由边缘应用发出。
- **IotHub**：表示消息由云端发出。',
                    'type' => 'string',
                    'example' => 'device',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '最后一次更新消息路由的时间。',
                    'type' => 'string',
                    'example' => '2020-05-25 19:54:59',
                  ),
                  'Name' => 
                  array (
                    'description' => '消息路由名称。',
                    'type' => 'string',
                    'example' => 'sample',
                  ),
                  'SourceData' => 
                  array (
                    'description' => '消息来源的数据：

- **SourceType**为**device**时：

    - 此处参数值格式为`/{Your_ProductKey}/{Your_DeviceName}`：表示消息来源为指定产品下的指定设备。

        > {Your_ProductKey}和{Your_DeviceName}是您实际设备的ProductKey和DeviceName。

    - 此处参数值格式为`/{Your_ProductKey}/+`：表示消息来源为指定产品下的所有设备。

        > {Your_ProductKey}是您实际设备的ProductKey。

    - 此处参数值为**#**：表示消息来源为边缘实例中所有产品下的所有设备。

- **SourceType**为**function**时：此处是边缘应用的ID。

-  **SourceType**为**IotHub**时：此处为空。',
                    'type' => 'string',
                    'example' => '#',
                  ),
                  'TargetType' => 
                  array (
                    'description' => '消息接收者：
- **function**：表示消息发送给边缘应用。
- **IotHub**：表示消息发送给云端。',
                    'type' => 'string',
                    'example' => 'IotHub',
                  ),
                  'RouteContext' => 
                  array (
                    'description' => '消息来源和消息接收者的补充信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'TargetApplicationName' => 
                      array (
                        'description' => '**TargetType**为**function**，且**TargetData**中指定的边缘应用，是函数计算类型的边缘应用时，返回此参数，表示函数计算类型边缘应用的名称。',
                        'type' => 'string',
                        'example' => 'le_object_detector',
                      ),
                      'SourceApplicationName' => 
                      array (
                        'description' => '**SourceType**为**function**，且**SourceData**中指定的边缘应用，是函数计算类型的边缘应用时，返回此参数，表示函数计算类型边缘应用的名称。',
                        'type' => 'string',
                        'example' => 'le_object_detector',
                      ),
                      'TargetFcFunctionName' => 
                      array (
                        'description' => '**TargetType**为**function**，且**TargetData**中指定的边缘应用，是函数计算类型的边缘应用时，返回此参数，表示函数计算类型边缘应用中的函数名称。',
                        'type' => 'string',
                        'example' => 'lightSensorDataFilter',
                      ),
                      'SourceFcFunctionName' => 
                      array (
                        'description' => '**SourceType**为**function**，且**SourceData**中指定的边缘应用，是函数计算类型的边缘应用时，返回此参数，表示函数计算类型边缘应用中的函数名称。',
                        'type' => 'string',
                        'example' => 'object_detector_app',
                      ),
                      'TargetFcServiceName' => 
                      array (
                        'description' => '**TargetType**为**function**，且**TargetData**中指定的边缘应用，是函数计算类型的边缘应用时，返回此参数，表示函数计算类型边缘应用中的函数名称。',
                        'type' => 'string',
                        'example' => 'EdgeFC',
                      ),
                      'SourceFcServiceName' => 
                      array (
                        'description' => '**SourceType**为**function**，且**SourceData**中指定的边缘应用，是函数计算类型的边缘应用时，返回此参数，表示函数计算类型边缘应用中的服务名称。',
                        'type' => 'string',
                        'example' => 'EdgeFC',
                      ),
                      'Qos' => 
                      array (
                        'description' => '服务级别：

- 0：表示消息仅发送一次，不管是否被消息接收者成功接收。

- 1：表示最少发送一次消息，直至收到消息接收者的返回信息，则停止发送该消息。',
                        'type' => 'string',
                        'example' => '1',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"Success\\",\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"8A248DEC-887C-4A37-8DE5-E128FFA3698D\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"GmtCreateTimestamp\\": 1590407699000,\\n    \\"TopicFilter\\": \\"all\\",\\n    \\"GmtModifiedTimestamp\\": 1590407699000,\\n    \\"TargetData\\": \\"58c46749ac934db3925fe5********\\",\\n    \\"GmtCreate\\": \\"2020-05-25 19:54:59\\",\\n    \\"SourceType\\": \\"device\\",\\n    \\"GmtModified\\": \\"2020-05-25 19:54:59\\",\\n    \\"Name\\": \\"sample\\",\\n    \\"SourceData\\": \\"#\\",\\n    \\"TargetType\\": \\"IotHub\\",\\n    \\"RouteContext\\": {\\n      \\"TargetApplicationName\\": \\"le_object_detector\\",\\n      \\"SourceApplicationName\\": \\"le_object_detector\\",\\n      \\"TargetFcFunctionName\\": \\"lightSensorDataFilter\\",\\n      \\"SourceFcFunctionName\\": \\"object_detector_app\\",\\n      \\"TargetFcServiceName\\": \\"EdgeFC\\",\\n      \\"SourceFcServiceName\\": \\"EdgeFC\\",\\n      \\"Qos\\": \\"1\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetEdgeInstanceMessageRoutingResponse>\\r\\n  <RequestId>8A248DEC-887C-4A37-8DE5-E128FFA3698D</RequestId>\\r\\n  <Data>\\r\\n    <TargetData/>\\r\\n    <TopicFilter>all</TopicFilter>\\r\\n    <GmtCreate>2020-05-25 19:54:59</GmtCreate>\\r\\n    <GmtCreateTimestamp>1590407699000</GmtCreateTimestamp>\\r\\n    <SourceType>device</SourceType>\\r\\n    <TargetType>IotHub</TargetType>\\r\\n    <GmtModified>2020-05-25 19:54:59</GmtModified>\\r\\n    <RouteId>170101</RouteId>\\r\\n    <GmtModifiedTimestamp>1590407699000</GmtModifiedTimestamp>\\r\\n    <Name>sample</Name>\\r\\n    <SourceData>#</SourceData>\\r\\n    <RouteContext>\\r\\n      <Qos>0</Qos>\\r\\n    </RouteContext>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</GetEdgeInstanceMessageRoutingResponse>","errorExample":""}]',
      'title' => '查询边缘实例中消息路由的详细信息',
      'summary' => '调用该接口，获取边缘实例中消息路由的详细信息。',
      'description' => '## 限制条件
- 如果在企业版实例中调用该接口，必须传入参数**IotInstanceId**的值。否则，调用接口会失败。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
    > RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~135196~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryEdgeInstanceMessageRouting' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'CurrentPage',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '100000',
            'minimum' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '100',
            'minimum' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'ErrorMessage' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CurrentPage' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'PageSize' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'Total' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'MessageRouteList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MessageRoute' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'GmtCreateTimestamp' => 
                            array (
                              'type' => 'integer',
                              'format' => 'int64',
                            ),
                            'TopicFilter' => 
                            array (
                              'type' => 'string',
                            ),
                            'GmtModifiedTimestamp' => 
                            array (
                              'type' => 'integer',
                              'format' => 'int64',
                            ),
                            'TargetData' => 
                            array (
                              'type' => 'string',
                            ),
                            'GmtCreate' => 
                            array (
                              'type' => 'string',
                            ),
                            'SourceType' => 
                            array (
                              'type' => 'string',
                            ),
                            'GmtModified' => 
                            array (
                              'type' => 'string',
                            ),
                            'Name' => 
                            array (
                              'type' => 'string',
                            ),
                            'RouteId' => 
                            array (
                              'type' => 'integer',
                              'format' => 'int32',
                            ),
                            'SourceData' => 
                            array (
                              'type' => 'string',
                            ),
                            'TargetType' => 
                            array (
                              'type' => 'string',
                            ),
                            'RouteContext' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'TargetApplicationName' => 
                                array (
                                  'type' => 'string',
                                ),
                                'SourceApplicationName' => 
                                array (
                                  'type' => 'string',
                                ),
                                'TargetFcFunctionName' => 
                                array (
                                  'type' => 'string',
                                ),
                                'SourceFcFunctionName' => 
                                array (
                                  'type' => 'string',
                                ),
                                'TargetFcServiceName' => 
                                array (
                                  'type' => 'string',
                                ),
                                'SourceFcServiceName' => 
                                array (
                                  'type' => 'string',
                                ),
                                'Qos' => 
                                array (
                                  'type' => 'string',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\r\\n  \\"RequestId\\": \\"8A248DEC-887C-4A37-8DE5-E128FFA3698D\\",\\r\\n  \\"Data\\": {\\r\\n    \\"PageSize\\": 15,\\r\\n    \\"CurrentPage\\": 1,\\r\\n    \\"Total\\": 2,\\r\\n    \\"MessageRouteList\\": {\\r\\n      \\"MessageRoute\\": [\\r\\n        {\\r\\n          \\"TargetData\\": \\"\\",\\r\\n          \\"TopicFilter\\": \\"all\\",\\r\\n          \\"GmtCreate\\": \\"2021-04-15 19:39:20\\",\\r\\n          \\"GmtCreateTimestamp\\": 1618486760000,\\r\\n          \\"SourceType\\": \\"device\\",\\r\\n          \\"TargetType\\": \\"IotHub\\",\\r\\n          \\"GmtModified\\": \\"2021-04-15 19:47:10\\",\\r\\n          \\"RouteId\\": 123456,\\r\\n          \\"GmtModifiedTimestamp\\": 1618487230000,\\r\\n          \\"SourceData\\": \\"/a127n******/test1098\\",\\r\\n          \\"Name\\": \\"sample\\",\\r\\n          \\"RouteContext\\": {\\r\\n            \\"Qos\\": 1\\r\\n          }\\r\\n        },\\r\\n        {\\r\\n          \\"TargetData\\": \\"\\",\\r\\n          \\"TopicFilter\\": \\"all\\",\\r\\n          \\"GmtCreate\\": \\"2020-05-25 19:54:59\\",\\r\\n          \\"GmtCreateTimestamp\\": 1590407699000,\\r\\n          \\"SourceType\\": \\"device\\",\\r\\n          \\"TargetType\\": \\"IotHub\\",\\r\\n          \\"GmtModified\\": \\"2020-05-25 19:54:59\\",\\r\\n          \\"RouteId\\": 170101,\\r\\n          \\"GmtModifiedTimestamp\\": 1590407699000,\\r\\n          \\"SourceData\\": \\"#\\",\\r\\n          \\"RouteContext\\": {\\r\\n            \\"Qos\\": 0\\r\\n          }\\r\\n        }\\r\\n      ]\\r\\n    }\\r\\n  },\\r\\n  \\"Code\\": \\"Success\\",\\r\\n  \\"Success\\": true\\r\\n}","type":"json"},{"errorExample":"","example":"<QueryEdgeInstanceMessageRoutingResponse>\\r\\n  <RequestId>8A248DEC-887C-4A37-8DE5-E128FFA3698D</RequestId>\\r\\n  <Data>\\r\\n    <PageSize>15</PageSize>\\r\\n    <CurrentPage>1</CurrentPage>\\r\\n    <Total>2</Total>\\r\\n    <MessageRouteList>\\r\\n      <MessageRoute>\\r\\n        <TargetData/>\\r\\n        <TopicFilter>all</TopicFilter>\\r\\n        <GmtCreate>2021-04-15 19:39:20</GmtCreate>\\r\\n        <GmtCreateTimestamp>1618486760000</GmtCreateTimestamp>\\r\\n        <SourceType>device</SourceType>\\r\\n        <TargetType>IotHub</TargetType>\\r\\n        <GmtModified>2021-04-15 19:47:10</GmtModified>\\r\\n        <RouteId>123456</RouteId>\\r\\n        <GmtModifiedTimestamp>1618487230000</GmtModifiedTimestamp>\\r\\n        <SourceData>/a127n******/test1098</SourceData>\\r\\n        <Name>sample</Name>\\r\\n        <RouteContext>\\r\\n          <Qos>1</Qos>\\r\\n        </RouteContext>\\r\\n      </MessageRoute>\\r\\n      <MessageRoute>\\r\\n        <TargetData/>\\r\\n        <TopicFilter>all</TopicFilter>\\r\\n        <GmtCreate>2020-05-25 19:54:59</GmtCreate>\\r\\n        <GmtCreateTimestamp>1590407699000</GmtCreateTimestamp>\\r\\n        <SourceType>device</SourceType>\\r\\n        <TargetType>IotHub</TargetType>\\r\\n        <GmtModified>2020-05-25 19:54:59</GmtModified>\\r\\n        <RouteId>170101</RouteId>\\r\\n        <GmtModifiedTimestamp>1590407699000</GmtModifiedTimestamp>\\r\\n        <SourceData>#</SourceData>\\r\\n        <RouteContext>\\r\\n          <Qos>0</Qos>\\r\\n        </RouteContext>\\r\\n      </MessageRoute>\\r\\n    </MessageRouteList>\\r\\n  </Data>\\r\\n  <Code>Success</Code>\\r\\n  <Success>true</Success>\\r\\n</QueryEdgeInstanceMessageRoutingResponse>","type":"xml"}]',
    ),
    'BatchBindProductsIntoProject' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。
- 企业版实例：必须传入此参数。您可在物联网平台控制台的**实例概览**页面，查看您的企业版实例ID。
- 公共实例：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProjectId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID。
1. 您可登录[物联网应用开发控制台](https://studio.iot.aliyun.com/?spm=a2c4g.11186623.2.8.1e7830fagdybMb)，在页面左上角选择对应实例后，在左侧导航栏单击项目管理。
2. 在普通项目列表中，找到目标项目，单击项目卡片，在地址栏中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'a123********',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKeys',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '需要关联到项目的产品ProductKey列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'a1BwAGV****',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回该参数，值为true。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- true：调用成功。
- false：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'IoT.Common.NullParameter',
            'errorMessage' => 'Parameter cannot be empty.',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Studio.Product.BindFailed',
            'errorMessage' => 'bind failed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"Data\\": true,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchBindProductsIntoProjectResponse>\\n\\t<RequestId>AF4C862A-233A-43CA-A4BD-AB43FFD25A87</RequestId>\\n\\t<Data>true</Data>\\n\\t<Success>true</Success>\\n </BatchBindProductsIntoProjectResponse>","errorExample":""}]',
      'title' => '批量绑定产品到项目中',
      'summary' => '批量关联产品到项目中。',
      'description' => '## 限制说明
- 如果在企业版实例中调用该接口，请求参数**IotInstanceId**必须填写。否则，调用接口会失败。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。
- 单次调用该接口最多可关联10个产品。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](https://help.aliyun.com/document_detail/30561.html?spm=a2c4g.11186623.2.11.cd0fc4793w9Hmy)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchUnbindProjectProducts' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。
- 企业版实例：必须传入此参数。您可在物联网平台控制台的**实例概览**页面，查看您的企业版实例ID。
- 公共实例：无需传入此参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProjectId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID。
1. 您可登录[物联网应用开发控制台](https://studio.iot.aliyun.com/?spm=a2c4g.11186623.2.8.1e7830fagdybMb)，在页面左上角选择对应实例后，在左侧导航栏单击项目管理。
2. 在普通项目列表中，找到目标项目，单击项目卡片，在地址栏中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'a123********',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKeys',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '需要解除项目中关联产品的ProductKey列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => 'a1BwAGV****',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回该参数，值为true。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- true：调用成功。
- false：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'IoT.Common.NullParameter',
            'errorMessage' => 'Parameter cannot be empty.',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Studio.Product.UnbindFailed',
            'errorMessage' => 'unbind failed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"Data\\": true,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchUnbindProjectProductsResponse>\\r\\n\\t<RequestId>E0600442-A846-4D15-92B8-8B0B9FF7A801</RequestId>\\r\\n\\t<Data>true</Data>\\r\\n\\t<Success>true</Success>\\r\\n</BatchUnbindProjectProductsResponse>\\r\\n","errorExample":""}]',
      'title' => '批量解绑项目产品',
      'summary' => '解绑指定项目下的指定产品。支持批量。',
      'description' => '## 限制说明
- 如果在企业版实例中调用该接口，请求参数**IotInstanceId**必须填写。否则，调用接口会失败。
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。
- 单次调用该接口最多可解除10个关联产品。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](https://help.aliyun.com/document_detail/30561.html?spm=a2c4g.11186623.2.11.cd0fc4793w9Hmy)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchBindDevicesIntoProject' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProjectId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID。
1. 您可登录[物联网应用开发控制台](https://studio.iot.aliyun.com/?spm=a2c4g.11186623.2.8.1e7830fagdybMb)，在页面左上角选择对应实例后，在左侧导航栏单击项目管理。
2. 在普通项目列表中，找到目标项目，单击项目卡片，在地址栏中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'a12******',
          ),
        ),
        2 => 
        array (
          'name' => 'Devices',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '设备列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ProductKey' => 
                array (
                  'description' => '关联到项目的设备所隶属的产品ProductKey列表。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'a1BwAGV****',
                ),
                'DeviceName' => 
                array (
                  'description' => '需要关联到项目的设备DeviceName列表。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Ee2******',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错误码详情，请参见[错误码](~~202245~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回该参数，值为true。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'IoT.Common.NullParameter',
            'errorMessage' => 'Parameter cannot be empty.',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Studio.Device.BatchAddDevicesToProjectFailed',
            'errorMessage' => 'batch add devices to project failed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"Data\\": true,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchBindDevicesIntoProjectResponse>\\r\\n\\t<RequestId>3737EE71-7FB9-418E-9B29-929F32CFF314</RequestId>\\r\\n\\t<Data>true</Data>\\r\\n\\t<Success>true</Success>\\r\\n</BatchBindDevicesIntoProjectResponse>\\t\\r\\n","errorExample":""}]',
      'title' => 'BatchBindDevicesIntoProject',
      'summary' => '调用该接口批量关联设备到项目中。',
      'description' => '## 限制说明
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。

- 单次调用该接口最多可关联10个设备。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](https://help.aliyun.com/document_detail/30561.html?spm=a2c4g.11186623.2.11.cd0fc4793w9Hmy)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BatchUnbindProjectDevices' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'ProjectId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID。
1. 您可登录[物联网应用开发控制台](https://studio.iot.aliyun.com/?spm=a2c4g.11186623.2.8.1e7830fagdybMb)，在页面左上角选择对应实例后，在左侧导航栏单击项目管理。
2. 在普通项目列表中，找到目标项目，单击项目卡片，在地址栏中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'a12******',
          ),
        ),
        2 => 
        array (
          'name' => 'Devices',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '需要解除关联的设备列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ProductKey' => 
                array (
                  'description' => '解除项目中关联设备所隶属的产品ProductKey列表。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'a1BwAGV****',
                ),
                'DeviceName' => 
                array (
                  'description' => '需要解除项目中关联设备的DeviceName列表。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Ee2******',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错误码详情，请参见[错误码](~~202245~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回该参数，值为true。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。

- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'IoT.Common.NullParameter',
            'errorMessage' => 'Parameter cannot be empty.',
          ),
        ),
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Studio.Device.BatchRemoveDevicesFromProjectFailed',
            'errorMessage' => 'batch remove devices from project failed',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"Data\\": true,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<BatchUnbindProjectDevicesResponse>\\r\\n\\t<RequestId>D87124B4-8567-4E86-9F39-35F9C3668A3B</RequestId>\\r\\n\\t<Data>true</Data>\\r\\n\\t<Success>true</Success>\\r\\n</BatchUnbindProjectDevicesResponse>","errorExample":""}]',
      'title' => 'BatchUnbindProjectDevices',
      'summary' => '调用该接口批量解除项目中关联的设备。',
      'description' => '## 限制说明
- 单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。
- 单次调用该接口最多可解除10个关联设备。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](https://help.aliyun.com/document_detail/30561.html?spm=a2c4g.11186623.2.11.cd0fc4793w9Hmy)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryStudioProjectList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目名称。
- 支持中文、英文字母、数字、下划线（_）、短划线（-）、英文圆括号（()）。
- 必须以中文、英文字母或数字开头。
- 长度不超过30个字符（一个中文算一个字符）。',
            'type' => 'string',
            'required' => false,
            'example' => 'test1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNo',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的条数。最小值1，最大值50，默认值20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错误码详情，请参见[错误码](~~202245~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '项目列表详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNo' => 
                  array (
                    'description' => '指定从返回结果中的第几页开始显示。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TotalPage' => 
                  array (
                    'description' => '分页总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示的条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Total' => 
                  array (
                    'description' => '项目总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ProjectInfo' => 
                      array (
                        'description' => '项目列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'GmtCreate' => 
                            array (
                              'description' => '项目的创建时间。毫秒值时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1611819839000',
                            ),
                            'Description' => 
                            array (
                              'description' => '项目描述。',
                              'type' => 'string',
                              'example' => 'This is a test project.',
                            ),
                            'Name' => 
                            array (
                              'description' => '项目名称。',
                              'type' => 'string',
                              'example' => 'test1',
                            ),
                            'GmtModified' => 
                            array (
                              'description' => '项目的修改时间。毫秒值时间戳。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1611819860000',
                            ),
                            'ProjectId' => 
                            array (
                              'description' => '项目ID。',
                              'type' => 'string',
                              'example' => 'a123********',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'IoT.Common.NullParameter',
            'errorMessage' => 'Parameter cannot be empty.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNo\\": 1,\\n    \\"TotalPage\\": 10,\\n    \\"PageSize\\": 20,\\n    \\"Total\\": 200,\\n    \\"List\\": {\\n      \\"ProjectInfo\\": [\\n        {\\n          \\"GmtCreate\\": 1611819839000,\\n          \\"Description\\": \\"This is a test project.\\",\\n          \\"Name\\": \\"test1\\",\\n          \\"GmtModified\\": 1611819860000,\\n          \\"ProjectId\\": \\"a123********\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryStudioProjectListResponse>\\n    <RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n    <Data>\\n        <TotalPage>10</TotalPage>\\n        <PageSize>20</PageSize>\\n        <Total>200</Total>\\n        <PageNo>1</PageNo>\\n        <List>\\n            <ProjectInfo>\\n                <GmtCreate>1611819839000</GmtCreate>\\n                <Description>This is a test project.</Description>\\n                <ProjectId>a123********</ProjectId>\\n                <GmtModified>1611819860000</GmtModified>\\n                <Name>test1</Name>\\n            </ProjectInfo>\\n        </List>\\n    </Data>\\n    <Success>true</Success>\\n</QueryStudioProjectListResponse>","errorExample":""}]',
      'title' => 'QueryStudioProjectList',
      'summary' => '调用该接口获取项目列表。',
      'description' => '## 限制说明
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。

',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~203277~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetStudioProjectCooperation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'Status',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '设置项目协作状态。
- **0**（默认）： 关闭。
- **1**： 开通。',
            'type' => 'string',
            'required' => true,
            'example' => '1',
            'enum' => 
            array (
              0 => '1',
              1 => '0',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错误码详情，请参见[错误码](~~202245~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回该参数，值为true。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'request parameter error',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'IoT.Common.NullParameter',
            'errorMessage' => 'Parameter cannot be empty.',
          ),
          1 => 
          array (
            'errorCode' => 'Studio.Project.FeatureNotSupport',
            'errorMessage' => 'The feature is not supported by the current account.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"Data\\": true,\\n  \\"ErrorMessage\\": \\"request parameter error\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SetStudioProjectCooperationResponse>\\n    <RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n    <Data>true</Data>\\n    <Success>true</Success>\\n</SetStudioProjectCooperationResponse>","errorExample":""}]',
      'title' => 'SetStudioProjectCooperation',
      'summary' => '调用该接口设置项目协作，即阿里云账号可以给不同的RAM用户授权不同的项目。',
      'description' => '## 限制说明
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~203277~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryStudioAppList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProjectId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID。
1. 您可登录[物联网应用开发控制台](https://studio.iot.aliyun.com/?spm=a2c4g.11186623.2.8.15b03118ooIo9y)，在页面左上角选择对应实例后，在左侧导航栏单击项目管理。
2. 在普通项目列表中，找到目标项目，单击项目卡片，在地址栏中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'a123********',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNo',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定返回结果中每页显示的产品数量，最大值是200。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
            'default' => '15',
          ),
        ),
        3 => 
        array (
          'name' => 'FuzzyName',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '应用名称。
- 支持中文、英文字母、数字、下划线（_）、短划线（-）和英文圆括号（()）。
- 必须以中文、英文字母或数字开头。
- 长度不超过30个字符（一个中文算一个字符）。',
            'type' => 'string',
            'required' => false,
            'example' => 'test1',
          ),
        ),
        4 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        5 => 
        array (
          'name' => 'Types',
          'in' => 'formData',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '应用类型列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => true,
            'example' => '["webApp", "mobileApp"]',
            'maxItems' => 9,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错误码详情，请参见[错误码](~~202245~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '应用列表详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNo' => 
                  array (
                    'description' => '指定从返回结果中的第几页开始显示。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TotalPage' => 
                  array (
                    'description' => '分页总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示的条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '20',
                  ),
                  'Total' => 
                  array (
                    'description' => '应用总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '200',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AppInfo' => 
                      array (
                        'description' => '应用列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Type' => 
                            array (
                              'description' => '应用类型。',
                              'type' => 'string',
                              'example' => 'webApp',
                            ),
                            'AppSecret' => 
                            array (
                              'description' => '应用密钥。',
                              'type' => 'string',
                              'example' => 'a605*******',
                            ),
                            'AppKey' => 
                            array (
                              'description' => '应用**AppKey**。',
                              'type' => 'string',
                              'example' => '322******',
                            ),
                            'Description' => 
                            array (
                              'description' => '应用描述。',
                              'type' => 'string',
                              'example' => 'This is a test.',
                            ),
                            'AppId' => 
                            array (
                              'description' => '应用ID。',
                              'type' => 'string',
                              'example' => 'a123********',
                            ),
                            'ProjectId' => 
                            array (
                              'description' => '应用所属项目ID。',
                              'type' => 'string',
                              'example' => 'a123********',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '应用的创建时间。',
                              'type' => 'string',
                              'example' => '2020-12-25 16:20:53',
                            ),
                            'GmtRelease' => 
                            array (
                              'description' => '应用的发布时间。',
                              'type' => 'string',
                              'example' => '2021-04-15 19:11:32',
                            ),
                            'GmtModified' => 
                            array (
                              'description' => '应用的修改时间。',
                              'type' => 'string',
                              'example' => '2021-04-10 15:06:23',
                            ),
                            'Name' => 
                            array (
                              'description' => '应用名称。',
                              'type' => 'string',
                              'example' => 'test1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'IoT.Common.NullParameter',
            'errorMessage' => 'Parameter cannot be empty.',
          ),
          1 => 
          array (
            'errorCode' => 'IoT.Common.ParamterError',
            'errorMessage' => 'The request parameter is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNo\\": 1,\\n    \\"TotalPage\\": 10,\\n    \\"PageSize\\": 20,\\n    \\"Total\\": 200,\\n    \\"List\\": {\\n      \\"AppInfo\\": [\\n        {\\n          \\"Type\\": \\"webApp\\",\\n          \\"AppSecret\\": \\"a605*******\\",\\n          \\"AppKey\\": \\"322******\\",\\n          \\"Description\\": \\"This is a test.\\",\\n          \\"AppId\\": \\"a123********\\",\\n          \\"ProjectId\\": \\"a123********\\",\\n          \\"GmtCreate\\": \\"2020-12-25 16:20:53\\",\\n          \\"GmtRelease\\": \\"2021-04-15 19:11:32\\",\\n          \\"GmtModified\\": \\"2021-04-10 15:06:23\\",\\n          \\"Name\\": \\"test1\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryStudioAppListResponse>\\n    <RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n    <Data>\\n        <TotalPage>10</TotalPage>\\n        <PageSize>20</PageSize>\\n        <Total>200</Total>\\n        <PageNo>1</PageNo>\\n        <List>\\n            <AppInfo>\\n                <GmtCreate>2020-12-25 16:20:53</GmtCreate>\\n                <Type>webApp</Type>\\n                <Description>This is a test.</Description>\\n                <AppId>a123********</AppId>\\n                <AppKey>322******</AppKey>\\n                <GmtModified>2021-04-10 15:06:23</GmtModified>\\n                <ProjectId>a123********</ProjectId>\\n                <GmtRelease>2021-04-15 19:11:32</GmtRelease>\\n                <AppSecret>a605*******</AppSecret>\\n                <Name>test1</Name>\\n            </AppInfo>\\n        </List>\\n    </Data>\\n    <Success>true</Success>\\n</QueryStudioAppListResponse>","errorExample":""}]',
      'title' => 'QueryStudioAppList',
      'summary' => '调用该接口获取应用列表。',
      'description' => '## 限制说明
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~203277~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryStudioAppPageListOpen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '应用ID。可调用[QueryStudioAppList](~~216816~~)查询。
',
            'type' => 'string',
            'required' => true,
            'example' => 'a12*******',
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        2 => 
        array (
          'name' => 'IsRelease',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '获取应用页面。
- **true**：获取已发布的应用页面。
- **false（默认）**：获取未发布的应用页面。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNo',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '指定从返回结果中的第几页开始显示。默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '返回结果中每页显示的条数。最小值1，最大值50，默认值20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
            'default' => '50',
          ),
        ),
        5 => 
        array (
          'name' => 'ProjectId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID。
1.您可登录[物联网应用开发控制台](https://account.aliyun.com/login/login.htm?qrCodeFirst=false&oauth_callback=https%3A%2F%2Fstudio.iot.aliyun.com%2F%3Fspm%3Da2c4g.11186623.2.8.1e7830fagdybMb)，在页面左上角选择对应实例后，在左侧导航栏单击项目管理。
2. 在普通项目列表中，找到目标项目，单击项目卡片，在地址栏中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'a12******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错误码详情，请参见[错误码](~~202245~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '应用页面列表信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNo' => 
                  array (
                    'description' => '指定从返回结果中的第几页开始显示。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TotalPage' => 
                  array (
                    'description' => '分页总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示的条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Total' => 
                  array (
                    'description' => '页面总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PageInfo' => 
                      array (
                        'description' => '应用页面列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'GmtCreate' => 
                            array (
                              'description' => '页面的创建时间。',
                              'type' => 'string',
                              'example' => '2020-12-25T16:21Z',
                            ),
                            'IsLoginPage' => 
                            array (
                              'description' => '表示页面是否为登录页。
- **0**：否。
- **1**：是。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'Path' => 
                            array (
                              'description' => '页面路径。',
                              'type' => 'string',
                              'example' => '/page/44920',
                            ),
                            'IsHidden' => 
                            array (
                              'description' => '表示页面是否隐藏。
- **0**：否。
- **1**：是。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'GmtModified' => 
                            array (
                              'description' => '页面的修改时间。',
                              'type' => 'string',
                              'example' => '2021-05-08T17:18Z',
                            ),
                            'Name' => 
                            array (
                              'description' => '页面名称。',
                              'type' => 'string',
                              'example' => 'test1',
                            ),
                            'PageId' => 
                            array (
                              'description' => '页面ID。',
                              'type' => 'string',
                              'example' => '44920',
                            ),
                            'IsHome' => 
                            array (
                              'description' => '表示页面是否为主页。
- **0**：否。
- **1**：是。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1',
                            ),
                            'Id' => 
                            array (
                              'description' => '标记每条记录的唯一标识。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '49739',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'IoT.Common.NullParameter',
            'errorMessage' => 'Parameter cannot be empty.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNo\\": 1,\\n    \\"TotalPage\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"Total\\": 1,\\n    \\"List\\": {\\n      \\"PageInfo\\": [\\n        {\\n          \\"GmtCreate\\": \\"2020-12-25T16:21Z\\",\\n          \\"IsLoginPage\\": 1,\\n          \\"Path\\": \\"/page/44920\\",\\n          \\"IsHidden\\": 1,\\n          \\"GmtModified\\": \\"2021-05-08T17:18Z\\",\\n          \\"Name\\": \\"test1\\",\\n          \\"PageId\\": \\"44920\\",\\n          \\"IsHome\\": 1,\\n          \\"Id\\": 49739\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<QueryStudioAppPageListOpenResponse>\\n    <RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n    <Data>\\n        <TotalPage>1</TotalPage>\\n        <PageSize>10</PageSize>\\n        <Total>10</Total>\\n        <PageNo>1</PageNo>\\n        <List>\\n            <PageInfo>\\n                <Path>/page/44920</Path>\\n                <PageId>44920</PageId>\\n                <IsHome>1</IsHome>\\n                <IsHidden>1</IsHidden>\\n                <GmtCreate>2020-12-25T16:21Z</GmtCreate>\\n                <IsLoginPage>1</IsLoginPage>\\n                <GmtModified>2021-05-08T17:18Z</GmtModified>\\n                <Id>49739</Id>\\n                <Name>test1</Name>\\n            </PageInfo>\\n        </List>\\n    </Data>\\n    <Success>true</Success>\\n</QueryStudioAppPageListOpenResponse>","errorExample":""}]',
      'title' => 'QueryStudioAppPageListOpen',
      'summary' => '调用该接口获取应用页面列表。',
      'description' => '## 限制说明
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~203277~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'QueryStudioAppDomainListOpen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProjectId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID。
1. 您可登录[物联网应用开发控制台](https://account.aliyun.com/login/login.htm?qrCodeFirst=false&oauth_callback=https%3A%2F%2Fstudio.iot.aliyun.com%2F%3Fspm%3Da2c4g.11186623.2.8.1e7830fagdybMb)，在页面左上角选择对应实例后，在左侧导航栏单击项目管理。
2. 在普通项目列表中，找到目标项目，单击项目卡片，在地址栏中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'a12******',
          ),
        ),
        1 => 
        array (
          'name' => 'AppId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '应用ID。可调用[QueryStudioAppList](~~216816~~)查询。
',
            'type' => 'string',
            'required' => true,
            'example' => 'a12******',
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错误码详情，请参见[错误码](~~202245~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '应用绑定域名列表信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNo' => 
                  array (
                    'description' => '指定从返回结果中的第几页开始显示。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TotalPage' => 
                  array (
                    'description' => '分页总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页显示的条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                  'Total' => 
                  array (
                    'description' => '域名总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'List' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'DomainInfo' => 
                      array (
                        'description' => '应用绑定域名列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Host' => 
                            array (
                              'description' => '域名。',
                              'type' => 'string',
                              'example' => 'example.com',
                            ),
                            'Protocol' => 
                            array (
                              'description' => '请求协议。',
                              'type' => 'string',
                              'example' => 'https',
                            ),
                            'AppId' => 
                            array (
                              'description' => '应用ID。',
                              'type' => 'string',
                              'example' => 'a12*******',
                            ),
                            'ProjectId' => 
                            array (
                              'description' => '项目ID。',
                              'type' => 'string',
                              'example' => 'a123********',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '应用绑定域名的时间。',
                              'type' => 'string',
                              'example' => '1619598445000',
                            ),
                            'IsBeian' => 
                            array (
                              'description' => '域名是否已备案。
- **YES**：是。
- **NO**：否。',
                              'type' => 'string',
                              'example' => 'YES',
                            ),
                            'GmtModified' => 
                            array (
                              'description' => '应用修改域名的时间。',
                              'type' => 'string',
                              'example' => '1619598445000',
                            ),
                            'Id' => 
                            array (
                              'description' => '域名ID。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1548',
                            ),
                            'TenantId' => 
                            array (
                              'description' => '租户ID。',
                              'type' => 'string',
                              'example' => 'C70B541046F64EAAB*********',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'IoT.Common.NullParameter',
            'errorMessage' => 'Parameter cannot be empty.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"PageNo\\": 1,\\n    \\"TotalPage\\": 1,\\n    \\"PageSize\\": 10,\\n    \\"Total\\": 1,\\n    \\"List\\": {\\n      \\"DomainInfo\\": [\\n        {\\n          \\"Host\\": \\"example.com\\",\\n          \\"Protocol\\": \\"https\\",\\n          \\"AppId\\": \\"a12*******\\",\\n          \\"ProjectId\\": \\"a123********\\",\\n          \\"GmtCreate\\": \\"1619598445000\\",\\n          \\"IsBeian\\": \\"YES\\",\\n          \\"GmtModified\\": \\"1619598445000\\",\\n          \\"Id\\": 1548,\\n          \\"TenantId\\": \\"C70B541046F64EAAB*********\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":" <QueryStudioAppDomainListOpenResponse>\\n    <RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n    <Data>\\n        <TotalPage>1</TotalPage>\\n        <PageSize>10</PageSize>\\n        <Total>1</Total>\\n        <PageNo>1</PageNo>\\n        <List>\\n            <DomainInfo>\\n                <GmtCreate>1619598445000</GmtCreate>\\n                <TenantId>C70B541046F64EAAB*********</TenantId>\\n                <AppId>a12*******</AppId>\\n                <GmtModified>1619598445000</GmtModified>\\n                <ProjectId>a123********</ProjectId>\\n                <Host>example.com</Host>\\n                <Id>1548</Id>\\n                <Protocol>https</Protocol>\\n                <IsBeian>YES</IsBeian>\\n            </DomainInfo>\\n        </List>\\n    </Data>\\n    <Success>true</Success>\\n</QueryStudioAppDomainListOpenResponse>","errorExample":""}]',
      'title' => 'QueryStudioAppDomainListOpen',
      'summary' => '调用该接口获取应用绑定域名列表。',
      'description' => '## 限制说明
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~203277~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteStudioAppDomainOpen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '应用ID。可调用[QueryStudioAppList](~~216816~~)查询。',
            'type' => 'string',
            'required' => true,
            'example' => 'a12******',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '域名ID。可调用[QueryStudioAppDomainListOpen](~~216814~~)查看。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'ProjectId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID。
1. 您可登录[物联网应用开发控制台](https://studio.iot.aliyun.com/?spm=a2c4g.11186623.2.8.15b03118ooIo9y)，在页面左上角选择对应实例后，在左侧导航栏单击项目管理。
2. 在普通项目列表中，找到目标项目，单击项目卡片，在地址栏中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'a123*******',
          ),
        ),
        3 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错误码详情，请参见[错误码](~~202245~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回该参数，值为true。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'Studio.App.NotExist',
            'errorMessage' => 'The application does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'Studio.App.Domain.DomainNotExist',
            'errorMessage' => 'The domain does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'Studio.App.Domain.DomainAuthFail',
            'errorMessage' => 'You are not authorized to manage the domain.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"Data\\": true,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteStudioAppDomainOpenResponse> \\n    <RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n    <Data>true</Data>\\n    <Success>true</Success>\\n</DeleteStudioAppDomainOpenResponse> ","errorExample":""}]',
      'title' => 'DeleteStudioAppDomainOpen',
      'summary' => '调用该接口删除应该绑定的域名。',
      'description' => '## 限制说明
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~203277~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateStudioAppDomainOpen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '应用ID。可调用[QueryStudioAppList](~~216816~~)查询。',
            'type' => 'string',
            'required' => true,
            'example' => 'a12*******',
          ),
        ),
        1 => 
        array (
          'name' => 'Host',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '域名。',
            'type' => 'string',
            'required' => true,
            'example' => 'www.aliyun.test.com',
          ),
        ),
        2 => 
        array (
          'name' => 'Protocol',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '请求协议。
- **https**
- **http**',
            'type' => 'string',
            'required' => true,
            'example' => 'https',
            'enum' => 
            array (
              0 => 'https',
              1 => 'http',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'ProjectId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID。
1. 您可登录[物联网应用开发控制台](https://account.aliyun.com/login/login.htm?qrCodeFirst=false&oauth_callback=https%3A%2F%2Fstudio.iot.aliyun.com%2F%3Fspm%3Da2c4g.11186623.2.8.1e7830fagdybMb)，在页面左上角选择对应实例后，在左侧导航栏单击项目管理。
2. 在普通项目列表中，找到目标项目，单击项目卡片，在地址栏中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'a123******',
          ),
        ),
        4 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错误码详情，请参见[错误码](~~202245~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- ** false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '应用添加域名的详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'Host' => 
                  array (
                    'description' => '域名。',
                    'type' => 'string',
                    'example' => 'www.aliyun.test.com',
                  ),
                  'Protocol' => 
                  array (
                    'description' => '请求协议。',
                    'type' => 'string',
                    'example' => 'https',
                  ),
                  'AppId' => 
                  array (
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'a12******',
                  ),
                  'ProjectId' => 
                  array (
                    'description' => '项目ID。',
                    'type' => 'string',
                    'example' => 'a12*******',
                  ),
                  'IsBeian' => 
                  array (
                    'description' => '域名是否已备案。
- **YES**：是。
- **NO**：否。',
                    'type' => 'string',
                    'example' => 'YES',
                  ),
                  'Id' => 
                  array (
                    'description' => '域名ID。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1573',
                  ),
                  'TenantId' => 
                  array (
                    'description' => '租户ID。',
                    'type' => 'string',
                    'example' => 'C70B541046F64EAABE3*******',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'Studio.App.Domain.DomainMaxNumLimit',
            'errorMessage' => 'The maximum number of domain is exceeded.',
          ),
          1 => 
          array (
            'errorCode' => 'Studio.App.Domain.DomainAlreadyExist',
            'errorMessage' => 'The domain already exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Host\\": \\"www.aliyun.test.com\\",\\n    \\"Protocol\\": \\"https\\",\\n    \\"AppId\\": \\"a12******\\",\\n    \\"ProjectId\\": \\"a12*******\\",\\n    \\"IsBeian\\": \\"YES\\",\\n    \\"Id\\": 1573,\\n    \\"TenantId\\": \\"C70B541046F64EAABE3*******\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateStudioAppDomainOpenResponse>    \\n    <RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n    <Data>\\n        <TenantId>C70B541046F64EAABE3*******</TenantId>\\n        <AppId>a12******</AppId>\\n        <ProjectId>a12*******</ProjectId>\\n        <Host>www.aliyun.test.com</Host>\\n        <Id>1573</Id>\\n        <Protocol>https</Protocol>\\n        <IsBeian>YES</IsBeian>\\n    </Data>\\n    <Success>true</Success>\\n</CreateStudioAppDomainOpenResponse>  ","errorExample":""}]',
      'title' => 'CreateStudioAppDomainOpen',
      'summary' => '调用该接口为应用添加域名。',
      'description' => '## 限制说明
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~203277~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetupStudioAppAuthModeOpen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'AppId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '应用ID。可调用[QueryStudioAppList](~~216816~~)查询。',
            'type' => 'string',
            'required' => true,
            'example' => 'a12*****',
          ),
        ),
        2 => 
        array (
          'name' => 'AuthMode',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '鉴权模式。取值：
- **0**：不鉴权。
- **1**：Token。
- **2**：账号。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
            'enum' => 
            array (
              0 => '0',
              1 => '1',
              2 => '2',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'ProjectId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID。
1. 您可登录[物联网应用开发控制台](https://account.aliyun.com/login/login.htm?qrCodeFirst=false&oauth_callback=https%3A%2F%2Fstudio.iot.aliyun.com%2F%3Fspm%3Da2c4g.11186623.2.8.1e7830fagdybMb)，在页面左上角选择对应实例后，在左侧导航栏单击项目管理。
2. 在普通项目列表中，找到目标项目，单击项目卡片，在地址栏中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'a123********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错误码详情，请参见[错误码](~~202245~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => '应用数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'AuthMode' => 
                  array (
                    'description' => '鉴权模式。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'TokenInfo' => 
                  array (
                    'description' => 'Token信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Type' => 
                      array (
                        'description' => 'Token类型。',
                        'type' => 'string',
                        'example' => 'custom',
                      ),
                      'IsEnable' => 
                      array (
                        'description' => '是否启用Token。
- **YES**：是。
- **NO**：否。',
                        'type' => 'string',
                        'example' => 'YES',
                      ),
                      'BizId' => 
                      array (
                        'description' => '应用ID。',
                        'type' => 'string',
                        'example' => 'a12********',
                      ),
                      'Token' => 
                      array (
                        'description' => 'Token值。',
                        'type' => 'string',
                        'example' => '25bf576a6c6f**********',
                      ),
                      'BizType' => 
                      array (
                        'description' => '应用类型。',
                        'type' => 'string',
                        'example' => 'webApp',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"AuthMode\\": 1,\\n    \\"TokenInfo\\": {\\n      \\"Type\\": \\"custom\\",\\n      \\"IsEnable\\": \\"YES\\",\\n      \\"BizId\\": \\"a12********\\",\\n      \\"Token\\": \\"25bf576a6c6f**********\\",\\n      \\"BizType\\": \\"webApp\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":" <SetupStudioAppAuthModeOpenResponse>   \\n    <RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n    <Data>\\n        <AuthMode>1</AuthMode>\\n        <TokenInfo>\\n            <IsEnable>YES</IsEnable>\\n            <Type>custom</Type>\\n            <Token>25bf576a6c6f**********</Token>\\n            <BizType>webApp</BizType>\\n            <BizId>a12********</BizId>\\n        </TokenInfo>\\n    </Data>\\n    <Success>true</Success>\\n</SetupStudioAppAuthModeOpenResponse>","errorExample":""}]',
      'title' => 'SetupStudioAppAuthModeOpen',
      'summary' => '调用该接口设置应用鉴权模式。',
      'description' => '## 限制说明
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~203277~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetStudioAppTokenOpen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'AppId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '应用ID。可调用[QueryStudioAppList](~~216816~~)查询。',
            'type' => 'string',
            'required' => true,
            'example' => 'a12******',
          ),
        ),
        2 => 
        array (
          'name' => 'ProjectId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID。
1. 您可登录[物联网应用开发控制台](https://account.aliyun.com/login/login.htm?qrCodeFirst=false&oauth_callback=https%3A%2F%2Fstudio.iot.aliyun.com%2F%3Fspm%3Da2c4g.11186623.2.8.1e7830fagdybMb)，在页面左上角选择对应实例后，在左侧导航栏单击项目管理。
2. 在普通项目列表中，找到目标项目，单击项目卡片，在地址栏中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'a123*******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错误码详情，请参见[错误码](~~202245~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => 'Token数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => 'Token类型。',
                    'type' => 'string',
                    'example' => 'custom',
                  ),
                  'IsEnable' => 
                  array (
                    'description' => '是否启用Token。
- **YES**：是。
- **NO**：否。',
                    'type' => 'string',
                    'example' => 'YES',
                  ),
                  'BizId' => 
                  array (
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'a12*******',
                  ),
                  'Token' => 
                  array (
                    'description' => 'Token值。',
                    'type' => 'string',
                    'example' => '25bf576a6c*******',
                  ),
                  'BizType' => 
                  array (
                    'description' => '应用类型。',
                    'type' => 'string',
                    'example' => 'webApp',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'IoT.Common.NullParameter',
            'errorMessage' => 'Parameter cannot be empty.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Type\\": \\"custom\\",\\n    \\"IsEnable\\": \\"YES\\",\\n    \\"BizId\\": \\"a12*******\\",\\n    \\"Token\\": \\"25bf576a6c*******\\",\\n    \\"BizType\\": \\"webApp\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetStudioAppTokenOpenResponse>     \\n    <RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n    <Data>\\n        <IsEnable>YES</IsEnable>\\n        <Type>custom</Type>\\n        <Token>25bf576a6c*******</Token>\\n        <BizType>webApp</BizType>\\n        <BizId>a12*******</BizId>\\n    </Data>\\n    <Success>true</Success>\\n</GetStudioAppTokenOpenResponse> ","errorExample":""}]',
      'title' => 'GetStudioAppTokenOpen',
      'summary' => '调用该接口查询应用鉴权Token。',
      'description' => '## 限制说明
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~203277~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RefreshStudioAppTokenOpen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'AppId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '应用ID。可调用[QueryStudioAppList](~~216816~~)查询。',
            'type' => 'string',
            'required' => true,
            'example' => 'a12******',
          ),
        ),
        2 => 
        array (
          'name' => 'ProjectId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID。
1. 您可登录[物联网应用开发控制台](https://account.aliyun.com/login/login.htm?qrCodeFirst=false&oauth_callback=https%3A%2F%2Fstudio.iot.aliyun.com%2F%3Fspm%3Da2c4g.11186623.2.8.1e7830fagdybMb)，在页面左上角选择对应实例后，在左侧导航栏单击项目管理。
2. 在普通项目列表中，找到目标项目，单击项目卡片，在地址栏中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'a123*******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错误码详情，请参见[错误码](~~202245~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Data' => 
              array (
                'description' => 'Token数据。',
                'type' => 'object',
                'properties' => 
                array (
                  'Type' => 
                  array (
                    'description' => 'Token类型。',
                    'type' => 'string',
                    'example' => 'custom',
                  ),
                  'IsEnable' => 
                  array (
                    'description' => '是否启用Token。
- **YES**：是。
- **NO**：否。',
                    'type' => 'string',
                    'example' => 'YES',
                  ),
                  'BizId' => 
                  array (
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => 'a12*******',
                  ),
                  'Token' => 
                  array (
                    'description' => 'Token值。',
                    'type' => 'string',
                    'example' => 'cf245ddebd******',
                  ),
                  'BizType' => 
                  array (
                    'description' => '应用类型。',
                    'type' => 'string',
                    'example' => 'webApp',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        200 => 
        array (
          0 => 
          array (
            'errorCode' => 'Studio.App.Token.AppHaveNoToken',
            'errorMessage' => 'The application does not have any token.',
          ),
          1 => 
          array (
            'errorCode' => 'Studio.App.Token.AppTokenNotActive',
            'errorMessage' => 'The application token is not active.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true,\\n  \\"Data\\": {\\n    \\"Type\\": \\"custom\\",\\n    \\"IsEnable\\": \\"YES\\",\\n    \\"BizId\\": \\"a12*******\\",\\n    \\"Token\\": \\"cf245ddebd******\\",\\n    \\"BizType\\": \\"webApp\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RefreshStudioAppTokenOpenResponse>     \\n    <RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n    <Data>\\n        <IsEnable>YES</IsEnable>\\n        <Type>custom</Type>\\n        <Token>cf245ddebd******</Token>\\n        <BizType>webApp</BizType>\\n        <BizId>a12*******</BizId>\\n    </Data>\\n    <Success>true</Success>\\n</RefreshStudioAppTokenOpenResponse>  ","errorExample":""}]',
      'title' => 'RefreshStudioAppTokenOpen',
      'summary' => '调用该接口刷新应用鉴权Token。',
      'description' => '## 限制说明
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为5。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => ' 调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~203277~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PublishStudioApp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。

<props="china">您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。若有ID值，必须传入该ID值，否则调用会失败。</props>

<props="china">
> 如果公共实例没有ID值，请参见[如何获取实例ID](~~267533~~)。</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'iot_instc_pu****_c*-v64********',
          ),
        ),
        1 => 
        array (
          'name' => 'AppId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '应用ID。可调用[QueryStudioAppList](~~216816~~)查询。',
            'type' => 'string',
            'required' => true,
            'example' => 'a12*******',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '应用发布描述。',
            'type' => 'string',
            'required' => false,
            'example' => '第一次发布',
          ),
        ),
        3 => 
        array (
          'name' => 'ProjectId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '项目ID。
1. 您可登录[物联网应用开发控制台](https://account.aliyun.com/login/login.htm?qrCodeFirst=false&oauth_callback=https%3A%2F%2Fstudio.iot.aliyun.com%2F%3Fspm%3Da2c4g.11186623.2.8.1e7830fagdybMb)，在页面左上角选择对应实例后，在左侧导航栏单击项目管理。
2. 在普通项目列表中，找到目标项目，单击项目卡片，在地址栏中查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'a123******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用失败时，返回的错误码。错误码详情，请参见[错误码](~~202245~~)。',
                'type' => 'string',
                'example' => 'iot.system.SystemException',
              ),
              'Data' => 
              array (
                'description' => '调用成功时，返回该参数，值为true。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => '系统异常',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"iot.system.SystemException\\",\\n  \\"Data\\": true,\\n  \\"ErrorMessage\\": \\"系统异常\\",\\n  \\"RequestId\\": \\"E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PublishStudioAppResponse>     \\n    <RequestId>E55E50B7-40EE-4B6B-8BBE-D3ED55CCF565</RequestId>\\n    <Data>true</Data>\\n    <Success>true</Success>\\n</PublishStudioAppResponse>   ","errorExample":""}]',
      'title' => 'PublishStudioApp',
      'summary' => '调用该接口发布应用。',
      'description' => '## 限制说明
单阿里云账号调用该接口的每秒请求数（QPS）最大限制为1。
> RAM用户共享阿里云账号配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~203277~~)。 ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TestSwitch' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'ErrorMessage' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
              'IotId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.check.InvalidFormattedParameter',
            'errorMessage' => 'The parameter format is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.prod.NullProductKey',
            'errorMessage' => 'The ProductKey parameter cannot be empty.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.device.NullDeviceName',
            'errorMessage' => 'The DeviceName parameter cannot be empty.',
          ),
        ),
      ),
    ),
    'CreateTopicConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'EnableBroadcast',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'EnableProxySubscribe',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'boolean',
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'Codec',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        6 => 
        array (
          'name' => 'Operation',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        7 => 
        array (
          'name' => 'TopicFullName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.message.broker.ParamCheckError',
            'errorMessage' => 'Param check error.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.message.broker.ProductCheckError',
            'errorMessage' => 'Product check error.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.message.broker.SystemError',
            'errorMessage' => 'System error.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidPubTopicFormat',
            'errorMessage' => 'The pub topic cannot contain wildcard character.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidOperationWithBroadcast',
            'errorMessage' => 'The operation must be sub when enable broadcast.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidTopicWithBroadcast',
            'errorMessage' => 'The topic cannot contain wildcard character when enable broadcast.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidOperationWithProxySubscribe',
            'errorMessage' => 'Operation must be sub or all when enable proxy subscribe.',
          ),
          7 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidTopicWithProxySubscribe',
            'errorMessage' => 'Topic cannot contain wildcard character when enable proxy subscribe.',
          ),
          8 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidTopicWithCodec',
            'errorMessage' => 'Topic cannot contain wildcard when enable codec.',
          ),
          9 => 
          array (
            'errorCode' => 'iot.messagebroker.InvalidInstanceWithCodec',
            'errorMessage' => 'Only connect instance support codec.',
          ),
        ),
      ),
    ),
    'DeleteTopicConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'TopicFullName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.message.broker.ParamCheckError',
            'errorMessage' => 'Param check error.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.message.broker.ProductCheckError',
            'errorMessage' => 'Product check error.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.message.broker.SystemError',
            'errorMessage' => 'System error.',
          ),
        ),
      ),
    ),
    'QueryTopicConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TopicConfigInfo' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TopicFullName' => 
                        array (
                          'type' => 'string',
                        ),
                        'Operation' => 
                        array (
                          'type' => 'string',
                        ),
                        'ProductKey' => 
                        array (
                          'type' => 'string',
                        ),
                        'Description' => 
                        array (
                          'type' => 'string',
                        ),
                        'Codec' => 
                        array (
                          'type' => 'string',
                        ),
                        'EnableBroadcast' => 
                        array (
                          'type' => 'boolean',
                        ),
                        'EnableProxySubscribe' => 
                        array (
                          'type' => 'boolean',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.message.broker.ParamCheckError',
            'errorMessage' => 'Param check error.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.message.broker.ProductCheckError',
            'errorMessage' => 'Product check error.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.message.broker.SystemError',
            'errorMessage' => 'System error.',
          ),
        ),
      ),
    ),
    'DeleteUserDefineTableDataByPrimaryKey' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'TableIdentifier',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'Conditions',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'type' => 'object',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'ErrorMessage' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.unknownException',
            'errorMessage' => 'unknown exception.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.dap.insight.requestParamError',
            'errorMessage' => 'request param error.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.dap.insight.dataStoreTableHasNotBeenInit',
            'errorMessage' => 'data store table has not been init.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.dap.insight.mustSetAtLeastOnePrimaryKey',
            'errorMessage' => 'Set at least one primary key.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.bizExceptionNotSpecified',
            'errorMessage' => 'biz exception not specified.',
          ),
        ),
      ),
    ),
    'AddPowerStation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'AlgorithmInstanceUid',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'PowerStationName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'RatedPower',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Data' => 
              array (
                'type' => 'string',
              ),
              'ErrorMessage' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.unknownException',
            'errorMessage' => 'unknown exception.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.dap.insight.requestParamError',
            'errorMessage' => 'request param error.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.dap.insight.exceedSubscribeNumber',
            'errorMessage' => 'Exceed subscribe number.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.bizExceptionNotSpecified',
            'errorMessage' => 'biz exception not specified.',
          ),
        ),
      ),
    ),
    'DeletePowerStation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'AlgorithmInstanceUid',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'PowerStationUid',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Data' => 
              array (
                'type' => 'string',
              ),
              'ErrorMessage' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.unknownException',
            'errorMessage' => 'unknown exception.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.dap.insight.requestParamError',
            'errorMessage' => 'request param error.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.bizExceptionNotSpecified',
            'errorMessage' => 'biz exception not specified.',
          ),
        ),
      ),
    ),
    'ListPowerStation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'AlgorithmInstanceUid',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'PowerStationName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'PageNo',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '999999999999',
            'minimum' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '100',
            'minimum' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'ErrorMessage' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PageNo' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'PageSize' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'Total' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'DataList' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'PowerStationUid' => 
                        array (
                          'type' => 'string',
                        ),
                        'RatedPower' => 
                        array (
                          'type' => 'integer',
                          'format' => 'int32',
                        ),
                        'AlgoInstanceUid' => 
                        array (
                          'type' => 'string',
                        ),
                        'Description' => 
                        array (
                          'type' => 'string',
                        ),
                        'Name' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.unknownException',
            'errorMessage' => 'unknown exception.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.dap.insight.requestParamError',
            'errorMessage' => 'request param error.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.bizExceptionNotSpecified',
            'errorMessage' => 'biz exception not specified.',
          ),
        ),
      ),
    ),
    'ModifyPowerStation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'AlgorithmInstanceUid',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'PowerStationUid',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'PowerStationName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'RatedPower',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Data' => 
              array (
                'type' => 'string',
              ),
              'ErrorMessage' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.unknownException',
            'errorMessage' => 'unknown exception.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.dap.insight.requestParamError',
            'errorMessage' => 'request param error.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.bizExceptionNotSpecified',
            'errorMessage' => 'biz exception not specified.',
          ),
        ),
      ),
    ),
    'StartPTDetection' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'PowerStationUid',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'FileName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'PowerPlantsNumber',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'Data',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        5 => 
        array (
          'name' => 'DataCollectionTime',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
          ),
        ),
        6 => 
        array (
          'name' => 'AlgorithmInstanceUid',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        7 => 
        array (
          'name' => 'Sensitivity',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'ErrorMessage' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'type' => 'string',
                  ),
                  'InputData' => 
                  array (
                    'type' => 'string',
                  ),
                  'Data' => 
                  array (
                    'type' => 'string',
                  ),
                  'ErrMsg' => 
                  array (
                    'type' => 'string',
                  ),
                  'Success' => 
                  array (
                    'type' => 'boolean',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.unknownException',
            'errorMessage' => 'unknown exception.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.dap.insight.requestParamError',
            'errorMessage' => 'request param error.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.dap.insight.datetimeNotMatch',
            'errorMessage' => 'The acquisition time does not match the data time.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.dap.insight.needDetectionData',
            'errorMessage' => 'Detection data is required.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.dap.insight.parsedDataError',
            'errorMessage' => 'Failed to parse data.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.dap.insight.frozen',
            'errorMessage' => 'The algorithm instance has been frozen. please renew.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.bizExceptionNotSpecified',
            'errorMessage' => 'biz exception not specified.',
          ),
        ),
      ),
    ),
    'UpdateOTAJob' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MaximumPerMinute',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '10000',
            'minimum' => '10',
          ),
        ),
        1 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'UpgradeType',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'TimeoutInMinutes',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'TargetSelection',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        5 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        6 => 
        array (
          'name' => 'SrcVersionList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'maxItems' => 30,
          ),
        ),
        7 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'type' => 'string',
                  'required' => true,
                ),
                'Value' => 
                array (
                  'type' => 'string',
                  'required' => true,
                ),
              ),
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'ErrorMessage' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.ota.FirmwareNotFound',
            'errorMessage' => 'The specified firmware does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.ota.StrategyNotFound',
            'errorMessage' => 'The specified strategy does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.ota.noDynamicJob',
            'errorMessage' => 'Task is not dynamic.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.ota.InvalidBaseSpeedPerMinute',
            'errorMessage' => 'Invalid baseSpeedPerMinute.',
          ),
          4 => 
          array (
            'errorCode' => 'iot.ota.InvalidIncrementFactor',
            'errorMessage' => 'Invalid incrementFactor.',
          ),
          5 => 
          array (
            'errorCode' => 'iot.ota.InvalidExponentialRateParameter',
            'errorMessage' => 'Invalid exponential rate parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'iot.ota.InvalidMaximumPerMinute',
            'errorMessage' => 'Invalid MaximumPerMinute.',
          ),
          7 => 
          array (
            'errorCode' => 'iot.ota.InvalidUpgradeType',
            'errorMessage' => 'Invalid upgrade type.',
          ),
          8 => 
          array (
            'errorCode' => 'iot.ota.OperationForbidden',
            'errorMessage' => 'This operation is forbidden by the tenantId.',
          ),
          9 => 
          array (
            'errorCode' => 'iot.ota.InvalidTimeout',
            'errorMessage' => 'Parameter TimeoutInMinutes is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'iot.ota.InvalidStrategyType',
            'errorMessage' => 'Invalid strategy type.',
          ),
          11 => 
          array (
            'errorCode' => 'iot.ota.JobHasFinished',
            'errorMessage' => 'The job has finished.',
          ),
          12 => 
          array (
            'errorCode' => 'iot.ota.JobHasCanceled',
            'errorMessage' => 'The job has canceled.',
          ),
          13 => 
          array (
            'errorCode' => 'iot.ota.taskNotExist',
            'errorMessage' => 'Task is not existed.',
          ),
          14 => 
          array (
            'errorCode' => 'iot.ota.JobTagIsTooLong',
            'errorMessage' => 'The tags of job exceed the maximum number of characters.',
          ),
          15 => 
          array (
            'errorCode' => 'iot.ota.InstanceIdMisMatch',
            'errorMessage' => 'The instanceId is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'iot.ota.InvalidBaseRatePerMinute',
            'errorMessage' => 'Parameter BaseRatePerMinute is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'iot.ota.InvalidSrcVersionList',
            'errorMessage' => 'Parameter SrcVersionList does not support by group upgrade.',
          ),
          18 => 
          array (
            'errorCode' => 'iot.ota.EmptySrcVersionList',
            'errorMessage' => 'Parameter SrcVersionList is empty.',
          ),
          19 => 
          array (
            'errorCode' => 'iot.ota.InvalidConstantSpeedParameter',
            'errorMessage' => 'The parameter of constant speed is invalid.',
          ),
          20 => 
          array (
            'errorCode' => 'iot.ota.EmptyNumberOfNotifiedDevicesAndNumberOfSucceedDevices',
            'errorMessage' => 'Both of NumberOfNotifiedDevices and  NumberOfSucceedDevices are empty.',
          ),
          21 => 
          array (
            'errorCode' => 'iot.ota.InvalidNumberOfNotifiedDevicesOrNumberOfSucceedDevices',
            'errorMessage' => 'One of NumberOfNotifiedDevices and NumberOfSucceedDevices is invalid.',
          ),
        ),
      ),
    ),
    'QueryCustomTimelineTableStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'TableName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'ErrorMessage' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ResultJson' => 
                  array (
                    'type' => 'string',
                  ),
                  'PageNum' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'PageSize' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'Count' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'HasNext' => 
                  array (
                    'type' => 'boolean',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'iot.dap.insight.noAuthorization',
            'errorMessage' => 'no authorization.',
          ),
          1 => 
          array (
            'errorCode' => 'iot.dap.insight.requestParamError',
            'errorMessage' => 'request param error.',
          ),
          2 => 
          array (
            'errorCode' => 'iot.dap.insight.unknownException',
            'errorMessage' => 'System error. Please submit a ticket.',
          ),
        ),
      ),
    ),
    'CopyThingModelAsync' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TargetProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'SourceModelVersion',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'SourceProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'ErrorMessage' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Request.param.error',
            'errorMessage' => 'Request.param.error. %s.',
          ),
          1 => 
          array (
            'errorCode' => 'Product.Key.Invalid',
            'errorMessage' => 'Product key is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Product.not.found',
            'errorMessage' => 'Product.not.found.',
          ),
          3 => 
          array (
            'errorCode' => 'Distribute.thing.module.no.edit',
            'errorMessage' => 'Distribute.thing.module.no.edit.',
          ),
          4 => 
          array (
            'errorCode' => 'Thing.Model.Get.Lock.Failed',
            'errorMessage' => 'The thing model get lock failed. Please try again later.',
          ),
          5 => 
          array (
            'errorCode' => 'Product.authright.illegal',
            'errorMessage' => 'Product authRight illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'Thing.model.not.found',
            'errorMessage' => 'The thing model is not existed.',
          ),
          7 => 
          array (
            'errorCode' => 'Server.error',
            'errorMessage' => 'Server error.',
          ),
          8 => 
          array (
            'errorCode' => 'Thing.Model.Status.Not.Final',
            'errorMessage' => 'The thing model may be importing or copying or publishing. Please wait for the final status.',
          ),
          9 => 
          array (
            'errorCode' => 'Product.has.published',
            'errorMessage' => 'Product has published.',
          ),
          10 => 
          array (
            'errorCode' => 'Category.not.same',
            'errorMessage' => 'Category must be the same.',
          ),
        ),
      ),
    ),
    'GetThingModelStatusInner' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InsId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'LocalizedMsg' => 
              array (
                'type' => 'string',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RbacTenantId' => 
                  array (
                    'type' => 'string',
                  ),
                  'Status' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int32',
                  ),
                  'ProductKey' => 
                  array (
                    'type' => 'string',
                  ),
                  'ModifiedTime' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'OutTime' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'InstanceId' => 
                  array (
                    'type' => 'string',
                  ),
                  'Info' => 
                  array (
                    'type' => 'string',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Request.param.error',
            'errorMessage' => 'Request.param.error. %d.',
          ),
          1 => 
          array (
            'errorCode' => 'Product.not.found',
            'errorMessage' => 'Product.not.found.',
          ),
          2 => 
          array (
            'errorCode' => 'Product.Key.Invalid',
            'errorMessage' => 'Product key is invalid.',
          ),
        ),
      ),
    ),
    'PublishThingModelAsync' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'ThingModelVersion',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'ErrorMessage' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Product.Key.Invalid',
            'errorMessage' => 'Product key is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Product.not.found',
            'errorMessage' => 'Product.not.found.',
          ),
          2 => 
          array (
            'errorCode' => 'Distribute.thing.module.no.edit',
            'errorMessage' => 'Distribute.thing.module.no.edit.',
          ),
          3 => 
          array (
            'errorCode' => 'Thing.Model.Get.Lock.Failed',
            'errorMessage' => 'The thing model get lock failed. Please try again later.',
          ),
          4 => 
          array (
            'errorCode' => 'Server.error',
            'errorMessage' => 'Server error.',
          ),
          5 => 
          array (
            'errorCode' => 'Request.param.error',
            'errorMessage' => 'Request.param.error. %s.',
          ),
          6 => 
          array (
            'errorCode' => 'Thing.Model.Version.Invalid',
            'errorMessage' => 'The thing model version is not valid.',
          ),
          7 => 
          array (
            'errorCode' => 'Thing.Model.Status.Not.Final',
            'errorMessage' => 'The thing model may be importing or copying or publishing. Please wait for the final status.',
          ),
          8 => 
          array (
            'errorCode' => 'Product.has.published',
            'errorMessage' => 'Product has published.',
          ),
        ),
      ),
    ),
    'PublishThingModelAsyncInner' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InsId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'LocalizedMsg' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Request.param.error',
            'errorMessage' => 'Request.param.error. %d.',
          ),
          1 => 
          array (
            'errorCode' => 'Product.Key.Invalid',
            'errorMessage' => 'Product key is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Product.not.found',
            'errorMessage' => 'Product.not.found.',
          ),
          3 => 
          array (
            'errorCode' => 'Product.has.published',
            'errorMessage' => 'Product has published.',
          ),
          4 => 
          array (
            'errorCode' => 'Thing.Model.Version.Invalid',
            'errorMessage' => 'The thing model version is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'Thing.Model.Get.Lock.Failed',
            'errorMessage' => 'The thing model get lock failed. Please try again later.',
          ),
        ),
      ),
    ),
    'UnsubscribeTopic' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IotInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可在物联网平台控制台的**实例概览**页签，查看当前实例的ID。

><notice>
- 若有ID值，必须传入该**ID**值，否则调用会失败。
- 若无ID值，则无需传入。

></notice>

实例的更多信息，请参见[实例概述](~~356505~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'iot-cn-n6w1y59****',
          ),
        ),
        1 => 
        array (
          'name' => 'ProductKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备所属产品的**ProductKey**。',
            'type' => 'string',
            'required' => true,
            'example' => 'a1BwAGV****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeviceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备的名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'device1',
          ),
        ),
        3 => 
        array (
          'name' => 'Topic',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要取消订阅的Topic列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => true,
            'example' => '/a1BwAGV****/device1/user/get',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '调用结果状态码：
- 调用成功，返回空值。
- 调用失败，返回错误码。详细信息，请参见下文**错误码**。',
                'type' => 'string',
                'example' => '400',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'The unsub topic list is empty.',
              ),
              'RequestId' => 
              array (
                'description' => '阿里云为该请求生成的唯一标识符。',
                'type' => 'string',
                'example' => 'E55***B7-4***-4***-8***-D3******F565',
              ),
              'Success' => 
              array (
                'description' => '表示是否调用成功。
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'FailureTopics' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'topic' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '取消订阅失败的Topic列表。',
                      'type' => 'object',
                      'example' => '/a1BwAGV****/device1/user/get',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Iot.System.BillIsOverDue',
            'errorMessage' => 'Your account has overdue payments. Go to the expense center and add funds to your account.',
          ),
          1 => 
          array (
            'errorCode' => 'Iot.MessageBroker.EmptyUnSubTopicList',
            'errorMessage' => 'The unsub topic list is empty.',
          ),
          2 => 
          array (
            'errorCode' => 'Iot.MessageBroker.InvalidFormattedTopicName',
            'errorMessage' => 'The topic format specified while publishing the message is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'iot.prod.NotExistedProduct',
            'errorMessage' => 'The specified product does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'Iot.Device.NotExistedDevice',
            'errorMessage' => 'The device does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Iot.Device.NotDeviceOwner',
            'errorMessage' => 'You are not the device owner.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"400\\",\\n  \\"ErrorMessage\\": \\"The unsub topic list is empty.\\",\\n  \\"RequestId\\": \\"E55***B7-4***-4***-8***-D3******F565\\",\\n  \\"Success\\": true,\\n  \\"FailureTopics\\": {\\n    \\"topic\\": [\\n      \\"/a1BwAGV****/device1/user/get\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<UnsubscribeTopicResponse>\\n<RequestId>E55***B7-4***-4***-8***-D3******F565</RequestId>\\n<FailureTopics>\\n    <topic>/a1BwAGV****/device1/user/get</topic>\\n</FailureTopics>\\n<Code/>\\n<Success>true</Success>\\n</UnsubscribeTopicResponse>","errorExample":""}]',
      'title' => 'UnsubscribeTopic',
      'summary' => '调用接口UnsubscribeTopic为指定设备取消已订阅的指定Topic。',
      'description' => '## QPS限制

单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为50。

> 单个阿里云账号下的所有RAM用户共享该阿里云账号的配额。',
      'requestParamsDescription' => '调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数](~~87387~~)文档。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-beijing',
      'endpoint' => 'iot.cn-beijing.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'iot.cn-shanghai.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'cn-shenzhen',
      'endpoint' => 'iot.cn-shenzhen.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'ap-northeast-1',
      'endpoint' => 'iot.ap-northeast-1.aliyuncs.com',
    ),
    4 => 
    array (
      'regionId' => 'ap-southeast-1',
      'endpoint' => 'iot.ap-southeast-1.aliyuncs.com',
    ),
    5 => 
    array (
      'regionId' => 'us-east-1',
      'endpoint' => 'iot.us-east-1.aliyuncs.com',
    ),
    6 => 
    array (
      'regionId' => 'us-west-1',
      'endpoint' => 'iot.us-west-1.aliyuncs.com',
    ),
    7 => 
    array (
      'regionId' => 'eu-central-1',
      'endpoint' => 'iot.eu-central-1.aliyuncs.com',
    ),
  ),
);