<?php

declare(strict_types=1);

namespace Dew\Acs\ExpressConnectRouter;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result describeExpressConnectRouterRegion(array $arguments = [])
 * @method \Http\Promise\Promise describeExpressConnectRouterRegionAsync($arguments = [])
 * @method \Dew\Acs\Result listExpressConnectRouterSupportedRegion(array $arguments = [])
 * @method \Http\Promise\Promise listExpressConnectRouterSupportedRegionAsync($arguments = [])
 * @method \Dew\Acs\Result synchronizeExpressConnectRouterInterRegionBandwidth(array $arguments = [])
 * @method \Http\Promise\Promise synchronizeExpressConnectRouterInterRegionBandwidthAsync($arguments = [])
 * @method \Dew\Acs\Result checkAddRegionToExpressConnectRouter(array $arguments = [])
 * @method \Http\Promise\Promise checkAddRegionToExpressConnectRouterAsync($arguments = [])
 * @method \Dew\Acs\Result modifyExpressConnectRouterChildInstance(array $arguments = [])
 * @method \Http\Promise\Promise modifyExpressConnectRouterChildInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result modifyExpressConnectRouterAssociation(array $arguments = [])
 * @method \Http\Promise\Promise modifyExpressConnectRouterAssociationAsync($arguments = [])
 * @method \Dew\Acs\Result attachExpressConnectRouterChildInstance(array $arguments = [])
 * @method \Http\Promise\Promise attachExpressConnectRouterChildInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result detachExpressConnectRouterChildInstance(array $arguments = [])
 * @method \Http\Promise\Promise detachExpressConnectRouterChildInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result describeExpressConnectRouterChildInstance(array $arguments = [])
 * @method \Http\Promise\Promise describeExpressConnectRouterChildInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceGrantedToExpressConnectRouter(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceGrantedToExpressConnectRouterAsync($arguments = [])
 * @method \Dew\Acs\Result revokeInstanceFromExpressConnectRouter(array $arguments = [])
 * @method \Http\Promise\Promise revokeInstanceFromExpressConnectRouterAsync($arguments = [])
 * @method \Dew\Acs\Result grantInstanceToExpressConnectRouter(array $arguments = [])
 * @method \Http\Promise\Promise grantInstanceToExpressConnectRouterAsync($arguments = [])
 * @method \Dew\Acs\Result createExpressConnectRouterAssociation(array $arguments = [])
 * @method \Http\Promise\Promise createExpressConnectRouterAssociationAsync($arguments = [])
 * @method \Dew\Acs\Result deleteExpressConnectRouterAssociation(array $arguments = [])
 * @method \Http\Promise\Promise deleteExpressConnectRouterAssociationAsync($arguments = [])
 * @method \Dew\Acs\Result describeExpressConnectRouterAssociation(array $arguments = [])
 * @method \Http\Promise\Promise describeExpressConnectRouterAssociationAsync($arguments = [])
 * @method \Dew\Acs\Result disableExpressConnectRouterRouteEntries(array $arguments = [])
 * @method \Http\Promise\Promise disableExpressConnectRouterRouteEntriesAsync($arguments = [])
 * @method \Dew\Acs\Result enableExpressConnectRouterRouteEntries(array $arguments = [])
 * @method \Http\Promise\Promise enableExpressConnectRouterRouteEntriesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDisabledExpressConnectRouterRouteEntries(array $arguments = [])
 * @method \Http\Promise\Promise describeDisabledExpressConnectRouterRouteEntriesAsync($arguments = [])
 * @method \Dew\Acs\Result describeExpressConnectRouterRouteEntries(array $arguments = [])
 * @method \Http\Promise\Promise describeExpressConnectRouterRouteEntriesAsync($arguments = [])
 * @method \Dew\Acs\Result moveResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise moveResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listTagResources(array $arguments = [])
 * @method \Http\Promise\Promise listTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result untagResources(array $arguments = [])
 * @method \Http\Promise\Promise untagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result createExpressConnectRouter(array $arguments = [])
 * @method \Http\Promise\Promise createExpressConnectRouterAsync($arguments = [])
 * @method \Dew\Acs\Result deleteExpressConnectRouter(array $arguments = [])
 * @method \Http\Promise\Promise deleteExpressConnectRouterAsync($arguments = [])
 * @method \Dew\Acs\Result modifyExpressConnectRouterInterRegionTransitMode(array $arguments = [])
 * @method \Http\Promise\Promise modifyExpressConnectRouterInterRegionTransitModeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyExpressConnectRouterAssociationAllowedPrefix(array $arguments = [])
 * @method \Http\Promise\Promise modifyExpressConnectRouterAssociationAllowedPrefixAsync($arguments = [])
 * @method \Dew\Acs\Result modifyExpressConnectRouter(array $arguments = [])
 * @method \Http\Promise\Promise modifyExpressConnectRouterAsync($arguments = [])
 * @method \Dew\Acs\Result describeExpressConnectRouterInterRegionTransitMode(array $arguments = [])
 * @method \Http\Promise\Promise describeExpressConnectRouterInterRegionTransitModeAsync($arguments = [])
 * @method \Dew\Acs\Result describeExpressConnectRouterAllowedPrefixHistory(array $arguments = [])
 * @method \Http\Promise\Promise describeExpressConnectRouterAllowedPrefixHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result describeExpressConnectRouter(array $arguments = [])
 * @method \Http\Promise\Promise describeExpressConnectRouterAsync($arguments = [])
 * @method \Dew\Acs\Result forceDeleteExpressConnectRouter(array $arguments = [])
 * @method \Http\Promise\Promise forceDeleteExpressConnectRouterAsync($arguments = [])
 * @method \Dew\Acs\Result createFlowLog(array $arguments = [])
 * @method \Http\Promise\Promise createFlowLogAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFlowlog(array $arguments = [])
 * @method \Http\Promise\Promise deleteFlowlogAsync($arguments = [])
 * @method \Dew\Acs\Result modifyFlowLogAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyFlowLogAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result describeFlowLogs(array $arguments = [])
 * @method \Http\Promise\Promise describeFlowLogsAsync($arguments = [])
 * @method \Dew\Acs\Result deactivateFlowLog(array $arguments = [])
 * @method \Http\Promise\Promise deactivateFlowLogAsync($arguments = [])
 * @method \Dew\Acs\Result activateFlowLog(array $arguments = [])
 * @method \Http\Promise\Promise activateFlowLogAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 */
final class ExpressConnectRouterClient extends AcsClient
{
    //
}
