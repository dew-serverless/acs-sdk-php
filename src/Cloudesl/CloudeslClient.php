<?php

declare(strict_types=1);

namespace Dew\Acs\Cloudesl;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result bindEslDevice(array $arguments = [])
 * @method \Http\Promise\Promise bindEslDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result unbindEslDevice(array $arguments = [])
 * @method \Http\Promise\Promise unbindEslDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result updateEslDeviceLight(array $arguments = [])
 * @method \Http\Promise\Promise updateEslDeviceLightAsync($arguments = [])
 * @method \Dew\Acs\Result describeBinders(array $arguments = [])
 * @method \Http\Promise\Promise describeBindersAsync($arguments = [])
 * @method \Dew\Acs\Result describeEslDevice(array $arguments = [])
 * @method \Http\Promise\Promise describeEslDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result describeEslDevices(array $arguments = [])
 * @method \Http\Promise\Promise describeEslDevicesAsync($arguments = [])
 * @method \Dew\Acs\Result createStore(array $arguments = [])
 * @method \Http\Promise\Promise createStoreAsync($arguments = [])
 * @method \Dew\Acs\Result deleteStore(array $arguments = [])
 * @method \Http\Promise\Promise deleteStoreAsync($arguments = [])
 * @method \Dew\Acs\Result updateStore(array $arguments = [])
 * @method \Http\Promise\Promise updateStoreAsync($arguments = [])
 * @method \Dew\Acs\Result updateStoreConfig(array $arguments = [])
 * @method \Http\Promise\Promise updateStoreConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeStores(array $arguments = [])
 * @method \Http\Promise\Promise describeStoresAsync($arguments = [])
 * @method \Dew\Acs\Result describeStoreConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeStoreConfigAsync($arguments = [])
 * @method \Dew\Acs\Result deleteItem(array $arguments = [])
 * @method \Http\Promise\Promise deleteItemAsync($arguments = [])
 * @method \Dew\Acs\Result batchInsertItems(array $arguments = [])
 * @method \Http\Promise\Promise batchInsertItemsAsync($arguments = [])
 * @method \Dew\Acs\Result describeItems(array $arguments = [])
 * @method \Http\Promise\Promise describeItemsAsync($arguments = [])
 * @method \Dew\Acs\Result addUser(array $arguments = [])
 * @method \Http\Promise\Promise addUserAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUser(array $arguments = [])
 * @method \Http\Promise\Promise deleteUserAsync($arguments = [])
 * @method \Dew\Acs\Result assignUser(array $arguments = [])
 * @method \Http\Promise\Promise assignUserAsync($arguments = [])
 * @method \Dew\Acs\Result unassignUser(array $arguments = [])
 * @method \Http\Promise\Promise unassignUserAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserLog(array $arguments = [])
 * @method \Http\Promise\Promise describeUserLogAsync($arguments = [])
 * @method \Dew\Acs\Result describeUsers(array $arguments = [])
 * @method \Http\Promise\Promise describeUsersAsync($arguments = [])
 * @method \Dew\Acs\Result getUser(array $arguments = [])
 * @method \Http\Promise\Promise getUserAsync($arguments = [])
 * @method \Dew\Acs\Result addApDevice(array $arguments = [])
 * @method \Http\Promise\Promise addApDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteApDevice(array $arguments = [])
 * @method \Http\Promise\Promise deleteApDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result activateApDevice(array $arguments = [])
 * @method \Http\Promise\Promise activateApDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result describeApDevices(array $arguments = [])
 * @method \Http\Promise\Promise describeApDevicesAsync($arguments = [])
 * @method \Dew\Acs\Result applyCompanyTemplateVersionToStores(array $arguments = [])
 * @method \Http\Promise\Promise applyCompanyTemplateVersionToStoresAsync($arguments = [])
 * @method \Dew\Acs\Result describeStoreByTemplateVersion(array $arguments = [])
 * @method \Http\Promise\Promise describeStoreByTemplateVersionAsync($arguments = [])
 * @method \Dew\Acs\Result describeCompanyTemplateVersions(array $arguments = [])
 * @method \Http\Promise\Promise describeCompanyTemplateVersionsAsync($arguments = [])
 * @method \Dew\Acs\Result describeEslModelByTemplateVersion(array $arguments = [])
 * @method \Http\Promise\Promise describeEslModelByTemplateVersionAsync($arguments = [])
 * @method \Dew\Acs\Result describeTemplateByModel(array $arguments = [])
 * @method \Http\Promise\Promise describeTemplateByModelAsync($arguments = [])
 * @method \Dew\Acs\Result describeAvailableEslModels(array $arguments = [])
 * @method \Http\Promise\Promise describeAvailableEslModelsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCompanyTemplate(array $arguments = [])
 * @method \Http\Promise\Promise deleteCompanyTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result addCompanyTemplate(array $arguments = [])
 * @method \Http\Promise\Promise addCompanyTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result syncAddMaterial(array $arguments = [])
 * @method \Http\Promise\Promise syncAddMaterialAsync($arguments = [])
 * @method \Dew\Acs\Result queryTemplateListByGroupId(array $arguments = [])
 * @method \Http\Promise\Promise queryTemplateListByGroupIdAsync($arguments = [])
 */
final class CloudeslClient extends AcsClient
{
    //
}
