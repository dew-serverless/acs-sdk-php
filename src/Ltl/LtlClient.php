<?php

declare(strict_types=1);

namespace Dew\Acs\Ltl;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createMember(array $arguments = [])
 * @method \Http\Promise\Promise createMemberAsync($arguments = [])
 * @method \Dew\Acs\Result lockMember(array $arguments = [])
 * @method \Http\Promise\Promise lockMemberAsync($arguments = [])
 * @method \Dew\Acs\Result modifyMember(array $arguments = [])
 * @method \Http\Promise\Promise modifyMemberAsync($arguments = [])
 * @method \Dew\Acs\Result unLockMember(array $arguments = [])
 * @method \Http\Promise\Promise unLockMemberAsync($arguments = [])
 * @method \Dew\Acs\Result listMember(array $arguments = [])
 * @method \Http\Promise\Promise listMemberAsync($arguments = [])
 * @method \Dew\Acs\Result registerDeviceGroup(array $arguments = [])
 * @method \Http\Promise\Promise registerDeviceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result authorizeDevice(array $arguments = [])
 * @method \Http\Promise\Promise authorizeDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result authorizeDeviceGroup(array $arguments = [])
 * @method \Http\Promise\Promise authorizeDeviceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result unAuthorizeDevice(array $arguments = [])
 * @method \Http\Promise\Promise unAuthorizeDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result unAuthorizeDeviceGroup(array $arguments = [])
 * @method \Http\Promise\Promise unAuthorizeDeviceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listDevice(array $arguments = [])
 * @method \Http\Promise\Promise listDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result listDeviceGroup(array $arguments = [])
 * @method \Http\Promise\Promise listDeviceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result createMPCoSPhase(array $arguments = [])
 * @method \Http\Promise\Promise createMPCoSPhaseAsync($arguments = [])
 * @method \Dew\Acs\Result createMPCoSPhaseGroup(array $arguments = [])
 * @method \Http\Promise\Promise createMPCoSPhaseGroupAsync($arguments = [])
 * @method \Dew\Acs\Result modifyMPCoSPhase(array $arguments = [])
 * @method \Http\Promise\Promise modifyMPCoSPhaseAsync($arguments = [])
 * @method \Dew\Acs\Result modifyMPCoSPhaseGroup(array $arguments = [])
 * @method \Http\Promise\Promise modifyMPCoSPhaseGroupAsync($arguments = [])
 * @method \Dew\Acs\Result updateMPCoSAuthorizedInfo(array $arguments = [])
 * @method \Http\Promise\Promise updateMPCoSAuthorizedInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeMPCoSAuthorizedInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeMPCoSAuthorizedInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeMPCoSPhaseInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeMPCoSPhaseInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeMPCoSResourceInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeMPCoSResourceInfoAsync($arguments = [])
 * @method \Dew\Acs\Result listMPCoSPhase(array $arguments = [])
 * @method \Http\Promise\Promise listMPCoSPhaseAsync($arguments = [])
 * @method \Dew\Acs\Result listMPCoSPhaseGroup(array $arguments = [])
 * @method \Http\Promise\Promise listMPCoSPhaseGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listMPCoSPhaseHistory(array $arguments = [])
 * @method \Http\Promise\Promise listMPCoSPhaseHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result applyDataModelConfigInfo(array $arguments = [])
 * @method \Http\Promise\Promise applyDataModelConfigInfoAsync($arguments = [])
 * @method \Dew\Acs\Result attachData(array $arguments = [])
 * @method \Http\Promise\Promise attachDataAsync($arguments = [])
 * @method \Dew\Acs\Result attachDataWithSignature(array $arguments = [])
 * @method \Http\Promise\Promise attachDataWithSignatureAsync($arguments = [])
 * @method \Dew\Acs\Result setData(array $arguments = [])
 * @method \Http\Promise\Promise setDataAsync($arguments = [])
 * @method \Dew\Acs\Result setDataWithSignature(array $arguments = [])
 * @method \Http\Promise\Promise setDataWithSignatureAsync($arguments = [])
 * @method \Dew\Acs\Result batchUploadMPCoSPhaseDigestInfo(array $arguments = [])
 * @method \Http\Promise\Promise batchUploadMPCoSPhaseDigestInfoAsync($arguments = [])
 * @method \Dew\Acs\Result batchUploadMPCoSPhaseDigestInfoByDevice(array $arguments = [])
 * @method \Http\Promise\Promise batchUploadMPCoSPhaseDigestInfoByDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result batchUploadMPCoSPhaseTextInfo(array $arguments = [])
 * @method \Http\Promise\Promise batchUploadMPCoSPhaseTextInfoAsync($arguments = [])
 * @method \Dew\Acs\Result batchUploadMPCoSPhaseTextInfoByDevice(array $arguments = [])
 * @method \Http\Promise\Promise batchUploadMPCoSPhaseTextInfoByDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result uploadMPCoSPhaseDigestInfo(array $arguments = [])
 * @method \Http\Promise\Promise uploadMPCoSPhaseDigestInfoAsync($arguments = [])
 * @method \Dew\Acs\Result uploadMPCoSPhaseDigestInfoByDevice(array $arguments = [])
 * @method \Http\Promise\Promise uploadMPCoSPhaseDigestInfoByDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result uploadMPCoSPhaseTextInfo(array $arguments = [])
 * @method \Http\Promise\Promise uploadMPCoSPhaseTextInfoAsync($arguments = [])
 * @method \Dew\Acs\Result uploadMPCoSPhaseTextInfoByDevice(array $arguments = [])
 * @method \Http\Promise\Promise uploadMPCoSPhaseTextInfoByDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result describeCapacityInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeCapacityInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeMemberCapacityInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeMemberCapacityInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeResourceInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeResourceInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getBlockChainInfo(array $arguments = [])
 * @method \Http\Promise\Promise getBlockChainInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getData(array $arguments = [])
 * @method \Http\Promise\Promise getDataAsync($arguments = [])
 * @method \Dew\Acs\Result getDataModelConfigInfo(array $arguments = [])
 * @method \Http\Promise\Promise getDataModelConfigInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getHistoryDataCount(array $arguments = [])
 * @method \Http\Promise\Promise getHistoryDataCountAsync($arguments = [])
 * @method \Dew\Acs\Result getHistoryDataList(array $arguments = [])
 * @method \Http\Promise\Promise getHistoryDataListAsync($arguments = [])
 * @method \Dew\Acs\Result listDependentDataModels(array $arguments = [])
 * @method \Http\Promise\Promise listDependentDataModelsAsync($arguments = [])
 * @method \Dew\Acs\Result listMultiPartyCollaborationChain(array $arguments = [])
 * @method \Http\Promise\Promise listMultiPartyCollaborationChainAsync($arguments = [])
 * @method \Dew\Acs\Result listProofChain(array $arguments = [])
 * @method \Http\Promise\Promise listProofChainAsync($arguments = [])
 * @method \Dew\Acs\Result listPSMemberDataTypeCode(array $arguments = [])
 * @method \Http\Promise\Promise listPSMemberDataTypeCodeAsync($arguments = [])
 */
final class LtlClient extends AcsClient
{
    //
}
