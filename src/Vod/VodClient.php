<?php

declare(strict_types=1);

namespace Dew\Acs\Vod;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createUploadVideo(array $arguments = [])
 * @method \Http\Promise\Promise createUploadVideoAsync($arguments = [])
 * @method \Dew\Acs\Result refreshUploadVideo(array $arguments = [])
 * @method \Http\Promise\Promise refreshUploadVideoAsync($arguments = [])
 * @method \Dew\Acs\Result createUploadImage(array $arguments = [])
 * @method \Http\Promise\Promise createUploadImageAsync($arguments = [])
 * @method \Dew\Acs\Result createUploadAttachedMedia(array $arguments = [])
 * @method \Http\Promise\Promise createUploadAttachedMediaAsync($arguments = [])
 * @method \Dew\Acs\Result uploadMediaByURL(array $arguments = [])
 * @method \Http\Promise\Promise uploadMediaByURLAsync($arguments = [])
 * @method \Dew\Acs\Result getURLUploadInfos(array $arguments = [])
 * @method \Http\Promise\Promise getURLUploadInfosAsync($arguments = [])
 * @method \Dew\Acs\Result cancelUrlUploadJobs(array $arguments = [])
 * @method \Http\Promise\Promise cancelUrlUploadJobsAsync($arguments = [])
 * @method \Dew\Acs\Result uploadStreamByURL(array $arguments = [])
 * @method \Http\Promise\Promise uploadStreamByURLAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMultipartUpload(array $arguments = [])
 * @method \Http\Promise\Promise deleteMultipartUploadAsync($arguments = [])
 * @method \Dew\Acs\Result getUploadDetails(array $arguments = [])
 * @method \Http\Promise\Promise getUploadDetailsAsync($arguments = [])
 * @method \Dew\Acs\Result registerMedia(array $arguments = [])
 * @method \Http\Promise\Promise registerMediaAsync($arguments = [])
 * @method \Dew\Acs\Result getPlayInfo(array $arguments = [])
 * @method \Http\Promise\Promise getPlayInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getVideoPlayAuth(array $arguments = [])
 * @method \Http\Promise\Promise getVideoPlayAuthAsync($arguments = [])
 * @method \Dew\Acs\Result searchMedia(array $arguments = [])
 * @method \Http\Promise\Promise searchMediaAsync($arguments = [])
 * @method \Dew\Acs\Result updateMediaStorageClass(array $arguments = [])
 * @method \Http\Promise\Promise updateMediaStorageClassAsync($arguments = [])
 * @method \Dew\Acs\Result restoreMedia(array $arguments = [])
 * @method \Http\Promise\Promise restoreMediaAsync($arguments = [])
 * @method \Dew\Acs\Result addCategory(array $arguments = [])
 * @method \Http\Promise\Promise addCategoryAsync($arguments = [])
 * @method \Dew\Acs\Result updateCategory(array $arguments = [])
 * @method \Http\Promise\Promise updateCategoryAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCategory(array $arguments = [])
 * @method \Http\Promise\Promise deleteCategoryAsync($arguments = [])
 * @method \Dew\Acs\Result getCategories(array $arguments = [])
 * @method \Http\Promise\Promise getCategoriesAsync($arguments = [])
 * @method \Dew\Acs\Result getVideoInfo(array $arguments = [])
 * @method \Http\Promise\Promise getVideoInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getVideoInfos(array $arguments = [])
 * @method \Http\Promise\Promise getVideoInfosAsync($arguments = [])
 * @method \Dew\Acs\Result getVideoList(array $arguments = [])
 * @method \Http\Promise\Promise getVideoListAsync($arguments = [])
 * @method \Dew\Acs\Result getMezzanineInfo(array $arguments = [])
 * @method \Http\Promise\Promise getMezzanineInfoAsync($arguments = [])
 * @method \Dew\Acs\Result updateVideoInfo(array $arguments = [])
 * @method \Http\Promise\Promise updateVideoInfoAsync($arguments = [])
 * @method \Dew\Acs\Result updateVideoInfos(array $arguments = [])
 * @method \Http\Promise\Promise updateVideoInfosAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMezzanines(array $arguments = [])
 * @method \Http\Promise\Promise deleteMezzaninesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteStream(array $arguments = [])
 * @method \Http\Promise\Promise deleteStreamAsync($arguments = [])
 * @method \Dew\Acs\Result deleteVideo(array $arguments = [])
 * @method \Http\Promise\Promise deleteVideoAsync($arguments = [])
 * @method \Dew\Acs\Result getAttachedMediaInfo(array $arguments = [])
 * @method \Http\Promise\Promise getAttachedMediaInfoAsync($arguments = [])
 * @method \Dew\Acs\Result updateAttachedMediaInfos(array $arguments = [])
 * @method \Http\Promise\Promise updateAttachedMediaInfosAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAttachedMedia(array $arguments = [])
 * @method \Http\Promise\Promise deleteAttachedMediaAsync($arguments = [])
 * @method \Dew\Acs\Result getImageInfo(array $arguments = [])
 * @method \Http\Promise\Promise getImageInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getImageInfos(array $arguments = [])
 * @method \Http\Promise\Promise getImageInfosAsync($arguments = [])
 * @method \Dew\Acs\Result updateImageInfos(array $arguments = [])
 * @method \Http\Promise\Promise updateImageInfosAsync($arguments = [])
 * @method \Dew\Acs\Result listSnapshots(array $arguments = [])
 * @method \Http\Promise\Promise listSnapshotsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteImage(array $arguments = [])
 * @method \Http\Promise\Promise deleteImageAsync($arguments = [])
 * @method \Dew\Acs\Result listDynamicImage(array $arguments = [])
 * @method \Http\Promise\Promise listDynamicImageAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDynamicImage(array $arguments = [])
 * @method \Http\Promise\Promise deleteDynamicImageAsync($arguments = [])
 * @method \Dew\Acs\Result listJobInfo(array $arguments = [])
 * @method \Http\Promise\Promise listJobInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getJobDetail(array $arguments = [])
 * @method \Http\Promise\Promise getJobDetailAsync($arguments = [])
 * @method \Dew\Acs\Result submitTranscodeJobs(array $arguments = [])
 * @method \Http\Promise\Promise submitTranscodeJobsAsync($arguments = [])
 * @method \Dew\Acs\Result submitSnapshotJob(array $arguments = [])
 * @method \Http\Promise\Promise submitSnapshotJobAsync($arguments = [])
 * @method \Dew\Acs\Result submitPreprocessJobs(array $arguments = [])
 * @method \Http\Promise\Promise submitPreprocessJobsAsync($arguments = [])
 * @method \Dew\Acs\Result submitDynamicImageJob(array $arguments = [])
 * @method \Http\Promise\Promise submitDynamicImageJobAsync($arguments = [])
 * @method \Dew\Acs\Result submitWorkflowJob(array $arguments = [])
 * @method \Http\Promise\Promise submitWorkflowJobAsync($arguments = [])
 * @method \Dew\Acs\Result addTranscodeTemplateGroup(array $arguments = [])
 * @method \Http\Promise\Promise addTranscodeTemplateGroupAsync($arguments = [])
 * @method \Dew\Acs\Result updateTranscodeTemplateGroup(array $arguments = [])
 * @method \Http\Promise\Promise updateTranscodeTemplateGroupAsync($arguments = [])
 * @method \Dew\Acs\Result setDefaultTranscodeTemplateGroup(array $arguments = [])
 * @method \Http\Promise\Promise setDefaultTranscodeTemplateGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listTranscodeTemplateGroup(array $arguments = [])
 * @method \Http\Promise\Promise listTranscodeTemplateGroupAsync($arguments = [])
 * @method \Dew\Acs\Result getTranscodeTemplateGroup(array $arguments = [])
 * @method \Http\Promise\Promise getTranscodeTemplateGroupAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTranscodeTemplateGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteTranscodeTemplateGroupAsync($arguments = [])
 * @method \Dew\Acs\Result addVodTemplate(array $arguments = [])
 * @method \Http\Promise\Promise addVodTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result updateVodTemplate(array $arguments = [])
 * @method \Http\Promise\Promise updateVodTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result getVodTemplate(array $arguments = [])
 * @method \Http\Promise\Promise getVodTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result listVodTemplate(array $arguments = [])
 * @method \Http\Promise\Promise listVodTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result deleteVodTemplate(array $arguments = [])
 * @method \Http\Promise\Promise deleteVodTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result addWatermark(array $arguments = [])
 * @method \Http\Promise\Promise addWatermarkAsync($arguments = [])
 * @method \Dew\Acs\Result updateWatermark(array $arguments = [])
 * @method \Http\Promise\Promise updateWatermarkAsync($arguments = [])
 * @method \Dew\Acs\Result deleteWatermark(array $arguments = [])
 * @method \Http\Promise\Promise deleteWatermarkAsync($arguments = [])
 * @method \Dew\Acs\Result setDefaultWatermark(array $arguments = [])
 * @method \Http\Promise\Promise setDefaultWatermarkAsync($arguments = [])
 * @method \Dew\Acs\Result getWatermark(array $arguments = [])
 * @method \Http\Promise\Promise getWatermarkAsync($arguments = [])
 * @method \Dew\Acs\Result listWatermark(array $arguments = [])
 * @method \Http\Promise\Promise listWatermarkAsync($arguments = [])
 * @method \Dew\Acs\Result getTranscodeSummary(array $arguments = [])
 * @method \Http\Promise\Promise getTranscodeSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result listTranscodeTask(array $arguments = [])
 * @method \Http\Promise\Promise listTranscodeTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getTranscodeTask(array $arguments = [])
 * @method \Http\Promise\Promise getTranscodeTaskAsync($arguments = [])
 * @method \Dew\Acs\Result produceEditingProjectVideo(array $arguments = [])
 * @method \Http\Promise\Promise produceEditingProjectVideoAsync($arguments = [])
 * @method \Dew\Acs\Result addEditingProject(array $arguments = [])
 * @method \Http\Promise\Promise addEditingProjectAsync($arguments = [])
 * @method \Dew\Acs\Result updateEditingProject(array $arguments = [])
 * @method \Http\Promise\Promise updateEditingProjectAsync($arguments = [])
 * @method \Dew\Acs\Result deleteEditingProject(array $arguments = [])
 * @method \Http\Promise\Promise deleteEditingProjectAsync($arguments = [])
 * @method \Dew\Acs\Result setEditingProjectMaterials(array $arguments = [])
 * @method \Http\Promise\Promise setEditingProjectMaterialsAsync($arguments = [])
 * @method \Dew\Acs\Result getEditingProject(array $arguments = [])
 * @method \Http\Promise\Promise getEditingProjectAsync($arguments = [])
 * @method \Dew\Acs\Result getEditingProjectMaterials(array $arguments = [])
 * @method \Http\Promise\Promise getEditingProjectMaterialsAsync($arguments = [])
 * @method \Dew\Acs\Result searchEditingProject(array $arguments = [])
 * @method \Http\Promise\Promise searchEditingProjectAsync($arguments = [])
 * @method \Dew\Acs\Result addEditingProjectMaterials(array $arguments = [])
 * @method \Http\Promise\Promise addEditingProjectMaterialsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteEditingProjectMaterials(array $arguments = [])
 * @method \Http\Promise\Promise deleteEditingProjectMaterialsAsync($arguments = [])
 * @method \Dew\Acs\Result setAuditSecurityIp(array $arguments = [])
 * @method \Http\Promise\Promise setAuditSecurityIpAsync($arguments = [])
 * @method \Dew\Acs\Result listAuditSecurityIp(array $arguments = [])
 * @method \Http\Promise\Promise listAuditSecurityIpAsync($arguments = [])
 * @method \Dew\Acs\Result submitAIMediaAuditJob(array $arguments = [])
 * @method \Http\Promise\Promise submitAIMediaAuditJobAsync($arguments = [])
 * @method \Dew\Acs\Result submitAIImageAuditJob(array $arguments = [])
 * @method \Http\Promise\Promise submitAIImageAuditJobAsync($arguments = [])
 * @method \Dew\Acs\Result getAIMediaAuditJob(array $arguments = [])
 * @method \Http\Promise\Promise getAIMediaAuditJobAsync($arguments = [])
 * @method \Dew\Acs\Result getMediaAuditResult(array $arguments = [])
 * @method \Http\Promise\Promise getMediaAuditResultAsync($arguments = [])
 * @method \Dew\Acs\Result getMediaAuditResultDetail(array $arguments = [])
 * @method \Http\Promise\Promise getMediaAuditResultDetailAsync($arguments = [])
 * @method \Dew\Acs\Result getMediaAuditResultTimeline(array $arguments = [])
 * @method \Http\Promise\Promise getMediaAuditResultTimelineAsync($arguments = [])
 * @method \Dew\Acs\Result getMediaAuditAudioResultDetail(array $arguments = [])
 * @method \Http\Promise\Promise getMediaAuditAudioResultDetailAsync($arguments = [])
 * @method \Dew\Acs\Result createAudit(array $arguments = [])
 * @method \Http\Promise\Promise createAuditAsync($arguments = [])
 * @method \Dew\Acs\Result getAuditHistory(array $arguments = [])
 * @method \Http\Promise\Promise getAuditHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result addAITemplate(array $arguments = [])
 * @method \Http\Promise\Promise addAITemplateAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAITemplate(array $arguments = [])
 * @method \Http\Promise\Promise deleteAITemplateAsync($arguments = [])
 * @method \Dew\Acs\Result updateAITemplate(array $arguments = [])
 * @method \Http\Promise\Promise updateAITemplateAsync($arguments = [])
 * @method \Dew\Acs\Result setDefaultAITemplate(array $arguments = [])
 * @method \Http\Promise\Promise setDefaultAITemplateAsync($arguments = [])
 * @method \Dew\Acs\Result getAITemplate(array $arguments = [])
 * @method \Http\Promise\Promise getAITemplateAsync($arguments = [])
 * @method \Dew\Acs\Result listAITemplate(array $arguments = [])
 * @method \Http\Promise\Promise listAITemplateAsync($arguments = [])
 * @method \Dew\Acs\Result getDefaultAITemplate(array $arguments = [])
 * @method \Http\Promise\Promise getDefaultAITemplateAsync($arguments = [])
 * @method \Dew\Acs\Result listAIJob(array $arguments = [])
 * @method \Http\Promise\Promise listAIJobAsync($arguments = [])
 * @method \Dew\Acs\Result submitAIJob(array $arguments = [])
 * @method \Http\Promise\Promise submitAIJobAsync($arguments = [])
 * @method \Dew\Acs\Result getMediaDNAResult(array $arguments = [])
 * @method \Http\Promise\Promise getMediaDNAResultAsync($arguments = [])
 * @method \Dew\Acs\Result submitMediaDNADeleteJob(array $arguments = [])
 * @method \Http\Promise\Promise submitMediaDNADeleteJobAsync($arguments = [])
 * @method \Dew\Acs\Result getAIVideoTagResult(array $arguments = [])
 * @method \Http\Promise\Promise getAIVideoTagResultAsync($arguments = [])
 * @method \Dew\Acs\Result submitAIImageJob(array $arguments = [])
 * @method \Http\Promise\Promise submitAIImageJobAsync($arguments = [])
 * @method \Dew\Acs\Result getAIImageJobs(array $arguments = [])
 * @method \Http\Promise\Promise getAIImageJobsAsync($arguments = [])
 * @method \Dew\Acs\Result listAIImageInfo(array $arguments = [])
 * @method \Http\Promise\Promise listAIImageInfoAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAIImageInfos(array $arguments = [])
 * @method \Http\Promise\Promise deleteAIImageInfosAsync($arguments = [])
 * @method \Dew\Acs\Result listLiveRecordVideo(array $arguments = [])
 * @method \Http\Promise\Promise listLiveRecordVideoAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainBpsDataByLayer(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainBpsDataByLayerAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainQpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainQpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainReqHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainReqHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodRangeDataByLocateAndIspService(array $arguments = [])
 * @method \Http\Promise\Promise describeVodRangeDataByLocateAndIspServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainSrcTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainSrcTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainSrcBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainSrcBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainRealTimeTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainRealTimeTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainRealTimeBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainRealTimeBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainRealTimeHttpCodeData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainRealTimeHttpCodeDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainRealTimeQpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainRealTimeQpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainRealTimeReqHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainRealTimeReqHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainRealTimeByteHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainRealTimeByteHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainRealTimeDetailData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainRealTimeDetailDataAsync($arguments = [])
 * @method \Dew\Acs\Result addVodDomain(array $arguments = [])
 * @method \Http\Promise\Promise addVodDomainAsync($arguments = [])
 * @method \Dew\Acs\Result deleteVodDomain(array $arguments = [])
 * @method \Http\Promise\Promise deleteVodDomainAsync($arguments = [])
 * @method \Dew\Acs\Result updateVodDomain(array $arguments = [])
 * @method \Http\Promise\Promise updateVodDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodUserDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeVodUserDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainDetailAsync($arguments = [])
 * @method \Dew\Acs\Result batchStartVodDomain(array $arguments = [])
 * @method \Http\Promise\Promise batchStartVodDomainAsync($arguments = [])
 * @method \Dew\Acs\Result batchStopVodDomain(array $arguments = [])
 * @method \Http\Promise\Promise batchStopVodDomainAsync($arguments = [])
 * @method \Dew\Acs\Result verifyVodDomainOwner(array $arguments = [])
 * @method \Http\Promise\Promise verifyVodDomainOwnerAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodVerifyContent(array $arguments = [])
 * @method \Http\Promise\Promise describeVodVerifyContentAsync($arguments = [])
 * @method \Dew\Acs\Result deleteVodSpecificConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteVodSpecificConfigAsync($arguments = [])
 * @method \Dew\Acs\Result setVodDomainCertificate(array $arguments = [])
 * @method \Http\Promise\Promise setVodDomainCertificateAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainConfigs(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodCertificateList(array $arguments = [])
 * @method \Http\Promise\Promise describeVodCertificateListAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainCertificateInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainCertificateInfoAsync($arguments = [])
 * @method \Dew\Acs\Result batchSetVodDomainConfigs(array $arguments = [])
 * @method \Http\Promise\Promise batchSetVodDomainConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodRefreshTasks(array $arguments = [])
 * @method \Http\Promise\Promise describeVodRefreshTasksAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodRefreshQuota(array $arguments = [])
 * @method \Http\Promise\Promise describeVodRefreshQuotaAsync($arguments = [])
 * @method \Dew\Acs\Result preloadVodObjectCaches(array $arguments = [])
 * @method \Http\Promise\Promise preloadVodObjectCachesAsync($arguments = [])
 * @method \Dew\Acs\Result refreshVodObjectCaches(array $arguments = [])
 * @method \Http\Promise\Promise refreshVodObjectCachesAsync($arguments = [])
 * @method \Dew\Acs\Result refreshMediaPlayUrls(array $arguments = [])
 * @method \Http\Promise\Promise refreshMediaPlayUrlsAsync($arguments = [])
 * @method \Dew\Acs\Result getMediaRefreshJobs(array $arguments = [])
 * @method \Http\Promise\Promise getMediaRefreshJobsAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainLog(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainLogAsync($arguments = [])
 * @method \Dew\Acs\Result generateKMSDataKey(array $arguments = [])
 * @method \Http\Promise\Promise generateKMSDataKeyAsync($arguments = [])
 * @method \Dew\Acs\Result decryptKMSDataKey(array $arguments = [])
 * @method \Http\Promise\Promise decryptKMSDataKeyAsync($arguments = [])
 * @method \Dew\Acs\Result submitDigitalWatermarkExtractJob(array $arguments = [])
 * @method \Http\Promise\Promise submitDigitalWatermarkExtractJobAsync($arguments = [])
 * @method \Dew\Acs\Result getDigitalWatermarkExtractResult(array $arguments = [])
 * @method \Http\Promise\Promise getDigitalWatermarkExtractResultAsync($arguments = [])
 * @method \Dew\Acs\Result generateDownloadSecretKey(array $arguments = [])
 * @method \Http\Promise\Promise generateDownloadSecretKeyAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainUsageData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainUsageDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodStorageData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodStorageDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodTranscodeData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodTranscodeDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodAIData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodAIDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodTieringStorageData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodTieringStorageDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodTieringStorageRetrievalData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodTieringStorageRetrievalDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodMediaPlayData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodMediaPlayDataAsync($arguments = [])
 * @method \Dew\Acs\Result describePlayTopVideos(array $arguments = [])
 * @method \Http\Promise\Promise describePlayTopVideosAsync($arguments = [])
 * @method \Dew\Acs\Result describePlayUserAvg(array $arguments = [])
 * @method \Http\Promise\Promise describePlayUserAvgAsync($arguments = [])
 * @method \Dew\Acs\Result describePlayUserTotal(array $arguments = [])
 * @method \Http\Promise\Promise describePlayUserTotalAsync($arguments = [])
 * @method \Dew\Acs\Result describePlayVideoStatis(array $arguments = [])
 * @method \Http\Promise\Promise describePlayVideoStatisAsync($arguments = [])
 * @method \Dew\Acs\Result createAppInfo(array $arguments = [])
 * @method \Http\Promise\Promise createAppInfoAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAppInfo(array $arguments = [])
 * @method \Http\Promise\Promise deleteAppInfoAsync($arguments = [])
 * @method \Dew\Acs\Result updateAppInfo(array $arguments = [])
 * @method \Http\Promise\Promise updateAppInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getAppInfos(array $arguments = [])
 * @method \Http\Promise\Promise getAppInfosAsync($arguments = [])
 * @method \Dew\Acs\Result listAppInfo(array $arguments = [])
 * @method \Http\Promise\Promise listAppInfoAsync($arguments = [])
 * @method \Dew\Acs\Result addVodStorageForApp(array $arguments = [])
 * @method \Http\Promise\Promise addVodStorageForAppAsync($arguments = [])
 * @method \Dew\Acs\Result attachAppPolicyToIdentity(array $arguments = [])
 * @method \Http\Promise\Promise attachAppPolicyToIdentityAsync($arguments = [])
 * @method \Dew\Acs\Result detachAppPolicyFromIdentity(array $arguments = [])
 * @method \Http\Promise\Promise detachAppPolicyFromIdentityAsync($arguments = [])
 * @method \Dew\Acs\Result listAppPoliciesForIdentity(array $arguments = [])
 * @method \Http\Promise\Promise listAppPoliciesForIdentityAsync($arguments = [])
 * @method \Dew\Acs\Result moveAppResource(array $arguments = [])
 * @method \Http\Promise\Promise moveAppResourceAsync($arguments = [])
 * @method \Dew\Acs\Result setCrossdomainContent(array $arguments = [])
 * @method \Http\Promise\Promise setCrossdomainContentAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMessageCallback(array $arguments = [])
 * @method \Http\Promise\Promise deleteMessageCallbackAsync($arguments = [])
 * @method \Dew\Acs\Result setMessageCallback(array $arguments = [])
 * @method \Http\Promise\Promise setMessageCallbackAsync($arguments = [])
 * @method \Dew\Acs\Result getMessageCallback(array $arguments = [])
 * @method \Http\Promise\Promise getMessageCallbackAsync($arguments = [])
 * @method \Dew\Acs\Result changeResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise changeResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodDomainMax95BpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeVodDomainMax95BpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeVodSSLCertificateList(array $arguments = [])
 * @method \Http\Promise\Promise describeVodSSLCertificateListAsync($arguments = [])
 * @method \Dew\Acs\Result setVodDomainSSLCertificate(array $arguments = [])
 * @method \Http\Promise\Promise setVodDomainSSLCertificateAsync($arguments = [])
 */
final class VodClient extends AcsClient
{
    //
}
