<?php

declare(strict_types=1);

namespace Dew\Acs\Cassandra;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createCluster(array $arguments = [])
 * @method \Http\Promise\Promise createClusterAsync($arguments = [])
 * @method \Dew\Acs\Result createDataCenter(array $arguments = [])
 * @method \Http\Promise\Promise createDataCenterAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCluster(array $arguments = [])
 * @method \Http\Promise\Promise deleteClusterAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCluster(array $arguments = [])
 * @method \Http\Promise\Promise modifyClusterAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceMaintainTime(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceMaintainTimeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceType(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceTypeAsync($arguments = [])
 * @method \Dew\Acs\Result describeCluster(array $arguments = [])
 * @method \Http\Promise\Promise describeClusterAsync($arguments = [])
 * @method \Dew\Acs\Result describeClusters(array $arguments = [])
 * @method \Http\Promise\Promise describeClustersAsync($arguments = [])
 * @method \Dew\Acs\Result describeClusterStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeClusterStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeDeletedClusters(array $arguments = [])
 * @method \Http\Promise\Promise describeDeletedClustersAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataCenter(array $arguments = [])
 * @method \Http\Promise\Promise describeDataCenterAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceType(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceTypeAsync($arguments = [])
 * @method \Dew\Acs\Result getCmsUrl(array $arguments = [])
 * @method \Http\Promise\Promise getCmsUrlAsync($arguments = [])
 * @method \Dew\Acs\Result purgeCluster(array $arguments = [])
 * @method \Http\Promise\Promise purgeClusterAsync($arguments = [])
 * @method \Dew\Acs\Result rebootCluster(array $arguments = [])
 * @method \Http\Promise\Promise rebootClusterAsync($arguments = [])
 * @method \Dew\Acs\Result resizeDiskSize(array $arguments = [])
 * @method \Http\Promise\Promise resizeDiskSizeAsync($arguments = [])
 * @method \Dew\Acs\Result resizeNodeCount(array $arguments = [])
 * @method \Http\Promise\Promise resizeNodeCountAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeClusterVersion(array $arguments = [])
 * @method \Http\Promise\Promise upgradeClusterVersionAsync($arguments = [])
 * @method \Dew\Acs\Result modifyIpWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise modifyIpWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result modifyIpWhitelistGroup(array $arguments = [])
 * @method \Http\Promise\Promise modifyIpWhitelistGroupAsync($arguments = [])
 * @method \Dew\Acs\Result modifySecurityGroups(array $arguments = [])
 * @method \Http\Promise\Promise modifySecurityGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result describeIpWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise describeIpWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result describeIpWhitelistGroups(array $arguments = [])
 * @method \Http\Promise\Promise describeIpWhitelistGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSecurityGroups(array $arguments = [])
 * @method \Http\Promise\Promise describeSecurityGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAccountPassword(array $arguments = [])
 * @method \Http\Promise\Promise modifyAccountPasswordAsync($arguments = [])
 * @method \Dew\Acs\Result describeAccounts(array $arguments = [])
 * @method \Http\Promise\Promise describeAccountsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDataCenter(array $arguments = [])
 * @method \Http\Promise\Promise deleteDataCenterAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDataCenter(array $arguments = [])
 * @method \Http\Promise\Promise modifyDataCenterAsync($arguments = [])
 * @method \Dew\Acs\Result describeRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataCenters(array $arguments = [])
 * @method \Http\Promise\Promise describeDataCentersAsync($arguments = [])
 * @method \Dew\Acs\Result createBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise createBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result deleteBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise deleteBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result modifyBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise modifyBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackup(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupPlan(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupPlanAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackups(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupsAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupPlans(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupPlansAsync($arguments = [])
 * @method \Dew\Acs\Result describeContactPoints(array $arguments = [])
 * @method \Http\Promise\Promise describeContactPointsAsync($arguments = [])
 * @method \Dew\Acs\Result allocatePublicContactPoints(array $arguments = [])
 * @method \Http\Promise\Promise allocatePublicContactPointsAsync($arguments = [])
 * @method \Dew\Acs\Result releasePublicContactPoints(array $arguments = [])
 * @method \Http\Promise\Promise releasePublicContactPointsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteNodeToolExecutionHistory(array $arguments = [])
 * @method \Http\Promise\Promise deleteNodeToolExecutionHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result describeNodeToolExecutionHistory(array $arguments = [])
 * @method \Http\Promise\Promise describeNodeToolExecutionHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result describeNodeToolExecutionHistories(array $arguments = [])
 * @method \Http\Promise\Promise describeNodeToolExecutionHistoriesAsync($arguments = [])
 * @method \Dew\Acs\Result executeNodeTool(array $arguments = [])
 * @method \Http\Promise\Promise executeNodeToolAsync($arguments = [])
 * @method \Dew\Acs\Result modifyParameter(array $arguments = [])
 * @method \Http\Promise\Promise modifyParameterAsync($arguments = [])
 * @method \Dew\Acs\Result describeParameterModificationHistories(array $arguments = [])
 * @method \Http\Promise\Promise describeParameterModificationHistoriesAsync($arguments = [])
 * @method \Dew\Acs\Result describeParameters(array $arguments = [])
 * @method \Http\Promise\Promise describeParametersAsync($arguments = [])
 * @method \Dew\Acs\Result describeClusterDashboard(array $arguments = [])
 * @method \Http\Promise\Promise describeClusterDashboardAsync($arguments = [])
 * @method \Dew\Acs\Result listTagResources(array $arguments = [])
 * @method \Http\Promise\Promise listTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result listTags(array $arguments = [])
 * @method \Http\Promise\Promise listTagsAsync($arguments = [])
 * @method \Dew\Acs\Result unTagResources(array $arguments = [])
 * @method \Http\Promise\Promise unTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result moveResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise moveResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 */
final class CassandraClient extends AcsClient
{
    //
}
