<?php

declare(strict_types=1);

namespace Dew\Acs\EdsUser;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result initTenantAlias(array $arguments = [])
 * @method \Http\Promise\Promise initTenantAliasAsync($arguments = [])
 * @method \Dew\Acs\Result createUsers(array $arguments = [])
 * @method \Http\Promise\Promise createUsersAsync($arguments = [])
 * @method \Dew\Acs\Result removeUsers(array $arguments = [])
 * @method \Http\Promise\Promise removeUsersAsync($arguments = [])
 * @method \Dew\Acs\Result modifyUser(array $arguments = [])
 * @method \Http\Promise\Promise modifyUserAsync($arguments = [])
 * @method \Dew\Acs\Result resetUserPassword(array $arguments = [])
 * @method \Http\Promise\Promise resetUserPasswordAsync($arguments = [])
 * @method \Dew\Acs\Result lockUsers(array $arguments = [])
 * @method \Http\Promise\Promise lockUsersAsync($arguments = [])
 * @method \Dew\Acs\Result unlockUsers(array $arguments = [])
 * @method \Http\Promise\Promise unlockUsersAsync($arguments = [])
 * @method \Dew\Acs\Result describeUsers(array $arguments = [])
 * @method \Http\Promise\Promise describeUsersAsync($arguments = [])
 * @method \Dew\Acs\Result filterUsers(array $arguments = [])
 * @method \Http\Promise\Promise filterUsersAsync($arguments = [])
 * @method \Dew\Acs\Result getManagerInfoByAuthCode(array $arguments = [])
 * @method \Http\Promise\Promise getManagerInfoByAuthCodeAsync($arguments = [])
 * @method \Dew\Acs\Result batchSetDesktopManager(array $arguments = [])
 * @method \Http\Promise\Promise batchSetDesktopManagerAsync($arguments = [])
 * @method \Dew\Acs\Result createProperty(array $arguments = [])
 * @method \Http\Promise\Promise createPropertyAsync($arguments = [])
 * @method \Dew\Acs\Result removeProperty(array $arguments = [])
 * @method \Http\Promise\Promise removePropertyAsync($arguments = [])
 * @method \Dew\Acs\Result deleteUserPropertyValue(array $arguments = [])
 * @method \Http\Promise\Promise deleteUserPropertyValueAsync($arguments = [])
 * @method \Dew\Acs\Result updateProperty(array $arguments = [])
 * @method \Http\Promise\Promise updatePropertyAsync($arguments = [])
 * @method \Dew\Acs\Result setUserPropertyValue(array $arguments = [])
 * @method \Http\Promise\Promise setUserPropertyValueAsync($arguments = [])
 * @method \Dew\Acs\Result listProperty(array $arguments = [])
 * @method \Http\Promise\Promise listPropertyAsync($arguments = [])
 * @method \Dew\Acs\Result listPropertyValue(array $arguments = [])
 * @method \Http\Promise\Promise listPropertyValueAsync($arguments = [])
 * @method \Dew\Acs\Result checkUsedProperty(array $arguments = [])
 * @method \Http\Promise\Promise checkUsedPropertyAsync($arguments = [])
 * @method \Dew\Acs\Result checkUsedPropertyValue(array $arguments = [])
 * @method \Http\Promise\Promise checkUsedPropertyValueAsync($arguments = [])
 * @method \Dew\Acs\Result createOrg(array $arguments = [])
 * @method \Http\Promise\Promise createOrgAsync($arguments = [])
 * @method \Dew\Acs\Result describeOrgs(array $arguments = [])
 * @method \Http\Promise\Promise describeOrgsAsync($arguments = [])
 * @method \Dew\Acs\Result describeOrgByLayer(array $arguments = [])
 * @method \Http\Promise\Promise describeOrgByLayerAsync($arguments = [])
 * @method \Dew\Acs\Result removeOrg(array $arguments = [])
 * @method \Http\Promise\Promise removeOrgAsync($arguments = [])
 * @method \Dew\Acs\Result moveOrg(array $arguments = [])
 * @method \Http\Promise\Promise moveOrgAsync($arguments = [])
 * @method \Dew\Acs\Result modifyOrg(array $arguments = [])
 * @method \Http\Promise\Promise modifyOrgAsync($arguments = [])
 * @method \Dew\Acs\Result removeMfaDevice(array $arguments = [])
 * @method \Http\Promise\Promise removeMfaDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result lockMfaDevice(array $arguments = [])
 * @method \Http\Promise\Promise lockMfaDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result unlockMfaDevice(array $arguments = [])
 * @method \Http\Promise\Promise unlockMfaDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result describeMfaDevices(array $arguments = [])
 * @method \Http\Promise\Promise describeMfaDevicesAsync($arguments = [])
 * @method \Dew\Acs\Result createResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise createResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result deleteResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result describeResourceGroups(array $arguments = [])
 * @method \Http\Promise\Promise describeResourceGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result syncAllEduInfo(array $arguments = [])
 * @method \Http\Promise\Promise syncAllEduInfoAsync($arguments = [])
 * @method \Dew\Acs\Result querySyncStatusByAliUid(array $arguments = [])
 * @method \Http\Promise\Promise querySyncStatusByAliUidAsync($arguments = [])
 * @method \Dew\Acs\Result changeUserPassword(array $arguments = [])
 * @method \Http\Promise\Promise changeUserPasswordAsync($arguments = [])
 */
final class EdsUserClient extends AcsClient
{
    //
}
