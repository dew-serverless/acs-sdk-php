<?php

declare(strict_types=1);

namespace Dew\Acs\ViapiRegen;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createDataset(array $arguments = [])
 * @method \Http\Promise\Promise createDatasetAsync($arguments = [])
 * @method \Dew\Acs\Result createLabelset(array $arguments = [])
 * @method \Http\Promise\Promise createLabelsetAsync($arguments = [])
 * @method \Dew\Acs\Result createService(array $arguments = [])
 * @method \Http\Promise\Promise createServiceAsync($arguments = [])
 * @method \Dew\Acs\Result createTrainTask(array $arguments = [])
 * @method \Http\Promise\Promise createTrainTaskAsync($arguments = [])
 * @method \Dew\Acs\Result createWorkspace(array $arguments = [])
 * @method \Http\Promise\Promise createWorkspaceAsync($arguments = [])
 * @method \Dew\Acs\Result debugService(array $arguments = [])
 * @method \Http\Promise\Promise debugServiceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDataset(array $arguments = [])
 * @method \Http\Promise\Promise deleteDatasetAsync($arguments = [])
 * @method \Dew\Acs\Result deleteLabelset(array $arguments = [])
 * @method \Http\Promise\Promise deleteLabelsetAsync($arguments = [])
 * @method \Dew\Acs\Result deleteService(array $arguments = [])
 * @method \Http\Promise\Promise deleteServiceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTrainTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteTrainTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteWorkspace(array $arguments = [])
 * @method \Http\Promise\Promise deleteWorkspaceAsync($arguments = [])
 * @method \Dew\Acs\Result downloadLabelFile(array $arguments = [])
 * @method \Http\Promise\Promise downloadLabelFileAsync($arguments = [])
 * @method \Dew\Acs\Result getDataset(array $arguments = [])
 * @method \Http\Promise\Promise getDatasetAsync($arguments = [])
 * @method \Dew\Acs\Result getLabelDetail(array $arguments = [])
 * @method \Http\Promise\Promise getLabelDetailAsync($arguments = [])
 * @method \Dew\Acs\Result getLabelset(array $arguments = [])
 * @method \Http\Promise\Promise getLabelsetAsync($arguments = [])
 * @method \Dew\Acs\Result getService(array $arguments = [])
 * @method \Http\Promise\Promise getServiceAsync($arguments = [])
 * @method \Dew\Acs\Result getTrainModel(array $arguments = [])
 * @method \Http\Promise\Promise getTrainModelAsync($arguments = [])
 * @method \Dew\Acs\Result getTrainTask(array $arguments = [])
 * @method \Http\Promise\Promise getTrainTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getTrainTaskEstimatedTime(array $arguments = [])
 * @method \Http\Promise\Promise getTrainTaskEstimatedTimeAsync($arguments = [])
 * @method \Dew\Acs\Result getUploadPolicy(array $arguments = [])
 * @method \Http\Promise\Promise getUploadPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result getWorkspace(array $arguments = [])
 * @method \Http\Promise\Promise getWorkspaceAsync($arguments = [])
 * @method \Dew\Acs\Result listDatasetDatas(array $arguments = [])
 * @method \Http\Promise\Promise listDatasetDatasAsync($arguments = [])
 * @method \Dew\Acs\Result listDatasets(array $arguments = [])
 * @method \Http\Promise\Promise listDatasetsAsync($arguments = [])
 * @method \Dew\Acs\Result listLabelsetDatas(array $arguments = [])
 * @method \Http\Promise\Promise listLabelsetDatasAsync($arguments = [])
 * @method \Dew\Acs\Result listLabelsets(array $arguments = [])
 * @method \Http\Promise\Promise listLabelsetsAsync($arguments = [])
 * @method \Dew\Acs\Result listServices(array $arguments = [])
 * @method \Http\Promise\Promise listServicesAsync($arguments = [])
 * @method \Dew\Acs\Result listTrainTasks(array $arguments = [])
 * @method \Http\Promise\Promise listTrainTasksAsync($arguments = [])
 * @method \Dew\Acs\Result listWorkspaces(array $arguments = [])
 * @method \Http\Promise\Promise listWorkspacesAsync($arguments = [])
 * @method \Dew\Acs\Result setDatasetUserOssPath(array $arguments = [])
 * @method \Http\Promise\Promise setDatasetUserOssPathAsync($arguments = [])
 * @method \Dew\Acs\Result startService(array $arguments = [])
 * @method \Http\Promise\Promise startServiceAsync($arguments = [])
 * @method \Dew\Acs\Result startTrainTask(array $arguments = [])
 * @method \Http\Promise\Promise startTrainTaskAsync($arguments = [])
 * @method \Dew\Acs\Result stopService(array $arguments = [])
 * @method \Http\Promise\Promise stopServiceAsync($arguments = [])
 * @method \Dew\Acs\Result stopTrainTask(array $arguments = [])
 * @method \Http\Promise\Promise stopTrainTaskAsync($arguments = [])
 * @method \Dew\Acs\Result updateDataset(array $arguments = [])
 * @method \Http\Promise\Promise updateDatasetAsync($arguments = [])
 * @method \Dew\Acs\Result updateLabelset(array $arguments = [])
 * @method \Http\Promise\Promise updateLabelsetAsync($arguments = [])
 * @method \Dew\Acs\Result updateService(array $arguments = [])
 * @method \Http\Promise\Promise updateServiceAsync($arguments = [])
 * @method \Dew\Acs\Result updateTrainTask(array $arguments = [])
 * @method \Http\Promise\Promise updateTrainTaskAsync($arguments = [])
 * @method \Dew\Acs\Result updateWorkspace(array $arguments = [])
 * @method \Http\Promise\Promise updateWorkspaceAsync($arguments = [])
 * @method \Dew\Acs\Result createTagTask(array $arguments = [])
 * @method \Http\Promise\Promise createTagTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteLabelsetData(array $arguments = [])
 * @method \Http\Promise\Promise deleteLabelsetDataAsync($arguments = [])
 * @method \Dew\Acs\Result getDiffCountLabelsetAndDataset(array $arguments = [])
 * @method \Http\Promise\Promise getDiffCountLabelsetAndDatasetAsync($arguments = [])
 * @method \Dew\Acs\Result downloadFileNameList(array $arguments = [])
 * @method \Http\Promise\Promise downloadFileNameListAsync($arguments = [])
 * @method \Dew\Acs\Result customizeClassifyImage(array $arguments = [])
 * @method \Http\Promise\Promise customizeClassifyImageAsync($arguments = [])
 * @method \Dew\Acs\Result customizeDetectImage(array $arguments = [])
 * @method \Http\Promise\Promise customizeDetectImageAsync($arguments = [])
 * @method \Dew\Acs\Result customizeInstanceSegmentImage(array $arguments = [])
 * @method \Http\Promise\Promise customizeInstanceSegmentImageAsync($arguments = [])
 * @method \Dew\Acs\Result getServiceQps(array $arguments = [])
 * @method \Http\Promise\Promise getServiceQpsAsync($arguments = [])
 * @method \Dew\Acs\Result getServiceInvoke(array $arguments = [])
 * @method \Http\Promise\Promise getServiceInvokeAsync($arguments = [])
 * @method \Dew\Acs\Result downloadDataset(array $arguments = [])
 * @method \Http\Promise\Promise downloadDatasetAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDataReflowData(array $arguments = [])
 * @method \Http\Promise\Promise deleteDataReflowDataAsync($arguments = [])
 * @method \Dew\Acs\Result listDataReflowDatas(array $arguments = [])
 * @method \Http\Promise\Promise listDataReflowDatasAsync($arguments = [])
 * @method \Dew\Acs\Result disableDataReflow(array $arguments = [])
 * @method \Http\Promise\Promise disableDataReflowAsync($arguments = [])
 * @method \Dew\Acs\Result exportDataReflowDataList(array $arguments = [])
 * @method \Http\Promise\Promise exportDataReflowDataListAsync($arguments = [])
 * @method \Dew\Acs\Result enableDataReflow(array $arguments = [])
 * @method \Http\Promise\Promise enableDataReflowAsync($arguments = [])
 * @method \Dew\Acs\Result getUserInfo(array $arguments = [])
 * @method \Http\Promise\Promise getUserInfoAsync($arguments = [])
 * @method \Dew\Acs\Result checkDatasetOssBucketCORS(array $arguments = [])
 * @method \Http\Promise\Promise checkDatasetOssBucketCORSAsync($arguments = [])
 */
final class ViapiRegenClient extends AcsClient
{
    //
}
